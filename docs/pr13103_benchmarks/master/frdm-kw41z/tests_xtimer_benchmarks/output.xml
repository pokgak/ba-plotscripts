<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201112 09:53:20.746" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:53:21.320" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:53:21.329" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:53:24.456" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:53:21.319" endtime="20201112 09:53:24.458"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:53:24.463" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:53:24.460" endtime="20201112 09:53:24.464"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:21.317" endtime="20201112 09:53:24.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:24.468" endtime="20201112 09:53:24.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.466" endtime="20201112 09:53:24.653"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:24.667" endtime="20201112 09:53:24.694"></status>
</kw>
<msg timestamp="20201112 09:53:24.695" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['evel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': ...</msg>
<status status="PASS" starttime="20201112 09:53:24.665" endtime="20201112 09:53:24.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:24.698" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['evel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': ...</msg>
<status status="PASS" starttime="20201112 09:53:24.696" endtime="20201112 09:53:24.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:24.701" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:24.699" endtime="20201112 09:53:24.701"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:24.662" endtime="20201112 09:53:24.702"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:24.660" endtime="20201112 09:53:24.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.658" endtime="20201112 09:53:24.703"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:24.707" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:24.706" endtime="20201112 09:53:24.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.704" endtime="20201112 09:53:24.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.657" endtime="20201112 09:53:24.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.657" endtime="20201112 09:53:24.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:24.709" endtime="20201112 09:53:24.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.655" endtime="20201112 09:53:24.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:24.712" endtime="20201112 09:53:24.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.653" endtime="20201112 09:53:24.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:21.315" endtime="20201112 09:53:24.714"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:24.726" endtime="20201112 09:53:24.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.724" endtime="20201112 09:53:24.746"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:25.131" endtime="20201112 09:53:25.151"></status>
</kw>
<msg timestamp="20201112 09:53:25.152" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:25.129" endtime="20201112 09:53:25.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.154" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:25.153" endtime="20201112 09:53:25.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.158" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:25.156" endtime="20201112 09:53:25.158"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:25.127" endtime="20201112 09:53:25.159"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:25.124" endtime="20201112 09:53:25.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.752" endtime="20201112 09:53:25.159"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:25.163" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:25.163" endtime="20201112 09:53:25.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.160" endtime="20201112 09:53:25.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.751" endtime="20201112 09:53:25.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.750" endtime="20201112 09:53:25.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:25.165" endtime="20201112 09:53:25.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.748" endtime="20201112 09:53:25.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.746" endtime="20201112 09:53:25.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.722" endtime="20201112 09:53:25.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:25.182" endtime="20201112 09:53:25.198"></status>
</kw>
<msg timestamp="20201112 09:53:25.199" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:25.179" endtime="20201112 09:53:25.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.204" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:25.201" endtime="20201112 09:53:25.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:25.207" endtime="20201112 09:53:25.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.173" endtime="20201112 09:53:25.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.169" endtime="20201112 09:53:25.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.222" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 09:53:25.220" endtime="20201112 09:53:25.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.227" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 09:53:25.225" endtime="20201112 09:53:25.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.215" endtime="20201112 09:53:25.229"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:24.715" endtime="20201112 09:53:25.230" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:53:20.862" endtime="20201112 09:53:25.239"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.315" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:53:25.323" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:53:39.549" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:53:25.313" endtime="20201112 09:53:39.550"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.553" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:53:39.551" endtime="20201112 09:53:39.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.312" endtime="20201112 09:53:39.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:39.556" endtime="20201112 09:53:39.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.555" endtime="20201112 09:53:39.777"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.789" endtime="20201112 09:53:39.811"></status>
</kw>
<msg timestamp="20201112 09:53:39.811" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_x...</msg>
<status status="PASS" starttime="20201112 09:53:39.788" endtime="20201112 09:53:39.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.814" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_x...</msg>
<status status="PASS" starttime="20201112 09:53:39.812" endtime="20201112 09:53:39.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.817" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:39.815" endtime="20201112 09:53:39.818"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:39.785" endtime="20201112 09:53:39.818"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:39.783" endtime="20201112 09:53:39.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.782" endtime="20201112 09:53:39.819"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:39.823" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:39.822" endtime="20201112 09:53:39.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.820" endtime="20201112 09:53:39.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.781" endtime="20201112 09:53:39.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.780" endtime="20201112 09:53:39.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.825" endtime="20201112 09:53:39.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.779" endtime="20201112 09:53:39.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.828" endtime="20201112 09:53:39.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.777" endtime="20201112 09:53:39.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.310" endtime="20201112 09:53:39.830"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:39.841" endtime="20201112 09:53:39.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.839" endtime="20201112 09:53:39.861"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.875" endtime="20201112 09:53:39.896"></status>
</kw>
<msg timestamp="20201112 09:53:39.897" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:39.873" endtime="20201112 09:53:39.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.899" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:39.898" endtime="20201112 09:53:39.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.902" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:39.900" endtime="20201112 09:53:39.903"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:39.870" endtime="20201112 09:53:39.903"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:39.868" endtime="20201112 09:53:39.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.867" endtime="20201112 09:53:39.904"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:39.908" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:39.908" endtime="20201112 09:53:39.909"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.905" endtime="20201112 09:53:39.909"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.866" endtime="20201112 09:53:39.909"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.865" endtime="20201112 09:53:39.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.910" endtime="20201112 09:53:39.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.863" endtime="20201112 09:53:39.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.862" endtime="20201112 09:53:39.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.837" endtime="20201112 09:53:39.913"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 09:53:39.915" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.924" endtime="20201112 09:53:39.943"></status>
</kw>
<msg timestamp="20201112 09:53:39.944" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:39.922" endtime="20201112 09:53:39.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.947" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:39.945" endtime="20201112 09:53:39.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.948" endtime="20201112 09:53:39.949"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.920" endtime="20201112 09:53:39.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.918" endtime="20201112 09:53:39.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.957" endtime="20201112 09:53:40.245"></status>
</kw>
<msg timestamp="20201112 09:53:40.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077217569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077218042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:39.956" endtime="20201112 09:53:40.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077217569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077218042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:40.249" endtime="20201112 09:53:40.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.258" endtime="20201112 09:53:40.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.953" endtime="20201112 09:53:40.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.951" endtime="20201112 09:53:40.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.265" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:40.264" endtime="20201112 09:53:40.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.270" level="INFO">VALUE: [{'time': 0.077217569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077218042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.077227028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986000000002492e-06, 'source_diff': 8.986000000002492e-06}, {'time': 0.0772275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077234083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.582999999990569e-06, 'source_diff': 6.582999999990569e-06}, {'time': 0.077234569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.077241264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.077241736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077247625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.888999999995037e-06, 'source_diff': 5.888999999995037e-06}, {'time': 0.077248097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077253333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999991803e-06, 'source_diff': 5.235999999991803e-06}, {'time': 0.077253806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.077263722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916000000012581e-06, 'source_diff': 9.916000000012581e-06}, {'time': 0.077264208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.077272889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999996497e-06, 'source_diff': 8.680999999996497e-06}, {'time': 0.077273361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077277347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.077277833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.077288167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0334000000000731e-05, 'source_diff': 1.0334000000000731e-05}, {'time': 0.077288639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077296486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999991389e-06, 'source_diff': 7.846999999991389e-06}, {'time': 0.077296958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077305333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.375000000004906e-06, 'source_diff': 8.375000000004906e-06}, {'time': 0.077305806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.077315625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.818999999994249e-06, 'source_diff': 9.818999999994249e-06}, {'time': 0.077316097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077321347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.077321819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077328194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.375000000002906e-06, 'source_diff': 6.375000000002906e-06}, {'time': 0.077328681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999934649e-07, 'source_diff': 4.869999999934649e-07}, {'time': 0.077338708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027000000009667e-05, 'source_diff': 1.0027000000009667e-05}, {'time': 0.077339181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.077348583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.401999999991695e-06, 'source_diff': 9.401999999991695e-06}, {'time': 0.077349056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.077353361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3049999999961175e-06, 'source_diff': 4.3049999999961175e-06}, {'time': 0.077353833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077359278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.4450000000066945e-06, 'source_diff': 5.4450000000066945e-06}, {'time': 0.07735975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077369653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.902999999991668e-06, 'source_diff': 9.902999999991668e-06}, {'time': 0.077370125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077377028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.903000000002546e-06, 'source_diff': 6.903000000002546e-06}, {'time': 0.0773775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077385417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.916999999996177e-06, 'source_diff': 7.916999999996177e-06}, {'time': 0.077385903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.077389889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.077390361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077398722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.077399194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077407014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.819999999991722e-06, 'source_diff': 7.819999999991722e-06}, {'time': 0.077407486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077412097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.077412569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077416583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.013999999996631e-06, 'source_diff': 4.013999999996631e-06}, {'time': 0.077417056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.07742375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.077424222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077431236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.077431708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077442181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0472999999996957e-05, 'source_diff': 1.0472999999996957e-05}, {'time': 0.077442653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077451361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.707999999996163e-06, 'source_diff': 8.707999999996163e-06}, {'time': 0.077451833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0774565, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.077456986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.077466694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.707999999997163e-06, 'source_diff': 9.707999999997163e-06}, {'time': 0.077467167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.077471278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.07747175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077481458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.707999999997163e-06, 'source_diff': 9.707999999997163e-06}, {'time': 0.077481944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.077490819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000005406e-06, 'source_diff': 8.875000000005406e-06}, {'time': 0.077491292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.077501319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.002699999999579e-05, 'source_diff': 1.002699999999579e-05}, {'time': 0.077501806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000073427e-07, 'source_diff': 4.870000000073427e-07}, {'time': 0.077507667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999995897e-06, 'source_diff': 5.860999999995897e-06}, {'time': 0.077508139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077517792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.077518264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077523264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.999999999991123e-06, 'source_diff': 4.999999999991123e-06}, {'time': 0.07752375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.077532625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999991529e-06, 'source_diff': 8.874999999991529e-06}, {'time': 0.077533097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077539569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000007361e-06, 'source_diff': 6.472000000007361e-06}, {'time': 0.077540056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999934649e-07, 'source_diff': 4.869999999934649e-07}, {'time': 0.077545806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.077546278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077554417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000004226e-06, 'source_diff': 8.139000000004226e-06}, {'time': 0.077554889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077565, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0110999999993209e-05, 'source_diff': 1.0110999999993209e-05}, {'time': 0.077565486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.077574972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.486000000002992e-06, 'source_diff': 9.486000000002992e-06}, {'time': 0.077575444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.077583278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.834000000012109e-06, 'source_diff': 7.834000000012109e-06}, {'time': 0.07758375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077590125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999989028e-06, 'source_diff': 6.374999999989028e-06}, {'time': 0.077590597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077597319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.077597792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.077604889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0969999999975775e-06, 'source_diff': 7.0969999999975775e-06}, {'time': 0.077605375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:40.266" endtime="20201112 09:53:40.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.261" endtime="20201112 09:53:40.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:40.297" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:40.274" endtime="20201112 09:53:40.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.301" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:40.300" endtime="20201112 09:53:40.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.306" level="INFO">VALUE: {'sourcesource_diff': [0, 4.7300000000083386e-07, 8.986000000002492e-06, 4.720000000013602e-07, 6.582999999990569e-06, 4.86000000007869e-07, 6.695000000001006e-06, 4.720000000013602e-07, 5.888999999995037e-06, 4.720000000013602e-07, 5.235999999991803e-06, 4.7300000000083386e-07, 9.916000000012581e-06, 4.859999999939912e-07, 8.680999999996497e-06, 4.720000000013602e-07, 3.9859999999974915e-06, 4.86000000007869e-07, 1.0334000000000731e-05, 4.720000000013602e-07, 7.846999999991389e-06, 4.720000000013602e-07, 8.375000000004906e-06, 4.7300000000083386e-07, 9.818999999994249e-06, 4.720000000013602e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 6.375000000002906e-06, 4.869999999934649e-07, 1.0027000000009667e-05, 4.7300000000083386e-07, 9.401999999991695e-06, 4.7300000000083386e-07, 4.3049999999961175e-06, 4.720000000013602e-07, 5.4450000000066945e-06, 4.720000000013602e-07, 9.902999999991668e-06, 4.720000000013602e-07, 6.903000000002546e-06, 4.720000000013602e-07, 7.916999999996177e-06, 4.86000000007869e-07, 3.9859999999974915e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.720000000013602e-07, 7.819999999991722e-06, 4.720000000013602e-07, 4.611000000001586e-06, 4.720000000013602e-07, 4.013999999996631e-06, 4.7300000000083386e-07, 6.694000000001532e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.720000000013602e-07, 1.0472999999996957e-05, 4.720000000013602e-07, 8.707999999996163e-06, 4.720000000013602e-07, 4.666999999999866e-06, 4.86000000007869e-07, 9.707999999997163e-06, 4.7300000000083386e-07, 4.111000000001086e-06, 4.720000000013602e-07, 9.707999999997163e-06, 4.859999999939912e-07, 8.875000000005406e-06, 4.7300000000083386e-07, 1.002699999999579e-05, 4.870000000073427e-07, 5.860999999995897e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 4.999999999991123e-06, 4.86000000007869e-07, 8.874999999991529e-06, 4.720000000013602e-07, 6.472000000007361e-06, 4.869999999934649e-07, 5.749999999998812e-06, 4.720000000013602e-07, 8.139000000004226e-06, 4.720000000013602e-07, 1.0110999999993209e-05, 4.86000000007869e-07, 9.486000000002992e-06, 4.7199999998748243e-07, 7.834000000012109e-06, 4.720000000013602e-07, 6.374999999989028e-06, 4.720000000013602e-07, 6.722000000000672e-06, 4.7300000000083386e-07, 7.0969999999975775e-06, 4.86000000007869e-07], 'time': [0.077217569, 0.077218042, 0.077227028, 0.0772275, 0.077234083, 0.077234569, 0.077241264, 0.077241736, 0.077247625, 0.077248097, 0.077253333, 0.077253806, 0.077263722, 0.077264208, 0.077272889, 0.077273361, 0.077277347, 0.077277833, 0.077288167, 0.077288639, 0.077296486, 0.077296958, 0.077305333, 0.077305806, 0.077315625, 0.077316097, 0.077321347, 0.077321819, 0.077328194, 0.077328681, 0.077338708, 0.077339181, 0.077348583, 0.077349056, 0.077353361, 0.077353833, 0.077359278, 0.07735975, 0.077369653, 0.077370125, 0.077377028, 0.0773775, 0.077385417, 0.077385903, 0.077389889, 0.077390361, 0.077398722, 0.077399194, 0.077407014, 0.077407486, 0.077412097, 0.077412569, 0.077416583, 0.077417056, 0.07742375, 0.077424222, 0.077431236, 0.077431708, 0.077442181, 0.077442653, 0.077451361, 0.077451833, 0.0774565, 0.077456986, 0.077466694, 0.077467167, 0.077471278, 0.07747175, 0.077481458, 0.077481944, 0.077490819, 0.077491292, 0.077501319, 0.077501806, 0.077507667, 0.077508139, 0.077517792, 0.077518264, 0.077523264, 0.07752375, 0.077532625, 0.077533097, 0.077539569, 0.077540056, 0.077545806, 0.077546278, 0.077554417, 0.077554889, 0.077565, 0.077565486, 0.077574972, 0.077575444, 0.077583278, 0.07758375, 0.077590125, 0.077590597, 0.077597319, 0.077597792, 0.077604889, 0.077605375], 'eventdiff': [0, 4.7300000000083386e-07, 8.986000000002492e-06, 4.720000000013602e-07, 6.582999999990569e-06, 4.86000000007869e-07, 6.695000000001006e-06, 4.720000000013602e-07, 5.888999999995037e-06, 4.720000000013602e-07, 5.235999999991803e-06, 4.7300000000083386e-07, 9.916000000012581e-06, 4.859999999939912e-07, 8.680999999996497e-06, 4.720000000013602e-07, 3.9859999999974915e-06, 4.86000000007869e-07, 1.0334000000000731e-05, 4.720000000013602e-07, 7.846999999991389e-06, 4.720000000013602e-07, 8.375000000004906e-06, 4.7300000000083386e-07, 9.818999999994249e-06, 4.720000000013602e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 6.375000000002906e-06, 4.869999999934649e-07, 1.0027000000009667e-05, 4.7300000000083386e-07, 9.401999999991695e-06, 4.7300000000083386e-07, 4.3049999999961175e-06, 4.720000000013602e-07, 5.4450000000066945e-06, 4.720000000013602e-07, 9.902999999991668e-06, 4.720000000013602e-07, 6.903000000002546e-06, 4.720000000013602e-07, 7.916999999996177e-06, 4.86000000007869e-07, 3.9859999999974915e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.720000000013602e-07, 7.819999999991722e-06, 4.720000000013602e-07, 4.611000000001586e-06, 4.720000000013602e-07, 4.013999999996631e-06, 4.7300000000083386e-07, 6.694000000001532e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.720000000013602e-07, 1.0472999999996957e-05, 4.720000000013602e-07, 8.707999999996163e-06, 4.720000000013602e-07, 4.666999999999866e-06, 4.86000000007869e-07, 9.707999999997163e-06, 4.7300000000083386e-07, 4.111000000001086e-06, 4.720000000013602e-07, 9.707999999997163e-06, 4.859999999939912e-07, 8.875000000005406e-06, 4.7300000000083386e-07, 1.002699999999579e-05, 4.870000000073427e-07, 5.860999999995897e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 4.999999999991123e-06, 4.86000000007869e-07, 8.874999999991529e-06, 4.720000000013602e-07, 6.472000000007361e-06, 4.869999999934649e-07, 5.749999999998812e-06, 4.720000000013602e-07, 8.139000000004226e-06, 4.720000000013602e-07, 1.0110999999993209e-05, 4.86000000007869e-07, 9.486000000002992e-06, 4.7199999998748243e-07, 7.834000000012109e-06, 4.720000000013602e-07, 6.374999999989028e-06, 4.720000000013602e-07, 6.722000000000672e-06, 4.7300000000083386e-07, 7.0969999999975775e-06, 4.86000000007869e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:40.303" endtime="20201112 09:53:40.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.298" endtime="20201112 09:53:40.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:40.312" level="INFO">${RESULT} = [{'time': 0.077218042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0772275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:40.308" endtime="20201112 09:53:40.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:40.325" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:40.313" endtime="20201112 09:53:40.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.330" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:40.329" endtime="20201112 09:53:40.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.332" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.869999999934649e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.870000000073427e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.869999999934649e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.86000000007869e-07]</msg>
<status status="PASS" starttime="20201112 09:53:40.331" endtime="20201112 09:53:40.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.326" endtime="20201112 09:53:40.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.335" endtime="20201112 09:53:40.337"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:40.339" endtime="20201112 09:53:40.359"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.338" endtime="20201112 09:53:40.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.334" endtime="20201112 09:53:40.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.916" endtime="20201112 09:53:40.360"></status>
</kw>
<msg timestamp="20201112 09:53:40.361" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.372" endtime="20201112 09:53:40.389"></status>
</kw>
<msg timestamp="20201112 09:53:40.390" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:40.370" endtime="20201112 09:53:40.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.392" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:40.391" endtime="20201112 09:53:40.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.394" endtime="20201112 09:53:40.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.365" endtime="20201112 09:53:40.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.363" endtime="20201112 09:53:40.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.403" endtime="20201112 09:53:40.692"></status>
</kw>
<msg timestamp="20201112 09:53:40.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026010819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026011292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:40.401" endtime="20201112 09:53:40.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026010819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026011292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:40.697" endtime="20201112 09:53:40.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.706" endtime="20201112 09:53:40.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.399" endtime="20201112 09:53:40.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.397" endtime="20201112 09:53:40.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.712" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:40.711" endtime="20201112 09:53:40.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.718" level="INFO">VALUE: [{'time': 0.026010819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026011292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.02602, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.708000000003102e-06, 'source_diff': 8.708000000003102e-06}, {'time': 0.026020472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.026030069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.026030542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.026034639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.026035111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.026044236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.026044708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.026049917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2089999999990755e-06, 'source_diff': 5.2089999999990755e-06}, {'time': 0.026050403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.026054389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.026054875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.026061583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7079999999976325e-06, 'source_diff': 6.7079999999976325e-06}, {'time': 0.026062056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.026066458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.026066931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.026073014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0829999999970075e-06, 'source_diff': 6.0829999999970075e-06}, {'time': 0.026073486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.026083722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.026084194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.026089222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027999999997201e-06, 'source_diff': 5.027999999997201e-06}, {'time': 0.026089708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.026097347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.026097819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.026106597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.777999999997482e-06, 'source_diff': 8.777999999997482e-06}, {'time': 0.026107069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.026116792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722999999999676e-06, 'source_diff': 9.722999999999676e-06}, {'time': 0.026117264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.026126389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.026126861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.026131986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1249999999981866e-06, 'source_diff': 5.1249999999981866e-06}, {'time': 0.026132458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.026141139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.026141611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.026147778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.026148264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.026153611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.026154083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.026161764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680999999998966e-06, 'source_diff': 7.680999999998966e-06}, {'time': 0.026162236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.026171181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.945000000003256e-06, 'source_diff': 8.945000000003256e-06}, {'time': 0.026171667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.026176069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.026176556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.026186056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.499999999999093e-06, 'source_diff': 9.499999999999093e-06}, {'time': 0.026186542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.026190639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.026191111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.026201556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0445000000001287e-05, 'source_diff': 1.0445000000001287e-05}, {'time': 0.026202028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.026210819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.791000000001048e-06, 'source_diff': 8.791000000001048e-06}, {'time': 0.026211292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.026215389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.026215861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.026220375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.026220861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.026231194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0332999999997788e-05, 'source_diff': 1.0332999999997788e-05}, {'time': 0.026231667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.026235986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.318999999999157e-06, 'source_diff': 4.318999999999157e-06}, {'time': 0.026236458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.026242319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.026242806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.026252208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.401999999998634e-06, 'source_diff': 9.401999999998634e-06}, {'time': 0.026252681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.026260236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.554999999999368e-06, 'source_diff': 7.554999999999368e-06}, {'time': 0.026260708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.026264639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9309999999986855e-06, 'source_diff': 3.9309999999986855e-06}, {'time': 0.026265111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.026274139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.027999999997732e-06, 'source_diff': 9.027999999997732e-06}, {'time': 0.026274625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.026279347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.026279819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.026288292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.473000000001896e-06, 'source_diff': 8.473000000001896e-06}, {'time': 0.026288764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.026299111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.026299583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.026309611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.026310083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02631825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166999999999897e-06, 'source_diff': 8.166999999999897e-06}, {'time': 0.026318722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.026325222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.026325694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.026330097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.026330583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.026338958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.374999999997967e-06, 'source_diff': 8.374999999997967e-06}, {'time': 0.026339431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.026347472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041000000000298e-06, 'source_diff': 8.041000000000298e-06}, {'time': 0.026347944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.026356722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.777999999997482e-06, 'source_diff': 8.777999999997482e-06}, {'time': 0.026357208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.026361722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.026362194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.026372222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.026372694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.026377333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.026377806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.026387722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.915999999998704e-06, 'source_diff': 9.915999999998704e-06}, {'time': 0.026388194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:40.713" endtime="20201112 09:53:40.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.709" endtime="20201112 09:53:40.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:40.744" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:40.720" endtime="20201112 09:53:40.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.748" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:40.747" endtime="20201112 09:53:40.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.752" level="INFO">VALUE: {'sourcesource_diff': [0, 4.729999999973644e-07, 8.708000000003102e-06, 4.7199999999789077e-07, 9.597000000000078e-06, 4.7300000000083386e-07, 4.096999999998047e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 5.2089999999990755e-06, 4.860000000009301e-07, 3.986000000000961e-06, 4.860000000009301e-07, 6.7079999999976325e-06, 4.7300000000083386e-07, 4.402000000000572e-06, 4.7300000000083386e-07, 6.0829999999970075e-06, 4.720000000013602e-07, 1.0236000000000273e-05, 4.720000000013602e-07, 5.027999999997201e-06, 4.860000000009301e-07, 7.639000000000257e-06, 4.720000000013602e-07, 8.777999999997482e-06, 4.720000000013602e-07, 9.722999999999676e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 5.1249999999981866e-06, 4.720000000013602e-07, 8.680999999999967e-06, 4.7199999999789077e-07, 6.167000000001366e-06, 4.860000000009301e-07, 5.346999999999297e-06, 4.720000000013602e-07, 7.680999999998966e-06, 4.7199999999789077e-07, 8.945000000003256e-06, 4.859999999974607e-07, 4.402000000000572e-06, 4.870000000004038e-07, 9.499999999999093e-06, 4.860000000009301e-07, 4.097000000001516e-06, 4.7199999999789077e-07, 1.0445000000001287e-05, 4.7199999999789077e-07, 8.791000000001048e-06, 4.7300000000083386e-07, 4.096999999998047e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.860000000009301e-07, 1.0332999999997788e-05, 4.7300000000083386e-07, 4.318999999999157e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.870000000004038e-07, 9.401999999998634e-06, 4.7300000000083386e-07, 7.554999999999368e-06, 4.720000000013602e-07, 3.9309999999986855e-06, 4.720000000013602e-07, 9.027999999997732e-06, 4.860000000009301e-07, 4.722000000002141e-06, 4.7199999999789077e-07, 8.473000000001896e-06, 4.7199999999789077e-07, 1.0347000000000828e-05, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 8.166999999999897e-06, 4.7199999999789077e-07, 6.499999999999562e-06, 4.720000000013602e-07, 4.403000000000046e-06, 4.860000000009301e-07, 8.374999999997967e-06, 4.7300000000083386e-07, 8.041000000000298e-06, 4.720000000013602e-07, 8.777999999997482e-06, 4.860000000009301e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 1.0028000000002202e-05, 4.7199999999789077e-07, 4.639000000000726e-06, 4.7300000000083386e-07, 9.915999999998704e-06, 4.720000000013602e-07], 'time': [0.026010819, 0.026011292, 0.02602, 0.026020472, 0.026030069, 0.026030542, 0.026034639, 0.026035111, 0.026044236, 0.026044708, 0.026049917, 0.026050403, 0.026054389, 0.026054875, 0.026061583, 0.026062056, 0.026066458, 0.026066931, 0.026073014, 0.026073486, 0.026083722, 0.026084194, 0.026089222, 0.026089708, 0.026097347, 0.026097819, 0.026106597, 0.026107069, 0.026116792, 0.026117264, 0.026126389, 0.026126861, 0.026131986, 0.026132458, 0.026141139, 0.026141611, 0.026147778, 0.026148264, 0.026153611, 0.026154083, 0.026161764, 0.026162236, 0.026171181, 0.026171667, 0.026176069, 0.026176556, 0.026186056, 0.026186542, 0.026190639, 0.026191111, 0.026201556, 0.026202028, 0.026210819, 0.026211292, 0.026215389, 0.026215861, 0.026220375, 0.026220861, 0.026231194, 0.026231667, 0.026235986, 0.026236458, 0.026242319, 0.026242806, 0.026252208, 0.026252681, 0.026260236, 0.026260708, 0.026264639, 0.026265111, 0.026274139, 0.026274625, 0.026279347, 0.026279819, 0.026288292, 0.026288764, 0.026299111, 0.026299583, 0.026309611, 0.026310083, 0.02631825, 0.026318722, 0.026325222, 0.026325694, 0.026330097, 0.026330583, 0.026338958, 0.026339431, 0.026347472, 0.026347944, 0.026356722, 0.026357208, 0.026361722, 0.026362194, 0.026372222, 0.026372694, 0.026377333, 0.026377806, 0.026387722, 0.026388194], 'eventdiff': [0, 4.729999999973644e-07, 8.708000000003102e-06, 4.7199999999789077e-07, 9.597000000000078e-06, 4.7300000000083386e-07, 4.096999999998047e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 5.2089999999990755e-06, 4.860000000009301e-07, 3.986000000000961e-06, 4.860000000009301e-07, 6.7079999999976325e-06, 4.7300000000083386e-07, 4.402000000000572e-06, 4.7300000000083386e-07, 6.0829999999970075e-06, 4.720000000013602e-07, 1.0236000000000273e-05, 4.720000000013602e-07, 5.027999999997201e-06, 4.860000000009301e-07, 7.639000000000257e-06, 4.720000000013602e-07, 8.777999999997482e-06, 4.720000000013602e-07, 9.722999999999676e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 5.1249999999981866e-06, 4.720000000013602e-07, 8.680999999999967e-06, 4.7199999999789077e-07, 6.167000000001366e-06, 4.860000000009301e-07, 5.346999999999297e-06, 4.720000000013602e-07, 7.680999999998966e-06, 4.7199999999789077e-07, 8.945000000003256e-06, 4.859999999974607e-07, 4.402000000000572e-06, 4.870000000004038e-07, 9.499999999999093e-06, 4.860000000009301e-07, 4.097000000001516e-06, 4.7199999999789077e-07, 1.0445000000001287e-05, 4.7199999999789077e-07, 8.791000000001048e-06, 4.7300000000083386e-07, 4.096999999998047e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.860000000009301e-07, 1.0332999999997788e-05, 4.7300000000083386e-07, 4.318999999999157e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.870000000004038e-07, 9.401999999998634e-06, 4.7300000000083386e-07, 7.554999999999368e-06, 4.720000000013602e-07, 3.9309999999986855e-06, 4.720000000013602e-07, 9.027999999997732e-06, 4.860000000009301e-07, 4.722000000002141e-06, 4.7199999999789077e-07, 8.473000000001896e-06, 4.7199999999789077e-07, 1.0347000000000828e-05, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 8.166999999999897e-06, 4.7199999999789077e-07, 6.499999999999562e-06, 4.720000000013602e-07, 4.403000000000046e-06, 4.860000000009301e-07, 8.374999999997967e-06, 4.7300000000083386e-07, 8.041000000000298e-06, 4.720000000013602e-07, 8.777999999997482e-06, 4.860000000009301e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 1.0028000000002202e-05, 4.7199999999789077e-07, 4.639000000000726e-06, 4.7300000000083386e-07, 9.915999999998704e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:40.749" endtime="20201112 09:53:40.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.745" endtime="20201112 09:53:40.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:40.758" level="INFO">${RESULT} = [{'time': 0.026011292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.026020472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:40.755" endtime="20201112 09:53:40.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:40.772" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:40.760" endtime="20201112 09:53:40.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.777" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:40.776" endtime="20201112 09:53:40.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.780" level="INFO">VALUE: [4.729999999973644e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:53:40.778" endtime="20201112 09:53:40.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.773" endtime="20201112 09:53:40.781"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.783" endtime="20201112 09:53:40.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:40.786" endtime="20201112 09:53:40.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.785" endtime="20201112 09:53:40.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.781" endtime="20201112 09:53:40.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.361" endtime="20201112 09:53:40.808"></status>
</kw>
<msg timestamp="20201112 09:53:40.808" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.816" endtime="20201112 09:53:40.831"></status>
</kw>
<msg timestamp="20201112 09:53:40.831" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:40.814" endtime="20201112 09:53:40.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.834" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:40.832" endtime="20201112 09:53:40.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.835" endtime="20201112 09:53:40.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.811" endtime="20201112 09:53:40.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.810" endtime="20201112 09:53:40.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.845" endtime="20201112 09:53:41.130"></status>
</kw>
<msg timestamp="20201112 09:53:41.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020728903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020729375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:40.843" endtime="20201112 09:53:41.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020728903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020729375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:41.134" endtime="20201112 09:53:41.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.143" endtime="20201112 09:53:41.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.840" endtime="20201112 09:53:41.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.839" endtime="20201112 09:53:41.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.150" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:41.149" endtime="20201112 09:53:41.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.155" level="INFO">VALUE: [{'time': 0.020728903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020729375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02073775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.374999999997967e-06, 'source_diff': 8.374999999997967e-06}, {'time': 0.020738222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020744903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.680999999997966e-06, 'source_diff': 6.680999999997966e-06}, {'time': 0.020745389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.0207525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.020752972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020760833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.020761306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020770361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.055000000000868e-06, 'source_diff': 9.055000000000868e-06}, {'time': 0.020770847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020776597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.750000000002281e-06, 'source_diff': 5.750000000002281e-06}, {'time': 0.020777069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020786042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.973000000002396e-06, 'source_diff': 8.973000000002396e-06}, {'time': 0.020786514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020790403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.020790875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020801208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333000000001258e-05, 'source_diff': 1.0333000000001258e-05}, {'time': 0.020801681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020806792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.020807278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020813958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.680000000001962e-06, 'source_diff': 6.680000000001962e-06}, {'time': 0.020814431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020824028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.0208245, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020831417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.917000000002116e-06, 'source_diff': 6.917000000002116e-06}, {'time': 0.020831889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020837236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.020837708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020846694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.020847181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.020852417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.236000000002211e-06, 'source_diff': 5.236000000002211e-06}, {'time': 0.020852889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.02086125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.020861736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020866347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.020866833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020875292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.458999999998856e-06, 'source_diff': 8.458999999998856e-06}, {'time': 0.020875778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020884458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.020884931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020893069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.138000000001283e-06, 'source_diff': 8.138000000001283e-06}, {'time': 0.020893556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.020900764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2079999999981326e-06, 'source_diff': 7.2079999999981326e-06}, {'time': 0.02090125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020909917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.020910403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020919806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.020920278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020930306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.020930778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020938208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.429999999999243e-06, 'source_diff': 7.429999999999243e-06}, {'time': 0.020938681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020948597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.915999999998704e-06, 'source_diff': 9.915999999998704e-06}, {'time': 0.020949069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020955333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.020955819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020963639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.819999999998661e-06, 'source_diff': 7.819999999998661e-06}, {'time': 0.020964125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020970278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.1529999999983265e-06, 'source_diff': 6.1529999999983265e-06}, {'time': 0.020970764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020980569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.020981042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020988667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.020989139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020993319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.020993792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020997778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.020998264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021004014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.750000000002281e-06, 'source_diff': 5.750000000002281e-06}, {'time': 0.021004486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021012236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.021012708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021023056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347999999996832e-05, 'source_diff': 1.0347999999996832e-05}, {'time': 0.021023528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021032403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.021032875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021039681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.806000000001561e-06, 'source_diff': 6.806000000001561e-06}, {'time': 0.021040153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021047889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.021048361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021056319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.957999999998883e-06, 'source_diff': 7.957999999998883e-06}, {'time': 0.021056792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021063694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.901999999999603e-06, 'source_diff': 6.901999999999603e-06}, {'time': 0.021064167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021073889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.721999999996733e-06, 'source_diff': 9.721999999996733e-06}, {'time': 0.021074361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021081472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.021081944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021087194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.250000000001781e-06, 'source_diff': 5.250000000001781e-06}, {'time': 0.021087667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021093431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.021093903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021098319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.021098792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021109028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0235999999996803e-05, 'source_diff': 1.0235999999996803e-05}, {'time': 0.0211095, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021116208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.021116681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:41.151" endtime="20201112 09:53:41.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.146" endtime="20201112 09:53:41.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:41.182" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:41.158" endtime="20201112 09:53:41.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.186" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:41.185" endtime="20201112 09:53:41.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.191" level="INFO">VALUE: {'sourcesource_diff': [0, 4.720000000013602e-07, 8.374999999997967e-06, 4.720000000013602e-07, 6.680999999997966e-06, 4.860000000009301e-07, 7.111000000000617e-06, 4.720000000013602e-07, 7.860999999997897e-06, 4.7300000000083386e-07, 9.055000000000868e-06, 4.859999999974607e-07, 5.750000000002281e-06, 4.7199999999789077e-07, 8.973000000002396e-06, 4.7199999999789077e-07, 3.888999999999976e-06, 4.720000000013602e-07, 1.0333000000001258e-05, 4.729999999973644e-07, 5.111000000002086e-06, 4.859999999974607e-07, 6.680000000001962e-06, 4.7300000000083386e-07, 9.597000000000078e-06, 4.7199999999789077e-07, 6.917000000002116e-06, 4.7199999999789077e-07, 5.346999999999297e-06, 4.720000000013602e-07, 8.985999999999023e-06, 4.870000000004038e-07, 5.236000000002211e-06, 4.7199999999789077e-07, 8.361000000001867e-06, 4.859999999974607e-07, 4.611000000001586e-06, 4.860000000009301e-07, 8.458999999998856e-06, 4.860000000009301e-07, 8.680000000000493e-06, 4.729999999973644e-07, 8.138000000001283e-06, 4.870000000004038e-07, 7.2079999999981326e-06, 4.860000000009301e-07, 8.667000000000397e-06, 4.860000000009301e-07, 9.402999999998107e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 7.429999999999243e-06, 4.7300000000083386e-07, 9.915999999998704e-06, 4.720000000013602e-07, 6.2639999999988816e-06, 4.860000000009301e-07, 7.819999999998661e-06, 4.860000000009301e-07, 6.1529999999983265e-06, 4.860000000009301e-07, 9.805000000001618e-06, 4.729999999973644e-07, 7.625000000000687e-06, 4.720000000013602e-07, 4.179999999999462e-06, 4.7300000000083386e-07, 3.986000000000961e-06, 4.859999999974607e-07, 5.750000000002281e-06, 4.7199999999789077e-07, 7.750000000000812e-06, 4.720000000013602e-07, 1.0347999999996832e-05, 4.720000000013602e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 6.806000000001561e-06, 4.7199999999789077e-07, 7.736000000001242e-06, 4.720000000013602e-07, 7.957999999998883e-06, 4.7300000000083386e-07, 6.901999999999603e-06, 4.7300000000083386e-07, 9.721999999996733e-06, 4.720000000013602e-07, 7.111000000000617e-06, 4.7199999999789077e-07, 5.250000000001781e-06, 4.7300000000083386e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 4.416000000000142e-06, 4.7300000000083386e-07, 1.0235999999996803e-05, 4.720000000013602e-07, 6.708000000001102e-06, 4.7300000000083386e-07], 'time': [0.020728903, 0.020729375, 0.02073775, 0.020738222, 0.020744903, 0.020745389, 0.0207525, 0.020752972, 0.020760833, 0.020761306, 0.020770361, 0.020770847, 0.020776597, 0.020777069, 0.020786042, 0.020786514, 0.020790403, 0.020790875, 0.020801208, 0.020801681, 0.020806792, 0.020807278, 0.020813958, 0.020814431, 0.020824028, 0.0208245, 0.020831417, 0.020831889, 0.020837236, 0.020837708, 0.020846694, 0.020847181, 0.020852417, 0.020852889, 0.02086125, 0.020861736, 0.020866347, 0.020866833, 0.020875292, 0.020875778, 0.020884458, 0.020884931, 0.020893069, 0.020893556, 0.020900764, 0.02090125, 0.020909917, 0.020910403, 0.020919806, 0.020920278, 0.020930306, 0.020930778, 0.020938208, 0.020938681, 0.020948597, 0.020949069, 0.020955333, 0.020955819, 0.020963639, 0.020964125, 0.020970278, 0.020970764, 0.020980569, 0.020981042, 0.020988667, 0.020989139, 0.020993319, 0.020993792, 0.020997778, 0.020998264, 0.021004014, 0.021004486, 0.021012236, 0.021012708, 0.021023056, 0.021023528, 0.021032403, 0.021032875, 0.021039681, 0.021040153, 0.021047889, 0.021048361, 0.021056319, 0.021056792, 0.021063694, 0.021064167, 0.021073889, 0.021074361, 0.021081472, 0.021081944, 0.021087194, 0.021087667, 0.021093431, 0.021093903, 0.021098319, 0.021098792, 0.021109028, 0.0211095, 0.021116208, 0.021116681], 'eventdiff': [0, 4.720000000013602e-07, 8.374999999997967e-06, 4.720000000013602e-07, 6.680999999997966e-06, 4.860000000009301e-07, 7.111000000000617e-06, 4.720000000013602e-07, 7.860999999997897e-06, 4.7300000000083386e-07, 9.055000000000868e-06, 4.859999999974607e-07, 5.750000000002281e-06, 4.7199999999789077e-07, 8.973000000002396e-06, 4.7199999999789077e-07, 3.888999999999976e-06, 4.720000000013602e-07, 1.0333000000001258e-05, 4.729999999973644e-07, 5.111000000002086e-06, 4.859999999974607e-07, 6.680000000001962e-06, 4.7300000000083386e-07, 9.597000000000078e-06, 4.7199999999789077e-07, 6.917000000002116e-06, 4.7199999999789077e-07, 5.346999999999297e-06, 4.720000000013602e-07, 8.985999999999023e-06, 4.870000000004038e-07, 5.236000000002211e-06, 4.7199999999789077e-07, 8.361000000001867e-06, 4.859999999974607e-07, 4.611000000001586e-06, 4.860000000009301e-07, 8.458999999998856e-06, 4.860000000009301e-07, 8.680000000000493e-06, 4.729999999973644e-07, 8.138000000001283e-06, 4.870000000004038e-07, 7.2079999999981326e-06, 4.860000000009301e-07, 8.667000000000397e-06, 4.860000000009301e-07, 9.402999999998107e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 7.429999999999243e-06, 4.7300000000083386e-07, 9.915999999998704e-06, 4.720000000013602e-07, 6.2639999999988816e-06, 4.860000000009301e-07, 7.819999999998661e-06, 4.860000000009301e-07, 6.1529999999983265e-06, 4.860000000009301e-07, 9.805000000001618e-06, 4.729999999973644e-07, 7.625000000000687e-06, 4.720000000013602e-07, 4.179999999999462e-06, 4.7300000000083386e-07, 3.986000000000961e-06, 4.859999999974607e-07, 5.750000000002281e-06, 4.7199999999789077e-07, 7.750000000000812e-06, 4.720000000013602e-07, 1.0347999999996832e-05, 4.720000000013602e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 6.806000000001561e-06, 4.7199999999789077e-07, 7.736000000001242e-06, 4.720000000013602e-07, 7.957999999998883e-06, 4.7300000000083386e-07, 6.901999999999603e-06, 4.7300000000083386e-07, 9.721999999996733e-06, 4.720000000013602e-07, 7.111000000000617e-06, 4.7199999999789077e-07, 5.250000000001781e-06, 4.7300000000083386e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 4.416000000000142e-06, 4.7300000000083386e-07, 1.0235999999996803e-05, 4.720000000013602e-07, 6.708000000001102e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:41.187" endtime="20201112 09:53:41.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.183" endtime="20201112 09:53:41.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:41.197" level="INFO">${RESULT} = [{'time': 0.020729375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020738222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:41.193" endtime="20201112 09:53:41.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:41.210" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:41.198" endtime="20201112 09:53:41.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.215" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:41.214" endtime="20201112 09:53:41.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.217" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 09:53:41.216" endtime="20201112 09:53:41.218"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.211" endtime="20201112 09:53:41.218"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.221" endtime="20201112 09:53:41.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:41.224" endtime="20201112 09:53:41.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.222" endtime="20201112 09:53:41.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.219" endtime="20201112 09:53:41.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.808" endtime="20201112 09:53:41.245"></status>
</kw>
<msg timestamp="20201112 09:53:41.245" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.253" endtime="20201112 09:53:41.269"></status>
</kw>
<msg timestamp="20201112 09:53:41.269" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:41.252" endtime="20201112 09:53:41.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.272" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:41.270" endtime="20201112 09:53:41.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.273" endtime="20201112 09:53:41.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.249" endtime="20201112 09:53:41.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.247" endtime="20201112 09:53:41.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.283" endtime="20201112 09:53:41.571"></status>
</kw>
<msg timestamp="20201112 09:53:41.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020250653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020251125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:41.282" endtime="20201112 09:53:41.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020250653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020251125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:41.575" endtime="20201112 09:53:41.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.584" endtime="20201112 09:53:41.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.279" endtime="20201112 09:53:41.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.276" endtime="20201112 09:53:41.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.590" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:41.589" endtime="20201112 09:53:41.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.595" level="INFO">VALUE: [{'time': 0.020250653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020251125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020258347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.222000000001172e-06, 'source_diff': 7.222000000001172e-06}, {'time': 0.020258819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020264167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.34799999999877e-06, 'source_diff': 5.34799999999877e-06}, {'time': 0.020264639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020274875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.020275361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020281125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.020281597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020290792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.195000000000036e-06, 'source_diff': 9.195000000000036e-06}, {'time': 0.020291278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020301194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916000000002173e-06, 'source_diff': 9.916000000002173e-06}, {'time': 0.020301667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020308806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138999999999757e-06, 'source_diff': 7.138999999999757e-06}, {'time': 0.020309278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020319611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333000000001258e-05, 'source_diff': 1.0333000000001258e-05}, {'time': 0.020320083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020325431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.34800000000224e-06, 'source_diff': 5.34800000000224e-06}, {'time': 0.020325903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.02033325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347000000001297e-06, 'source_diff': 7.347000000001297e-06}, {'time': 0.020333722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020338333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.020338806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.02034925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0443999999998343e-05, 'source_diff': 1.0443999999998343e-05}, {'time': 0.020349722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020357569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.020358042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020362778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.02036325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020371611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.020372083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020376917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.83400000000217e-06, 'source_diff': 4.83400000000217e-06}, {'time': 0.020377389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020386292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.903000000001077e-06, 'source_diff': 8.903000000001077e-06}, {'time': 0.020386764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020397111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0346999999997358e-05, 'source_diff': 1.0346999999997358e-05}, {'time': 0.020397583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020405611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.020406097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020411125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027999999997201e-06, 'source_diff': 5.027999999997201e-06}, {'time': 0.020411611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020421569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.958000000000883e-06, 'source_diff': 9.958000000000883e-06}, {'time': 0.020422042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020430264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.221999999998703e-06, 'source_diff': 8.221999999998703e-06}, {'time': 0.02043075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020440556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805999999997622e-06, 'source_diff': 9.805999999997622e-06}, {'time': 0.020441042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020449958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.916000000001173e-06, 'source_diff': 8.916000000001173e-06}, {'time': 0.020450431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020457306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999999937e-06, 'source_diff': 6.874999999999937e-06}, {'time': 0.020457792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020462319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527000000000697e-06, 'source_diff': 4.527000000000697e-06}, {'time': 0.020462792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020466917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.020467389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020473944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.555000000001837e-06, 'source_diff': 6.555000000001837e-06}, {'time': 0.020474431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.0204805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.020480986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020486847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.020487319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020497458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.020497931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020506111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.179999999999993e-06, 'source_diff': 8.179999999999993e-06}, {'time': 0.020506583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020510569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.020511042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020516069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027000000001197e-06, 'source_diff': 5.027000000001197e-06}, {'time': 0.020516556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.020521708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.152000000001322e-06, 'source_diff': 5.152000000001322e-06}, {'time': 0.020522181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020531569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.387999999999064e-06, 'source_diff': 9.387999999999064e-06}, {'time': 0.020532042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020541875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.833000000000758e-06, 'source_diff': 9.833000000000758e-06}, {'time': 0.020542347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020549458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.020549931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020554667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.020555139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020563597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.020564083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020571819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.020572292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020581486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.020581972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020586917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.020587389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020594194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.020594667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020603958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.290999999998079e-06, 'source_diff': 9.290999999998079e-06}, {'time': 0.020604431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020609278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.02060975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020618819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.069000000000438e-06, 'source_diff': 9.069000000000438e-06}, {'time': 0.020619306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.020626958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652000000000353e-06, 'source_diff': 7.652000000000353e-06}, {'time': 0.020627431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020631625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.020632097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:41.591" endtime="20201112 09:53:41.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.587" endtime="20201112 09:53:41.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:41.641" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:41.598" endtime="20201112 09:53:41.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.649" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:41.647" endtime="20201112 09:53:41.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.658" level="INFO">VALUE: {'sourcesource_diff': [0, 4.7199999999789077e-07, 7.222000000001172e-06, 4.720000000013602e-07, 5.34799999999877e-06, 4.720000000013602e-07, 1.0236000000000273e-05, 4.859999999974607e-07, 5.764000000001851e-06, 4.7199999999789077e-07, 9.195000000000036e-06, 4.860000000009301e-07, 9.916000000002173e-06, 4.729999999973644e-07, 7.138999999999757e-06, 4.720000000013602e-07, 1.0333000000001258e-05, 4.7199999999789077e-07, 5.34800000000224e-06, 4.7199999999789077e-07, 7.347000000001297e-06, 4.7199999999789077e-07, 4.611000000001586e-06, 4.7300000000083386e-07, 1.0443999999998343e-05, 4.720000000013602e-07, 7.846999999998328e-06, 4.7300000000083386e-07, 4.736000000001711e-06, 4.7199999999789077e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 4.83400000000217e-06, 4.7199999999789077e-07, 8.903000000001077e-06, 4.720000000013602e-07, 1.0346999999997358e-05, 4.720000000013602e-07, 8.028000000000202e-06, 4.860000000009301e-07, 5.027999999997201e-06, 4.860000000009301e-07, 9.958000000000883e-06, 4.7300000000083386e-07, 8.221999999998703e-06, 4.860000000009301e-07, 9.805999999997622e-06, 4.860000000009301e-07, 8.916000000001173e-06, 4.7300000000083386e-07, 6.874999999999937e-06, 4.859999999974607e-07, 4.527000000000697e-06, 4.7300000000083386e-07, 4.125000000000656e-06, 4.7199999999789077e-07, 6.555000000001837e-06, 4.870000000004038e-07, 6.0689999999974376e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.7300000000083386e-07, 8.179999999999993e-06, 4.7199999999789077e-07, 3.986000000000961e-06, 4.7300000000083386e-07, 5.027000000001197e-06, 4.869999999969343e-07, 5.152000000001322e-06, 4.7300000000083386e-07, 9.387999999999064e-06, 4.7300000000083386e-07, 9.833000000000758e-06, 4.7199999999789077e-07, 7.111000000000617e-06, 4.7300000000083386e-07, 4.735999999998242e-06, 4.720000000013602e-07, 8.457999999999383e-06, 4.860000000009301e-07, 7.736000000001242e-06, 4.729999999973644e-07, 9.194000000000563e-06, 4.860000000009301e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 6.804999999998618e-06, 4.7300000000083386e-07, 9.290999999998079e-06, 4.7300000000083386e-07, 4.847000000002266e-06, 4.7199999999789077e-07, 9.069000000000438e-06, 4.870000000004038e-07, 7.652000000000353e-06, 4.7300000000083386e-07, 4.193999999999032e-06, 4.7199999999789077e-07], 'time': [0.020250653, 0.020251125, 0.020258347, 0.020258819, 0.020264167, 0.020264639, 0.020274875, 0.020275361, 0.020281125, 0.020281597, 0.020290792, 0.020291278, 0.020301194, 0.020301667, 0.020308806, 0.020309278, 0.020319611, 0.020320083, 0.020325431, 0.020325903, 0.02033325, 0.020333722, 0.020338333, 0.020338806, 0.02034925, 0.020349722, 0.020357569, 0.020358042, 0.020362778, 0.02036325, 0.020371611, 0.020372083, 0.020376917, 0.020377389, 0.020386292, 0.020386764, 0.020397111, 0.020397583, 0.020405611, 0.020406097, 0.020411125, 0.020411611, 0.020421569, 0.020422042, 0.020430264, 0.02043075, 0.020440556, 0.020441042, 0.020449958, 0.020450431, 0.020457306, 0.020457792, 0.020462319, 0.020462792, 0.020466917, 0.020467389, 0.020473944, 0.020474431, 0.0204805, 0.020480986, 0.020486847, 0.020487319, 0.020497458, 0.020497931, 0.020506111, 0.020506583, 0.020510569, 0.020511042, 0.020516069, 0.020516556, 0.020521708, 0.020522181, 0.020531569, 0.020532042, 0.020541875, 0.020542347, 0.020549458, 0.020549931, 0.020554667, 0.020555139, 0.020563597, 0.020564083, 0.020571819, 0.020572292, 0.020581486, 0.020581972, 0.020586917, 0.020587389, 0.020594194, 0.020594667, 0.020603958, 0.020604431, 0.020609278, 0.02060975, 0.020618819, 0.020619306, 0.020626958, 0.020627431, 0.020631625, 0.020632097], 'eventdiff': [0, 4.7199999999789077e-07, 7.222000000001172e-06, 4.720000000013602e-07, 5.34799999999877e-06, 4.720000000013602e-07, 1.0236000000000273e-05, 4.859999999974607e-07, 5.764000000001851e-06, 4.7199999999789077e-07, 9.195000000000036e-06, 4.860000000009301e-07, 9.916000000002173e-06, 4.729999999973644e-07, 7.138999999999757e-06, 4.720000000013602e-07, 1.0333000000001258e-05, 4.7199999999789077e-07, 5.34800000000224e-06, 4.7199999999789077e-07, 7.347000000001297e-06, 4.7199999999789077e-07, 4.611000000001586e-06, 4.7300000000083386e-07, 1.0443999999998343e-05, 4.720000000013602e-07, 7.846999999998328e-06, 4.7300000000083386e-07, 4.736000000001711e-06, 4.7199999999789077e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 4.83400000000217e-06, 4.7199999999789077e-07, 8.903000000001077e-06, 4.720000000013602e-07, 1.0346999999997358e-05, 4.720000000013602e-07, 8.028000000000202e-06, 4.860000000009301e-07, 5.027999999997201e-06, 4.860000000009301e-07, 9.958000000000883e-06, 4.7300000000083386e-07, 8.221999999998703e-06, 4.860000000009301e-07, 9.805999999997622e-06, 4.860000000009301e-07, 8.916000000001173e-06, 4.7300000000083386e-07, 6.874999999999937e-06, 4.859999999974607e-07, 4.527000000000697e-06, 4.7300000000083386e-07, 4.125000000000656e-06, 4.7199999999789077e-07, 6.555000000001837e-06, 4.870000000004038e-07, 6.0689999999974376e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.7300000000083386e-07, 8.179999999999993e-06, 4.7199999999789077e-07, 3.986000000000961e-06, 4.7300000000083386e-07, 5.027000000001197e-06, 4.869999999969343e-07, 5.152000000001322e-06, 4.7300000000083386e-07, 9.387999999999064e-06, 4.7300000000083386e-07, 9.833000000000758e-06, 4.7199999999789077e-07, 7.111000000000617e-06, 4.7300000000083386e-07, 4.735999999998242e-06, 4.720000000013602e-07, 8.457999999999383e-06, 4.860000000009301e-07, 7.736000000001242e-06, 4.729999999973644e-07, 9.194000000000563e-06, 4.860000000009301e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 6.804999999998618e-06, 4.7300000000083386e-07, 9.290999999998079e-06, 4.7300000000083386e-07, 4.847000000002266e-06, 4.7199999999789077e-07, 9.069000000000438e-06, 4.870000000004038e-07, 7.652000000000353e-06, 4.7300000000083386e-07, 4.193999999999032e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:41.651" endtime="20201112 09:53:41.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.643" endtime="20201112 09:53:41.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:41.670" level="INFO">${RESULT} = [{'time': 0.020251125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020258819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:41.663" endtime="20201112 09:53:41.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:41.700" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:41.672" endtime="20201112 09:53:41.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.708" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:41.706" endtime="20201112 09:53:41.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.711" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.869999999969343e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 09:53:41.709" endtime="20201112 09:53:41.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.702" endtime="20201112 09:53:41.711"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.714" endtime="20201112 09:53:41.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:41.717" endtime="20201112 09:53:41.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.716" endtime="20201112 09:53:41.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.712" endtime="20201112 09:53:41.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.246" endtime="20201112 09:53:41.738"></status>
</kw>
<msg timestamp="20201112 09:53:41.738" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.746" endtime="20201112 09:53:41.761"></status>
</kw>
<msg timestamp="20201112 09:53:41.762" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:41.744" endtime="20201112 09:53:41.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.764" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:41.763" endtime="20201112 09:53:41.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.765" endtime="20201112 09:53:41.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.742" endtime="20201112 09:53:41.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.740" endtime="20201112 09:53:41.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.774" endtime="20201112 09:53:42.061"></status>
</kw>
<msg timestamp="20201112 09:53:42.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019720042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019720514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:41.772" endtime="20201112 09:53:42.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019720042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019720514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:42.066" endtime="20201112 09:53:42.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.074" endtime="20201112 09:53:42.076"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.770" endtime="20201112 09:53:42.076"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.768" endtime="20201112 09:53:42.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.080" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:42.079" endtime="20201112 09:53:42.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.085" level="INFO">VALUE: [{'time': 0.019720042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019720514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019726069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.554999999997368e-06, 'source_diff': 5.554999999997368e-06}, {'time': 0.019726542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019733236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.019733708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019741972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.019742444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019749264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.819999999997661e-06, 'source_diff': 6.819999999997661e-06}, {'time': 0.019749736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019759667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.931000000001217e-06, 'source_diff': 9.931000000001217e-06}, {'time': 0.019760139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019768181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.019768653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019773681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.019774167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019778167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.019778639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019787722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.019788208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019792708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4999999999975615e-06, 'source_diff': 4.4999999999975615e-06}, {'time': 0.019793194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019802181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986999999998496e-06, 'source_diff': 8.986999999998496e-06}, {'time': 0.019802653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019811056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.403000000000577e-06, 'source_diff': 8.403000000000577e-06}, {'time': 0.019811528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019820375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.847000000002797e-06, 'source_diff': 8.847000000002797e-06}, {'time': 0.019820847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019827125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.278000000001921e-06, 'source_diff': 6.278000000001921e-06}, {'time': 0.019827611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019833806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.019834278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019840125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.019840611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019848444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.019848931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019856347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.415999999999673e-06, 'source_diff': 7.415999999999673e-06}, {'time': 0.019856833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019866236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.019866708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019871736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.019872222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019880708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.019881181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019886514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.019886986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019893167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.019893639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019899292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6529999999978264e-06, 'source_diff': 5.6529999999978264e-06}, {'time': 0.019899778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019904181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.019904667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019913806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.019914278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019921347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.068999999998438e-06, 'source_diff': 7.068999999998438e-06}, {'time': 0.019921819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01992875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.930999999998216e-06, 'source_diff': 6.930999999998216e-06}, {'time': 0.019929222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019938306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083999999999481e-06, 'source_diff': 9.083999999999481e-06}, {'time': 0.019938778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019944111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.019944597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019954111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.019954583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019961917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.333999999997731e-06, 'source_diff': 7.333999999997731e-06}, {'time': 0.019962389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019967931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.019968403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019976361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.958000000002352e-06, 'source_diff': 7.958000000002352e-06}, {'time': 0.019976833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019986333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.499999999999093e-06, 'source_diff': 9.499999999999093e-06}, {'time': 0.019986819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019997153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0334000000000731e-05, 'source_diff': 1.0334000000000731e-05}, {'time': 0.019997625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0200035, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.020003972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020011917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.945000000002256e-06, 'source_diff': 7.945000000002256e-06}, {'time': 0.020012389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020016819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430000000003181e-06, 'source_diff': 4.430000000003181e-06}, {'time': 0.020017292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020022208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.020022694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020027833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.020028306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020035, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.020035472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020044986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.514000000002132e-06, 'source_diff': 9.514000000002132e-06}, {'time': 0.020045458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020051542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.020052014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020061625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.020062097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020070333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.235999999998272e-06, 'source_diff': 8.235999999998272e-06}, {'time': 0.020070806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020075139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.020075625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020082944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.020083417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020091153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.020091639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:42.081" endtime="20201112 09:53:42.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.077" endtime="20201112 09:53:42.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:42.112" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:42.088" endtime="20201112 09:53:42.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.116" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:42.115" endtime="20201112 09:53:42.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.120" level="INFO">VALUE: {'sourcesource_diff': [0, 4.720000000013602e-07, 5.554999999997368e-06, 4.7300000000083386e-07, 6.694000000001532e-06, 4.7199999999789077e-07, 8.264000000000882e-06, 4.720000000013602e-07, 6.819999999997661e-06, 4.720000000013602e-07, 9.931000000001217e-06, 4.7199999999789077e-07, 8.041999999999772e-06, 4.720000000013602e-07, 5.028000000000671e-06, 4.859999999974607e-07, 4.000000000000531e-06, 4.720000000013602e-07, 9.083000000000008e-06, 4.860000000009301e-07, 4.4999999999975615e-06, 4.860000000009301e-07, 8.986999999998496e-06, 4.720000000013602e-07, 8.403000000000577e-06, 4.7199999999789077e-07, 8.847000000002797e-06, 4.7199999999789077e-07, 6.278000000001921e-06, 4.859999999974607e-07, 6.195000000000506e-06, 4.720000000013602e-07, 5.846999999999797e-06, 4.860000000009301e-07, 7.832999999998758e-06, 4.870000000004038e-07, 7.415999999999673e-06, 4.860000000009301e-07, 9.402999999998107e-06, 4.720000000013602e-07, 5.028000000000671e-06, 4.859999999974607e-07, 8.486000000001992e-06, 4.7300000000083386e-07, 5.332999999999727e-06, 4.7199999999789077e-07, 6.181000000000936e-06, 4.720000000013602e-07, 5.6529999999978264e-06, 4.860000000009301e-07, 4.403000000000046e-06, 4.860000000009301e-07, 9.138999999998287e-06, 4.720000000013602e-07, 7.068999999998438e-06, 4.720000000013602e-07, 6.930999999998216e-06, 4.720000000013602e-07, 9.083999999999481e-06, 4.720000000013602e-07, 5.332999999999727e-06, 4.860000000009301e-07, 9.513999999998662e-06, 4.720000000013602e-07, 7.333999999997731e-06, 4.720000000013602e-07, 5.542000000000741e-06, 4.7199999999789077e-07, 7.958000000002352e-06, 4.7199999999789077e-07, 9.499999999999093e-06, 4.860000000009301e-07, 1.0334000000000731e-05, 4.720000000013602e-07, 5.874999999998937e-06, 4.7199999999789077e-07, 7.945000000002256e-06, 4.7199999999789077e-07, 4.430000000003181e-06, 4.729999999973644e-07, 4.916000000000642e-06, 4.860000000009301e-07, 5.1389999999977565e-06, 4.7300000000083386e-07, 6.694000000001532e-06, 4.7199999999789077e-07, 9.514000000002132e-06, 4.7199999999789077e-07, 6.0839999999999506e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.720000000013602e-07, 8.235999999998272e-06, 4.7300000000083386e-07, 4.332999999998727e-06, 4.860000000009301e-07, 7.318999999998688e-06, 4.7300000000083386e-07, 7.736000000001242e-06, 4.860000000009301e-07], 'time': [0.019720042, 0.019720514, 0.019726069, 0.019726542, 0.019733236, 0.019733708, 0.019741972, 0.019742444, 0.019749264, 0.019749736, 0.019759667, 0.019760139, 0.019768181, 0.019768653, 0.019773681, 0.019774167, 0.019778167, 0.019778639, 0.019787722, 0.019788208, 0.019792708, 0.019793194, 0.019802181, 0.019802653, 0.019811056, 0.019811528, 0.019820375, 0.019820847, 0.019827125, 0.019827611, 0.019833806, 0.019834278, 0.019840125, 0.019840611, 0.019848444, 0.019848931, 0.019856347, 0.019856833, 0.019866236, 0.019866708, 0.019871736, 0.019872222, 0.019880708, 0.019881181, 0.019886514, 0.019886986, 0.019893167, 0.019893639, 0.019899292, 0.019899778, 0.019904181, 0.019904667, 0.019913806, 0.019914278, 0.019921347, 0.019921819, 0.01992875, 0.019929222, 0.019938306, 0.019938778, 0.019944111, 0.019944597, 0.019954111, 0.019954583, 0.019961917, 0.019962389, 0.019967931, 0.019968403, 0.019976361, 0.019976833, 0.019986333, 0.019986819, 0.019997153, 0.019997625, 0.0200035, 0.020003972, 0.020011917, 0.020012389, 0.020016819, 0.020017292, 0.020022208, 0.020022694, 0.020027833, 0.020028306, 0.020035, 0.020035472, 0.020044986, 0.020045458, 0.020051542, 0.020052014, 0.020061625, 0.020062097, 0.020070333, 0.020070806, 0.020075139, 0.020075625, 0.020082944, 0.020083417, 0.020091153, 0.020091639], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'diff': [0, 4.720000000013602e-07, 5.554999999997368e-06, 4.7300000000083386e-07, 6.694000000001532e-06, 4.7199999999789077e-07, 8.264000000000882e-06, 4.720000000013602e-07, 6.819999999997661e-06, 4.720000000013602e-07, 9.931000000001217e-06, 4.7199999999789077e-07, 8.041999999999772e-06, 4.720000000013602e-07, 5.028000000000671e-06, 4.859999999974607e-07, 4.000000000000531e-06, 4.720000000013602e-07, 9.083000000000008e-06, 4.860000000009301e-07, 4.4999999999975615e-06, 4.860000000009301e-07, 8.986999999998496e-06, 4.720000000013602e-07, 8.403000000000577e-06, 4.7199999999789077e-07, 8.847000000002797e-06, 4.7199999999789077e-07, 6.278000000001921e-06, 4.859999999974607e-07, 6.195000000000506e-06, 4.720000000013602e-07, 5.846999999999797e-06, 4.860000000009301e-07, 7.832999999998758e-06, 4.870000000004038e-07, 7.415999999999673e-06, 4.860000000009301e-07, 9.402999999998107e-06, 4.720000000013602e-07, 5.028000000000671e-06, 4.859999999974607e-07, 8.486000000001992e-06, 4.7300000000083386e-07, 5.332999999999727e-06, 4.7199999999789077e-07, 6.181000000000936e-06, 4.720000000013602e-07, 5.6529999999978264e-06, 4.860000000009301e-07, 4.403000000000046e-06, 4.860000000009301e-07, 9.138999999998287e-06, 4.720000000013602e-07, 7.068999999998438e-06, 4.720000000013602e-07, 6.930999999998216e-06, 4.720000000013602e-07, 9.083999999999481e-06, 4.720000000013602e-07, 5.332999999999727e-06, 4.860000000009301e-07, 9.513999999998662e-06, 4.720000000013602e-07, 7.333999999997731e-06, 4.720000000013602e-07, 5.542000000000741e-06, 4.7199999999789077e-07, 7.958000000002352e-06, 4.7199999999789077e-07, 9.499999999999093e-06, 4.860000000009301e-07, 1.0334000000000731e-05, 4.720000000013602e-07, 5.874999999998937e-06, 4.7199999999789077e-07, 7.945000000002256e-06, 4.7199999999789077e-07, 4.430000000003181e-06, 4.729999999973644e-07, 4.916000000000642e-06, 4.860000000009301e-07, 5.1389999999977565e-06, 4.7300000000083386e-07, 6.694000000001532e-06, 4.7199999999789077e-07, 9.514000000002132e-06, 4.7199999999789077e-07, 6.0839999999999506e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.720000000013602e-07, 8.235999999998272e-06, 4.7300000000083386e-07, 4.332999999998727e-06, 4.860000000009301e-07, 7.318999999998688e-06, 4.7300000000083386e-07, 7.736000000001242e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:42.117" endtime="20201112 09:53:42.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.113" endtime="20201112 09:53:42.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:42.125" level="INFO">${RESULT} = [{'time': 0.019720514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019726542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:42.122" endtime="20201112 09:53:42.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:42.138" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:42.126" endtime="20201112 09:53:42.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.143" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:42.142" endtime="20201112 09:53:42.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.145" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 09:53:42.144" endtime="20201112 09:53:42.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.139" endtime="20201112 09:53:42.146"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.148" endtime="20201112 09:53:42.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:42.152" endtime="20201112 09:53:42.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.150" endtime="20201112 09:53:42.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.147" endtime="20201112 09:53:42.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.739" endtime="20201112 09:53:42.172"></status>
</kw>
<msg timestamp="20201112 09:53:42.173" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.180" endtime="20201112 09:53:42.198"></status>
</kw>
<msg timestamp="20201112 09:53:42.198" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:42.179" endtime="20201112 09:53:42.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.201" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:42.199" endtime="20201112 09:53:42.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.202" endtime="20201112 09:53:42.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.176" endtime="20201112 09:53:42.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.174" endtime="20201112 09:53:42.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.212" endtime="20201112 09:53:42.501"></status>
</kw>
<msg timestamp="20201112 09:53:42.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022276153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022276639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:42.210" endtime="20201112 09:53:42.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022276153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022276639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:42.505" endtime="20201112 09:53:42.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.514" endtime="20201112 09:53:42.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.207" endtime="20201112 09:53:42.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.205" endtime="20201112 09:53:42.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.520" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:42.519" endtime="20201112 09:53:42.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.525" level="INFO">VALUE: [{'time': 0.022276153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022276639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022281361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.022281833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022287611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.022288083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022295833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.022296306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022300944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.638000000001252e-06, 'source_diff': 4.638000000001252e-06}, {'time': 0.022301417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022309333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.916000000000173e-06, 'source_diff': 7.916000000000173e-06}, {'time': 0.022309819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.02231475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.022315222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022319431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.209000000001545e-06, 'source_diff': 4.209000000001545e-06}, {'time': 0.022319903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022324722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.819000000003126e-06, 'source_diff': 4.819000000003126e-06}, {'time': 0.022325208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022332319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.022332792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022340958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166000000000423e-06, 'source_diff': 8.166000000000423e-06}, {'time': 0.022341431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022345778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.02234625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022353139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.022353611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022362069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.022362542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022371014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.472000000002422e-06, 'source_diff': 8.472000000002422e-06}, {'time': 0.022371486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022379236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.022379708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022386292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.583999999996981e-06, 'source_diff': 6.583999999996981e-06}, {'time': 0.022386778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022395764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.022396236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022405958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722000000000203e-06, 'source_diff': 9.722000000000203e-06}, {'time': 0.022406431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022412194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.762999999998908e-06, 'source_diff': 5.762999999998908e-06}, {'time': 0.022412667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022418431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.022418917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022428417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.499999999999093e-06, 'source_diff': 9.499999999999093e-06}, {'time': 0.022428889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022438792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.902999999998607e-06, 'source_diff': 9.902999999998607e-06}, {'time': 0.022439278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022449181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.902999999998607e-06, 'source_diff': 9.902999999998607e-06}, {'time': 0.022449653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022459986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333000000001258e-05, 'source_diff': 1.0333000000001258e-05}, {'time': 0.022460458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022467125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.667000000001866e-06, 'source_diff': 6.667000000001866e-06}, {'time': 0.022467611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022472333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.022472806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022479792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.985999999997022e-06, 'source_diff': 6.985999999997022e-06}, {'time': 0.022480278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022489139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.022489611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022493708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.022494194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022502972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.022503444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022510264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.819999999997661e-06, 'source_diff': 6.819999999997661e-06}, {'time': 0.022510736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0225195, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.022519986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022530167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0181000000001467e-05, 'source_diff': 1.0181000000001467e-05}, {'time': 0.022530639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022536139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.022536625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022541972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.022542444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022548931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.487000000002935e-06, 'source_diff': 6.487000000002935e-06}, {'time': 0.022549417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022559333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916000000002173e-06, 'source_diff': 9.916000000002173e-06}, {'time': 0.022559806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022567361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.554999999999368e-06, 'source_diff': 7.554999999999368e-06}, {'time': 0.022567833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022573625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.022574097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022583778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.680999999997497e-06, 'source_diff': 9.680999999997497e-06}, {'time': 0.02258425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022588375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.022588847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022594875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.022595347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022602403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.056000000001811e-06, 'source_diff': 7.056000000001811e-06}, {'time': 0.022602875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022607097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.022607569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022612167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.59799999999802e-06, 'source_diff': 4.59799999999802e-06}, {'time': 0.022612653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022620083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.429999999999243e-06, 'source_diff': 7.429999999999243e-06}, {'time': 0.022620556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022628417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.022628889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022633431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.022633903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022639319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.416000000001142e-06, 'source_diff': 5.416000000001142e-06}, {'time': 0.022639792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:42.521" endtime="20201112 09:53:42.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.517" endtime="20201112 09:53:42.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:42.551" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:42.528" endtime="20201112 09:53:42.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.555" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:42.554" endtime="20201112 09:53:42.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.559" level="INFO">VALUE: {'sourcesource_diff': [0, 4.860000000009301e-07, 4.721999999998672e-06, 4.720000000013602e-07, 5.7779999999979514e-06, 4.720000000013602e-07, 7.750000000000812e-06, 4.729999999973644e-07, 4.638000000001252e-06, 4.7300000000083386e-07, 7.916000000000173e-06, 4.860000000009301e-07, 4.930999999999686e-06, 4.7199999999789077e-07, 4.209000000001545e-06, 4.7199999999789077e-07, 4.819000000003126e-06, 4.859999999974607e-07, 7.111000000000617e-06, 4.7300000000083386e-07, 8.166000000000423e-06, 4.729999999973644e-07, 4.347000000001766e-06, 4.720000000013602e-07, 6.888999999999507e-06, 4.7199999999789077e-07, 8.457999999999383e-06, 4.7300000000083386e-07, 8.472000000002422e-06, 4.7199999999789077e-07, 7.750000000000812e-06, 4.720000000013602e-07, 6.583999999996981e-06, 4.860000000009301e-07, 8.985999999999023e-06, 4.720000000013602e-07, 9.722000000000203e-06, 4.7300000000083386e-07, 5.762999999998908e-06, 4.7300000000083386e-07, 5.7639999999983815e-06, 4.860000000009301e-07, 9.499999999999093e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.860000000009301e-07, 9.902999999998607e-06, 4.720000000013602e-07, 1.0333000000001258e-05, 4.7199999999789077e-07, 6.667000000001866e-06, 4.859999999974607e-07, 4.722000000002141e-06, 4.7300000000083386e-07, 6.985999999997022e-06, 4.860000000009301e-07, 8.860999999998898e-06, 4.720000000013602e-07, 4.097000000001516e-06, 4.859999999974607e-07, 8.778000000000952e-06, 4.720000000013602e-07, 6.819999999997661e-06, 4.720000000013602e-07, 8.764000000001382e-06, 4.859999999974607e-07, 1.0181000000001467e-05, 4.720000000013602e-07, 5.499999999998562e-06, 4.860000000009301e-07, 5.346999999999297e-06, 4.7199999999789077e-07, 6.487000000002935e-06, 4.859999999974607e-07, 9.916000000002173e-06, 4.7300000000083386e-07, 7.554999999999368e-06, 4.7199999999789077e-07, 5.792000000000991e-06, 4.720000000013602e-07, 9.680999999997497e-06, 4.720000000013602e-07, 4.125000000000656e-06, 4.7199999999789077e-07, 6.028000000001671e-06, 4.7199999999789077e-07, 7.056000000001811e-06, 4.720000000013602e-07, 4.221999999998172e-06, 4.720000000013602e-07, 4.59799999999802e-06, 4.860000000009301e-07, 7.429999999999243e-06, 4.7300000000083386e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 4.541999999999741e-06, 4.720000000013602e-07, 5.416000000001142e-06, 4.729999999973644e-07], 'time': [0.022276153, 0.022276639, 0.022281361, 0.022281833, 0.022287611, 0.022288083, 0.022295833, 0.022296306, 0.022300944, 0.022301417, 0.022309333, 0.022309819, 0.02231475, 0.022315222, 0.022319431, 0.022319903, 0.022324722, 0.022325208, 0.022332319, 0.022332792, 0.022340958, 0.022341431, 0.022345778, 0.02234625, 0.022353139, 0.022353611, 0.022362069, 0.022362542, 0.022371014, 0.022371486, 0.022379236, 0.022379708, 0.022386292, 0.022386778, 0.022395764, 0.022396236, 0.022405958, 0.022406431, 0.022412194, 0.022412667, 0.022418431, 0.022418917, 0.022428417, 0.022428889, 0.022438792, 0.022439278, 0.022449181, 0.022449653, 0.022459986, 0.022460458, 0.022467125, 0.022467611, 0.022472333, 0.022472806, 0.022479792, 0.022480278, 0.022489139, 0.022489611, 0.022493708, 0.022494194, 0.022502972, 0.022503444, 0.022510264, 0.022510736, 0.0225195, 0.022519986, 0.022530167, 0.022530639, 0.022536139, 0.022536625, 0.022541972, 0.022542444, 0.022548931, 0.022549417, 0.022559333, 0.022559806, 0.022567361, 0.022567833, 0.022573625, 0.022574097, 0.022583778, 0.02258425, 0.022588375, 0.022588847, 0.022594875, 0.022595347, 0.022602403, 0.022602875, 0.022607097, 0.022607569, 0.022612167, 0.022612653, 0.022620083, 0.022620556, 0.022628417, 0.022628889, 0.022633431, 0.022633903, 0.022639319, 0.022639792], 'eventdiff': [0, 4.860000000009301e-07, 4.721999999998672e-06, 4.720000000013602e-07, 5.7779999999979514e-06, 4.720000000013602e-07, 7.750000000000812e-06, 4.729999999973644e-07, 4.638000000001252e-06, 4.7300000000083386e-07, 7.916000000000173e-06, 4.860000000009301e-07, 4.930999999999686e-06, 4.7199999999789077e-07, 4.209000000001545e-06, 4.7199999999789077e-07, 4.819000000003126e-06, 4.859999999974607e-07, 7.111000000000617e-06, 4.7300000000083386e-07, 8.166000000000423e-06, 4.729999999973644e-07, 4.347000000001766e-06, 4.720000000013602e-07, 6.888999999999507e-06, 4.7199999999789077e-07, 8.457999999999383e-06, 4.7300000000083386e-07, 8.472000000002422e-06, 4.7199999999789077e-07, 7.750000000000812e-06, 4.720000000013602e-07, 6.583999999996981e-06, 4.860000000009301e-07, 8.985999999999023e-06, 4.720000000013602e-07, 9.722000000000203e-06, 4.7300000000083386e-07, 5.762999999998908e-06, 4.7300000000083386e-07, 5.7639999999983815e-06, 4.860000000009301e-07, 9.499999999999093e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.860000000009301e-07, 9.902999999998607e-06, 4.720000000013602e-07, 1.0333000000001258e-05, 4.7199999999789077e-07, 6.667000000001866e-06, 4.859999999974607e-07, 4.722000000002141e-06, 4.7300000000083386e-07, 6.985999999997022e-06, 4.860000000009301e-07, 8.860999999998898e-06, 4.720000000013602e-07, 4.097000000001516e-06, 4.859999999974607e-07, 8.778000000000952e-06, 4.720000000013602e-07, 6.819999999997661e-06, 4.720000000013602e-07, 8.764000000001382e-06, 4.859999999974607e-07, 1.0181000000001467e-05, 4.720000000013602e-07, 5.499999999998562e-06, 4.860000000009301e-07, 5.346999999999297e-06, 4.7199999999789077e-07, 6.487000000002935e-06, 4.859999999974607e-07, 9.916000000002173e-06, 4.7300000000083386e-07, 7.554999999999368e-06, 4.7199999999789077e-07, 5.792000000000991e-06, 4.720000000013602e-07, 9.680999999997497e-06, 4.720000000013602e-07, 4.125000000000656e-06, 4.7199999999789077e-07, 6.028000000001671e-06, 4.7199999999789077e-07, 7.056000000001811e-06, 4.720000000013602e-07, 4.221999999998172e-06, 4.720000000013602e-07, 4.59799999999802e-06, 4.860000000009301e-07, 7.429999999999243e-06, 4.7300000000083386e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 4.541999999999741e-06, 4.720000000013602e-07, 5.416000000001142e-06, 4.729999999973644e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:42.556" endtime="20201112 09:53:42.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.552" endtime="20201112 09:53:42.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:42.564" level="INFO">${RESULT} = [{'time': 0.022276639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022281833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:42.561" endtime="20201112 09:53:42.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:42.578" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:42.565" endtime="20201112 09:53:42.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.582" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:42.581" endtime="20201112 09:53:42.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.584" level="INFO">VALUE: [4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07]</msg>
<status status="PASS" starttime="20201112 09:53:42.583" endtime="20201112 09:53:42.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.579" endtime="20201112 09:53:42.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.588" endtime="20201112 09:53:42.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:42.592" endtime="20201112 09:53:42.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.589" endtime="20201112 09:53:42.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.586" endtime="20201112 09:53:42.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.173" endtime="20201112 09:53:42.612"></status>
</kw>
<msg timestamp="20201112 09:53:42.613" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.620" endtime="20201112 09:53:42.634"></status>
</kw>
<msg timestamp="20201112 09:53:42.635" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:42.619" endtime="20201112 09:53:42.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.637" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:42.636" endtime="20201112 09:53:42.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.638" endtime="20201112 09:53:42.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.616" endtime="20201112 09:53:42.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.615" endtime="20201112 09:53:42.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.647" endtime="20201112 09:53:42.932"></status>
</kw>
<msg timestamp="20201112 09:53:42.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019289889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019290361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:42.646" endtime="20201112 09:53:42.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019289889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019290361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:42.936" endtime="20201112 09:53:42.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.944" endtime="20201112 09:53:42.946"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.643" endtime="20201112 09:53:42.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.641" endtime="20201112 09:53:42.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.951" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:42.950" endtime="20201112 09:53:42.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.956" level="INFO">VALUE: [{'time': 0.019289889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019290361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019300792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0431000000001717e-05, 'source_diff': 1.0431000000001717e-05}, {'time': 0.019301264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019308028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.764000000002851e-06, 'source_diff': 6.764000000002851e-06}, {'time': 0.0193085, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019314306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}, {'time': 0.019314792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019323361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.019323833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019327944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.019328417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019337097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.019337569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019345083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.019345569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019354042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.472999999998426e-06, 'source_diff': 8.472999999998426e-06}, {'time': 0.019354514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019362139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.019362625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019368486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.019368958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019373083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.019373556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019378806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.019379278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019385556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.278000000001921e-06, 'source_diff': 6.278000000001921e-06}, {'time': 0.019386028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019393139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.019393611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019401264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.019401736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019406236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.019406722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.0194155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.777999999997482e-06, 'source_diff': 8.777999999997482e-06}, {'time': 0.019415972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019424847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.019425333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019430778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.444999999999756e-06, 'source_diff': 5.444999999999756e-06}, {'time': 0.01943125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019441611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.019442083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019451958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.019452431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019460208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777000000000478e-06, 'source_diff': 7.777000000000478e-06}, {'time': 0.019460694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019470111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.416999999997677e-06, 'source_diff': 9.416999999997677e-06}, {'time': 0.019470583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019478222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.019478694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019486833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.138999999997287e-06, 'source_diff': 8.138999999997287e-06}, {'time': 0.019487319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019497292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972999999999926e-06, 'source_diff': 9.972999999999926e-06}, {'time': 0.019497764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019504736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.019505208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01951275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.019513222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019518042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.019518528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019525528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.019526014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019533361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3469999999978275e-06, 'source_diff': 7.3469999999978275e-06}, {'time': 0.019533833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019542694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.019543181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019547292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.019547764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019551639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.019552125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019559653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.019560125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019566417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.019566889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019573389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.019573861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019580458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5969999999970774e-06, 'source_diff': 6.5969999999970774e-06}, {'time': 0.019580931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019589514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.019589986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019597111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.019597583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019606042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.459000000002326e-06, 'source_diff': 8.459000000002326e-06}, {'time': 0.019606528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019613639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.110999999997147e-06, 'source_diff': 7.110999999997147e-06}, {'time': 0.019614111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019621375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.019621847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019629444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5969999999980775e-06, 'source_diff': 7.5969999999980775e-06}, {'time': 0.019629931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019634028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.0196345, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019641722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.222000000001172e-06, 'source_diff': 7.222000000001172e-06}, {'time': 0.019642208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019652333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.019652819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019660236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.417000000002616e-06, 'source_diff': 7.417000000002616e-06}, {'time': 0.019660722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019669708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986000000002492e-06, 'source_diff': 8.986000000002492e-06}, {'time': 0.019670181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:42.952" endtime="20201112 09:53:42.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.948" endtime="20201112 09:53:42.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:42.982" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:42.959" endtime="20201112 09:53:42.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.986" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:42.985" endtime="20201112 09:53:42.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.990" level="INFO">VALUE: {'sourcesource_diff': [0, 4.7199999999789077e-07, 1.0431000000001717e-05, 4.7199999999789077e-07, 6.764000000002851e-06, 4.7199999999789077e-07, 5.806000000000561e-06, 4.860000000009301e-07, 8.568999999999938e-06, 4.7199999999789077e-07, 4.111000000001086e-06, 4.7300000000083386e-07, 8.680000000000493e-06, 4.7199999999789077e-07, 7.514000000000132e-06, 4.860000000009301e-07, 8.472999999998426e-06, 4.720000000013602e-07, 7.625000000000687e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.7199999999789077e-07, 4.125000000000656e-06, 4.7300000000083386e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 6.278000000001921e-06, 4.7199999999789077e-07, 7.111000000000617e-06, 4.720000000013602e-07, 7.652999999999827e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 4.860000000009301e-07, 8.777999999997482e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.860000000009301e-07, 5.444999999999756e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7199999999789077e-07, 9.874999999999468e-06, 4.7300000000083386e-07, 7.777000000000478e-06, 4.860000000009301e-07, 9.416999999997677e-06, 4.720000000013602e-07, 7.639000000000257e-06, 4.720000000013602e-07, 8.138999999997287e-06, 4.860000000009301e-07, 9.972999999999926e-06, 4.720000000013602e-07, 6.972000000000922e-06, 4.7199999999789077e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 4.8199999999991305e-06, 4.860000000009301e-07, 7.000000000000062e-06, 4.860000000009301e-07, 7.3469999999978275e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.870000000004038e-07, 4.111000000001086e-06, 4.7199999999789077e-07, 3.875000000000406e-06, 4.860000000009301e-07, 7.527999999999702e-06, 4.720000000013602e-07, 6.291999999998021e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.720000000013602e-07, 6.5969999999970774e-06, 4.7300000000083386e-07, 8.582999999999508e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.7199999999789077e-07, 8.459000000002326e-06, 4.860000000009301e-07, 7.110999999997147e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.720000000013602e-07, 7.5969999999980775e-06, 4.870000000004038e-07, 4.097000000001516e-06, 4.7199999999789077e-07, 7.222000000001172e-06, 4.860000000009301e-07, 1.0124999999999718e-05, 4.859999999974607e-07, 7.417000000002616e-06, 4.859999999974607e-07, 8.986000000002492e-06, 4.729999999973644e-07], 'time': [0.019289889, 0.019290361, 0.019300792, 0.019301264, 0.019308028, 0.0193085, 0.019314306, 0.019314792, 0.019323361, 0.019323833, 0.019327944, 0.019328417, 0.019337097, 0.019337569, 0.019345083, 0.019345569, 0.019354042, 0.019354514, 0.019362139, 0.019362625, 0.019368486, 0.019368958, 0.019373083, 0.019373556, 0.019378806, 0.019379278, 0.019385556, 0.019386028, 0.019393139, 0.019393611, 0.019401264, 0.019401736, 0.019406236, 0.019406722, 0.0194155, 0.019415972, 0.019424847, 0.019425333, 0.019430778, 0.01943125, 0.019441611, 0.019442083, 0.019451958, 0.019452431, 0.019460208, 0.019460694, 0.019470111, 0.019470583, 0.019478222, 0.019478694, 0.019486833, 0.019487319, 0.019497292, 0.019497764, 0.019504736, 0.019505208, 0.01951275, 0.019513222, 0.019518042, 0.019518528, 0.019525528, 0.019526014, 0.019533361, 0.019533833, 0.019542694, 0.019543181, 0.019547292, 0.019547764, 0.019551639, 0.019552125, 0.019559653, 0.019560125, 0.019566417, 0.019566889, 0.019573389, 0.019573861, 0.019580458, 0.019580931, 0.019589514, 0.019589986, 0.019597111, 0.019597583, 0.019606042, 0.019606528, 0.019613639, 0.019614111, 0.019621375, 0.019621847, 0.019629444, 0.019629931, 0.019634028, 0.0196345, 0.019641722, 0.019642208, 0.019652333, 0.019652819, 0.019660236, 0.019660722, 0.019669708, 0.019670181], 'eventdiff': [0, 4.7199999999789077e-07, 1.0431000000001717e-05, 4.7199999999789077e-07, 6.764000000002851e-06, 4.7199999999789077e-07, 5.806000000000561e-06, 4.860000000009301e-07, 8.568999999999938e-06, 4.7199999999789077e-07, 4.111000000001086e-06, 4.7300000000083386e-07, 8.680000000000493e-06, 4.7199999999789077e-07, 7.514000000000132e-06, 4.860000000009301e-07, 8.472999999998426e-06, 4.720000000013602e-07, 7.625000000000687e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.7199999999789077e-07, 4.125000000000656e-06, 4.7300000000083386e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 6.278000000001921e-06, 4.7199999999789077e-07, 7.111000000000617e-06, 4.720000000013602e-07, 7.652999999999827e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 4.860000000009301e-07, 8.777999999997482e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.860000000009301e-07, 5.444999999999756e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7199999999789077e-07, 9.874999999999468e-06, 4.7300000000083386e-07, 7.777000000000478e-06, 4.860000000009301e-07, 9.416999999997677e-06, 4.720000000013602e-07, 7.639000000000257e-06, 4.720000000013602e-07, 8.138999999997287e-06, 4.860000000009301e-07, 9.972999999999926e-06, 4.720000000013602e-07, 6.972000000000922e-06, 4.7199999999789077e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 4.8199999999991305e-06, 4.860000000009301e-07, 7.000000000000062e-06, 4.860000000009301e-07, 7.3469999999978275e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.870000000004038e-07, 4.111000000001086e-06, 4.7199999999789077e-07, 3.875000000000406e-06, 4.860000000009301e-07, 7.527999999999702e-06, 4.720000000013602e-07, 6.291999999998021e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.720000000013602e-07, 6.5969999999970774e-06, 4.7300000000083386e-07, 8.582999999999508e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.7199999999789077e-07, 8.459000000002326e-06, 4.860000000009301e-07, 7.110999999997147e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.720000000013602e-07, 7.5969999999980775e-06, 4.870000000004038e-07, 4.097000000001516e-06, 4.7199999999789077e-07, 7.222000000001172e-06, 4.860000000009301e-07, 1.0124999999999718e-05, 4.859999999974607e-07, 7.417000000002616e-06, 4.859999999974607e-07, 8.986000000002492e-06, 4.729999999973644e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:42.987" endtime="20201112 09:53:42.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.983" endtime="20201112 09:53:42.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:42.996" level="INFO">${RESULT} = [{'time': 0.019290361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019301264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:42.992" endtime="20201112 09:53:42.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:43.009" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:42.997" endtime="20201112 09:53:43.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.013" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:43.012" endtime="20201112 09:53:43.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.016" level="INFO">VALUE: [4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.729999999973644e-07]</msg>
<status status="PASS" starttime="20201112 09:53:43.014" endtime="20201112 09:53:43.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.010" endtime="20201112 09:53:43.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.019" endtime="20201112 09:53:43.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:43.022" endtime="20201112 09:53:43.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.020" endtime="20201112 09:53:43.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.017" endtime="20201112 09:53:43.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.613" endtime="20201112 09:53:43.043"></status>
</kw>
<msg timestamp="20201112 09:53:43.043" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.051" endtime="20201112 09:53:43.067"></status>
</kw>
<msg timestamp="20201112 09:53:43.068" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:43.049" endtime="20201112 09:53:43.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.070" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:43.069" endtime="20201112 09:53:43.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.071" endtime="20201112 09:53:43.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.047" endtime="20201112 09:53:43.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.045" endtime="20201112 09:53:43.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.080" endtime="20201112 09:53:43.365"></status>
</kw>
<msg timestamp="20201112 09:53:43.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021061403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021061875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:43.078" endtime="20201112 09:53:43.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021061403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021061875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:43.369" endtime="20201112 09:53:43.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.378" endtime="20201112 09:53:43.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.076" endtime="20201112 09:53:43.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.074" endtime="20201112 09:53:43.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.384" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:43.383" endtime="20201112 09:53:43.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.389" level="INFO">VALUE: [{'time': 0.021061403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021061875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02106825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.021068736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.02107575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.021076222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021086653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0431000000001717e-05, 'source_diff': 1.0431000000001717e-05}, {'time': 0.021087125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021093403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.021093875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02110025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.021100722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021104931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.209000000001545e-06, 'source_diff': 4.209000000001545e-06}, {'time': 0.021105403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021113319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.916000000000173e-06, 'source_diff': 7.916000000000173e-06}, {'time': 0.021113806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.021124028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0222000000000703e-05, 'source_diff': 1.0222000000000703e-05}, {'time': 0.0211245, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021132944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.443999999999813e-06, 'source_diff': 8.443999999999813e-06}, {'time': 0.021133417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021140417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.021140889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021149556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.021150042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021156028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.0211565, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021166847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0346999999997358e-05, 'source_diff': 1.0346999999997358e-05}, {'time': 0.021167319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021172444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1249999999981866e-06, 'source_diff': 5.1249999999981866e-06}, {'time': 0.021172917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021177444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527000000000697e-06, 'source_diff': 4.527000000000697e-06}, {'time': 0.021177917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021182639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.021183111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021188153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.021188625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021194097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.021194569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021200417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8479999999992704e-06, 'source_diff': 5.8479999999992704e-06}, {'time': 0.021200903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021207597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.021208069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021218028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.959000000000356e-06, 'source_diff': 9.959000000000356e-06}, {'time': 0.0212185, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021222681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.021223153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02122975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5969999999970774e-06, 'source_diff': 6.5969999999970774e-06}, {'time': 0.021230222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021239944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722000000000203e-06, 'source_diff': 9.722000000000203e-06}, {'time': 0.021240417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021248889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.021249361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02125825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.021258722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021264694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.021265167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021269375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.207999999998602e-06, 'source_diff': 4.207999999998602e-06}, {'time': 0.021269847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021279986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.021280458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021290375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.917000000001647e-06, 'source_diff': 9.917000000001647e-06}, {'time': 0.021290861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021298611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.749999999997342e-06, 'source_diff': 7.749999999997342e-06}, {'time': 0.021299083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02130475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.021305222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021310139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.021310611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021315472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.021315944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021323653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.709000000001576e-06, 'source_diff': 7.709000000001576e-06}, {'time': 0.021324139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021333875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.735999999999773e-06, 'source_diff': 9.735999999999773e-06}, {'time': 0.021334347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021339056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7089999999985754e-06, 'source_diff': 4.7089999999985754e-06}, {'time': 0.021339528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021348514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.021349, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021358917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.917000000001647e-06, 'source_diff': 9.917000000001647e-06}, {'time': 0.021359389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021368694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.305000000001118e-06, 'source_diff': 9.305000000001118e-06}, {'time': 0.021369167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021376917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.749999999997342e-06, 'source_diff': 7.749999999997342e-06}, {'time': 0.021377389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021385958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.021386431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021391792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.021392264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021399472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2079999999981326e-06, 'source_diff': 7.2079999999981326e-06}, {'time': 0.021399958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021410083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.021410556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021417069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.512999999999658e-06, 'source_diff': 6.512999999999658e-06}, {'time': 0.021417542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021425694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.151999999997384e-06, 'source_diff': 8.151999999997384e-06}, {'time': 0.021426167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021430486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.318999999999157e-06, 'source_diff': 4.318999999999157e-06}, {'time': 0.021430958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021440972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013999999999162e-05, 'source_diff': 1.0013999999999162e-05}, {'time': 0.021441444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:43.385" endtime="20201112 09:53:43.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.381" endtime="20201112 09:53:43.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:43.416" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:43.392" endtime="20201112 09:53:43.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.420" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:43.419" endtime="20201112 09:53:43.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.424" level="INFO">VALUE: {'sourcesource_diff': [0, 4.720000000013602e-07, 6.374999999999437e-06, 4.860000000009301e-07, 7.013999999999632e-06, 4.7199999999789077e-07, 1.0431000000001717e-05, 4.720000000013602e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.7199999999789077e-07, 4.209000000001545e-06, 4.7199999999789077e-07, 7.916000000000173e-06, 4.870000000004038e-07, 1.0222000000000703e-05, 4.720000000013602e-07, 8.443999999999813e-06, 4.7300000000083386e-07, 7.000000000000062e-06, 4.7199999999789077e-07, 8.667000000000397e-06, 4.860000000009301e-07, 5.985999999999492e-06, 4.720000000013602e-07, 1.0346999999997358e-05, 4.720000000013602e-07, 5.1249999999981866e-06, 4.7300000000083386e-07, 4.527000000000697e-06, 4.7300000000083386e-07, 4.721999999998672e-06, 4.720000000013602e-07, 5.042000000000241e-06, 4.7199999999789077e-07, 5.471999999999422e-06, 4.720000000013602e-07, 5.8479999999992704e-06, 4.860000000009301e-07, 6.694000000001532e-06, 4.7199999999789077e-07, 9.959000000000356e-06, 4.720000000013602e-07, 4.1809999999989356e-06, 4.720000000013602e-07, 6.5969999999970774e-06, 4.720000000013602e-07, 9.722000000000203e-06, 4.7300000000083386e-07, 8.471999999998953e-06, 4.720000000013602e-07, 8.888999999998037e-06, 4.720000000013602e-07, 5.971999999999922e-06, 4.7300000000083386e-07, 4.207999999998602e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.7199999999789077e-07, 9.917000000001647e-06, 4.860000000009301e-07, 7.749999999997342e-06, 4.720000000013602e-07, 5.667000000000866e-06, 4.7199999999789077e-07, 4.917000000000116e-06, 4.720000000013602e-07, 4.860999999998367e-06, 4.720000000013602e-07, 7.709000000001576e-06, 4.859999999974607e-07, 9.735999999999773e-06, 4.720000000013602e-07, 4.7089999999985754e-06, 4.720000000013602e-07, 8.985999999999023e-06, 4.860000000009301e-07, 9.917000000001647e-06, 4.7199999999789077e-07, 9.305000000001118e-06, 4.7300000000083386e-07, 7.749999999997342e-06, 4.720000000013602e-07, 8.568999999999938e-06, 4.7300000000083386e-07, 5.360999999998867e-06, 4.720000000013602e-07, 7.2079999999981326e-06, 4.860000000009301e-07, 1.0124999999999718e-05, 4.7300000000083386e-07, 6.512999999999658e-06, 4.7300000000083386e-07, 8.151999999997384e-06, 4.7300000000083386e-07, 4.318999999999157e-06, 4.720000000013602e-07, 1.0013999999999162e-05, 4.720000000013602e-07], 'time': [0.021061403, 0.021061875, 0.02106825, 0.021068736, 0.02107575, 0.021076222, 0.021086653, 0.021087125, 0.021093403, 0.021093875, 0.02110025, 0.021100722, 0.021104931, 0.021105403, 0.021113319, 0.021113806, 0.021124028, 0.0211245, 0.021132944, 0.021133417, 0.021140417, 0.021140889, 0.021149556, 0.021150042, 0.021156028, 0.0211565, 0.021166847, 0.021167319, 0.021172444, 0.021172917, 0.021177444, 0.021177917, 0.021182639, 0.021183111, 0.021188153, 0.021188625, 0.021194097, 0.021194569, 0.021200417, 0.021200903, 0.021207597, 0.021208069, 0.021218028, 0.0212185, 0.021222681, 0.021223153, 0.02122975, 0.021230222, 0.021239944, 0.021240417, 0.021248889, 0.021249361, 0.02125825, 0.021258722, 0.021264694, 0.021265167, 0.021269375, 0.021269847, 0.021279986, 0.021280458, 0.021290375, 0.021290861, 0.021298611, 0.021299083, 0.02130475, 0.021305222, 0.021310139, 0.021310611, 0.021315472, 0.021315944, 0.021323653, 0.021324139, 0.021333875, 0.021334347, 0.021339056, 0.021339528, 0.021348514, 0.021349, 0.021358917, 0.021359389, 0.021368694, 0.021369167, 0.021376917, 0.021377389, 0.021385958, 0.021386431, 0.021391792, 0.021392264, 0.021399472, 0.021399958, 0.021410083, 0.021410556, 0.021417069, 0.021417542, 0.021425694, 0.021426167, 0.021430486, 0.021430958, 0.021440972, 0.021441444], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'diff': [0, 4.720000000013602e-07, 6.374999999999437e-06, 4.860000000009301e-07, 7.013999999999632e-06, 4.7199999999789077e-07, 1.0431000000001717e-05, 4.720000000013602e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.7199999999789077e-07, 4.209000000001545e-06, 4.7199999999789077e-07, 7.916000000000173e-06, 4.870000000004038e-07, 1.0222000000000703e-05, 4.720000000013602e-07, 8.443999999999813e-06, 4.7300000000083386e-07, 7.000000000000062e-06, 4.7199999999789077e-07, 8.667000000000397e-06, 4.860000000009301e-07, 5.985999999999492e-06, 4.720000000013602e-07, 1.0346999999997358e-05, 4.720000000013602e-07, 5.1249999999981866e-06, 4.7300000000083386e-07, 4.527000000000697e-06, 4.7300000000083386e-07, 4.721999999998672e-06, 4.720000000013602e-07, 5.042000000000241e-06, 4.7199999999789077e-07, 5.471999999999422e-06, 4.720000000013602e-07, 5.8479999999992704e-06, 4.860000000009301e-07, 6.694000000001532e-06, 4.7199999999789077e-07, 9.959000000000356e-06, 4.720000000013602e-07, 4.1809999999989356e-06, 4.720000000013602e-07, 6.5969999999970774e-06, 4.720000000013602e-07, 9.722000000000203e-06, 4.7300000000083386e-07, 8.471999999998953e-06, 4.720000000013602e-07, 8.888999999998037e-06, 4.720000000013602e-07, 5.971999999999922e-06, 4.7300000000083386e-07, 4.207999999998602e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.7199999999789077e-07, 9.917000000001647e-06, 4.860000000009301e-07, 7.749999999997342e-06, 4.720000000013602e-07, 5.667000000000866e-06, 4.7199999999789077e-07, 4.917000000000116e-06, 4.720000000013602e-07, 4.860999999998367e-06, 4.720000000013602e-07, 7.709000000001576e-06, 4.859999999974607e-07, 9.735999999999773e-06, 4.720000000013602e-07, 4.7089999999985754e-06, 4.720000000013602e-07, 8.985999999999023e-06, 4.860000000009301e-07, 9.917000000001647e-06, 4.7199999999789077e-07, 9.305000000001118e-06, 4.7300000000083386e-07, 7.749999999997342e-06, 4.720000000013602e-07, 8.568999999999938e-06, 4.7300000000083386e-07, 5.360999999998867e-06, 4.720000000013602e-07, 7.2079999999981326e-06, 4.860000000009301e-07, 1.0124999999999718e-05, 4.7300000000083386e-07, 6.512999999999658e-06, 4.7300000000083386e-07, 8.151999999997384e-06, 4.7300000000083386e-07, 4.318999999999157e-06, 4.720000000013602e-07, 1.0013999999999162e-05, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:43.421" endtime="20201112 09:53:43.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.417" endtime="20201112 09:53:43.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:43.429" level="INFO">${RESULT} = [{'time': 0.021061875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021068736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:43.426" endtime="20201112 09:53:43.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:43.442" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:43.430" endtime="20201112 09:53:43.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.447" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:43.446" endtime="20201112 09:53:43.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.449" level="INFO">VALUE: [4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:53:43.448" endtime="20201112 09:53:43.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.443" endtime="20201112 09:53:43.450"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.452" endtime="20201112 09:53:43.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:43.456" endtime="20201112 09:53:43.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.454" endtime="20201112 09:53:43.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.451" endtime="20201112 09:53:43.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.044" endtime="20201112 09:53:43.476"></status>
</kw>
<msg timestamp="20201112 09:53:43.477" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.485" endtime="20201112 09:53:43.499"></status>
</kw>
<msg timestamp="20201112 09:53:43.499" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:43.483" endtime="20201112 09:53:43.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.502" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:43.500" endtime="20201112 09:53:43.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.503" endtime="20201112 09:53:43.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.480" endtime="20201112 09:53:43.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.478" endtime="20201112 09:53:43.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.512" endtime="20201112 09:53:43.801"></status>
</kw>
<msg timestamp="20201112 09:53:43.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019502361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019502833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:43.510" endtime="20201112 09:53:43.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019502361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019502833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:43.805" endtime="20201112 09:53:43.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.813" endtime="20201112 09:53:43.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.508" endtime="20201112 09:53:43.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.506" endtime="20201112 09:53:43.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.820" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:43.819" endtime="20201112 09:53:43.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.825" level="INFO">VALUE: [{'time': 0.019502361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019502833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019506639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.8059999999985605e-06, 'source_diff': 3.8059999999985605e-06}, {'time': 0.019507125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019517556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0430999999998247e-05, 'source_diff': 1.0430999999998247e-05}, {'time': 0.019518028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019523583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.019524056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019532708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.651999999997884e-06, 'source_diff': 8.651999999997884e-06}, {'time': 0.019533181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019540708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527000000000228e-06, 'source_diff': 7.527000000000228e-06}, {'time': 0.019541194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019547903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708999999997106e-06, 'source_diff': 6.708999999997106e-06}, {'time': 0.019548375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019557875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.499999999999093e-06, 'source_diff': 9.499999999999093e-06}, {'time': 0.019558347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019568375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.019568861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019578389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.019578861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019583597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.019584069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019589194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.019589667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019596889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2219999999977025e-06, 'source_diff': 7.2219999999977025e-06}, {'time': 0.019597361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019602292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.019602778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019611569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.790999999997579e-06, 'source_diff': 8.790999999997579e-06}, {'time': 0.019612042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019617917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.019618389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019627264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.019627736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019636667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.931000000000217e-06, 'source_diff': 8.931000000000217e-06}, {'time': 0.019637139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019641097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.019641569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019649736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166999999999897e-06, 'source_diff': 8.166999999999897e-06}, {'time': 0.019650208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019658764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.019659236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019663986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.750000000001281e-06, 'source_diff': 4.750000000001281e-06}, {'time': 0.019664458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019669181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.723000000001615e-06, 'source_diff': 4.723000000001615e-06}, {'time': 0.019669667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019674486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.819000000003126e-06, 'source_diff': 4.819000000003126e-06}, {'time': 0.019674972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019681264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.019681736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019688222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.019688708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019694264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.019694736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019698625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.019699097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019708306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.208999999999606e-06, 'source_diff': 9.208999999999606e-06}, {'time': 0.019708778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019713292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.019713778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019723708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.929999999998274e-06, 'source_diff': 9.929999999998274e-06}, {'time': 0.019724181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019733458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.276999999998509e-06, 'source_diff': 9.276999999998509e-06}, {'time': 0.019733931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019744347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0415999999999204e-05, 'source_diff': 1.0415999999999204e-05}, {'time': 0.019744819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019754208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.019754681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019764833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0151999999999384e-05, 'source_diff': 1.0151999999999384e-05}, {'time': 0.019765306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019769986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.679999999999962e-06, 'source_diff': 4.679999999999962e-06}, {'time': 0.019770458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019774972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.019775444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01978325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.805999999999091e-06, 'source_diff': 7.805999999999091e-06}, {'time': 0.019783722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019788181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.458999999998325e-06, 'source_diff': 4.458999999998325e-06}, {'time': 0.019788653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019793069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.019793542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019798806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.019799278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019806403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.019806875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019816486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.019816958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019823361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.403000000002046e-06, 'source_diff': 6.403000000002046e-06}, {'time': 0.019823833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019828542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.709000000002045e-06, 'source_diff': 4.709000000002045e-06}, {'time': 0.019829028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019836028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.019836514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019842375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.019842861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019851014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.019851486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019858819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.332999999998258e-06, 'source_diff': 7.332999999998258e-06}, {'time': 0.019859292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019865167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.019865639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:43.821" endtime="20201112 09:53:43.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.817" endtime="20201112 09:53:43.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:43.850" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:43.827" endtime="20201112 09:53:43.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.854" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:43.853" endtime="20201112 09:53:43.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.858" level="INFO">VALUE: {'sourcesource_diff': [0, 4.720000000013602e-07, 3.8059999999985605e-06, 4.860000000009301e-07, 1.0430999999998247e-05, 4.720000000013602e-07, 5.555000000000837e-06, 4.7300000000083386e-07, 8.651999999997884e-06, 4.7300000000083386e-07, 7.527000000000228e-06, 4.860000000009301e-07, 6.708999999997106e-06, 4.720000000013602e-07, 9.499999999999093e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.860000000009301e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 4.736000000001711e-06, 4.7199999999789077e-07, 5.125000000001656e-06, 4.7300000000083386e-07, 7.2219999999977025e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.860000000009301e-07, 8.790999999997579e-06, 4.7300000000083386e-07, 5.874999999998937e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 8.931000000000217e-06, 4.720000000013602e-07, 3.957999999998352e-06, 4.720000000013602e-07, 8.166999999999897e-06, 4.7199999999789077e-07, 8.555999999999842e-06, 4.720000000013602e-07, 4.750000000001281e-06, 4.7199999999789077e-07, 4.723000000001615e-06, 4.859999999974607e-07, 4.819000000003126e-06, 4.859999999974607e-07, 6.292000000001491e-06, 4.7199999999789077e-07, 6.485999999999992e-06, 4.860000000009301e-07, 5.556000000000311e-06, 4.720000000013602e-07, 3.888999999999976e-06, 4.7199999999789077e-07, 9.208999999999606e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.860000000009301e-07, 9.929999999998274e-06, 4.7300000000083386e-07, 9.276999999998509e-06, 4.7300000000083386e-07, 1.0415999999999204e-05, 4.720000000013602e-07, 9.388999999998537e-06, 4.7300000000083386e-07, 1.0151999999999384e-05, 4.7300000000083386e-07, 4.679999999999962e-06, 4.720000000013602e-07, 4.513999999997131e-06, 4.720000000013602e-07, 7.805999999999091e-06, 4.720000000013602e-07, 4.458999999998325e-06, 4.720000000013602e-07, 4.416000000000142e-06, 4.7300000000083386e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.7199999999789077e-07, 6.403000000002046e-06, 4.7199999999789077e-07, 4.709000000002045e-06, 4.859999999974607e-07, 7.000000000000062e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.720000000013602e-07, 7.332999999998258e-06, 4.7300000000083386e-07, 5.874999999998937e-06, 4.720000000013602e-07], 'time': [0.019502361, 0.019502833, 0.019506639, 0.019507125, 0.019517556, 0.019518028, 0.019523583, 0.019524056, 0.019532708, 0.019533181, 0.019540708, 0.019541194, 0.019547903, 0.019548375, 0.019557875, 0.019558347, 0.019568375, 0.019568861, 0.019578389, 0.019578861, 0.019583597, 0.019584069, 0.019589194, 0.019589667, 0.019596889, 0.019597361, 0.019602292, 0.019602778, 0.019611569, 0.019612042, 0.019617917, 0.019618389, 0.019627264, 0.019627736, 0.019636667, 0.019637139, 0.019641097, 0.019641569, 0.019649736, 0.019650208, 0.019658764, 0.019659236, 0.019663986, 0.019664458, 0.019669181, 0.019669667, 0.019674486, 0.019674972, 0.019681264, 0.019681736, 0.019688222, 0.019688708, 0.019694264, 0.019694736, 0.019698625, 0.019699097, 0.019708306, 0.019708778, 0.019713292, 0.019713778, 0.019723708, 0.019724181, 0.019733458, 0.019733931, 0.019744347, 0.019744819, 0.019754208, 0.019754681, 0.019764833, 0.019765306, 0.019769986, 0.019770458, 0.019774972, 0.019775444, 0.01978325, 0.019783722, 0.019788181, 0.019788653, 0.019793069, 0.019793542, 0.019798806, 0.019799278, 0.019806403, 0.019806875, 0.019816486, 0.019816958, 0.019823361, 0.019823833, 0.019828542, 0.019829028, 0.019836028, 0.019836514, 0.019842375, 0.019842861, 0.019851014, 0.019851486, 0.019858819, 0.019859292, 0.019865167, 0.019865639], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'diff': [0, 4.720000000013602e-07, 3.8059999999985605e-06, 4.860000000009301e-07, 1.0430999999998247e-05, 4.720000000013602e-07, 5.555000000000837e-06, 4.7300000000083386e-07, 8.651999999997884e-06, 4.7300000000083386e-07, 7.527000000000228e-06, 4.860000000009301e-07, 6.708999999997106e-06, 4.720000000013602e-07, 9.499999999999093e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.860000000009301e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 4.736000000001711e-06, 4.7199999999789077e-07, 5.125000000001656e-06, 4.7300000000083386e-07, 7.2219999999977025e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.860000000009301e-07, 8.790999999997579e-06, 4.7300000000083386e-07, 5.874999999998937e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 8.931000000000217e-06, 4.720000000013602e-07, 3.957999999998352e-06, 4.720000000013602e-07, 8.166999999999897e-06, 4.7199999999789077e-07, 8.555999999999842e-06, 4.720000000013602e-07, 4.750000000001281e-06, 4.7199999999789077e-07, 4.723000000001615e-06, 4.859999999974607e-07, 4.819000000003126e-06, 4.859999999974607e-07, 6.292000000001491e-06, 4.7199999999789077e-07, 6.485999999999992e-06, 4.860000000009301e-07, 5.556000000000311e-06, 4.720000000013602e-07, 3.888999999999976e-06, 4.7199999999789077e-07, 9.208999999999606e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.860000000009301e-07, 9.929999999998274e-06, 4.7300000000083386e-07, 9.276999999998509e-06, 4.7300000000083386e-07, 1.0415999999999204e-05, 4.720000000013602e-07, 9.388999999998537e-06, 4.7300000000083386e-07, 1.0151999999999384e-05, 4.7300000000083386e-07, 4.679999999999962e-06, 4.720000000013602e-07, 4.513999999997131e-06, 4.720000000013602e-07, 7.805999999999091e-06, 4.720000000013602e-07, 4.458999999998325e-06, 4.720000000013602e-07, 4.416000000000142e-06, 4.7300000000083386e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.7199999999789077e-07, 6.403000000002046e-06, 4.7199999999789077e-07, 4.709000000002045e-06, 4.859999999974607e-07, 7.000000000000062e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.720000000013602e-07, 7.332999999998258e-06, 4.7300000000083386e-07, 5.874999999998937e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:43.855" endtime="20201112 09:53:43.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.851" endtime="20201112 09:53:43.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:43.864" level="INFO">${RESULT} = [{'time': 0.019502833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019507125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:43.861" endtime="20201112 09:53:43.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:43.877" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:43.865" endtime="20201112 09:53:43.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.882" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:43.881" endtime="20201112 09:53:43.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.884" level="INFO">VALUE: [4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:53:43.883" endtime="20201112 09:53:43.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.878" endtime="20201112 09:53:43.885"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.887" endtime="20201112 09:53:43.888"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:43.891" endtime="20201112 09:53:43.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.889" endtime="20201112 09:53:43.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.886" endtime="20201112 09:53:43.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.477" endtime="20201112 09:53:43.911"></status>
</kw>
<msg timestamp="20201112 09:53:43.912" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.919" endtime="20201112 09:53:43.936"></status>
</kw>
<msg timestamp="20201112 09:53:43.937" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:43.918" endtime="20201112 09:53:43.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.939" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:43.938" endtime="20201112 09:53:43.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.940" endtime="20201112 09:53:43.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.915" endtime="20201112 09:53:43.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.913" endtime="20201112 09:53:43.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.949" endtime="20201112 09:53:44.236"></status>
</kw>
<msg timestamp="20201112 09:53:44.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021601722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021602194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:43.948" endtime="20201112 09:53:44.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021601722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021602194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:44.241" endtime="20201112 09:53:44.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.249" endtime="20201112 09:53:44.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.945" endtime="20201112 09:53:44.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.943" endtime="20201112 09:53:44.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.255" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:44.254" endtime="20201112 09:53:44.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.262" level="INFO">VALUE: [{'time': 0.021601722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021602194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021607028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.0216075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021614111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.610999999996647e-06, 'source_diff': 6.610999999996647e-06}, {'time': 0.021614583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02162075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.021621236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021628042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.806000000001561e-06, 'source_diff': 6.806000000001561e-06}, {'time': 0.021628514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021633125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.021633611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021642069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.021642556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.021648431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.021648903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021656222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.021656694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021664222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.021664708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021675153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0444999999997817e-05, 'source_diff': 1.0444999999997817e-05}, {'time': 0.021675625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021680139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.021680611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.02168825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.021688722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021693319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.021693806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.021701125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319000000002157e-06, 'source_diff': 7.319000000002157e-06}, {'time': 0.021701597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021705472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.021705944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021711806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.86199999999884e-06, 'source_diff': 5.86199999999884e-06}, {'time': 0.021712278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021717611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.021718083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021724569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.021725042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021732139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.097000000001047e-06, 'source_diff': 7.097000000001047e-06}, {'time': 0.021732625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021741375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.021741861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021751569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.707999999997163e-06, 'source_diff': 9.707999999997163e-06}, {'time': 0.021752042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021756361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.318999999999157e-06, 'source_diff': 4.318999999999157e-06}, {'time': 0.021756833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021766139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.021766611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021774569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.957999999998883e-06, 'source_diff': 7.957999999998883e-06}, {'time': 0.021775042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021784125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.021784611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021789431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8200000000026e-06, 'source_diff': 4.8200000000026e-06}, {'time': 0.021789917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021795375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.021795847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021800972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1249999999981866e-06, 'source_diff': 5.1249999999981866e-06}, {'time': 0.021801458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021805653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.195000000001975e-06, 'source_diff': 4.195000000001975e-06}, {'time': 0.021806139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021812736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.597000000000547e-06, 'source_diff': 6.597000000000547e-06}, {'time': 0.021813208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021823236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.021823722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021829375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.021829861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021835097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.236000000002211e-06, 'source_diff': 5.236000000002211e-06}, {'time': 0.021835569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021844042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.473000000001896e-06, 'source_diff': 8.473000000001896e-06}, {'time': 0.021844514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021853514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.000000000002062e-06, 'source_diff': 9.000000000002062e-06}, {'time': 0.021853986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.02185975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.021860222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021866403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.021866875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021872736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.021873208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021883444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0235999999996803e-05, 'source_diff': 1.0235999999996803e-05}, {'time': 0.021883917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021893194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.277000000001978e-06, 'source_diff': 9.277000000001978e-06}, {'time': 0.021893667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021901903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.236000000001742e-06, 'source_diff': 8.236000000001742e-06}, {'time': 0.021902375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021906264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.021906736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021910625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.021911097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021919458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.021919931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021929542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.021930014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021939417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.021939889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021947931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.021948417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021953653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.021954125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021961667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.021962139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:44.257" endtime="20201112 09:53:44.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.252" endtime="20201112 09:53:44.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:44.287" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:44.264" endtime="20201112 09:53:44.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.291" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:44.290" endtime="20201112 09:53:44.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.295" level="INFO">VALUE: {'sourcesource_diff': [0, 4.720000000013602e-07, 4.8339999999987004e-06, 4.720000000013602e-07, 6.610999999996647e-06, 4.720000000013602e-07, 6.167000000001366e-06, 4.859999999974607e-07, 6.806000000001561e-06, 4.720000000013602e-07, 4.610999999998117e-06, 4.860000000009301e-07, 8.457999999999383e-06, 4.870000000004038e-07, 5.874999999998937e-06, 4.720000000013602e-07, 7.318999999998688e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.860000000009301e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 7.639000000000257e-06, 4.720000000013602e-07, 4.596999999998547e-06, 4.870000000004038e-07, 7.319000000002157e-06, 4.7199999999789077e-07, 3.875000000000406e-06, 4.720000000013602e-07, 5.86199999999884e-06, 4.720000000013602e-07, 5.332999999999727e-06, 4.7199999999789077e-07, 6.485999999999992e-06, 4.7300000000083386e-07, 7.097000000001047e-06, 4.859999999974607e-07, 8.750000000001812e-06, 4.860000000009301e-07, 9.707999999997163e-06, 4.7300000000083386e-07, 4.318999999999157e-06, 4.720000000013602e-07, 9.306000000000592e-06, 4.720000000013602e-07, 7.957999999998883e-06, 4.7300000000083386e-07, 9.083000000000008e-06, 4.859999999974607e-07, 4.8200000000026e-06, 4.859999999974607e-07, 5.457999999999852e-06, 4.720000000013602e-07, 5.1249999999981866e-06, 4.860000000009301e-07, 4.195000000001975e-06, 4.859999999974607e-07, 6.597000000000547e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.860000000009301e-07, 5.653000000001296e-06, 4.859999999974607e-07, 5.236000000002211e-06, 4.7199999999789077e-07, 8.473000000001896e-06, 4.7199999999789077e-07, 9.000000000002062e-06, 4.7199999999789077e-07, 5.764000000001851e-06, 4.7199999999789077e-07, 6.181000000000936e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.720000000013602e-07, 1.0235999999996803e-05, 4.7300000000083386e-07, 9.277000000001978e-06, 4.729999999973644e-07, 8.236000000001742e-06, 4.720000000013602e-07, 3.888999999999976e-06, 4.7199999999789077e-07, 3.888999999999976e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.7300000000083386e-07, 9.610999999999648e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.860000000009301e-07, 5.235999999998742e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.7199999999789077e-07], 'time': [0.021601722, 0.021602194, 0.021607028, 0.0216075, 0.021614111, 0.021614583, 0.02162075, 0.021621236, 0.021628042, 0.021628514, 0.021633125, 0.021633611, 0.021642069, 0.021642556, 0.021648431, 0.021648903, 0.021656222, 0.021656694, 0.021664222, 0.021664708, 0.021675153, 0.021675625, 0.021680139, 0.021680611, 0.02168825, 0.021688722, 0.021693319, 0.021693806, 0.021701125, 0.021701597, 0.021705472, 0.021705944, 0.021711806, 0.021712278, 0.021717611, 0.021718083, 0.021724569, 0.021725042, 0.021732139, 0.021732625, 0.021741375, 0.021741861, 0.021751569, 0.021752042, 0.021756361, 0.021756833, 0.021766139, 0.021766611, 0.021774569, 0.021775042, 0.021784125, 0.021784611, 0.021789431, 0.021789917, 0.021795375, 0.021795847, 0.021800972, 0.021801458, 0.021805653, 0.021806139, 0.021812736, 0.021813208, 0.021823236, 0.021823722, 0.021829375, 0.021829861, 0.021835097, 0.021835569, 0.021844042, 0.021844514, 0.021853514, 0.021853986, 0.02185975, 0.021860222, 0.021866403, 0.021866875, 0.021872736, 0.021873208, 0.021883444, 0.021883917, 0.021893194, 0.021893667, 0.021901903, 0.021902375, 0.021906264, 0.021906736, 0.021910625, 0.021911097, 0.021919458, 0.021919931, 0.021929542, 0.021930014, 0.021939417, 0.021939889, 0.021947931, 0.021948417, 0.021953653, 0.021954125, 0.021961667, 0.021962139], 'eventdiff': [0, 4.720000000013602e-07, 4.8339999999987004e-06, 4.720000000013602e-07, 6.610999999996647e-06, 4.720000000013602e-07, 6.167000000001366e-06, 4.859999999974607e-07, 6.806000000001561e-06, 4.720000000013602e-07, 4.610999999998117e-06, 4.860000000009301e-07, 8.457999999999383e-06, 4.870000000004038e-07, 5.874999999998937e-06, 4.720000000013602e-07, 7.318999999998688e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.860000000009301e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 7.639000000000257e-06, 4.720000000013602e-07, 4.596999999998547e-06, 4.870000000004038e-07, 7.319000000002157e-06, 4.7199999999789077e-07, 3.875000000000406e-06, 4.720000000013602e-07, 5.86199999999884e-06, 4.720000000013602e-07, 5.332999999999727e-06, 4.7199999999789077e-07, 6.485999999999992e-06, 4.7300000000083386e-07, 7.097000000001047e-06, 4.859999999974607e-07, 8.750000000001812e-06, 4.860000000009301e-07, 9.707999999997163e-06, 4.7300000000083386e-07, 4.318999999999157e-06, 4.720000000013602e-07, 9.306000000000592e-06, 4.720000000013602e-07, 7.957999999998883e-06, 4.7300000000083386e-07, 9.083000000000008e-06, 4.859999999974607e-07, 4.8200000000026e-06, 4.859999999974607e-07, 5.457999999999852e-06, 4.720000000013602e-07, 5.1249999999981866e-06, 4.860000000009301e-07, 4.195000000001975e-06, 4.859999999974607e-07, 6.597000000000547e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.860000000009301e-07, 5.653000000001296e-06, 4.859999999974607e-07, 5.236000000002211e-06, 4.7199999999789077e-07, 8.473000000001896e-06, 4.7199999999789077e-07, 9.000000000002062e-06, 4.7199999999789077e-07, 5.764000000001851e-06, 4.7199999999789077e-07, 6.181000000000936e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.720000000013602e-07, 1.0235999999996803e-05, 4.7300000000083386e-07, 9.277000000001978e-06, 4.729999999973644e-07, 8.236000000001742e-06, 4.720000000013602e-07, 3.888999999999976e-06, 4.7199999999789077e-07, 3.888999999999976e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.7300000000083386e-07, 9.610999999999648e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.860000000009301e-07, 5.235999999998742e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:44.292" endtime="20201112 09:53:44.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.288" endtime="20201112 09:53:44.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:44.300" level="INFO">${RESULT} = [{'time': 0.021602194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0216075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:53:44.297" endtime="20201112 09:53:44.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:44.313" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:44.301" endtime="20201112 09:53:44.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.318" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:44.317" endtime="20201112 09:53:44.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.320" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 09:53:44.319" endtime="20201112 09:53:44.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.314" endtime="20201112 09:53:44.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.323" endtime="20201112 09:53:44.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:44.327" endtime="20201112 09:53:44.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.325" endtime="20201112 09:53:44.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.322" endtime="20201112 09:53:44.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.912" endtime="20201112 09:53:44.347"></status>
</kw>
<msg timestamp="20201112 09:53:44.348" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.356" endtime="20201112 09:53:44.373"></status>
</kw>
<msg timestamp="20201112 09:53:44.373" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:44.354" endtime="20201112 09:53:44.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.376" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:44.374" endtime="20201112 09:53:44.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.377" endtime="20201112 09:53:44.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.351" endtime="20201112 09:53:44.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.349" endtime="20201112 09:53:44.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.386" endtime="20201112 09:53:44.685"></status>
</kw>
<msg timestamp="20201112 09:53:44.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022612736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022613208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:44.384" endtime="20201112 09:53:44.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022612736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022613208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:44.690" endtime="20201112 09:53:44.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.698" endtime="20201112 09:53:44.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.382" endtime="20201112 09:53:44.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.380" endtime="20201112 09:53:44.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.705" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:44.704" endtime="20201112 09:53:44.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.710" level="INFO">VALUE: [{'time': 0.022612736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022613208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022622722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.514000000002132e-06, 'source_diff': 9.514000000002132e-06}, {'time': 0.022623194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022631194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.022631681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022636861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.022637333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022642222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.022642694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022648972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.022649444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022655528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.022656, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022665611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.022666083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022675806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722999999999676e-06, 'source_diff': 9.722999999999676e-06}, {'time': 0.022676278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.022681486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022687444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.022687931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022695458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527000000000228e-06, 'source_diff': 7.527000000000228e-06}, {'time': 0.022695931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.02270275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.819000000001657e-06, 'source_diff': 6.819000000001657e-06}, {'time': 0.022703222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022709181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9589999999998255e-06, 'source_diff': 5.9589999999998255e-06}, {'time': 0.022709667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022713861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.022714347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022719125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.022719597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022725403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}, {'time': 0.022725889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022734667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.022735139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022744333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.193999999997093e-06, 'source_diff': 9.193999999997093e-06}, {'time': 0.022744819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022754014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.195000000000036e-06, 'source_diff': 9.195000000000036e-06}, {'time': 0.022754486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022759625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.022760097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022765958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.022766431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022771458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027000000001197e-06, 'source_diff': 5.027000000001197e-06}, {'time': 0.022771931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022777889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.022778361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022786292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.930999999999216e-06, 'source_diff': 7.930999999999216e-06}, {'time': 0.022786778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022793167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999999007e-06, 'source_diff': 6.388999999999007e-06}, {'time': 0.022793639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022803208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.568999999997468e-06, 'source_diff': 9.568999999997468e-06}, {'time': 0.022803694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022808319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.022808792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022819194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0401999999999634e-05, 'source_diff': 1.0401999999999634e-05}, {'time': 0.022819681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022829306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.022829778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022836056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.278000000001921e-06, 'source_diff': 6.278000000001921e-06}, {'time': 0.022836528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022842917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.389000000002476e-06, 'source_diff': 6.389000000002476e-06}, {'time': 0.022843389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022852486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.097000000003047e-06, 'source_diff': 9.097000000003047e-06}, {'time': 0.022852958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022856958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.022857431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022863417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.022863889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022870278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.389000000002476e-06, 'source_diff': 6.389000000002476e-06}, {'time': 0.02287075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022874639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.022875111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022884208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.022884681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022893167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.485999999998523e-06, 'source_diff': 8.485999999998523e-06}, {'time': 0.022893639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022898347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.022898819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022907708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.022908181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022917486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.305000000001118e-06, 'source_diff': 9.305000000001118e-06}, {'time': 0.022917958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022926014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.056000000002811e-06, 'source_diff': 8.056000000002811e-06}, {'time': 0.022926486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022930708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.022931181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022939236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}, {'time': 0.022939708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022947958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.022948431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022958528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0097000000000578e-05, 'source_diff': 1.0097000000000578e-05}, {'time': 0.022959014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022965792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7779999999989515e-06, 'source_diff': 6.7779999999989515e-06}, {'time': 0.022966278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022972542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.022973014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022979931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9169999999986465e-06, 'source_diff': 6.9169999999986465e-06}, {'time': 0.022980403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:44.706" endtime="20201112 09:53:44.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.701" endtime="20201112 09:53:44.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:44.736" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:44.713" endtime="20201112 09:53:44.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.740" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:44.739" endtime="20201112 09:53:44.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.744" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'source_diff': [0, 4.7199999999789077e-07, 9.514000000002132e-06, 4.7199999999789077e-07, 8.000000000001062e-06, 4.870000000004038e-07, 5.180000000000462e-06, 4.7199999999789077e-07, 4.889000000000976e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 6.0839999999999506e-06, 4.7199999999789077e-07, 9.610999999999648e-06, 4.720000000013602e-07, 9.722999999999676e-06, 4.720000000013602e-07, 4.721999999998672e-06, 4.860000000009301e-07, 5.958000000000352e-06, 4.870000000004038e-07, 7.527000000000228e-06, 4.729999999973644e-07, 6.819000000001657e-06, 4.7199999999789077e-07, 5.9589999999998255e-06, 4.860000000009301e-07, 4.193999999999032e-06, 4.860000000009301e-07, 4.778000000000421e-06, 4.720000000013602e-07, 5.806000000000561e-06, 4.859999999974607e-07, 8.778000000000952e-06, 4.720000000013602e-07, 9.193999999997093e-06, 4.860000000009301e-07, 9.195000000000036e-06, 4.720000000013602e-07, 5.1389999999977565e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.7300000000083386e-07, 5.027000000001197e-06, 4.729999999973644e-07, 5.958000000000352e-06, 4.720000000013602e-07, 7.930999999999216e-06, 4.860000000009301e-07, 6.388999999999007e-06, 4.720000000013602e-07, 9.568999999997468e-06, 4.860000000009301e-07, 4.625000000001156e-06, 4.7300000000083386e-07, 1.0401999999999634e-05, 4.870000000004038e-07, 9.624999999999218e-06, 4.7199999999789077e-07, 6.278000000001921e-06, 4.7199999999789077e-07, 6.389000000002476e-06, 4.7199999999789077e-07, 9.097000000003047e-06, 4.7199999999789077e-07, 4.000000000000531e-06, 4.7300000000083386e-07, 5.985999999999492e-06, 4.7199999999789077e-07, 6.389000000002476e-06, 4.7199999999789077e-07, 3.888999999999976e-06, 4.720000000013602e-07, 9.096999999999578e-06, 4.7300000000083386e-07, 8.485999999998523e-06, 4.720000000013602e-07, 4.707999999999102e-06, 4.720000000013602e-07, 8.888999999998037e-06, 4.7300000000083386e-07, 9.305000000001118e-06, 4.7199999999789077e-07, 8.056000000002811e-06, 4.7199999999789077e-07, 4.222000000001641e-06, 4.729999999973644e-07, 8.054999999999868e-06, 4.720000000013602e-07, 8.250000000001312e-06, 4.729999999973644e-07, 1.0097000000000578e-05, 4.860000000009301e-07, 6.7779999999989515e-06, 4.860000000009301e-07, 6.2639999999988816e-06, 4.720000000013602e-07, 6.9169999999986465e-06, 4.720000000013602e-07], 'time': [0.022612736, 0.022613208, 0.022622722, 0.022623194, 0.022631194, 0.022631681, 0.022636861, 0.022637333, 0.022642222, 0.022642694, 0.022648972, 0.022649444, 0.022655528, 0.022656, 0.022665611, 0.022666083, 0.022675806, 0.022676278, 0.022681, 0.022681486, 0.022687444, 0.022687931, 0.022695458, 0.022695931, 0.02270275, 0.022703222, 0.022709181, 0.022709667, 0.022713861, 0.022714347, 0.022719125, 0.022719597, 0.022725403, 0.022725889, 0.022734667, 0.022735139, 0.022744333, 0.022744819, 0.022754014, 0.022754486, 0.022759625, 0.022760097, 0.022765958, 0.022766431, 0.022771458, 0.022771931, 0.022777889, 0.022778361, 0.022786292, 0.022786778, 0.022793167, 0.022793639, 0.022803208, 0.022803694, 0.022808319, 0.022808792, 0.022819194, 0.022819681, 0.022829306, 0.022829778, 0.022836056, 0.022836528, 0.022842917, 0.022843389, 0.022852486, 0.022852958, 0.022856958, 0.022857431, 0.022863417, 0.022863889, 0.022870278, 0.02287075, 0.022874639, 0.022875111, 0.022884208, 0.022884681, 0.022893167, 0.022893639, 0.022898347, 0.022898819, 0.022907708, 0.022908181, 0.022917486, 0.022917958, 0.022926014, 0.022926486, 0.022930708, 0.022931181, 0.022939236, 0.022939708, 0.022947958, 0.022948431, 0.022958528, 0.022959014, 0.022965792, 0.022966278, 0.022972542, 0.022973014, 0.022979931, 0.022980403], 'eventdiff': [0, 4.7199999999789077e-07, 9.514000000002132e-06, 4.7199999999789077e-07, 8.000000000001062e-06, 4.870000000004038e-07, 5.180000000000462e-06, 4.7199999999789077e-07, 4.889000000000976e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 6.0839999999999506e-06, 4.7199999999789077e-07, 9.610999999999648e-06, 4.720000000013602e-07, 9.722999999999676e-06, 4.720000000013602e-07, 4.721999999998672e-06, 4.860000000009301e-07, 5.958000000000352e-06, 4.870000000004038e-07, 7.527000000000228e-06, 4.729999999973644e-07, 6.819000000001657e-06, 4.7199999999789077e-07, 5.9589999999998255e-06, 4.860000000009301e-07, 4.193999999999032e-06, 4.860000000009301e-07, 4.778000000000421e-06, 4.720000000013602e-07, 5.806000000000561e-06, 4.859999999974607e-07, 8.778000000000952e-06, 4.720000000013602e-07, 9.193999999997093e-06, 4.860000000009301e-07, 9.195000000000036e-06, 4.720000000013602e-07, 5.1389999999977565e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.7300000000083386e-07, 5.027000000001197e-06, 4.729999999973644e-07, 5.958000000000352e-06, 4.720000000013602e-07, 7.930999999999216e-06, 4.860000000009301e-07, 6.388999999999007e-06, 4.720000000013602e-07, 9.568999999997468e-06, 4.860000000009301e-07, 4.625000000001156e-06, 4.7300000000083386e-07, 1.0401999999999634e-05, 4.870000000004038e-07, 9.624999999999218e-06, 4.7199999999789077e-07, 6.278000000001921e-06, 4.7199999999789077e-07, 6.389000000002476e-06, 4.7199999999789077e-07, 9.097000000003047e-06, 4.7199999999789077e-07, 4.000000000000531e-06, 4.7300000000083386e-07, 5.985999999999492e-06, 4.7199999999789077e-07, 6.389000000002476e-06, 4.7199999999789077e-07, 3.888999999999976e-06, 4.720000000013602e-07, 9.096999999999578e-06, 4.7300000000083386e-07, 8.485999999998523e-06, 4.720000000013602e-07, 4.707999999999102e-06, 4.720000000013602e-07, 8.888999999998037e-06, 4.7300000000083386e-07, 9.305000000001118e-06, 4.7199999999789077e-07, 8.056000000002811e-06, 4.7199999999789077e-07, 4.222000000001641e-06, 4.729999999973644e-07, 8.054999999999868e-06, 4.720000000013602e-07, 8.250000000001312e-06, 4.729999999973644e-07, 1.0097000000000578e-05, 4.860000000009301e-07, 6.7779999999989515e-06, 4.860000000009301e-07, 6.2639999999988816e-06, 4.720000000013602e-07, 6.9169999999986465e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:44.741" endtime="20201112 09:53:44.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.737" endtime="20201112 09:53:44.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:44.749" level="INFO">${RESULT} = [{'time': 0.022613208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022623194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:44.746" endtime="20201112 09:53:44.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:44.763" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:44.750" endtime="20201112 09:53:44.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.768" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:44.767" endtime="20201112 09:53:44.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.770" level="INFO">VALUE: [4.7199999999789077e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:53:44.769" endtime="20201112 09:53:44.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.764" endtime="20201112 09:53:44.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.773" endtime="20201112 09:53:44.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:44.777" endtime="20201112 09:53:44.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.775" endtime="20201112 09:53:44.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.772" endtime="20201112 09:53:44.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.348" endtime="20201112 09:53:44.798"></status>
</kw>
<msg timestamp="20201112 09:53:44.798" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.806" endtime="20201112 09:53:44.821"></status>
</kw>
<msg timestamp="20201112 09:53:44.821" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:44.804" endtime="20201112 09:53:44.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.824" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:44.822" endtime="20201112 09:53:44.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.825" endtime="20201112 09:53:44.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.802" endtime="20201112 09:53:44.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.800" endtime="20201112 09:53:44.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.834" endtime="20201112 09:53:45.124"></status>
</kw>
<msg timestamp="20201112 09:53:45.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019495167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019495653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:44.832" endtime="20201112 09:53:45.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019495167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019495653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:45.128" endtime="20201112 09:53:45.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.137" endtime="20201112 09:53:45.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.830" endtime="20201112 09:53:45.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.828" endtime="20201112 09:53:45.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.143" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:45.142" endtime="20201112 09:53:45.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.148" level="INFO">VALUE: [{'time': 0.019495167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019495653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019503917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.263999999997412e-06, 'source_diff': 8.263999999997412e-06}, {'time': 0.019504389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01951275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.019513222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019522, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.019522472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019531069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.597000000002547e-06, 'source_diff': 8.597000000002547e-06}, {'time': 0.019531542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019537389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.019537875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019548306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0431000000001717e-05, 'source_diff': 1.0431000000001717e-05}, {'time': 0.019548792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019555806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.019556278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019562042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.019562514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019571375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.019571861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019578958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.097000000001047e-06, 'source_diff': 7.097000000001047e-06}, {'time': 0.019579431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019586944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.512999999997189e-06, 'source_diff': 7.512999999997189e-06}, {'time': 0.019587417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019593069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.652000000001822e-06, 'source_diff': 5.652000000001822e-06}, {'time': 0.019593542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019603764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0222000000000703e-05, 'source_diff': 1.0222000000000703e-05}, {'time': 0.019604236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019614264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.019614736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019624, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.263999999998412e-06, 'source_diff': 9.263999999998412e-06}, {'time': 0.019624472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019630361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.019630833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019637639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.019638111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019642611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.019643097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019647778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.01964825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019654681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.431000000001186e-06, 'source_diff': 6.431000000001186e-06}, {'time': 0.019655153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019665181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.019665653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019670583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9299999999967425e-06, 'source_diff': 4.9299999999967425e-06}, {'time': 0.019671069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019679264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194999999999036e-06, 'source_diff': 8.194999999999036e-06}, {'time': 0.019679736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019685569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.019686042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019691694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.651999999998353e-06, 'source_diff': 5.651999999998353e-06}, {'time': 0.019692181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019699917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.019700389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019708542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.019709028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019714375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.019714847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01972175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9029999999990765e-06, 'source_diff': 6.9029999999990765e-06}, {'time': 0.019722222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019729236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.019729722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019736097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.019736583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019742236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.019742722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019747444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.019747917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019753708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.790999999998048e-06, 'source_diff': 5.790999999998048e-06}, {'time': 0.019754181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019762625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.443999999999813e-06, 'source_diff': 8.443999999999813e-06}, {'time': 0.019763097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019771458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.019771944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019779431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4870000000004655e-06, 'source_diff': 7.4870000000004655e-06}, {'time': 0.019779903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019786014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.0197865, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019796319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.019796792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019803806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.019804278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019810667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999999007e-06, 'source_diff': 6.388999999999007e-06}, {'time': 0.019811139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019818236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.097000000001047e-06, 'source_diff': 7.097000000001047e-06}, {'time': 0.019818708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019824361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6529999999978264e-06, 'source_diff': 5.6529999999978264e-06}, {'time': 0.019824833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019835153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0320000000001162e-05, 'source_diff': 1.0320000000001162e-05}, {'time': 0.019835639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019845847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0208000000001133e-05, 'source_diff': 1.0208000000001133e-05}, {'time': 0.019846319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019852389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.019852861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019861208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.347000000002297e-06, 'source_diff': 8.347000000002297e-06}, {'time': 0.019861681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019865667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.019866153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019870972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.019871444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:45.144" endtime="20201112 09:53:45.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.140" endtime="20201112 09:53:45.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:45.175" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:45.151" endtime="20201112 09:53:45.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.178" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:45.177" endtime="20201112 09:53:45.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.183" level="INFO">VALUE: {'sourcesource_diff': [0, 4.860000000009301e-07, 8.263999999997412e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.720000000013602e-07, 8.778000000000952e-06, 4.7199999999789077e-07, 8.597000000002547e-06, 4.729999999973644e-07, 5.846999999999797e-06, 4.860000000009301e-07, 1.0431000000001717e-05, 4.859999999974607e-07, 7.013999999999632e-06, 4.720000000013602e-07, 5.764000000001851e-06, 4.7199999999789077e-07, 8.860999999998898e-06, 4.860000000009301e-07, 7.097000000001047e-06, 4.7300000000083386e-07, 7.512999999997189e-06, 4.7300000000083386e-07, 5.652000000001822e-06, 4.729999999973644e-07, 1.0222000000000703e-05, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 9.263999999998412e-06, 4.720000000013602e-07, 5.8889999999985065e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.720000000013602e-07, 4.500000000001031e-06, 4.860000000009301e-07, 4.680999999999436e-06, 4.7199999999789077e-07, 6.431000000001186e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 4.9299999999967425e-06, 4.860000000009301e-07, 8.194999999999036e-06, 4.720000000013602e-07, 5.833000000000227e-06, 4.7300000000083386e-07, 5.651999999998353e-06, 4.870000000004038e-07, 7.736000000001242e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.860000000009301e-07, 5.346999999999297e-06, 4.720000000013602e-07, 6.9029999999990765e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.860000000009301e-07, 6.374999999999437e-06, 4.859999999974607e-07, 5.653000000001296e-06, 4.860000000009301e-07, 4.721999999998672e-06, 4.7300000000083386e-07, 5.790999999998048e-06, 4.7300000000083386e-07, 8.443999999999813e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.860000000009301e-07, 7.4870000000004655e-06, 4.720000000013602e-07, 6.110999999999617e-06, 4.859999999974607e-07, 9.819000000001188e-06, 4.7300000000083386e-07, 7.013999999999632e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.7199999999789077e-07, 7.097000000001047e-06, 4.720000000013602e-07, 5.6529999999978264e-06, 4.720000000013602e-07, 1.0320000000001162e-05, 4.859999999974607e-07, 1.0208000000001133e-05, 4.720000000013602e-07, 6.070000000000381e-06, 4.7199999999789077e-07, 8.347000000002297e-06, 4.729999999973644e-07, 3.986000000000961e-06, 4.860000000009301e-07, 4.818999999999657e-06, 4.7199999999789077e-07], 'time': [0.019495167, 0.019495653, 0.019503917, 0.019504389, 0.01951275, 0.019513222, 0.019522, 0.019522472, 0.019531069, 0.019531542, 0.019537389, 0.019537875, 0.019548306, 0.019548792, 0.019555806, 0.019556278, 0.019562042, 0.019562514, 0.019571375, 0.019571861, 0.019578958, 0.019579431, 0.019586944, 0.019587417, 0.019593069, 0.019593542, 0.019603764, 0.019604236, 0.019614264, 0.019614736, 0.019624, 0.019624472, 0.019630361, 0.019630833, 0.019637639, 0.019638111, 0.019642611, 0.019643097, 0.019647778, 0.01964825, 0.019654681, 0.019655153, 0.019665181, 0.019665653, 0.019670583, 0.019671069, 0.019679264, 0.019679736, 0.019685569, 0.019686042, 0.019691694, 0.019692181, 0.019699917, 0.019700389, 0.019708542, 0.019709028, 0.019714375, 0.019714847, 0.01972175, 0.019722222, 0.019729236, 0.019729722, 0.019736097, 0.019736583, 0.019742236, 0.019742722, 0.019747444, 0.019747917, 0.019753708, 0.019754181, 0.019762625, 0.019763097, 0.019771458, 0.019771944, 0.019779431, 0.019779903, 0.019786014, 0.0197865, 0.019796319, 0.019796792, 0.019803806, 0.019804278, 0.019810667, 0.019811139, 0.019818236, 0.019818708, 0.019824361, 0.019824833, 0.019835153, 0.019835639, 0.019845847, 0.019846319, 0.019852389, 0.019852861, 0.019861208, 0.019861681, 0.019865667, 0.019866153, 0.019870972, 0.019871444], 'eventdiff': [0, 4.860000000009301e-07, 8.263999999997412e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.720000000013602e-07, 8.778000000000952e-06, 4.7199999999789077e-07, 8.597000000002547e-06, 4.729999999973644e-07, 5.846999999999797e-06, 4.860000000009301e-07, 1.0431000000001717e-05, 4.859999999974607e-07, 7.013999999999632e-06, 4.720000000013602e-07, 5.764000000001851e-06, 4.7199999999789077e-07, 8.860999999998898e-06, 4.860000000009301e-07, 7.097000000001047e-06, 4.7300000000083386e-07, 7.512999999997189e-06, 4.7300000000083386e-07, 5.652000000001822e-06, 4.729999999973644e-07, 1.0222000000000703e-05, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 9.263999999998412e-06, 4.720000000013602e-07, 5.8889999999985065e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.720000000013602e-07, 4.500000000001031e-06, 4.860000000009301e-07, 4.680999999999436e-06, 4.7199999999789077e-07, 6.431000000001186e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 4.9299999999967425e-06, 4.860000000009301e-07, 8.194999999999036e-06, 4.720000000013602e-07, 5.833000000000227e-06, 4.7300000000083386e-07, 5.651999999998353e-06, 4.870000000004038e-07, 7.736000000001242e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.860000000009301e-07, 5.346999999999297e-06, 4.720000000013602e-07, 6.9029999999990765e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.860000000009301e-07, 6.374999999999437e-06, 4.859999999974607e-07, 5.653000000001296e-06, 4.860000000009301e-07, 4.721999999998672e-06, 4.7300000000083386e-07, 5.790999999998048e-06, 4.7300000000083386e-07, 8.443999999999813e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.860000000009301e-07, 7.4870000000004655e-06, 4.720000000013602e-07, 6.110999999999617e-06, 4.859999999974607e-07, 9.819000000001188e-06, 4.7300000000083386e-07, 7.013999999999632e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.7199999999789077e-07, 7.097000000001047e-06, 4.720000000013602e-07, 5.6529999999978264e-06, 4.720000000013602e-07, 1.0320000000001162e-05, 4.859999999974607e-07, 1.0208000000001133e-05, 4.720000000013602e-07, 6.070000000000381e-06, 4.7199999999789077e-07, 8.347000000002297e-06, 4.729999999973644e-07, 3.986000000000961e-06, 4.860000000009301e-07, 4.818999999999657e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:45.179" endtime="20201112 09:53:45.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.175" endtime="20201112 09:53:45.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:45.188" level="INFO">${RESULT} = [{'time': 0.019495653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019504389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:45.185" endtime="20201112 09:53:45.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:45.202" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:45.189" endtime="20201112 09:53:45.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.206" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:45.205" endtime="20201112 09:53:45.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.208" level="INFO">VALUE: [4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 09:53:45.207" endtime="20201112 09:53:45.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.203" endtime="20201112 09:53:45.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.212" endtime="20201112 09:53:45.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:45.215" endtime="20201112 09:53:45.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.213" endtime="20201112 09:53:45.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.210" endtime="20201112 09:53:45.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.799" endtime="20201112 09:53:45.236"></status>
</kw>
<msg timestamp="20201112 09:53:45.236" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.244" endtime="20201112 09:53:45.257"></status>
</kw>
<msg timestamp="20201112 09:53:45.258" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:45.242" endtime="20201112 09:53:45.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.260" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:45.259" endtime="20201112 09:53:45.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.261" endtime="20201112 09:53:45.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.240" endtime="20201112 09:53:45.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.238" endtime="20201112 09:53:45.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.271" endtime="20201112 09:53:45.557"></status>
</kw>
<msg timestamp="20201112 09:53:45.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018414347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018414819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:45.269" endtime="20201112 09:53:45.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018414347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018414819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:45.561" endtime="20201112 09:53:45.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.570" endtime="20201112 09:53:45.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.267" endtime="20201112 09:53:45.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.265" endtime="20201112 09:53:45.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.576" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:45.575" endtime="20201112 09:53:45.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.581" level="INFO">VALUE: [{'time': 0.018414347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018414819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018419431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.61200000000106e-06, 'source_diff': 4.61200000000106e-06}, {'time': 0.018419903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018427222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.018427694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018432542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.84799999999827e-06, 'source_diff': 4.84799999999827e-06}, {'time': 0.018433014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018440292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.018440778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018450778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.999999999999593e-06, 'source_diff': 9.999999999999593e-06}, {'time': 0.01845125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018457431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.018457903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018462417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.018462903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018467736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.018468208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018474694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.018475167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018482806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.018483278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018493625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.018494097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018501542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.444999999998286e-06, 'source_diff': 7.444999999998286e-06}, {'time': 0.018502014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018506528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.018507, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01851525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.018515722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018524625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.903000000001077e-06, 'source_diff': 8.903000000001077e-06}, {'time': 0.018525097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018532069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.018532542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018542444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.902000000002603e-06, 'source_diff': 9.902000000002603e-06}, {'time': 0.018542917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018551361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.443999999999813e-06, 'source_diff': 8.443999999999813e-06}, {'time': 0.018551847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018559667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.819999999998661e-06, 'source_diff': 7.819999999998661e-06}, {'time': 0.018560153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018565917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.018566389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018573472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.083000000001477e-06, 'source_diff': 7.083000000001477e-06}, {'time': 0.018573958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018580028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.069999999996911e-06, 'source_diff': 6.069999999996911e-06}, {'time': 0.0185805, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018588194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.693999999999063e-06, 'source_diff': 7.693999999999063e-06}, {'time': 0.018588667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018595528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000000367e-06, 'source_diff': 6.861000000000367e-06}, {'time': 0.018596, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018600111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1109999999976166e-06, 'source_diff': 4.1109999999976166e-06}, {'time': 0.018600583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018608222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.018608694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018613625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.931000000003155e-06, 'source_diff': 4.931000000003155e-06}, {'time': 0.018614097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018619139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018619611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018626417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.018626889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018631972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.018632444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018640486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.018640958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018647708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.018648181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018653722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541000000001267e-06, 'source_diff': 5.541000000001267e-06}, {'time': 0.018654208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018664208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0000000000003062e-05, 'source_diff': 1.0000000000003062e-05}, {'time': 0.018664694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018673764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.069999999999911e-06, 'source_diff': 9.069999999999911e-06}, {'time': 0.018674236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018681125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.018681597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018691403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805999999997622e-06, 'source_diff': 9.805999999997622e-06}, {'time': 0.018691875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018699403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.018699875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018708694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.018709167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018719056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.889000000002507e-06, 'source_diff': 9.889000000002507e-06}, {'time': 0.018719528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018725819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291000000002017e-06, 'source_diff': 6.291000000002017e-06}, {'time': 0.018726292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018736111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.018736583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018741472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8889999999975065e-06, 'source_diff': 4.8889999999975065e-06}, {'time': 0.018741944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018750361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.417000000000147e-06, 'source_diff': 8.417000000000147e-06}, {'time': 0.018750833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018759861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.027999999997732e-06, 'source_diff': 9.027999999997732e-06}, {'time': 0.018760333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018765, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.018765486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018774042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.018774514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018784319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.018784792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018791181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999999007e-06, 'source_diff': 6.388999999999007e-06}, {'time': 0.018791653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:45.577" endtime="20201112 09:53:45.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.573" endtime="20201112 09:53:45.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:45.607" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:45.584" endtime="20201112 09:53:45.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.611" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:45.610" endtime="20201112 09:53:45.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.615" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'source_diff': [0, 4.7199999999789077e-07, 4.61200000000106e-06, 4.720000000013602e-07, 7.318999999998688e-06, 4.720000000013602e-07, 4.84799999999827e-06, 4.720000000013602e-07, 7.2779999999994516e-06, 4.860000000009301e-07, 9.999999999999593e-06, 4.7199999999789077e-07, 6.181000000000936e-06, 4.720000000013602e-07, 4.513999999997131e-06, 4.860000000009301e-07, 4.832999999999227e-06, 4.720000000013602e-07, 6.485999999999992e-06, 4.7300000000083386e-07, 7.639000000000257e-06, 4.7199999999789077e-07, 1.0347000000000828e-05, 4.720000000013602e-07, 7.444999999998286e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 8.250000000001312e-06, 4.7199999999789077e-07, 8.903000000001077e-06, 4.720000000013602e-07, 6.972000000000922e-06, 4.729999999973644e-07, 9.902000000002603e-06, 4.729999999973644e-07, 8.443999999999813e-06, 4.860000000009301e-07, 7.819999999998661e-06, 4.860000000009301e-07, 5.764000000001851e-06, 4.7199999999789077e-07, 7.083000000001477e-06, 4.860000000009301e-07, 6.069999999996911e-06, 4.720000000013602e-07, 7.693999999999063e-06, 4.7300000000083386e-07, 6.861000000000367e-06, 4.720000000013602e-07, 4.1109999999976166e-06, 4.720000000013602e-07, 7.639000000000257e-06, 4.7199999999789077e-07, 4.931000000003155e-06, 4.7199999999789077e-07, 5.042000000000241e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.720000000013602e-07, 5.082999999999477e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.7199999999789077e-07, 6.749999999999812e-06, 4.7300000000083386e-07, 5.541000000001267e-06, 4.859999999974607e-07, 1.0000000000003062e-05, 4.859999999974607e-07, 9.069999999999911e-06, 4.720000000013602e-07, 6.888999999999507e-06, 4.720000000013602e-07, 9.805999999997622e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.720000000013602e-07, 8.819000000000188e-06, 4.729999999973644e-07, 9.889000000002507e-06, 4.7199999999789077e-07, 6.291000000002017e-06, 4.729999999973644e-07, 9.819000000001188e-06, 4.720000000013602e-07, 4.8889999999975065e-06, 4.720000000013602e-07, 8.417000000000147e-06, 4.720000000013602e-07, 9.027999999997732e-06, 4.720000000013602e-07, 4.666999999999866e-06, 4.860000000009301e-07, 8.555999999999842e-06, 4.7199999999789077e-07, 9.805000000001618e-06, 4.7300000000083386e-07, 6.388999999999007e-06, 4.7199999999789077e-07], 'time': [0.018414347, 0.018414819, 0.018419431, 0.018419903, 0.018427222, 0.018427694, 0.018432542, 0.018433014, 0.018440292, 0.018440778, 0.018450778, 0.01845125, 0.018457431, 0.018457903, 0.018462417, 0.018462903, 0.018467736, 0.018468208, 0.018474694, 0.018475167, 0.018482806, 0.018483278, 0.018493625, 0.018494097, 0.018501542, 0.018502014, 0.018506528, 0.018507, 0.01851525, 0.018515722, 0.018524625, 0.018525097, 0.018532069, 0.018532542, 0.018542444, 0.018542917, 0.018551361, 0.018551847, 0.018559667, 0.018560153, 0.018565917, 0.018566389, 0.018573472, 0.018573958, 0.018580028, 0.0185805, 0.018588194, 0.018588667, 0.018595528, 0.018596, 0.018600111, 0.018600583, 0.018608222, 0.018608694, 0.018613625, 0.018614097, 0.018619139, 0.018619611, 0.018626417, 0.018626889, 0.018631972, 0.018632444, 0.018640486, 0.018640958, 0.018647708, 0.018648181, 0.018653722, 0.018654208, 0.018664208, 0.018664694, 0.018673764, 0.018674236, 0.018681125, 0.018681597, 0.018691403, 0.018691875, 0.018699403, 0.018699875, 0.018708694, 0.018709167, 0.018719056, 0.018719528, 0.018725819, 0.018726292, 0.018736111, 0.018736583, 0.018741472, 0.018741944, 0.018750361, 0.018750833, 0.018759861, 0.018760333, 0.018765, 0.018765486, 0.018774042, 0.018774514, 0.018784319, 0.018784792, 0.018791181, 0.018791653], 'eventdiff': [0, 4.7199999999789077e-07, 4.61200000000106e-06, 4.720000000013602e-07, 7.318999999998688e-06, 4.720000000013602e-07, 4.84799999999827e-06, 4.720000000013602e-07, 7.2779999999994516e-06, 4.860000000009301e-07, 9.999999999999593e-06, 4.7199999999789077e-07, 6.181000000000936e-06, 4.720000000013602e-07, 4.513999999997131e-06, 4.860000000009301e-07, 4.832999999999227e-06, 4.720000000013602e-07, 6.485999999999992e-06, 4.7300000000083386e-07, 7.639000000000257e-06, 4.7199999999789077e-07, 1.0347000000000828e-05, 4.720000000013602e-07, 7.444999999998286e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 8.250000000001312e-06, 4.7199999999789077e-07, 8.903000000001077e-06, 4.720000000013602e-07, 6.972000000000922e-06, 4.729999999973644e-07, 9.902000000002603e-06, 4.729999999973644e-07, 8.443999999999813e-06, 4.860000000009301e-07, 7.819999999998661e-06, 4.860000000009301e-07, 5.764000000001851e-06, 4.7199999999789077e-07, 7.083000000001477e-06, 4.860000000009301e-07, 6.069999999996911e-06, 4.720000000013602e-07, 7.693999999999063e-06, 4.7300000000083386e-07, 6.861000000000367e-06, 4.720000000013602e-07, 4.1109999999976166e-06, 4.720000000013602e-07, 7.639000000000257e-06, 4.7199999999789077e-07, 4.931000000003155e-06, 4.7199999999789077e-07, 5.042000000000241e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.720000000013602e-07, 5.082999999999477e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.7199999999789077e-07, 6.749999999999812e-06, 4.7300000000083386e-07, 5.541000000001267e-06, 4.859999999974607e-07, 1.0000000000003062e-05, 4.859999999974607e-07, 9.069999999999911e-06, 4.720000000013602e-07, 6.888999999999507e-06, 4.720000000013602e-07, 9.805999999997622e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.720000000013602e-07, 8.819000000000188e-06, 4.729999999973644e-07, 9.889000000002507e-06, 4.7199999999789077e-07, 6.291000000002017e-06, 4.729999999973644e-07, 9.819000000001188e-06, 4.720000000013602e-07, 4.8889999999975065e-06, 4.720000000013602e-07, 8.417000000000147e-06, 4.720000000013602e-07, 9.027999999997732e-06, 4.720000000013602e-07, 4.666999999999866e-06, 4.860000000009301e-07, 8.555999999999842e-06, 4.7199999999789077e-07, 9.805000000001618e-06, 4.7300000000083386e-07, 6.388999999999007e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:45.612" endtime="20201112 09:53:45.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.608" endtime="20201112 09:53:45.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:45.621" level="INFO">${RESULT} = [{'time': 0.018414819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018419903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:45.618" endtime="20201112 09:53:45.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:45.635" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:45.622" endtime="20201112 09:53:45.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.639" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:45.638" endtime="20201112 09:53:45.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.641" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 09:53:45.640" endtime="20201112 09:53:45.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.636" endtime="20201112 09:53:45.642"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.645" endtime="20201112 09:53:45.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:45.648" endtime="20201112 09:53:45.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.647" endtime="20201112 09:53:45.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.643" endtime="20201112 09:53:45.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.237" endtime="20201112 09:53:45.669"></status>
</kw>
<msg timestamp="20201112 09:53:45.669" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.677" endtime="20201112 09:53:45.695"></status>
</kw>
<msg timestamp="20201112 09:53:45.695" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:45.675" endtime="20201112 09:53:45.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.698" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:45.696" endtime="20201112 09:53:45.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.699" endtime="20201112 09:53:45.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.673" endtime="20201112 09:53:45.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.671" endtime="20201112 09:53:45.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.708" endtime="20201112 09:53:45.994"></status>
</kw>
<msg timestamp="20201112 09:53:45.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022496028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:45.706" endtime="20201112 09:53:45.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022496028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:45.998" endtime="20201112 09:53:46.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.007" endtime="20201112 09:53:46.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.704" endtime="20201112 09:53:46.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.702" endtime="20201112 09:53:46.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.014" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:46.013" endtime="20201112 09:53:46.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.019" level="INFO">VALUE: [{'time': 0.022495542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022496028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022504903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.022505389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022511889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.022512361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022520069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.707999999998633e-06, 'source_diff': 7.707999999998633e-06}, {'time': 0.022520556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022526111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.022526583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022536778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0195000000001037e-05, 'source_diff': 1.0195000000001037e-05}, {'time': 0.022537264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022545542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.277999999996982e-06, 'source_diff': 8.277999999996982e-06}, {'time': 0.022546014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022554639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.625000000001687e-06, 'source_diff': 8.625000000001687e-06}, {'time': 0.022555111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022560028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.022560514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022566153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.022566639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022575611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.022576083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022581764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.022582236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022586319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.083000000001946e-06, 'source_diff': 4.083000000001946e-06}, {'time': 0.022586792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022596833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0040999999998829e-05, 'source_diff': 1.0040999999998829e-05}, {'time': 0.022597306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022602667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.022603139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022613569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0429999999998774e-05, 'source_diff': 1.0429999999998774e-05}, {'time': 0.022614042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022624528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000000523e-05, 'source_diff': 1.0486000000000523e-05}, {'time': 0.022625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022633417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.417000000000147e-06, 'source_diff': 8.417000000000147e-06}, {'time': 0.022633903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022640694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.790999999999048e-06, 'source_diff': 6.790999999999048e-06}, {'time': 0.022641167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022651514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.022651986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022661556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.022662028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022668319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.022668792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022673708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.022674181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022679819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.637999999998783e-06, 'source_diff': 5.637999999998783e-06}, {'time': 0.022680292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022684181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.022684653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022691028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.0226915, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022695486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.022695972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022704028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.056000000002811e-06, 'source_diff': 8.056000000002811e-06}, {'time': 0.0227045, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022712236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.022712708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022721, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.022721472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022731278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.02273175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022738958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208000000001602e-06, 'source_diff': 7.208000000001602e-06}, {'time': 0.022739444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022745306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.86199999999884e-06, 'source_diff': 5.86199999999884e-06}, {'time': 0.022745778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022753625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.022754097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022763847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.749999999999343e-06, 'source_diff': 9.749999999999343e-06}, {'time': 0.022764319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022770486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.166999999997896e-06, 'source_diff': 6.166999999997896e-06}, {'time': 0.022770958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022779625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.022780097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022787944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847000000001797e-06, 'source_diff': 7.847000000001797e-06}, {'time': 0.022788417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022797514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.097000000003047e-06, 'source_diff': 9.097000000003047e-06}, {'time': 0.022797986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022804611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999999687e-06, 'source_diff': 6.624999999999687e-06}, {'time': 0.022805083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022813111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.022813583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022822875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.022823347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022833681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0334000000000731e-05, 'source_diff': 1.0334000000000731e-05}, {'time': 0.022834153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022840611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.022841097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022847458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999999867e-06, 'source_diff': 6.360999999999867e-06}, {'time': 0.022847944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022858278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0334000000000731e-05, 'source_diff': 1.0334000000000731e-05}, {'time': 0.02285875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022867903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.022868389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022873944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.022874417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022881306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.022881792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022891403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.022891875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:46.015" endtime="20201112 09:53:46.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.010" endtime="20201112 09:53:46.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:46.045" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:46.021" endtime="20201112 09:53:46.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.049" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:46.048" endtime="20201112 09:53:46.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.053" level="INFO">VALUE: {'sourcesource_diff': [0, 4.860000000009301e-07, 8.874999999998467e-06, 4.860000000009301e-07, 6.499999999999562e-06, 4.720000000013602e-07, 7.707999999998633e-06, 4.870000000004038e-07, 5.555000000000837e-06, 4.7199999999789077e-07, 1.0195000000001037e-05, 4.860000000009301e-07, 8.277999999996982e-06, 4.720000000013602e-07, 8.625000000001687e-06, 4.7199999999789077e-07, 4.917000000000116e-06, 4.860000000009301e-07, 5.6389999999982565e-06, 4.860000000009301e-07, 8.971999999999453e-06, 4.720000000013602e-07, 5.681000000000436e-06, 4.7199999999789077e-07, 4.083000000001946e-06, 4.7300000000083386e-07, 1.0040999999998829e-05, 4.7300000000083386e-07, 5.360999999998867e-06, 4.720000000013602e-07, 1.0429999999998774e-05, 4.7300000000083386e-07, 1.0486000000000523e-05, 4.7199999999789077e-07, 8.417000000000147e-06, 4.860000000009301e-07, 6.790999999999048e-06, 4.7300000000083386e-07, 1.0347000000000828e-05, 4.7199999999789077e-07, 9.570000000000412e-06, 4.720000000013602e-07, 6.290999999998548e-06, 4.7300000000083386e-07, 4.916000000000642e-06, 4.7300000000083386e-07, 5.637999999998783e-06, 4.7300000000083386e-07, 3.888999999999976e-06, 4.7199999999789077e-07, 6.374999999999437e-06, 4.720000000013602e-07, 3.986000000000961e-06, 4.859999999974607e-07, 8.056000000002811e-06, 4.7199999999789077e-07, 7.736000000001242e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.7199999999789077e-07, 9.806000000001092e-06, 4.7199999999789077e-07, 7.208000000001602e-06, 4.860000000009301e-07, 5.86199999999884e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.720000000013602e-07, 9.749999999999343e-06, 4.720000000013602e-07, 6.166999999997896e-06, 4.720000000013602e-07, 8.667000000000397e-06, 4.7199999999789077e-07, 7.847000000001797e-06, 4.729999999973644e-07, 9.097000000003047e-06, 4.7199999999789077e-07, 6.624999999999687e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.7199999999789077e-07, 9.292000000001022e-06, 4.720000000013602e-07, 1.0334000000000731e-05, 4.7199999999789077e-07, 6.458000000000852e-06, 4.860000000009301e-07, 6.360999999999867e-06, 4.859999999974607e-07, 1.0334000000000731e-05, 4.720000000013602e-07, 9.152999999997857e-06, 4.860000000009301e-07, 5.555000000000837e-06, 4.7300000000083386e-07, 6.888999999999507e-06, 4.860000000009301e-07, 9.610999999999648e-06, 4.7199999999789077e-07], 'time': [0.022495542, 0.022496028, 0.022504903, 0.022505389, 0.022511889, 0.022512361, 0.022520069, 0.022520556, 0.022526111, 0.022526583, 0.022536778, 0.022537264, 0.022545542, 0.022546014, 0.022554639, 0.022555111, 0.022560028, 0.022560514, 0.022566153, 0.022566639, 0.022575611, 0.022576083, 0.022581764, 0.022582236, 0.022586319, 0.022586792, 0.022596833, 0.022597306, 0.022602667, 0.022603139, 0.022613569, 0.022614042, 0.022624528, 0.022625, 0.022633417, 0.022633903, 0.022640694, 0.022641167, 0.022651514, 0.022651986, 0.022661556, 0.022662028, 0.022668319, 0.022668792, 0.022673708, 0.022674181, 0.022679819, 0.022680292, 0.022684181, 0.022684653, 0.022691028, 0.0226915, 0.022695486, 0.022695972, 0.022704028, 0.0227045, 0.022712236, 0.022712708, 0.022721, 0.022721472, 0.022731278, 0.02273175, 0.022738958, 0.022739444, 0.022745306, 0.022745778, 0.022753625, 0.022754097, 0.022763847, 0.022764319, 0.022770486, 0.022770958, 0.022779625, 0.022780097, 0.022787944, 0.022788417, 0.022797514, 0.022797986, 0.022804611, 0.022805083, 0.022813111, 0.022813583, 0.022822875, 0.022823347, 0.022833681, 0.022834153, 0.022840611, 0.022841097, 0.022847458, 0.022847944, 0.022858278, 0.02285875, 0.022867903, 0.022868389, 0.022873944, 0.022874417, 0.022881306, 0.022881792, 0.022891403, 0.022891875], 'eventdiff': [0, 4.860000000009301e-07, 8.874999999998467e-06, 4.860000000009301e-07, 6.499999999999562e-06, 4.720000000013602e-07, 7.707999999998633e-06, 4.870000000004038e-07, 5.555000000000837e-06, 4.7199999999789077e-07, 1.0195000000001037e-05, 4.860000000009301e-07, 8.277999999996982e-06, 4.720000000013602e-07, 8.625000000001687e-06, 4.7199999999789077e-07, 4.917000000000116e-06, 4.860000000009301e-07, 5.6389999999982565e-06, 4.860000000009301e-07, 8.971999999999453e-06, 4.720000000013602e-07, 5.681000000000436e-06, 4.7199999999789077e-07, 4.083000000001946e-06, 4.7300000000083386e-07, 1.0040999999998829e-05, 4.7300000000083386e-07, 5.360999999998867e-06, 4.720000000013602e-07, 1.0429999999998774e-05, 4.7300000000083386e-07, 1.0486000000000523e-05, 4.7199999999789077e-07, 8.417000000000147e-06, 4.860000000009301e-07, 6.790999999999048e-06, 4.7300000000083386e-07, 1.0347000000000828e-05, 4.7199999999789077e-07, 9.570000000000412e-06, 4.720000000013602e-07, 6.290999999998548e-06, 4.7300000000083386e-07, 4.916000000000642e-06, 4.7300000000083386e-07, 5.637999999998783e-06, 4.7300000000083386e-07, 3.888999999999976e-06, 4.7199999999789077e-07, 6.374999999999437e-06, 4.720000000013602e-07, 3.986000000000961e-06, 4.859999999974607e-07, 8.056000000002811e-06, 4.7199999999789077e-07, 7.736000000001242e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.7199999999789077e-07, 9.806000000001092e-06, 4.7199999999789077e-07, 7.208000000001602e-06, 4.860000000009301e-07, 5.86199999999884e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.720000000013602e-07, 9.749999999999343e-06, 4.720000000013602e-07, 6.166999999997896e-06, 4.720000000013602e-07, 8.667000000000397e-06, 4.7199999999789077e-07, 7.847000000001797e-06, 4.729999999973644e-07, 9.097000000003047e-06, 4.7199999999789077e-07, 6.624999999999687e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.7199999999789077e-07, 9.292000000001022e-06, 4.720000000013602e-07, 1.0334000000000731e-05, 4.7199999999789077e-07, 6.458000000000852e-06, 4.860000000009301e-07, 6.360999999999867e-06, 4.859999999974607e-07, 1.0334000000000731e-05, 4.720000000013602e-07, 9.152999999997857e-06, 4.860000000009301e-07, 5.555000000000837e-06, 4.7300000000083386e-07, 6.888999999999507e-06, 4.860000000009301e-07, 9.610999999999648e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:46.050" endtime="20201112 09:53:46.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.046" endtime="20201112 09:53:46.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:46.059" level="INFO">${RESULT} = [{'time': 0.022496028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022505389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:46.056" endtime="20201112 09:53:46.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:46.072" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:46.060" endtime="20201112 09:53:46.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.077" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:46.076" endtime="20201112 09:53:46.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.079" level="INFO">VALUE: [4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 09:53:46.078" endtime="20201112 09:53:46.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.073" endtime="20201112 09:53:46.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.082" endtime="20201112 09:53:46.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:46.086" endtime="20201112 09:53:46.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.084" endtime="20201112 09:53:46.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.081" endtime="20201112 09:53:46.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.670" endtime="20201112 09:53:46.107"></status>
</kw>
<msg timestamp="20201112 09:53:46.107" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.114" endtime="20201112 09:53:46.131"></status>
</kw>
<msg timestamp="20201112 09:53:46.132" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:46.113" endtime="20201112 09:53:46.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.134" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:46.133" endtime="20201112 09:53:46.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.135" endtime="20201112 09:53:46.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.110" endtime="20201112 09:53:46.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.109" endtime="20201112 09:53:46.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.146" endtime="20201112 09:53:46.430"></status>
</kw>
<msg timestamp="20201112 09:53:46.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021986639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021987111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:46.144" endtime="20201112 09:53:46.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021986639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021987111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:46.435" endtime="20201112 09:53:46.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.443" endtime="20201112 09:53:46.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.140" endtime="20201112 09:53:46.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.139" endtime="20201112 09:53:46.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.450" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:46.449" endtime="20201112 09:53:46.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.455" level="INFO">VALUE: [{'time': 0.021986639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021987111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021992778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.02199325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022001208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.958000000002352e-06, 'source_diff': 7.958000000002352e-06}, {'time': 0.022001681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022008181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.500000000003031e-06, 'source_diff': 6.500000000003031e-06}, {'time': 0.022008653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022013264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.022013736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022018681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.022019153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022025306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.022025778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022033097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319000000002157e-06, 'source_diff': 7.319000000002157e-06}, {'time': 0.022033569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022043903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0334000000000731e-05, 'source_diff': 1.0334000000000731e-05}, {'time': 0.022044375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022049486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.022049972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022060194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0222000000000703e-05, 'source_diff': 1.0222000000000703e-05}, {'time': 0.022060667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.0220685, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.833000000002227e-06, 'source_diff': 7.833000000002227e-06}, {'time': 0.022068972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022076681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.709000000001576e-06, 'source_diff': 7.709000000001576e-06}, {'time': 0.022077153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022084583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.430000000002712e-06, 'source_diff': 7.430000000002712e-06}, {'time': 0.022085069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022092903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.8340000000017e-06, 'source_diff': 7.8340000000017e-06}, {'time': 0.022093389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022100083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.693999999998063e-06, 'source_diff': 6.693999999998063e-06}, {'time': 0.022100556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022107889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.332999999998258e-06, 'source_diff': 7.332999999998258e-06}, {'time': 0.022108361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022117972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.022118458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022127028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.0221275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022135361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.022135833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02214575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916999999998177e-06, 'source_diff': 9.916999999998177e-06}, {'time': 0.022146222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022152819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.597000000000547e-06, 'source_diff': 6.597000000000547e-06}, {'time': 0.022153292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022157806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.022158292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022168736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0444000000001813e-05, 'source_diff': 1.0444000000001813e-05}, {'time': 0.022169208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022173722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.022174194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022183806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.611999999999121e-06, 'source_diff': 9.611999999999121e-06}, {'time': 0.022184292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022191403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.110999999997147e-06, 'source_diff': 7.110999999997147e-06}, {'time': 0.022191875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022196389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.022196875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022201486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.022201972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022211278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.02221175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022217833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.022218306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022226694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.388000000001533e-06, 'source_diff': 8.388000000001533e-06}, {'time': 0.022227167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022236889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722000000000203e-06, 'source_diff': 9.722000000000203e-06}, {'time': 0.022237361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022247458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0097000000000578e-05, 'source_diff': 1.0097000000000578e-05}, {'time': 0.022247944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022257667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722999999999676e-06, 'source_diff': 9.722999999999676e-06}, {'time': 0.022258139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022262125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.022262611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022268681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.069999999996911e-06, 'source_diff': 6.069999999996911e-06}, {'time': 0.022269153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022277111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.957999999998883e-06, 'source_diff': 7.957999999998883e-06}, {'time': 0.022277583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022283861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.022284347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.022292472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022301653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.022302139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022311958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.022312431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022322569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0137999999999814e-05, 'source_diff': 1.0137999999999814e-05}, {'time': 0.022323042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022328486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.444000000000282e-06, 'source_diff': 5.444000000000282e-06}, {'time': 0.022328972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022334319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.022334792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022342653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.022343125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022351167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.042000000003241e-06, 'source_diff': 8.042000000003241e-06}, {'time': 0.022351639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.02235575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.022356222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022363458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.022363931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022372806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.022373278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:46.451" endtime="20201112 09:53:46.457"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.446" endtime="20201112 09:53:46.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:46.482" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:46.458" endtime="20201112 09:53:46.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.485" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:46.484" endtime="20201112 09:53:46.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.490" level="INFO">VALUE: {'sourcesource_diff': [0, 4.720000000013602e-07, 5.667000000000866e-06, 4.7199999999789077e-07, 7.958000000002352e-06, 4.729999999973644e-07, 6.500000000003031e-06, 4.7199999999789077e-07, 4.611000000001586e-06, 4.7199999999789077e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 6.153000000001796e-06, 4.7199999999789077e-07, 7.319000000002157e-06, 4.7199999999789077e-07, 1.0334000000000731e-05, 4.720000000013602e-07, 5.110999999998617e-06, 4.860000000009301e-07, 1.0222000000000703e-05, 4.729999999973644e-07, 7.833000000002227e-06, 4.7199999999789077e-07, 7.709000000001576e-06, 4.7199999999789077e-07, 7.430000000002712e-06, 4.859999999974607e-07, 7.8340000000017e-06, 4.860000000009301e-07, 6.693999999998063e-06, 4.7300000000083386e-07, 7.332999999998258e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.860000000009301e-07, 8.569999999999411e-06, 4.720000000013602e-07, 7.860999999997897e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.720000000013602e-07, 6.597000000000547e-06, 4.7300000000083386e-07, 4.513999999997131e-06, 4.860000000009301e-07, 1.0444000000001813e-05, 4.7199999999789077e-07, 4.514000000000601e-06, 4.720000000013602e-07, 9.611999999999121e-06, 4.860000000009301e-07, 7.110999999997147e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.860000000009301e-07, 4.610999999998117e-06, 4.860000000009301e-07, 9.306000000000592e-06, 4.7199999999789077e-07, 6.083000000000477e-06, 4.7300000000083386e-07, 8.388000000001533e-06, 4.729999999973644e-07, 9.722000000000203e-06, 4.720000000013602e-07, 1.0097000000000578e-05, 4.859999999974607e-07, 9.722999999999676e-06, 4.720000000013602e-07, 3.986000000000961e-06, 4.860000000009301e-07, 6.069999999996911e-06, 4.720000000013602e-07, 7.957999999998883e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 4.860000000009301e-07, 7.652999999999827e-06, 4.720000000013602e-07, 9.181000000000467e-06, 4.859999999974607e-07, 9.819000000001188e-06, 4.7300000000083386e-07, 1.0137999999999814e-05, 4.7300000000083386e-07, 5.444000000000282e-06, 4.859999999974607e-07, 5.346999999999297e-06, 4.7300000000083386e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 8.042000000003241e-06, 4.7199999999789077e-07, 4.111000000001086e-06, 4.7199999999789077e-07, 7.236000000000742e-06, 4.7300000000083386e-07, 8.874999999998467e-06, 4.720000000013602e-07], 'time': [0.021986639, 0.021987111, 0.021992778, 0.02199325, 0.022001208, 0.022001681, 0.022008181, 0.022008653, 0.022013264, 0.022013736, 0.022018681, 0.022019153, 0.022025306, 0.022025778, 0.022033097, 0.022033569, 0.022043903, 0.022044375, 0.022049486, 0.022049972, 0.022060194, 0.022060667, 0.0220685, 0.022068972, 0.022076681, 0.022077153, 0.022084583, 0.022085069, 0.022092903, 0.022093389, 0.022100083, 0.022100556, 0.022107889, 0.022108361, 0.022117972, 0.022118458, 0.022127028, 0.0221275, 0.022135361, 0.022135833, 0.02214575, 0.022146222, 0.022152819, 0.022153292, 0.022157806, 0.022158292, 0.022168736, 0.022169208, 0.022173722, 0.022174194, 0.022183806, 0.022184292, 0.022191403, 0.022191875, 0.022196389, 0.022196875, 0.022201486, 0.022201972, 0.022211278, 0.02221175, 0.022217833, 0.022218306, 0.022226694, 0.022227167, 0.022236889, 0.022237361, 0.022247458, 0.022247944, 0.022257667, 0.022258139, 0.022262125, 0.022262611, 0.022268681, 0.022269153, 0.022277111, 0.022277583, 0.022283861, 0.022284347, 0.022292, 0.022292472, 0.022301653, 0.022302139, 0.022311958, 0.022312431, 0.022322569, 0.022323042, 0.022328486, 0.022328972, 0.022334319, 0.022334792, 0.022342653, 0.022343125, 0.022351167, 0.022351639, 0.02235575, 0.022356222, 0.022363458, 0.022363931, 0.022372806, 0.022373278], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'diff': [0, 4.720000000013602e-07, 5.667000000000866e-06, 4.7199999999789077e-07, 7.958000000002352e-06, 4.729999999973644e-07, 6.500000000003031e-06, 4.7199999999789077e-07, 4.611000000001586e-06, 4.7199999999789077e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 6.153000000001796e-06, 4.7199999999789077e-07, 7.319000000002157e-06, 4.7199999999789077e-07, 1.0334000000000731e-05, 4.720000000013602e-07, 5.110999999998617e-06, 4.860000000009301e-07, 1.0222000000000703e-05, 4.729999999973644e-07, 7.833000000002227e-06, 4.7199999999789077e-07, 7.709000000001576e-06, 4.7199999999789077e-07, 7.430000000002712e-06, 4.859999999974607e-07, 7.8340000000017e-06, 4.860000000009301e-07, 6.693999999998063e-06, 4.7300000000083386e-07, 7.332999999998258e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.860000000009301e-07, 8.569999999999411e-06, 4.720000000013602e-07, 7.860999999997897e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.720000000013602e-07, 6.597000000000547e-06, 4.7300000000083386e-07, 4.513999999997131e-06, 4.860000000009301e-07, 1.0444000000001813e-05, 4.7199999999789077e-07, 4.514000000000601e-06, 4.720000000013602e-07, 9.611999999999121e-06, 4.860000000009301e-07, 7.110999999997147e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.860000000009301e-07, 4.610999999998117e-06, 4.860000000009301e-07, 9.306000000000592e-06, 4.7199999999789077e-07, 6.083000000000477e-06, 4.7300000000083386e-07, 8.388000000001533e-06, 4.729999999973644e-07, 9.722000000000203e-06, 4.720000000013602e-07, 1.0097000000000578e-05, 4.859999999974607e-07, 9.722999999999676e-06, 4.720000000013602e-07, 3.986000000000961e-06, 4.860000000009301e-07, 6.069999999996911e-06, 4.720000000013602e-07, 7.957999999998883e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 4.860000000009301e-07, 7.652999999999827e-06, 4.720000000013602e-07, 9.181000000000467e-06, 4.859999999974607e-07, 9.819000000001188e-06, 4.7300000000083386e-07, 1.0137999999999814e-05, 4.7300000000083386e-07, 5.444000000000282e-06, 4.859999999974607e-07, 5.346999999999297e-06, 4.7300000000083386e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 8.042000000003241e-06, 4.7199999999789077e-07, 4.111000000001086e-06, 4.7199999999789077e-07, 7.236000000000742e-06, 4.7300000000083386e-07, 8.874999999998467e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:46.487" endtime="20201112 09:53:46.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.482" endtime="20201112 09:53:46.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:46.495" level="INFO">${RESULT} = [{'time': 0.021987111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02199325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:53:46.492" endtime="20201112 09:53:46.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:46.509" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:46.496" endtime="20201112 09:53:46.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.513" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:46.512" endtime="20201112 09:53:46.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.516" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:53:46.514" endtime="20201112 09:53:46.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.509" endtime="20201112 09:53:46.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.519" endtime="20201112 09:53:46.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:46.522" endtime="20201112 09:53:46.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.521" endtime="20201112 09:53:46.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.517" endtime="20201112 09:53:46.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.107" endtime="20201112 09:53:46.543"></status>
</kw>
<msg timestamp="20201112 09:53:46.544" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.551" endtime="20201112 09:53:46.569"></status>
</kw>
<msg timestamp="20201112 09:53:46.570" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:46.550" endtime="20201112 09:53:46.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.572" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:46.571" endtime="20201112 09:53:46.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.573" endtime="20201112 09:53:46.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.547" endtime="20201112 09:53:46.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.545" endtime="20201112 09:53:46.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.582" endtime="20201112 09:53:46.871"></status>
</kw>
<msg timestamp="20201112 09:53:46.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022317097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022317569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:46.581" endtime="20201112 09:53:46.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022317097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022317569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:46.876" endtime="20201112 09:53:46.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.884" endtime="20201112 09:53:46.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.578" endtime="20201112 09:53:46.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.576" endtime="20201112 09:53:46.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.891" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:46.890" endtime="20201112 09:53:46.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.896" level="INFO">VALUE: [{'time': 0.022317097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022317569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022321875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.022322347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022329667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.320000000001631e-06, 'source_diff': 7.320000000001631e-06}, {'time': 0.022330153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022339444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.291000000001548e-06, 'source_diff': 9.291000000001548e-06}, {'time': 0.022339931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022348917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.022349389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022356083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.693999999998063e-06, 'source_diff': 6.693999999998063e-06}, {'time': 0.022356569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022364819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.022365306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022372625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.022373097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022381153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.022381625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022391764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0139000000002757e-05, 'source_diff': 1.0139000000002757e-05}, {'time': 0.022392236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022397792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.022398264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022405694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.429999999999243e-06, 'source_diff': 7.429999999999243e-06}, {'time': 0.022406167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022410903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.022411375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022416931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.022417403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022424417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.022424889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022429708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.022430194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022434181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.987000000000435e-06, 'source_diff': 3.987000000000435e-06}, {'time': 0.022434667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022440222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.022440694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022446667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.022447139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022453319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.179999999997993e-06, 'source_diff': 6.179999999997993e-06}, {'time': 0.022453792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022460194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.401999999999103e-06, 'source_diff': 6.401999999999103e-06}, {'time': 0.022460667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022467458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.790999999999048e-06, 'source_diff': 6.790999999999048e-06}, {'time': 0.022467944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022473597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.022474069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022484417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0348000000000301e-05, 'source_diff': 1.0348000000000301e-05}, {'time': 0.022484889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022488764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.02248925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022496778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.02249725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022507194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.944000000001313e-06, 'source_diff': 9.944000000001313e-06}, {'time': 0.022507667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022515639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.972000000001922e-06, 'source_diff': 7.972000000001922e-06}, {'time': 0.022516125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022525083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.957999999999883e-06, 'source_diff': 8.957999999999883e-06}, {'time': 0.022525569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022532264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.022532736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022538583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.022539056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022543583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527000000000697e-06, 'source_diff': 4.527000000000697e-06}, {'time': 0.022544056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022553958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.901999999999134e-06, 'source_diff': 9.901999999999134e-06}, {'time': 0.022554444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022560194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.022560681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022568736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}, {'time': 0.022569208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022576736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.022577208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022584333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.022584806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022591403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.597000000000547e-06, 'source_diff': 6.597000000000547e-06}, {'time': 0.022591875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022600444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.022600917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022609264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.02260975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022616014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.022616486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022622653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.166999999997896e-06, 'source_diff': 6.166999999997896e-06}, {'time': 0.022623139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022629819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.679999999998493e-06, 'source_diff': 6.679999999998493e-06}, {'time': 0.022630292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022635417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.022635903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022645903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.999999999999593e-06, 'source_diff': 9.999999999999593e-06}, {'time': 0.022646375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022654625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.022655097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022664708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.022665181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022671764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.583000000000977e-06, 'source_diff': 6.583000000000977e-06}, {'time': 0.022672236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022678319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.022678792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022687264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.022687736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:46.892" endtime="20201112 09:53:46.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.887" endtime="20201112 09:53:46.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:46.923" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:46.898" endtime="20201112 09:53:46.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.927" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:46.926" endtime="20201112 09:53:46.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.931" level="INFO">VALUE: {'sourcesource_diff': [0, 4.7199999999789077e-07, 4.30600000000253e-06, 4.7199999999789077e-07, 7.320000000001631e-06, 4.859999999974607e-07, 9.291000000001548e-06, 4.870000000004038e-07, 8.985999999999023e-06, 4.720000000013602e-07, 6.693999999998063e-06, 4.860000000009301e-07, 8.250000000001312e-06, 4.870000000004038e-07, 7.318999999998688e-06, 4.720000000013602e-07, 8.055999999999341e-06, 4.7199999999789077e-07, 1.0139000000002757e-05, 4.7199999999789077e-07, 5.556000000000311e-06, 4.720000000013602e-07, 7.429999999999243e-06, 4.7300000000083386e-07, 4.735999999998242e-06, 4.720000000013602e-07, 5.556000000000311e-06, 4.7199999999789077e-07, 7.013999999999632e-06, 4.720000000013602e-07, 4.818999999999657e-06, 4.860000000009301e-07, 3.987000000000435e-06, 4.859999999974607e-07, 5.555000000000837e-06, 4.720000000013602e-07, 5.9729999999993955e-06, 4.720000000013602e-07, 6.179999999997993e-06, 4.7300000000083386e-07, 6.401999999999103e-06, 4.7300000000083386e-07, 6.790999999999048e-06, 4.860000000009301e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 1.0348000000000301e-05, 4.720000000013602e-07, 3.875000000000406e-06, 4.859999999974607e-07, 7.527999999999702e-06, 4.720000000013602e-07, 9.944000000001313e-06, 4.729999999973644e-07, 7.972000000001922e-06, 4.860000000009301e-07, 8.957999999999883e-06, 4.859999999974607e-07, 6.695000000001006e-06, 4.720000000013602e-07, 5.846999999999797e-06, 4.729999999973644e-07, 4.527000000000697e-06, 4.7300000000083386e-07, 9.901999999999134e-06, 4.860000000009301e-07, 5.749999999998812e-06, 4.870000000004038e-07, 8.054999999999868e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.729999999973644e-07, 6.597000000000547e-06, 4.720000000013602e-07, 8.568999999999938e-06, 4.7300000000083386e-07, 8.346999999998828e-06, 4.860000000009301e-07, 6.2639999999988816e-06, 4.720000000013602e-07, 6.166999999997896e-06, 4.860000000009301e-07, 6.679999999998493e-06, 4.7300000000083386e-07, 5.125000000001656e-06, 4.859999999974607e-07, 9.999999999999593e-06, 4.720000000013602e-07, 8.250000000001312e-06, 4.7199999999789077e-07, 9.610999999999648e-06, 4.7300000000083386e-07, 6.583000000000977e-06, 4.7199999999789077e-07, 6.083000000000477e-06, 4.7300000000083386e-07, 8.471999999998953e-06, 4.720000000013602e-07], 'time': [0.022317097, 0.022317569, 0.022321875, 0.022322347, 0.022329667, 0.022330153, 0.022339444, 0.022339931, 0.022348917, 0.022349389, 0.022356083, 0.022356569, 0.022364819, 0.022365306, 0.022372625, 0.022373097, 0.022381153, 0.022381625, 0.022391764, 0.022392236, 0.022397792, 0.022398264, 0.022405694, 0.022406167, 0.022410903, 0.022411375, 0.022416931, 0.022417403, 0.022424417, 0.022424889, 0.022429708, 0.022430194, 0.022434181, 0.022434667, 0.022440222, 0.022440694, 0.022446667, 0.022447139, 0.022453319, 0.022453792, 0.022460194, 0.022460667, 0.022467458, 0.022467944, 0.022473597, 0.022474069, 0.022484417, 0.022484889, 0.022488764, 0.02248925, 0.022496778, 0.02249725, 0.022507194, 0.022507667, 0.022515639, 0.022516125, 0.022525083, 0.022525569, 0.022532264, 0.022532736, 0.022538583, 0.022539056, 0.022543583, 0.022544056, 0.022553958, 0.022554444, 0.022560194, 0.022560681, 0.022568736, 0.022569208, 0.022576736, 0.022577208, 0.022584333, 0.022584806, 0.022591403, 0.022591875, 0.022600444, 0.022600917, 0.022609264, 0.02260975, 0.022616014, 0.022616486, 0.022622653, 0.022623139, 0.022629819, 0.022630292, 0.022635417, 0.022635903, 0.022645903, 0.022646375, 0.022654625, 0.022655097, 0.022664708, 0.022665181, 0.022671764, 0.022672236, 0.022678319, 0.022678792, 0.022687264, 0.022687736], 'eventdiff': [0, 4.7199999999789077e-07, 4.30600000000253e-06, 4.7199999999789077e-07, 7.320000000001631e-06, 4.859999999974607e-07, 9.291000000001548e-06, 4.870000000004038e-07, 8.985999999999023e-06, 4.720000000013602e-07, 6.693999999998063e-06, 4.860000000009301e-07, 8.250000000001312e-06, 4.870000000004038e-07, 7.318999999998688e-06, 4.720000000013602e-07, 8.055999999999341e-06, 4.7199999999789077e-07, 1.0139000000002757e-05, 4.7199999999789077e-07, 5.556000000000311e-06, 4.720000000013602e-07, 7.429999999999243e-06, 4.7300000000083386e-07, 4.735999999998242e-06, 4.720000000013602e-07, 5.556000000000311e-06, 4.7199999999789077e-07, 7.013999999999632e-06, 4.720000000013602e-07, 4.818999999999657e-06, 4.860000000009301e-07, 3.987000000000435e-06, 4.859999999974607e-07, 5.555000000000837e-06, 4.720000000013602e-07, 5.9729999999993955e-06, 4.720000000013602e-07, 6.179999999997993e-06, 4.7300000000083386e-07, 6.401999999999103e-06, 4.7300000000083386e-07, 6.790999999999048e-06, 4.860000000009301e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 1.0348000000000301e-05, 4.720000000013602e-07, 3.875000000000406e-06, 4.859999999974607e-07, 7.527999999999702e-06, 4.720000000013602e-07, 9.944000000001313e-06, 4.729999999973644e-07, 7.972000000001922e-06, 4.860000000009301e-07, 8.957999999999883e-06, 4.859999999974607e-07, 6.695000000001006e-06, 4.720000000013602e-07, 5.846999999999797e-06, 4.729999999973644e-07, 4.527000000000697e-06, 4.7300000000083386e-07, 9.901999999999134e-06, 4.860000000009301e-07, 5.749999999998812e-06, 4.870000000004038e-07, 8.054999999999868e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.729999999973644e-07, 6.597000000000547e-06, 4.720000000013602e-07, 8.568999999999938e-06, 4.7300000000083386e-07, 8.346999999998828e-06, 4.860000000009301e-07, 6.2639999999988816e-06, 4.720000000013602e-07, 6.166999999997896e-06, 4.860000000009301e-07, 6.679999999998493e-06, 4.7300000000083386e-07, 5.125000000001656e-06, 4.859999999974607e-07, 9.999999999999593e-06, 4.720000000013602e-07, 8.250000000001312e-06, 4.7199999999789077e-07, 9.610999999999648e-06, 4.7300000000083386e-07, 6.583000000000977e-06, 4.7199999999789077e-07, 6.083000000000477e-06, 4.7300000000083386e-07, 8.471999999998953e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:46.928" endtime="20201112 09:53:46.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.924" endtime="20201112 09:53:46.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:46.936" level="INFO">${RESULT} = [{'time': 0.022317569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022322347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:46.933" endtime="20201112 09:53:46.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:46.950" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:46.937" endtime="20201112 09:53:46.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.954" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:46.953" endtime="20201112 09:53:46.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.956" level="INFO">VALUE: [4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:53:46.955" endtime="20201112 09:53:46.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.951" endtime="20201112 09:53:46.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.960" endtime="20201112 09:53:46.961"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:46.963" endtime="20201112 09:53:46.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.962" endtime="20201112 09:53:46.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.958" endtime="20201112 09:53:46.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.544" endtime="20201112 09:53:46.984"></status>
</kw>
<msg timestamp="20201112 09:53:46.984" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.992" endtime="20201112 09:53:47.006"></status>
</kw>
<msg timestamp="20201112 09:53:47.006" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:46.990" endtime="20201112 09:53:47.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.009" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:47.007" endtime="20201112 09:53:47.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.010" endtime="20201112 09:53:47.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.988" endtime="20201112 09:53:47.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.986" endtime="20201112 09:53:47.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.020" endtime="20201112 09:53:47.306"></status>
</kw>
<msg timestamp="20201112 09:53:47.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018812542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018813028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:47.018" endtime="20201112 09:53:47.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018812542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018813028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:47.310" endtime="20201112 09:53:47.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.319" endtime="20201112 09:53:47.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.015" endtime="20201112 09:53:47.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.013" endtime="20201112 09:53:47.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.325" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:47.324" endtime="20201112 09:53:47.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.330" level="INFO">VALUE: [{'time': 0.018812542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018813028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018819833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805000000002087e-06, 'source_diff': 6.805000000002087e-06}, {'time': 0.018820306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018830542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.018831014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018838125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.018838611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018845514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9029999999990765e-06, 'source_diff': 6.9029999999990765e-06}, {'time': 0.018846, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018854889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.018855361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018860389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.018860861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018869264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.403000000000577e-06, 'source_diff': 8.403000000000577e-06}, {'time': 0.018869736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018875889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.1529999999983265e-06, 'source_diff': 6.1529999999983265e-06}, {'time': 0.018876361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018880889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.018881361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018888028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.667000000001866e-06, 'source_diff': 6.667000000001866e-06}, {'time': 0.0188885, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018897833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.018898319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018906361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.018906847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018913444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.597000000000547e-06, 'source_diff': 6.597000000000547e-06}, {'time': 0.018913917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018920306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.389000000002476e-06, 'source_diff': 6.389000000002476e-06}, {'time': 0.018920778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018927292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.018927764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018937681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.917000000001647e-06, 'source_diff': 9.917000000001647e-06}, {'time': 0.018938153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018944958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805000000002087e-06, 'source_diff': 6.805000000002087e-06}, {'time': 0.018945431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018955667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.018956139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01896375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.611000000001117e-06, 'source_diff': 7.611000000001117e-06}, {'time': 0.018964222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018972417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194999999999036e-06, 'source_diff': 8.194999999999036e-06}, {'time': 0.018972889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0189825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.018982986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018987875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.018988347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018994361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}, {'time': 0.018994847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019004681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.834000000000231e-06, 'source_diff': 9.834000000000231e-06}, {'time': 0.019005153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019010806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.019011278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019015375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.019015861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019024028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166999999999897e-06, 'source_diff': 8.166999999999897e-06}, {'time': 0.0190245, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019032667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166999999999897e-06, 'source_diff': 8.166999999999897e-06}, {'time': 0.019033139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01904025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.019040722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019048556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.8340000000017e-06, 'source_diff': 7.8340000000017e-06}, {'time': 0.019049028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.019055486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019064153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.019064639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.0190705, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.019070986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019075181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.019075653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019083931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.277999999996982e-06, 'source_diff': 8.277999999996982e-06}, {'time': 0.019084403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019093069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.666000000000923e-06, 'source_diff': 8.666000000000923e-06}, {'time': 0.019093556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019101806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.249999999997842e-06, 'source_diff': 8.249999999997842e-06}, {'time': 0.019102292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019109917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.019110403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019116889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.019117375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019122403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.019122875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019127083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.207999999998602e-06, 'source_diff': 4.207999999998602e-06}, {'time': 0.019127556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019136542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.019137028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019144764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.019145236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019150806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.569999999999881e-06, 'source_diff': 5.569999999999881e-06}, {'time': 0.019151278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019157278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.01915775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019162556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.019163028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019173167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0139000000002757e-05, 'source_diff': 1.0139000000002757e-05}, {'time': 0.019173639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019182222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.019182694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019187625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.019188097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:47.326" endtime="20201112 09:53:47.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.322" endtime="20201112 09:53:47.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:47.356" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:47.333" endtime="20201112 09:53:47.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.360" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:47.359" endtime="20201112 09:53:47.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.364" level="INFO">VALUE: {'sourcesource_diff': [0, 4.859999999974607e-07, 6.805000000002087e-06, 4.729999999973644e-07, 1.0236000000000273e-05, 4.720000000013602e-07, 7.111000000000617e-06, 4.860000000009301e-07, 6.9029999999990765e-06, 4.860000000009301e-07, 8.888999999998037e-06, 4.720000000013602e-07, 5.028000000000671e-06, 4.7199999999789077e-07, 8.403000000000577e-06, 4.720000000013602e-07, 6.1529999999983265e-06, 4.720000000013602e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 6.667000000001866e-06, 4.7199999999789077e-07, 9.333000000000258e-06, 4.860000000009301e-07, 8.041999999999772e-06, 4.860000000009301e-07, 6.597000000000547e-06, 4.729999999973644e-07, 6.389000000002476e-06, 4.7199999999789077e-07, 6.513999999999132e-06, 4.720000000013602e-07, 9.917000000001647e-06, 4.7199999999789077e-07, 6.805000000002087e-06, 4.729999999973644e-07, 1.0236000000000273e-05, 4.720000000013602e-07, 7.611000000001117e-06, 4.7199999999789077e-07, 8.194999999999036e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.860000000009301e-07, 4.889000000000976e-06, 4.7199999999789077e-07, 6.014000000002101e-06, 4.859999999974607e-07, 9.834000000000231e-06, 4.720000000013602e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.859999999974607e-07, 8.166999999999897e-06, 4.720000000013602e-07, 8.166999999999897e-06, 4.720000000013602e-07, 7.111000000000617e-06, 4.7199999999789077e-07, 7.8340000000017e-06, 4.7199999999789077e-07, 5.971999999999922e-06, 4.860000000009301e-07, 8.667000000000397e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.860000000009301e-07, 4.1949999999985055e-06, 4.720000000013602e-07, 8.277999999996982e-06, 4.720000000013602e-07, 8.666000000000923e-06, 4.870000000004038e-07, 8.249999999997842e-06, 4.860000000009301e-07, 7.625000000000687e-06, 4.860000000009301e-07, 6.485999999999992e-06, 4.859999999974607e-07, 5.028000000000671e-06, 4.720000000013602e-07, 4.207999999998602e-06, 4.7300000000083386e-07, 8.985999999999023e-06, 4.860000000009301e-07, 7.736000000001242e-06, 4.7199999999789077e-07, 5.569999999999881e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 4.805999999999561e-06, 4.7199999999789077e-07, 1.0139000000002757e-05, 4.7199999999789077e-07, 8.582999999999508e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.720000000013602e-07], 'time': [0.018812542, 0.018813028, 0.018819833, 0.018820306, 0.018830542, 0.018831014, 0.018838125, 0.018838611, 0.018845514, 0.018846, 0.018854889, 0.018855361, 0.018860389, 0.018860861, 0.018869264, 0.018869736, 0.018875889, 0.018876361, 0.018880889, 0.018881361, 0.018888028, 0.0188885, 0.018897833, 0.018898319, 0.018906361, 0.018906847, 0.018913444, 0.018913917, 0.018920306, 0.018920778, 0.018927292, 0.018927764, 0.018937681, 0.018938153, 0.018944958, 0.018945431, 0.018955667, 0.018956139, 0.01896375, 0.018964222, 0.018972417, 0.018972889, 0.0189825, 0.018982986, 0.018987875, 0.018988347, 0.018994361, 0.018994847, 0.019004681, 0.019005153, 0.019010806, 0.019011278, 0.019015375, 0.019015861, 0.019024028, 0.0190245, 0.019032667, 0.019033139, 0.01904025, 0.019040722, 0.019048556, 0.019049028, 0.019055, 0.019055486, 0.019064153, 0.019064639, 0.0190705, 0.019070986, 0.019075181, 0.019075653, 0.019083931, 0.019084403, 0.019093069, 0.019093556, 0.019101806, 0.019102292, 0.019109917, 0.019110403, 0.019116889, 0.019117375, 0.019122403, 0.019122875, 0.019127083, 0.019127556, 0.019136542, 0.019137028, 0.019144764, 0.019145236, 0.019150806, 0.019151278, 0.019157278, 0.01915775, 0.019162556, 0.019163028, 0.019173167, 0.019173639, 0.019182222, 0.019182694, 0.019187625, 0.019188097], 'eventdiff': [0, 4.859999999974607e-07, 6.805000000002087e-06, 4.729999999973644e-07, 1.0236000000000273e-05, 4.720000000013602e-07, 7.111000000000617e-06, 4.860000000009301e-07, 6.9029999999990765e-06, 4.860000000009301e-07, 8.888999999998037e-06, 4.720000000013602e-07, 5.028000000000671e-06, 4.7199999999789077e-07, 8.403000000000577e-06, 4.720000000013602e-07, 6.1529999999983265e-06, 4.720000000013602e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 6.667000000001866e-06, 4.7199999999789077e-07, 9.333000000000258e-06, 4.860000000009301e-07, 8.041999999999772e-06, 4.860000000009301e-07, 6.597000000000547e-06, 4.729999999973644e-07, 6.389000000002476e-06, 4.7199999999789077e-07, 6.513999999999132e-06, 4.720000000013602e-07, 9.917000000001647e-06, 4.7199999999789077e-07, 6.805000000002087e-06, 4.729999999973644e-07, 1.0236000000000273e-05, 4.720000000013602e-07, 7.611000000001117e-06, 4.7199999999789077e-07, 8.194999999999036e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.860000000009301e-07, 4.889000000000976e-06, 4.7199999999789077e-07, 6.014000000002101e-06, 4.859999999974607e-07, 9.834000000000231e-06, 4.720000000013602e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.859999999974607e-07, 8.166999999999897e-06, 4.720000000013602e-07, 8.166999999999897e-06, 4.720000000013602e-07, 7.111000000000617e-06, 4.7199999999789077e-07, 7.8340000000017e-06, 4.7199999999789077e-07, 5.971999999999922e-06, 4.860000000009301e-07, 8.667000000000397e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.860000000009301e-07, 4.1949999999985055e-06, 4.720000000013602e-07, 8.277999999996982e-06, 4.720000000013602e-07, 8.666000000000923e-06, 4.870000000004038e-07, 8.249999999997842e-06, 4.860000000009301e-07, 7.625000000000687e-06, 4.860000000009301e-07, 6.485999999999992e-06, 4.859999999974607e-07, 5.028000000000671e-06, 4.720000000013602e-07, 4.207999999998602e-06, 4.7300000000083386e-07, 8.985999999999023e-06, 4.860000000009301e-07, 7.736000000001242e-06, 4.7199999999789077e-07, 5.569999999999881e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 4.805999999999561e-06, 4.7199999999789077e-07, 1.0139000000002757e-05, 4.7199999999789077e-07, 8.582999999999508e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:47.361" endtime="20201112 09:53:47.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.357" endtime="20201112 09:53:47.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:47.369" level="INFO">${RESULT} = [{'time': 0.018813028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018820306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:47.366" endtime="20201112 09:53:47.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:47.383" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:47.370" endtime="20201112 09:53:47.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.387" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:47.386" endtime="20201112 09:53:47.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.389" level="INFO">VALUE: [4.859999999974607e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:53:47.388" endtime="20201112 09:53:47.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.384" endtime="20201112 09:53:47.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.393" endtime="20201112 09:53:47.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:47.397" endtime="20201112 09:53:47.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.395" endtime="20201112 09:53:47.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.391" endtime="20201112 09:53:47.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.985" endtime="20201112 09:53:47.418"></status>
</kw>
<msg timestamp="20201112 09:53:47.418" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.426" endtime="20201112 09:53:47.445"></status>
</kw>
<msg timestamp="20201112 09:53:47.445" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:47.424" endtime="20201112 09:53:47.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.448" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:47.446" endtime="20201112 09:53:47.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.449" endtime="20201112 09:53:47.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.421" endtime="20201112 09:53:47.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.420" endtime="20201112 09:53:47.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.458" endtime="20201112 09:53:47.746"></status>
</kw>
<msg timestamp="20201112 09:53:47.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022132167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:47.456" endtime="20201112 09:53:47.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022132167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:47.750" endtime="20201112 09:53:47.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.759" endtime="20201112 09:53:47.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.454" endtime="20201112 09:53:47.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.452" endtime="20201112 09:53:47.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.766" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:47.765" endtime="20201112 09:53:47.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.771" level="INFO">VALUE: [{'time': 0.022131694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022132167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022138458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.022138931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022146347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.415999999999673e-06, 'source_diff': 7.415999999999673e-06}, {'time': 0.022146819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022156236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.416999999997677e-06, 'source_diff': 9.416999999997677e-06}, {'time': 0.022156708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022163514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.022163986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022173917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.931000000001217e-06, 'source_diff': 9.931000000001217e-06}, {'time': 0.022174389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022181514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.022181986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022189208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2219999999977025e-06, 'source_diff': 7.2219999999977025e-06}, {'time': 0.022189681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022194694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.013000000001627e-06, 'source_diff': 5.013000000001627e-06}, {'time': 0.022195181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022201972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.790999999999048e-06, 'source_diff': 6.790999999999048e-06}, {'time': 0.022202444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022210472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.027999999996732e-06, 'source_diff': 8.027999999996732e-06}, {'time': 0.022210958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022216292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.3339999999992005e-06, 'source_diff': 5.3339999999992005e-06}, {'time': 0.022216764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022223875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.022224347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022231653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.306000000002061e-06, 'source_diff': 7.306000000002061e-06}, {'time': 0.022232125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022237583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.022238056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022245903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847000000001797e-06, 'source_diff': 7.847000000001797e-06}, {'time': 0.022246375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022250653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.022251139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022258153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.022258625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022267931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.022268403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022277389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986000000002492e-06, 'source_diff': 8.986000000002492e-06}, {'time': 0.022277875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022286347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.472000000002422e-06, 'source_diff': 8.472000000002422e-06}, {'time': 0.022286819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022293931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1120000000000905e-06, 'source_diff': 7.1120000000000905e-06}, {'time': 0.022294403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022303931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.527999999998232e-06, 'source_diff': 9.527999999998232e-06}, {'time': 0.022304403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022311403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.022311875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022317431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.022317903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022324069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.165999999998423e-06, 'source_diff': 6.165999999998423e-06}, {'time': 0.022324542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022329875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.022330361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022338972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.022339444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022345778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.334000000000201e-06, 'source_diff': 6.334000000000201e-06}, {'time': 0.02234625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022351264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0139999999976315e-06, 'source_diff': 5.0139999999976315e-06}, {'time': 0.02235175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022355736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.022356208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022364917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.709000000002576e-06, 'source_diff': 8.709000000002576e-06}, {'time': 0.022365389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022372556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1669999999988965e-06, 'source_diff': 7.1669999999988965e-06}, {'time': 0.022373042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022382333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.291000000001548e-06, 'source_diff': 9.291000000001548e-06}, {'time': 0.022382819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022391486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.666999999996927e-06, 'source_diff': 8.666999999996927e-06}, {'time': 0.022391972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022399125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1529999999993266e-06, 'source_diff': 7.1529999999993266e-06}, {'time': 0.022399597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022403778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.02240425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022410861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.611000000000117e-06, 'source_diff': 6.611000000000117e-06}, {'time': 0.022411333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022421764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0431000000001717e-05, 'source_diff': 1.0431000000001717e-05}, {'time': 0.022422236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022427806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.569999999999881e-06, 'source_diff': 5.569999999999881e-06}, {'time': 0.022428278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022432486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.208000000002071e-06, 'source_diff': 4.208000000002071e-06}, {'time': 0.022432958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022436847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.022437333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.6669999999983964e-06, 'source_diff': 6.6669999999983964e-06}, {'time': 0.022444472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022452972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.022453444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022461, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.022461472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022465472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.022465944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022470181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.236999999997215e-06, 'source_diff': 4.236999999997215e-06}, {'time': 0.022470653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022479917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.263999999998412e-06, 'source_diff': 9.263999999998412e-06}, {'time': 0.022480389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022485222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.022485694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022494681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986999999998496e-06, 'source_diff': 8.986999999998496e-06}, {'time': 0.022495153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:47.767" endtime="20201112 09:53:47.772"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.762" endtime="20201112 09:53:47.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:47.797" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:47.773" endtime="20201112 09:53:47.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.801" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:47.800" endtime="20201112 09:53:47.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.805" level="INFO">VALUE: {'sourcesource_diff': [0, 4.7300000000083386e-07, 6.290999999998548e-06, 4.7300000000083386e-07, 7.415999999999673e-06, 4.720000000013602e-07, 9.416999999997677e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.720000000013602e-07, 9.931000000001217e-06, 4.7199999999789077e-07, 7.125000000000187e-06, 4.720000000013602e-07, 7.2219999999977025e-06, 4.7300000000083386e-07, 5.013000000001627e-06, 4.870000000004038e-07, 6.790999999999048e-06, 4.720000000013602e-07, 8.027999999996732e-06, 4.860000000009301e-07, 5.3339999999992005e-06, 4.720000000013602e-07, 7.111000000000617e-06, 4.7199999999789077e-07, 7.306000000002061e-06, 4.7199999999789077e-07, 5.457999999999852e-06, 4.7300000000083386e-07, 7.847000000001797e-06, 4.7199999999789077e-07, 4.277999999999921e-06, 4.860000000009301e-07, 7.013999999999632e-06, 4.720000000013602e-07, 9.306000000000592e-06, 4.7199999999789077e-07, 8.986000000002492e-06, 4.859999999974607e-07, 8.472000000002422e-06, 4.7199999999789077e-07, 7.1120000000000905e-06, 4.720000000013602e-07, 9.527999999998232e-06, 4.720000000013602e-07, 7.000000000000062e-06, 4.7199999999789077e-07, 5.556000000000311e-06, 4.720000000013602e-07, 6.165999999998423e-06, 4.7300000000083386e-07, 5.332999999999727e-06, 4.860000000009301e-07, 8.610999999998648e-06, 4.720000000013602e-07, 6.334000000000201e-06, 4.720000000013602e-07, 5.0139999999976315e-06, 4.860000000009301e-07, 3.986000000000961e-06, 4.7199999999789077e-07, 8.709000000002576e-06, 4.7199999999789077e-07, 7.1669999999988965e-06, 4.860000000009301e-07, 9.291000000001548e-06, 4.860000000009301e-07, 8.666999999996927e-06, 4.860000000009301e-07, 7.1529999999993266e-06, 4.720000000013602e-07, 4.1809999999989356e-06, 4.720000000013602e-07, 6.611000000000117e-06, 4.7199999999789077e-07, 1.0431000000001717e-05, 4.720000000013602e-07, 5.569999999999881e-06, 4.7199999999789077e-07, 4.208000000002071e-06, 4.7199999999789077e-07, 3.888999999999976e-06, 4.860000000009301e-07, 6.6669999999983964e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.7199999999789077e-07, 7.555999999998841e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.720000000013602e-07, 4.236999999997215e-06, 4.720000000013602e-07, 9.263999999998412e-06, 4.720000000013602e-07, 4.832999999999227e-06, 4.720000000013602e-07, 8.986999999998496e-06, 4.720000000013602e-07], 'time': [0.022131694, 0.022132167, 0.022138458, 0.022138931, 0.022146347, 0.022146819, 0.022156236, 0.022156708, 0.022163514, 0.022163986, 0.022173917, 0.022174389, 0.022181514, 0.022181986, 0.022189208, 0.022189681, 0.022194694, 0.022195181, 0.022201972, 0.022202444, 0.022210472, 0.022210958, 0.022216292, 0.022216764, 0.022223875, 0.022224347, 0.022231653, 0.022232125, 0.022237583, 0.022238056, 0.022245903, 0.022246375, 0.022250653, 0.022251139, 0.022258153, 0.022258625, 0.022267931, 0.022268403, 0.022277389, 0.022277875, 0.022286347, 0.022286819, 0.022293931, 0.022294403, 0.022303931, 0.022304403, 0.022311403, 0.022311875, 0.022317431, 0.022317903, 0.022324069, 0.022324542, 0.022329875, 0.022330361, 0.022338972, 0.022339444, 0.022345778, 0.02234625, 0.022351264, 0.02235175, 0.022355736, 0.022356208, 0.022364917, 0.022365389, 0.022372556, 0.022373042, 0.022382333, 0.022382819, 0.022391486, 0.022391972, 0.022399125, 0.022399597, 0.022403778, 0.02240425, 0.022410861, 0.022411333, 0.022421764, 0.022422236, 0.022427806, 0.022428278, 0.022432486, 0.022432958, 0.022436847, 0.022437333, 0.022444, 0.022444472, 0.022452972, 0.022453444, 0.022461, 0.022461472, 0.022465472, 0.022465944, 0.022470181, 0.022470653, 0.022479917, 0.022480389, 0.022485222, 0.022485694, 0.022494681, 0.022495153], 'eventdiff': [0, 4.7300000000083386e-07, 6.290999999998548e-06, 4.7300000000083386e-07, 7.415999999999673e-06, 4.720000000013602e-07, 9.416999999997677e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.720000000013602e-07, 9.931000000001217e-06, 4.7199999999789077e-07, 7.125000000000187e-06, 4.720000000013602e-07, 7.2219999999977025e-06, 4.7300000000083386e-07, 5.013000000001627e-06, 4.870000000004038e-07, 6.790999999999048e-06, 4.720000000013602e-07, 8.027999999996732e-06, 4.860000000009301e-07, 5.3339999999992005e-06, 4.720000000013602e-07, 7.111000000000617e-06, 4.7199999999789077e-07, 7.306000000002061e-06, 4.7199999999789077e-07, 5.457999999999852e-06, 4.7300000000083386e-07, 7.847000000001797e-06, 4.7199999999789077e-07, 4.277999999999921e-06, 4.860000000009301e-07, 7.013999999999632e-06, 4.720000000013602e-07, 9.306000000000592e-06, 4.7199999999789077e-07, 8.986000000002492e-06, 4.859999999974607e-07, 8.472000000002422e-06, 4.7199999999789077e-07, 7.1120000000000905e-06, 4.720000000013602e-07, 9.527999999998232e-06, 4.720000000013602e-07, 7.000000000000062e-06, 4.7199999999789077e-07, 5.556000000000311e-06, 4.720000000013602e-07, 6.165999999998423e-06, 4.7300000000083386e-07, 5.332999999999727e-06, 4.860000000009301e-07, 8.610999999998648e-06, 4.720000000013602e-07, 6.334000000000201e-06, 4.720000000013602e-07, 5.0139999999976315e-06, 4.860000000009301e-07, 3.986000000000961e-06, 4.7199999999789077e-07, 8.709000000002576e-06, 4.7199999999789077e-07, 7.1669999999988965e-06, 4.860000000009301e-07, 9.291000000001548e-06, 4.860000000009301e-07, 8.666999999996927e-06, 4.860000000009301e-07, 7.1529999999993266e-06, 4.720000000013602e-07, 4.1809999999989356e-06, 4.720000000013602e-07, 6.611000000000117e-06, 4.7199999999789077e-07, 1.0431000000001717e-05, 4.720000000013602e-07, 5.569999999999881e-06, 4.7199999999789077e-07, 4.208000000002071e-06, 4.7199999999789077e-07, 3.888999999999976e-06, 4.860000000009301e-07, 6.6669999999983964e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.7199999999789077e-07, 7.555999999998841e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.720000000013602e-07, 4.236999999997215e-06, 4.720000000013602e-07, 9.263999999998412e-06, 4.720000000013602e-07, 4.832999999999227e-06, 4.720000000013602e-07, 8.986999999998496e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:47.802" endtime="20201112 09:53:47.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.798" endtime="20201112 09:53:47.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:47.811" level="INFO">${RESULT} = [{'time': 0.022132167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022138931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:47.808" endtime="20201112 09:53:47.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:47.824" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:47.812" endtime="20201112 09:53:47.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.829" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:47.828" endtime="20201112 09:53:47.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.831" level="INFO">VALUE: [4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:53:47.830" endtime="20201112 09:53:47.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.825" endtime="20201112 09:53:47.832"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.834" endtime="20201112 09:53:47.836"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:47.838" endtime="20201112 09:53:47.857"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.836" endtime="20201112 09:53:47.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.833" endtime="20201112 09:53:47.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.418" endtime="20201112 09:53:47.859"></status>
</kw>
<msg timestamp="20201112 09:53:47.859" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.867" endtime="20201112 09:53:47.880"></status>
</kw>
<msg timestamp="20201112 09:53:47.880" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:47.865" endtime="20201112 09:53:47.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.883" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:47.881" endtime="20201112 09:53:47.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.884" endtime="20201112 09:53:47.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.862" endtime="20201112 09:53:47.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.861" endtime="20201112 09:53:47.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.893" endtime="20201112 09:53:48.177"></status>
</kw>
<msg timestamp="20201112 09:53:48.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018266819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018267306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:47.891" endtime="20201112 09:53:48.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018266819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018267306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:48.182" endtime="20201112 09:53:48.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.190" endtime="20201112 09:53:48.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.889" endtime="20201112 09:53:48.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.887" endtime="20201112 09:53:48.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.197" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:48.196" endtime="20201112 09:53:48.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.202" level="INFO">VALUE: [{'time': 0.018266819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018267306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018277514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0208000000001133e-05, 'source_diff': 1.0208000000001133e-05}, {'time': 0.018277986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018286431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.444999999999286e-06, 'source_diff': 8.444999999999286e-06}, {'time': 0.018286917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018297333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0415999999999204e-05, 'source_diff': 1.0415999999999204e-05}, {'time': 0.018297806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018305236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.429999999999243e-06, 'source_diff': 7.429999999999243e-06}, {'time': 0.018305708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018312722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.018313194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018323528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333999999997262e-05, 'source_diff': 1.0333999999997262e-05}, {'time': 0.018324014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018331542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.018332014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018337472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.018337944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018342042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.09800000000099e-06, 'source_diff': 4.09800000000099e-06}, {'time': 0.018342528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018349528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.018350014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018357222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2079999999981326e-06, 'source_diff': 7.2079999999981326e-06}, {'time': 0.018357708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01836275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018363222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018371361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.018371833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018381111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.277999999997982e-06, 'source_diff': 9.277999999997982e-06}, {'time': 0.018381583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018386097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.018386569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018394722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.018395194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018401667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.4729999999998955e-06, 'source_diff': 6.4729999999998955e-06}, {'time': 0.018402139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018411889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.749999999999343e-06, 'source_diff': 9.749999999999343e-06}, {'time': 0.018412361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018422639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0278000000002452e-05, 'source_diff': 1.0278000000002452e-05}, {'time': 0.018423111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018433556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0445000000001287e-05, 'source_diff': 1.0445000000001287e-05}, {'time': 0.018434028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018444361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0332999999997788e-05, 'source_diff': 1.0332999999997788e-05}, {'time': 0.018444833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018454153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}, {'time': 0.018454625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018461417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.792000000001991e-06, 'source_diff': 6.792000000001991e-06}, {'time': 0.018461889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018468694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805000000002087e-06, 'source_diff': 6.805000000002087e-06}, {'time': 0.018469167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018478681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.018479153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018488139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.018488625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018497083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.018497569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018507083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.514000000002132e-06, 'source_diff': 9.514000000002132e-06}, {'time': 0.018507556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018514875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.018515347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018521528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180999999997466e-06, 'source_diff': 6.180999999997466e-06}, {'time': 0.018522, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018527875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.018528347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018536708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.018537194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018544319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.018544792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018552097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.304999999999118e-06, 'source_diff': 7.304999999999118e-06}, {'time': 0.018552569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018556458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.018556931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018561014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.083000000001946e-06, 'source_diff': 4.083000000001946e-06}, {'time': 0.0185615, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018565792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018566264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018571292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.018571764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018581667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.902999999998607e-06, 'source_diff': 9.902999999998607e-06}, {'time': 0.018582153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018588319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.165999999998423e-06, 'source_diff': 6.165999999998423e-06}, {'time': 0.018588792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018592792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.018593264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018602736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.471999999999953e-06, 'source_diff': 9.471999999999953e-06}, {'time': 0.018603208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018610847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.018611319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018615319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.018615792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018619708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.915999999999642e-06, 'source_diff': 3.915999999999642e-06}, {'time': 0.018620181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018629972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.791000000002048e-06, 'source_diff': 9.791000000002048e-06}, {'time': 0.018630458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018639861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.403000000001577e-06, 'source_diff': 9.403000000001577e-06}, {'time': 0.018640333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018647444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.018647931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018654306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.018654792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:48.198" endtime="20201112 09:53:48.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.193" endtime="20201112 09:53:48.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:48.228" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:48.205" endtime="20201112 09:53:48.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.232" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:48.231" endtime="20201112 09:53:48.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.236" level="INFO">VALUE: {'sourcesource_diff': [0, 4.870000000004038e-07, 1.0208000000001133e-05, 4.7199999999789077e-07, 8.444999999999286e-06, 4.860000000009301e-07, 1.0415999999999204e-05, 4.7300000000083386e-07, 7.429999999999243e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.720000000013602e-07, 1.0333999999997262e-05, 4.860000000009301e-07, 7.527999999999702e-06, 4.720000000013602e-07, 5.457999999999852e-06, 4.7199999999789077e-07, 4.09800000000099e-06, 4.860000000009301e-07, 7.000000000000062e-06, 4.860000000009301e-07, 7.2079999999981326e-06, 4.860000000009301e-07, 5.042000000000241e-06, 4.7199999999789077e-07, 8.139000000000757e-06, 4.720000000013602e-07, 9.277999999997982e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.720000000013602e-07, 6.4729999999998955e-06, 4.720000000013602e-07, 9.749999999999343e-06, 4.7199999999789077e-07, 1.0278000000002452e-05, 4.7199999999789077e-07, 1.0445000000001287e-05, 4.720000000013602e-07, 1.0332999999997788e-05, 4.720000000013602e-07, 9.320000000000161e-06, 4.7199999999789077e-07, 6.792000000001991e-06, 4.7199999999789077e-07, 6.805000000002087e-06, 4.7300000000083386e-07, 9.513999999998662e-06, 4.720000000013602e-07, 8.985999999999023e-06, 4.860000000009301e-07, 8.457999999999383e-06, 4.859999999974607e-07, 9.514000000002132e-06, 4.7300000000083386e-07, 7.318999999998688e-06, 4.720000000013602e-07, 6.180999999997466e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.860000000009301e-07, 7.125000000000187e-06, 4.7300000000083386e-07, 7.304999999999118e-06, 4.720000000013602e-07, 3.888999999999976e-06, 4.729999999973644e-07, 4.083000000001946e-06, 4.860000000009301e-07, 4.291999999999491e-06, 4.7199999999789077e-07, 5.028000000000671e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.860000000009301e-07, 6.165999999998423e-06, 4.7300000000083386e-07, 4.000000000000531e-06, 4.720000000013602e-07, 9.471999999999953e-06, 4.7199999999789077e-07, 7.639000000000257e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.729999999973644e-07, 3.915999999999642e-06, 4.7300000000083386e-07, 9.791000000002048e-06, 4.859999999974607e-07, 9.403000000001577e-06, 4.7199999999789077e-07, 7.111000000000617e-06, 4.870000000004038e-07, 6.374999999999437e-06, 4.860000000009301e-07], 'time': [0.018266819, 0.018267306, 0.018277514, 0.018277986, 0.018286431, 0.018286917, 0.018297333, 0.018297806, 0.018305236, 0.018305708, 0.018312722, 0.018313194, 0.018323528, 0.018324014, 0.018331542, 0.018332014, 0.018337472, 0.018337944, 0.018342042, 0.018342528, 0.018349528, 0.018350014, 0.018357222, 0.018357708, 0.01836275, 0.018363222, 0.018371361, 0.018371833, 0.018381111, 0.018381583, 0.018386097, 0.018386569, 0.018394722, 0.018395194, 0.018401667, 0.018402139, 0.018411889, 0.018412361, 0.018422639, 0.018423111, 0.018433556, 0.018434028, 0.018444361, 0.018444833, 0.018454153, 0.018454625, 0.018461417, 0.018461889, 0.018468694, 0.018469167, 0.018478681, 0.018479153, 0.018488139, 0.018488625, 0.018497083, 0.018497569, 0.018507083, 0.018507556, 0.018514875, 0.018515347, 0.018521528, 0.018522, 0.018527875, 0.018528347, 0.018536708, 0.018537194, 0.018544319, 0.018544792, 0.018552097, 0.018552569, 0.018556458, 0.018556931, 0.018561014, 0.0185615, 0.018565792, 0.018566264, 0.018571292, 0.018571764, 0.018581667, 0.018582153, 0.018588319, 0.018588792, 0.018592792, 0.018593264, 0.018602736, 0.018603208, 0.018610847, 0.018611319, 0.018615319, 0.018615792, 0.018619708, 0.018620181, 0.018629972, 0.018630458, 0.018639861, 0.018640333, 0.018647444, 0.018647931, 0.018654306, 0.018654792], 'eventdiff': [0, 4.870000000004038e-07, 1.0208000000001133e-05, 4.7199999999789077e-07, 8.444999999999286e-06, 4.860000000009301e-07, 1.0415999999999204e-05, 4.7300000000083386e-07, 7.429999999999243e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.720000000013602e-07, 1.0333999999997262e-05, 4.860000000009301e-07, 7.527999999999702e-06, 4.720000000013602e-07, 5.457999999999852e-06, 4.7199999999789077e-07, 4.09800000000099e-06, 4.860000000009301e-07, 7.000000000000062e-06, 4.860000000009301e-07, 7.2079999999981326e-06, 4.860000000009301e-07, 5.042000000000241e-06, 4.7199999999789077e-07, 8.139000000000757e-06, 4.720000000013602e-07, 9.277999999997982e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.720000000013602e-07, 6.4729999999998955e-06, 4.720000000013602e-07, 9.749999999999343e-06, 4.7199999999789077e-07, 1.0278000000002452e-05, 4.7199999999789077e-07, 1.0445000000001287e-05, 4.720000000013602e-07, 1.0332999999997788e-05, 4.720000000013602e-07, 9.320000000000161e-06, 4.7199999999789077e-07, 6.792000000001991e-06, 4.7199999999789077e-07, 6.805000000002087e-06, 4.7300000000083386e-07, 9.513999999998662e-06, 4.720000000013602e-07, 8.985999999999023e-06, 4.860000000009301e-07, 8.457999999999383e-06, 4.859999999974607e-07, 9.514000000002132e-06, 4.7300000000083386e-07, 7.318999999998688e-06, 4.720000000013602e-07, 6.180999999997466e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.860000000009301e-07, 7.125000000000187e-06, 4.7300000000083386e-07, 7.304999999999118e-06, 4.720000000013602e-07, 3.888999999999976e-06, 4.729999999973644e-07, 4.083000000001946e-06, 4.860000000009301e-07, 4.291999999999491e-06, 4.7199999999789077e-07, 5.028000000000671e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.860000000009301e-07, 6.165999999998423e-06, 4.7300000000083386e-07, 4.000000000000531e-06, 4.720000000013602e-07, 9.471999999999953e-06, 4.7199999999789077e-07, 7.639000000000257e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.729999999973644e-07, 3.915999999999642e-06, 4.7300000000083386e-07, 9.791000000002048e-06, 4.859999999974607e-07, 9.403000000001577e-06, 4.7199999999789077e-07, 7.111000000000617e-06, 4.870000000004038e-07, 6.374999999999437e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:48.233" endtime="20201112 09:53:48.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.229" endtime="20201112 09:53:48.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:48.241" level="INFO">${RESULT} = [{'time': 0.018267306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018277986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:48.238" endtime="20201112 09:53:48.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:48.255" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:48.242" endtime="20201112 09:53:48.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.259" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:48.258" endtime="20201112 09:53:48.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.262" level="INFO">VALUE: [4.870000000004038e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 09:53:48.261" endtime="20201112 09:53:48.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.256" endtime="20201112 09:53:48.263"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.265" endtime="20201112 09:53:48.267"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:48.269" endtime="20201112 09:53:48.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.267" endtime="20201112 09:53:48.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.263" endtime="20201112 09:53:48.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.859" endtime="20201112 09:53:48.289"></status>
</kw>
<msg timestamp="20201112 09:53:48.290" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.298" endtime="20201112 09:53:48.311"></status>
</kw>
<msg timestamp="20201112 09:53:48.312" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:48.297" endtime="20201112 09:53:48.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.314" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:48.313" endtime="20201112 09:53:48.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.316" endtime="20201112 09:53:48.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.294" endtime="20201112 09:53:48.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.292" endtime="20201112 09:53:48.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.325" endtime="20201112 09:53:48.613"></status>
</kw>
<msg timestamp="20201112 09:53:48.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019390236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019390722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:48.323" endtime="20201112 09:53:48.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019390236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019390722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:48.617" endtime="20201112 09:53:48.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.626" endtime="20201112 09:53:48.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.320" endtime="20201112 09:53:48.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.319" endtime="20201112 09:53:48.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.633" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:48.631" endtime="20201112 09:53:48.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.638" level="INFO">VALUE: [{'time': 0.019390236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019390722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019398764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.01939925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019408958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.019409431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019417917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.485999999998523e-06, 'source_diff': 8.485999999998523e-06}, {'time': 0.019418389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019425486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0969999999975775e-06, 'source_diff': 7.0969999999975775e-06}, {'time': 0.019425972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019431528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.019432, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019441931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.930999999997747e-06, 'source_diff': 9.930999999997747e-06}, {'time': 0.019442403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019452639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.019453111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019458361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.250000000001781e-06, 'source_diff': 5.250000000001781e-06}, {'time': 0.019458833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019462931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.09800000000099e-06, 'source_diff': 4.09800000000099e-06}, {'time': 0.019463403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019468444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041000000000767e-06, 'source_diff': 5.041000000000767e-06}, {'time': 0.019468917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019478847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.930000000001743e-06, 'source_diff': 9.930000000001743e-06}, {'time': 0.019479319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019485069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.750000000002281e-06, 'source_diff': 5.750000000002281e-06}, {'time': 0.019485556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019494736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.179999999997523e-06, 'source_diff': 9.179999999997523e-06}, {'time': 0.019495208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019501903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.019502375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019507806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.019508292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019513306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.019513792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019517778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.01951825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019524722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.019525208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019532194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.019532681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019538653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.019539125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019549431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0305999999998122e-05, 'source_diff': 1.0305999999998122e-05}, {'time': 0.019549903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019553792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.019554264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019562333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.069000000002907e-06, 'source_diff': 8.069000000002907e-06}, {'time': 0.019562806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019566792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.019567264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019576986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722000000000203e-06, 'source_diff': 9.722000000000203e-06}, {'time': 0.019577458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019581875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.019582347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019591028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.0195915, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019596847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.019597319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019601528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.209000000001545e-06, 'source_diff': 4.209000000001545e-06}, {'time': 0.019602, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019611931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.930999999997747e-06, 'source_diff': 9.930999999997747e-06}, {'time': 0.019612403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019616819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.019617292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019624306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.019624778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019632931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.019633417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019637819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.019638306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019642708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.401999999997103e-06, 'source_diff': 4.401999999997103e-06}, {'time': 0.019643194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019652486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.019652958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019657264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.01965775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019665583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.019666069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019675875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805999999997622e-06, 'source_diff': 9.805999999997622e-06}, {'time': 0.019676347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019682, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.019682472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019689889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4169999999991465e-06, 'source_diff': 7.4169999999991465e-06}, {'time': 0.019690361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019697264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9029999999990765e-06, 'source_diff': 6.9029999999990765e-06}, {'time': 0.019697736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019703792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.056000000000811e-06, 'source_diff': 6.056000000000811e-06}, {'time': 0.019704278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019710444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.166000000001892e-06, 'source_diff': 6.166000000001892e-06}, {'time': 0.019710917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019717806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.019718292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019724653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.361000000003336e-06, 'source_diff': 6.361000000003336e-06}, {'time': 0.019725139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019734125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986000000002492e-06, 'source_diff': 8.986000000002492e-06}, {'time': 0.019734597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019740972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.019741444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019747111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.019747583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:48.634" endtime="20201112 09:53:48.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.629" endtime="20201112 09:53:48.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:48.664" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:48.641" endtime="20201112 09:53:48.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.668" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:48.667" endtime="20201112 09:53:48.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.672" level="INFO">VALUE: {'sourcesource_diff': [0, 4.859999999974607e-07, 8.041999999999772e-06, 4.860000000009301e-07, 9.708000000000633e-06, 4.7300000000083386e-07, 8.485999999998523e-06, 4.720000000013602e-07, 7.0969999999975775e-06, 4.860000000009301e-07, 5.556000000000311e-06, 4.720000000013602e-07, 9.930999999997747e-06, 4.720000000013602e-07, 1.0236000000000273e-05, 4.7199999999789077e-07, 5.250000000001781e-06, 4.7199999999789077e-07, 4.09800000000099e-06, 4.720000000013602e-07, 5.041000000000767e-06, 4.729999999973644e-07, 9.930000000001743e-06, 4.7199999999789077e-07, 5.750000000002281e-06, 4.870000000004038e-07, 9.179999999997523e-06, 4.720000000013602e-07, 6.695000000001006e-06, 4.7199999999789077e-07, 5.431000000000186e-06, 4.860000000009301e-07, 5.014000000001101e-06, 4.859999999974607e-07, 3.986000000000961e-06, 4.720000000013602e-07, 6.472000000000422e-06, 4.859999999974607e-07, 6.986000000000492e-06, 4.870000000004038e-07, 5.971999999999922e-06, 4.720000000013602e-07, 1.0305999999998122e-05, 4.720000000013602e-07, 3.888999999999976e-06, 4.7199999999789077e-07, 8.069000000002907e-06, 4.729999999973644e-07, 3.986000000000961e-06, 4.720000000013602e-07, 9.722000000000203e-06, 4.7199999999789077e-07, 4.416999999999616e-06, 4.720000000013602e-07, 8.680999999999967e-06, 4.720000000013602e-07, 5.346999999999297e-06, 4.7199999999789077e-07, 4.209000000001545e-06, 4.720000000013602e-07, 9.930999999997747e-06, 4.720000000013602e-07, 4.416000000000142e-06, 4.7300000000083386e-07, 7.013999999999632e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.860000000009301e-07, 4.402000000000572e-06, 4.870000000004038e-07, 4.401999999997103e-06, 4.860000000009301e-07, 9.292000000001022e-06, 4.720000000013602e-07, 4.305999999999061e-06, 4.860000000009301e-07, 7.832999999998758e-06, 4.860000000009301e-07, 9.805999999997622e-06, 4.720000000013602e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 7.4169999999991465e-06, 4.720000000013602e-07, 6.9029999999990765e-06, 4.720000000013602e-07, 6.056000000000811e-06, 4.859999999974607e-07, 6.166000000001892e-06, 4.7300000000083386e-07, 6.888999999999507e-06, 4.859999999974607e-07, 6.361000000003336e-06, 4.859999999974607e-07, 8.986000000002492e-06, 4.7199999999789077e-07, 6.374999999999437e-06, 4.720000000013602e-07, 5.667000000000866e-06, 4.7199999999789077e-07], 'time': [0.019390236, 0.019390722, 0.019398764, 0.01939925, 0.019408958, 0.019409431, 0.019417917, 0.019418389, 0.019425486, 0.019425972, 0.019431528, 0.019432, 0.019441931, 0.019442403, 0.019452639, 0.019453111, 0.019458361, 0.019458833, 0.019462931, 0.019463403, 0.019468444, 0.019468917, 0.019478847, 0.019479319, 0.019485069, 0.019485556, 0.019494736, 0.019495208, 0.019501903, 0.019502375, 0.019507806, 0.019508292, 0.019513306, 0.019513792, 0.019517778, 0.01951825, 0.019524722, 0.019525208, 0.019532194, 0.019532681, 0.019538653, 0.019539125, 0.019549431, 0.019549903, 0.019553792, 0.019554264, 0.019562333, 0.019562806, 0.019566792, 0.019567264, 0.019576986, 0.019577458, 0.019581875, 0.019582347, 0.019591028, 0.0195915, 0.019596847, 0.019597319, 0.019601528, 0.019602, 0.019611931, 0.019612403, 0.019616819, 0.019617292, 0.019624306, 0.019624778, 0.019632931, 0.019633417, 0.019637819, 0.019638306, 0.019642708, 0.019643194, 0.019652486, 0.019652958, 0.019657264, 0.01965775, 0.019665583, 0.019666069, 0.019675875, 0.019676347, 0.019682, 0.019682472, 0.019689889, 0.019690361, 0.019697264, 0.019697736, 0.019703792, 0.019704278, 0.019710444, 0.019710917, 0.019717806, 0.019718292, 0.019724653, 0.019725139, 0.019734125, 0.019734597, 0.019740972, 0.019741444, 0.019747111, 0.019747583], 'eventdiff': [0, 4.859999999974607e-07, 8.041999999999772e-06, 4.860000000009301e-07, 9.708000000000633e-06, 4.7300000000083386e-07, 8.485999999998523e-06, 4.720000000013602e-07, 7.0969999999975775e-06, 4.860000000009301e-07, 5.556000000000311e-06, 4.720000000013602e-07, 9.930999999997747e-06, 4.720000000013602e-07, 1.0236000000000273e-05, 4.7199999999789077e-07, 5.250000000001781e-06, 4.7199999999789077e-07, 4.09800000000099e-06, 4.720000000013602e-07, 5.041000000000767e-06, 4.729999999973644e-07, 9.930000000001743e-06, 4.7199999999789077e-07, 5.750000000002281e-06, 4.870000000004038e-07, 9.179999999997523e-06, 4.720000000013602e-07, 6.695000000001006e-06, 4.7199999999789077e-07, 5.431000000000186e-06, 4.860000000009301e-07, 5.014000000001101e-06, 4.859999999974607e-07, 3.986000000000961e-06, 4.720000000013602e-07, 6.472000000000422e-06, 4.859999999974607e-07, 6.986000000000492e-06, 4.870000000004038e-07, 5.971999999999922e-06, 4.720000000013602e-07, 1.0305999999998122e-05, 4.720000000013602e-07, 3.888999999999976e-06, 4.7199999999789077e-07, 8.069000000002907e-06, 4.729999999973644e-07, 3.986000000000961e-06, 4.720000000013602e-07, 9.722000000000203e-06, 4.7199999999789077e-07, 4.416999999999616e-06, 4.720000000013602e-07, 8.680999999999967e-06, 4.720000000013602e-07, 5.346999999999297e-06, 4.7199999999789077e-07, 4.209000000001545e-06, 4.720000000013602e-07, 9.930999999997747e-06, 4.720000000013602e-07, 4.416000000000142e-06, 4.7300000000083386e-07, 7.013999999999632e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.860000000009301e-07, 4.402000000000572e-06, 4.870000000004038e-07, 4.401999999997103e-06, 4.860000000009301e-07, 9.292000000001022e-06, 4.720000000013602e-07, 4.305999999999061e-06, 4.860000000009301e-07, 7.832999999998758e-06, 4.860000000009301e-07, 9.805999999997622e-06, 4.720000000013602e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 7.4169999999991465e-06, 4.720000000013602e-07, 6.9029999999990765e-06, 4.720000000013602e-07, 6.056000000000811e-06, 4.859999999974607e-07, 6.166000000001892e-06, 4.7300000000083386e-07, 6.888999999999507e-06, 4.859999999974607e-07, 6.361000000003336e-06, 4.859999999974607e-07, 8.986000000002492e-06, 4.7199999999789077e-07, 6.374999999999437e-06, 4.720000000013602e-07, 5.667000000000866e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:48.669" endtime="20201112 09:53:48.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.665" endtime="20201112 09:53:48.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:48.679" level="INFO">${RESULT} = [{'time': 0.019390722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.01939925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:53:48.675" endtime="20201112 09:53:48.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:48.692" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:48.680" endtime="20201112 09:53:48.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.697" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:48.696" endtime="20201112 09:53:48.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.699" level="INFO">VALUE: [4.859999999974607e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 09:53:48.698" endtime="20201112 09:53:48.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.693" endtime="20201112 09:53:48.700"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.703" endtime="20201112 09:53:48.704"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:48.706" endtime="20201112 09:53:48.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.705" endtime="20201112 09:53:48.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.701" endtime="20201112 09:53:48.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.290" endtime="20201112 09:53:48.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.914" endtime="20201112 09:53:48.727"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:48.732" endtime="20201112 09:53:48.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.730" endtime="20201112 09:53:48.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.729" endtime="20201112 09:53:48.752"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:39.831" endtime="20201112 09:53:48.753" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:48.760" endtime="20201112 09:53:48.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.758" endtime="20201112 09:53:48.780"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.793" endtime="20201112 09:53:48.815"></status>
</kw>
<msg timestamp="20201112 09:53:48.815" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:48.792" endtime="20201112 09:53:48.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.818" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:48.817" endtime="20201112 09:53:48.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.821" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:48.819" endtime="20201112 09:53:48.822"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:48.789" endtime="20201112 09:53:48.822"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:48.787" endtime="20201112 09:53:48.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.785" endtime="20201112 09:53:48.823"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:48.827" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:48.827" endtime="20201112 09:53:48.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.824" endtime="20201112 09:53:48.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.785" endtime="20201112 09:53:48.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.784" endtime="20201112 09:53:48.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.829" endtime="20201112 09:53:48.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.783" endtime="20201112 09:53:48.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.781" endtime="20201112 09:53:48.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.757" endtime="20201112 09:53:48.832"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 09:53:48.834" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.842" endtime="20201112 09:53:48.860"></status>
</kw>
<msg timestamp="20201112 09:53:48.861" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:48.840" endtime="20201112 09:53:48.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.863" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:48.862" endtime="20201112 09:53:48.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.864" endtime="20201112 09:53:48.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.838" endtime="20201112 09:53:48.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.836" endtime="20201112 09:53:48.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.873" endtime="20201112 09:53:49.157"></status>
</kw>
<msg timestamp="20201112 09:53:49.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076269472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076273875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:48.872" endtime="20201112 09:53:49.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076269472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076273875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:49.161" endtime="20201112 09:53:49.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.169" endtime="20201112 09:53:49.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.869" endtime="20201112 09:53:49.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.867" endtime="20201112 09:53:49.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:49.176" level="INFO">${RESULT} = [{'time': 0.076273875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.076282597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:49.173" endtime="20201112 09:53:49.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:49.191" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:49.177" endtime="20201112 09:53:49.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.196" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:49.195" endtime="20201112 09:53:49.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.198" level="INFO">VALUE: [4.403000000000046e-06, 4.388999999993537e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.389000000007415e-06, 4.388000000007941e-06, 4.388999999993537e-06, 4.5000000000045e-06, 4.389000000007415e-06, 4.4170000000065546e-06, 4.388999999993537e-06, 4.429999999999712e-06, 4.388999999993537e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.388999999993537e-06, 4.403000000000046e-06, 4.361000000008275e-06, 4.415999999993203e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.415999999993203e-06, 4.485999999997992e-06, 4.361000000008275e-06, 4.334000000008609e-06, 4.403000000000046e-06, 4.388999999993537e-06, 4.360999999994397e-06, 4.403000000000046e-06, 4.445000000005694e-06, 4.416999999992677e-06, 4.403000000000046e-06, 4.416999999992677e-06, 4.388999999993537e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.389000000007415e-06, 4.403000000000046e-06, 4.374999999987028e-06, 4.459000000012203e-06, 4.430999999999186e-06, 4.388999999993537e-06, 4.347000000001766e-06, 4.416000000007081e-06, 4.4170000000065546e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.360999999994397e-06]</msg>
<status status="PASS" starttime="20201112 09:53:49.197" endtime="20201112 09:53:49.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.192" endtime="20201112 09:53:49.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.201" endtime="20201112 09:53:49.203"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:49.205" endtime="20201112 09:53:49.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.203" endtime="20201112 09:53:49.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.200" endtime="20201112 09:53:49.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.835" endtime="20201112 09:53:49.226"></status>
</kw>
<msg timestamp="20201112 09:53:49.226" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.234" endtime="20201112 09:53:49.252"></status>
</kw>
<msg timestamp="20201112 09:53:49.252" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:49.232" endtime="20201112 09:53:49.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.255" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:49.253" endtime="20201112 09:53:49.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.256" endtime="20201112 09:53:49.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.230" endtime="20201112 09:53:49.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.228" endtime="20201112 09:53:49.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.265" endtime="20201112 09:53:49.562"></status>
</kw>
<msg timestamp="20201112 09:53:49.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023146556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023150972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:49.263" endtime="20201112 09:53:49.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023146556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023150972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:49.566" endtime="20201112 09:53:49.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.574" endtime="20201112 09:53:49.576"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.261" endtime="20201112 09:53:49.576"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.259" endtime="20201112 09:53:49.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:49.581" level="INFO">${RESULT} = [{'time': 0.023150972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.023164264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:49.577" endtime="20201112 09:53:49.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:49.595" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:49.582" endtime="20201112 09:53:49.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.599" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:49.598" endtime="20201112 09:53:49.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.602" level="INFO">VALUE: [4.416000000000142e-06, 4.347000000001766e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.3749999999974365e-06, 4.389000000000476e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.305999999999061e-06, 4.375000000000906e-06, 4.430999999999186e-06, 4.389000000000476e-06, 4.347000000001766e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.347000000001766e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.361000000001336e-06, 4.360999999997867e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.3749999999974365e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.347000000001766e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.360999999997867e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.3749999999974365e-06, 4.361000000001336e-06, 4.389000000000476e-06]</msg>
<status status="PASS" starttime="20201112 09:53:49.600" endtime="20201112 09:53:49.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.596" endtime="20201112 09:53:49.603"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.605" endtime="20201112 09:53:49.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:49.608" endtime="20201112 09:53:49.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.607" endtime="20201112 09:53:49.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.603" endtime="20201112 09:53:49.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.227" endtime="20201112 09:53:49.629"></status>
</kw>
<msg timestamp="20201112 09:53:49.629" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.637" endtime="20201112 09:53:49.654"></status>
</kw>
<msg timestamp="20201112 09:53:49.655" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:49.636" endtime="20201112 09:53:49.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.657" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:49.656" endtime="20201112 09:53:49.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.658" endtime="20201112 09:53:49.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.633" endtime="20201112 09:53:49.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.631" endtime="20201112 09:53:49.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.667" endtime="20201112 09:53:49.951"></status>
</kw>
<msg timestamp="20201112 09:53:49.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021651181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021655597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:49.666" endtime="20201112 09:53:49.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021651181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021655597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:49.955" endtime="20201112 09:53:49.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.963" endtime="20201112 09:53:49.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.663" endtime="20201112 09:53:49.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.661" endtime="20201112 09:53:49.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:49.970" level="INFO">${RESULT} = [{'time': 0.021655597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.02167025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:53:49.967" endtime="20201112 09:53:49.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:49.984" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:49.971" endtime="20201112 09:53:49.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.989" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:49.988" endtime="20201112 09:53:49.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.991" level="INFO">VALUE: [4.416000000000142e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.417000000003085e-06, 4.4449999999987555e-06, 4.319000000002626e-06, 4.332999999998727e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.360999999997867e-06, 4.429999999999712e-06, 4.347000000001766e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.388000000001002e-06, 4.3749999999974365e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.361000000001336e-06, 4.3749999999974365e-06, 4.388000000001002e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.445000000002225e-06, 4.389000000000476e-06, 4.34799999999777e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.361000000001336e-06, 4.402000000000572e-06, 4.388999999997006e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.430000000003181e-06]</msg>
<status status="PASS" starttime="20201112 09:53:49.990" endtime="20201112 09:53:49.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.985" endtime="20201112 09:53:49.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.996" endtime="20201112 09:53:49.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:49.999" endtime="20201112 09:53:50.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.998" endtime="20201112 09:53:50.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.994" endtime="20201112 09:53:50.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.630" endtime="20201112 09:53:50.020"></status>
</kw>
<msg timestamp="20201112 09:53:50.020" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.028" endtime="20201112 09:53:50.047"></status>
</kw>
<msg timestamp="20201112 09:53:50.047" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:50.027" endtime="20201112 09:53:50.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.050" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:50.048" endtime="20201112 09:53:50.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.051" endtime="20201112 09:53:50.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.024" endtime="20201112 09:53:50.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.022" endtime="20201112 09:53:50.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.060" endtime="20201112 09:53:50.343"></status>
</kw>
<msg timestamp="20201112 09:53:50.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022720667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022725056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:50.058" endtime="20201112 09:53:50.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022720667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022725056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:50.348" endtime="20201112 09:53:50.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.362" endtime="20201112 09:53:50.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.056" endtime="20201112 09:53:50.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.054" endtime="20201112 09:53:50.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:50.369" level="INFO">${RESULT} = [{'time': 0.022725056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.0227335, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:53:50.366" endtime="20201112 09:53:50.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:50.383" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:50.370" endtime="20201112 09:53:50.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.388" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:50.387" endtime="20201112 09:53:50.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.390" level="INFO">VALUE: [4.389000000000476e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.388999999997006e-06, 4.417000000003085e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.3749999999974365e-06, 4.445000000002225e-06, 4.361000000001336e-06, 4.388999999997006e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.458000000002321e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.3749999999974365e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.458999999998325e-06, 4.361000000001336e-06, 4.417000000003085e-06, 4.416999999999616e-06, 4.332999999998727e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.388999999997006e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.403000000000046e-06]</msg>
<status status="PASS" starttime="20201112 09:53:50.389" endtime="20201112 09:53:50.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.384" endtime="20201112 09:53:50.391"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.393" endtime="20201112 09:53:50.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:50.397" endtime="20201112 09:53:50.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.395" endtime="20201112 09:53:50.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.391" endtime="20201112 09:53:50.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.021" endtime="20201112 09:53:50.417"></status>
</kw>
<msg timestamp="20201112 09:53:50.418" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.425" endtime="20201112 09:53:50.442"></status>
</kw>
<msg timestamp="20201112 09:53:50.443" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:50.424" endtime="20201112 09:53:50.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.445" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:50.444" endtime="20201112 09:53:50.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.446" endtime="20201112 09:53:50.448"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.421" endtime="20201112 09:53:50.448"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.420" endtime="20201112 09:53:50.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.455" endtime="20201112 09:53:50.744"></status>
</kw>
<msg timestamp="20201112 09:53:50.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022145694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:50.454" endtime="20201112 09:53:50.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022145694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:50.749" endtime="20201112 09:53:50.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.757" endtime="20201112 09:53:50.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.451" endtime="20201112 09:53:50.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.450" endtime="20201112 09:53:50.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:50.764" level="INFO">${RESULT} = [{'time': 0.022145694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.022156292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:50.761" endtime="20201112 09:53:50.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:50.778" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:50.765" endtime="20201112 09:53:50.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.783" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:50.782" endtime="20201112 09:53:50.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.785" level="INFO">VALUE: [4.402000000000572e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.3749999999974365e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.34799999999777e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.332999999998727e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.360999999997867e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.388999999997006e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.34800000000124e-06, 4.360999999997867e-06, 4.416000000000142e-06, 4.3749999999974365e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06]</msg>
<status status="PASS" starttime="20201112 09:53:50.784" endtime="20201112 09:53:50.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.779" endtime="20201112 09:53:50.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.788" endtime="20201112 09:53:50.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:50.792" endtime="20201112 09:53:50.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.790" endtime="20201112 09:53:50.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.787" endtime="20201112 09:53:50.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.418" endtime="20201112 09:53:50.813"></status>
</kw>
<msg timestamp="20201112 09:53:50.813" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.821" endtime="20201112 09:53:50.835"></status>
</kw>
<msg timestamp="20201112 09:53:50.836" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:50.819" endtime="20201112 09:53:50.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.838" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:50.837" endtime="20201112 09:53:50.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.839" endtime="20201112 09:53:50.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.816" endtime="20201112 09:53:50.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.815" endtime="20201112 09:53:50.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.849" endtime="20201112 09:53:51.132"></status>
</kw>
<msg timestamp="20201112 09:53:51.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018869236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018873722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:50.847" endtime="20201112 09:53:51.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018869236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018873722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:51.136" endtime="20201112 09:53:51.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.144" endtime="20201112 09:53:51.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.844" endtime="20201112 09:53:51.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.842" endtime="20201112 09:53:51.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:51.150" level="INFO">${RESULT} = [{'time': 0.018873722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.018887292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:51.147" endtime="20201112 09:53:51.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:51.164" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:51.151" endtime="20201112 09:53:51.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.169" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:51.167" endtime="20201112 09:53:51.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.171" level="INFO">VALUE: [4.485999999997992e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.388000000001002e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.347000000001766e-06, 4.375000000000906e-06, 4.402000000000572e-06, 4.388000000001002e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.458000000002321e-06, 4.387999999997533e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.360999999997867e-06, 4.403000000000046e-06, 4.304999999999587e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.387999999997533e-06, 4.458000000002321e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.36200000000081e-06, 4.389000000000476e-06, 4.361000000001336e-06]</msg>
<status status="PASS" starttime="20201112 09:53:51.170" endtime="20201112 09:53:51.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.165" endtime="20201112 09:53:51.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.174" endtime="20201112 09:53:51.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:51.177" endtime="20201112 09:53:51.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.176" endtime="20201112 09:53:51.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.172" endtime="20201112 09:53:51.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.813" endtime="20201112 09:53:51.198"></status>
</kw>
<msg timestamp="20201112 09:53:51.198" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.206" endtime="20201112 09:53:51.221"></status>
</kw>
<msg timestamp="20201112 09:53:51.222" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:51.205" endtime="20201112 09:53:51.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.224" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:51.223" endtime="20201112 09:53:51.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.225" endtime="20201112 09:53:51.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.202" endtime="20201112 09:53:51.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.200" endtime="20201112 09:53:51.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.235" endtime="20201112 09:53:51.521"></status>
</kw>
<msg timestamp="20201112 09:53:51.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020141139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020145528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:51.233" endtime="20201112 09:53:51.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020141139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020145528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:51.525" endtime="20201112 09:53:51.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.544" endtime="20201112 09:53:51.546"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.231" endtime="20201112 09:53:51.547"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.229" endtime="20201112 09:53:51.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:51.552" level="INFO">${RESULT} = [{'time': 0.020145528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.020154028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:51.548" endtime="20201112 09:53:51.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:51.567" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:51.553" endtime="20201112 09:53:51.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.571" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:51.570" endtime="20201112 09:53:51.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.574" level="INFO">VALUE: [4.389000000000476e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.403000000000046e-06, 4.347000000001766e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.430999999999186e-06, 4.401999999997103e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.416000000000142e-06, 4.417000000003085e-06, 4.402999999996576e-06, 4.347000000001766e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.402000000000572e-06, 4.430000000003181e-06, 4.403000000000046e-06, 4.388000000001002e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.3749999999974365e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.3749999999974365e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.346999999998297e-06, 4.347000000001766e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.416000000000142e-06, 4.388000000001002e-06, 4.375000000000906e-06]</msg>
<status status="PASS" starttime="20201112 09:53:51.572" endtime="20201112 09:53:51.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.568" endtime="20201112 09:53:51.575"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.577" endtime="20201112 09:53:51.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:51.581" endtime="20201112 09:53:51.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.579" endtime="20201112 09:53:51.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.575" endtime="20201112 09:53:51.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.199" endtime="20201112 09:53:51.601"></status>
</kw>
<msg timestamp="20201112 09:53:51.602" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.610" endtime="20201112 09:53:51.628"></status>
</kw>
<msg timestamp="20201112 09:53:51.629" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:51.608" endtime="20201112 09:53:51.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.631" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:51.630" endtime="20201112 09:53:51.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.633" endtime="20201112 09:53:51.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.605" endtime="20201112 09:53:51.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.604" endtime="20201112 09:53:51.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.642" endtime="20201112 09:53:51.954"></status>
</kw>
<msg timestamp="20201112 09:53:51.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023920375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023924722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:51.641" endtime="20201112 09:53:51.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023920375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023924722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:51.959" endtime="20201112 09:53:51.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.967" endtime="20201112 09:53:51.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.638" endtime="20201112 09:53:51.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.636" endtime="20201112 09:53:51.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:51.974" level="INFO">${RESULT} = [{'time': 0.023924722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.023933569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:51.971" endtime="20201112 09:53:51.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:51.988" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:51.975" endtime="20201112 09:53:51.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.993" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:51.992" endtime="20201112 09:53:51.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.996" level="INFO">VALUE: [4.346999999998297e-06, 4.401999999997103e-06, 4.403000000000046e-06, 4.3749999999974365e-06, 4.403000000000046e-06, 4.360999999997867e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.375000000000906e-06, 4.3749999999974365e-06, 4.429999999999712e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.444000000002751e-06, 4.346999999998297e-06, 4.360999999997867e-06, 4.388999999997006e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.361000000001336e-06, 4.416999999999616e-06, 4.401999999997103e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.305999999999061e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.347000000001766e-06, 4.389000000000476e-06, 4.4449999999987555e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.457999999998852e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.416000000000142e-06, 4.3749999999974365e-06, 4.430999999999186e-06, 4.403000000000046e-06]</msg>
<status status="PASS" starttime="20201112 09:53:51.994" endtime="20201112 09:53:51.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.989" endtime="20201112 09:53:51.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.999" endtime="20201112 09:53:52.000"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:52.003" endtime="20201112 09:53:52.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.001" endtime="20201112 09:53:52.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.997" endtime="20201112 09:53:52.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.602" endtime="20201112 09:53:52.023"></status>
</kw>
<msg timestamp="20201112 09:53:52.024" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.032" endtime="20201112 09:53:52.051"></status>
</kw>
<msg timestamp="20201112 09:53:52.051" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.030" endtime="20201112 09:53:52.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.054" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.052" endtime="20201112 09:53:52.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.055" endtime="20201112 09:53:52.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.027" endtime="20201112 09:53:52.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.026" endtime="20201112 09:53:52.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.065" endtime="20201112 09:53:52.353"></status>
</kw>
<msg timestamp="20201112 09:53:52.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023931389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023935778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:52.063" endtime="20201112 09:53:52.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023931389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023935778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:52.358" endtime="20201112 09:53:52.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.366" endtime="20201112 09:53:52.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.060" endtime="20201112 09:53:52.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.058" endtime="20201112 09:53:52.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:52.373" level="INFO">${RESULT} = [{'time': 0.023935778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.023945986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:52.370" endtime="20201112 09:53:52.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:52.388" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:52.374" endtime="20201112 09:53:52.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.392" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:52.391" endtime="20201112 09:53:52.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.395" level="INFO">VALUE: [4.389000000000476e-06, 4.403000000000046e-06, 4.361000000001336e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.443999999999282e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.3749999999974365e-06, 4.417000000003085e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.457999999998852e-06, 4.444000000002751e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.485999999997992e-06, 4.402000000000572e-06, 4.360999999997867e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.402999999996576e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.360999999997867e-06, 4.3749999999974365e-06, 4.3749999999974365e-06, 4.389000000000476e-06, 4.3749999999974365e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.472000000001891e-06, 4.375000000000906e-06, 4.429999999999712e-06, 4.443999999999282e-06, 4.36200000000081e-06]</msg>
<status status="PASS" starttime="20201112 09:53:52.394" endtime="20201112 09:53:52.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.389" endtime="20201112 09:53:52.396"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.398" endtime="20201112 09:53:52.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:52.402" endtime="20201112 09:53:52.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.400" endtime="20201112 09:53:52.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.397" endtime="20201112 09:53:52.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.024" endtime="20201112 09:53:52.423"></status>
</kw>
<msg timestamp="20201112 09:53:52.423" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.432" endtime="20201112 09:53:52.447"></status>
</kw>
<msg timestamp="20201112 09:53:52.448" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.430" endtime="20201112 09:53:52.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.450" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.449" endtime="20201112 09:53:52.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.451" endtime="20201112 09:53:52.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.427" endtime="20201112 09:53:52.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.425" endtime="20201112 09:53:52.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.461" endtime="20201112 09:53:52.750"></status>
</kw>
<msg timestamp="20201112 09:53:52.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021304472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021308903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:52.459" endtime="20201112 09:53:52.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021304472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021308903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:52.754" endtime="20201112 09:53:52.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.763" endtime="20201112 09:53:52.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.457" endtime="20201112 09:53:52.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.455" endtime="20201112 09:53:52.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:52.770" level="INFO">${RESULT} = [{'time': 0.021308903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.021318056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:52.766" endtime="20201112 09:53:52.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:52.784" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:52.771" endtime="20201112 09:53:52.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.789" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:52.788" endtime="20201112 09:53:52.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.791" level="INFO">VALUE: [4.430999999999186e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.375000000000906e-06, 4.431000000002655e-06, 4.34800000000124e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.4449999999987555e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.36200000000081e-06, 4.402000000000572e-06, 4.417000000003085e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.445000000002225e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.429999999999712e-06, 4.402000000000572e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.3749999999974365e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.388999999997006e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.416000000000142e-06]</msg>
<status status="PASS" starttime="20201112 09:53:52.790" endtime="20201112 09:53:52.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.785" endtime="20201112 09:53:52.792"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.794" endtime="20201112 09:53:52.796"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:52.798" endtime="20201112 09:53:52.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.796" endtime="20201112 09:53:52.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.793" endtime="20201112 09:53:52.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.424" endtime="20201112 09:53:52.819"></status>
</kw>
<msg timestamp="20201112 09:53:52.820" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.828" endtime="20201112 09:53:52.844"></status>
</kw>
<msg timestamp="20201112 09:53:52.844" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.826" endtime="20201112 09:53:52.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.847" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.845" endtime="20201112 09:53:52.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.848" endtime="20201112 09:53:52.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.823" endtime="20201112 09:53:52.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.822" endtime="20201112 09:53:52.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.857" endtime="20201112 09:53:53.141"></status>
</kw>
<msg timestamp="20201112 09:53:53.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021759903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021764278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:52.856" endtime="20201112 09:53:53.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021759903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021764278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:53.145" endtime="20201112 09:53:53.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.153" endtime="20201112 09:53:53.155"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.853" endtime="20201112 09:53:53.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.851" endtime="20201112 09:53:53.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:53.160" level="INFO">${RESULT} = [{'time': 0.021764278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.021774903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:53.157" endtime="20201112 09:53:53.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:53.175" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:53.162" endtime="20201112 09:53:53.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.179" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:53.178" endtime="20201112 09:53:53.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.182" level="INFO">VALUE: [4.375000000000906e-06, 4.403000000000046e-06, 4.417000000003085e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.375000000000906e-06, 4.3749999999974365e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.402000000000572e-06, 4.3749999999974365e-06, 4.3749999999974365e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.401999999997103e-06, 4.375000000000906e-06, 4.401999999997103e-06, 4.375000000000906e-06, 4.388999999997006e-06, 4.3749999999974365e-06, 4.389000000000476e-06, 4.34799999999777e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.3749999999974365e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.389000000000476e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.3749999999974365e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.416000000000142e-06, 4.389000000000476e-06]</msg>
<status status="PASS" starttime="20201112 09:53:53.181" endtime="20201112 09:53:53.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.176" endtime="20201112 09:53:53.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.186" endtime="20201112 09:53:53.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:53.190" endtime="20201112 09:53:53.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.188" endtime="20201112 09:53:53.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.184" endtime="20201112 09:53:53.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.820" endtime="20201112 09:53:53.210"></status>
</kw>
<msg timestamp="20201112 09:53:53.211" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.219" endtime="20201112 09:53:53.237"></status>
</kw>
<msg timestamp="20201112 09:53:53.237" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:53.217" endtime="20201112 09:53:53.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.240" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:53.238" endtime="20201112 09:53:53.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.241" endtime="20201112 09:53:53.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.215" endtime="20201112 09:53:53.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.213" endtime="20201112 09:53:53.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.250" endtime="20201112 09:53:53.535"></status>
</kw>
<msg timestamp="20201112 09:53:53.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022556722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022561125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:53.248" endtime="20201112 09:53:53.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022556722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022561125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:53.539" endtime="20201112 09:53:53.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.547" endtime="20201112 09:53:53.549"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.246" endtime="20201112 09:53:53.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.244" endtime="20201112 09:53:53.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:53.554" level="INFO">${RESULT} = [{'time': 0.022561125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.022574236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:53.551" endtime="20201112 09:53:53.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:53.569" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:53.555" endtime="20201112 09:53:53.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.574" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:53.573" endtime="20201112 09:53:53.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.577" level="INFO">VALUE: [4.403000000000046e-06, 4.333000000002196e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.388999999997006e-06, 4.389000000000476e-06, 4.360999999997867e-06, 4.416999999999616e-06, 4.3749999999974365e-06, 4.403000000000046e-06, 4.401999999997103e-06, 4.402000000000572e-06, 4.388999999997006e-06, 4.388000000001002e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.388000000001002e-06, 4.389000000000476e-06, 4.361000000001336e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.387999999997533e-06, 4.416999999999616e-06, 4.486000000001461e-06, 4.388999999997006e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.3749999999974365e-06, 4.403000000000046e-06, 4.443999999999282e-06, 4.346999999998297e-06, 4.417000000003085e-06, 4.388999999997006e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.444000000002751e-06, 4.361000000001336e-06, 4.389000000000476e-06]</msg>
<status status="PASS" starttime="20201112 09:53:53.575" endtime="20201112 09:53:53.578"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.570" endtime="20201112 09:53:53.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.581" endtime="20201112 09:53:53.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:53.585" endtime="20201112 09:53:53.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.583" endtime="20201112 09:53:53.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.579" endtime="20201112 09:53:53.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.211" endtime="20201112 09:53:53.606"></status>
</kw>
<msg timestamp="20201112 09:53:53.606" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.614" endtime="20201112 09:53:53.628"></status>
</kw>
<msg timestamp="20201112 09:53:53.629" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:53.612" endtime="20201112 09:53:53.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.631" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:53.630" endtime="20201112 09:53:53.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.632" endtime="20201112 09:53:53.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.610" endtime="20201112 09:53:53.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.608" endtime="20201112 09:53:53.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.642" endtime="20201112 09:53:53.929"></status>
</kw>
<msg timestamp="20201112 09:53:53.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019256417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019260875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:53.640" endtime="20201112 09:53:53.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019256417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019260875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:53.933" endtime="20201112 09:53:53.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.941" endtime="20201112 09:53:53.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.637" endtime="20201112 09:53:53.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.636" endtime="20201112 09:53:53.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:53.948" level="INFO">${RESULT} = [{'time': 0.019260875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.019270194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:53.945" endtime="20201112 09:53:53.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:53.963" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:53.949" endtime="20201112 09:53:53.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.968" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:53.967" endtime="20201112 09:53:53.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.970" level="INFO">VALUE: [4.457999999998852e-06, 4.388000000001002e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.388999999997006e-06, 4.403000000000046e-06, 4.361000000001336e-06, 4.457999999998852e-06, 4.3749999999974365e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.36200000000081e-06, 4.3749999999974365e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.388000000001002e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.347000000001766e-06, 4.389000000000476e-06, 4.3749999999974365e-06, 4.417000000003085e-06, 4.416999999999616e-06, 4.36199999999734e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.3199999999986305e-06, 4.401999999997103e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.388999999997006e-06, 4.445000000002225e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.388999999997006e-06]</msg>
<status status="PASS" starttime="20201112 09:53:53.969" endtime="20201112 09:53:53.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.964" endtime="20201112 09:53:53.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.974" endtime="20201112 09:53:53.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:53.978" endtime="20201112 09:53:53.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.976" endtime="20201112 09:53:53.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.972" endtime="20201112 09:53:53.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.606" endtime="20201112 09:53:53.999"></status>
</kw>
<msg timestamp="20201112 09:53:53.999" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.007" endtime="20201112 09:53:54.025"></status>
</kw>
<msg timestamp="20201112 09:53:54.025" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.006" endtime="20201112 09:53:54.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.028" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.026" endtime="20201112 09:53:54.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.029" endtime="20201112 09:53:54.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.003" endtime="20201112 09:53:54.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.001" endtime="20201112 09:53:54.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.038" endtime="20201112 09:53:54.326"></status>
</kw>
<msg timestamp="20201112 09:53:54.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022974403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022978806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:54.037" endtime="20201112 09:53:54.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022974403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022978806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:54.330" endtime="20201112 09:53:54.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.339" endtime="20201112 09:53:54.340"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.034" endtime="20201112 09:53:54.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.032" endtime="20201112 09:53:54.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:54.346" level="INFO">${RESULT} = [{'time': 0.022978806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.022987236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:54.342" endtime="20201112 09:53:54.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:54.360" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:54.347" endtime="20201112 09:53:54.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.365" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:54.363" endtime="20201112 09:53:54.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.367" level="INFO">VALUE: [4.403000000000046e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.387999999997533e-06, 4.3749999999974365e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.401999999997103e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.361000000001336e-06, 4.416000000000142e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.3749999999974365e-06, 4.318999999999157e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.333000000002196e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.3749999999974365e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.33400000000167e-06, 4.417000000003085e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.3749999999974365e-06, 4.389000000000476e-06]</msg>
<status status="PASS" starttime="20201112 09:53:54.366" endtime="20201112 09:53:54.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.361" endtime="20201112 09:53:54.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.371" endtime="20201112 09:53:54.372"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:54.374" endtime="20201112 09:53:54.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.373" endtime="20201112 09:53:54.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.369" endtime="20201112 09:53:54.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.000" endtime="20201112 09:53:54.395"></status>
</kw>
<msg timestamp="20201112 09:53:54.396" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.404" endtime="20201112 09:53:54.423"></status>
</kw>
<msg timestamp="20201112 09:53:54.424" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.402" endtime="20201112 09:53:54.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.426" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.425" endtime="20201112 09:53:54.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.428" endtime="20201112 09:53:54.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.399" endtime="20201112 09:53:54.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.398" endtime="20201112 09:53:54.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.437" endtime="20201112 09:53:54.723"></status>
</kw>
<msg timestamp="20201112 09:53:54.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023297264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023301639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:54.435" endtime="20201112 09:53:54.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023297264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023301639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:54.727" endtime="20201112 09:53:54.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.736" endtime="20201112 09:53:54.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.433" endtime="20201112 09:53:54.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.431" endtime="20201112 09:53:54.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:54.743" level="INFO">${RESULT} = [{'time': 0.023301639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3749999999974365e-06, 'source_diff': 4.3749999999974365e-06}, {'time': 0.023314861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:54.739" endtime="20201112 09:53:54.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:54.757" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:54.744" endtime="20201112 09:53:54.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.762" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:54.761" endtime="20201112 09:53:54.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.764" level="INFO">VALUE: [4.3749999999974365e-06, 4.318999999999157e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.4449999999987555e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.457999999998852e-06, 4.4449999999987555e-06, 4.389000000000476e-06, 4.3749999999974365e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.444000000002751e-06, 4.416999999999616e-06, 4.388999999997006e-06, 4.430999999999186e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.416000000000142e-06, 4.402000000000572e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.403000000000046e-06, 4.471999999998422e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.360999999997867e-06, 4.375000000000906e-06, 4.401999999997103e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.458999999998325e-06, 4.472000000001891e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.361000000001336e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.403000000000046e-06]</msg>
<status status="PASS" starttime="20201112 09:53:54.763" endtime="20201112 09:53:54.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.758" endtime="20201112 09:53:54.766"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.768" endtime="20201112 09:53:54.769"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:54.772" endtime="20201112 09:53:54.791"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.770" endtime="20201112 09:53:54.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.766" endtime="20201112 09:53:54.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.396" endtime="20201112 09:53:54.793"></status>
</kw>
<msg timestamp="20201112 09:53:54.793" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.801" endtime="20201112 09:53:54.819"></status>
</kw>
<msg timestamp="20201112 09:53:54.819" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.799" endtime="20201112 09:53:54.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.822" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.820" endtime="20201112 09:53:54.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.823" endtime="20201112 09:53:54.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.797" endtime="20201112 09:53:54.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.795" endtime="20201112 09:53:54.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.832" endtime="20201112 09:53:55.120"></status>
</kw>
<msg timestamp="20201112 09:53:55.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022950681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022955097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:54.831" endtime="20201112 09:53:55.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022950681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022955097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:55.124" endtime="20201112 09:53:55.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.133" endtime="20201112 09:53:55.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.828" endtime="20201112 09:53:55.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.826" endtime="20201112 09:53:55.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:55.140" level="INFO">${RESULT} = [{'time': 0.022955097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.022966111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:55.136" endtime="20201112 09:53:55.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:55.154" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:55.141" endtime="20201112 09:53:55.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.159" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:55.158" endtime="20201112 09:53:55.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.161" level="INFO">VALUE: [4.416000000000142e-06, 4.333000000002196e-06, 4.458000000002321e-06, 4.3749999999974365e-06, 4.431000000002655e-06, 4.443999999999282e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.3749999999974365e-06, 4.429999999999712e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.3199999999986305e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.443999999999282e-06, 4.388000000001002e-06, 4.388999999997006e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.472000000001891e-06, 4.402000000000572e-06, 4.375000000000906e-06, 4.417000000003085e-06, 4.403000000000046e-06, 4.3199999999986305e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.318999999999157e-06, 4.361000000001336e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.360999999997867e-06, 4.417000000003085e-06, 4.389000000000476e-06, 4.346999999998297e-06, 4.472000000001891e-06, 4.389000000000476e-06, 4.3749999999974365e-06]</msg>
<status status="PASS" starttime="20201112 09:53:55.160" endtime="20201112 09:53:55.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.155" endtime="20201112 09:53:55.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.165" endtime="20201112 09:53:55.166"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:55.169" endtime="20201112 09:53:55.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.167" endtime="20201112 09:53:55.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.163" endtime="20201112 09:53:55.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.793" endtime="20201112 09:53:55.190"></status>
</kw>
<msg timestamp="20201112 09:53:55.190" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.198" endtime="20201112 09:53:55.215"></status>
</kw>
<msg timestamp="20201112 09:53:55.216" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.196" endtime="20201112 09:53:55.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.218" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.217" endtime="20201112 09:53:55.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.220" endtime="20201112 09:53:55.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.193" endtime="20201112 09:53:55.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.192" endtime="20201112 09:53:55.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.229" endtime="20201112 09:53:55.516"></status>
</kw>
<msg timestamp="20201112 09:53:55.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022924514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022928944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:55.227" endtime="20201112 09:53:55.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022924514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022928944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:55.521" endtime="20201112 09:53:55.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.530" endtime="20201112 09:53:55.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.225" endtime="20201112 09:53:55.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.223" endtime="20201112 09:53:55.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:55.537" level="INFO">${RESULT} = [{'time': 0.022928944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.022938292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:55.533" endtime="20201112 09:53:55.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:55.552" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:55.538" endtime="20201112 09:53:55.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.556" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:55.555" endtime="20201112 09:53:55.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.559" level="INFO">VALUE: [4.429999999999712e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.443999999999282e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.430000000003181e-06, 4.388999999997006e-06, 4.443999999999282e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.388999999997006e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.4449999999987555e-06, 4.360999999997867e-06, 4.402000000000572e-06, 4.375000000000906e-06, 4.417000000003085e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.3339999999982e-06, 4.318999999999157e-06, 4.443999999999282e-06, 4.472000000001891e-06]</msg>
<status status="PASS" starttime="20201112 09:53:55.557" endtime="20201112 09:53:55.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.553" endtime="20201112 09:53:55.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.572" endtime="20201112 09:53:55.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:55.576" endtime="20201112 09:53:55.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.574" endtime="20201112 09:53:55.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.571" endtime="20201112 09:53:55.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.190" endtime="20201112 09:53:55.597"></status>
</kw>
<msg timestamp="20201112 09:53:55.597" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.606" endtime="20201112 09:53:55.623"></status>
</kw>
<msg timestamp="20201112 09:53:55.624" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.604" endtime="20201112 09:53:55.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.626" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.625" endtime="20201112 09:53:55.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.627" endtime="20201112 09:53:55.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.601" endtime="20201112 09:53:55.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.599" endtime="20201112 09:53:55.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.637" endtime="20201112 09:53:55.920"></status>
</kw>
<msg timestamp="20201112 09:53:55.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022591806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022596194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:55.635" endtime="20201112 09:53:55.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022591806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022596194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:55.924" endtime="20201112 09:53:55.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.933" endtime="20201112 09:53:55.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.632" endtime="20201112 09:53:55.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.631" endtime="20201112 09:53:55.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:55.940" level="INFO">${RESULT} = [{'time': 0.022596194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.388000000001002e-06, 'source_diff': 4.388000000001002e-06}, {'time': 0.022607139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:55.936" endtime="20201112 09:53:55.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:55.954" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:55.941" endtime="20201112 09:53:55.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.959" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:55.958" endtime="20201112 09:53:55.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.961" level="INFO">VALUE: [4.388000000001002e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.431000000002655e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.487000000000935e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.3749999999974365e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.417000000003085e-06, 4.389000000000476e-06, 4.417000000003085e-06, 4.319000000002626e-06, 4.375000000000906e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.403000000000046e-06]</msg>
<status status="PASS" starttime="20201112 09:53:55.960" endtime="20201112 09:53:55.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.955" endtime="20201112 09:53:55.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.965" endtime="20201112 09:53:55.966"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:55.969" endtime="20201112 09:53:55.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.967" endtime="20201112 09:53:55.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.963" endtime="20201112 09:53:55.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.598" endtime="20201112 09:53:55.990"></status>
</kw>
<msg timestamp="20201112 09:53:55.990" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.998" endtime="20201112 09:53:56.017"></status>
</kw>
<msg timestamp="20201112 09:53:56.018" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.996" endtime="20201112 09:53:56.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.020" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:56.019" endtime="20201112 09:53:56.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.021" endtime="20201112 09:53:56.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.994" endtime="20201112 09:53:56.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.992" endtime="20201112 09:53:56.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.031" endtime="20201112 09:53:56.315"></status>
</kw>
<msg timestamp="20201112 09:53:56.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021611625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021616, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:53:56.029" endtime="20201112 09:53:56.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021611625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021616, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:53:56.320" endtime="20201112 09:53:56.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.328" endtime="20201112 09:53:56.330"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.026" endtime="20201112 09:53:56.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.025" endtime="20201112 09:53:56.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:56.335" level="INFO">${RESULT} = [{'time': 0.021616, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.021627347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:53:56.332" endtime="20201112 09:53:56.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:56.350" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:56.336" endtime="20201112 09:53:56.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.354" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:56.353" endtime="20201112 09:53:56.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.357" level="INFO">VALUE: [4.375000000000906e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.3199999999986305e-06, 4.445000000002225e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.430999999999186e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.401999999997103e-06, 4.445000000002225e-06, 4.388999999997006e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.332999999998727e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.3749999999974365e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.33400000000167e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.459000000001795e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.388000000001002e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.388999999997006e-06]</msg>
<status status="PASS" starttime="20201112 09:53:56.355" endtime="20201112 09:53:56.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.351" endtime="20201112 09:53:56.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.360" endtime="20201112 09:53:56.362"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:56.364" endtime="20201112 09:53:56.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.362" endtime="20201112 09:53:56.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.359" endtime="20201112 09:53:56.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.991" endtime="20201112 09:53:56.385"></status>
</kw>
<msg timestamp="20201112 09:53:56.385" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.393" endtime="20201112 09:53:56.411"></status>
</kw>
<msg timestamp="20201112 09:53:56.412" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:56.391" endtime="20201112 09:53:56.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.414" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:56.413" endtime="20201112 09:53:56.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.415" endtime="20201112 09:53:56.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.389" endtime="20201112 09:53:56.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.387" endtime="20201112 09:53:56.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.424" endtime="20201112 09:53:56.711"></status>
</kw>
<msg timestamp="20201112 09:53:56.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023201861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023206264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:56.422" endtime="20201112 09:53:56.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023201861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023206264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:56.715" endtime="20201112 09:53:56.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.723" endtime="20201112 09:53:56.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.420" endtime="20201112 09:53:56.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.418" endtime="20201112 09:53:56.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:56.730" level="INFO">${RESULT} = [{'time': 0.023206264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.0232185, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:53:56.727" endtime="20201112 09:53:56.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:56.744" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:56.731" endtime="20201112 09:53:56.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.752" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:56.750" endtime="20201112 09:53:56.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.757" level="INFO">VALUE: [4.403000000000046e-06, 4.443999999999282e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.443999999999282e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.375000000000906e-06, 4.3749999999974365e-06, 4.402000000000572e-06, 4.360999999997867e-06, 4.3339999999982e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.3749999999974365e-06, 4.417000000003085e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.361000000001336e-06, 4.347000000001766e-06, 4.402000000000572e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.387999999997533e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.346999999998297e-06, 4.429999999999712e-06, 4.457999999998852e-06, 4.403000000000046e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.375000000000906e-06]</msg>
<status status="PASS" starttime="20201112 09:53:56.754" endtime="20201112 09:53:56.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.745" endtime="20201112 09:53:56.760"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.764" endtime="20201112 09:53:56.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:56.771" endtime="20201112 09:53:56.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.768" endtime="20201112 09:53:56.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.761" endtime="20201112 09:53:56.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.386" endtime="20201112 09:53:56.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.833" endtime="20201112 09:53:56.796"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:56.805" endtime="20201112 09:53:56.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.802" endtime="20201112 09:53:56.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.799" endtime="20201112 09:53:56.829"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:48.754" endtime="20201112 09:53:56.829" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:56.844" endtime="20201112 09:53:56.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.841" endtime="20201112 09:53:56.865"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.878" endtime="20201112 09:53:56.898"></status>
</kw>
<msg timestamp="20201112 09:53:56.899" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:56.876" endtime="20201112 09:53:56.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.901" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:56.900" endtime="20201112 09:53:56.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.904" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:56.902" endtime="20201112 09:53:56.905"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:56.874" endtime="20201112 09:53:56.905"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:56.871" endtime="20201112 09:53:56.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.870" endtime="20201112 09:53:56.906"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:56.910" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:56.909" endtime="20201112 09:53:56.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.907" endtime="20201112 09:53:56.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.869" endtime="20201112 09:53:56.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.869" endtime="20201112 09:53:56.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.911" endtime="20201112 09:53:56.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.867" endtime="20201112 09:53:56.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.866" endtime="20201112 09:53:56.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.838" endtime="20201112 09:53:56.914"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.923" endtime="20201112 09:53:56.945"></status>
</kw>
<msg timestamp="20201112 09:53:56.946" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:56.922" endtime="20201112 09:53:56.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.948" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:56.947" endtime="20201112 09:53:56.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.949" endtime="20201112 09:53:56.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.919" endtime="20201112 09:53:56.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.917" endtime="20201112 09:53:56.952"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.954" endtime="20201112 09:53:56.956"></status>
</kw>
<msg timestamp="20201112 09:53:56.956" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 09:53:56.953" endtime="20201112 09:53:56.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.960" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:53:56.959" endtime="20201112 09:53:56.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.962" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:53:56.961" endtime="20201112 09:53:56.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.957" endtime="20201112 09:53:56.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.967" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:53:56.966" endtime="20201112 09:53:56.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.969" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:53:56.968" endtime="20201112 09:53:56.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.964" endtime="20201112 09:53:56.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.976" endtime="20201112 09:53:57.263"></status>
</kw>
<msg timestamp="20201112 09:53:57.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070789542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070798264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:56.975" endtime="20201112 09:53:57.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070789542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070798264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:57.267" endtime="20201112 09:53:57.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.275" endtime="20201112 09:53:57.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.972" endtime="20201112 09:53:57.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.970" endtime="20201112 09:53:57.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:57.282" level="INFO">${RESULT} = [{'time': 0.070798264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.722000000002672e-06, 'source_diff': 8.722000000002672e-06}, {'time': 0.070816764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:57.279" endtime="20201112 09:53:57.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:57.295" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:57.283" endtime="20201112 09:53:57.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.300" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 09:53:57.299" endtime="20201112 09:53:57.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.303" level="INFO">VALUE: [8.722000000002672e-06, 8.847000000006267e-06, 8.833999999999231e-06, 8.847000000006267e-06, 8.846999999992389e-06, 8.846999999992389e-06, 8.846999999992389e-06, 8.875000000005406e-06, 8.833999999999231e-06, 8.887999999998564e-06, 8.875000000005406e-06, 8.860999999998898e-06, 8.818999999993249e-06, 8.860999999998898e-06, 8.931000000003686e-06, 8.874999999991529e-06, 8.860999999998898e-06, 8.860999999998898e-06, 8.860999999998898e-06, 8.930000000004212e-06, 8.875000000005406e-06, 8.888999999998037e-06, 8.832999999999758e-06, 8.916999999997177e-06, 8.874999999991529e-06, 8.860999999998898e-06, 8.860999999998898e-06, 8.888999999998037e-06, 8.887999999998564e-06, 8.874999999991529e-06, 8.846999999992389e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.875000000005406e-06, 8.874999999991529e-06, 8.832999999999758e-06, 8.902000000005073e-06, 8.847000000006267e-06, 8.833999999999231e-06, 8.834000000013109e-06, 8.860999999998898e-06, 8.875000000005406e-06, 8.846999999992389e-06, 8.860999999998898e-06, 8.847999999991862e-06, 8.889000000011915e-06, 8.903000000004546e-06, 8.888999999998037e-06, 8.889000000011915e-06]</msg>
<status status="PASS" starttime="20201112 09:53:57.301" endtime="20201112 09:53:57.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.296" endtime="20201112 09:53:57.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.306" endtime="20201112 09:53:57.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:57.309" endtime="20201112 09:53:57.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.308" endtime="20201112 09:53:57.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.304" endtime="20201112 09:53:57.330"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.915" endtime="20201112 09:53:57.330"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:56.833" endtime="20201112 09:53:57.331" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:57.338" endtime="20201112 09:53:57.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.337" endtime="20201112 09:53:57.358"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.371" endtime="20201112 09:53:57.400"></status>
</kw>
<msg timestamp="20201112 09:53:57.401" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.369" endtime="20201112 09:53:57.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.403" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.402" endtime="20201112 09:53:57.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.406" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:57.404" endtime="20201112 09:53:57.407"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:57.367" endtime="20201112 09:53:57.407"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:57.364" endtime="20201112 09:53:57.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.363" endtime="20201112 09:53:57.408"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:57.412" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:57.411" endtime="20201112 09:53:57.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.409" endtime="20201112 09:53:57.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.362" endtime="20201112 09:53:57.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.362" endtime="20201112 09:53:57.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.413" endtime="20201112 09:53:57.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.360" endtime="20201112 09:53:57.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.359" endtime="20201112 09:53:57.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.335" endtime="20201112 09:53:57.416"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.425" endtime="20201112 09:53:57.522"></status>
</kw>
<msg timestamp="20201112 09:53:57.522" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.424" endtime="20201112 09:53:57.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.525" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.523" endtime="20201112 09:53:57.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.526" endtime="20201112 09:53:57.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.421" endtime="20201112 09:53:57.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.419" endtime="20201112 09:53:57.528"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.530" endtime="20201112 09:53:57.532"></status>
</kw>
<msg timestamp="20201112 09:53:57.532" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 09:53:57.529" endtime="20201112 09:53:57.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.537" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:53:57.536" endtime="20201112 09:53:57.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.539" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:53:57.538" endtime="20201112 09:53:57.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.533" endtime="20201112 09:53:57.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.543" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:53:57.542" endtime="20201112 09:53:57.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.545" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:53:57.544" endtime="20201112 09:53:57.546"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.540" endtime="20201112 09:53:57.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.552" endtime="20201112 09:53:57.847"></status>
</kw>
<msg timestamp="20201112 09:53:57.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.081564694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.081614222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:57.551" endtime="20201112 09:53:57.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.081564694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.081614222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:57.851" endtime="20201112 09:53:57.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.860" endtime="20201112 09:53:57.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.548" endtime="20201112 09:53:57.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.547" endtime="20201112 09:53:57.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:57.866" level="INFO">${RESULT} = [{'time': 0.081614222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.952800000000701e-05, 'source_diff': 4.952800000000701e-05}, {'time': 0.083094528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:57.863" endtime="20201112 09:53:57.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:57.879" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:57.867" endtime="20201112 09:53:57.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.884" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 09:53:57.883" endtime="20201112 09:53:57.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.887" level="INFO">VALUE: [4.952800000000701e-05, 4.9471999999994853e-05, 4.952799999999313e-05, 4.95140000000005e-05, 4.941699999999605e-05, 4.9443999999995714e-05, 4.9471999999994853e-05, 4.9403000000003416e-05, 4.9459000000001696e-05, 4.945800000000222e-05, 4.933400000001198e-05, 4.9417000000009925e-05, 4.9487000000000836e-05, 4.947200000000873e-05, 4.948600000000136e-05, 4.952800000000701e-05, 4.95140000000005e-05, 4.952699999999366e-05, 4.944499999999519e-05, 4.9459000000001696e-05, 4.95549999999928e-05, 4.938899999999691e-05, 4.9459000000001696e-05, 4.9403000000003416e-05, 4.948600000000136e-05, 4.9431000000002556e-05, 4.952700000000754e-05, 4.948600000000136e-05, 4.949999999999399e-05, 4.947299999999433e-05, 4.944499999998131e-05, 4.943000000001696e-05, 4.9459000000001696e-05, 4.9471999999994853e-05, 4.948699999998696e-05, 4.941699999999605e-05, 4.9459000000001696e-05, 4.952799999999313e-05, 4.9459000000001696e-05, 4.947299999999433e-05, 4.9499999999980115e-05, 4.950000000000787e-05, 4.938899999998303e-05, 4.943099999998868e-05, 4.947200000002261e-05, 4.950000000000787e-05, 4.9375000000018154e-05, 4.95140000000005e-05, 4.950000000000787e-05, 4.9499999999980115e-05]</msg>
<status status="PASS" starttime="20201112 09:53:57.885" endtime="20201112 09:53:57.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.881" endtime="20201112 09:53:57.888"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.890" endtime="20201112 09:53:57.891"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:57.893" endtime="20201112 09:53:57.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.892" endtime="20201112 09:53:57.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.888" endtime="20201112 09:53:57.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.417" endtime="20201112 09:53:57.914"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:57.332" endtime="20201112 09:53:57.915" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:57.922" endtime="20201112 09:53:57.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.921" endtime="20201112 09:53:57.942"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.956" endtime="20201112 09:53:57.983"></status>
</kw>
<msg timestamp="20201112 09:53:57.983" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.953" endtime="20201112 09:53:57.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.986" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.984" endtime="20201112 09:53:57.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.990" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:57.987" endtime="20201112 09:53:57.990"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:57.951" endtime="20201112 09:53:57.991"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:57.949" endtime="20201112 09:53:57.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.947" endtime="20201112 09:53:57.992"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:57.997" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:57.996" endtime="20201112 09:53:57.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.993" endtime="20201112 09:53:57.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.947" endtime="20201112 09:53:57.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.946" endtime="20201112 09:53:57.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.998" endtime="20201112 09:53:58.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.945" endtime="20201112 09:53:58.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.943" endtime="20201112 09:53:58.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.919" endtime="20201112 09:53:58.001"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.010" endtime="20201112 09:53:58.293"></status>
</kw>
<msg timestamp="20201112 09:53:58.295" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:58.009" endtime="20201112 09:53:58.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.300" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:58.297" endtime="20201112 09:53:58.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.302" endtime="20201112 09:53:58.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.006" endtime="20201112 09:53:58.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.004" endtime="20201112 09:53:58.307"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.312" endtime="20201112 09:53:58.315"></status>
</kw>
<msg timestamp="20201112 09:53:58.316" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 09:53:58.309" endtime="20201112 09:53:58.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.324" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:53:58.322" endtime="20201112 09:53:58.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.329" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:53:58.327" endtime="20201112 09:53:58.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.317" endtime="20201112 09:53:58.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.338" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:53:58.336" endtime="20201112 09:53:58.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.343" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:53:58.341" endtime="20201112 09:53:58.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.332" endtime="20201112 09:53:58.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.360" endtime="20201112 09:53:58.653"></status>
</kw>
<msg timestamp="20201112 09:53:58.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0835565, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.083648681, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:53:58.355" endtime="20201112 09:53:58.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0835565, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.083648681, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:53:58.657" endtime="20201112 09:53:58.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.665" endtime="20201112 09:53:58.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.349" endtime="20201112 09:53:58.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.346" endtime="20201112 09:53:58.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:58.671" level="INFO">${RESULT} = [{'time': 0.083648681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.218099999999674e-05, 'source_diff': 9.218099999999674e-05}, {'time': 0.088855014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:58.668" endtime="20201112 09:53:58.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:58.685" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:58.673" endtime="20201112 09:53:58.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.690" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 09:53:58.689" endtime="20201112 09:53:58.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.692" level="INFO">VALUE: [9.218099999999674e-05, 9.149999999999436e-05, 9.151400000000087e-05, 9.152699999999403e-05, 9.151400000000087e-05, 9.152800000000738e-05, 9.140300000000379e-05, 9.151400000000087e-05, 9.154200000000001e-05, 9.138899999999728e-05, 9.151400000001475e-05, 9.151400000001475e-05, 9.151400000001475e-05, 9.152700000000791e-05, 9.143100000000293e-05, 9.148600000000173e-05, 9.151300000001528e-05, 9.149999999999436e-05, 9.15560000000204e-05, 9.149999999999436e-05, 9.155599999999264e-05, 9.154100000000054e-05, 9.1513999999987e-05, 9.155599999999264e-05, 9.152800000000738e-05, 9.152700000000791e-05, 9.154200000000001e-05, 9.151400000001475e-05, 9.152799999997963e-05, 9.151400000001475e-05, 9.148600000000173e-05, 9.136099999998426e-05, 9.138899999999728e-05, 9.144399999999608e-05, 9.143100000003068e-05, 9.140299999998991e-05, 9.152800000000738e-05, 9.143099999997517e-05, 9.152700000003566e-05, 9.143000000000345e-05, 9.141600000001082e-05, 9.150000000002212e-05, 9.143100000003068e-05, 9.156900000001356e-05, 9.145799999998871e-05, 9.155500000002093e-05, 9.145799999998871e-05, 9.151399999995924e-05, 9.147199999998135e-05, 9.147199999998135e-05]</msg>
<status status="PASS" starttime="20201112 09:53:58.691" endtime="20201112 09:53:58.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.686" endtime="20201112 09:53:58.693"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.695" endtime="20201112 09:53:58.697"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:58.699" endtime="20201112 09:53:58.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.697" endtime="20201112 09:53:58.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.694" endtime="20201112 09:53:58.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.002" endtime="20201112 09:53:58.719"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:57.916" endtime="20201112 09:53:58.720" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:58.727" endtime="20201112 09:53:58.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.726" endtime="20201112 09:53:58.747"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.761" endtime="20201112 09:53:58.782"></status>
</kw>
<msg timestamp="20201112 09:53:58.783" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:58.760" endtime="20201112 09:53:58.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.785" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:58.784" endtime="20201112 09:53:58.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.788" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:58.786" endtime="20201112 09:53:58.789"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:58.756" endtime="20201112 09:53:58.789"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:58.754" endtime="20201112 09:53:58.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.753" endtime="20201112 09:53:58.790"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:58.794" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:58.793" endtime="20201112 09:53:58.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.791" endtime="20201112 09:53:58.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.752" endtime="20201112 09:53:58.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.751" endtime="20201112 09:53:58.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.796" endtime="20201112 09:53:58.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.750" endtime="20201112 09:53:58.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.748" endtime="20201112 09:53:58.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.725" endtime="20201112 09:53:58.799"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.808" endtime="20201112 09:53:58.830"></status>
</kw>
<msg timestamp="20201112 09:53:58.830" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:58.806" endtime="20201112 09:53:58.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.833" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:58.831" endtime="20201112 09:53:58.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.834" endtime="20201112 09:53:58.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.804" endtime="20201112 09:53:58.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.801" endtime="20201112 09:53:58.837"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.839" endtime="20201112 09:53:58.840"></status>
</kw>
<msg timestamp="20201112 09:53:58.841" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 09:53:58.837" endtime="20201112 09:53:58.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.845" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:53:58.844" endtime="20201112 09:53:58.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.847" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:53:58.846" endtime="20201112 09:53:58.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.841" endtime="20201112 09:53:58.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.851" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:53:58.850" endtime="20201112 09:53:58.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.853" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:53:58.852" endtime="20201112 09:53:58.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.848" endtime="20201112 09:53:58.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.864" endtime="20201112 09:53:59.149"></status>
</kw>
<msg timestamp="20201112 09:53:59.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072529, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072531014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:53:58.862" endtime="20201112 09:53:59.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072529, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072531014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:53:59.153" endtime="20201112 09:53:59.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.162" endtime="20201112 09:53:59.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.857" endtime="20201112 09:53:59.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.855" endtime="20201112 09:53:59.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:59.169" level="INFO">${RESULT} = [{'time': 0.072531014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.014000000008509e-06, 'source_diff': 2.014000000008509e-06}, {'time': 0.072547153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:59.165" endtime="20201112 09:53:59.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:59.182" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:59.170" endtime="20201112 09:53:59.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.186" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 09:53:59.185" endtime="20201112 09:53:59.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.189" level="INFO">VALUE: [2.014000000008509e-06, 2.014000000008509e-06, 2.013999999994631e-06, 1.9720000000028604e-06, 2.000000000002e-06, 2.041999999993771e-06, 1.986000000009369e-06, 2.000000000002e-06, 2.013999999994631e-06, 2.013999999994631e-06, 2.014000000008509e-06, 2.013999999994631e-06, 2.041999999993771e-06, 2.000000000002e-06, 2.013999999994631e-06, 2.013999999994631e-06, 2.069000000007315e-06, 2.014000000008509e-06, 2.013999999994631e-06, 1.9859999999954914e-06, 2.068999999993437e-06, 2.013999999994631e-06, 2.013999999994631e-06, 2.0130000000090353e-06, 2.068999999993437e-06, 2.013999999994631e-06, 2.013999999994631e-06, 2.082999999999946e-06, 2.014000000008509e-06, 1.9999999999881224e-06, 1.9859999999954914e-06, 2.0270000000016664e-06, 1.9579999999963515e-06, 2.0409999999942974e-06, 2.0409999999942974e-06, 2.014000000008509e-06, 1.9859999999954914e-06, 2.013999999994631e-06, 2.014000000008509e-06, 2.013999999994631e-06, 2.013999999994631e-06, 2.0700000000067886e-06, 2.02800000000114e-06, 2.013999999994631e-06, 2.02800000000114e-06, 2.000000000002e-06, 2.02800000000114e-06, 2.000000000002e-06, 2.000000000002e-06, 1.9859999999954914e-06]</msg>
<status status="PASS" starttime="20201112 09:53:59.187" endtime="20201112 09:53:59.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.183" endtime="20201112 09:53:59.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.192" endtime="20201112 09:53:59.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:59.195" endtime="20201112 09:53:59.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.194" endtime="20201112 09:53:59.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.190" endtime="20201112 09:53:59.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.800" endtime="20201112 09:53:59.216"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:58.722" endtime="20201112 09:53:59.217" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:59.224" endtime="20201112 09:53:59.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.223" endtime="20201112 09:53:59.244"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.258" endtime="20201112 09:53:59.280"></status>
</kw>
<msg timestamp="20201112 09:53:59.280" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.256" endtime="20201112 09:53:59.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.283" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.281" endtime="20201112 09:53:59.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.286" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:59.284" endtime="20201112 09:53:59.286"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:59.253" endtime="20201112 09:53:59.287"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:59.251" endtime="20201112 09:53:59.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.249" endtime="20201112 09:53:59.288"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:59.292" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:59.291" endtime="20201112 09:53:59.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.289" endtime="20201112 09:53:59.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.249" endtime="20201112 09:53:59.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.248" endtime="20201112 09:53:59.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.293" endtime="20201112 09:53:59.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.247" endtime="20201112 09:53:59.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.245" endtime="20201112 09:53:59.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.221" endtime="20201112 09:53:59.296"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.305" endtime="20201112 09:53:59.401"></status>
</kw>
<msg timestamp="20201112 09:53:59.402" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.303" endtime="20201112 09:53:59.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.404" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.403" endtime="20201112 09:53:59.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.405" endtime="20201112 09:53:59.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.301" endtime="20201112 09:53:59.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.299" endtime="20201112 09:53:59.408"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.410" endtime="20201112 09:53:59.411"></status>
</kw>
<msg timestamp="20201112 09:53:59.412" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 09:53:59.409" endtime="20201112 09:53:59.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.416" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:53:59.415" endtime="20201112 09:53:59.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.418" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:53:59.417" endtime="20201112 09:53:59.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.413" endtime="20201112 09:53:59.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.422" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:53:59.421" endtime="20201112 09:53:59.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.425" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:53:59.424" endtime="20201112 09:53:59.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.419" endtime="20201112 09:53:59.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.433" endtime="20201112 09:53:59.725"></status>
</kw>
<msg timestamp="20201112 09:53:59.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074664444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074676625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:59.430" endtime="20201112 09:53:59.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074664444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074676625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:59.729" endtime="20201112 09:53:59.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.738" endtime="20201112 09:53:59.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.428" endtime="20201112 09:53:59.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.426" endtime="20201112 09:53:59.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:59.744" level="INFO">${RESULT} = [{'time': 0.074676625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2180999999999997e-05, 'source_diff': 1.2180999999999997e-05}, {'time': 0.076165653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:59.741" endtime="20201112 09:53:59.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:59.758" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:53:59.745" endtime="20201112 09:53:59.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.762" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 09:53:59.761" endtime="20201112 09:53:59.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.765" level="INFO">VALUE: [1.2180999999999997e-05, 1.2222000000006172e-05, 1.2207999999999664e-05, 1.2180000000000524e-05, 1.2193999999993155e-05, 1.2195000000006506e-05, 1.2207999999999664e-05, 1.2180000000000524e-05, 1.2194999999992628e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2153000000000858e-05, 1.2222999999991768e-05, 1.2235999999998803e-05, 1.2194999999992628e-05, 1.2180000000000524e-05, 1.2222999999991768e-05, 1.2278000000004452e-05, 1.2208000000013541e-05, 1.2194999999992628e-05, 1.2250000000005312e-05, 1.2153000000000858e-05, 1.2235999999998803e-05, 1.2193999999993155e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2180999999999997e-05, 1.2221999999992295e-05, 1.2222000000006172e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.2208999999999137e-05, 1.2194000000007033e-05, 1.2194000000007033e-05, 1.2193999999993155e-05, 1.2138999999994349e-05, 1.2180999999999997e-05, 1.2209000000013015e-05, 1.2222000000006172e-05, 1.2235999999998803e-05, 1.219400000002091e-05, 1.2193999999993155e-05, 1.2221999999978417e-05, 1.2194999999992628e-05, 1.219400000002091e-05, 1.220899999998526e-05, 1.2209000000013015e-05, 1.2193999999993155e-05, 1.2207999999985786e-05, 1.2223000000005646e-05]</msg>
<status status="PASS" starttime="20201112 09:53:59.763" endtime="20201112 09:53:59.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.759" endtime="20201112 09:53:59.766"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.768" endtime="20201112 09:53:59.769"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:59.771" endtime="20201112 09:53:59.791"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.770" endtime="20201112 09:53:59.791"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.766" endtime="20201112 09:53:59.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.297" endtime="20201112 09:53:59.792"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:59.219" endtime="20201112 09:53:59.793" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:59.800" endtime="20201112 09:53:59.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.798" endtime="20201112 09:53:59.820"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.834" endtime="20201112 09:53:59.857"></status>
</kw>
<msg timestamp="20201112 09:53:59.858" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.831" endtime="20201112 09:53:59.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.860" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.859" endtime="20201112 09:53:59.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.864" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:59.861" endtime="20201112 09:53:59.864"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:59.829" endtime="20201112 09:53:59.865"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:59.826" endtime="20201112 09:53:59.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.825" endtime="20201112 09:53:59.866"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:59.869" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:59.868" endtime="20201112 09:53:59.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.866" endtime="20201112 09:53:59.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.824" endtime="20201112 09:53:59.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.824" endtime="20201112 09:53:59.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.871" endtime="20201112 09:53:59.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.822" endtime="20201112 09:53:59.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.821" endtime="20201112 09:53:59.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.797" endtime="20201112 09:53:59.873"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.882" endtime="20201112 09:54:00.165"></status>
</kw>
<msg timestamp="20201112 09:54:00.166" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.881" endtime="20201112 09:54:00.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.168" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:00.167" endtime="20201112 09:54:00.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.169" endtime="20201112 09:54:00.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.878" endtime="20201112 09:54:00.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.876" endtime="20201112 09:54:00.172"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.174" endtime="20201112 09:54:00.176"></status>
</kw>
<msg timestamp="20201112 09:54:00.176" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 09:54:00.173" endtime="20201112 09:54:00.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.180" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:54:00.179" endtime="20201112 09:54:00.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.182" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:54:00.181" endtime="20201112 09:54:00.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.177" endtime="20201112 09:54:00.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.187" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:54:00.186" endtime="20201112 09:54:00.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.189" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:54:00.188" endtime="20201112 09:54:00.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.183" endtime="20201112 09:54:00.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.196" endtime="20201112 09:54:00.487"></status>
</kw>
<msg timestamp="20201112 09:54:00.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080090569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080113139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:00.195" endtime="20201112 09:54:00.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080090569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080113139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:00.492" endtime="20201112 09:54:00.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.506" endtime="20201112 09:54:00.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.192" endtime="20201112 09:54:00.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.190" endtime="20201112 09:54:00.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:00.520" level="INFO">${RESULT} = [{'time': 0.080113139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2569999999999535e-05, 'source_diff': 2.2569999999999535e-05}, {'time': 0.085342083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:00.513" endtime="20201112 09:54:00.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:00.550" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:00.522" endtime="20201112 09:54:00.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.559" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 09:54:00.557" endtime="20201112 09:54:00.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.565" level="INFO">VALUE: [2.2569999999999535e-05, 2.261100000000571e-05, 2.256900000000006e-05, 2.2610999999991832e-05, 2.25969999999992e-05, 2.259700000001308e-05, 2.262499999999834e-05, 2.25969999999992e-05, 2.258300000000657e-05, 2.258400000001992e-05, 2.2555999999979148e-05, 2.2583999999992166e-05, 2.2583999999992166e-05, 2.2610999999977954e-05, 2.2556000000006904e-05, 2.262499999999834e-05, 2.2610999999977954e-05, 2.261100000000571e-05, 2.261100000000571e-05, 2.256900000000006e-05, 2.2583999999992166e-05, 2.261100000000571e-05, 2.256900000000006e-05, 2.255500000000743e-05, 2.262499999999834e-05, 2.2556000000006904e-05, 2.2610999999977954e-05, 2.2554999999979675e-05, 2.2610999999977954e-05, 2.256900000000006e-05, 2.2596999999985323e-05, 2.2598000000012552e-05, 2.2638999999990972e-05, 2.2569999999999535e-05, 2.2556000000006904e-05, 2.262499999999834e-05, 2.2638999999990972e-05, 2.2584000000047677e-05, 2.2554999999979675e-05, 2.2554999999979675e-05, 2.262499999999834e-05, 2.259700000001308e-05, 2.2569999999999535e-05, 2.2583999999992166e-05, 2.259700000001308e-05, 2.2666000000004516e-05, 2.261100000000571e-05, 2.261100000000571e-05, 2.2583000000020448e-05, 2.2637999999963743e-05]</msg>
<status status="PASS" starttime="20201112 09:54:00.562" endtime="20201112 09:54:00.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.552" endtime="20201112 09:54:00.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.572" endtime="20201112 09:54:00.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:00.579" endtime="20201112 09:54:00.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.575" endtime="20201112 09:54:00.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.568" endtime="20201112 09:54:00.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.874" endtime="20201112 09:54:00.600"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:59.794" endtime="20201112 09:54:00.601" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:53:25.255" endtime="20201112 09:54:00.608"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.675" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:54:00.683" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:54:01.763" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:54:00.674" endtime="20201112 09:54:01.763"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.766" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:54:01.765" endtime="20201112 09:54:01.766"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.672" endtime="20201112 09:54:01.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:01.769" endtime="20201112 09:54:01.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.768" endtime="20201112 09:54:01.954"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.967" endtime="20201112 09:54:01.987"></status>
</kw>
<msg timestamp="20201112 09:54:01.988" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ion: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks...</msg>
<status status="PASS" starttime="20201112 09:54:01.965" endtime="20201112 09:54:01.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.991" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ion: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks...</msg>
<status status="PASS" starttime="20201112 09:54:01.989" endtime="20201112 09:54:01.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.994" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:01.992" endtime="20201112 09:54:01.994"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:01.963" endtime="20201112 09:54:01.995"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:01.961" endtime="20201112 09:54:01.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.959" endtime="20201112 09:54:01.996"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:02.001" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:01.999" endtime="20201112 09:54:02.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.997" endtime="20201112 09:54:02.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.958" endtime="20201112 09:54:02.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.958" endtime="20201112 09:54:02.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.002" endtime="20201112 09:54:02.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.956" endtime="20201112 09:54:02.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.005" endtime="20201112 09:54:02.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.955" endtime="20201112 09:54:02.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.671" endtime="20201112 09:54:02.008"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:02.017" endtime="20201112 09:54:02.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.014" endtime="20201112 09:54:02.040"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.066" endtime="20201112 09:54:02.089"></status>
</kw>
<msg timestamp="20201112 09:54:02.090" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:02.063" endtime="20201112 09:54:02.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.096" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:02.093" endtime="20201112 09:54:02.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.102" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:02.098" endtime="20201112 09:54:02.102"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:02.058" endtime="20201112 09:54:02.104"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:02.053" endtime="20201112 09:54:02.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.050" endtime="20201112 09:54:02.106"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:02.114" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:02.112" endtime="20201112 09:54:02.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.107" endtime="20201112 09:54:02.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.048" endtime="20201112 09:54:02.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.047" endtime="20201112 09:54:02.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.117" endtime="20201112 09:54:02.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.044" endtime="20201112 09:54:02.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.041" endtime="20201112 09:54:02.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.011" endtime="20201112 09:54:02.120"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.131" endtime="20201112 09:54:02.151"></status>
</kw>
<msg timestamp="20201112 09:54:02.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:02.129" endtime="20201112 09:54:02.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:02.152" endtime="20201112 09:54:02.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.155" endtime="20201112 09:54:02.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.125" endtime="20201112 09:54:02.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.123" endtime="20201112 09:54:02.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.164" endtime="20201112 09:54:02.461"></status>
</kw>
<msg timestamp="20201112 09:54:02.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.108135472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.108141611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:02.162" endtime="20201112 09:54:02.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.108135472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.108141611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:02.465" endtime="20201112 09:54:02.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.474" endtime="20201112 09:54:02.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.160" endtime="20201112 09:54:02.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.158" endtime="20201112 09:54:02.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:02.481" level="INFO">${RESULT} = [{'time': 0.108141611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.139000000002226e-06, 'source_diff': 6.139000000002226e-06}, {'time': 0.108157514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:02.478" endtime="20201112 09:54:02.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:02.494" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:02.482" endtime="20201112 09:54:02.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.499" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 09:54:02.498" endtime="20201112 09:54:02.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.501" level="INFO">VALUE: [6.139000000002226e-06, 6.069999999996911e-06, 6.167000000001366e-06, 6.111000000003086e-06, 6.139000000002226e-06, 6.125000000009595e-06, 6.153000000008735e-06, 6.167000000001366e-06, 6.125000000009595e-06, 6.152999999994857e-06, 6.124999999995717e-06, 6.124999999995717e-06, 6.139000000002226e-06, 6.124999999995717e-06, 6.153000000008735e-06, 6.152999999994857e-06, 6.152999999994857e-06, 6.167000000001366e-06, 6.111000000003086e-06, 6.167000000001366e-06, 6.069999999996911e-06, 6.139000000002226e-06, 6.111999999988682e-06, 6.124999999995717e-06, 6.153000000008735e-06, 6.153000000008735e-06, 6.111000000003086e-06, 6.167000000001366e-06, 6.152000000009261e-06, 6.207999999993663e-06, 6.139000000002226e-06, 6.152999999994857e-06, 6.151999999995383e-06, 6.152999999994857e-06, 6.152999999994857e-06, 6.139000000002226e-06, 6.139000000002226e-06, 6.110999999989208e-06, 6.139000000002226e-06, 6.139000000002226e-06, 6.153000000008735e-06, 6.138000000002752e-06, 6.167000000001366e-06, 6.166000000001892e-06, 6.152999999994857e-06, 6.166000000001892e-06, 6.139000000002226e-06, 6.167000000001366e-06, 6.138000000002752e-06, 6.111000000003086e-06]</msg>
<status status="PASS" starttime="20201112 09:54:02.500" endtime="20201112 09:54:02.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.495" endtime="20201112 09:54:02.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.505" endtime="20201112 09:54:02.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:02.508" endtime="20201112 09:54:02.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.507" endtime="20201112 09:54:02.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.503" endtime="20201112 09:54:02.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.122" endtime="20201112 09:54:02.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.121" endtime="20201112 09:54:02.529"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.538" endtime="20201112 09:54:02.556"></status>
</kw>
<msg timestamp="20201112 09:54:02.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:02.536" endtime="20201112 09:54:02.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:02.558" endtime="20201112 09:54:02.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.560" endtime="20201112 09:54:02.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.534" endtime="20201112 09:54:02.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.532" endtime="20201112 09:54:02.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.569" endtime="20201112 09:54:02.853"></status>
</kw>
<msg timestamp="20201112 09:54:02.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024304681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024310861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:02.568" endtime="20201112 09:54:02.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024304681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024310861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:02.857" endtime="20201112 09:54:02.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.865" endtime="20201112 09:54:02.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.565" endtime="20201112 09:54:02.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.563" endtime="20201112 09:54:02.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:02.872" level="INFO">${RESULT} = [{'time': 0.024310861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.179999999997993e-06, 'source_diff': 6.179999999997993e-06}, {'time': 0.024326444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:02.868" endtime="20201112 09:54:02.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:02.885" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:02.873" endtime="20201112 09:54:02.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.890" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 09:54:02.889" endtime="20201112 09:54:02.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.892" level="INFO">VALUE: [6.179999999997993e-06, 6.165999999998423e-06, 6.139000000002226e-06, 6.153000000001796e-06, 6.2090000000000756e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.097000000000047e-06, 6.139000000002226e-06, 6.139000000002226e-06, 6.110999999999617e-06, 6.1389999999987566e-06, 6.1529999999983265e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.0839999999999506e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.167000000001366e-06, 6.165999999998423e-06, 6.153000000001796e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.1529999999983265e-06, 6.1529999999983265e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.153000000001796e-06, 6.153000000001796e-06, 6.235999999999742e-06, 6.151999999998853e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.1389999999987566e-06, 6.153000000001796e-06, 6.153000000001796e-06, 6.152000000002322e-06, 6.1529999999983265e-06, 6.153000000001796e-06, 6.1389999999987566e-06, 6.125000000002656e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.139000000002226e-06, 6.153000000001796e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.181000000000936e-06]</msg>
<status status="PASS" starttime="20201112 09:54:02.891" endtime="20201112 09:54:02.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.886" endtime="20201112 09:54:02.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.896" endtime="20201112 09:54:02.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:02.899" endtime="20201112 09:54:02.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.898" endtime="20201112 09:54:02.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.894" endtime="20201112 09:54:02.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.530" endtime="20201112 09:54:02.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.529" endtime="20201112 09:54:02.920"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.929" endtime="20201112 09:54:02.944"></status>
</kw>
<msg timestamp="20201112 09:54:02.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:02.927" endtime="20201112 09:54:02.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:02.945" endtime="20201112 09:54:02.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.948" endtime="20201112 09:54:02.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.924" endtime="20201112 09:54:02.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.922" endtime="20201112 09:54:02.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.958" endtime="20201112 09:54:03.244"></status>
</kw>
<msg timestamp="20201112 09:54:03.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020235931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020242056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:02.956" endtime="20201112 09:54:03.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020235931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020242056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:03.249" endtime="20201112 09:54:03.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.257" endtime="20201112 09:54:03.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.954" endtime="20201112 09:54:03.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.952" endtime="20201112 09:54:03.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:03.263" level="INFO">${RESULT} = [{'time': 0.020242056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.125000000002656e-06, 'source_diff': 6.125000000002656e-06}, {'time': 0.020257333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:03.260" endtime="20201112 09:54:03.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:03.277" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:03.264" endtime="20201112 09:54:03.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.281" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 09:54:03.280" endtime="20201112 09:54:03.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.284" level="INFO">VALUE: [6.125000000002656e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.1529999999983265e-06, 6.139000000002226e-06, 6.167000000001366e-06, 6.124999999999187e-06, 6.165999999998423e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.180999999997466e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.151999999998853e-06, 6.124999999999187e-06, 6.137999999999283e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.1389999999987566e-06, 6.181000000000936e-06, 6.083000000000477e-06, 6.153000000001796e-06, 6.137999999999283e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.137999999999283e-06, 6.1529999999983265e-06, 6.124999999999187e-06, 6.2090000000000756e-06, 6.181000000000936e-06, 6.153000000001796e-06, 6.070000000000381e-06, 6.139000000002226e-06, 6.110999999999617e-06, 6.167000000001366e-06, 6.139000000002226e-06, 6.139000000002226e-06, 6.152000000002322e-06, 6.208000000000602e-06, 6.069999999996911e-06, 6.125000000002656e-06, 6.0839999999999506e-06, 6.1529999999983265e-06, 6.194000000001032e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.069000000000907e-06, 6.1389999999987566e-06, 6.124999999999187e-06]</msg>
<status status="PASS" starttime="20201112 09:54:03.282" endtime="20201112 09:54:03.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.278" endtime="20201112 09:54:03.285"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.287" endtime="20201112 09:54:03.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:03.291" endtime="20201112 09:54:03.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.289" endtime="20201112 09:54:03.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.286" endtime="20201112 09:54:03.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.921" endtime="20201112 09:54:03.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.920" endtime="20201112 09:54:03.311"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.320" endtime="20201112 09:54:03.337"></status>
</kw>
<msg timestamp="20201112 09:54:03.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.319" endtime="20201112 09:54:03.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.339" endtime="20201112 09:54:03.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.341" endtime="20201112 09:54:03.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.316" endtime="20201112 09:54:03.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.314" endtime="20201112 09:54:03.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.351" endtime="20201112 09:54:03.635"></status>
</kw>
<msg timestamp="20201112 09:54:03.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020637847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020644042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:03.350" endtime="20201112 09:54:03.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020637847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020644042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:03.640" endtime="20201112 09:54:03.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.648" endtime="20201112 09:54:03.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.347" endtime="20201112 09:54:03.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.345" endtime="20201112 09:54:03.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:03.654" level="INFO">${RESULT} = [{'time': 0.020644042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.020658139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:03.651" endtime="20201112 09:54:03.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:03.669" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:03.655" endtime="20201112 09:54:03.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.673" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 09:54:03.672" endtime="20201112 09:54:03.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.676" level="INFO">VALUE: [6.195000000000506e-06, 6.1529999999983265e-06, 6.181000000000936e-06, 6.110999999999617e-06, 6.153000000001796e-06, 6.1529999999983265e-06, 6.1389999999987566e-06, 6.041000000001767e-06, 6.165999999998423e-06, 6.153000000001796e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.110999999999617e-06, 6.1529999999983265e-06, 6.069000000000907e-06, 6.110999999999617e-06, 6.166999999997896e-06, 6.1529999999983265e-06, 6.151999999998853e-06, 6.153000000001796e-06, 6.124999999999187e-06, 6.180000000001462e-06, 6.153000000001796e-06, 6.139000000002226e-06, 6.167000000001366e-06, 6.166999999997896e-06, 6.166999999997896e-06, 6.151999999998853e-06, 6.166000000001892e-06, 6.125000000002656e-06, 6.1389999999987566e-06, 6.151999999998853e-06, 6.069000000000907e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.167000000001366e-06, 6.1529999999983265e-06, 6.139000000002226e-06, 6.1529999999983265e-06, 6.208000000000602e-06, 6.165999999998423e-06, 6.1529999999983265e-06, 6.124999999999187e-06, 6.153000000001796e-06, 6.167000000001366e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.153000000001796e-06, 6.166999999997896e-06, 6.1529999999983265e-06]</msg>
<status status="PASS" starttime="20201112 09:54:03.674" endtime="20201112 09:54:03.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.670" endtime="20201112 09:54:03.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.679" endtime="20201112 09:54:03.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:03.683" endtime="20201112 09:54:03.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.681" endtime="20201112 09:54:03.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.678" endtime="20201112 09:54:03.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.312" endtime="20201112 09:54:03.704"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.312" endtime="20201112 09:54:03.704"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.712" endtime="20201112 09:54:03.727"></status>
</kw>
<msg timestamp="20201112 09:54:03.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.711" endtime="20201112 09:54:03.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.729" endtime="20201112 09:54:03.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.731" endtime="20201112 09:54:03.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.708" endtime="20201112 09:54:03.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.706" endtime="20201112 09:54:03.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.741" endtime="20201112 09:54:04.028"></status>
</kw>
<msg timestamp="20201112 09:54:04.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020208139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020214278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:03.740" endtime="20201112 09:54:04.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020208139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020214278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:04.032" endtime="20201112 09:54:04.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.041" endtime="20201112 09:54:04.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.737" endtime="20201112 09:54:04.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.736" endtime="20201112 09:54:04.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:04.047" level="INFO">${RESULT} = [{'time': 0.020214278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.1389999999987566e-06, 'source_diff': 6.1389999999987566e-06}, {'time': 0.020226778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:04.044" endtime="20201112 09:54:04.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:04.060" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:04.048" endtime="20201112 09:54:04.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.065" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 09:54:04.064" endtime="20201112 09:54:04.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.067" level="INFO">VALUE: [6.1389999999987566e-06, 6.181000000000936e-06, 6.1389999999987566e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.181000000000936e-06, 6.153000000001796e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.166000000001892e-06, 6.167000000001366e-06, 6.151999999998853e-06, 6.124999999999187e-06, 6.1529999999983265e-06, 6.125000000002656e-06, 6.139000000002226e-06, 6.137999999999283e-06, 6.1389999999987566e-06, 6.137999999999283e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.1529999999983265e-06, 6.153000000001796e-06, 6.153000000001796e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.166999999997896e-06, 6.1529999999983265e-06, 6.139000000002226e-06, 6.165999999998423e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.1389999999987566e-06, 6.153000000001796e-06, 6.1389999999987566e-06, 6.153000000001796e-06, 6.151999999998853e-06, 6.167000000001366e-06, 6.124999999999187e-06, 6.152000000002322e-06, 6.181000000000936e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.167000000001366e-06, 6.125000000002656e-06, 6.1529999999983265e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.125000000002656e-06, 6.097000000000047e-06]</msg>
<status status="PASS" starttime="20201112 09:54:04.066" endtime="20201112 09:54:04.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.061" endtime="20201112 09:54:04.069"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.071" endtime="20201112 09:54:04.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:04.074" endtime="20201112 09:54:04.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.073" endtime="20201112 09:54:04.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.069" endtime="20201112 09:54:04.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.705" endtime="20201112 09:54:04.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.704" endtime="20201112 09:54:04.095"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.104" endtime="20201112 09:54:04.122"></status>
</kw>
<msg timestamp="20201112 09:54:04.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:04.102" endtime="20201112 09:54:04.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:04.123" endtime="20201112 09:54:04.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.126" endtime="20201112 09:54:04.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.100" endtime="20201112 09:54:04.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.098" endtime="20201112 09:54:04.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.136" endtime="20201112 09:54:04.421"></status>
</kw>
<msg timestamp="20201112 09:54:04.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020629264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020635403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:04.134" endtime="20201112 09:54:04.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020629264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020635403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:04.425" endtime="20201112 09:54:04.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.433" endtime="20201112 09:54:04.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.132" endtime="20201112 09:54:04.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.130" endtime="20201112 09:54:04.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:04.440" level="INFO">${RESULT} = [{'time': 0.020635403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.1389999999987566e-06, 'source_diff': 6.1389999999987566e-06}, {'time': 0.020647042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:04.436" endtime="20201112 09:54:04.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:04.453" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:04.441" endtime="20201112 09:54:04.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.457" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 09:54:04.456" endtime="20201112 09:54:04.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.460" level="INFO">VALUE: [6.1389999999987566e-06, 6.139000000002226e-06, 6.139000000002226e-06, 6.097000000000047e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.1529999999983265e-06, 6.1389999999987566e-06, 6.151999999998853e-06, 6.181000000000936e-06, 6.153000000001796e-06, 6.166999999997896e-06, 6.152000000002322e-06, 6.151999999998853e-06, 6.165999999998423e-06, 6.1389999999987566e-06, 6.1529999999983265e-06, 6.110999999999617e-06, 6.1529999999983265e-06, 6.165999999998423e-06, 6.153000000001796e-06, 6.151999999998853e-06, 6.208000000000602e-06, 6.153000000001796e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.166999999997896e-06, 6.153000000001796e-06, 6.139000000002226e-06, 6.166000000001892e-06, 6.181000000000936e-06, 6.139000000002226e-06, 6.139000000002226e-06, 6.223000000003115e-06, 6.165999999998423e-06, 6.181000000000936e-06, 6.166999999997896e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.111000000003086e-06, 6.167000000001366e-06, 6.166999999997896e-06, 6.151999999998853e-06, 6.124999999999187e-06, 6.180000000001462e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.181000000000936e-06, 6.124999999999187e-06]</msg>
<status status="PASS" starttime="20201112 09:54:04.458" endtime="20201112 09:54:04.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.454" endtime="20201112 09:54:04.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.463" endtime="20201112 09:54:04.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:04.467" endtime="20201112 09:54:04.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.465" endtime="20201112 09:54:04.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.462" endtime="20201112 09:54:04.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.096" endtime="20201112 09:54:04.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.096" endtime="20201112 09:54:04.488"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.496" endtime="20201112 09:54:04.511"></status>
</kw>
<msg timestamp="20201112 09:54:04.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:04.495" endtime="20201112 09:54:04.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:04.513" endtime="20201112 09:54:04.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.515" endtime="20201112 09:54:04.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.492" endtime="20201112 09:54:04.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.490" endtime="20201112 09:54:04.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.525" endtime="20201112 09:54:04.811"></status>
</kw>
<msg timestamp="20201112 09:54:04.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020044083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020050236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:04.524" endtime="20201112 09:54:04.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020044083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020050236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:04.815" endtime="20201112 09:54:04.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.823" endtime="20201112 09:54:04.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.521" endtime="20201112 09:54:04.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.519" endtime="20201112 09:54:04.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:04.830" level="INFO">${RESULT} = [{'time': 0.020050236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.1529999999983265e-06, 'source_diff': 6.1529999999983265e-06}, {'time': 0.020067583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:04.826" endtime="20201112 09:54:04.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:04.843" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:04.831" endtime="20201112 09:54:04.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.848" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 09:54:04.847" endtime="20201112 09:54:04.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.850" level="INFO">VALUE: [6.1529999999983265e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.125000000002656e-06, 6.125000000002656e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.153000000001796e-06, 6.1529999999983265e-06, 6.139000000002226e-06, 6.166000000001892e-06, 6.1389999999987566e-06, 6.1529999999983265e-06, 6.1529999999983265e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.110999999999617e-06, 6.153000000001796e-06, 6.124999999999187e-06, 6.1529999999983265e-06, 6.1389999999987566e-06, 6.151999999998853e-06, 6.0979999999995205e-06, 6.1389999999987566e-06, 6.153000000001796e-06, 6.124999999999187e-06, 6.151999999998853e-06, 6.1529999999983265e-06, 6.153000000001796e-06, 6.1529999999983265e-06, 6.167000000001366e-06, 6.139000000002226e-06, 6.0979999999995205e-06, 6.139000000002226e-06, 6.124999999999187e-06, 6.166999999997896e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.137999999999283e-06, 6.153000000001796e-06, 6.139000000002226e-06, 6.1529999999983265e-06, 6.181000000000936e-06, 6.208000000000602e-06]</msg>
<status status="PASS" starttime="20201112 09:54:04.849" endtime="20201112 09:54:04.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.844" endtime="20201112 09:54:04.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.854" endtime="20201112 09:54:04.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:04.857" endtime="20201112 09:54:04.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.856" endtime="20201112 09:54:04.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.852" endtime="20201112 09:54:04.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.489" endtime="20201112 09:54:04.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.488" endtime="20201112 09:54:04.878"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.887" endtime="20201112 09:54:04.903"></status>
</kw>
<msg timestamp="20201112 09:54:04.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:04.885" endtime="20201112 09:54:04.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:04.904" endtime="20201112 09:54:04.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.907" endtime="20201112 09:54:04.909"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.882" endtime="20201112 09:54:04.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.880" endtime="20201112 09:54:04.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.917" endtime="20201112 09:54:05.201"></status>
</kw>
<msg timestamp="20201112 09:54:05.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021693333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021699486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:04.915" endtime="20201112 09:54:05.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021693333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021699486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:05.205" endtime="20201112 09:54:05.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.213" endtime="20201112 09:54:05.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.913" endtime="20201112 09:54:05.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.911" endtime="20201112 09:54:05.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:05.220" level="INFO">${RESULT} = [{'time': 0.021699486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.021712806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:05.217" endtime="20201112 09:54:05.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:05.234" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:05.221" endtime="20201112 09:54:05.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.239" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 09:54:05.238" endtime="20201112 09:54:05.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.241" level="INFO">VALUE: [6.153000000001796e-06, 6.153000000001796e-06, 6.2229999999996455e-06, 6.139000000002226e-06, 6.139000000002226e-06, 6.235999999999742e-06, 6.110999999999617e-06, 6.110999999999617e-06, 6.1389999999987566e-06, 6.153000000001796e-06, 6.124999999999187e-06, 6.1529999999983265e-06, 6.153000000001796e-06, 6.124999999999187e-06, 6.181000000000936e-06, 6.1529999999983265e-06, 6.139000000002226e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.110999999999617e-06, 6.151999999998853e-06, 6.181000000000936e-06, 6.1529999999983265e-06, 6.167000000001366e-06, 6.166000000001892e-06, 6.139000000002226e-06, 6.139000000002226e-06, 6.194000000001032e-06, 6.124999999999187e-06, 6.11199999999909e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.125000000002656e-06, 6.110999999999617e-06, 6.166000000001892e-06, 6.124999999999187e-06, 6.166999999997896e-06, 6.1529999999983265e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.1529999999983265e-06, 6.1529999999983265e-06, 6.153000000001796e-06, 6.124999999999187e-06, 6.151999999998853e-06, 6.153000000001796e-06, 6.124999999999187e-06]</msg>
<status status="PASS" starttime="20201112 09:54:05.240" endtime="20201112 09:54:05.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.235" endtime="20201112 09:54:05.242"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.245" endtime="20201112 09:54:05.246"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:05.248" endtime="20201112 09:54:05.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.247" endtime="20201112 09:54:05.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.243" endtime="20201112 09:54:05.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.879" endtime="20201112 09:54:05.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.878" endtime="20201112 09:54:05.269"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.278" endtime="20201112 09:54:05.298"></status>
</kw>
<msg timestamp="20201112 09:54:05.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:05.276" endtime="20201112 09:54:05.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:05.300" endtime="20201112 09:54:05.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.302" endtime="20201112 09:54:05.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.273" endtime="20201112 09:54:05.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.271" endtime="20201112 09:54:05.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.312" endtime="20201112 09:54:05.597"></status>
</kw>
<msg timestamp="20201112 09:54:05.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022421569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022427722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:05.311" endtime="20201112 09:54:05.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022421569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022427722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:05.601" endtime="20201112 09:54:05.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.610" endtime="20201112 09:54:05.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.308" endtime="20201112 09:54:05.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.306" endtime="20201112 09:54:05.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:05.616" level="INFO">${RESULT} = [{'time': 0.022427722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.022438569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:05.613" endtime="20201112 09:54:05.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:05.629" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:05.617" endtime="20201112 09:54:05.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.634" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 09:54:05.633" endtime="20201112 09:54:05.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.636" level="INFO">VALUE: [6.153000000001796e-06, 6.165999999998423e-06, 6.083000000000477e-06, 6.1389999999987566e-06, 6.166000000001892e-06, 6.1529999999983265e-06, 6.139000000002226e-06, 6.139000000002226e-06, 6.1389999999987566e-06, 6.195000000000506e-06, 6.1529999999983265e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.2090000000000756e-06, 6.1389999999987566e-06, 6.083000000000477e-06, 6.167000000001366e-06, 6.1389999999987566e-06, 6.110999999999617e-06, 6.125000000002656e-06, 6.1529999999983265e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.166999999997896e-06, 6.069000000000907e-06, 6.1389999999987566e-06, 6.151999999998853e-06, 6.194000000001032e-06, 6.124999999999187e-06, 6.151999999998853e-06, 6.1529999999983265e-06, 6.124999999999187e-06, 6.137999999999283e-06, 6.1529999999983265e-06, 6.1529999999983265e-06, 6.1529999999983265e-06, 6.179999999997993e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.125000000002656e-06, 6.1389999999987566e-06, 6.110999999999617e-06, 6.1529999999983265e-06, 6.167000000001366e-06, 6.1529999999983265e-06, 6.151999999998853e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.124999999999187e-06, 6.110999999999617e-06]</msg>
<status status="PASS" starttime="20201112 09:54:05.635" endtime="20201112 09:54:05.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.630" endtime="20201112 09:54:05.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.640" endtime="20201112 09:54:05.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:05.643" endtime="20201112 09:54:05.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.642" endtime="20201112 09:54:05.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.638" endtime="20201112 09:54:05.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.270" endtime="20201112 09:54:05.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.269" endtime="20201112 09:54:05.664"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.673" endtime="20201112 09:54:05.691"></status>
</kw>
<msg timestamp="20201112 09:54:05.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:05.671" endtime="20201112 09:54:05.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:05.693" endtime="20201112 09:54:05.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.695" endtime="20201112 09:54:05.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.669" endtime="20201112 09:54:05.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.667" endtime="20201112 09:54:05.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.705" endtime="20201112 09:54:05.990"></status>
</kw>
<msg timestamp="20201112 09:54:05.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024255847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024262014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:05.703" endtime="20201112 09:54:05.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024255847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024262014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:05.994" endtime="20201112 09:54:06.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.002" endtime="20201112 09:54:06.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.701" endtime="20201112 09:54:06.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.699" endtime="20201112 09:54:06.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:06.009" level="INFO">${RESULT} = [{'time': 0.024262014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.166999999997896e-06, 'source_diff': 6.166999999997896e-06}, {'time': 0.02427375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:06.006" endtime="20201112 09:54:06.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:06.022" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:06.010" endtime="20201112 09:54:06.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.027" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 09:54:06.026" endtime="20201112 09:54:06.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.029" level="INFO">VALUE: [6.166999999997896e-06, 6.097000000000047e-06, 6.1529999999983265e-06, 6.1529999999983265e-06, 6.152000000002322e-06, 6.181000000000936e-06, 6.1389999999987566e-06, 6.097000000000047e-06, 6.111000000003086e-06, 6.1529999999983265e-06, 6.167000000001366e-06, 6.152000000002322e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.181000000000936e-06, 6.1529999999983265e-06, 6.139000000002226e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.208000000000602e-06, 6.137999999999283e-06, 6.180000000001462e-06, 6.1529999999983265e-06, 6.153000000001796e-06, 6.069000000000907e-06, 6.167000000001366e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.110999999999617e-06, 6.125000000002656e-06, 6.181000000000936e-06, 6.124999999999187e-06, 6.110999999999617e-06, 6.1389999999987566e-06, 6.153000000001796e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.1529999999983265e-06, 6.139000000002226e-06, 6.153000000001796e-06, 6.167000000001366e-06, 6.1529999999983265e-06, 6.151999999998853e-06, 6.153000000001796e-06, 6.153000000001796e-06, 6.151999999998853e-06, 6.139000000002226e-06, 6.124999999999187e-06, 6.11199999999909e-06, 6.139000000002226e-06]</msg>
<status status="PASS" starttime="20201112 09:54:06.028" endtime="20201112 09:54:06.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.023" endtime="20201112 09:54:06.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.033" endtime="20201112 09:54:06.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:06.036" endtime="20201112 09:54:06.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.035" endtime="20201112 09:54:06.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.031" endtime="20201112 09:54:06.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.665" endtime="20201112 09:54:06.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.665" endtime="20201112 09:54:06.057"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.066" endtime="20201112 09:54:06.084"></status>
</kw>
<msg timestamp="20201112 09:54:06.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:06.064" endtime="20201112 09:54:06.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:06.085" endtime="20201112 09:54:06.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.088" endtime="20201112 09:54:06.090"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.062" endtime="20201112 09:54:06.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.060" endtime="20201112 09:54:06.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.098" endtime="20201112 09:54:06.385"></status>
</kw>
<msg timestamp="20201112 09:54:06.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023121375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023127514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:06.096" endtime="20201112 09:54:06.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023121375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023127514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:06.389" endtime="20201112 09:54:06.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.397" endtime="20201112 09:54:06.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.094" endtime="20201112 09:54:06.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.092" endtime="20201112 09:54:06.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:06.404" level="INFO">${RESULT} = [{'time': 0.023127514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.1389999999987566e-06, 'source_diff': 6.1389999999987566e-06}, {'time': 0.023143903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:06.401" endtime="20201112 09:54:06.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:06.417" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:06.405" endtime="20201112 09:54:06.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.422" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 09:54:06.421" endtime="20201112 09:54:06.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.424" level="INFO">VALUE: [6.1389999999987566e-06, 6.1389999999987566e-06, 6.055000000001337e-06, 6.1389999999987566e-06, 6.1529999999983265e-06, 6.070000000000381e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.152000000002322e-06, 6.208000000000602e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.167000000001366e-06, 6.139000000002226e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.1529999999983265e-06, 6.180999999997466e-06, 6.124999999999187e-06, 6.166999999997896e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.1529999999983265e-06, 6.153000000001796e-06, 6.165999999998423e-06, 6.139000000002226e-06, 6.125000000002656e-06, 6.153000000001796e-06, 6.097000000000047e-06, 6.111000000003086e-06, 6.165999999998423e-06, 6.151999999998853e-06, 6.11199999999909e-06, 6.139000000002226e-06, 6.167000000001366e-06, 6.1529999999983265e-06, 6.1529999999983265e-06, 6.152000000002322e-06, 6.1529999999983265e-06, 6.1389999999987566e-06, 6.2090000000000756e-06, 6.1389999999987566e-06, 6.167000000001366e-06, 6.165999999998423e-06, 6.069000000000907e-06, 6.139000000002226e-06, 6.194000000001032e-06, 6.1389999999987566e-06, 6.1939999999975626e-06]</msg>
<status status="PASS" starttime="20201112 09:54:06.423" endtime="20201112 09:54:06.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.418" endtime="20201112 09:54:06.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.427" endtime="20201112 09:54:06.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:06.431" endtime="20201112 09:54:06.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.429" endtime="20201112 09:54:06.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.426" endtime="20201112 09:54:06.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.058" endtime="20201112 09:54:06.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.058" endtime="20201112 09:54:06.452"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.460" endtime="20201112 09:54:06.480"></status>
</kw>
<msg timestamp="20201112 09:54:06.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:06.459" endtime="20201112 09:54:06.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:06.481" endtime="20201112 09:54:06.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.484" endtime="20201112 09:54:06.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.456" endtime="20201112 09:54:06.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.454" endtime="20201112 09:54:06.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.494" endtime="20201112 09:54:06.780"></status>
</kw>
<msg timestamp="20201112 09:54:06.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020459292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020465486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:06.492" endtime="20201112 09:54:06.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020459292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020465486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:06.784" endtime="20201112 09:54:06.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.792" endtime="20201112 09:54:06.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.490" endtime="20201112 09:54:06.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.488" endtime="20201112 09:54:06.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:06.799" level="INFO">${RESULT} = [{'time': 0.020465486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.020480625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:06.795" endtime="20201112 09:54:06.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:06.813" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:06.800" endtime="20201112 09:54:06.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.818" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 09:54:06.817" endtime="20201112 09:54:06.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.820" level="INFO">VALUE: [6.194000000001032e-06, 6.166999999997896e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.1529999999983265e-06, 6.137999999999283e-06, 6.139000000002226e-06, 6.1939999999975626e-06, 6.208000000000602e-06, 6.152000000002322e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.153000000001796e-06, 6.124999999999187e-06, 6.166999999997896e-06, 6.151999999998853e-06, 6.1389999999987566e-06, 6.125000000002656e-06, 6.124999999999187e-06, 6.153000000001796e-06, 6.153000000001796e-06, 6.124999999999187e-06, 6.180000000001462e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.153000000001796e-06, 6.070000000000381e-06, 6.167000000001366e-06, 6.124999999999187e-06, 6.165999999998423e-06, 6.180999999997466e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.1389999999987566e-06, 6.1529999999983265e-06, 6.124999999999187e-06, 6.153000000001796e-06, 6.1939999999975626e-06, 6.181000000000936e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.1529999999983265e-06, 6.124999999999187e-06, 6.110999999999617e-06]</msg>
<status status="PASS" starttime="20201112 09:54:06.819" endtime="20201112 09:54:06.821"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.814" endtime="20201112 09:54:06.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.824" endtime="20201112 09:54:06.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:06.827" endtime="20201112 09:54:06.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.826" endtime="20201112 09:54:06.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.822" endtime="20201112 09:54:06.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.453" endtime="20201112 09:54:06.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.452" endtime="20201112 09:54:06.848"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.856" endtime="20201112 09:54:06.872"></status>
</kw>
<msg timestamp="20201112 09:54:06.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:06.855" endtime="20201112 09:54:06.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:06.873" endtime="20201112 09:54:06.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.876" endtime="20201112 09:54:06.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.852" endtime="20201112 09:54:06.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.850" endtime="20201112 09:54:06.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.886" endtime="20201112 09:54:07.173"></status>
</kw>
<msg timestamp="20201112 09:54:07.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021174722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021180875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:06.884" endtime="20201112 09:54:07.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021174722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021180875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:07.177" endtime="20201112 09:54:07.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.185" endtime="20201112 09:54:07.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.882" endtime="20201112 09:54:07.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.880" endtime="20201112 09:54:07.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:07.192" level="INFO">${RESULT} = [{'time': 0.021180875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.1529999999983265e-06, 'source_diff': 6.1529999999983265e-06}, {'time': 0.021192403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:07.188" endtime="20201112 09:54:07.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:07.205" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:07.193" endtime="20201112 09:54:07.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.210" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 09:54:07.209" endtime="20201112 09:54:07.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.212" level="INFO">VALUE: [6.1529999999983265e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.153000000001796e-06, 6.1389999999987566e-06, 6.1529999999983265e-06, 6.1529999999983265e-06, 6.11200000000256e-06, 6.194999999997036e-06, 6.166999999997896e-06, 6.180000000001462e-06, 6.166999999997896e-06, 6.166000000001892e-06, 6.139000000002226e-06, 6.180000000001462e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.1529999999983265e-06, 6.151999999998853e-06, 6.139000000002226e-06, 6.153000000001796e-06, 6.125000000002656e-06, 6.194000000001032e-06, 6.124999999999187e-06, 6.1529999999983265e-06, 6.222000000000172e-06, 6.1529999999983265e-06, 6.124999999999187e-06, 6.165999999998423e-06, 6.166000000001892e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.153000000001796e-06, 6.125000000002656e-06, 6.166999999997896e-06, 6.139000000002226e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.069000000000907e-06, 6.153000000001796e-06, 6.139000000002226e-06, 6.153000000001796e-06, 6.097000000000047e-06, 6.153000000001796e-06, 6.124999999999187e-06, 6.1529999999983265e-06, 6.194000000001032e-06, 6.153000000001796e-06, 6.166999999997896e-06]</msg>
<status status="PASS" starttime="20201112 09:54:07.211" endtime="20201112 09:54:07.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.206" endtime="20201112 09:54:07.213"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.216" endtime="20201112 09:54:07.217"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:07.219" endtime="20201112 09:54:07.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.217" endtime="20201112 09:54:07.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.214" endtime="20201112 09:54:07.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.849" endtime="20201112 09:54:07.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.848" endtime="20201112 09:54:07.240"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.249" endtime="20201112 09:54:07.265"></status>
</kw>
<msg timestamp="20201112 09:54:07.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.247" endtime="20201112 09:54:07.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.266" endtime="20201112 09:54:07.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.269" endtime="20201112 09:54:07.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.244" endtime="20201112 09:54:07.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.242" endtime="20201112 09:54:07.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.279" endtime="20201112 09:54:07.566"></status>
</kw>
<msg timestamp="20201112 09:54:07.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021078153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021084306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:07.277" endtime="20201112 09:54:07.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021078153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021084306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:07.570" endtime="20201112 09:54:07.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.578" endtime="20201112 09:54:07.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.274" endtime="20201112 09:54:07.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.273" endtime="20201112 09:54:07.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:07.585" level="INFO">${RESULT} = [{'time': 0.021084306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.021100111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:07.581" endtime="20201112 09:54:07.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:07.598" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:07.586" endtime="20201112 09:54:07.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.602" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 09:54:07.601" endtime="20201112 09:54:07.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.605" level="INFO">VALUE: [6.153000000001796e-06, 6.153000000001796e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.179999999997993e-06, 6.1389999999987566e-06, 6.137999999999283e-06, 6.124999999999187e-06, 6.153000000001796e-06, 6.138000000002752e-06, 6.153000000001796e-06, 6.1389999999987566e-06, 6.153000000001796e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.0839999999999506e-06, 6.1529999999983265e-06, 6.1529999999983265e-06, 6.0979999999995205e-06, 6.153000000001796e-06, 6.194000000001032e-06, 6.139000000002226e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.139000000002226e-06, 6.1529999999983265e-06, 6.110999999999617e-06, 6.139000000002226e-06, 6.083000000000477e-06, 6.153000000001796e-06, 6.139000000002226e-06, 6.110999999999617e-06, 6.1529999999983265e-06, 6.166999999997896e-06, 6.1389999999987566e-06, 6.153000000001796e-06, 6.1389999999987566e-06, 6.1529999999983265e-06, 6.166999999997896e-06, 6.166999999997896e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.153000000001796e-06, 6.1529999999983265e-06, 6.110999999999617e-06, 6.166000000001892e-06, 6.124999999999187e-06, 6.124999999999187e-06]</msg>
<status status="PASS" starttime="20201112 09:54:07.604" endtime="20201112 09:54:07.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.599" endtime="20201112 09:54:07.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.608" endtime="20201112 09:54:07.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:07.612" endtime="20201112 09:54:07.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.610" endtime="20201112 09:54:07.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.607" endtime="20201112 09:54:07.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.241" endtime="20201112 09:54:07.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.240" endtime="20201112 09:54:07.633"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.641" endtime="20201112 09:54:07.657"></status>
</kw>
<msg timestamp="20201112 09:54:07.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.640" endtime="20201112 09:54:07.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.658" endtime="20201112 09:54:07.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.660" endtime="20201112 09:54:07.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.637" endtime="20201112 09:54:07.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.635" endtime="20201112 09:54:07.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.674" endtime="20201112 09:54:07.980"></status>
</kw>
<msg timestamp="20201112 09:54:07.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020120042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020126167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:07.671" endtime="20201112 09:54:07.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020120042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020126167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:07.984" endtime="20201112 09:54:07.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.992" endtime="20201112 09:54:07.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.668" endtime="20201112 09:54:07.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.665" endtime="20201112 09:54:07.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:07.999" level="INFO">${RESULT} = [{'time': 0.020126167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.124999999999187e-06, 'source_diff': 6.124999999999187e-06}, {'time': 0.020138736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:07.996" endtime="20201112 09:54:07.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:08.012" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:08.000" endtime="20201112 09:54:08.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.017" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 09:54:08.016" endtime="20201112 09:54:08.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.019" level="INFO">VALUE: [6.124999999999187e-06, 6.110999999999617e-06, 6.1529999999983265e-06, 6.153000000001796e-06, 6.139000000002226e-06, 6.097000000000047e-06, 6.166000000001892e-06, 6.124999999999187e-06, 6.1529999999983265e-06, 6.1529999999983265e-06, 6.124999999999187e-06, 6.165999999998423e-06, 6.1529999999983265e-06, 6.153000000001796e-06, 6.181000000000936e-06, 6.153000000001796e-06, 6.153000000001796e-06, 6.124999999999187e-06, 6.137999999999283e-06, 6.165999999998423e-06, 6.151999999998853e-06, 6.1529999999983265e-06, 6.153000000001796e-06, 6.194000000001032e-06, 6.138000000002752e-06, 6.1529999999983265e-06, 6.1389999999987566e-06, 6.165999999998423e-06, 6.1529999999983265e-06, 6.180000000001462e-06, 6.125000000002656e-06, 6.153000000001796e-06, 6.139000000002226e-06, 6.166999999997896e-06, 6.153000000001796e-06, 6.125000000002656e-06, 6.151999999998853e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.166999999997896e-06, 6.153000000001796e-06, 6.069000000000907e-06, 6.1529999999983265e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.153000000001796e-06, 6.139000000002226e-06, 6.153000000001796e-06, 6.153000000001796e-06, 6.180000000001462e-06]</msg>
<status status="PASS" starttime="20201112 09:54:08.018" endtime="20201112 09:54:08.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.013" endtime="20201112 09:54:08.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.023" endtime="20201112 09:54:08.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:08.026" endtime="20201112 09:54:08.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.025" endtime="20201112 09:54:08.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.021" endtime="20201112 09:54:08.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.634" endtime="20201112 09:54:08.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.633" endtime="20201112 09:54:08.047"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.056" endtime="20201112 09:54:08.073"></status>
</kw>
<msg timestamp="20201112 09:54:08.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:08.054" endtime="20201112 09:54:08.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:08.074" endtime="20201112 09:54:08.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.077" endtime="20201112 09:54:08.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.052" endtime="20201112 09:54:08.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.050" endtime="20201112 09:54:08.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.087" endtime="20201112 09:54:08.372"></status>
</kw>
<msg timestamp="20201112 09:54:08.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022606208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022612319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:08.085" endtime="20201112 09:54:08.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022606208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022612319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:08.376" endtime="20201112 09:54:08.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.385" endtime="20201112 09:54:08.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.082" endtime="20201112 09:54:08.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.081" endtime="20201112 09:54:08.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:08.392" level="INFO">${RESULT} = [{'time': 0.022612319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.022623569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:08.388" endtime="20201112 09:54:08.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:08.406" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:08.393" endtime="20201112 09:54:08.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.411" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 09:54:08.410" endtime="20201112 09:54:08.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.413" level="INFO">VALUE: [6.110999999999617e-06, 6.179999999997993e-06, 6.139000000002226e-06, 6.167000000001366e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.153000000001796e-06, 6.1389999999987566e-06, 6.180000000001462e-06, 6.1529999999983265e-06, 6.166000000001892e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.180999999997466e-06, 6.165999999998423e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.167000000001366e-06, 6.1529999999983265e-06, 6.166999999997896e-06, 6.165999999998423e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.167000000001366e-06, 6.165999999998423e-06, 6.139000000002226e-06, 6.151999999998853e-06, 6.153000000001796e-06, 6.097000000000047e-06, 6.125000000002656e-06, 6.1389999999987566e-06, 6.180000000001462e-06, 6.153000000001796e-06, 6.1529999999983265e-06, 6.139000000002226e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.124999999999187e-06, 6.069000000000907e-06, 6.139000000002226e-06, 6.167000000001366e-06, 6.139000000002226e-06, 6.194000000001032e-06, 6.0979999999995205e-06, 6.138000000002752e-06, 6.069000000000907e-06, 6.151999999998853e-06, 6.124999999999187e-06, 6.151999999998853e-06]</msg>
<status status="PASS" starttime="20201112 09:54:08.412" endtime="20201112 09:54:08.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.407" endtime="20201112 09:54:08.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.417" endtime="20201112 09:54:08.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:08.420" endtime="20201112 09:54:08.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.419" endtime="20201112 09:54:08.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.415" endtime="20201112 09:54:08.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.048" endtime="20201112 09:54:08.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.048" endtime="20201112 09:54:08.441"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.450" endtime="20201112 09:54:08.465"></status>
</kw>
<msg timestamp="20201112 09:54:08.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:08.448" endtime="20201112 09:54:08.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:08.467" endtime="20201112 09:54:08.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.469" endtime="20201112 09:54:08.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.446" endtime="20201112 09:54:08.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.444" endtime="20201112 09:54:08.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.479" endtime="20201112 09:54:08.775"></status>
</kw>
<msg timestamp="20201112 09:54:08.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020617778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020623931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:08.478" endtime="20201112 09:54:08.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020617778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020623931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:08.779" endtime="20201112 09:54:08.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.787" endtime="20201112 09:54:08.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.475" endtime="20201112 09:54:08.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.474" endtime="20201112 09:54:08.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:08.794" level="INFO">${RESULT} = [{'time': 0.020623931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.020637639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:08.790" endtime="20201112 09:54:08.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:08.808" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:08.795" endtime="20201112 09:54:08.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.816" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 09:54:08.815" endtime="20201112 09:54:08.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.819" level="INFO">VALUE: [6.153000000001796e-06, 6.1529999999983265e-06, 6.180000000001462e-06, 6.152000000002322e-06, 6.1389999999987566e-06, 6.167000000001366e-06, 6.1529999999983265e-06, 6.139000000002226e-06, 6.167000000001366e-06, 6.1529999999983265e-06, 6.137999999999283e-06, 6.1389999999987566e-06, 6.1529999999983265e-06, 6.110999999999617e-06, 6.151999999998853e-06, 6.139000000002226e-06, 6.153000000001796e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.110999999999617e-06, 6.1389999999987566e-06, 6.138000000002752e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.1529999999983265e-06, 6.124999999999187e-06, 6.236999999999215e-06, 6.125000000002656e-06, 6.124999999999187e-06, 6.2090000000000756e-06, 6.1529999999983265e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.083000000000477e-06, 6.1389999999987566e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.153000000001796e-06, 6.139000000002226e-06, 6.1529999999983265e-06, 6.125000000002656e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.166999999997896e-06]</msg>
<status status="PASS" starttime="20201112 09:54:08.817" endtime="20201112 09:54:08.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.808" endtime="20201112 09:54:08.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.823" endtime="20201112 09:54:08.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:08.827" endtime="20201112 09:54:08.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.825" endtime="20201112 09:54:08.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.821" endtime="20201112 09:54:08.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.442" endtime="20201112 09:54:08.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.442" endtime="20201112 09:54:08.848"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.857" endtime="20201112 09:54:08.873"></status>
</kw>
<msg timestamp="20201112 09:54:08.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:08.855" endtime="20201112 09:54:08.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:08.875" endtime="20201112 09:54:08.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.877" endtime="20201112 09:54:08.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.853" endtime="20201112 09:54:08.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.850" endtime="20201112 09:54:08.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.888" endtime="20201112 09:54:09.173"></status>
</kw>
<msg timestamp="20201112 09:54:09.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020971319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020977458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:08.886" endtime="20201112 09:54:09.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020971319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020977458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:09.177" endtime="20201112 09:54:09.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.186" endtime="20201112 09:54:09.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.883" endtime="20201112 09:54:09.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.882" endtime="20201112 09:54:09.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:09.192" level="INFO">${RESULT} = [{'time': 0.020977458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.139000000002226e-06, 'source_diff': 6.139000000002226e-06}, {'time': 0.020990653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:09.189" endtime="20201112 09:54:09.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:09.206" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:09.193" endtime="20201112 09:54:09.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.210" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 09:54:09.209" endtime="20201112 09:54:09.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.213" level="INFO">VALUE: [6.139000000002226e-06, 6.153000000001796e-06, 6.153000000001796e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.167000000001366e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.1529999999983265e-06, 6.180000000001462e-06, 6.151999999998853e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.165999999998423e-06, 6.1389999999987566e-06, 6.11200000000256e-06, 6.1389999999987566e-06, 6.110999999999617e-06, 6.167000000001366e-06, 6.070000000000381e-06, 6.1529999999983265e-06, 6.1389999999987566e-06, 6.1529999999983265e-06, 6.1529999999983265e-06, 6.1529999999983265e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.125000000002656e-06, 6.139000000002226e-06, 6.139000000002226e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.153000000001796e-06, 6.1389999999987566e-06, 6.153000000001796e-06, 6.1389999999987566e-06, 6.125000000002656e-06, 6.151999999998853e-06, 6.139000000002226e-06, 6.153000000001796e-06, 6.1389999999987566e-06, 6.110999999999617e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.0839999999999506e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.0839999999999506e-06]</msg>
<status status="PASS" starttime="20201112 09:54:09.211" endtime="20201112 09:54:09.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.207" endtime="20201112 09:54:09.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.217" endtime="20201112 09:54:09.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:09.220" endtime="20201112 09:54:09.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.218" endtime="20201112 09:54:09.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.215" endtime="20201112 09:54:09.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.849" endtime="20201112 09:54:09.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.848" endtime="20201112 09:54:09.241"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.249" endtime="20201112 09:54:09.268"></status>
</kw>
<msg timestamp="20201112 09:54:09.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.248" endtime="20201112 09:54:09.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.270" endtime="20201112 09:54:09.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.272" endtime="20201112 09:54:09.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.245" endtime="20201112 09:54:09.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.243" endtime="20201112 09:54:09.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.282" endtime="20201112 09:54:09.578"></status>
</kw>
<msg timestamp="20201112 09:54:09.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024779736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024785861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:09.281" endtime="20201112 09:54:09.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024779736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024785861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:09.582" endtime="20201112 09:54:09.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.590" endtime="20201112 09:54:09.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.278" endtime="20201112 09:54:09.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.277" endtime="20201112 09:54:09.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:09.597" level="INFO">${RESULT} = [{'time': 0.024785861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.124999999999187e-06, 'source_diff': 6.124999999999187e-06}, {'time': 0.024802958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:09.593" endtime="20201112 09:54:09.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:09.610" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:09.598" endtime="20201112 09:54:09.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.615" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 09:54:09.614" endtime="20201112 09:54:09.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.617" level="INFO">VALUE: [6.124999999999187e-06, 6.110999999999617e-06, 6.153000000001796e-06, 6.124999999999187e-06, 6.166999999997896e-06, 6.2229999999996455e-06, 6.181000000000936e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.1529999999983265e-06, 6.181000000000936e-06, 6.139000000002226e-06, 6.110999999999617e-06, 6.139000000002226e-06, 6.139000000002226e-06, 6.097000000000047e-06, 6.139000000002226e-06, 6.124999999999187e-06, 6.1529999999983265e-06, 6.153000000001796e-06, 6.124999999999187e-06, 6.167000000001366e-06, 6.125000000002656e-06, 6.1389999999987566e-06, 6.1939999999975626e-06, 6.124999999999187e-06, 6.11199999999909e-06, 6.083000000000477e-06, 6.1529999999983265e-06, 6.110999999999617e-06, 6.165999999998423e-06, 6.1389999999987566e-06, 6.069000000000907e-06, 6.055999999997341e-06, 6.110999999999617e-06, 6.208000000000602e-06, 6.1389999999987566e-06, 6.165999999998423e-06, 6.1389999999987566e-06, 6.1529999999983265e-06, 6.166999999997896e-06, 6.110999999999617e-06, 6.153000000001796e-06, 6.180000000001462e-06, 6.125000000002656e-06, 6.153000000001796e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.139000000002226e-06, 6.1529999999983265e-06]</msg>
<status status="PASS" starttime="20201112 09:54:09.616" endtime="20201112 09:54:09.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.611" endtime="20201112 09:54:09.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.621" endtime="20201112 09:54:09.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:09.624" endtime="20201112 09:54:09.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.622" endtime="20201112 09:54:09.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.619" endtime="20201112 09:54:09.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.242" endtime="20201112 09:54:09.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.241" endtime="20201112 09:54:09.645"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.654" endtime="20201112 09:54:09.673"></status>
</kw>
<msg timestamp="20201112 09:54:09.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.652" endtime="20201112 09:54:09.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.675" endtime="20201112 09:54:09.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.678" endtime="20201112 09:54:09.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.649" endtime="20201112 09:54:09.681"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.647" endtime="20201112 09:54:09.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.688" endtime="20201112 09:54:09.972"></status>
</kw>
<msg timestamp="20201112 09:54:09.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022552181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022558319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:09.687" endtime="20201112 09:54:09.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022552181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022558319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:09.977" endtime="20201112 09:54:09.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.985" endtime="20201112 09:54:09.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.684" endtime="20201112 09:54:09.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.682" endtime="20201112 09:54:09.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:09.991" level="INFO">${RESULT} = [{'time': 0.022558319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.137999999999283e-06, 'source_diff': 6.137999999999283e-06}, {'time': 0.022573292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:09.988" endtime="20201112 09:54:09.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:10.006" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:09.992" endtime="20201112 09:54:10.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.010" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 09:54:10.009" endtime="20201112 09:54:10.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.013" level="INFO">VALUE: [6.137999999999283e-06, 6.1529999999983265e-06, 6.097000000000047e-06, 6.1389999999987566e-06, 6.110999999999617e-06, 6.152000000002322e-06, 6.153000000001796e-06, 6.0979999999995205e-06, 6.124999999999187e-06, 6.179999999997993e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.151999999998853e-06, 6.139000000002226e-06, 6.124999999999187e-06, 6.069000000000907e-06, 6.124999999999187e-06, 6.153000000001796e-06, 6.1389999999987566e-06, 6.153000000001796e-06, 6.1529999999983265e-06, 6.151999999998853e-06, 6.167000000001366e-06, 6.097000000000047e-06, 6.1389999999987566e-06, 6.166999999997896e-06, 6.111000000003086e-06, 6.166000000001892e-06, 6.152000000002322e-06, 6.165999999998423e-06, 6.179999999997993e-06, 6.097000000000047e-06, 6.153000000001796e-06, 6.1389999999987566e-06, 6.208000000000602e-06, 6.139000000002226e-06, 6.152000000002322e-06, 6.151999999998853e-06, 6.165999999998423e-06, 6.151999999998853e-06, 6.1529999999983265e-06, 6.167000000001366e-06, 6.1529999999983265e-06, 6.166000000001892e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.124999999999187e-06, 6.152000000002322e-06, 6.139000000002226e-06]</msg>
<status status="PASS" starttime="20201112 09:54:10.011" endtime="20201112 09:54:10.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.007" endtime="20201112 09:54:10.014"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.017" endtime="20201112 09:54:10.018"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:10.020" endtime="20201112 09:54:10.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.019" endtime="20201112 09:54:10.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.015" endtime="20201112 09:54:10.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.646" endtime="20201112 09:54:10.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.645" endtime="20201112 09:54:10.041"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.050" endtime="20201112 09:54:10.068"></status>
</kw>
<msg timestamp="20201112 09:54:10.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:10.048" endtime="20201112 09:54:10.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:10.069" endtime="20201112 09:54:10.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.072" endtime="20201112 09:54:10.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.046" endtime="20201112 09:54:10.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.043" endtime="20201112 09:54:10.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.082" endtime="20201112 09:54:10.366"></status>
</kw>
<msg timestamp="20201112 09:54:10.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023419583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023425722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:10.080" endtime="20201112 09:54:10.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023419583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023425722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:10.370" endtime="20201112 09:54:10.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.378" endtime="20201112 09:54:10.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.078" endtime="20201112 09:54:10.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.076" endtime="20201112 09:54:10.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:10.385" level="INFO">${RESULT} = [{'time': 0.023425722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.1389999999987566e-06, 'source_diff': 6.1389999999987566e-06}, {'time': 0.023437, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:10.381" endtime="20201112 09:54:10.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:10.398" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:10.386" endtime="20201112 09:54:10.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.403" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 09:54:10.402" endtime="20201112 09:54:10.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.405" level="INFO">VALUE: [6.1389999999987566e-06, 6.208000000000602e-06, 6.110999999999617e-06, 6.110999999999617e-06, 6.1389999999987566e-06, 6.167000000001366e-06, 6.1529999999983265e-06, 6.1389999999987566e-06, 6.181000000000936e-06, 6.1529999999983265e-06, 6.167000000001366e-06, 6.125000000002656e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.1529999999983265e-06, 6.153000000001796e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.152000000002322e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.167000000001366e-06, 6.124999999999187e-06, 6.2090000000000756e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.097000000000047e-06, 6.110999999999617e-06, 6.0839999999999506e-06, 6.152000000002322e-06, 6.139000000002226e-06, 6.151999999998853e-06, 6.1389999999987566e-06, 6.167000000001366e-06, 6.1389999999987566e-06, 6.125000000002656e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.166999999997896e-06, 6.0839999999999506e-06, 6.124999999999187e-06, 6.153000000001796e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.125000000002656e-06]</msg>
<status status="PASS" starttime="20201112 09:54:10.404" endtime="20201112 09:54:10.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.399" endtime="20201112 09:54:10.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.409" endtime="20201112 09:54:10.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:10.412" endtime="20201112 09:54:10.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.410" endtime="20201112 09:54:10.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.407" endtime="20201112 09:54:10.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.042" endtime="20201112 09:54:10.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.041" endtime="20201112 09:54:10.433"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.442" endtime="20201112 09:54:10.459"></status>
</kw>
<msg timestamp="20201112 09:54:10.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:10.440" endtime="20201112 09:54:10.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:10.461" endtime="20201112 09:54:10.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.463" endtime="20201112 09:54:10.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.437" endtime="20201112 09:54:10.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.435" endtime="20201112 09:54:10.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.473" endtime="20201112 09:54:10.758"></status>
</kw>
<msg timestamp="20201112 09:54:10.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023390042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023396194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:10.472" endtime="20201112 09:54:10.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023390042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023396194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:10.763" endtime="20201112 09:54:10.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.771" endtime="20201112 09:54:10.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.469" endtime="20201112 09:54:10.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.468" endtime="20201112 09:54:10.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:10.778" level="INFO">${RESULT} = [{'time': 0.023396194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.151999999998853e-06, 'source_diff': 6.151999999998853e-06}, {'time': 0.023411931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:10.774" endtime="20201112 09:54:10.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:10.791" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:10.779" endtime="20201112 09:54:10.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.795" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 09:54:10.794" endtime="20201112 09:54:10.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.798" level="INFO">VALUE: [6.151999999998853e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.222000000000172e-06, 6.1529999999983265e-06, 6.153000000001796e-06, 6.153000000001796e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.1939999999975626e-06, 6.124999999999187e-06, 6.110999999999617e-06, 6.153000000001796e-06, 6.1529999999983265e-06, 6.1389999999987566e-06, 6.137999999999283e-06, 6.111000000003086e-06, 6.152000000002322e-06, 6.1529999999983265e-06, 6.1389999999987566e-06, 6.1529999999983265e-06, 6.0979999999995205e-06, 6.180000000001462e-06, 6.124999999999187e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.124999999999187e-06, 6.1529999999983265e-06, 6.1939999999975626e-06, 6.165999999998423e-06, 6.166000000001892e-06, 6.180999999997466e-06, 6.166999999997896e-06, 6.195000000000506e-06, 6.083000000000477e-06, 6.139000000002226e-06, 6.1389999999987566e-06, 6.153000000001796e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.1389999999987566e-06, 6.153000000001796e-06, 6.166000000001892e-06, 6.1389999999987566e-06, 6.194000000001032e-06, 6.151999999998853e-06, 6.124999999999187e-06, 6.0979999999995205e-06]</msg>
<status status="PASS" starttime="20201112 09:54:10.797" endtime="20201112 09:54:10.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.792" endtime="20201112 09:54:10.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.802" endtime="20201112 09:54:10.803"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:10.805" endtime="20201112 09:54:10.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.803" endtime="20201112 09:54:10.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.800" endtime="20201112 09:54:10.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.434" endtime="20201112 09:54:10.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.433" endtime="20201112 09:54:10.826"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.835" endtime="20201112 09:54:10.855"></status>
</kw>
<msg timestamp="20201112 09:54:10.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:10.833" endtime="20201112 09:54:10.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:10.857" endtime="20201112 09:54:10.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.859" endtime="20201112 09:54:10.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.830" endtime="20201112 09:54:10.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.828" endtime="20201112 09:54:10.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.869" endtime="20201112 09:54:11.156"></status>
</kw>
<msg timestamp="20201112 09:54:11.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022227069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022233181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:10.868" endtime="20201112 09:54:11.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022227069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022233181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:11.160" endtime="20201112 09:54:11.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.169" endtime="20201112 09:54:11.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.865" endtime="20201112 09:54:11.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.863" endtime="20201112 09:54:11.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:11.175" level="INFO">${RESULT} = [{'time': 0.022233181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.11200000000256e-06, 'source_diff': 6.11200000000256e-06}, {'time': 0.022250306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:11.172" endtime="20201112 09:54:11.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:11.189" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:11.176" endtime="20201112 09:54:11.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.193" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 09:54:11.192" endtime="20201112 09:54:11.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.196" level="INFO">VALUE: [6.11200000000256e-06, 6.11200000000256e-06, 6.151999999998853e-06, 6.070000000000381e-06, 6.139000000002226e-06, 6.137999999999283e-06, 6.09800000000299e-06, 6.137999999999283e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.181000000000936e-06, 6.152000000002322e-06, 6.167000000001366e-06, 6.222000000000172e-06, 6.110999999999617e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.1529999999983265e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.139000000002226e-06, 6.110999999999617e-06, 6.152000000002322e-06, 6.125000000002656e-06, 6.208000000000602e-06, 6.137999999999283e-06, 6.181000000000936e-06, 6.1529999999983265e-06, 6.1389999999987566e-06, 6.181000000000936e-06, 6.1389999999987566e-06, 6.125000000002656e-06, 6.139000000002226e-06, 6.125000000002656e-06, 6.166000000001892e-06, 6.139000000002226e-06, 6.180000000001462e-06, 6.153000000001796e-06, 6.125000000002656e-06, 6.208000000000602e-06, 6.070000000000381e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.124999999999187e-06]</msg>
<status status="PASS" starttime="20201112 09:54:11.194" endtime="20201112 09:54:11.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.189" endtime="20201112 09:54:11.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.199" endtime="20201112 09:54:11.201"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:11.203" endtime="20201112 09:54:11.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.201" endtime="20201112 09:54:11.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.198" endtime="20201112 09:54:11.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.827" endtime="20201112 09:54:11.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.826" endtime="20201112 09:54:11.224"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.233" endtime="20201112 09:54:11.249"></status>
</kw>
<msg timestamp="20201112 09:54:11.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:11.231" endtime="20201112 09:54:11.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:11.250" endtime="20201112 09:54:11.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.253" endtime="20201112 09:54:11.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.228" endtime="20201112 09:54:11.256"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.226" endtime="20201112 09:54:11.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.263" endtime="20201112 09:54:11.549"></status>
</kw>
<msg timestamp="20201112 09:54:11.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021061083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021067236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:11.261" endtime="20201112 09:54:11.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021061083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021067236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:11.553" endtime="20201112 09:54:11.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.561" endtime="20201112 09:54:11.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.259" endtime="20201112 09:54:11.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.257" endtime="20201112 09:54:11.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:11.568" level="INFO">${RESULT} = [{'time': 0.021067236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.1529999999983265e-06, 'source_diff': 6.1529999999983265e-06}, {'time': 0.021078139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:11.564" endtime="20201112 09:54:11.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:11.582" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:11.569" endtime="20201112 09:54:11.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.587" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 09:54:11.586" endtime="20201112 09:54:11.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.589" level="INFO">VALUE: [6.1529999999983265e-06, 6.110999999999617e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.1529999999983265e-06, 6.167000000001366e-06, 6.0979999999995205e-06, 6.1389999999987566e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.152000000002322e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.153000000001796e-06, 6.097000000000047e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.097000000000047e-06, 6.1529999999983265e-06, 6.139000000002226e-06, 6.1529999999983265e-06, 6.111000000003086e-06, 6.167000000001366e-06, 6.1529999999983265e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.166999999997896e-06, 6.139000000002226e-06, 6.110999999999617e-06, 6.1389999999987566e-06, 6.137999999999283e-06, 6.124999999999187e-06, 6.165999999998423e-06, 6.151999999998853e-06, 6.139000000002226e-06, 6.139000000002226e-06, 6.167000000001366e-06, 6.139000000002226e-06, 6.125000000002656e-06, 6.1389999999987566e-06, 6.153000000001796e-06, 6.1529999999983265e-06, 6.167000000001366e-06, 6.1389999999987566e-06, 6.181000000000936e-06, 6.110999999999617e-06, 6.153000000001796e-06, 6.124999999999187e-06, 6.125000000002656e-06, 6.1529999999983265e-06]</msg>
<status status="PASS" starttime="20201112 09:54:11.588" endtime="20201112 09:54:11.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.583" endtime="20201112 09:54:11.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.593" endtime="20201112 09:54:11.594"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:11.596" endtime="20201112 09:54:11.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.595" endtime="20201112 09:54:11.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.591" endtime="20201112 09:54:11.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.225" endtime="20201112 09:54:11.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.224" endtime="20201112 09:54:11.617"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.626" endtime="20201112 09:54:11.645"></status>
</kw>
<msg timestamp="20201112 09:54:11.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:11.624" endtime="20201112 09:54:11.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:11.647" endtime="20201112 09:54:11.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.649" endtime="20201112 09:54:11.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.622" endtime="20201112 09:54:11.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.620" endtime="20201112 09:54:11.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.659" endtime="20201112 09:54:11.947"></status>
</kw>
<msg timestamp="20201112 09:54:11.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024757778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024763944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:11.658" endtime="20201112 09:54:11.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024757778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024763944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:11.951" endtime="20201112 09:54:11.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.960" endtime="20201112 09:54:11.961"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.655" endtime="20201112 09:54:11.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.653" endtime="20201112 09:54:11.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:11.966" level="INFO">${RESULT} = [{'time': 0.024763944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.165999999998423e-06, 'source_diff': 6.165999999998423e-06}, {'time': 0.024777014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:11.963" endtime="20201112 09:54:11.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:11.979" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:11.967" endtime="20201112 09:54:11.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.984" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 09:54:11.983" endtime="20201112 09:54:11.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.986" level="INFO">VALUE: [6.165999999998423e-06, 6.1529999999983265e-06, 6.1389999999987566e-06, 6.166999999997896e-06, 6.111000000003086e-06, 6.083000000000477e-06, 6.124999999999187e-06, 6.110999999999617e-06, 6.125000000002656e-06, 6.110999999999617e-06, 6.1529999999983265e-06, 6.124999999999187e-06, 6.151999999998853e-06, 6.153000000001796e-06, 6.124999999999187e-06, 6.153000000001796e-06, 6.097000000000047e-06, 6.167000000001366e-06, 6.195000000000506e-06, 6.139000000002226e-06, 6.166999999997896e-06, 6.097000000000047e-06, 6.153000000001796e-06, 6.139000000002226e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.125000000002656e-06, 6.1529999999983265e-06, 6.153000000001796e-06, 6.166999999997896e-06, 6.097000000000047e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.110999999999617e-06, 6.139000000002226e-06, 6.153000000001796e-06, 6.180000000001462e-06, 6.1529999999983265e-06, 6.167000000001366e-06, 6.137999999999283e-06, 6.124999999999187e-06, 6.110999999999617e-06, 6.125000000002656e-06, 6.2090000000000756e-06, 6.110999999999617e-06, 6.1389999999987566e-06, 6.1939999999975626e-06, 6.153000000001796e-06, 6.153000000001796e-06, 6.124999999999187e-06]</msg>
<status status="PASS" starttime="20201112 09:54:11.985" endtime="20201112 09:54:11.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.980" endtime="20201112 09:54:11.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.990" endtime="20201112 09:54:11.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:11.994" endtime="20201112 09:54:12.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.992" endtime="20201112 09:54:12.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.988" endtime="20201112 09:54:12.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.618" endtime="20201112 09:54:12.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.617" endtime="20201112 09:54:12.015"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.023" endtime="20201112 09:54:12.047"></status>
</kw>
<msg timestamp="20201112 09:54:12.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:12.022" endtime="20201112 09:54:12.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:12.048" endtime="20201112 09:54:12.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.051" endtime="20201112 09:54:12.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.019" endtime="20201112 09:54:12.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.017" endtime="20201112 09:54:12.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.061" endtime="20201112 09:54:12.345"></status>
</kw>
<msg timestamp="20201112 09:54:12.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024226833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024233014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:12.059" endtime="20201112 09:54:12.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024226833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024233014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:12.350" endtime="20201112 09:54:12.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.358" endtime="20201112 09:54:12.359"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.056" endtime="20201112 09:54:12.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.055" endtime="20201112 09:54:12.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:12.364" level="INFO">${RESULT} = [{'time': 0.024233014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.024249069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:12.361" endtime="20201112 09:54:12.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:12.378" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:12.365" endtime="20201112 09:54:12.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.382" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 09:54:12.381" endtime="20201112 09:54:12.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.385" level="INFO">VALUE: [6.181000000000936e-06, 6.138000000002752e-06, 6.181000000000936e-06, 6.152000000002322e-06, 6.222000000000172e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.110999999999617e-06, 6.0839999999999506e-06, 6.1389999999987566e-06, 6.151999999998853e-06, 6.181000000000936e-06, 6.1389999999987566e-06, 6.083000000000477e-06, 6.110999999999617e-06, 6.1529999999983265e-06, 6.1389999999987566e-06, 6.194000000001032e-06, 6.153000000001796e-06, 6.069000000000907e-06, 6.153000000001796e-06, 6.1529999999983265e-06, 6.0979999999995205e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.153000000001796e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.069000000000907e-06, 6.167000000001366e-06, 6.139000000002226e-06, 6.180999999997466e-06, 6.097000000000047e-06, 6.152000000002322e-06, 6.139000000002226e-06, 6.110999999999617e-06, 6.165999999998423e-06, 6.153000000001796e-06, 6.139000000002226e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.153000000001796e-06, 6.139000000002226e-06, 6.110999999999617e-06, 6.1389999999987566e-06, 6.153000000001796e-06, 6.153000000001796e-06]</msg>
<status status="PASS" starttime="20201112 09:54:12.383" endtime="20201112 09:54:12.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.379" endtime="20201112 09:54:12.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.388" endtime="20201112 09:54:12.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:12.392" endtime="20201112 09:54:12.411"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.390" endtime="20201112 09:54:12.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.387" endtime="20201112 09:54:12.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.016" endtime="20201112 09:54:12.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.015" endtime="20201112 09:54:12.413"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.421" endtime="20201112 09:54:12.438"></status>
</kw>
<msg timestamp="20201112 09:54:12.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:12.420" endtime="20201112 09:54:12.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:12.440" endtime="20201112 09:54:12.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.442" endtime="20201112 09:54:12.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.417" endtime="20201112 09:54:12.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.415" endtime="20201112 09:54:12.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.452" endtime="20201112 09:54:12.739"></status>
</kw>
<msg timestamp="20201112 09:54:12.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023143083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023149264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:12.451" endtime="20201112 09:54:12.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023143083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023149264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:12.743" endtime="20201112 09:54:12.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.751" endtime="20201112 09:54:12.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.448" endtime="20201112 09:54:12.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.447" endtime="20201112 09:54:12.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:12.758" level="INFO">${RESULT} = [{'time': 0.023149264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.023160278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:12.755" endtime="20201112 09:54:12.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:12.771" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:12.759" endtime="20201112 09:54:12.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.776" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 09:54:12.775" endtime="20201112 09:54:12.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.778" level="INFO">VALUE: [6.181000000000936e-06, 6.1529999999983265e-06, 6.0979999999995205e-06, 6.124999999999187e-06, 6.151999999998853e-06, 6.124999999999187e-06, 6.069000000000907e-06, 6.139000000002226e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.124999999999187e-06, 6.153000000001796e-06, 6.1529999999983265e-06, 6.153000000001796e-06, 6.056000000000811e-06, 6.139000000002226e-06, 6.167000000001366e-06, 6.124999999999187e-06, 6.153000000001796e-06, 6.1389999999987566e-06, 6.166000000001892e-06, 6.139000000002226e-06, 6.124999999999187e-06, 6.055000000001337e-06, 6.124999999999187e-06, 6.151999999998853e-06, 6.056000000000811e-06, 6.1389999999987566e-06, 6.137999999999283e-06, 6.1389999999987566e-06, 6.125000000002656e-06, 6.1389999999987566e-06, 6.1529999999983265e-06, 6.179999999997993e-06, 6.1529999999983265e-06, 6.208000000000602e-06, 6.1389999999987566e-06, 6.110999999999617e-06, 6.137999999999283e-06, 6.1389999999987566e-06, 6.125000000002656e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.1529999999983265e-06, 6.139000000002226e-06, 6.1389999999987566e-06, 6.180999999997466e-06, 6.1389999999987566e-06, 6.110999999999617e-06, 6.124999999999187e-06]</msg>
<status status="PASS" starttime="20201112 09:54:12.777" endtime="20201112 09:54:12.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.772" endtime="20201112 09:54:12.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.782" endtime="20201112 09:54:12.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:12.785" endtime="20201112 09:54:12.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.784" endtime="20201112 09:54:12.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.780" endtime="20201112 09:54:12.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.413" endtime="20201112 09:54:12.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.413" endtime="20201112 09:54:12.806"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.815" endtime="20201112 09:54:12.831"></status>
</kw>
<msg timestamp="20201112 09:54:12.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:12.813" endtime="20201112 09:54:12.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:12.833" endtime="20201112 09:54:12.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.835" endtime="20201112 09:54:12.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.811" endtime="20201112 09:54:12.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.809" endtime="20201112 09:54:12.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.845" endtime="20201112 09:54:13.131"></status>
</kw>
<msg timestamp="20201112 09:54:13.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021456, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021462139, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:12.843" endtime="20201112 09:54:13.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021456, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021462139, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:13.135" endtime="20201112 09:54:13.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.143" endtime="20201112 09:54:13.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.841" endtime="20201112 09:54:13.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.839" endtime="20201112 09:54:13.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:13.150" level="INFO">${RESULT} = [{'time': 0.021462139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.139000000002226e-06, 'source_diff': 6.139000000002226e-06}, {'time': 0.021473472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:13.147" endtime="20201112 09:54:13.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:13.165" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:13.151" endtime="20201112 09:54:13.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.169" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 09:54:13.168" endtime="20201112 09:54:13.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.171" level="INFO">VALUE: [6.139000000002226e-06, 6.153000000001796e-06, 6.152000000002322e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.180000000001462e-06, 6.1389999999987566e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.1529999999983265e-06, 6.2229999999996455e-06, 6.153000000001796e-06, 6.139000000002226e-06, 6.040999999998298e-06, 6.097000000000047e-06, 6.180000000001462e-06, 6.124999999999187e-06, 6.167000000001366e-06, 6.097000000000047e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.151999999998853e-06, 6.1529999999983265e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.1389999999987566e-06, 6.179999999997993e-06, 6.181000000000936e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.153000000001796e-06, 6.181000000000936e-06, 6.139000000002226e-06, 6.1389999999987566e-06, 6.151999999998853e-06, 6.1529999999983265e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.153000000001796e-06, 6.11199999999909e-06, 6.153000000001796e-06, 6.152000000002322e-06, 6.1389999999987566e-06, 6.151999999998853e-06, 6.179999999997993e-06, 6.153000000001796e-06]</msg>
<status status="PASS" starttime="20201112 09:54:13.170" endtime="20201112 09:54:13.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.165" endtime="20201112 09:54:13.173"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.175" endtime="20201112 09:54:13.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:13.178" endtime="20201112 09:54:13.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.177" endtime="20201112 09:54:13.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.173" endtime="20201112 09:54:13.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.807" endtime="20201112 09:54:13.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.806" endtime="20201112 09:54:13.199"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.208" endtime="20201112 09:54:13.223"></status>
</kw>
<msg timestamp="20201112 09:54:13.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:13.206" endtime="20201112 09:54:13.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:13.225" endtime="20201112 09:54:13.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.227" endtime="20201112 09:54:13.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.204" endtime="20201112 09:54:13.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.202" endtime="20201112 09:54:13.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.237" endtime="20201112 09:54:13.522"></status>
</kw>
<msg timestamp="20201112 09:54:13.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020111153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020117278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:13.236" endtime="20201112 09:54:13.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020111153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020117278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:13.527" endtime="20201112 09:54:13.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.535" endtime="20201112 09:54:13.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.233" endtime="20201112 09:54:13.537"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.231" endtime="20201112 09:54:13.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:13.541" level="INFO">${RESULT} = [{'time': 0.020117278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.124999999999187e-06, 'source_diff': 6.124999999999187e-06}, {'time': 0.020129958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:13.538" endtime="20201112 09:54:13.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:13.555" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:13.542" endtime="20201112 09:54:13.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.559" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 09:54:13.558" endtime="20201112 09:54:13.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.562" level="INFO">VALUE: [6.124999999999187e-06, 6.151999999998853e-06, 6.167000000001366e-06, 6.1389999999987566e-06, 6.152000000002322e-06, 6.194000000001032e-06, 6.1389999999987566e-06, 6.151999999998853e-06, 6.151999999998853e-06, 6.151999999998853e-06, 6.139000000002226e-06, 6.124999999999187e-06, 6.151999999998853e-06, 6.139000000002226e-06, 6.153000000001796e-06, 6.110999999999617e-06, 6.166999999997896e-06, 6.137999999999283e-06, 6.151999999998853e-06, 6.137999999999283e-06, 6.139000000002226e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.152000000002322e-06, 6.152000000002322e-06, 6.1389999999987566e-06, 6.125000000002656e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.11199999999909e-06, 6.166000000001892e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.153000000001796e-06, 6.1529999999983265e-06, 6.166999999997896e-06, 6.180000000001462e-06, 6.1389999999987566e-06, 6.137999999999283e-06, 6.1389999999987566e-06, 6.166999999997896e-06, 6.138000000002752e-06, 6.054999999997868e-06, 6.125000000002656e-06, 6.124999999999187e-06, 6.1529999999983265e-06, 6.11199999999909e-06, 6.124999999999187e-06, 6.124999999999187e-06]</msg>
<status status="PASS" starttime="20201112 09:54:13.560" endtime="20201112 09:54:13.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.556" endtime="20201112 09:54:13.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.565" endtime="20201112 09:54:13.567"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:13.569" endtime="20201112 09:54:13.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.567" endtime="20201112 09:54:13.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.564" endtime="20201112 09:54:13.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.200" endtime="20201112 09:54:13.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.200" endtime="20201112 09:54:13.590"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.598" endtime="20201112 09:54:13.614"></status>
</kw>
<msg timestamp="20201112 09:54:13.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:13.597" endtime="20201112 09:54:13.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:13.616" endtime="20201112 09:54:13.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.618" endtime="20201112 09:54:13.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.594" endtime="20201112 09:54:13.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.592" endtime="20201112 09:54:13.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.628" endtime="20201112 09:54:13.913"></status>
</kw>
<msg timestamp="20201112 09:54:13.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021792861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021799014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:13.627" endtime="20201112 09:54:13.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021792861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021799014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:13.917" endtime="20201112 09:54:13.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.926" endtime="20201112 09:54:13.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.624" endtime="20201112 09:54:13.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.622" endtime="20201112 09:54:13.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:13.932" level="INFO">${RESULT} = [{'time': 0.021799014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.1529999999983265e-06, 'source_diff': 6.1529999999983265e-06}, {'time': 0.021810653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:13.929" endtime="20201112 09:54:13.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:13.946" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:13.933" endtime="20201112 09:54:13.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.950" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 09:54:13.949" endtime="20201112 09:54:13.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.953" level="INFO">VALUE: [6.1529999999983265e-06, 6.166999999997896e-06, 6.110999999999617e-06, 6.165999999998423e-06, 6.180000000001462e-06, 6.166999999997896e-06, 6.166999999997896e-06, 6.151999999998853e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.153000000001796e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.2229999999996455e-06, 6.110999999999617e-06, 6.165999999998423e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.1529999999983265e-06, 6.125000000002656e-06, 6.153000000001796e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.167000000001366e-06, 6.110999999999617e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.152000000002322e-06, 6.151999999998853e-06, 6.166000000001892e-06, 6.124999999999187e-06, 6.1529999999983265e-06, 6.124999999999187e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.181000000000936e-06, 6.2079999999971325e-06, 6.153000000001796e-06, 6.153000000001796e-06, 6.151999999998853e-06, 6.11199999999909e-06, 6.125000000002656e-06, 6.167000000001366e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.139000000002226e-06, 6.124999999999187e-06]</msg>
<status status="PASS" starttime="20201112 09:54:13.951" endtime="20201112 09:54:13.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.946" endtime="20201112 09:54:13.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.956" endtime="20201112 09:54:13.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:13.960" endtime="20201112 09:54:13.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.958" endtime="20201112 09:54:13.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.955" endtime="20201112 09:54:13.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.590" endtime="20201112 09:54:13.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.590" endtime="20201112 09:54:13.981"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.989" endtime="20201112 09:54:14.007"></status>
</kw>
<msg timestamp="20201112 09:54:14.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:13.988" endtime="20201112 09:54:14.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.009" endtime="20201112 09:54:14.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.011" endtime="20201112 09:54:14.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.985" endtime="20201112 09:54:14.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.983" endtime="20201112 09:54:14.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.021" endtime="20201112 09:54:14.306"></status>
</kw>
<msg timestamp="20201112 09:54:14.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022671542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022697792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:14.020" endtime="20201112 09:54:14.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022671542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022697792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:14.310" endtime="20201112 09:54:14.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.319" endtime="20201112 09:54:14.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.017" endtime="20201112 09:54:14.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.016" endtime="20201112 09:54:14.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:14.325" level="INFO">${RESULT} = [{'time': 0.022697792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6250000000001966e-05, 'source_diff': 2.6250000000001966e-05}, {'time': 0.022729056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:14.322" endtime="20201112 09:54:14.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:14.339" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:14.326" endtime="20201112 09:54:14.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.343" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 09:54:14.342" endtime="20201112 09:54:14.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.346" level="INFO">VALUE: [2.6250000000001966e-05, 2.4334000000000855e-05, 1.9499999999998685e-05, 2.0444000000001405e-05, 2.24030000000007e-05, 2.5278000000000106e-05, 2.334699999999995e-05, 2.1514000000000255e-05, 2.144500000000188e-05, 2.041699999999827e-05, 2.5277999999996636e-05, 2.0458000000000975e-05, 2.1458000000001975e-05, 1.952699999999835e-05, 2.234700000000242e-05, 2.0430000000001836e-05, 2.5291999999999676e-05, 2.336100000000299e-05, 2.4277999999999106e-05, 2.234699999999895e-05, 2.5264000000000536e-05, 1.952699999999835e-05, 2.0527999999998825e-05, 2.338900000000213e-05, 2.5236000000001396e-05, 2.4334000000000855e-05, 2.336099999999952e-05, 2.047300000000002e-05, 2.3332999999996912e-05, 2.1443999999998936e-05, 1.9514000000001724e-05, 2.436099999999705e-05, 1.9513999999998255e-05, 2.14029999999997e-05, 2.431900000000181e-05, 2.1443999999998936e-05, 2.0444000000001405e-05, 2.430500000000224e-05, 2.241700000000027e-05, 1.859699999999867e-05, 2.231899999999981e-05, 2.5291999999999676e-05, 2.6207999999999787e-05, 2.236099999999852e-05, 2.5318999999999342e-05, 2.4319999999997816e-05, 1.9514000000001724e-05, 2.4292000000002145e-05, 1.9542000000000864e-05, 2.147300000000102e-05]</msg>
<status status="PASS" starttime="20201112 09:54:14.344" endtime="20201112 09:54:14.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.340" endtime="20201112 09:54:14.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.349" endtime="20201112 09:54:14.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:14.353" endtime="20201112 09:54:14.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.351" endtime="20201112 09:54:14.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.348" endtime="20201112 09:54:14.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.981" endtime="20201112 09:54:14.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.981" endtime="20201112 09:54:14.374"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.382" endtime="20201112 09:54:14.400"></status>
</kw>
<msg timestamp="20201112 09:54:14.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.381" endtime="20201112 09:54:14.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.402" endtime="20201112 09:54:14.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.404" endtime="20201112 09:54:14.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.378" endtime="20201112 09:54:14.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.376" endtime="20201112 09:54:14.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.414" endtime="20201112 09:54:14.700"></status>
</kw>
<msg timestamp="20201112 09:54:14.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021479458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021514264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:14.413" endtime="20201112 09:54:14.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021479458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021514264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:14.704" endtime="20201112 09:54:14.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.712" endtime="20201112 09:54:14.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.410" endtime="20201112 09:54:14.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.408" endtime="20201112 09:54:14.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:14.719" level="INFO">${RESULT} = [{'time': 0.021514264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.480600000000181e-05, 'source_diff': 3.480600000000181e-05}, {'time': 0.02154425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:14.716" endtime="20201112 09:54:14.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:14.733" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:14.720" endtime="20201112 09:54:14.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.738" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 09:54:14.737" endtime="20201112 09:54:14.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.740" level="INFO">VALUE: [3.480600000000181e-05, 2.0528000000002294e-05, 2.1486000000001115e-05, 2.336099999999952e-05, 2.0513999999999255e-05, 2.520900000000173e-05, 2.0457999999997506e-05, 2.241700000000027e-05, 2.1457999999998506e-05, 2.4249999999999966e-05, 2.045900000000045e-05, 2.4348000000000425e-05, 2.0472000000000545e-05, 2.336100000000299e-05, 2.2430000000000366e-05, 2.2430000000000366e-05, 2.2429999999996897e-05, 2.238899999999766e-05, 2.1429999999999366e-05, 1.955500000000096e-05, 2.340299999999823e-05, 2.237499999999809e-05, 2.331900000000081e-05, 2.045900000000045e-05, 2.4277999999999106e-05, 2.434700000000095e-05, 2.141699999999927e-05, 2.3249999999998966e-05, 2.42230000000003e-05, 2.5305999999999246e-05, 2.1458000000001975e-05, 2.1443999999998936e-05, 2.1472000000001545e-05, 2.337500000000256e-05, 2.4318999999998342e-05, 1.9513999999998255e-05, 1.952699999999835e-05, 2.434700000000095e-05, 2.3306000000000715e-05, 2.4304999999998772e-05, 2.5249999999997497e-05, 2.137500000000056e-05, 2.437500000000009e-05, 2.5291000000000202e-05, 2.336099999999952e-05, 2.5250000000000966e-05, 2.338900000000213e-05, 1.9556000000000434e-05, 2.2443999999999936e-05, 2.437500000000009e-05]</msg>
<status status="PASS" starttime="20201112 09:54:14.739" endtime="20201112 09:54:14.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.734" endtime="20201112 09:54:14.742"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.744" endtime="20201112 09:54:14.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:14.747" endtime="20201112 09:54:14.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.746" endtime="20201112 09:54:14.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.742" endtime="20201112 09:54:14.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.375" endtime="20201112 09:54:14.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.374" endtime="20201112 09:54:14.768"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.777" endtime="20201112 09:54:14.796"></status>
</kw>
<msg timestamp="20201112 09:54:14.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.775" endtime="20201112 09:54:14.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.797" endtime="20201112 09:54:14.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.800" endtime="20201112 09:54:14.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.773" endtime="20201112 09:54:14.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.771" endtime="20201112 09:54:14.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.810" endtime="20201112 09:54:15.096"></status>
</kw>
<msg timestamp="20201112 09:54:15.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023785667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023808972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:14.808" endtime="20201112 09:54:15.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023785667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023808972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:15.100" endtime="20201112 09:54:15.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.108" endtime="20201112 09:54:15.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.806" endtime="20201112 09:54:15.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.804" endtime="20201112 09:54:15.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:15.115" level="INFO">${RESULT} = [{'time': 0.023808972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.330500000000124e-05, 'source_diff': 2.330500000000124e-05}, {'time': 0.023839917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:15.111" endtime="20201112 09:54:15.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:15.128" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:15.116" endtime="20201112 09:54:15.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.132" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 09:54:15.131" endtime="20201112 09:54:15.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.135" level="INFO">VALUE: [2.330500000000124e-05, 2.5249999999997497e-05, 2.2416000000000796e-05, 2.2430000000000366e-05, 2.5291999999999676e-05, 2.6263999999998067e-05, 2.143099999999884e-05, 2.236099999999852e-05, 2.056899999999806e-05, 2.4361999999999995e-05, 2.241700000000027e-05, 2.1486000000001115e-05, 2.0513999999999255e-05, 1.866699999999999e-05, 2.3318999999997342e-05, 2.52369999999974e-05, 2.138900000000013e-05, 2.5291000000000202e-05, 2.4346999999997482e-05, 2.5291999999999676e-05, 2.1443999999998936e-05, 2.0513999999999255e-05, 2.5250000000000966e-05, 2.0443999999997936e-05, 2.1472000000001545e-05, 1.955500000000096e-05, 2.334699999999995e-05, 2.4334000000000855e-05, 1.9541999999997395e-05, 1.9485999999999115e-05, 2.5264000000000536e-05, 2.0513999999999255e-05, 2.520900000000173e-05, 2.1388000000000656e-05, 2.431900000000181e-05, 2.336099999999952e-05, 2.0528000000002294e-05, 1.9528000000001294e-05, 2.4278000000002575e-05, 2.0472000000000545e-05, 2.243099999999984e-05, 1.9528000000001294e-05, 2.5264000000000536e-05, 2.1486000000001115e-05, 2.6124999999998372e-05, 2.331900000000081e-05, 1.959699999999967e-05, 2.051299999999978e-05, 2.4291999999998676e-05, 1.9443999999996936e-05]</msg>
<status status="PASS" starttime="20201112 09:54:15.133" endtime="20201112 09:54:15.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.129" endtime="20201112 09:54:15.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.138" endtime="20201112 09:54:15.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:15.142" endtime="20201112 09:54:15.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.140" endtime="20201112 09:54:15.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.137" endtime="20201112 09:54:15.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.769" endtime="20201112 09:54:15.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.769" endtime="20201112 09:54:15.163"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.171" endtime="20201112 09:54:15.190"></status>
</kw>
<msg timestamp="20201112 09:54:15.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.170" endtime="20201112 09:54:15.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.192" endtime="20201112 09:54:15.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.194" endtime="20201112 09:54:15.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.167" endtime="20201112 09:54:15.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.165" endtime="20201112 09:54:15.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.204" endtime="20201112 09:54:15.491"></status>
</kw>
<msg timestamp="20201112 09:54:15.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021129514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021160417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:15.203" endtime="20201112 09:54:15.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021129514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021160417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:15.495" endtime="20201112 09:54:15.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.503" endtime="20201112 09:54:15.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.200" endtime="20201112 09:54:15.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.198" endtime="20201112 09:54:15.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:15.510" level="INFO">${RESULT} = [{'time': 0.021160417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.090300000000226e-05, 'source_diff': 3.090300000000226e-05}, {'time': 0.021190444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:15.506" endtime="20201112 09:54:15.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:15.523" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:15.511" endtime="20201112 09:54:15.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.528" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 09:54:15.527" endtime="20201112 09:54:15.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.530" level="INFO">VALUE: [3.090300000000226e-05, 2.5262999999997593e-05, 2.430500000000224e-05, 2.0527999999998825e-05, 1.956900000000053e-05, 2.336099999999952e-05, 2.236099999999852e-05, 2.5264000000000536e-05, 2.337500000000256e-05, 2.5249999999997497e-05, 2.4348000000000425e-05, 2.137499999999709e-05, 2.134699999999795e-05, 2.051300000000325e-05, 2.5277000000000632e-05, 2.1457999999998506e-05, 1.9527999999997825e-05, 2.238899999999766e-05, 2.5264000000000536e-05, 1.955500000000096e-05, 2.5304999999999772e-05, 2.3306000000000715e-05, 2.4221999999997357e-05, 2.1472000000001545e-05, 2.4332999999997912e-05, 2.4291999999998676e-05, 2.1415999999999796e-05, 2.5264000000000536e-05, 2.0486000000000115e-05, 2.144500000000188e-05, 1.9542000000000864e-05, 1.947299999999902e-05, 2.331900000000081e-05, 2.2416000000000796e-05, 2.241700000000027e-05, 2.1443999999998936e-05, 2.4291999999998676e-05, 2.1443999999998936e-05, 2.338900000000213e-05, 2.236100000000199e-05, 2.0486000000000115e-05, 2.5236000000001396e-05, 2.3306000000000715e-05, 2.0486000000000115e-05, 2.5305999999999246e-05, 2.4277999999999106e-05, 2.24030000000007e-05, 2.336099999999952e-05, 2.0444000000001405e-05, 2.3361999999998995e-05]</msg>
<status status="PASS" starttime="20201112 09:54:15.529" endtime="20201112 09:54:15.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.524" endtime="20201112 09:54:15.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.534" endtime="20201112 09:54:15.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:15.537" endtime="20201112 09:54:15.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.535" endtime="20201112 09:54:15.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.532" endtime="20201112 09:54:15.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.164" endtime="20201112 09:54:15.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.163" endtime="20201112 09:54:15.558"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.566" endtime="20201112 09:54:15.584"></status>
</kw>
<msg timestamp="20201112 09:54:15.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.565" endtime="20201112 09:54:15.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.585" endtime="20201112 09:54:15.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.588" endtime="20201112 09:54:15.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.562" endtime="20201112 09:54:15.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.560" endtime="20201112 09:54:15.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.598" endtime="20201112 09:54:15.883"></status>
</kw>
<msg timestamp="20201112 09:54:15.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022860611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022875361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:15.596" endtime="20201112 09:54:15.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022860611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022875361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:15.887" endtime="20201112 09:54:15.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.896" endtime="20201112 09:54:15.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.594" endtime="20201112 09:54:15.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.592" endtime="20201112 09:54:15.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:15.902" level="INFO">${RESULT} = [{'time': 0.022875361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4750000000000874e-05, 'source_diff': 1.4750000000000874e-05}, {'time': 0.022905347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:15.899" endtime="20201112 09:54:15.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:15.916" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:15.903" endtime="20201112 09:54:15.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.920" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 09:54:15.919" endtime="20201112 09:54:15.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.923" level="INFO">VALUE: [1.4750000000000874e-05, 2.0429999999998366e-05, 2.4277999999999106e-05, 2.2401999999997757e-05, 2.0458000000000975e-05, 2.433300000000138e-05, 2.056899999999806e-05, 2.3304999999997772e-05, 1.9499999999998685e-05, 2.0486000000000115e-05, 2.0513999999999255e-05, 2.5277000000000632e-05, 2.047300000000002e-05, 2.0513999999999255e-05, 2.0528000000002294e-05, 2.431900000000181e-05, 2.337499999999909e-05, 2.4249999999999966e-05, 2.4249999999999966e-05, 2.243099999999984e-05, 2.620899999999926e-05, 1.8541999999999864e-05, 2.616700000000055e-05, 1.9556000000000434e-05, 2.5249999999997497e-05, 1.9485999999999115e-05, 2.0513999999999255e-05, 2.3249999999998966e-05, 2.0472000000000545e-05, 2.144500000000188e-05, 2.6249999999998497e-05, 1.9472000000003015e-05, 1.9499999999998685e-05, 2.5319999999998816e-05, 2.0444000000001405e-05, 2.5264000000000536e-05, 2.5249999999997497e-05, 2.24030000000007e-05, 2.6235999999998927e-05, 2.341700000000127e-05, 2.244500000000288e-05, 2.044500000000088e-05, 2.5249999999997497e-05, 2.5291999999999676e-05, 2.4305999999998246e-05, 2.4348000000000425e-05, 2.5305999999999246e-05, 2.0472000000000545e-05, 2.0499999999999685e-05, 2.34030000000017e-05]</msg>
<status status="PASS" starttime="20201112 09:54:15.922" endtime="20201112 09:54:15.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.917" endtime="20201112 09:54:15.925"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.927" endtime="20201112 09:54:15.929"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:15.931" endtime="20201112 09:54:15.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.929" endtime="20201112 09:54:15.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.925" endtime="20201112 09:54:15.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.559" endtime="20201112 09:54:15.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.558" endtime="20201112 09:54:15.952"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.961" endtime="20201112 09:54:15.977"></status>
</kw>
<msg timestamp="20201112 09:54:15.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.959" endtime="20201112 09:54:15.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.978" endtime="20201112 09:54:15.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.981" endtime="20201112 09:54:15.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.957" endtime="20201112 09:54:15.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.954" endtime="20201112 09:54:15.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.991" endtime="20201112 09:54:16.277"></status>
</kw>
<msg timestamp="20201112 09:54:16.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020624542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020653639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:15.989" endtime="20201112 09:54:16.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020624542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020653639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:16.281" endtime="20201112 09:54:16.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.289" endtime="20201112 09:54:16.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.987" endtime="20201112 09:54:16.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.985" endtime="20201112 09:54:16.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:16.296" level="INFO">${RESULT} = [{'time': 0.020653639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9097000000002232e-05, 'source_diff': 2.9097000000002232e-05}, {'time': 0.020683375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:16.292" endtime="20201112 09:54:16.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:16.310" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:16.297" endtime="20201112 09:54:16.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.314" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 09:54:16.313" endtime="20201112 09:54:16.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.317" level="INFO">VALUE: [2.9097000000002232e-05, 2.234699999999895e-05, 2.2361999999997995e-05, 2.5278000000000106e-05, 2.5291999999999676e-05, 2.337499999999909e-05, 1.9499999999998685e-05, 2.0486000000000115e-05, 2.24030000000007e-05, 2.5264000000000536e-05, 2.4290999999999202e-05, 2.438899999999966e-05, 2.1458000000001975e-05, 2.431900000000181e-05, 2.5305999999999246e-05, 2.338900000000213e-05, 2.144500000000188e-05, 2.0472000000000545e-05, 2.4277999999999106e-05, 2.237500000000156e-05, 2.241700000000027e-05, 2.1444000000002406e-05, 2.3320000000000285e-05, 2.0500000000003155e-05, 2.24030000000007e-05, 2.145900000000145e-05, 1.9541999999997395e-05, 1.9485999999999115e-05, 2.141699999999927e-05, 2.4332999999997912e-05, 2.4318999999998342e-05, 2.134700000000142e-05, 2.5236000000001396e-05, 2.048699999999959e-05, 2.434700000000095e-05, 2.1472000000001545e-05, 2.5263999999997067e-05, 2.143100000000231e-05, 2.0500000000003155e-05, 2.3320000000000285e-05, 2.4305999999998246e-05, 2.147299999999755e-05, 2.1443999999998936e-05, 2.336099999999952e-05, 2.4334000000000855e-05, 2.3277999999998106e-05, 1.9514000000001724e-05, 2.336100000000299e-05, 2.4305999999998246e-05, 2.6222000000002826e-05]</msg>
<status status="PASS" starttime="20201112 09:54:16.316" endtime="20201112 09:54:16.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.311" endtime="20201112 09:54:16.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.325" endtime="20201112 09:54:16.326"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:16.329" endtime="20201112 09:54:16.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.327" endtime="20201112 09:54:16.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.323" endtime="20201112 09:54:16.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.953" endtime="20201112 09:54:16.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.952" endtime="20201112 09:54:16.349"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.358" endtime="20201112 09:54:16.377"></status>
</kw>
<msg timestamp="20201112 09:54:16.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:16.356" endtime="20201112 09:54:16.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:16.379" endtime="20201112 09:54:16.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.381" endtime="20201112 09:54:16.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.354" endtime="20201112 09:54:16.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.352" endtime="20201112 09:54:16.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.391" endtime="20201112 09:54:16.676"></status>
</kw>
<msg timestamp="20201112 09:54:16.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020060361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020078903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:16.389" endtime="20201112 09:54:16.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020060361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020078903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:16.680" endtime="20201112 09:54:16.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.688" endtime="20201112 09:54:16.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.387" endtime="20201112 09:54:16.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.385" endtime="20201112 09:54:16.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:16.695" level="INFO">${RESULT} = [{'time': 0.020078903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8541999999999864e-05, 'source_diff': 1.8541999999999864e-05}, {'time': 0.020109875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:16.692" endtime="20201112 09:54:16.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:16.708" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:16.696" endtime="20201112 09:54:16.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.713" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 09:54:16.712" endtime="20201112 09:54:16.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.715" level="INFO">VALUE: [1.8541999999999864e-05, 2.5278000000000106e-05, 2.4332999999997912e-05, 2.5264000000000536e-05, 2.0514000000002724e-05, 2.145900000000145e-05, 2.1443999999998936e-05, 2.2443999999999936e-05, 2.2347999999998425e-05, 2.043099999999784e-05, 2.0499999999999685e-05, 2.0486000000000115e-05, 2.336100000000299e-05, 2.1500000000000685e-05, 2.4277999999999106e-05, 2.0457999999997506e-05, 2.3305999999997246e-05, 2.4278000000002575e-05, 2.331900000000081e-05, 2.5291999999999676e-05, 1.954100000000139e-05, 2.138900000000013e-05, 2.141699999999927e-05, 2.3304999999997772e-05, 2.0471999999997076e-05, 2.5250000000000966e-05, 2.4291999999998676e-05, 2.24030000000007e-05, 2.5264000000000536e-05, 2.5250000000000966e-05, 2.141699999999927e-05, 2.4292000000002145e-05, 2.0527999999998825e-05, 2.043100000000131e-05, 2.5250000000000966e-05, 2.0514000000002724e-05, 2.433300000000138e-05, 2.4318999999998342e-05, 2.1443999999998936e-05, 2.331900000000081e-05, 1.9457999999999975e-05, 1.9527999999997825e-05, 2.4346999999997482e-05, 2.5264000000000536e-05, 2.138900000000013e-05, 1.955500000000096e-05, 2.14029999999997e-05, 2.1429999999999366e-05, 2.430500000000224e-05, 1.952699999999835e-05]</msg>
<status status="PASS" starttime="20201112 09:54:16.714" endtime="20201112 09:54:16.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.709" endtime="20201112 09:54:16.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.719" endtime="20201112 09:54:16.720"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:16.722" endtime="20201112 09:54:16.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.721" endtime="20201112 09:54:16.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.717" endtime="20201112 09:54:16.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.350" endtime="20201112 09:54:16.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.350" endtime="20201112 09:54:16.743"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.752" endtime="20201112 09:54:16.770"></status>
</kw>
<msg timestamp="20201112 09:54:16.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:16.750" endtime="20201112 09:54:16.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:16.771" endtime="20201112 09:54:16.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.774" endtime="20201112 09:54:16.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.748" endtime="20201112 09:54:16.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.746" endtime="20201112 09:54:16.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.784" endtime="20201112 09:54:17.071"></status>
</kw>
<msg timestamp="20201112 09:54:17.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023121639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023136431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:16.782" endtime="20201112 09:54:17.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023121639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023136431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:17.076" endtime="20201112 09:54:17.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.084" endtime="20201112 09:54:17.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.780" endtime="20201112 09:54:17.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.778" endtime="20201112 09:54:17.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:17.091" level="INFO">${RESULT} = [{'time': 0.023136431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4791999999999583e-05, 'source_diff': 1.4791999999999583e-05}, {'time': 0.023167056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:17.087" endtime="20201112 09:54:17.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:17.104" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:17.092" endtime="20201112 09:54:17.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.109" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 09:54:17.107" endtime="20201112 09:54:17.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.111" level="INFO">VALUE: [1.4791999999999583e-05, 2.3333999999999855e-05, 2.24169999999968e-05, 1.9555999999996965e-05, 2.4277999999999106e-05, 1.9499999999998685e-05, 2.243099999999984e-05, 1.9487000000002058e-05, 2.5277000000000632e-05, 1.9528000000001294e-05, 2.431900000000181e-05, 2.1457999999998506e-05, 2.331900000000081e-05, 1.9499999999998685e-05, 2.52230000000013e-05, 2.2430000000000366e-05, 1.952700000000182e-05, 1.954100000000139e-05, 2.0541999999998395e-05, 2.336100000000299e-05, 2.6235999999998927e-05, 2.5291000000000202e-05, 2.333300000000038e-05, 2.141699999999927e-05, 2.1471999999998076e-05, 2.2415999999997327e-05, 1.9542000000000864e-05, 2.048699999999959e-05, 2.4290999999999202e-05, 2.0472000000000545e-05, 2.5263999999997067e-05, 2.336099999999952e-05, 1.9528000000001294e-05, 2.1472000000001545e-05, 2.3306000000000715e-05, 2.6221999999999357e-05, 2.0472000000000545e-05, 2.4277999999999106e-05, 1.9556000000000434e-05, 2.4332999999997912e-05, 2.4318999999998342e-05, 2.337500000000256e-05, 2.243099999999984e-05, 1.9556000000000434e-05, 2.2457999999999506e-05, 2.4292000000002145e-05, 2.34030000000017e-05, 2.4290999999999202e-05, 2.4304999999998772e-05, 1.952699999999835e-05]</msg>
<status status="PASS" starttime="20201112 09:54:17.110" endtime="20201112 09:54:17.112"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.105" endtime="20201112 09:54:17.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.115" endtime="20201112 09:54:17.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:17.118" endtime="20201112 09:54:17.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.117" endtime="20201112 09:54:17.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.113" endtime="20201112 09:54:17.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.744" endtime="20201112 09:54:17.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.744" endtime="20201112 09:54:17.139"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.148" endtime="20201112 09:54:17.167"></status>
</kw>
<msg timestamp="20201112 09:54:17.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.146" endtime="20201112 09:54:17.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.168" endtime="20201112 09:54:17.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.171" endtime="20201112 09:54:17.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.143" endtime="20201112 09:54:17.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.141" endtime="20201112 09:54:17.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.181" endtime="20201112 09:54:17.465"></status>
</kw>
<msg timestamp="20201112 09:54:17.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024335847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024363056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:17.179" endtime="20201112 09:54:17.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024335847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024363056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:17.469" endtime="20201112 09:54:17.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.477" endtime="20201112 09:54:17.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.177" endtime="20201112 09:54:17.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.175" endtime="20201112 09:54:17.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:17.484" level="INFO">${RESULT} = [{'time': 0.024363056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.720900000000026e-05, 'source_diff': 2.720900000000026e-05}, {'time': 0.024394097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:17.481" endtime="20201112 09:54:17.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:17.497" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:17.485" endtime="20201112 09:54:17.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.502" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 09:54:17.501" endtime="20201112 09:54:17.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.504" level="INFO">VALUE: [2.720900000000026e-05, 2.336099999999952e-05, 2.433300000000138e-05, 2.334699999999995e-05, 2.141699999999927e-05, 2.333300000000038e-05, 1.9542000000000864e-05, 1.9514000000001724e-05, 2.236100000000199e-05, 2.3320000000000285e-05, 2.4320000000001285e-05, 2.336099999999952e-05, 2.234700000000242e-05, 2.141699999999927e-05, 2.4334000000000855e-05, 2.433300000000138e-05, 2.2443999999999936e-05, 2.3333999999999855e-05, 2.14029999999997e-05, 2.1500000000000685e-05, 2.1444000000002406e-05, 2.1443999999998936e-05, 2.5250000000000966e-05, 2.144500000000188e-05, 1.9500000000002154e-05, 2.048699999999959e-05, 1.962499999999881e-05, 1.9514000000001724e-05, 2.0513999999999255e-05, 2.0472000000000545e-05, 2.1429999999999366e-05, 2.5236000000001396e-05, 2.434700000000095e-05, 2.331900000000081e-05, 2.620899999999926e-05, 2.047300000000002e-05, 2.438899999999966e-05, 2.145900000000145e-05, 2.5235999999997927e-05, 2.0499999999999685e-05, 2.152700000000035e-05, 2.2443999999999936e-05, 1.9485999999999115e-05, 2.0499999999999685e-05, 2.4264000000003005e-05, 2.0444000000001405e-05, 2.047300000000002e-05, 2.618100000000012e-05, 2.5278000000000106e-05, 2.4347999999996955e-05]</msg>
<status status="PASS" starttime="20201112 09:54:17.503" endtime="20201112 09:54:17.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.498" endtime="20201112 09:54:17.506"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.508" endtime="20201112 09:54:17.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:17.511" endtime="20201112 09:54:17.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.510" endtime="20201112 09:54:17.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.506" endtime="20201112 09:54:17.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.140" endtime="20201112 09:54:17.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.139" endtime="20201112 09:54:17.532"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.541" endtime="20201112 09:54:17.563"></status>
</kw>
<msg timestamp="20201112 09:54:17.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.539" endtime="20201112 09:54:17.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.564" endtime="20201112 09:54:17.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.567" endtime="20201112 09:54:17.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.537" endtime="20201112 09:54:17.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.535" endtime="20201112 09:54:17.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.577" endtime="20201112 09:54:17.862"></status>
</kw>
<msg timestamp="20201112 09:54:17.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022959611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022965722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:17.575" endtime="20201112 09:54:17.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022959611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022965722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:17.867" endtime="20201112 09:54:17.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.875" endtime="20201112 09:54:17.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.573" endtime="20201112 09:54:17.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.571" endtime="20201112 09:54:17.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:17.882" level="INFO">${RESULT} = [{'time': 0.022965722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.022996639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:17.879" endtime="20201112 09:54:17.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:17.896" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:17.883" endtime="20201112 09:54:17.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.901" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 09:54:17.900" endtime="20201112 09:54:17.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.903" level="INFO">VALUE: [6.110999999999617e-06, 2.24030000000007e-05, 2.4291999999998676e-05, 2.4263999999999536e-05, 2.047300000000002e-05, 2.237500000000156e-05, 2.0486000000000115e-05, 2.434700000000095e-05, 2.5278000000000106e-05, 2.333300000000038e-05, 2.4249999999999966e-05, 2.5305999999999246e-05, 1.9555999999996965e-05, 1.9499999999998685e-05, 2.434700000000095e-05, 2.337499999999909e-05, 2.052699999999935e-05, 2.0542000000001864e-05, 2.4320000000001285e-05, 2.231899999999981e-05, 2.333300000000038e-05, 2.24030000000007e-05, 2.147300000000102e-05, 2.338900000000213e-05, 2.24030000000007e-05, 2.241700000000027e-05, 2.143100000000231e-05, 2.236099999999852e-05, 1.952699999999835e-05, 2.4305999999998246e-05, 2.5249999999997497e-05, 2.143099999999884e-05, 2.5291000000000202e-05, 2.2429999999996897e-05, 2.145899999999798e-05, 1.9542000000000864e-05, 2.143099999999884e-05, 2.5278000000000106e-05, 2.338900000000213e-05, 2.5262999999997593e-05, 2.0513999999999255e-05, 2.4334000000000855e-05, 2.4320000000001285e-05, 2.143099999999884e-05, 1.9499999999998685e-05, 1.9514000000001724e-05, 2.5291000000000202e-05, 2.6278000000001106e-05, 2.0527999999998825e-05, 2.2416000000000796e-05]</msg>
<status status="PASS" starttime="20201112 09:54:17.902" endtime="20201112 09:54:17.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.897" endtime="20201112 09:54:17.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.907" endtime="20201112 09:54:17.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:17.910" endtime="20201112 09:54:17.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.909" endtime="20201112 09:54:17.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.905" endtime="20201112 09:54:17.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.533" endtime="20201112 09:54:17.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.533" endtime="20201112 09:54:17.931"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.940" endtime="20201112 09:54:17.956"></status>
</kw>
<msg timestamp="20201112 09:54:17.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.938" endtime="20201112 09:54:17.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.958" endtime="20201112 09:54:17.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.961" endtime="20201112 09:54:17.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.936" endtime="20201112 09:54:17.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.933" endtime="20201112 09:54:17.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.971" endtime="20201112 09:54:18.256"></status>
</kw>
<msg timestamp="20201112 09:54:18.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021008444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021018403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:17.969" endtime="20201112 09:54:18.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021008444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021018403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:18.261" endtime="20201112 09:54:18.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.269" endtime="20201112 09:54:18.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.967" endtime="20201112 09:54:18.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.965" endtime="20201112 09:54:18.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:18.276" level="INFO">${RESULT} = [{'time': 0.021018403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.959000000000356e-06, 'source_diff': 9.959000000000356e-06}, {'time': 0.021049181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:18.272" endtime="20201112 09:54:18.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:18.289" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:18.277" endtime="20201112 09:54:18.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.293" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 09:54:18.292" endtime="20201112 09:54:18.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.296" level="INFO">VALUE: [9.959000000000356e-06, 2.0513999999999255e-05, 2.244499999999941e-05, 2.5291999999999676e-05, 2.1458000000001975e-05, 1.955500000000096e-05, 2.340299999999823e-05, 2.5276999999997163e-05, 1.952700000000182e-05, 1.951300000000225e-05, 2.433300000000138e-05, 1.9528000000001294e-05, 2.6236000000002396e-05, 2.2430000000000366e-05, 2.3347999999999425e-05, 2.237500000000156e-05, 2.4334000000000855e-05, 2.0513999999999255e-05, 2.0513999999999255e-05, 2.0542000000001864e-05, 2.6332999999999912e-05, 2.14029999999997e-05, 2.4306000000001715e-05, 1.956899999999706e-05, 2.336099999999952e-05, 2.436100000000052e-05, 2.5360999999998052e-05, 2.333300000000038e-05, 1.9542000000000864e-05, 2.0499999999999685e-05, 2.434700000000095e-05, 2.5250000000000966e-05, 2.52369999999974e-05, 2.5264000000000536e-05, 1.9542000000000864e-05, 2.6263999999998067e-05, 1.954099999999792e-05, 2.5276999999997163e-05, 2.1471999999998076e-05, 2.244499999999941e-05, 2.138900000000013e-05, 2.4332999999997912e-05, 2.041700000000174e-05, 2.5263000000001062e-05, 2.241700000000027e-05, 2.34030000000017e-05, 2.336099999999952e-05, 2.438899999999966e-05, 1.9486000000002585e-05, 2.0499999999999685e-05]</msg>
<status status="PASS" starttime="20201112 09:54:18.295" endtime="20201112 09:54:18.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.290" endtime="20201112 09:54:18.297"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.300" endtime="20201112 09:54:18.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:18.303" endtime="20201112 09:54:18.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.301" endtime="20201112 09:54:18.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.298" endtime="20201112 09:54:18.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.932" endtime="20201112 09:54:18.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.931" endtime="20201112 09:54:18.324"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.332" endtime="20201112 09:54:18.348"></status>
</kw>
<msg timestamp="20201112 09:54:18.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.331" endtime="20201112 09:54:18.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.349" endtime="20201112 09:54:18.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.352" endtime="20201112 09:54:18.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.328" endtime="20201112 09:54:18.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.326" endtime="20201112 09:54:18.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.362" endtime="20201112 09:54:18.647"></status>
</kw>
<msg timestamp="20201112 09:54:18.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020108889, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:18.360" endtime="20201112 09:54:18.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020108889, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:18.651" endtime="20201112 09:54:18.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.660" endtime="20201112 09:54:18.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.358" endtime="20201112 09:54:18.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.356" endtime="20201112 09:54:18.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:18.667" level="INFO">${RESULT} = [{'time': 0.020108889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1889000000001038e-05, 'source_diff': 1.1889000000001038e-05}, {'time': 0.020139514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:18.663" endtime="20201112 09:54:18.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:18.680" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:18.668" endtime="20201112 09:54:18.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.684" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 09:54:18.683" endtime="20201112 09:54:18.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.687" level="INFO">VALUE: [1.1889000000001038e-05, 2.0472000000000545e-05, 2.4277999999999106e-05, 2.5222000000001826e-05, 2.243099999999984e-05, 2.0486000000000115e-05, 2.5179999999999647e-05, 2.04029999999987e-05, 1.9527999999997825e-05, 2.238900000000113e-05, 2.145900000000145e-05, 2.337499999999909e-05, 2.24030000000007e-05, 2.0416000000002266e-05, 2.4304999999998772e-05, 1.9542000000000864e-05, 2.14029999999997e-05, 2.141699999999927e-05, 2.5222000000001826e-05, 2.137500000000056e-05, 2.4291999999998676e-05, 2.241700000000027e-05, 1.9556000000000434e-05, 2.0486000000000115e-05, 2.048699999999959e-05, 2.433300000000138e-05, 1.9528000000001294e-05, 2.515299999999998e-05, 2.141699999999927e-05, 2.6264000000001536e-05, 1.952699999999835e-05, 2.5278000000000106e-05, 2.0416000000002266e-05, 2.329100000000167e-05, 2.5250000000000966e-05, 2.0499999999999685e-05, 2.0486000000000115e-05, 2.337499999999909e-05, 2.4318999999998342e-05, 2.6207999999999787e-05, 2.4291999999998676e-05, 2.430500000000224e-05, 2.144499999999841e-05, 2.3319999999996815e-05, 2.4346999999997482e-05, 2.1444000000002406e-05, 2.431900000000181e-05, 2.4277999999999106e-05, 2.0472000000000545e-05, 2.5278000000000106e-05]</msg>
<status status="PASS" starttime="20201112 09:54:18.685" endtime="20201112 09:54:18.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.681" endtime="20201112 09:54:18.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.690" endtime="20201112 09:54:18.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:18.694" endtime="20201112 09:54:18.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.692" endtime="20201112 09:54:18.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.689" endtime="20201112 09:54:18.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.325" endtime="20201112 09:54:18.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.324" endtime="20201112 09:54:18.715"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.723" endtime="20201112 09:54:18.740"></status>
</kw>
<msg timestamp="20201112 09:54:18.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.722" endtime="20201112 09:54:18.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.741" endtime="20201112 09:54:18.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.744" endtime="20201112 09:54:18.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.719" endtime="20201112 09:54:18.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.717" endtime="20201112 09:54:18.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.754" endtime="20201112 09:54:19.041"></status>
</kw>
<msg timestamp="20201112 09:54:19.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021122611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021153653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:18.752" endtime="20201112 09:54:19.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021122611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021153653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:19.045" endtime="20201112 09:54:19.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.053" endtime="20201112 09:54:19.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.750" endtime="20201112 09:54:19.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.748" endtime="20201112 09:54:19.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:19.060" level="INFO">${RESULT} = [{'time': 0.021153653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.104200000000196e-05, 'source_diff': 3.104200000000196e-05}, {'time': 0.021184236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:19.056" endtime="20201112 09:54:19.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:19.073" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:19.061" endtime="20201112 09:54:19.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.078" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 09:54:19.077" endtime="20201112 09:54:19.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.080" level="INFO">VALUE: [3.104200000000196e-05, 2.5304999999999772e-05, 2.336099999999952e-05, 2.5250000000000966e-05, 2.1499999999997216e-05, 2.336099999999952e-05, 2.1472000000001545e-05, 1.95830000000001e-05, 2.5264000000000536e-05, 2.0513999999999255e-05, 2.4277999999999106e-05, 2.334699999999995e-05, 2.4306000000001715e-05, 2.5332999999998912e-05, 2.5318999999999342e-05, 2.5305999999999246e-05, 2.234699999999895e-05, 2.238900000000113e-05, 2.1443999999998936e-05, 2.4304999999998772e-05, 2.336099999999952e-05, 2.5304999999999772e-05, 2.24030000000007e-05, 2.333300000000038e-05, 1.955500000000096e-05, 2.1472000000001545e-05, 2.5291999999999676e-05, 1.9528000000001294e-05, 2.5305999999999246e-05, 1.954100000000139e-05, 2.4306000000001715e-05, 2.237499999999809e-05, 2.4291999999998676e-05, 2.236099999999852e-05, 2.334700000000342e-05, 2.5264000000000536e-05, 2.237499999999809e-05, 2.434700000000095e-05, 2.0513999999999255e-05, 2.1527999999999825e-05, 2.4304999999998772e-05, 2.5235999999997927e-05, 2.5278000000000106e-05, 2.5222000000001826e-05, 2.238899999999766e-05, 2.0513999999999255e-05, 2.6179999999997178e-05, 2.5292000000003145e-05, 2.4277999999999106e-05, 2.4263999999999536e-05]</msg>
<status status="PASS" starttime="20201112 09:54:19.079" endtime="20201112 09:54:19.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.074" endtime="20201112 09:54:19.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.084" endtime="20201112 09:54:19.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:19.087" endtime="20201112 09:54:19.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.086" endtime="20201112 09:54:19.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.082" endtime="20201112 09:54:19.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.716" endtime="20201112 09:54:19.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.715" endtime="20201112 09:54:19.108"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.117" endtime="20201112 09:54:19.136"></status>
</kw>
<msg timestamp="20201112 09:54:19.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:19.115" endtime="20201112 09:54:19.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:19.137" endtime="20201112 09:54:19.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.140" endtime="20201112 09:54:19.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.113" endtime="20201112 09:54:19.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.111" endtime="20201112 09:54:19.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.150" endtime="20201112 09:54:19.436"></status>
</kw>
<msg timestamp="20201112 09:54:19.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024668111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024699125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:19.148" endtime="20201112 09:54:19.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024668111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024699125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:19.440" endtime="20201112 09:54:19.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.448" endtime="20201112 09:54:19.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.146" endtime="20201112 09:54:19.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.144" endtime="20201112 09:54:19.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:19.455" level="INFO">${RESULT} = [{'time': 0.024699125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.101399999999935e-05, 'source_diff': 3.101399999999935e-05}, {'time': 0.024729806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:19.452" endtime="20201112 09:54:19.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:19.469" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:19.456" endtime="20201112 09:54:19.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.474" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 09:54:19.473" endtime="20201112 09:54:19.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.476" level="INFO">VALUE: [3.101399999999935e-05, 2.4334000000000855e-05, 2.241700000000027e-05, 2.5250000000000966e-05, 2.237500000000156e-05, 2.241700000000027e-05, 2.1541999999999395e-05, 2.237500000000156e-05, 2.3304999999997772e-05, 2.1472000000001545e-05, 2.241700000000027e-05, 1.9485999999999115e-05, 2.6194000000000217e-05, 1.9528000000001294e-05, 2.4320000000001285e-05, 2.1443999999998936e-05, 2.234699999999895e-05, 2.041699999999827e-05, 2.244499999999941e-05, 2.337500000000256e-05, 1.9513999999998255e-05, 2.337499999999909e-05, 1.9556000000000434e-05, 1.9527999999997825e-05, 1.9570000000000004e-05, 2.1429999999999366e-05, 2.24030000000007e-05, 2.4306000000001715e-05, 2.1458000000001975e-05, 2.1429999999999366e-05, 2.4249999999999966e-05, 2.0486000000000115e-05, 2.3320000000000285e-05, 2.2402000000001226e-05, 2.6249999999998497e-05, 2.238900000000113e-05, 2.0528000000002294e-05, 2.4318999999998342e-05, 2.6221999999999357e-05, 2.0472000000000545e-05, 2.4304999999998772e-05, 2.4264000000003005e-05, 2.4318999999998342e-05, 2.3348000000002894e-05, 2.143100000000231e-05, 2.3250000000002435e-05, 2.336099999999952e-05, 2.1443999999998936e-05, 2.5278000000000106e-05, 1.9541999999997395e-05]</msg>
<status status="PASS" starttime="20201112 09:54:19.475" endtime="20201112 09:54:19.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.470" endtime="20201112 09:54:19.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.480" endtime="20201112 09:54:19.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:19.483" endtime="20201112 09:54:19.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.482" endtime="20201112 09:54:19.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.478" endtime="20201112 09:54:19.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.109" endtime="20201112 09:54:19.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.108" endtime="20201112 09:54:19.504"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.513" endtime="20201112 09:54:19.528"></status>
</kw>
<msg timestamp="20201112 09:54:19.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:19.511" endtime="20201112 09:54:19.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:19.529" endtime="20201112 09:54:19.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.532" endtime="20201112 09:54:19.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.509" endtime="20201112 09:54:19.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.507" endtime="20201112 09:54:19.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.542" endtime="20201112 09:54:19.828"></status>
</kw>
<msg timestamp="20201112 09:54:19.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020412806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020433264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:19.540" endtime="20201112 09:54:19.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020412806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020433264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:19.832" endtime="20201112 09:54:19.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.841" endtime="20201112 09:54:19.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.537" endtime="20201112 09:54:19.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.536" endtime="20201112 09:54:19.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:19.847" level="INFO">${RESULT} = [{'time': 0.020433264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0458000000000975e-05, 'source_diff': 2.0458000000000975e-05}, {'time': 0.020463333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:19.844" endtime="20201112 09:54:19.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:19.861" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:19.848" endtime="20201112 09:54:19.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.865" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 09:54:19.864" endtime="20201112 09:54:19.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.868" level="INFO">VALUE: [2.0458000000000975e-05, 2.437500000000009e-05, 1.956900000000053e-05, 2.5278000000000106e-05, 2.338900000000213e-05, 2.048700000000306e-05, 2.4318999999998342e-05, 2.141699999999927e-05, 2.4290999999999202e-05, 1.8612000000001183e-05, 2.5291999999999676e-05, 1.9541999999997395e-05, 2.0443999999997936e-05, 2.143099999999884e-05, 1.9499999999998685e-05, 1.9514000000001724e-05, 2.0486000000000115e-05, 2.1429999999999366e-05, 2.5222000000001826e-05, 1.954100000000139e-05, 2.0486000000000115e-05, 2.62230000000023e-05, 2.1402000000000226e-05, 2.243099999999984e-05, 2.0486000000000115e-05, 2.238900000000113e-05, 2.4320000000001285e-05, 2.14029999999997e-05, 2.143099999999884e-05, 2.1472000000001545e-05, 2.3387999999999187e-05, 2.0472000000000545e-05, 2.238900000000113e-05, 2.5235999999997927e-05, 2.141699999999927e-05, 2.336099999999952e-05, 2.334699999999995e-05, 2.4264000000003005e-05, 2.4207999999997787e-05, 2.145899999999798e-05, 2.5304999999999772e-05, 2.043099999999784e-05, 2.5250000000000966e-05, 2.143099999999884e-05, 2.1458000000001975e-05, 2.3333999999999855e-05, 2.433300000000138e-05, 1.948699999999859e-05, 2.047300000000002e-05, 1.954100000000139e-05]</msg>
<status status="PASS" starttime="20201112 09:54:19.866" endtime="20201112 09:54:19.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.862" endtime="20201112 09:54:19.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.871" endtime="20201112 09:54:19.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:19.875" endtime="20201112 09:54:19.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.873" endtime="20201112 09:54:19.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.870" endtime="20201112 09:54:19.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.505" endtime="20201112 09:54:19.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.505" endtime="20201112 09:54:19.896"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.904" endtime="20201112 09:54:19.922"></status>
</kw>
<msg timestamp="20201112 09:54:19.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:19.903" endtime="20201112 09:54:19.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:19.923" endtime="20201112 09:54:19.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.926" endtime="20201112 09:54:19.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.900" endtime="20201112 09:54:19.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.898" endtime="20201112 09:54:19.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.936" endtime="20201112 09:54:20.220"></status>
</kw>
<msg timestamp="20201112 09:54:20.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020717097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02074425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:19.934" endtime="20201112 09:54:20.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020717097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02074425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:20.224" endtime="20201112 09:54:20.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.232" endtime="20201112 09:54:20.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.932" endtime="20201112 09:54:20.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.930" endtime="20201112 09:54:20.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:20.239" level="INFO">${RESULT} = [{'time': 0.02074425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.715299999999851e-05, 'source_diff': 2.715299999999851e-05}, {'time': 0.020775181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:20.235" endtime="20201112 09:54:20.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:20.252" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:20.240" endtime="20201112 09:54:20.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.256" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 09:54:20.255" endtime="20201112 09:54:20.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.259" level="INFO">VALUE: [2.715299999999851e-05, 2.4306000000001715e-05, 2.238899999999766e-05, 2.3292000000001145e-05, 2.234699999999895e-05, 2.5291999999999676e-05, 2.0472000000000545e-05, 2.343100000000084e-05, 2.4348000000000425e-05, 2.141699999999927e-05, 2.233299999999938e-05, 2.4263999999999536e-05, 2.5250000000000966e-05, 2.0500000000003155e-05, 1.9542000000000864e-05, 2.2388000000001657e-05, 2.051299999999978e-05, 2.0499999999999685e-05, 2.4333999999997385e-05, 2.243099999999984e-05, 2.147300000000102e-05, 2.5236000000001396e-05, 1.9513999999998255e-05, 2.336099999999952e-05, 2.5278000000000106e-05, 2.1429999999999366e-05, 2.24030000000007e-05, 1.956900000000053e-05, 2.431900000000181e-05, 2.5236000000001396e-05, 2.52230000000013e-05, 1.962499999999881e-05, 2.5305999999999246e-05, 1.9514000000001724e-05, 2.047300000000002e-05, 2.3320000000000285e-05, 2.336099999999952e-05, 2.338899999999866e-05, 2.3347999999999425e-05, 2.143099999999884e-05, 2.14029999999997e-05, 2.0513999999999255e-05, 2.336099999999952e-05, 2.336099999999952e-05, 2.4263999999999536e-05, 1.9485999999999115e-05, 2.24030000000007e-05, 2.044500000000088e-05, 2.6249999999998497e-05, 2.337499999999909e-05]</msg>
<status status="PASS" starttime="20201112 09:54:20.257" endtime="20201112 09:54:20.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.253" endtime="20201112 09:54:20.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.262" endtime="20201112 09:54:20.264"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:20.266" endtime="20201112 09:54:20.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.264" endtime="20201112 09:54:20.286"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.261" endtime="20201112 09:54:20.286"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.897" endtime="20201112 09:54:20.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.896" endtime="20201112 09:54:20.287"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.295" endtime="20201112 09:54:20.312"></status>
</kw>
<msg timestamp="20201112 09:54:20.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.294" endtime="20201112 09:54:20.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.314" endtime="20201112 09:54:20.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.316" endtime="20201112 09:54:20.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.291" endtime="20201112 09:54:20.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.289" endtime="20201112 09:54:20.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.326" endtime="20201112 09:54:20.612"></status>
</kw>
<msg timestamp="20201112 09:54:20.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021450181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021483125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:20.325" endtime="20201112 09:54:20.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021450181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021483125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:20.617" endtime="20201112 09:54:20.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.625" endtime="20201112 09:54:20.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.322" endtime="20201112 09:54:20.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.320" endtime="20201112 09:54:20.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:20.631" level="INFO">${RESULT} = [{'time': 0.021483125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.294400000000003e-05, 'source_diff': 3.294400000000003e-05}, {'time': 0.021514444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:20.628" endtime="20201112 09:54:20.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:20.645" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:20.632" endtime="20201112 09:54:20.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.649" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 09:54:20.648" endtime="20201112 09:54:20.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.652" level="INFO">VALUE: [3.294400000000003e-05, 2.3416000000001796e-05, 2.5278000000000106e-05, 2.431900000000181e-05, 2.4305999999998246e-05, 2.0513999999999255e-05, 2.5291999999999676e-05, 1.9485999999999115e-05, 2.5235999999997927e-05, 2.1458000000001975e-05, 2.043099999999784e-05, 2.433300000000138e-05, 2.5347999999997956e-05, 2.2347999999998425e-05, 2.238900000000113e-05, 2.0499999999999685e-05, 2.241700000000027e-05, 2.236099999999852e-05, 2.333300000000038e-05, 2.240299999999723e-05, 2.5318999999999342e-05, 2.523700000000087e-05, 2.047300000000002e-05, 2.240299999999723e-05, 2.051299999999978e-05, 2.241700000000027e-05, 2.4277999999999106e-05, 1.9527999999997825e-05, 2.0499999999999685e-05, 2.431900000000181e-05, 2.337499999999909e-05, 2.1429999999999366e-05, 1.9570000000000004e-05, 2.337499999999909e-05, 2.043100000000131e-05, 2.0570000000001004e-05, 2.3401999999998757e-05, 2.5249999999997497e-05, 2.5250000000000966e-05, 2.1486000000001115e-05, 2.5291000000000202e-05, 2.434700000000095e-05, 2.241700000000027e-05, 1.9499999999998685e-05, 2.5250000000000966e-05, 2.2402000000001226e-05, 2.434700000000095e-05, 2.337499999999909e-05, 2.143100000000231e-05, 2.4332999999997912e-05]</msg>
<status status="PASS" starttime="20201112 09:54:20.650" endtime="20201112 09:54:20.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.646" endtime="20201112 09:54:20.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.655" endtime="20201112 09:54:20.656"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:20.659" endtime="20201112 09:54:20.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.657" endtime="20201112 09:54:20.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.653" endtime="20201112 09:54:20.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.288" endtime="20201112 09:54:20.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.287" endtime="20201112 09:54:20.679"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.688" endtime="20201112 09:54:20.707"></status>
</kw>
<msg timestamp="20201112 09:54:20.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.687" endtime="20201112 09:54:20.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.708" endtime="20201112 09:54:20.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.711" endtime="20201112 09:54:20.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.684" endtime="20201112 09:54:20.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.682" endtime="20201112 09:54:20.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.721" endtime="20201112 09:54:21.005"></status>
</kw>
<msg timestamp="20201112 09:54:21.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020753361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020788208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:20.719" endtime="20201112 09:54:21.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020753361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020788208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:21.009" endtime="20201112 09:54:21.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.018" endtime="20201112 09:54:21.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.717" endtime="20201112 09:54:21.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.715" endtime="20201112 09:54:21.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:21.024" level="INFO">${RESULT} = [{'time': 0.020788208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4846999999997574e-05, 'source_diff': 3.4846999999997574e-05}, {'time': 0.020818667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:21.021" endtime="20201112 09:54:21.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:21.039" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:21.025" endtime="20201112 09:54:21.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.043" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 09:54:21.042" endtime="20201112 09:54:21.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.046" level="INFO">VALUE: [3.4846999999997574e-05, 2.043099999999784e-05, 2.0486000000000115e-05, 2.238899999999766e-05, 2.334699999999995e-05, 2.0472000000000545e-05, 2.14029999999997e-05, 2.5208000000002256e-05, 2.238900000000113e-05, 2.4320000000001285e-05, 2.1485999999997646e-05, 2.0486000000000115e-05, 2.0444000000001405e-05, 2.5250000000000966e-05, 2.1443999999998936e-05, 2.4346999999997482e-05, 2.5291999999999676e-05, 2.2430000000000366e-05, 2.138900000000013e-05, 2.338900000000213e-05, 2.4306000000001715e-05, 2.4320000000001285e-05, 2.24030000000007e-05, 2.2443999999999936e-05, 2.5278000000000106e-05, 2.141699999999927e-05, 2.1443999999998936e-05, 2.1429999999999366e-05, 2.5278000000000106e-05, 2.5291999999999676e-05, 1.9527999999997825e-05, 2.0486000000000115e-05, 2.0486000000000115e-05, 2.240299999999723e-05, 2.6222000000002826e-05, 2.234699999999895e-05, 2.0513999999999255e-05, 2.043099999999784e-05, 2.618100000000012e-05, 2.238899999999766e-05, 2.331900000000081e-05, 1.9541999999997395e-05, 2.1472000000001545e-05, 2.3415999999998327e-05, 1.9542000000000864e-05, 2.338900000000213e-05, 2.6222000000002826e-05, 2.1443999999998936e-05, 2.0499999999999685e-05, 2.4292000000002145e-05]</msg>
<status status="PASS" starttime="20201112 09:54:21.044" endtime="20201112 09:54:21.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.040" endtime="20201112 09:54:21.047"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.049" endtime="20201112 09:54:21.051"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:21.053" endtime="20201112 09:54:21.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.051" endtime="20201112 09:54:21.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.048" endtime="20201112 09:54:21.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.680" endtime="20201112 09:54:21.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.680" endtime="20201112 09:54:21.074"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.082" endtime="20201112 09:54:21.100"></status>
</kw>
<msg timestamp="20201112 09:54:21.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.081" endtime="20201112 09:54:21.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.102" endtime="20201112 09:54:21.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.104" endtime="20201112 09:54:21.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.078" endtime="20201112 09:54:21.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.076" endtime="20201112 09:54:21.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.114" endtime="20201112 09:54:21.399"></status>
</kw>
<msg timestamp="20201112 09:54:21.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023467847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023479722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:21.113" endtime="20201112 09:54:21.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023467847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023479722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:21.403" endtime="20201112 09:54:21.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.411" endtime="20201112 09:54:21.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.110" endtime="20201112 09:54:21.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.109" endtime="20201112 09:54:21.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:21.418" level="INFO">${RESULT} = [{'time': 0.023479722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.023510014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:21.415" endtime="20201112 09:54:21.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:21.431" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:21.419" endtime="20201112 09:54:21.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.436" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 09:54:21.435" endtime="20201112 09:54:21.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.438" level="INFO">VALUE: [1.1875000000001468e-05, 2.1457999999998506e-05, 2.5249999999997497e-05, 2.237499999999809e-05, 2.1457999999998506e-05, 2.337499999999909e-05, 2.136100000000099e-05, 2.337499999999909e-05, 2.4320000000001285e-05, 2.145899999999798e-05, 2.6221999999999357e-05, 2.3292000000001145e-05, 1.959699999999967e-05, 2.3347999999999425e-05, 2.336099999999952e-05, 2.0486000000000115e-05, 2.241700000000027e-05, 2.1443999999998936e-05, 2.234700000000242e-05, 2.044500000000088e-05, 1.8584000000002043e-05, 2.1472000000001545e-05, 2.5305999999999246e-05, 2.4346999999997482e-05, 2.044500000000088e-05, 1.9513999999998255e-05, 2.2416000000000796e-05, 2.0486000000000115e-05, 2.045900000000045e-05, 2.236099999999852e-05, 2.329100000000167e-05, 2.241700000000027e-05, 2.4334000000000855e-05, 2.055499999999849e-05, 2.533300000000238e-05, 2.243099999999984e-05, 1.8570000000002473e-05, 2.3401999999998757e-05, 2.2443999999999936e-05, 2.336099999999952e-05, 2.3249999999998966e-05, 2.0486000000000115e-05, 2.5278000000000106e-05, 2.5291999999999676e-05, 2.337499999999909e-05, 2.0542000000001864e-05, 1.9570000000000004e-05, 2.241700000000027e-05, 2.431900000000181e-05, 2.5333999999998386e-05]</msg>
<status status="PASS" starttime="20201112 09:54:21.437" endtime="20201112 09:54:21.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.432" endtime="20201112 09:54:21.440"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.442" endtime="20201112 09:54:21.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:21.446" endtime="20201112 09:54:21.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.444" endtime="20201112 09:54:21.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.441" endtime="20201112 09:54:21.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.075" endtime="20201112 09:54:21.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.074" endtime="20201112 09:54:21.467"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.476" endtime="20201112 09:54:21.492"></status>
</kw>
<msg timestamp="20201112 09:54:21.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.474" endtime="20201112 09:54:21.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.494" endtime="20201112 09:54:21.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.496" endtime="20201112 09:54:21.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.471" endtime="20201112 09:54:21.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.469" endtime="20201112 09:54:21.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.506" endtime="20201112 09:54:21.793"></status>
</kw>
<msg timestamp="20201112 09:54:21.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022158, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022173694, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:21.505" endtime="20201112 09:54:21.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022158, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022173694, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:21.798" endtime="20201112 09:54:21.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.806" endtime="20201112 09:54:21.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.502" endtime="20201112 09:54:21.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.500" endtime="20201112 09:54:21.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:21.813" level="INFO">${RESULT} = [{'time': 0.022173694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5694000000000125e-05, 'source_diff': 1.5694000000000125e-05}, {'time': 0.022203806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:21.809" endtime="20201112 09:54:21.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:21.826" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:21.813" endtime="20201112 09:54:21.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.830" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 09:54:21.829" endtime="20201112 09:54:21.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.833" level="INFO">VALUE: [1.5694000000000125e-05, 1.9527999999997825e-05, 2.238900000000113e-05, 2.5305999999999246e-05, 2.238899999999766e-05, 2.3291999999997676e-05, 2.334699999999995e-05, 2.5278000000000106e-05, 2.051300000000325e-05, 2.5249999999997497e-05, 2.4276999999999632e-05, 1.9528000000001294e-05, 2.144499999999841e-05, 2.044500000000088e-05, 2.231899999999981e-05, 2.1429999999999366e-05, 2.1471999999998076e-05, 2.236099999999852e-05, 2.0486000000000115e-05, 2.1458000000001975e-05, 2.238900000000113e-05, 2.4277999999999106e-05, 2.143100000000231e-05, 2.3361999999998995e-05, 2.240299999999723e-05, 2.241700000000027e-05, 2.141699999999927e-05, 2.3333999999999855e-05, 2.1430000000002836e-05, 2.24030000000007e-05, 2.337499999999909e-05, 2.338900000000213e-05, 1.9528000000001294e-05, 2.3430000000001366e-05, 2.233299999999938e-05, 2.5236000000001396e-05, 2.0500000000003155e-05, 2.243100000000331e-05, 2.238899999999766e-05, 2.24030000000007e-05, 2.0486000000000115e-05, 2.3318999999997342e-05, 2.244499999999941e-05, 2.5291999999999676e-05, 2.238900000000113e-05, 2.0514000000002724e-05, 1.951299999999878e-05, 2.1415999999999796e-05, 2.340299999999823e-05, 2.336099999999952e-05]</msg>
<status status="PASS" starttime="20201112 09:54:21.831" endtime="20201112 09:54:21.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.827" endtime="20201112 09:54:21.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.836" endtime="20201112 09:54:21.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:21.840" endtime="20201112 09:54:21.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.838" endtime="20201112 09:54:21.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.835" endtime="20201112 09:54:21.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.468" endtime="20201112 09:54:21.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.467" endtime="20201112 09:54:21.861"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.869" endtime="20201112 09:54:21.888"></status>
</kw>
<msg timestamp="20201112 09:54:21.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.868" endtime="20201112 09:54:21.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.889" endtime="20201112 09:54:21.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.891" endtime="20201112 09:54:21.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.865" endtime="20201112 09:54:21.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.863" endtime="20201112 09:54:21.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.902" endtime="20201112 09:54:22.188"></status>
</kw>
<msg timestamp="20201112 09:54:22.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020134903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020165917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:21.900" endtime="20201112 09:54:22.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020134903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020165917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:22.192" endtime="20201112 09:54:22.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.200" endtime="20201112 09:54:22.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.897" endtime="20201112 09:54:22.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.896" endtime="20201112 09:54:22.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:22.207" level="INFO">${RESULT} = [{'time': 0.020165917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.101399999999935e-05, 'source_diff': 3.101399999999935e-05}, {'time': 0.020196222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:22.203" endtime="20201112 09:54:22.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:22.220" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:22.208" endtime="20201112 09:54:22.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.225" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 09:54:22.224" endtime="20201112 09:54:22.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.227" level="INFO">VALUE: [3.101399999999935e-05, 1.9499999999998685e-05, 2.1471999999998076e-05, 2.2401999999997757e-05, 1.9570000000000004e-05, 2.434700000000095e-05, 1.9542000000000864e-05, 2.3361999999998995e-05, 2.0499999999999685e-05, 2.238900000000113e-05, 2.2443999999999936e-05, 2.5278000000000106e-05, 2.336099999999952e-05, 2.520899999999826e-05, 1.9514000000001724e-05, 2.5264000000000536e-05, 2.147300000000102e-05, 1.951299999999878e-05, 2.4332999999997912e-05, 2.241700000000027e-05, 2.047300000000002e-05, 2.4290999999999202e-05, 2.336099999999952e-05, 2.241700000000027e-05, 2.4334000000000855e-05, 2.4292000000002145e-05, 2.141699999999927e-05, 2.1429999999999366e-05, 2.3387999999999187e-05, 2.045900000000045e-05, 2.3290999999998202e-05, 2.1443999999998936e-05, 1.959699999999967e-05, 1.9514000000001724e-05, 2.4319999999997816e-05, 2.5250000000000966e-05, 1.9499999999998685e-05, 2.245899999999898e-05, 2.148699999999712e-05, 2.431900000000181e-05, 2.6264000000001536e-05, 2.3333999999999855e-05, 2.14029999999997e-05, 2.0472000000000545e-05, 1.9513999999998255e-05, 2.241700000000027e-05, 2.336100000000299e-05, 2.236100000000199e-05, 2.430500000000224e-05, 2.237500000000156e-05]</msg>
<status status="PASS" starttime="20201112 09:54:22.226" endtime="20201112 09:54:22.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.221" endtime="20201112 09:54:22.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.231" endtime="20201112 09:54:22.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:22.234" endtime="20201112 09:54:22.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.233" endtime="20201112 09:54:22.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.229" endtime="20201112 09:54:22.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.862" endtime="20201112 09:54:22.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.861" endtime="20201112 09:54:22.255"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.264" endtime="20201112 09:54:22.282"></status>
</kw>
<msg timestamp="20201112 09:54:22.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.262" endtime="20201112 09:54:22.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.283" endtime="20201112 09:54:22.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.286" endtime="20201112 09:54:22.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.260" endtime="20201112 09:54:22.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.257" endtime="20201112 09:54:22.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.296" endtime="20201112 09:54:22.580"></status>
</kw>
<msg timestamp="20201112 09:54:22.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022696319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022704389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:22.294" endtime="20201112 09:54:22.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022696319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022704389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:22.585" endtime="20201112 09:54:22.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.593" endtime="20201112 09:54:22.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.292" endtime="20201112 09:54:22.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.290" endtime="20201112 09:54:22.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:22.600" level="INFO">${RESULT} = [{'time': 0.022704389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.069999999998911e-06, 'source_diff': 8.069999999998911e-06}, {'time': 0.022734903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:22.596" endtime="20201112 09:54:22.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:22.614" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:22.601" endtime="20201112 09:54:22.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.619" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 09:54:22.618" endtime="20201112 09:54:22.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.621" level="INFO">VALUE: [8.069999999998911e-06, 1.9528000000001294e-05, 2.24030000000007e-05, 2.047300000000002e-05, 2.5278000000000106e-05, 2.145900000000145e-05, 2.24030000000007e-05, 2.4334000000000855e-05, 1.9528000000001294e-05, 1.952700000000182e-05, 2.2402000000001226e-05, 2.1457999999998506e-05, 2.4361999999999995e-05, 1.9499999999998685e-05, 2.4320000000001285e-05, 2.338900000000213e-05, 2.24030000000007e-05, 2.4304999999998772e-05, 2.5264000000000536e-05, 2.144499999999841e-05, 1.859699999999867e-05, 2.1500000000000685e-05, 2.24030000000007e-05, 2.1471999999998076e-05, 2.2430000000000366e-05, 1.951299999999878e-05, 2.3361999999998995e-05, 2.1457999999998506e-05, 2.0499999999999685e-05, 2.618100000000012e-05, 2.241700000000027e-05, 1.9528000000001294e-05, 2.5291999999999676e-05, 2.1443999999998936e-05, 2.338900000000213e-05, 2.5278000000000106e-05, 2.4320000000001285e-05, 2.1514000000000255e-05, 2.437500000000009e-05, 2.5278000000000106e-05, 2.5278000000000106e-05, 2.240299999999723e-05, 2.337499999999909e-05, 2.1443999999998936e-05, 2.0513999999999255e-05, 1.9542000000000864e-05, 2.6250000000001966e-05, 2.4318999999998342e-05, 2.2429999999996897e-05, 2.434700000000095e-05]</msg>
<status status="PASS" starttime="20201112 09:54:22.620" endtime="20201112 09:54:22.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.615" endtime="20201112 09:54:22.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.625" endtime="20201112 09:54:22.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:22.628" endtime="20201112 09:54:22.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.626" endtime="20201112 09:54:22.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.623" endtime="20201112 09:54:22.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.256" endtime="20201112 09:54:22.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.255" endtime="20201112 09:54:22.649"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.657" endtime="20201112 09:54:22.673"></status>
</kw>
<msg timestamp="20201112 09:54:22.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.656" endtime="20201112 09:54:22.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.675" endtime="20201112 09:54:22.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.677" endtime="20201112 09:54:22.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.653" endtime="20201112 09:54:22.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.651" endtime="20201112 09:54:22.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.687" endtime="20201112 09:54:22.971"></status>
</kw>
<msg timestamp="20201112 09:54:22.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020714042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020726889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:22.686" endtime="20201112 09:54:22.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020714042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020726889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:22.975" endtime="20201112 09:54:22.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.984" endtime="20201112 09:54:22.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.683" endtime="20201112 09:54:22.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.681" endtime="20201112 09:54:22.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:22.990" level="INFO">${RESULT} = [{'time': 0.020726889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2846999999999859e-05, 'source_diff': 1.2846999999999859e-05}, {'time': 0.020757681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:22.987" endtime="20201112 09:54:22.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:23.004" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:22.991" endtime="20201112 09:54:23.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.009" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 09:54:23.007" endtime="20201112 09:54:23.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.011" level="INFO">VALUE: [1.2846999999999859e-05, 2.5305999999999246e-05, 2.134699999999795e-05, 2.1415999999999796e-05, 2.0527999999998825e-05, 2.1443999999998936e-05, 2.3276999999998632e-05, 2.141699999999927e-05, 2.6249999999998497e-05, 2.3387999999999187e-05, 2.233299999999938e-05, 2.4320000000001285e-05, 2.1486000000001115e-05, 2.052699999999935e-05, 2.4332999999997912e-05, 2.6194000000000217e-05, 2.5291999999999676e-05, 2.436100000000052e-05, 2.4278000000002575e-05, 2.237499999999809e-05, 2.4290999999999202e-05, 2.4346999999997482e-05, 2.0486000000000115e-05, 2.436100000000052e-05, 2.241700000000027e-05, 2.4208000000001256e-05, 2.0513999999999255e-05, 2.144499999999841e-05, 2.3319999999996815e-05, 2.5222000000001826e-05, 2.241700000000027e-05, 2.238899999999766e-05, 2.5264000000000536e-05, 2.5264000000000536e-05, 2.237500000000156e-05, 2.341700000000127e-05, 2.337500000000256e-05, 2.433300000000138e-05, 2.1458000000001975e-05, 2.24030000000007e-05, 2.5250000000000966e-05, 2.14029999999997e-05, 2.334699999999995e-05, 2.5305999999999246e-05, 2.236099999999852e-05, 2.237500000000156e-05, 2.5305999999999246e-05, 2.3401999999998757e-05, 2.4304999999998772e-05, 2.1430000000002836e-05]</msg>
<status status="PASS" starttime="20201112 09:54:23.010" endtime="20201112 09:54:23.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.005" endtime="20201112 09:54:23.012"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.015" endtime="20201112 09:54:23.016"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:23.018" endtime="20201112 09:54:23.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.016" endtime="20201112 09:54:23.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.013" endtime="20201112 09:54:23.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.650" endtime="20201112 09:54:23.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.649" endtime="20201112 09:54:23.039"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.048" endtime="20201112 09:54:23.070"></status>
</kw>
<msg timestamp="20201112 09:54:23.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.046" endtime="20201112 09:54:23.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.071" endtime="20201112 09:54:23.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.073" endtime="20201112 09:54:23.076"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.043" endtime="20201112 09:54:23.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.041" endtime="20201112 09:54:23.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.083" endtime="20201112 09:54:23.368"></status>
</kw>
<msg timestamp="20201112 09:54:23.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022474167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022503292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:23.082" endtime="20201112 09:54:23.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022474167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022503292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:23.373" endtime="20201112 09:54:23.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.381" endtime="20201112 09:54:23.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.079" endtime="20201112 09:54:23.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.078" endtime="20201112 09:54:23.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:23.388" level="INFO">${RESULT} = [{'time': 0.022503292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9125000000001372e-05, 'source_diff': 2.9125000000001372e-05}, {'time': 0.022534486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:23.384" endtime="20201112 09:54:23.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:23.401" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:23.388" endtime="20201112 09:54:23.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.405" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 09:54:23.404" endtime="20201112 09:54:23.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.408" level="INFO">VALUE: [2.9125000000001372e-05, 2.238900000000113e-05, 1.9430000000000835e-05, 1.9541999999997395e-05, 2.5277999999996636e-05, 2.24030000000007e-05, 1.9583999999999574e-05, 2.34030000000017e-05, 2.5250000000000966e-05, 2.1429999999999366e-05, 2.0513999999999255e-05, 1.954099999999792e-05, 2.5263999999997067e-05, 2.2443999999999936e-05, 2.5222000000001826e-05, 2.34030000000017e-05, 2.1458000000001975e-05, 2.241700000000027e-05, 2.436100000000052e-05, 2.5236000000001396e-05, 2.5236000000001396e-05, 2.2430000000000366e-05, 2.241700000000027e-05, 2.0499999999999685e-05, 2.436100000000052e-05, 2.237500000000156e-05, 2.0443999999997936e-05, 2.1472000000001545e-05, 2.4277999999999106e-05, 2.1430000000002836e-05, 2.14029999999997e-05, 2.243099999999984e-05, 2.145899999999798e-05, 2.144499999999841e-05, 2.0499999999999685e-05, 2.4292000000002145e-05, 2.1348000000000894e-05, 2.336099999999952e-05, 1.961100000000271e-05, 1.9514000000001724e-05, 2.5222000000001826e-05, 2.238900000000113e-05, 2.0514000000002724e-05, 2.338899999999866e-05, 2.048699999999959e-05, 2.143100000000231e-05, 2.234699999999895e-05, 2.5278000000000106e-05, 2.1513999999996786e-05, 2.1415999999999796e-05]</msg>
<status status="PASS" starttime="20201112 09:54:23.406" endtime="20201112 09:54:23.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.402" endtime="20201112 09:54:23.409"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.411" endtime="20201112 09:54:23.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:23.415" endtime="20201112 09:54:23.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.413" endtime="20201112 09:54:23.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.410" endtime="20201112 09:54:23.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.040" endtime="20201112 09:54:23.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.039" endtime="20201112 09:54:23.436"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.444" endtime="20201112 09:54:23.462"></status>
</kw>
<msg timestamp="20201112 09:54:23.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.443" endtime="20201112 09:54:23.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.463" endtime="20201112 09:54:23.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.466" endtime="20201112 09:54:23.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.440" endtime="20201112 09:54:23.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.438" endtime="20201112 09:54:23.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.476" endtime="20201112 09:54:23.760"></status>
</kw>
<msg timestamp="20201112 09:54:23.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022603611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022631792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:23.474" endtime="20201112 09:54:23.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022603611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022631792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:23.764" endtime="20201112 09:54:23.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.772" endtime="20201112 09:54:23.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.472" endtime="20201112 09:54:23.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.470" endtime="20201112 09:54:23.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:23.779" level="INFO">${RESULT} = [{'time': 0.022631792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.818100000000212e-05, 'source_diff': 2.818100000000212e-05}, {'time': 0.022661625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:23.776" endtime="20201112 09:54:23.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:23.792" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:23.780" endtime="20201112 09:54:23.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.797" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 09:54:23.796" endtime="20201112 09:54:23.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.800" level="INFO">VALUE: [2.818100000000212e-05, 2.0486000000000115e-05, 2.336099999999952e-05, 2.4277999999999106e-05, 2.5250000000000966e-05, 1.9556000000000434e-05, 2.333300000000038e-05, 2.2429999999996897e-05, 2.0499999999999685e-05, 2.238899999999766e-05, 2.137500000000056e-05, 2.5236000000001396e-05, 2.237500000000156e-05, 2.6194000000000217e-05, 2.5235999999997927e-05, 2.145900000000145e-05, 2.0500000000003155e-05, 2.3320000000000285e-05, 2.1430000000002836e-05, 2.337499999999909e-05, 2.4346999999997482e-05, 2.137500000000056e-05, 2.430500000000224e-05, 2.337499999999909e-05, 2.5291999999999676e-05, 2.236099999999852e-05, 2.0486000000000115e-05, 2.431900000000181e-05, 2.4333999999997385e-05, 1.9527999999997825e-05, 2.1443999999998936e-05, 2.431900000000181e-05, 2.334699999999995e-05, 2.5207999999998787e-05, 2.5250000000000966e-05, 2.0527999999998825e-05, 1.9542000000000864e-05, 2.045900000000045e-05, 2.145899999999798e-05, 1.955500000000096e-05, 1.962499999999881e-05, 2.338900000000213e-05, 2.5250000000000966e-05, 2.5264000000000536e-05, 1.9528000000001294e-05, 2.2361999999997995e-05, 2.0444000000001405e-05, 2.054099999999892e-05, 2.0486000000000115e-05, 2.231899999999981e-05]</msg>
<status status="PASS" starttime="20201112 09:54:23.798" endtime="20201112 09:54:23.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.793" endtime="20201112 09:54:23.801"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.803" endtime="20201112 09:54:23.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:23.807" endtime="20201112 09:54:23.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.805" endtime="20201112 09:54:23.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.801" endtime="20201112 09:54:23.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.437" endtime="20201112 09:54:23.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.436" endtime="20201112 09:54:23.827"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.836" endtime="20201112 09:54:23.854"></status>
</kw>
<msg timestamp="20201112 09:54:23.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.835" endtime="20201112 09:54:23.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.856" endtime="20201112 09:54:23.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.858" endtime="20201112 09:54:23.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.832" endtime="20201112 09:54:23.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.830" endtime="20201112 09:54:23.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.868" endtime="20201112 09:54:24.154"></status>
</kw>
<msg timestamp="20201112 09:54:24.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022782986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022790097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:23.867" endtime="20201112 09:54:24.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022782986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022790097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:24.158" endtime="20201112 09:54:24.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.166" endtime="20201112 09:54:24.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.864" endtime="20201112 09:54:24.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.862" endtime="20201112 09:54:24.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:24.173" level="INFO">${RESULT} = [{'time': 0.022790097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.110999999997147e-06, 'source_diff': 7.110999999997147e-06}, {'time': 0.022820875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:24.169" endtime="20201112 09:54:24.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:24.187" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:24.173" endtime="20201112 09:54:24.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.191" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 09:54:24.190" endtime="20201112 09:54:24.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.194" level="INFO">VALUE: [7.110999999997147e-06, 2.24030000000007e-05, 2.1471999999998076e-05, 2.0499999999999685e-05, 2.620900000000273e-05, 2.3333999999999855e-05, 2.234699999999895e-05, 2.4263999999999536e-05, 2.24030000000007e-05, 2.24169999999968e-05, 1.9528000000001294e-05, 2.5278000000000106e-05, 2.0458000000000975e-05, 2.0458000000000975e-05, 2.536100000000152e-05, 2.1443999999998936e-05, 1.9499999999998685e-05, 2.143100000000231e-05, 2.1472000000001545e-05, 2.331900000000081e-05, 2.5221999999998357e-05, 2.4263999999999536e-05, 1.9528000000001294e-05, 1.9542000000000864e-05, 2.4348000000000425e-05, 2.431900000000181e-05, 2.238900000000113e-05, 2.0486000000000115e-05, 2.5291000000000202e-05, 2.145900000000145e-05, 1.9499999999998685e-05, 2.436100000000052e-05, 2.0486000000000115e-05, 2.4320000000001285e-05, 2.4263999999999536e-05, 1.9499999999998685e-05, 2.437500000000009e-05, 2.241700000000027e-05, 2.1457999999998506e-05, 2.0486000000000115e-05, 2.1472000000001545e-05, 2.0527999999998825e-05, 2.5250000000000966e-05, 2.619499999999969e-05, 2.3361999999998995e-05, 2.6222000000002826e-05, 2.0486000000000115e-05, 2.3278000000001575e-05, 2.2485999999998646e-05, 2.143099999999884e-05]</msg>
<status status="PASS" starttime="20201112 09:54:24.193" endtime="20201112 09:54:24.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.188" endtime="20201112 09:54:24.195"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.198" endtime="20201112 09:54:24.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:24.201" endtime="20201112 09:54:24.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.199" endtime="20201112 09:54:24.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.196" endtime="20201112 09:54:24.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.828" endtime="20201112 09:54:24.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.828" endtime="20201112 09:54:24.222"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.231" endtime="20201112 09:54:24.247"></status>
</kw>
<msg timestamp="20201112 09:54:24.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.229" endtime="20201112 09:54:24.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.248" endtime="20201112 09:54:24.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.251" endtime="20201112 09:54:24.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.226" endtime="20201112 09:54:24.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.224" endtime="20201112 09:54:24.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.261" endtime="20201112 09:54:24.547"></status>
</kw>
<msg timestamp="20201112 09:54:24.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020313806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020324722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:24.259" endtime="20201112 09:54:24.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020313806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020324722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:24.552" endtime="20201112 09:54:24.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.560" endtime="20201112 09:54:24.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.257" endtime="20201112 09:54:24.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.255" endtime="20201112 09:54:24.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:24.567" level="INFO">${RESULT} = [{'time': 0.020324722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0915999999999704e-05, 'source_diff': 1.0915999999999704e-05}, {'time': 0.020355403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:24.563" endtime="20201112 09:54:24.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:24.580" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:24.568" endtime="20201112 09:54:24.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.585" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 09:54:24.583" endtime="20201112 09:54:24.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.587" level="INFO">VALUE: [1.0915999999999704e-05, 1.9570000000000004e-05, 2.3401999999998757e-05, 2.431900000000181e-05, 2.0499999999999685e-05, 2.1458000000001975e-05, 2.42230000000003e-05, 1.9486000000002585e-05, 1.9542000000000864e-05, 2.5264000000000536e-05, 2.4292000000002145e-05, 2.0514000000002724e-05, 2.2401999999997757e-05, 2.4318999999998342e-05, 2.138900000000013e-05, 2.3333999999999855e-05, 2.2416000000000796e-05, 2.1430000000002836e-05, 2.0472000000000545e-05, 2.0500000000003155e-05, 1.961099999999924e-05, 2.5318999999999342e-05, 1.9513999999998255e-05, 2.0444000000001405e-05, 2.0513999999999255e-05, 2.147300000000102e-05, 2.141699999999927e-05, 2.4320000000001285e-05, 2.3348000000002894e-05, 2.1443999999998936e-05, 1.861099999999824e-05, 2.5305999999999246e-05, 2.3332999999996912e-05, 2.2443999999999936e-05, 2.243099999999984e-05, 2.241700000000027e-05, 2.337499999999909e-05, 2.6250000000001966e-05, 2.5263999999997067e-05, 2.144500000000188e-05, 2.045900000000045e-05, 1.9513999999998255e-05, 2.433300000000138e-05, 2.1486000000001115e-05, 2.0499999999999685e-05, 2.337499999999909e-05, 2.5277000000000632e-05, 2.336099999999952e-05, 2.0569999999997535e-05, 2.436100000000052e-05]</msg>
<status status="PASS" starttime="20201112 09:54:24.586" endtime="20201112 09:54:24.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.581" endtime="20201112 09:54:24.588"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.590" endtime="20201112 09:54:24.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:24.594" endtime="20201112 09:54:24.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.592" endtime="20201112 09:54:24.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.589" endtime="20201112 09:54:24.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.223" endtime="20201112 09:54:24.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.222" endtime="20201112 09:54:24.615"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.624" endtime="20201112 09:54:24.643"></status>
</kw>
<msg timestamp="20201112 09:54:24.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.622" endtime="20201112 09:54:24.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.644" endtime="20201112 09:54:24.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.647" endtime="20201112 09:54:24.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.620" endtime="20201112 09:54:24.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.618" endtime="20201112 09:54:24.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.657" endtime="20201112 09:54:24.944"></status>
</kw>
<msg timestamp="20201112 09:54:24.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024000806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024023222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:24.655" endtime="20201112 09:54:24.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024000806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024023222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:24.948" endtime="20201112 09:54:24.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.956" endtime="20201112 09:54:24.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.653" endtime="20201112 09:54:24.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.651" endtime="20201112 09:54:24.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:24.963" level="INFO">${RESULT} = [{'time': 0.024023222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2416000000000796e-05, 'source_diff': 2.2416000000000796e-05}, {'time': 0.024054333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:24.959" endtime="20201112 09:54:24.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:24.976" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:24.964" endtime="20201112 09:54:24.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.980" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 09:54:24.979" endtime="20201112 09:54:24.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.983" level="INFO">VALUE: [2.2416000000000796e-05, 2.1458000000001975e-05, 2.5278000000000106e-05, 2.147300000000102e-05, 2.336100000000299e-05, 2.141699999999927e-05, 2.143100000000231e-05, 2.6235999999998927e-05, 2.5264000000000536e-05, 1.941700000000074e-05, 2.334699999999995e-05, 2.5305999999999246e-05, 2.0527999999998825e-05, 1.9542000000000864e-05, 2.24030000000007e-05, 2.4277999999999106e-05, 2.0444000000001405e-05, 2.4320000000001285e-05, 2.337499999999909e-05, 2.5221999999998357e-05, 2.141700000000274e-05, 2.2430000000000366e-05, 2.048699999999959e-05, 2.3292000000001145e-05, 2.0472000000000545e-05, 2.5304999999999772e-05, 2.2471999999999076e-05, 2.143099999999884e-05, 2.2387999999998187e-05, 2.4305999999998246e-05, 2.5250000000000966e-05, 2.5278000000000106e-05, 2.0499999999999685e-05, 2.24030000000007e-05, 2.337499999999909e-05, 1.9542000000000864e-05, 2.4318999999998342e-05, 2.0458000000000975e-05, 2.237500000000156e-05, 2.243099999999984e-05, 2.0457999999997506e-05, 2.34030000000017e-05, 2.4304999999998772e-05, 2.237499999999809e-05, 2.238899999999766e-05, 2.4318999999998342e-05, 1.9570000000000004e-05, 2.6235999999998927e-05, 1.9513999999998255e-05, 2.234699999999895e-05]</msg>
<status status="PASS" starttime="20201112 09:54:24.981" endtime="20201112 09:54:24.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.977" endtime="20201112 09:54:24.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.986" endtime="20201112 09:54:24.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:24.990" endtime="20201112 09:54:25.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.988" endtime="20201112 09:54:25.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.985" endtime="20201112 09:54:25.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.616" endtime="20201112 09:54:25.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.615" endtime="20201112 09:54:25.011"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.020" endtime="20201112 09:54:25.039"></status>
</kw>
<msg timestamp="20201112 09:54:25.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.018" endtime="20201112 09:54:25.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.041" endtime="20201112 09:54:25.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.043" endtime="20201112 09:54:25.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.016" endtime="20201112 09:54:25.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.013" endtime="20201112 09:54:25.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.054" endtime="20201112 09:54:25.340"></status>
</kw>
<msg timestamp="20201112 09:54:25.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024979514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02500575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:25.052" endtime="20201112 09:54:25.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024979514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02500575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:25.344" endtime="20201112 09:54:25.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.352" endtime="20201112 09:54:25.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.049" endtime="20201112 09:54:25.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.048" endtime="20201112 09:54:25.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:25.359" level="INFO">${RESULT} = [{'time': 0.02500575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6235999999998927e-05, 'source_diff': 2.6235999999998927e-05}, {'time': 0.025035889, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:54:25.356" endtime="20201112 09:54:25.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:25.372" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:25.360" endtime="20201112 09:54:25.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.377" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 09:54:25.376" endtime="20201112 09:54:25.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.379" level="INFO">VALUE: [2.6235999999998927e-05, 2.338899999999866e-05, 2.143099999999884e-05, 2.145900000000145e-05, 2.045900000000045e-05, 2.237500000000156e-05, 2.5277999999996636e-05, 2.5291999999999676e-05, 2.336100000000299e-05, 2.433300000000138e-05, 2.0555999999997965e-05, 2.5278000000000106e-05, 2.3291999999997676e-05, 1.9513999999998255e-05, 2.243099999999984e-05, 2.5249999999997497e-05, 2.2402000000001226e-05, 2.5264000000000536e-05, 2.133299999999838e-05, 2.0486000000000115e-05, 2.5278000000000106e-05, 2.1457999999998506e-05, 2.1443999999998936e-05, 2.0499999999999685e-05, 2.5235999999997927e-05, 2.237500000000156e-05, 2.4332999999997912e-05, 2.4346999999997482e-05, 2.5304999999999772e-05, 2.0528000000002294e-05, 2.0443999999997936e-05, 2.4291999999998676e-05, 2.0486000000000115e-05, 2.0570000000001004e-05, 2.336099999999952e-05, 2.0499999999999685e-05, 1.9527999999997825e-05, 2.431900000000181e-05, 2.4263999999999536e-05, 2.52369999999974e-05, 2.24169999999968e-05, 2.0486000000000115e-05, 2.0499999999999685e-05, 2.1458000000001975e-05, 2.241700000000027e-05, 2.5278000000000106e-05, 2.0542000000001864e-05, 2.238900000000113e-05, 2.334699999999995e-05, 2.5278000000000106e-05]</msg>
<status status="PASS" starttime="20201112 09:54:25.378" endtime="20201112 09:54:25.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.373" endtime="20201112 09:54:25.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.383" endtime="20201112 09:54:25.384"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:25.386" endtime="20201112 09:54:25.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.385" endtime="20201112 09:54:25.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.381" endtime="20201112 09:54:25.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.012" endtime="20201112 09:54:25.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.011" endtime="20201112 09:54:25.407"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.416" endtime="20201112 09:54:25.432"></status>
</kw>
<msg timestamp="20201112 09:54:25.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.414" endtime="20201112 09:54:25.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.434" endtime="20201112 09:54:25.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.437" endtime="20201112 09:54:25.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.412" endtime="20201112 09:54:25.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.410" endtime="20201112 09:54:25.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.447" endtime="20201112 09:54:25.731"></status>
</kw>
<msg timestamp="20201112 09:54:25.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020636431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020647375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:25.445" endtime="20201112 09:54:25.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020636431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020647375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:25.735" endtime="20201112 09:54:25.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.744" endtime="20201112 09:54:25.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.442" endtime="20201112 09:54:25.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.441" endtime="20201112 09:54:25.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:25.750" level="INFO">${RESULT} = [{'time': 0.020647375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0943999999998844e-05, 'source_diff': 1.0943999999998844e-05}, {'time': 0.020678653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:25.747" endtime="20201112 09:54:25.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:25.765" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:25.751" endtime="20201112 09:54:25.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.769" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 09:54:25.768" endtime="20201112 09:54:25.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.772" level="INFO">VALUE: [1.0943999999998844e-05, 2.5250000000000966e-05, 1.9527999999997825e-05, 2.4320000000001285e-05, 2.0499999999999685e-05, 2.4334000000000855e-05, 2.0499999999999685e-05, 2.0513999999999255e-05, 2.5304999999999772e-05, 2.5278000000000106e-05, 2.1444000000002406e-05, 2.5250000000000966e-05, 2.431900000000181e-05, 2.330500000000124e-05, 2.2388000000001657e-05, 2.4334000000000855e-05, 2.0499999999999685e-05, 2.4332999999997912e-05, 2.0486000000000115e-05, 2.5278000000000106e-05, 2.4291999999998676e-05, 2.243099999999984e-05, 2.3361999999998995e-05, 2.3318999999997342e-05, 2.5278000000000106e-05, 2.337500000000256e-05, 2.1471999999998076e-05, 2.340299999999823e-05, 2.054100000000239e-05, 2.0499999999999685e-05, 2.1457999999998506e-05, 2.4306000000001715e-05, 2.437500000000009e-05, 2.1443999999998936e-05, 2.5264000000000536e-05, 2.5250000000000966e-05, 2.0401999999999226e-05, 2.233299999999938e-05, 2.0527999999998825e-05, 2.5278000000000106e-05, 2.2430000000000366e-05, 2.337500000000256e-05, 1.955499999999749e-05, 1.9556000000000434e-05, 2.241700000000027e-05, 2.4320000000001285e-05, 2.0513999999999255e-05, 1.956900000000053e-05, 2.1458000000001975e-05, 2.5250000000000966e-05]</msg>
<status status="PASS" starttime="20201112 09:54:25.770" endtime="20201112 09:54:25.772"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.766" endtime="20201112 09:54:25.773"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.775" endtime="20201112 09:54:25.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:25.779" endtime="20201112 09:54:25.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.777" endtime="20201112 09:54:25.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.774" endtime="20201112 09:54:25.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.408" endtime="20201112 09:54:25.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.408" endtime="20201112 09:54:25.800"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.808" endtime="20201112 09:54:25.828"></status>
</kw>
<msg timestamp="20201112 09:54:25.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.807" endtime="20201112 09:54:25.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.829" endtime="20201112 09:54:25.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.832" endtime="20201112 09:54:25.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.804" endtime="20201112 09:54:25.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.802" endtime="20201112 09:54:25.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.842" endtime="20201112 09:54:26.128"></status>
</kw>
<msg timestamp="20201112 09:54:26.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025064681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025078472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:25.840" endtime="20201112 09:54:26.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025064681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025078472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:26.133" endtime="20201112 09:54:26.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.141" endtime="20201112 09:54:26.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.838" endtime="20201112 09:54:26.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.836" endtime="20201112 09:54:26.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:26.148" level="INFO">${RESULT} = [{'time': 0.025078472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3791000000002579e-05, 'source_diff': 1.3791000000002579e-05}, {'time': 0.025109139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:26.144" endtime="20201112 09:54:26.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:26.161" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:26.149" endtime="20201112 09:54:26.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.166" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 09:54:26.165" endtime="20201112 09:54:26.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.168" level="INFO">VALUE: [1.3791000000002579e-05, 2.5278000000000106e-05, 2.336099999999952e-05, 2.241700000000027e-05, 1.9542000000000864e-05, 2.5264000000000536e-05, 2.334699999999995e-05, 2.329100000000167e-05, 1.9472000000003015e-05, 2.4346999999997482e-05, 2.052700000000282e-05, 2.0555999999997965e-05, 2.337500000000256e-05, 1.9499999999998685e-05, 1.952699999999835e-05, 2.1444000000002406e-05, 2.1444000000002406e-05, 1.9514000000001724e-05, 2.4306000000001715e-05, 2.434700000000095e-05, 2.238900000000113e-05, 2.336100000000299e-05, 1.9471999999999545e-05, 2.336099999999952e-05, 2.4332999999997912e-05, 2.1444000000002406e-05, 2.4277999999999106e-05, 2.3429999999997897e-05, 2.2430000000000366e-05, 2.0486000000000115e-05, 2.24030000000007e-05, 2.4277999999999106e-05, 1.9513999999998255e-05, 2.1471999999998076e-05, 2.241700000000027e-05, 2.618100000000012e-05, 2.5221999999998357e-05, 1.9542000000000864e-05, 2.0486000000000115e-05, 2.5278000000000106e-05, 1.9541999999997395e-05, 2.338900000000213e-05, 2.5278000000000106e-05, 2.240299999999723e-05, 2.5221999999998357e-05, 2.24030000000007e-05, 2.6236000000002396e-05, 2.340299999999823e-05, 2.4263999999999536e-05, 2.433300000000138e-05]</msg>
<status status="PASS" starttime="20201112 09:54:26.167" endtime="20201112 09:54:26.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.162" endtime="20201112 09:54:26.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.172" endtime="20201112 09:54:26.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:26.175" endtime="20201112 09:54:26.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.174" endtime="20201112 09:54:26.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.170" endtime="20201112 09:54:26.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.801" endtime="20201112 09:54:26.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.800" endtime="20201112 09:54:26.196"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.205" endtime="20201112 09:54:26.228"></status>
</kw>
<msg timestamp="20201112 09:54:26.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:26.203" endtime="20201112 09:54:26.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:26.229" endtime="20201112 09:54:26.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.232" endtime="20201112 09:54:26.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.201" endtime="20201112 09:54:26.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.199" endtime="20201112 09:54:26.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.242" endtime="20201112 09:54:26.527"></status>
</kw>
<msg timestamp="20201112 09:54:26.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020483069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020538069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:26.240" endtime="20201112 09:54:26.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020483069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020538069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:26.532" endtime="20201112 09:54:26.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.540" endtime="20201112 09:54:26.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.238" endtime="20201112 09:54:26.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.236" endtime="20201112 09:54:26.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:26.547" level="INFO">${RESULT} = [{'time': 0.020538069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4999999999999494e-05, 'source_diff': 5.4999999999999494e-05}, {'time': 0.020598528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:26.543" endtime="20201112 09:54:26.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:26.560" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:26.548" endtime="20201112 09:54:26.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.564" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 09:54:26.563" endtime="20201112 09:54:26.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.567" level="INFO">VALUE: [5.4999999999999494e-05, 5.490300000000198e-05, 5.204200000000214e-05, 5.111099999999952e-05, 5.205499999999877e-05, 5.105499999999777e-05, 5.023599999999864e-05, 5.3930000000000644e-05, 5.111099999999952e-05, 5.588899999999994e-05, 5.390300000000098e-05, 5.68610000000018e-05, 5.009699999999895e-05, 5.109699999999995e-05, 5.3985999999998924e-05, 5.30280000000001e-05, 5.393100000000012e-05, 5.107000000000028e-05, 5.011099999999852e-05, 5.01530000000007e-05, 5.109699999999995e-05, 5.587500000000037e-05, 5.4013999999998064e-05, 5.108399999999985e-05, 5.009799999999842e-05, 5.019499999999941e-05, 5.394500000000316e-05, 5.490300000000198e-05, 5.112499999999909e-05, 5.4958000000000784e-05, 5.108399999999985e-05, 5.393100000000012e-05, 5.4957999999997315e-05, 5.107000000000028e-05, 5.105499999999777e-05, 5.111099999999952e-05, 5.304200000000314e-05, 5.586099999999733e-05, 5.3944000000000214e-05, 5.305599999999924e-05, 5.501400000000253e-05, 5.011099999999852e-05, 5.204199999999867e-05, 5.487500000000284e-05, 5.102800000000157e-05, 5.586099999999733e-05, 5.2957999999998784e-05, 5.2971999999998354e-05, 5.591699999999908e-05, 5.490299999999851e-05]</msg>
<status status="PASS" starttime="20201112 09:54:26.565" endtime="20201112 09:54:26.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.561" endtime="20201112 09:54:26.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.575" endtime="20201112 09:54:26.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:26.579" endtime="20201112 09:54:26.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.577" endtime="20201112 09:54:26.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.573" endtime="20201112 09:54:26.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.197" endtime="20201112 09:54:26.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.197" endtime="20201112 09:54:26.600"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.608" endtime="20201112 09:54:26.631"></status>
</kw>
<msg timestamp="20201112 09:54:26.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:26.607" endtime="20201112 09:54:26.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:26.632" endtime="20201112 09:54:26.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.635" endtime="20201112 09:54:26.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.604" endtime="20201112 09:54:26.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.602" endtime="20201112 09:54:26.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.645" endtime="20201112 09:54:26.930"></status>
</kw>
<msg timestamp="20201112 09:54:26.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02394525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023990611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:26.643" endtime="20201112 09:54:26.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02394525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023990611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:26.935" endtime="20201112 09:54:26.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.943" endtime="20201112 09:54:26.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.641" endtime="20201112 09:54:26.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.639" endtime="20201112 09:54:26.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:26.949" level="INFO">${RESULT} = [{'time': 0.023990611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.536099999999724e-05, 'source_diff': 4.536099999999724e-05}, {'time': 0.024051625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:26.946" endtime="20201112 09:54:26.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:26.963" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:26.950" endtime="20201112 09:54:26.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.967" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 09:54:26.966" endtime="20201112 09:54:26.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.970" level="INFO">VALUE: [4.536099999999724e-05, 5.593099999999865e-05, 5.4985999999999924e-05, 5.009699999999895e-05, 5.586200000000027e-05, 5.304199999999967e-05, 5.205500000000224e-05, 5.206899999999834e-05, 5.3930000000000644e-05, 5.108300000000038e-05, 5.205600000000171e-05, 5.006999999999928e-05, 5.484700000000023e-05, 5.586200000000027e-05, 5.109800000000289e-05, 5.3971999999999354e-05, 5.207000000000128e-05, 5.102800000000157e-05, 5.012499999999809e-05, 5.118000000000136e-05, 5.388899999999794e-05, 5.58610000000008e-05, 5.68610000000018e-05, 5.006899999999981e-05, 5.583300000000166e-05, 5.209700000000095e-05, 5.02079999999995e-05, 5.101399999999853e-05, 5.118100000000084e-05, 5.3985999999998924e-05, 5.004200000000014e-05, 5.304199999999967e-05, 5.016700000000027e-05, 5.4958000000000784e-05, 5.1971999999997354e-05, 5.30280000000001e-05, 5.207000000000128e-05, 5.588899999999994e-05, 5.304199999999967e-05, 5.591700000000255e-05, 5.49869999999994e-05, 5.387500000000184e-05, 5.205499999999877e-05, 5.3999999999998494e-05, 5.58749999999969e-05, 5.205599999999824e-05, 5.5791999999998954e-05, 5.680500000000005e-05, 5.305499999999977e-05, 4.908299999999838e-05]</msg>
<status status="PASS" starttime="20201112 09:54:26.968" endtime="20201112 09:54:26.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.964" endtime="20201112 09:54:26.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.973" endtime="20201112 09:54:26.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:26.977" endtime="20201112 09:54:26.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.975" endtime="20201112 09:54:26.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.971" endtime="20201112 09:54:26.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.600" endtime="20201112 09:54:26.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.600" endtime="20201112 09:54:26.998"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.006" endtime="20201112 09:54:27.027"></status>
</kw>
<msg timestamp="20201112 09:54:27.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.005" endtime="20201112 09:54:27.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.029" endtime="20201112 09:54:27.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.031" endtime="20201112 09:54:27.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.002" endtime="20201112 09:54:27.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.000" endtime="20201112 09:54:27.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.041" endtime="20201112 09:54:27.326"></status>
</kw>
<msg timestamp="20201112 09:54:27.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022801403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022867833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:27.040" endtime="20201112 09:54:27.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022801403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022867833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:27.333" endtime="20201112 09:54:27.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.341" endtime="20201112 09:54:27.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.037" endtime="20201112 09:54:27.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.036" endtime="20201112 09:54:27.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:27.348" level="INFO">${RESULT} = [{'time': 0.022867833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.642999999999927e-05, 'source_diff': 6.642999999999927e-05}, {'time': 0.022928625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:27.345" endtime="20201112 09:54:27.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:27.362" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:27.349" endtime="20201112 09:54:27.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.367" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 09:54:27.366" endtime="20201112 09:54:27.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.369" level="INFO">VALUE: [6.642999999999927e-05, 5.493100000000112e-05, 5.1971999999997354e-05, 5.105600000000071e-05, 5.293099999999912e-05, 5.4972000000000354e-05, 5.588899999999994e-05, 5.494500000000069e-05, 5.288900000000041e-05, 5.30280000000001e-05, 5.4957999999997315e-05, 5.012500000000156e-05, 5.388900000000141e-05, 5.109699999999995e-05, 5.3930000000000644e-05, 5.099999999999896e-05, 5.211100000000052e-05, 5.209700000000095e-05, 5.48479999999997e-05, 5.206900000000181e-05, 5.298600000000139e-05, 5.005599999999971e-05, 5.686099999999833e-05, 5.580499999999905e-05, 5.111099999999952e-05, 5.591699999999908e-05, 5.008299999999938e-05, 5.013900000000113e-05, 5.2943999999999214e-05, 5.212500000000009e-05, 5.106899999999734e-05, 5.683399999999866e-05, 5.4943999999997745e-05, 5.108300000000038e-05, 5.199999999999996e-05, 5.400000000000196e-05, 5.300000000000096e-05, 5.102800000000157e-05, 5.30280000000001e-05, 5.209700000000095e-05, 5.112499999999909e-05, 5.104199999999767e-05, 5.591699999999908e-05, 5.300000000000096e-05, 5.102800000000157e-05, 5.3999999999998494e-05, 5.293099999999912e-05, 5.205600000000171e-05, 5.588899999999994e-05, 5.3013999999997063e-05]</msg>
<status status="PASS" starttime="20201112 09:54:27.368" endtime="20201112 09:54:27.370"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.363" endtime="20201112 09:54:27.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.373" endtime="20201112 09:54:27.374"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:27.376" endtime="20201112 09:54:27.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.375" endtime="20201112 09:54:27.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.371" endtime="20201112 09:54:27.397"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.999" endtime="20201112 09:54:27.397"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.998" endtime="20201112 09:54:27.397"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.406" endtime="20201112 09:54:27.430"></status>
</kw>
<msg timestamp="20201112 09:54:27.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.404" endtime="20201112 09:54:27.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.431" endtime="20201112 09:54:27.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.434" endtime="20201112 09:54:27.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.402" endtime="20201112 09:54:27.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.400" endtime="20201112 09:54:27.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.443" endtime="20201112 09:54:27.728"></status>
</kw>
<msg timestamp="20201112 09:54:27.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025132611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025192333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:27.442" endtime="20201112 09:54:27.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025132611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025192333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:27.732" endtime="20201112 09:54:27.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.741" endtime="20201112 09:54:27.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.439" endtime="20201112 09:54:27.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.438" endtime="20201112 09:54:27.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:27.747" level="INFO">${RESULT} = [{'time': 0.025192333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9722000000001635e-05, 'source_diff': 5.9722000000001635e-05}, {'time': 0.025253556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:27.744" endtime="20201112 09:54:27.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:27.760" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:27.748" endtime="20201112 09:54:27.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.765" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 09:54:27.764" endtime="20201112 09:54:27.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.767" level="INFO">VALUE: [5.9722000000001635e-05, 5.304199999999967e-05, 5.584699999999776e-05, 5.300000000000096e-05, 5.205599999999824e-05, 5.3916000000001074e-05, 5.294499999999869e-05, 5.01530000000007e-05, 5.398600000000239e-05, 5.583300000000166e-05, 5.4915999999998605e-05, 5.5929999999999175e-05, 5.401400000000153e-05, 5.400000000000196e-05, 5.30280000000001e-05, 5.008299999999938e-05, 5.204100000000267e-05, 5.205499999999877e-05, 5.106899999999734e-05, 5.109699999999995e-05, 5.108300000000038e-05, 5.48479999999997e-05, 5.583399999999766e-05, 5.583299999999819e-05, 5.584699999999776e-05, 5.209800000000042e-05, 5.4943999999997745e-05, 5.581899999999862e-05, 5.301400000000053e-05, 5.30280000000001e-05, 5.305499999999977e-05, 5.211100000000052e-05, 5.494500000000069e-05, 5.201399999999953e-05, 5.395899999999926e-05, 5.401400000000153e-05, 5.01530000000007e-05, 5.388900000000141e-05, 5.298600000000139e-05, 5.304199999999967e-05, 5.487499999999937e-05, 5.4915999999998605e-05, 5.112499999999909e-05, 5.588899999999994e-05, 5.487499999999937e-05, 5.012500000000156e-05, 5.300000000000096e-05, 5.213899999999966e-05, 5.204200000000214e-05, 5.109699999999995e-05]</msg>
<status status="PASS" starttime="20201112 09:54:27.766" endtime="20201112 09:54:27.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.761" endtime="20201112 09:54:27.769"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.771" endtime="20201112 09:54:27.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:27.774" endtime="20201112 09:54:27.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.773" endtime="20201112 09:54:27.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.769" endtime="20201112 09:54:27.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.398" endtime="20201112 09:54:27.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.398" endtime="20201112 09:54:27.795"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.804" endtime="20201112 09:54:27.826"></status>
</kw>
<msg timestamp="20201112 09:54:27.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.802" endtime="20201112 09:54:27.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.827" endtime="20201112 09:54:27.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.830" endtime="20201112 09:54:27.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.800" endtime="20201112 09:54:27.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.798" endtime="20201112 09:54:27.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.840" endtime="20201112 09:54:28.125"></status>
</kw>
<msg timestamp="20201112 09:54:28.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023830042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023885833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:27.838" endtime="20201112 09:54:28.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023830042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023885833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:28.129" endtime="20201112 09:54:28.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.138" endtime="20201112 09:54:28.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.836" endtime="20201112 09:54:28.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.834" endtime="20201112 09:54:28.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:28.144" level="INFO">${RESULT} = [{'time': 0.023885833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.579099999999948e-05, 'source_diff': 5.579099999999948e-05}, {'time': 0.023946681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:28.141" endtime="20201112 09:54:28.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:28.158" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:28.145" endtime="20201112 09:54:28.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.163" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 09:54:28.161" endtime="20201112 09:54:28.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.165" level="INFO">VALUE: [5.579099999999948e-05, 5.494500000000069e-05, 5.013900000000113e-05, 5.3999999999998494e-05, 5.4915999999998605e-05, 5.205600000000171e-05, 4.912500000000056e-05, 5.4929999999998175e-05, 5.30280000000001e-05, 5.405500000000077e-05, 5.305599999999924e-05, 5.4958000000000784e-05, 5.207000000000128e-05, 5.301400000000053e-05, 5.397200000000282e-05, 5.581900000000209e-05, 5.308400000000185e-05, 5.213899999999966e-05, 5.400000000000196e-05, 5.4944000000001214e-05, 5.4944000000001214e-05, 5.113900000000213e-05, 5.304199999999967e-05, 5.494500000000069e-05, 5.112500000000256e-05, 5.206999999999781e-05, 5.676300000000134e-05, 5.208300000000138e-05, 5.113900000000213e-05, 5.204200000000214e-05, 5.006899999999981e-05, 5.111099999999952e-05, 5.3999999999998494e-05, 5.30410000000002e-05, 4.911099999999752e-05, 5.295899999999826e-05, 5.494500000000069e-05, 5.11669999999978e-05, 5.4013999999998064e-05, 5.208299999999791e-05, 5.484700000000023e-05, 5.109699999999995e-05, 5.5915999999999605e-05, 5.206899999999834e-05, 5.3999999999998494e-05, 5.301400000000053e-05, 5.6777999999996914e-05, 5.113899999999866e-05, 5.015299999999723e-05, 5.206900000000181e-05]</msg>
<status status="PASS" starttime="20201112 09:54:28.164" endtime="20201112 09:54:28.166"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.159" endtime="20201112 09:54:28.166"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.169" endtime="20201112 09:54:28.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:28.172" endtime="20201112 09:54:28.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.170" endtime="20201112 09:54:28.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.167" endtime="20201112 09:54:28.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.796" endtime="20201112 09:54:28.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.796" endtime="20201112 09:54:28.194"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.203" endtime="20201112 09:54:28.223"></status>
</kw>
<msg timestamp="20201112 09:54:28.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:28.201" endtime="20201112 09:54:28.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:28.225" endtime="20201112 09:54:28.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.227" endtime="20201112 09:54:28.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.198" endtime="20201112 09:54:28.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.196" endtime="20201112 09:54:28.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.238" endtime="20201112 09:54:28.524"></status>
</kw>
<msg timestamp="20201112 09:54:28.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023217403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023280931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:28.236" endtime="20201112 09:54:28.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023217403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023280931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:28.528" endtime="20201112 09:54:28.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.537" endtime="20201112 09:54:28.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.233" endtime="20201112 09:54:28.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.232" endtime="20201112 09:54:28.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:28.543" level="INFO">${RESULT} = [{'time': 0.023280931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.35280000000002e-05, 'source_diff': 6.35280000000002e-05}, {'time': 0.023341875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:28.540" endtime="20201112 09:54:28.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:28.557" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:28.545" endtime="20201112 09:54:28.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.561" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 09:54:28.560" endtime="20201112 09:54:28.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.564" level="INFO">VALUE: [6.35280000000002e-05, 5.016700000000027e-05, 5.2999999999997494e-05, 5.30280000000001e-05, 5.112499999999909e-05, 5.205599999999824e-05, 5.206900000000181e-05, 5.494499999999722e-05, 5.206900000000181e-05, 5.113900000000213e-05, 5.683400000000213e-05, 5.4944000000001214e-05, 5.3971999999999354e-05, 5.304199999999967e-05, 5.109799999999942e-05, 5.012500000000156e-05, 5.591699999999908e-05, 5.5943999999998745e-05, 5.3985999999998924e-05, 5.3985999999998924e-05, 5.015200000000122e-05, 5.111100000000299e-05, 5.112499999999909e-05, 5.304199999999967e-05, 5.590299999999951e-05, 5.301400000000053e-05, 5.4887999999999465e-05, 5.301400000000053e-05, 5.590299999999951e-05, 5.20279999999991e-05, 5.109699999999995e-05, 5.109699999999995e-05, 5.109699999999995e-05, 5.304199999999967e-05, 5.5902000000000035e-05, 5.206899999999834e-05, 5.016700000000027e-05, 5.3944000000000214e-05, 5.112499999999909e-05, 5.3971999999999354e-05, 5.3944000000000214e-05, 5.309699999999848e-05, 5.30410000000002e-05, 5.206900000000181e-05, 5.39869999999984e-05, 5.300000000000096e-05, 5.302700000000063e-05, 5.301300000000106e-05, 4.920800000000197e-05, 5.20279999999991e-05]</msg>
<status status="PASS" starttime="20201112 09:54:28.562" endtime="20201112 09:54:28.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.558" endtime="20201112 09:54:28.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.567" endtime="20201112 09:54:28.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:28.571" endtime="20201112 09:54:28.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.569" endtime="20201112 09:54:28.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.566" endtime="20201112 09:54:28.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.195" endtime="20201112 09:54:28.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.194" endtime="20201112 09:54:28.592"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.600" endtime="20201112 09:54:28.622"></status>
</kw>
<msg timestamp="20201112 09:54:28.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:28.599" endtime="20201112 09:54:28.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:28.623" endtime="20201112 09:54:28.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.626" endtime="20201112 09:54:28.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.596" endtime="20201112 09:54:28.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.594" endtime="20201112 09:54:28.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.636" endtime="20201112 09:54:28.922"></status>
</kw>
<msg timestamp="20201112 09:54:28.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021300153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021363681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:28.634" endtime="20201112 09:54:28.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021300153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021363681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:28.926" endtime="20201112 09:54:28.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.934" endtime="20201112 09:54:28.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.631" endtime="20201112 09:54:28.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.630" endtime="20201112 09:54:28.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:28.941" level="INFO">${RESULT} = [{'time': 0.021363681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.35280000000002e-05, 'source_diff': 6.35280000000002e-05}, {'time': 0.021425167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:28.938" endtime="20201112 09:54:28.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:28.955" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:28.942" endtime="20201112 09:54:28.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.960" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 09:54:28.959" endtime="20201112 09:54:28.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.962" level="INFO">VALUE: [6.35280000000002e-05, 5.108399999999985e-05, 5.591699999999908e-05, 5.487499999999937e-05, 5.494500000000069e-05, 5.305599999999924e-05, 5.297200000000182e-05, 5.4943999999997745e-05, 5.593100000000212e-05, 5.391700000000055e-05, 5.5888000000000465e-05, 5.4958000000000784e-05, 5.391700000000055e-05, 5.109699999999995e-05, 5.105499999999777e-05, 5.109799999999942e-05, 5.016700000000027e-05, 5.295900000000173e-05, 5.206999999999781e-05, 5.2943999999999214e-05, 5.588899999999994e-05, 4.9209000000001446e-05, 5.48609999999998e-05, 5.591699999999908e-05, 5.199999999999996e-05, 5.012499999999809e-05, 5.4972000000000354e-05, 5.209699999999748e-05, 5.490299999999851e-05, 5.016700000000027e-05, 5.300000000000096e-05, 5.5805999999998523e-05, 5.30280000000001e-05, 5.106900000000081e-05, 5.390300000000098e-05, 5.5888000000000465e-05, 5.008400000000232e-05, 5.2999999999997494e-05, 5.302700000000063e-05, 5.101399999999853e-05, 5.01530000000007e-05, 5.681899999999962e-05, 5.111099999999952e-05, 5.2014000000003e-05, 5.206899999999834e-05, 5.293099999999912e-05, 5.207000000000128e-05, 5.593099999999865e-05, 5.207000000000128e-05, 5.009699999999895e-05]</msg>
<status status="PASS" starttime="20201112 09:54:28.961" endtime="20201112 09:54:28.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.956" endtime="20201112 09:54:28.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.966" endtime="20201112 09:54:28.967"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:28.970" endtime="20201112 09:54:28.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.968" endtime="20201112 09:54:28.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.964" endtime="20201112 09:54:28.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.593" endtime="20201112 09:54:28.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.592" endtime="20201112 09:54:28.990"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.999" endtime="20201112 09:54:29.022"></status>
</kw>
<msg timestamp="20201112 09:54:29.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:28.998" endtime="20201112 09:54:29.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.023" endtime="20201112 09:54:29.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.026" endtime="20201112 09:54:29.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.995" endtime="20201112 09:54:29.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.993" endtime="20201112 09:54:29.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.036" endtime="20201112 09:54:29.320"></status>
</kw>
<msg timestamp="20201112 09:54:29.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024507917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024573333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:29.034" endtime="20201112 09:54:29.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024507917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024573333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:29.324" endtime="20201112 09:54:29.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.333" endtime="20201112 09:54:29.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.032" endtime="20201112 09:54:29.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.030" endtime="20201112 09:54:29.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:29.339" level="INFO">${RESULT} = [{'time': 0.024573333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.54159999999987e-05, 'source_diff': 6.54159999999987e-05}, {'time': 0.024634514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:29.336" endtime="20201112 09:54:29.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:29.353" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:29.340" endtime="20201112 09:54:29.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.357" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 09:54:29.356" endtime="20201112 09:54:29.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.360" level="INFO">VALUE: [6.54159999999987e-05, 5.20279999999991e-05, 5.300000000000096e-05, 5.3985999999998924e-05, 5.3013999999997063e-05, 5.012499999999809e-05, 5.3971999999999354e-05, 5.3971999999999354e-05, 5.022200000000254e-05, 5.495900000000026e-05, 5.401400000000153e-05, 5.111099999999952e-05, 5.013900000000113e-05, 5.40280000000011e-05, 5.491699999999808e-05, 5.587500000000037e-05, 5.3999999999998494e-05, 5.587500000000037e-05, 5.206999999999781e-05, 5.302700000000063e-05, 5.309700000000195e-05, 5.3999999999998494e-05, 5.113899999999866e-05, 5.686099999999833e-05, 5.108300000000038e-05, 5.397299999999883e-05, 5.486199999999927e-05, 5.205600000000171e-05, 5.3013999999997063e-05, 5.409799999999895e-05, 5.111099999999952e-05, 5.023599999999864e-05, 5.01530000000007e-05, 5.206900000000181e-05, 5.118099999999737e-05, 4.917999999999936e-05, 5.300000000000096e-05, 5.21669999999988e-05, 5.111100000000299e-05, 5.588899999999994e-05, 5.111099999999952e-05, 5.016600000000079e-05, 5.016700000000027e-05, 5.109799999999942e-05, 5.294500000000216e-05, 5.594499999999822e-05, 5.505600000000124e-05, 5.013899999999766e-05, 5.016600000000079e-05, 5.3985999999998924e-05]</msg>
<status status="PASS" starttime="20201112 09:54:29.358" endtime="20201112 09:54:29.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.354" endtime="20201112 09:54:29.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.363" endtime="20201112 09:54:29.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:29.367" endtime="20201112 09:54:29.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.365" endtime="20201112 09:54:29.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.362" endtime="20201112 09:54:29.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.991" endtime="20201112 09:54:29.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.991" endtime="20201112 09:54:29.388"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.397" endtime="20201112 09:54:29.418"></status>
</kw>
<msg timestamp="20201112 09:54:29.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.395" endtime="20201112 09:54:29.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.420" endtime="20201112 09:54:29.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.422" endtime="20201112 09:54:29.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.392" endtime="20201112 09:54:29.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.390" endtime="20201112 09:54:29.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.432" endtime="20201112 09:54:29.718"></status>
</kw>
<msg timestamp="20201112 09:54:29.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024102403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024151694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:29.431" endtime="20201112 09:54:29.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024102403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024151694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:29.722" endtime="20201112 09:54:29.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.730" endtime="20201112 09:54:29.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.428" endtime="20201112 09:54:29.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.427" endtime="20201112 09:54:29.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:29.737" level="INFO">${RESULT} = [{'time': 0.024151694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.929099999999992e-05, 'source_diff': 4.929099999999992e-05}, {'time': 0.024213403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:29.734" endtime="20201112 09:54:29.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:29.750" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:29.738" endtime="20201112 09:54:29.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.755" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 09:54:29.754" endtime="20201112 09:54:29.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.757" level="INFO">VALUE: [4.929099999999992e-05, 5.388900000000141e-05, 5.111099999999952e-05, 5.495900000000026e-05, 5.304199999999967e-05, 5.5929999999999175e-05, 5.4930000000001644e-05, 5.302700000000063e-05, 5.493100000000112e-05, 5.206899999999834e-05, 5.591699999999908e-05, 5.494500000000069e-05, 5.488899999999894e-05, 5.022200000000254e-05, 5.301400000000053e-05, 5.019399999999993e-05, 5.587500000000037e-05, 5.112499999999909e-05, 5.109699999999995e-05, 5.68749999999979e-05, 5.300000000000096e-05, 5.590299999999951e-05, 5.40410000000012e-05, 5.113900000000213e-05, 5.208400000000085e-05, 5.394499999999969e-05, 5.3999999999998494e-05, 5.587500000000037e-05, 5.4901999999999035e-05, 5.111099999999952e-05, 5.400000000000196e-05, 5.3971999999999354e-05, 5.208300000000138e-05, 5.208400000000085e-05, 5.016600000000079e-05, 5.5915999999999605e-05, 5.397299999999883e-05, 5.105599999999724e-05, 5.4901999999999035e-05, 5.205499999999877e-05, 5.3999999999998494e-05, 5.301400000000053e-05, 5.018099999999984e-05, 5.201300000000006e-05, 5.593099999999865e-05, 5.112499999999909e-05, 5.206900000000181e-05, 5.208300000000138e-05, 5.493100000000112e-05, 5.4930000000001644e-05]</msg>
<status status="PASS" starttime="20201112 09:54:29.756" endtime="20201112 09:54:29.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.751" endtime="20201112 09:54:29.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.761" endtime="20201112 09:54:29.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:29.764" endtime="20201112 09:54:29.784"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.763" endtime="20201112 09:54:29.784"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.759" endtime="20201112 09:54:29.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.389" endtime="20201112 09:54:29.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.388" endtime="20201112 09:54:29.785"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.794" endtime="20201112 09:54:29.815"></status>
</kw>
<msg timestamp="20201112 09:54:29.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.792" endtime="20201112 09:54:29.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.817" endtime="20201112 09:54:29.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.819" endtime="20201112 09:54:29.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.790" endtime="20201112 09:54:29.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.788" endtime="20201112 09:54:29.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.829" endtime="20201112 09:54:30.115"></status>
</kw>
<msg timestamp="20201112 09:54:30.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023473417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023516847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:29.828" endtime="20201112 09:54:30.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023473417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023516847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:30.119" endtime="20201112 09:54:30.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.128" endtime="20201112 09:54:30.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.825" endtime="20201112 09:54:30.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.823" endtime="20201112 09:54:30.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:30.135" level="INFO">${RESULT} = [{'time': 0.023516847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.343000000000055e-05, 'source_diff': 4.343000000000055e-05}, {'time': 0.023577681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:30.131" endtime="20201112 09:54:30.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:30.149" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:30.136" endtime="20201112 09:54:30.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.153" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 09:54:30.152" endtime="20201112 09:54:30.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.156" level="INFO">VALUE: [4.343000000000055e-05, 5.39869999999984e-05, 5.112500000000256e-05, 5.112499999999909e-05, 5.588899999999994e-05, 5.584700000000123e-05, 5.583299999999819e-05, 5.112499999999909e-05, 5.4999999999999494e-05, 5.111099999999952e-05, 5.591699999999908e-05, 5.205600000000171e-05, 5.111099999999952e-05, 5.099999999999896e-05, 5.212500000000009e-05, 5.4944000000001214e-05, 5.3999999999998494e-05, 5.491699999999808e-05, 5.108300000000038e-05, 5.401400000000153e-05, 5.013900000000113e-05, 5.300000000000096e-05, 5.206999999999781e-05, 5.015299999999723e-05, 5.681899999999962e-05, 5.487499999999937e-05, 5.495900000000026e-05, 5.3944000000000214e-05, 5.488899999999894e-05, 5.300000000000096e-05, 5.393100000000012e-05, 5.3930000000000644e-05, 5.109799999999942e-05, 5.494500000000069e-05, 5.009699999999895e-05, 5.490299999999851e-05, 5.0151999999997754e-05, 5.48609999999998e-05, 5.2014000000003e-05, 5.111099999999952e-05, 5.404200000000067e-05, 5.293099999999912e-05, 5.306999999999881e-05, 5.400000000000196e-05, 5.583299999999819e-05, 5.30280000000001e-05, 5.587500000000037e-05, 5.006899999999981e-05, 5.013900000000113e-05, 5.4916000000002074e-05]</msg>
<status status="PASS" starttime="20201112 09:54:30.154" endtime="20201112 09:54:30.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.150" endtime="20201112 09:54:30.157"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.159" endtime="20201112 09:54:30.161"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:30.163" endtime="20201112 09:54:30.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.161" endtime="20201112 09:54:30.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.158" endtime="20201112 09:54:30.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.786" endtime="20201112 09:54:30.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.786" endtime="20201112 09:54:30.184"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.192" endtime="20201112 09:54:30.213"></status>
</kw>
<msg timestamp="20201112 09:54:30.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.191" endtime="20201112 09:54:30.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.214" endtime="20201112 09:54:30.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.217" endtime="20201112 09:54:30.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.188" endtime="20201112 09:54:30.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.186" endtime="20201112 09:54:30.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.227" endtime="20201112 09:54:30.513"></status>
</kw>
<msg timestamp="20201112 09:54:30.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022054028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:30.225" endtime="20201112 09:54:30.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022054028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:30.517" endtime="20201112 09:54:30.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.525" endtime="20201112 09:54:30.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.223" endtime="20201112 09:54:30.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.221" endtime="20201112 09:54:30.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:30.531" level="INFO">${RESULT} = [{'time': 0.022118528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.449999999999859e-05, 'source_diff': 6.449999999999859e-05}, {'time': 0.022179597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:30.528" endtime="20201112 09:54:30.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:30.546" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:30.532" endtime="20201112 09:54:30.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.550" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 09:54:30.549" endtime="20201112 09:54:30.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.553" level="INFO">VALUE: [6.449999999999859e-05, 5.109699999999995e-05, 5.304199999999967e-05, 5.113899999999866e-05, 5.30280000000001e-05, 5.209700000000095e-05, 5.209800000000042e-05, 5.209699999999748e-05, 5.484700000000023e-05, 5.493099999999765e-05, 5.4985999999999924e-05, 5.493100000000112e-05, 5.206999999999781e-05, 5.208299999999791e-05, 5.493100000000112e-05, 5.398600000000239e-05, 5.590300000000298e-05, 5.4958000000000784e-05, 5.30280000000001e-05, 5.388899999999794e-05, 5.113899999999866e-05, 5.305500000000324e-05, 5.016600000000079e-05, 5.206899999999834e-05, 5.305599999999924e-05, 5.590299999999951e-05, 5.4944000000001214e-05, 5.304199999999967e-05, 5.2138000000000184e-05, 5.579099999999948e-05, 5.199999999999996e-05, 5.302699999999716e-05, 5.3971999999999354e-05, 5.5915999999999605e-05, 5.013900000000113e-05, 5.3957999999999784e-05, 4.920800000000197e-05, 5.009699999999895e-05, 5.4972000000000354e-05, 5.016700000000027e-05, 5.301400000000053e-05, 5.112499999999909e-05, 5.3971999999999354e-05, 5.38609999999988e-05, 5.5929999999999175e-05, 5.304199999999967e-05, 5.39730000000023e-05, 5.400000000000196e-05, 5.006999999999928e-05, 5.4972000000000354e-05]</msg>
<status status="PASS" starttime="20201112 09:54:30.551" endtime="20201112 09:54:30.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.547" endtime="20201112 09:54:30.554"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.556" endtime="20201112 09:54:30.558"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:30.560" endtime="20201112 09:54:30.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.558" endtime="20201112 09:54:30.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.555" endtime="20201112 09:54:30.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.185" endtime="20201112 09:54:30.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.184" endtime="20201112 09:54:30.581"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.589" endtime="20201112 09:54:30.609"></status>
</kw>
<msg timestamp="20201112 09:54:30.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.588" endtime="20201112 09:54:30.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.611" endtime="20201112 09:54:30.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.613" endtime="20201112 09:54:30.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.585" endtime="20201112 09:54:30.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.583" endtime="20201112 09:54:30.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.623" endtime="20201112 09:54:30.908"></status>
</kw>
<msg timestamp="20201112 09:54:30.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021940736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:30.622" endtime="20201112 09:54:30.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021940736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:30.912" endtime="20201112 09:54:30.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.921" endtime="20201112 09:54:30.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.619" endtime="20201112 09:54:30.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.618" endtime="20201112 09:54:30.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:30.927" level="INFO">${RESULT} = [{'time': 0.021940736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.480499999999805e-05, 'source_diff': 5.480499999999805e-05}, {'time': 0.022002417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:30.924" endtime="20201112 09:54:30.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:30.940" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:30.928" endtime="20201112 09:54:30.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.945" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 09:54:30.944" endtime="20201112 09:54:30.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.947" level="INFO">VALUE: [5.480499999999805e-05, 5.495900000000026e-05, 5.3985999999998924e-05, 5.4944000000001214e-05, 5.2929999999999644e-05, 5.01530000000007e-05, 5.304199999999967e-05, 5.291699999999955e-05, 5.108300000000038e-05, 5.304199999999967e-05, 5.501299999999959e-05, 5.198600000000039e-05, 5.30280000000001e-05, 5.30410000000002e-05, 5.194400000000168e-05, 5.590299999999951e-05, 5.397299999999883e-05, 5.018099999999984e-05, 5.4957999999997315e-05, 5.580499999999905e-05, 5.107000000000028e-05, 5.2999999999997494e-05, 5.491699999999808e-05, 5.68610000000018e-05, 5.4999999999999494e-05, 5.204199999999867e-05, 5.105500000000124e-05, 5.205499999999877e-05, 5.3971999999999354e-05, 5.109699999999995e-05, 5.3013999999997063e-05, 5.3901999999998035e-05, 5.490299999999851e-05, 5.3930000000000644e-05, 5.398600000000239e-05, 5.591699999999908e-05, 5.38609999999988e-05, 5.018099999999984e-05, 5.30280000000001e-05, 5.205599999999824e-05, 5.491700000000155e-05, 5.008300000000285e-05, 5.113900000000213e-05, 5.5902000000000035e-05, 5.493100000000112e-05, 5.095899999999973e-05, 5.583300000000166e-05, 5.495900000000026e-05, 5.588899999999994e-05, 5.291699999999955e-05]</msg>
<status status="PASS" starttime="20201112 09:54:30.946" endtime="20201112 09:54:30.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.941" endtime="20201112 09:54:30.949"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.951" endtime="20201112 09:54:30.952"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:30.955" endtime="20201112 09:54:30.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.953" endtime="20201112 09:54:30.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.949" endtime="20201112 09:54:30.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.582" endtime="20201112 09:54:30.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.581" endtime="20201112 09:54:30.976"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.984" endtime="20201112 09:54:31.006"></status>
</kw>
<msg timestamp="20201112 09:54:31.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.983" endtime="20201112 09:54:31.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.008" endtime="20201112 09:54:31.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.010" endtime="20201112 09:54:31.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.980" endtime="20201112 09:54:31.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.978" endtime="20201112 09:54:31.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.020" endtime="20201112 09:54:31.306"></status>
</kw>
<msg timestamp="20201112 09:54:31.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023869292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023930944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:31.019" endtime="20201112 09:54:31.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023869292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023930944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:31.310" endtime="20201112 09:54:31.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.319" endtime="20201112 09:54:31.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.016" endtime="20201112 09:54:31.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.015" endtime="20201112 09:54:31.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:31.325" level="INFO">${RESULT} = [{'time': 0.023930944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.165199999999885e-05, 'source_diff': 6.165199999999885e-05}, {'time': 0.023991236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:31.322" endtime="20201112 09:54:31.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:31.339" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:31.326" endtime="20201112 09:54:31.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.343" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 09:54:31.342" endtime="20201112 09:54:31.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.345" level="INFO">VALUE: [6.165199999999885e-05, 4.919399999999893e-05, 5.582000000000156e-05, 5.109800000000289e-05, 5.583299999999819e-05, 5.594499999999822e-05, 5.009699999999895e-05, 5.2014000000003e-05, 5.116700000000127e-05, 5.590300000000298e-05, 5.104200000000114e-05, 5.201399999999953e-05, 5.390299999999751e-05, 5.4930000000001644e-05, 5.588899999999994e-05, 5.295800000000225e-05, 5.108399999999985e-05, 5.108300000000038e-05, 5.387500000000184e-05, 5.495900000000026e-05, 5.587500000000037e-05, 5.108300000000038e-05, 5.487499999999937e-05, 5.113899999999866e-05, 5.3985999999998924e-05, 5.201399999999953e-05, 5.584700000000123e-05, 5.588899999999994e-05, 5.104100000000167e-05, 5.301400000000053e-05, 5.5902000000000035e-05, 5.201399999999953e-05, 5.391700000000055e-05, 5.587500000000037e-05, 5.583400000000113e-05, 5.490299999999851e-05, 5.483400000000013e-05, 5.199999999999996e-05, 5.588899999999994e-05, 5.48609999999998e-05, 5.2971999999998354e-05, 5.586099999999733e-05, 5.198600000000039e-05, 5.39730000000023e-05, 5.491699999999808e-05, 5.386100000000227e-05, 5.298600000000139e-05, 5.2971999999998354e-05, 5.3971999999999354e-05, 5.106900000000081e-05]</msg>
<status status="PASS" starttime="20201112 09:54:31.344" endtime="20201112 09:54:31.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.339" endtime="20201112 09:54:31.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.349" endtime="20201112 09:54:31.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:31.352" endtime="20201112 09:54:31.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.351" endtime="20201112 09:54:31.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.347" endtime="20201112 09:54:31.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.976" endtime="20201112 09:54:31.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.976" endtime="20201112 09:54:31.373"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.382" endtime="20201112 09:54:31.403"></status>
</kw>
<msg timestamp="20201112 09:54:31.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.380" endtime="20201112 09:54:31.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.404" endtime="20201112 09:54:31.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.407" endtime="20201112 09:54:31.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.378" endtime="20201112 09:54:31.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.376" endtime="20201112 09:54:31.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.417" endtime="20201112 09:54:31.702"></status>
</kw>
<msg timestamp="20201112 09:54:31.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022924319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022990722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:31.415" endtime="20201112 09:54:31.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022924319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022990722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:31.706" endtime="20201112 09:54:31.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.714" endtime="20201112 09:54:31.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.413" endtime="20201112 09:54:31.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.411" endtime="20201112 09:54:31.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:31.721" level="INFO">${RESULT} = [{'time': 0.022990722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.640300000000307e-05, 'source_diff': 6.640300000000307e-05}, {'time': 0.023051167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:31.718" endtime="20201112 09:54:31.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:31.734" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:31.722" endtime="20201112 09:54:31.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.739" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 09:54:31.738" endtime="20201112 09:54:31.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.741" level="INFO">VALUE: [6.640300000000307e-05, 5.398600000000239e-05, 5.2957999999998784e-05, 5.4958000000000784e-05, 5.3999999999998494e-05, 5.587500000000037e-05, 5.009699999999895e-05, 5.68749999999979e-05, 5.112499999999909e-05, 5.198600000000039e-05, 5.3985999999998924e-05, 5.208300000000138e-05, 5.484700000000023e-05, 5.39730000000023e-05, 5.207000000000128e-05, 5.398600000000239e-05, 5.005500000000024e-05, 5.397200000000282e-05, 5.30280000000001e-05, 5.294499999999869e-05, 5.015200000000122e-05, 5.5902000000000035e-05, 5.404200000000067e-05, 5.195800000000125e-05, 5.3999999999998494e-05, 5.5805999999998523e-05, 5.3999999999998494e-05, 5.401400000000153e-05, 5.099999999999896e-05, 5.597300000000083e-05, 5.481999999999709e-05, 5.015299999999723e-05, 5.4958000000000784e-05, 5.593100000000212e-05, 5.484700000000023e-05, 5.591700000000255e-05, 5.390300000000098e-05, 5.30280000000001e-05, 5.688899999999747e-05, 5.493100000000112e-05, 5.1971999999997354e-05, 5.112499999999909e-05, 5.111099999999952e-05, 5.018099999999984e-05, 5.204199999999867e-05, 5.676300000000134e-05, 5.016700000000027e-05, 5.30410000000002e-05, 5.202699999999963e-05, 5.00409999999972e-05]</msg>
<status status="PASS" starttime="20201112 09:54:31.740" endtime="20201112 09:54:31.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.735" endtime="20201112 09:54:31.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.745" endtime="20201112 09:54:31.747"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:31.749" endtime="20201112 09:54:31.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.747" endtime="20201112 09:54:31.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.743" endtime="20201112 09:54:31.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.374" endtime="20201112 09:54:31.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.374" endtime="20201112 09:54:31.770"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.778" endtime="20201112 09:54:31.805"></status>
</kw>
<msg timestamp="20201112 09:54:31.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.777" endtime="20201112 09:54:31.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.806" endtime="20201112 09:54:31.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.808" endtime="20201112 09:54:31.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.774" endtime="20201112 09:54:31.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.772" endtime="20201112 09:54:31.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.819" endtime="20201112 09:54:32.104"></status>
</kw>
<msg timestamp="20201112 09:54:32.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0235955, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023637056, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:31.817" endtime="20201112 09:54:32.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0235955, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023637056, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:32.108" endtime="20201112 09:54:32.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.116" endtime="20201112 09:54:32.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.814" endtime="20201112 09:54:32.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.813" endtime="20201112 09:54:32.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:32.123" level="INFO">${RESULT} = [{'time': 0.023637056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.155600000000162e-05, 'source_diff': 4.155600000000162e-05}, {'time': 0.023698222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:32.119" endtime="20201112 09:54:32.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:32.137" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:32.124" endtime="20201112 09:54:32.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.141" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 09:54:32.140" endtime="20201112 09:54:32.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.144" level="INFO">VALUE: [4.155600000000162e-05, 5.484700000000023e-05, 5.206900000000181e-05, 5.095800000000025e-05, 5.109699999999995e-05, 5.30410000000002e-05, 5.5791999999998954e-05, 5.305499999999977e-05, 5.099999999999896e-05, 5.013899999999766e-05, 5.483300000000066e-05, 5.490299999999851e-05, 5.2943999999999214e-05, 5.400000000000196e-05, 5.10270000000021e-05, 5.388899999999794e-05, 5.112499999999909e-05, 5.582000000000156e-05, 5.211100000000052e-05, 5.3902000000001504e-05, 5.581899999999862e-05, 5.4972000000000354e-05, 5.09729999999993e-05, 5.016700000000027e-05, 5.194500000000116e-05, 5.116700000000127e-05, 5.006899999999981e-05, 5.016700000000027e-05, 5.102800000000157e-05, 5.112500000000256e-05, 4.922200000000154e-05, 5.300000000000096e-05, 5.491700000000155e-05, 5.5777999999999384e-05, 5.4972000000000354e-05, 5.197200000000082e-05, 5.112500000000256e-05, 5.584700000000123e-05, 5.208399999999738e-05, 5.199999999999996e-05, 5.39869999999984e-05, 5.480599999999752e-05, 5.304199999999967e-05, 5.008299999999938e-05, 5.302700000000063e-05, 5.483300000000066e-05, 5.108300000000038e-05, 5.102800000000157e-05, 5.01530000000007e-05, 5.38609999999988e-05]</msg>
<status status="PASS" starttime="20201112 09:54:32.143" endtime="20201112 09:54:32.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.138" endtime="20201112 09:54:32.145"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.148" endtime="20201112 09:54:32.149"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:32.151" endtime="20201112 09:54:32.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.149" endtime="20201112 09:54:32.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.146" endtime="20201112 09:54:32.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.771" endtime="20201112 09:54:32.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.770" endtime="20201112 09:54:32.172"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.181" endtime="20201112 09:54:32.203"></status>
</kw>
<msg timestamp="20201112 09:54:32.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.179" endtime="20201112 09:54:32.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.204" endtime="20201112 09:54:32.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.207" endtime="20201112 09:54:32.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.177" endtime="20201112 09:54:32.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.174" endtime="20201112 09:54:32.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.217" endtime="20201112 09:54:32.504"></status>
</kw>
<msg timestamp="20201112 09:54:32.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023378889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023428056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:32.215" endtime="20201112 09:54:32.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023378889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023428056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:32.508" endtime="20201112 09:54:32.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.516" endtime="20201112 09:54:32.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.213" endtime="20201112 09:54:32.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.211" endtime="20201112 09:54:32.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:32.523" level="INFO">${RESULT} = [{'time': 0.023428056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.916699999999927e-05, 'source_diff': 4.916699999999927e-05}, {'time': 0.023489861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:32.520" endtime="20201112 09:54:32.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:32.536" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:32.524" endtime="20201112 09:54:32.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.541" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 09:54:32.540" endtime="20201112 09:54:32.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.543" level="INFO">VALUE: [4.916699999999927e-05, 5.40280000000011e-05, 5.3985999999998924e-05, 5.493099999999765e-05, 5.5915999999999605e-05, 5.112499999999909e-05, 5.113900000000213e-05, 5.30280000000001e-05, 5.013899999999766e-05, 5.018099999999984e-05, 5.116700000000127e-05, 5.209699999999748e-05, 5.208299999999791e-05, 5.388900000000141e-05, 5.013900000000113e-05, 5.30280000000001e-05, 5.5929999999999175e-05, 5.206999999999781e-05, 5.593100000000212e-05, 5.583400000000113e-05, 4.916600000000326e-05, 5.686099999999833e-05, 5.205499999999877e-05, 5.4958000000000784e-05, 5.105600000000071e-05, 5.680500000000005e-05, 5.113900000000213e-05, 5.111099999999952e-05, 5.591699999999908e-05, 5.591699999999908e-05, 5.106900000000081e-05, 5.211100000000052e-05, 5.113899999999866e-05, 5.295800000000225e-05, 5.488899999999894e-05, 5.3985999999998924e-05, 5.591699999999908e-05, 5.30280000000001e-05, 5.4944000000001214e-05, 5.30410000000002e-05, 5.111099999999952e-05, 5.487499999999937e-05, 5.488899999999894e-05, 5.590299999999951e-05, 5.111099999999952e-05, 5.393100000000012e-05, 5.205600000000171e-05, 5.208400000000085e-05, 5.4930000000001644e-05, 5.3985999999998924e-05]</msg>
<status status="PASS" starttime="20201112 09:54:32.542" endtime="20201112 09:54:32.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.537" endtime="20201112 09:54:32.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.547" endtime="20201112 09:54:32.548"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:32.550" endtime="20201112 09:54:32.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.549" endtime="20201112 09:54:32.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.545" endtime="20201112 09:54:32.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.173" endtime="20201112 09:54:32.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.172" endtime="20201112 09:54:32.571"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.580" endtime="20201112 09:54:32.599"></status>
</kw>
<msg timestamp="20201112 09:54:32.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.578" endtime="20201112 09:54:32.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.601" endtime="20201112 09:54:32.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.603" endtime="20201112 09:54:32.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.576" endtime="20201112 09:54:32.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.573" endtime="20201112 09:54:32.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.613" endtime="20201112 09:54:32.898"></status>
</kw>
<msg timestamp="20201112 09:54:32.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020913236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020961486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:32.612" endtime="20201112 09:54:32.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020913236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020961486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:32.902" endtime="20201112 09:54:32.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.911" endtime="20201112 09:54:32.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.609" endtime="20201112 09:54:32.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.607" endtime="20201112 09:54:32.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:32.918" level="INFO">${RESULT} = [{'time': 0.020961486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.824999999999968e-05, 'source_diff': 4.824999999999968e-05}, {'time': 0.021022639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:32.914" endtime="20201112 09:54:32.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:32.931" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:32.919" endtime="20201112 09:54:32.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.935" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 09:54:32.934" endtime="20201112 09:54:32.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.938" level="INFO">VALUE: [4.824999999999968e-05, 5.213899999999966e-05, 5.4901999999999035e-05, 5.111099999999952e-05, 5.294500000000216e-05, 5.01530000000007e-05, 5.112499999999909e-05, 5.012500000000156e-05, 5.205499999999877e-05, 5.113899999999866e-05, 5.311100000000152e-05, 5.01530000000007e-05, 5.293099999999912e-05, 5.304199999999967e-05, 5.298600000000139e-05, 5.593099999999865e-05, 5.01530000000007e-05, 5.48609999999998e-05, 5.301400000000053e-05, 5.009800000000189e-05, 5.5915999999999605e-05, 5.112499999999909e-05, 5.304199999999967e-05, 5.588899999999994e-05, 5.1971999999997354e-05, 5.023600000000211e-05, 5.400000000000196e-05, 5.300000000000096e-05, 5.008400000000232e-05, 5.683299999999919e-05, 4.918000000000283e-05, 5.111099999999952e-05, 5.113899999999866e-05, 5.208399999999738e-05, 5.118000000000136e-05, 5.388900000000141e-05, 5.3985999999998924e-05, 5.30280000000001e-05, 5.112500000000256e-05, 5.013900000000113e-05, 5.588899999999994e-05, 5.207000000000128e-05, 5.012499999999809e-05, 5.2957999999998784e-05, 5.19730000000003e-05, 5.587500000000037e-05, 5.108399999999985e-05, 5.304199999999967e-05, 4.918000000000283e-05, 5.590299999999951e-05]</msg>
<status status="PASS" starttime="20201112 09:54:32.937" endtime="20201112 09:54:32.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.932" endtime="20201112 09:54:32.939"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.941" endtime="20201112 09:54:32.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:32.945" endtime="20201112 09:54:32.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.943" endtime="20201112 09:54:32.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.940" endtime="20201112 09:54:32.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.572" endtime="20201112 09:54:32.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.571" endtime="20201112 09:54:32.966"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.974" endtime="20201112 09:54:32.996"></status>
</kw>
<msg timestamp="20201112 09:54:32.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.973" endtime="20201112 09:54:32.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.998" endtime="20201112 09:54:33.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.000" endtime="20201112 09:54:33.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.970" endtime="20201112 09:54:33.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.968" endtime="20201112 09:54:33.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.011" endtime="20201112 09:54:33.296"></status>
</kw>
<msg timestamp="20201112 09:54:33.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023080278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023134181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:33.009" endtime="20201112 09:54:33.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023080278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023134181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:33.300" endtime="20201112 09:54:33.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.309" endtime="20201112 09:54:33.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.006" endtime="20201112 09:54:33.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.005" endtime="20201112 09:54:33.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:33.315" level="INFO">${RESULT} = [{'time': 0.023134181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.390300000000098e-05, 'source_diff': 5.390300000000098e-05}, {'time': 0.023195681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:33.312" endtime="20201112 09:54:33.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:33.329" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:33.316" endtime="20201112 09:54:33.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.333" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 09:54:33.332" endtime="20201112 09:54:33.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.336" level="INFO">VALUE: [5.390300000000098e-05, 5.495900000000026e-05, 5.3930000000000644e-05, 5.2985999999997924e-05, 5.0179999999996894e-05, 5.593099999999865e-05, 5.488899999999894e-05, 5.3944000000000214e-05, 5.198600000000039e-05, 5.488899999999894e-05, 5.397200000000282e-05, 5.3944000000000214e-05, 5.488899999999894e-05, 5.495900000000026e-05, 5.3957999999999784e-05, 5.3985999999998924e-05, 5.011100000000199e-05, 5.201399999999953e-05, 5.594500000000169e-05, 5.4958000000000784e-05, 5.207000000000128e-05, 5.40280000000011e-05, 5.201399999999953e-05, 5.583300000000166e-05, 5.493100000000112e-05, 5.394499999999969e-05, 5.394499999999969e-05, 5.211199999999999e-05, 5.590299999999951e-05, 5.297200000000182e-05, 5.305499999999977e-05, 5.4944000000001214e-05, 5.49869999999994e-05, 5.405600000000024e-05, 5.58610000000008e-05, 5.3944000000000214e-05, 5.5930000000002644e-05, 5.393100000000012e-05, 5.108300000000038e-05, 5.011100000000199e-05, 5.584699999999776e-05, 5.111099999999952e-05, 5.111100000000299e-05, 5.013899999999766e-05, 5.3957999999999784e-05, 5.305599999999924e-05, 5.5915999999999605e-05, 5.111099999999952e-05, 5.583399999999766e-05, 5.488899999999894e-05]</msg>
<status status="PASS" starttime="20201112 09:54:33.334" endtime="20201112 09:54:33.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.329" endtime="20201112 09:54:33.337"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.339" endtime="20201112 09:54:33.340"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:33.343" endtime="20201112 09:54:33.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.341" endtime="20201112 09:54:33.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.338" endtime="20201112 09:54:33.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.967" endtime="20201112 09:54:33.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.966" endtime="20201112 09:54:33.364"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.372" endtime="20201112 09:54:33.393"></status>
</kw>
<msg timestamp="20201112 09:54:33.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.371" endtime="20201112 09:54:33.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.394" endtime="20201112 09:54:33.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.397" endtime="20201112 09:54:33.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.368" endtime="20201112 09:54:33.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.366" endtime="20201112 09:54:33.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.406" endtime="20201112 09:54:33.693"></status>
</kw>
<msg timestamp="20201112 09:54:33.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022265375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:33.405" endtime="20201112 09:54:33.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022265375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:33.697" endtime="20201112 09:54:33.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.705" endtime="20201112 09:54:33.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.402" endtime="20201112 09:54:33.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.401" endtime="20201112 09:54:33.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:33.712" level="INFO">${RESULT} = [{'time': 0.022316472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.109699999999995e-05, 'source_diff': 5.109699999999995e-05}, {'time': 0.022377792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:33.709" endtime="20201112 09:54:33.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:33.726" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:33.713" endtime="20201112 09:54:33.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.731" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 09:54:33.730" endtime="20201112 09:54:33.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.733" level="INFO">VALUE: [5.109699999999995e-05, 5.207000000000128e-05, 5.493099999999765e-05, 5.4929999999998175e-05, 5.590299999999951e-05, 5.102800000000157e-05, 5.405500000000077e-05, 5.302700000000063e-05, 5.591699999999908e-05, 5.493100000000112e-05, 5.308299999999891e-05, 5.491700000000155e-05, 5.21669999999988e-05, 5.112499999999909e-05, 5.208400000000085e-05, 5.398600000000239e-05, 5.201399999999953e-05, 5.580499999999905e-05, 5.301400000000053e-05, 5.205499999999877e-05, 5.4958000000000784e-05, 5.3985999999998924e-05, 5.104199999999767e-05, 5.112499999999909e-05, 5.397200000000282e-05, 5.209700000000095e-05, 5.493100000000112e-05, 5.588899999999994e-05, 5.398600000000239e-05, 5.3971999999999354e-05, 5.4944000000001214e-05, 5.579099999999948e-05, 5.397200000000282e-05, 5.115299999999823e-05, 5.5902000000000035e-05, 5.109699999999995e-05, 5.395899999999926e-05, 5.111099999999952e-05, 4.916699999999927e-05, 5.493099999999765e-05, 5.305499999999977e-05, 4.9236999999997116e-05, 5.3999999999998494e-05, 5.206899999999834e-05, 5.3957999999999784e-05, 5.216700000000227e-05, 5.205500000000224e-05, 5.109799999999942e-05, 5.1014000000002e-05, 5.206900000000181e-05]</msg>
<status status="PASS" starttime="20201112 09:54:33.732" endtime="20201112 09:54:33.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.727" endtime="20201112 09:54:33.734"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.737" endtime="20201112 09:54:33.738"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:33.740" endtime="20201112 09:54:33.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.739" endtime="20201112 09:54:33.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.735" endtime="20201112 09:54:33.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.364" endtime="20201112 09:54:33.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.364" endtime="20201112 09:54:33.761"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.770" endtime="20201112 09:54:33.789"></status>
</kw>
<msg timestamp="20201112 09:54:33.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.768" endtime="20201112 09:54:33.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.790" endtime="20201112 09:54:33.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.793" endtime="20201112 09:54:33.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.766" endtime="20201112 09:54:33.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.763" endtime="20201112 09:54:33.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.803" endtime="20201112 09:54:34.089"></status>
</kw>
<msg timestamp="20201112 09:54:34.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021709625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021772236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:33.802" endtime="20201112 09:54:34.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021709625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021772236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:34.093" endtime="20201112 09:54:34.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.101" endtime="20201112 09:54:34.103"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.799" endtime="20201112 09:54:34.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.797" endtime="20201112 09:54:34.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:34.108" level="INFO">${RESULT} = [{'time': 0.021772236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.261100000000061e-05, 'source_diff': 6.261100000000061e-05}, {'time': 0.021833889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:34.105" endtime="20201112 09:54:34.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:34.121" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:34.109" endtime="20201112 09:54:34.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.126" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 09:54:34.125" endtime="20201112 09:54:34.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.129" level="INFO">VALUE: [6.261100000000061e-05, 5.388899999999794e-05, 5.493100000000112e-05, 5.205599999999824e-05, 5.590299999999951e-05, 5.4930000000001644e-05, 5.491700000000155e-05, 5.109699999999995e-05, 5.206899999999834e-05, 5.398600000000239e-05, 5.015299999999723e-05, 5.40280000000011e-05, 5.48479999999997e-05, 5.008400000000232e-05, 5.113899999999866e-05, 5.400000000000196e-05, 5.102800000000157e-05, 4.913900000000013e-05, 5.302700000000063e-05, 5.295899999999826e-05, 5.01530000000007e-05, 5.304200000000314e-05, 5.2985999999997924e-05, 5.104100000000167e-05, 5.587500000000037e-05, 5.287500000000084e-05, 5.108399999999985e-05, 5.013900000000113e-05, 5.105600000000071e-05, 5.109799999999942e-05, 5.395800000000325e-05, 5.590299999999951e-05, 5.305599999999924e-05, 5.3957999999999784e-05, 5.2902000000000504e-05, 5.208300000000138e-05, 5.590299999999951e-05, 5.398600000000239e-05, 5.300000000000096e-05, 5.208399999999738e-05, 5.109699999999995e-05, 5.11669999999978e-05, 5.483300000000066e-05, 5.587500000000037e-05, 5.008299999999938e-05, 5.118000000000136e-05, 5.3999999999998494e-05, 5.591699999999908e-05, 5.4929999999998175e-05, 5.002800000000057e-05]</msg>
<status status="PASS" starttime="20201112 09:54:34.127" endtime="20201112 09:54:34.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.122" endtime="20201112 09:54:34.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.132" endtime="20201112 09:54:34.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:34.135" endtime="20201112 09:54:34.155"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.134" endtime="20201112 09:54:34.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.130" endtime="20201112 09:54:34.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.762" endtime="20201112 09:54:34.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.761" endtime="20201112 09:54:34.156"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.165" endtime="20201112 09:54:34.188"></status>
</kw>
<msg timestamp="20201112 09:54:34.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.163" endtime="20201112 09:54:34.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.190" endtime="20201112 09:54:34.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.193" endtime="20201112 09:54:34.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.161" endtime="20201112 09:54:34.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.159" endtime="20201112 09:54:34.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.204" endtime="20201112 09:54:34.490"></status>
</kw>
<msg timestamp="20201112 09:54:34.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023216556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023273375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:34.202" endtime="20201112 09:54:34.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023216556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023273375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:34.494" endtime="20201112 09:54:34.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.502" endtime="20201112 09:54:34.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.199" endtime="20201112 09:54:34.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.197" endtime="20201112 09:54:34.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:34.509" level="INFO">${RESULT} = [{'time': 0.023273375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.681899999999962e-05, 'source_diff': 5.681899999999962e-05}, {'time': 0.023335014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:34.506" endtime="20201112 09:54:34.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:34.523" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:34.510" endtime="20201112 09:54:34.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.527" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 09:54:34.526" endtime="20201112 09:54:34.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.530" level="INFO">VALUE: [5.681899999999962e-05, 5.199999999999996e-05, 5.30280000000001e-05, 5.68610000000018e-05, 5.301400000000053e-05, 5.590300000000298e-05, 5.198699999999987e-05, 5.011099999999852e-05, 5.206899999999834e-05, 5.301400000000053e-05, 5.291699999999955e-05, 5.108300000000038e-05, 5.111099999999952e-05, 4.919399999999893e-05, 5.588899999999994e-05, 5.582000000000156e-05, 5.3999999999998494e-05, 5.301300000000106e-05, 5.588899999999994e-05, 5.586099999999733e-05, 5.38609999999988e-05, 5.586099999999733e-05, 5.201399999999953e-05, 5.2943999999999214e-05, 5.3944000000000214e-05, 5.012499999999809e-05, 5.401400000000153e-05, 5.206899999999834e-05, 5.016700000000027e-05, 5.111099999999952e-05, 5.205499999999877e-05, 5.588899999999994e-05, 5.109799999999942e-05, 4.922200000000154e-05, 5.201399999999953e-05, 5.295900000000173e-05, 5.391700000000055e-05, 4.91940000000024e-05, 5.016700000000027e-05, 5.204100000000267e-05, 5.101399999999853e-05, 5.201399999999953e-05, 5.302700000000063e-05, 5.006999999999928e-05, 5.109699999999995e-05, 5.491700000000155e-05, 5.584700000000123e-05, 5.386100000000227e-05, 5.112499999999909e-05, 5.209800000000042e-05]</msg>
<status status="PASS" starttime="20201112 09:54:34.528" endtime="20201112 09:54:34.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.524" endtime="20201112 09:54:34.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.533" endtime="20201112 09:54:34.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:34.537" endtime="20201112 09:54:34.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.535" endtime="20201112 09:54:34.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.532" endtime="20201112 09:54:34.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.157" endtime="20201112 09:54:34.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.157" endtime="20201112 09:54:34.558"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.566" endtime="20201112 09:54:34.588"></status>
</kw>
<msg timestamp="20201112 09:54:34.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.565" endtime="20201112 09:54:34.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.590" endtime="20201112 09:54:34.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.592" endtime="20201112 09:54:34.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.562" endtime="20201112 09:54:34.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.560" endtime="20201112 09:54:34.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.602" endtime="20201112 09:54:34.888"></status>
</kw>
<msg timestamp="20201112 09:54:34.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023969431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024011, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:34.601" endtime="20201112 09:54:34.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023969431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024011, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:34.893" endtime="20201112 09:54:34.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.901" endtime="20201112 09:54:34.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.598" endtime="20201112 09:54:34.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.597" endtime="20201112 09:54:34.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:34.908" level="INFO">${RESULT} = [{'time': 0.024011, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1569000000001716e-05, 'source_diff': 4.1569000000001716e-05}, {'time': 0.024072167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:34.904" endtime="20201112 09:54:34.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:34.921" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:34.909" endtime="20201112 09:54:34.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.926" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 09:54:34.925" endtime="20201112 09:54:34.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.928" level="INFO">VALUE: [4.1569000000001716e-05, 5.30280000000001e-05, 5.3971999999999354e-05, 5.301400000000053e-05, 5.016600000000079e-05, 5.006999999999928e-05, 5.018099999999984e-05, 5.491700000000155e-05, 5.587500000000037e-05, 5.490300000000198e-05, 5.4930000000001644e-05, 5.30280000000001e-05, 5.387499999999837e-05, 5.683399999999866e-05, 5.112499999999909e-05, 5.2999999999997494e-05, 5.587500000000037e-05, 5.494500000000069e-05, 5.391700000000055e-05, 5.016700000000027e-05, 5.587500000000037e-05, 5.205599999999824e-05, 5.4929999999998175e-05, 5.012499999999809e-05, 5.398600000000239e-05, 5.207000000000128e-05, 5.588899999999994e-05, 5.30280000000001e-05, 5.4930000000001644e-05, 5.301400000000053e-05, 5.108399999999985e-05, 5.3971999999999354e-05, 5.304199999999967e-05, 5.4930000000001644e-05, 5.112499999999909e-05, 5.012499999999809e-05, 5.109699999999995e-05, 5.490300000000198e-05, 5.684699999999876e-05, 5.300000000000096e-05, 5.588899999999994e-05, 5.398600000000239e-05, 5.207000000000128e-05, 5.019399999999993e-05, 5.016700000000027e-05, 5.108300000000038e-05, 5.493099999999765e-05, 5.211100000000052e-05, 5.009699999999895e-05, 5.494500000000069e-05]</msg>
<status status="PASS" starttime="20201112 09:54:34.927" endtime="20201112 09:54:34.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.922" endtime="20201112 09:54:34.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.932" endtime="20201112 09:54:34.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:34.935" endtime="20201112 09:54:34.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.934" endtime="20201112 09:54:34.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.930" endtime="20201112 09:54:34.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.558" endtime="20201112 09:54:34.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.558" endtime="20201112 09:54:34.956"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.965" endtime="20201112 09:54:34.985"></status>
</kw>
<msg timestamp="20201112 09:54:34.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.963" endtime="20201112 09:54:34.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.987" endtime="20201112 09:54:34.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.989" endtime="20201112 09:54:34.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.961" endtime="20201112 09:54:34.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.959" endtime="20201112 09:54:34.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.999" endtime="20201112 09:54:35.286"></status>
</kw>
<msg timestamp="20201112 09:54:35.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022256583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022307708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:34.998" endtime="20201112 09:54:35.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022256583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022307708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.290" endtime="20201112 09:54:35.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.299" endtime="20201112 09:54:35.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.995" endtime="20201112 09:54:35.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.993" endtime="20201112 09:54:35.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:35.305" level="INFO">${RESULT} = [{'time': 0.022307708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.112499999999909e-05, 'source_diff': 5.112499999999909e-05}, {'time': 0.022369403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:35.302" endtime="20201112 09:54:35.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:35.364" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:35.306" endtime="20201112 09:54:35.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.369" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 09:54:35.368" endtime="20201112 09:54:35.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.371" level="INFO">VALUE: [5.112499999999909e-05, 5.109699999999995e-05, 4.919399999999893e-05, 5.397299999999883e-05, 5.207000000000128e-05, 5.109699999999995e-05, 5.493100000000112e-05, 5.01530000000007e-05, 5.588899999999994e-05, 5.106900000000081e-05, 5.395899999999926e-05, 5.106900000000081e-05, 5.3985999999998924e-05, 5.300000000000096e-05, 5.206900000000181e-05, 5.493100000000112e-05, 5.3916000000001074e-05, 5.205600000000171e-05, 5.588899999999994e-05, 5.199999999999996e-05, 5.012500000000156e-05, 5.5902000000000035e-05, 5.491700000000155e-05, 5.490299999999851e-05, 5.109699999999995e-05, 5.20409999999992e-05, 5.013899999999766e-05, 5.581899999999862e-05, 5.30410000000002e-05, 5.493100000000112e-05, 5.2957999999998784e-05, 5.493100000000112e-05, 5.30410000000002e-05, 5.01530000000007e-05, 5.204200000000214e-05, 5.4972000000000354e-05, 5.494500000000069e-05, 5.487499999999937e-05, 5.5805999999998523e-05, 5.391700000000055e-05, 5.590299999999951e-05, 5.490300000000198e-05, 5.109699999999995e-05, 5.30410000000002e-05, 5.590299999999951e-05, 5.012500000000156e-05, 5.4916000000002074e-05, 5.109799999999942e-05, 5.58610000000008e-05, 5.207000000000128e-05]</msg>
<status status="PASS" starttime="20201112 09:54:35.370" endtime="20201112 09:54:35.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.365" endtime="20201112 09:54:35.373"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.375" endtime="20201112 09:54:35.376"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:35.379" endtime="20201112 09:54:35.398"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.377" endtime="20201112 09:54:35.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.373" endtime="20201112 09:54:35.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.957" endtime="20201112 09:54:35.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.957" endtime="20201112 09:54:35.400"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.408" endtime="20201112 09:54:35.428"></status>
</kw>
<msg timestamp="20201112 09:54:35.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.407" endtime="20201112 09:54:35.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.429" endtime="20201112 09:54:35.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.432" endtime="20201112 09:54:35.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.404" endtime="20201112 09:54:35.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.402" endtime="20201112 09:54:35.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.441" endtime="20201112 09:54:35.726"></status>
</kw>
<msg timestamp="20201112 09:54:35.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020775889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020842264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.439" endtime="20201112 09:54:35.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020775889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020842264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.730" endtime="20201112 09:54:35.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.739" endtime="20201112 09:54:35.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.437" endtime="20201112 09:54:35.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.435" endtime="20201112 09:54:35.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:35.745" level="INFO">${RESULT} = [{'time': 0.020842264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.637500000000046e-05, 'source_diff': 6.637500000000046e-05}, {'time': 0.020903597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:35.742" endtime="20201112 09:54:35.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:35.759" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:35.746" endtime="20201112 09:54:35.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.763" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 09:54:35.762" endtime="20201112 09:54:35.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.766" level="INFO">VALUE: [6.637500000000046e-05, 5.105499999999777e-05, 5.205499999999877e-05, 5.490299999999851e-05, 5.393100000000012e-05, 5.206999999999781e-05, 5.2985999999997924e-05, 5.201300000000006e-05, 5.013900000000113e-05, 5.106900000000081e-05, 5.584700000000123e-05, 5.305499999999977e-05, 5.3985999999998924e-05, 5.009700000000242e-05, 5.20279999999991e-05, 5.016700000000027e-05, 5.3944000000000214e-05, 5.391700000000055e-05, 5.4972000000000354e-05, 5.104200000000114e-05, 5.201399999999953e-05, 5.3999999999998494e-05, 5.681899999999962e-05, 5.107000000000028e-05, 5.304200000000314e-05, 5.016600000000079e-05, 5.195900000000073e-05, 5.019399999999993e-05, 5.684700000000223e-05, 5.491699999999808e-05, 5.012500000000156e-05, 5.022199999999907e-05, 5.400000000000196e-05, 5.584699999999776e-05, 5.588899999999994e-05, 5.106900000000081e-05, 5.487499999999937e-05, 5.584799999999723e-05, 5.199999999999996e-05, 5.211100000000052e-05, 5.584700000000123e-05, 5.584699999999776e-05, 5.016600000000079e-05, 5.5915999999999605e-05, 5.487499999999937e-05, 5.012500000000156e-05, 5.2971999999998354e-05, 5.495900000000026e-05, 5.300000000000096e-05, 5.584700000000123e-05]</msg>
<status status="PASS" starttime="20201112 09:54:35.764" endtime="20201112 09:54:35.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.760" endtime="20201112 09:54:35.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.769" endtime="20201112 09:54:35.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:35.773" endtime="20201112 09:54:35.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.771" endtime="20201112 09:54:35.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.768" endtime="20201112 09:54:35.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.401" endtime="20201112 09:54:35.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.400" endtime="20201112 09:54:35.794"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.803" endtime="20201112 09:54:35.825"></status>
</kw>
<msg timestamp="20201112 09:54:35.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.801" endtime="20201112 09:54:35.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.826" endtime="20201112 09:54:35.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.829" endtime="20201112 09:54:35.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.799" endtime="20201112 09:54:35.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.797" endtime="20201112 09:54:35.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.837" endtime="20201112 09:54:36.123"></status>
</kw>
<msg timestamp="20201112 09:54:36.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023833375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023870097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.836" endtime="20201112 09:54:36.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023833375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023870097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.127" endtime="20201112 09:54:36.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.135" endtime="20201112 09:54:36.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.833" endtime="20201112 09:54:36.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.832" endtime="20201112 09:54:36.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:36.142" level="INFO">${RESULT} = [{'time': 0.023870097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.672199999999945e-05, 'source_diff': 3.672199999999945e-05}, {'time': 0.023930792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:36.138" endtime="20201112 09:54:36.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:36.156" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:36.143" endtime="20201112 09:54:36.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.160" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 09:54:36.159" endtime="20201112 09:54:36.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.163" level="INFO">VALUE: [3.672199999999945e-05, 5.209800000000042e-05, 5.3957999999999784e-05, 5.590299999999951e-05, 5.212500000000009e-05, 5.494500000000069e-05, 5.3999999999998494e-05, 5.494500000000069e-05, 5.5915999999999605e-05, 5.112500000000256e-05, 5.018000000000036e-05, 5.101399999999853e-05, 5.208300000000138e-05, 5.111099999999952e-05, 5.5902000000000035e-05, 5.208300000000138e-05, 5.104199999999767e-05, 5.113899999999866e-05, 5.304199999999967e-05, 5.30280000000001e-05, 5.4929999999998175e-05, 5.298600000000139e-05, 5.5915999999999605e-05, 5.108299999999691e-05, 5.5902000000000035e-05, 5.3999999999998494e-05, 5.5944000000002214e-05, 5.304199999999967e-05, 5.5902000000000035e-05, 5.395899999999926e-05, 5.4958000000000784e-05, 5.4958000000000784e-05, 5.30280000000001e-05, 5.497299999999983e-05, 5.5929999999999175e-05, 5.209800000000042e-05, 5.206900000000181e-05, 5.018099999999984e-05, 5.208300000000138e-05, 5.211100000000052e-05, 5.211100000000052e-05, 5.2971999999998354e-05, 5.106899999999734e-05, 5.393100000000012e-05, 5.015299999999723e-05, 5.688900000000094e-05, 5.0138000000001653e-05, 5.3915999999997605e-05, 5.4972000000000354e-05, 5.688899999999747e-05]</msg>
<status status="PASS" starttime="20201112 09:54:36.161" endtime="20201112 09:54:36.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.156" endtime="20201112 09:54:36.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.166" endtime="20201112 09:54:36.167"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:36.169" endtime="20201112 09:54:36.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.168" endtime="20201112 09:54:36.190"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.164" endtime="20201112 09:54:36.190"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.795" endtime="20201112 09:54:36.190"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.795" endtime="20201112 09:54:36.190"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.199" endtime="20201112 09:54:36.221"></status>
</kw>
<msg timestamp="20201112 09:54:36.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.198" endtime="20201112 09:54:36.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.223" endtime="20201112 09:54:36.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.226" endtime="20201112 09:54:36.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.195" endtime="20201112 09:54:36.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.193" endtime="20201112 09:54:36.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.235" endtime="20201112 09:54:36.522"></status>
</kw>
<msg timestamp="20201112 09:54:36.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023970875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024027792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.234" endtime="20201112 09:54:36.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023970875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024027792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.527" endtime="20201112 09:54:36.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.535" endtime="20201112 09:54:36.537"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.231" endtime="20201112 09:54:36.537"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.229" endtime="20201112 09:54:36.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:36.542" level="INFO">${RESULT} = [{'time': 0.024027792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.691700000000008e-05, 'source_diff': 5.691700000000008e-05}, {'time': 0.024088819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:36.538" endtime="20201112 09:54:36.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:36.555" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:36.542" endtime="20201112 09:54:36.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.559" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 09:54:36.558" endtime="20201112 09:54:36.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.562" level="INFO">VALUE: [5.691700000000008e-05, 5.4944000000001214e-05, 5.488899999999894e-05, 5.105599999999724e-05, 5.011099999999852e-05, 5.109799999999942e-05, 5.305600000000271e-05, 5.400000000000196e-05, 5.204199999999867e-05, 5.4957999999997315e-05, 5.2971999999998354e-05, 5.20279999999991e-05, 5.30280000000001e-05, 5.587500000000037e-05, 5.4915999999998605e-05, 5.3943999999996745e-05, 5.301400000000053e-05, 5.4929999999998175e-05, 5.4972000000000354e-05, 5.016700000000027e-05, 5.391700000000055e-05, 5.588899999999994e-05, 5.5915999999999605e-05, 5.30280000000001e-05, 5.113899999999866e-05, 5.018000000000036e-05, 5.391699999999708e-05, 5.4972000000000354e-05, 5.493100000000112e-05, 5.205599999999824e-05, 5.120899999999998e-05, 5.113899999999866e-05, 5.495900000000026e-05, 5.016600000000079e-05, 5.204199999999867e-05, 5.5957999999998315e-05, 5.308300000000238e-05, 5.208299999999791e-05, 5.5902000000000035e-05, 5.586099999999733e-05, 5.30280000000001e-05, 5.206899999999834e-05, 5.400000000000196e-05, 5.30280000000001e-05, 5.111099999999952e-05, 5.588899999999994e-05, 5.305599999999924e-05, 5.013899999999766e-05, 5.112500000000256e-05, 5.108399999999985e-05]</msg>
<status status="PASS" starttime="20201112 09:54:36.560" endtime="20201112 09:54:36.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.556" endtime="20201112 09:54:36.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.565" endtime="20201112 09:54:36.567"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:36.569" endtime="20201112 09:54:36.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.567" endtime="20201112 09:54:36.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.564" endtime="20201112 09:54:36.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.191" endtime="20201112 09:54:36.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.191" endtime="20201112 09:54:36.590"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.599" endtime="20201112 09:54:36.618"></status>
</kw>
<msg timestamp="20201112 09:54:36.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.597" endtime="20201112 09:54:36.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.619" endtime="20201112 09:54:36.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.622" endtime="20201112 09:54:36.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.594" endtime="20201112 09:54:36.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.592" endtime="20201112 09:54:36.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.631" endtime="20201112 09:54:36.918"></status>
</kw>
<msg timestamp="20201112 09:54:36.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021575375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021622681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.629" endtime="20201112 09:54:36.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021575375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021622681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.922" endtime="20201112 09:54:36.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.930" endtime="20201112 09:54:36.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.627" endtime="20201112 09:54:36.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.625" endtime="20201112 09:54:36.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:36.937" level="INFO">${RESULT} = [{'time': 0.021622681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.730600000000043e-05, 'source_diff': 4.730600000000043e-05}, {'time': 0.021683764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:36.934" endtime="20201112 09:54:36.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:36.951" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:36.938" endtime="20201112 09:54:36.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.956" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 09:54:36.955" endtime="20201112 09:54:36.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.958" level="INFO">VALUE: [4.730600000000043e-05, 5.590299999999951e-05, 5.3999999999998494e-05, 5.2985999999997924e-05, 5.20409999999992e-05, 5.111099999999952e-05, 5.30280000000001e-05, 5.108300000000038e-05, 5.584699999999776e-05, 5.587500000000037e-05, 5.4944000000001214e-05, 5.112499999999909e-05, 5.018000000000036e-05, 5.111100000000299e-05, 5.6778000000000384e-05, 5.494499999999722e-05, 5.305499999999977e-05, 5.018099999999984e-05, 5.484700000000023e-05, 5.104199999999767e-05, 5.400000000000196e-05, 5.3944000000000214e-05, 5.2957999999998784e-05, 5.300000000000096e-05, 5.4958000000000784e-05, 5.112499999999909e-05, 5.3887999999998465e-05, 5.108300000000038e-05, 5.397200000000282e-05, 5.111100000000299e-05, 5.294500000000216e-05, 5.588899999999994e-05, 5.590299999999951e-05, 5.304199999999967e-05, 5.198600000000039e-05, 5.491700000000155e-05, 5.208300000000138e-05, 5.013900000000113e-05, 5.107000000000028e-05, 5.111099999999952e-05, 5.198600000000039e-05, 5.198600000000039e-05, 5.5930000000002644e-05, 5.10409999999982e-05, 5.111099999999952e-05, 5.3957999999999784e-05, 5.4929999999998175e-05, 5.01530000000007e-05, 5.684699999999876e-05, 5.1138000000002654e-05]</msg>
<status status="PASS" starttime="20201112 09:54:36.957" endtime="20201112 09:54:36.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.952" endtime="20201112 09:54:36.959"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.962" endtime="20201112 09:54:36.963"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:36.965" endtime="20201112 09:54:36.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.963" endtime="20201112 09:54:36.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.960" endtime="20201112 09:54:36.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.591" endtime="20201112 09:54:36.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.590" endtime="20201112 09:54:36.986"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.996" endtime="20201112 09:54:37.015"></status>
</kw>
<msg timestamp="20201112 09:54:37.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.994" endtime="20201112 09:54:37.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.016" endtime="20201112 09:54:37.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.019" endtime="20201112 09:54:37.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.991" endtime="20201112 09:54:37.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.988" endtime="20201112 09:54:37.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.028" endtime="20201112 09:54:37.315"></status>
</kw>
<msg timestamp="20201112 09:54:37.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022126625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022177681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:37.026" endtime="20201112 09:54:37.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022126625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022177681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:37.319" endtime="20201112 09:54:37.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.328" endtime="20201112 09:54:37.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.024" endtime="20201112 09:54:37.330"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.022" endtime="20201112 09:54:37.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:37.334" level="INFO">${RESULT} = [{'time': 0.022177681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.105600000000071e-05, 'source_diff': 5.105600000000071e-05}, {'time': 0.022238597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:37.331" endtime="20201112 09:54:37.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:37.347" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:37.335" endtime="20201112 09:54:37.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.352" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 09:54:37.351" endtime="20201112 09:54:37.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.354" level="INFO">VALUE: [5.105600000000071e-05, 5.387499999999837e-05, 5.206900000000181e-05, 5.58610000000008e-05, 5.011100000000199e-05, 5.577699999999991e-05, 5.206899999999834e-05, 5.5902000000000035e-05, 5.397299999999883e-05, 5.490299999999851e-05, 5.3957999999999784e-05, 5.204200000000214e-05, 5.588899999999994e-05, 5.298600000000139e-05, 5.100000000000243e-05, 5.108399999999985e-05, 5.30410000000002e-05, 5.300000000000096e-05, 5.013900000000113e-05, 5.584699999999776e-05, 5.58480000000007e-05, 5.109699999999995e-05, 5.106900000000081e-05, 5.112499999999909e-05, 5.30280000000001e-05, 5.013900000000113e-05, 5.590299999999951e-05, 5.393100000000012e-05, 5.111099999999952e-05, 5.30280000000001e-05, 5.205499999999877e-05, 5.291700000000302e-05, 5.208300000000138e-05, 5.294400000000268e-05, 5.111099999999952e-05, 5.301400000000053e-05, 5.01530000000007e-05, 5.109699999999995e-05, 5.2971999999998354e-05, 5.4944000000001214e-05, 5.204200000000214e-05, 5.584700000000123e-05, 5.588899999999994e-05, 5.398600000000239e-05, 5.205499999999877e-05, 5.587500000000037e-05, 5.5722000000001104e-05, 5.39730000000023e-05, 5.586099999999733e-05, 5.58610000000008e-05]</msg>
<status status="PASS" starttime="20201112 09:54:37.353" endtime="20201112 09:54:37.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.348" endtime="20201112 09:54:37.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.358" endtime="20201112 09:54:37.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:37.361" endtime="20201112 09:54:37.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.360" endtime="20201112 09:54:37.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.356" endtime="20201112 09:54:37.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.987" endtime="20201112 09:54:37.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.986" endtime="20201112 09:54:37.382"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.391" endtime="20201112 09:54:37.412"></status>
</kw>
<msg timestamp="20201112 09:54:37.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.389" endtime="20201112 09:54:37.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.414" endtime="20201112 09:54:37.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.416" endtime="20201112 09:54:37.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.387" endtime="20201112 09:54:37.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.385" endtime="20201112 09:54:37.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.425" endtime="20201112 09:54:37.711"></status>
</kw>
<msg timestamp="20201112 09:54:37.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022738597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022793472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:37.424" endtime="20201112 09:54:37.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022738597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022793472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:37.715" endtime="20201112 09:54:37.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.723" endtime="20201112 09:54:37.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.421" endtime="20201112 09:54:37.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.420" endtime="20201112 09:54:37.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:37.730" level="INFO">${RESULT} = [{'time': 0.022793472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.487499999999937e-05, 'source_diff': 5.487499999999937e-05}, {'time': 0.022855236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:37.727" endtime="20201112 09:54:37.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:37.743" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:37.731" endtime="20201112 09:54:37.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.748" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 09:54:37.747" endtime="20201112 09:54:37.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.750" level="INFO">VALUE: [5.487499999999937e-05, 5.3971999999999354e-05, 5.484700000000023e-05, 5.493100000000112e-05, 5.012500000000156e-05, 5.577800000000285e-05, 5.3957999999999784e-05, 5.587500000000037e-05, 5.205499999999877e-05, 5.3985999999998924e-05, 5.101399999999853e-05, 5.112499999999909e-05, 5.209700000000095e-05, 5.01530000000007e-05, 5.481900000000109e-05, 5.300000000000096e-05, 5.013900000000113e-05, 5.590299999999951e-05, 5.211099999999705e-05, 5.301400000000053e-05, 5.109699999999995e-05, 5.6749999999997774e-05, 5.590299999999951e-05, 5.3957999999999784e-05, 5.205500000000224e-05, 5.207000000000128e-05, 5.4013999999998064e-05, 5.016700000000027e-05, 5.5902000000000035e-05, 5.297200000000182e-05, 5.580499999999905e-05, 5.205599999999824e-05, 5.302700000000063e-05, 5.4943999999997745e-05, 5.108300000000038e-05, 5.0137999999998184e-05, 5.302700000000063e-05, 5.4972000000000354e-05, 5.395900000000273e-05, 5.684699999999876e-05, 5.006999999999928e-05, 5.0195000000002876e-05, 5.591700000000255e-05, 5.398600000000239e-05, 5.013900000000113e-05, 5.301400000000053e-05, 5.3971999999999354e-05, 5.2999999999997494e-05, 5.68610000000018e-05, 5.112499999999909e-05]</msg>
<status status="PASS" starttime="20201112 09:54:37.749" endtime="20201112 09:54:37.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.744" endtime="20201112 09:54:37.752"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.754" endtime="20201112 09:54:37.755"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:37.757" endtime="20201112 09:54:37.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.756" endtime="20201112 09:54:37.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.752" endtime="20201112 09:54:37.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.383" endtime="20201112 09:54:37.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.383" endtime="20201112 09:54:37.778"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.787" endtime="20201112 09:54:37.809"></status>
</kw>
<msg timestamp="20201112 09:54:37.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.785" endtime="20201112 09:54:37.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.811" endtime="20201112 09:54:37.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.813" endtime="20201112 09:54:37.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.783" endtime="20201112 09:54:37.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.781" endtime="20201112 09:54:37.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.822" endtime="20201112 09:54:38.108"></status>
</kw>
<msg timestamp="20201112 09:54:38.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023706097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023745639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:37.820" endtime="20201112 09:54:38.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023706097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023745639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:38.112" endtime="20201112 09:54:38.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.121" endtime="20201112 09:54:38.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.818" endtime="20201112 09:54:38.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.816" endtime="20201112 09:54:38.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:38.127" level="INFO">${RESULT} = [{'time': 0.023745639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.954200000000005e-05, 'source_diff': 3.954200000000005e-05}, {'time': 0.023806972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:38.124" endtime="20201112 09:54:38.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:38.140" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:38.128" endtime="20201112 09:54:38.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.145" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 09:54:38.144" endtime="20201112 09:54:38.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.148" level="INFO">VALUE: [3.954200000000005e-05, 5.3999999999998494e-05, 5.590299999999951e-05, 5.483400000000013e-05, 5.4943999999997745e-05, 5.301300000000106e-05, 5.304199999999967e-05, 5.099999999999896e-05, 5.208300000000138e-05, 5.108300000000038e-05, 5.104199999999767e-05, 5.48609999999998e-05, 5.582000000000156e-05, 5.013899999999766e-05, 5.304199999999967e-05, 5.205600000000171e-05, 5.3957999999999784e-05, 5.302699999999716e-05, 5.098600000000286e-05, 5.3985999999998924e-05, 5.4930000000001644e-05, 5.587500000000037e-05, 5.193099999999812e-05, 5.590299999999951e-05, 5.397200000000282e-05, 5.208400000000085e-05, 5.5791999999998954e-05, 5.590300000000298e-05, 5.3985999999998924e-05, 5.004200000000014e-05, 5.199999999999996e-05, 5.5902000000000035e-05, 5.107000000000028e-05, 5.013899999999766e-05, 5.388900000000141e-05, 5.2985999999997924e-05, 5.590299999999951e-05, 5.4944000000001214e-05, 5.102800000000157e-05, 5.109699999999995e-05, 5.111099999999952e-05, 5.206999999999781e-05, 5.197200000000082e-05, 5.491700000000155e-05, 5.4944000000001214e-05, 5.016700000000027e-05, 5.576299999999687e-05, 5.5944000000002214e-05, 5.3985999999998924e-05, 5.5708000000001534e-05]</msg>
<status status="PASS" starttime="20201112 09:54:38.146" endtime="20201112 09:54:38.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.141" endtime="20201112 09:54:38.149"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.151" endtime="20201112 09:54:38.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:38.155" endtime="20201112 09:54:38.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.153" endtime="20201112 09:54:38.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.150" endtime="20201112 09:54:38.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.779" endtime="20201112 09:54:38.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.779" endtime="20201112 09:54:38.176"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.184" endtime="20201112 09:54:38.206"></status>
</kw>
<msg timestamp="20201112 09:54:38.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.183" endtime="20201112 09:54:38.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.208" endtime="20201112 09:54:38.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.210" endtime="20201112 09:54:38.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.180" endtime="20201112 09:54:38.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.178" endtime="20201112 09:54:38.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.219" endtime="20201112 09:54:38.506"></status>
</kw>
<msg timestamp="20201112 09:54:38.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023281819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023354889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:38.218" endtime="20201112 09:54:38.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023281819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023354889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:38.510" endtime="20201112 09:54:38.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.519" endtime="20201112 09:54:38.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.215" endtime="20201112 09:54:38.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.213" endtime="20201112 09:54:38.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:38.525" level="INFO">${RESULT} = [{'time': 0.023354889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.307000000000147e-05, 'source_diff': 7.307000000000147e-05}, {'time': 0.023446083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:38.522" endtime="20201112 09:54:38.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:38.540" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:38.526" endtime="20201112 09:54:38.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.544" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 09:54:38.543" endtime="20201112 09:54:38.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.547" level="INFO">VALUE: [7.307000000000147e-05, 8.267999999999817e-05, 8.174999999999849e-05, 8.363800000000046e-05, 8.179200000000067e-05, 8.16109999999988e-05, 8.270799999999731e-05, 8.652700000000291e-05, 8.363899999999994e-05, 8.554200000000095e-05, 8.554100000000148e-05, 8.076399999999706e-05, 8.46530000000005e-05, 8.172199999999935e-05, 8.362500000000037e-05, 8.456999999999909e-05, 8.358399999999766e-05, 8.174999999999849e-05, 8.459700000000223e-05, 8.362500000000037e-05, 8.268100000000111e-05, 8.647200000000063e-05, 8.555599999999705e-05, 8.557000000000009e-05, 8.266699999999808e-05, 8.073599999999792e-05, 8.649999999999977e-05, 8.269399999999774e-05, 8.458399999999866e-05, 8.07780000000001e-05, 8.266699999999808e-05, 8.654200000000195e-05, 8.265199999999903e-05, 8.270800000000078e-05, 8.458299999999919e-05, 8.074999999999749e-05, 8.556899999999715e-05, 8.265199999999903e-05, 8.079199999999967e-05, 8.64860000000002e-05, 8.07780000000001e-05, 8.268000000000164e-05, 8.638899999999922e-05, 8.363899999999994e-05, 8.269399999999774e-05, 8.36249999999969e-05, 8.165300000000097e-05, 8.459700000000223e-05, 8.64860000000002e-05, 8.173599999999892e-05]</msg>
<status status="PASS" starttime="20201112 09:54:38.545" endtime="20201112 09:54:38.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.541" endtime="20201112 09:54:38.548"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.550" endtime="20201112 09:54:38.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:38.554" endtime="20201112 09:54:38.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.552" endtime="20201112 09:54:38.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.549" endtime="20201112 09:54:38.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.176" endtime="20201112 09:54:38.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.176" endtime="20201112 09:54:38.575"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.583" endtime="20201112 09:54:38.603"></status>
</kw>
<msg timestamp="20201112 09:54:38.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.582" endtime="20201112 09:54:38.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.605" endtime="20201112 09:54:38.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.607" endtime="20201112 09:54:38.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.579" endtime="20201112 09:54:38.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.577" endtime="20201112 09:54:38.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.616" endtime="20201112 09:54:38.903"></status>
</kw>
<msg timestamp="20201112 09:54:38.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020831653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020919097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:38.615" endtime="20201112 09:54:38.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020831653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020919097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:38.907" endtime="20201112 09:54:38.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.915" endtime="20201112 09:54:38.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.612" endtime="20201112 09:54:38.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.610" endtime="20201112 09:54:38.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:38.922" level="INFO">${RESULT} = [{'time': 0.020919097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.744400000000249e-05, 'source_diff': 8.744400000000249e-05}, {'time': 0.021010153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:38.919" endtime="20201112 09:54:38.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:38.935" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:38.923" endtime="20201112 09:54:38.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.940" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 09:54:38.939" endtime="20201112 09:54:38.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.942" level="INFO">VALUE: [8.744400000000249e-05, 8.070900000000172e-05, 8.452700000000091e-05, 8.363899999999994e-05, 8.647199999999716e-05, 8.637499999999965e-05, 8.173599999999892e-05, 8.640199999999931e-05, 8.262500000000284e-05, 8.266700000000154e-05, 8.64860000000002e-05, 8.174999999999849e-05, 8.555600000000052e-05, 8.159699999999923e-05, 8.26659999999986e-05, 8.540299999999779e-05, 8.170899999999925e-05, 8.457000000000256e-05, 8.445800000000253e-05, 8.266700000000154e-05, 8.075000000000096e-05, 8.268000000000164e-05, 8.266700000000154e-05, 8.452700000000091e-05, 8.64860000000002e-05, 8.07780000000001e-05, 8.637499999999965e-05, 8.459700000000223e-05, 8.450000000000124e-05, 8.36659999999996e-05, 8.355599999999852e-05, 8.070800000000225e-05, 8.26529999999985e-05, 8.644500000000097e-05, 8.362500000000037e-05, 8.445799999999906e-05, 8.269400000000121e-05, 8.554200000000095e-05, 8.557000000000009e-05, 8.162499999999837e-05, 8.172200000000282e-05, 8.173599999999892e-05, 8.26659999999986e-05, 8.458400000000213e-05, 8.269400000000121e-05, 8.352799999999938e-05, 8.462500000000137e-05, 8.652800000000238e-05, 8.63470000000005e-05, 8.367999999999917e-05]</msg>
<status status="PASS" starttime="20201112 09:54:38.941" endtime="20201112 09:54:38.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.936" endtime="20201112 09:54:38.943"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.946" endtime="20201112 09:54:38.947"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:38.949" endtime="20201112 09:54:38.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.947" endtime="20201112 09:54:38.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.944" endtime="20201112 09:54:38.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.576" endtime="20201112 09:54:38.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.575" endtime="20201112 09:54:38.970"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.978" endtime="20201112 09:54:39.000"></status>
</kw>
<msg timestamp="20201112 09:54:39.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.977" endtime="20201112 09:54:39.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.001" endtime="20201112 09:54:39.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.004" endtime="20201112 09:54:39.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.974" endtime="20201112 09:54:39.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.972" endtime="20201112 09:54:39.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.013" endtime="20201112 09:54:39.299"></status>
</kw>
<msg timestamp="20201112 09:54:39.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022710569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022786528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.011" endtime="20201112 09:54:39.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022710569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022786528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.303" endtime="20201112 09:54:39.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.312" endtime="20201112 09:54:39.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.009" endtime="20201112 09:54:39.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.007" endtime="20201112 09:54:39.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:39.319" level="INFO">${RESULT} = [{'time': 0.022786528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.595900000000044e-05, 'source_diff': 7.595900000000044e-05}, {'time': 0.022877431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:39.315" endtime="20201112 09:54:39.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:39.332" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:39.320" endtime="20201112 09:54:39.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.336" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 09:54:39.335" endtime="20201112 09:54:39.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.339" level="INFO">VALUE: [7.595900000000044e-05, 8.363899999999994e-05, 8.077699999999716e-05, 8.36110000000008e-05, 8.268099999999765e-05, 8.074999999999749e-05, 8.744399999999902e-05, 8.554100000000148e-05, 8.173599999999892e-05, 8.173599999999892e-05, 8.456900000000309e-05, 8.172199999999935e-05, 8.268099999999765e-05, 8.551399999999834e-05, 8.555600000000052e-05, 8.268100000000111e-05, 8.36110000000008e-05, 8.552800000000138e-05, 8.562500000000237e-05, 8.458299999999919e-05, 7.980499999999877e-05, 8.266700000000154e-05, 8.268000000000164e-05, 8.362500000000037e-05, 8.270799999999731e-05, 8.076299999999759e-05, 8.458299999999919e-05, 8.652800000000238e-05, 8.46530000000005e-05, 8.74730000000011e-05, 8.455500000000005e-05, 8.555600000000052e-05, 8.36529999999995e-05, 7.980499999999877e-05, 8.554200000000095e-05, 8.649999999999977e-05, 8.652799999999891e-05, 8.173599999999892e-05, 8.363899999999994e-05, 8.173600000000239e-05, 8.654199999999848e-05, 8.558399999999966e-05, 8.461099999999833e-05, 8.459700000000223e-05, 8.169400000000021e-05, 8.552700000000191e-05, 8.079199999999967e-05, 8.169499999999968e-05, 8.172199999999935e-05, 8.080499999999977e-05]</msg>
<status status="PASS" starttime="20201112 09:54:39.338" endtime="20201112 09:54:39.340"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.333" endtime="20201112 09:54:39.340"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.342" endtime="20201112 09:54:39.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:39.346" endtime="20201112 09:54:39.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.344" endtime="20201112 09:54:39.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.341" endtime="20201112 09:54:39.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.971" endtime="20201112 09:54:39.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.970" endtime="20201112 09:54:39.367"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.375" endtime="20201112 09:54:39.398"></status>
</kw>
<msg timestamp="20201112 09:54:39.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.374" endtime="20201112 09:54:39.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.399" endtime="20201112 09:54:39.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.402" endtime="20201112 09:54:39.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.371" endtime="20201112 09:54:39.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.369" endtime="20201112 09:54:39.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.411" endtime="20201112 09:54:39.697"></status>
</kw>
<msg timestamp="20201112 09:54:39.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022704861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022792278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.409" endtime="20201112 09:54:39.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022704861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022792278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.701" endtime="20201112 09:54:39.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.709" endtime="20201112 09:54:39.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.406" endtime="20201112 09:54:39.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.405" endtime="20201112 09:54:39.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:39.716" level="INFO">${RESULT} = [{'time': 0.022792278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.741699999999936e-05, 'source_diff': 8.741699999999936e-05}, {'time': 0.022883347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:39.712" endtime="20201112 09:54:39.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:39.729" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:39.717" endtime="20201112 09:54:39.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.733" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 09:54:39.732" endtime="20201112 09:54:39.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.736" level="INFO">VALUE: [8.741699999999936e-05, 8.173599999999892e-05, 8.262499999999937e-05, 8.747299999999764e-05, 8.368100000000211e-05, 8.554200000000095e-05, 8.555499999999758e-05, 8.267999999999817e-05, 8.266700000000154e-05, 8.555600000000052e-05, 8.748599999999773e-05, 8.459699999999876e-05, 8.267999999999817e-05, 8.651399999999934e-05, 8.649999999999977e-05, 8.070900000000172e-05, 8.26109999999998e-05, 8.651400000000281e-05, 8.076400000000053e-05, 8.46110000000018e-05, 8.172199999999935e-05, 8.065299999999997e-05, 8.451400000000081e-05, 8.270900000000025e-05, 8.559699999999976e-05, 8.363899999999994e-05, 8.26109999999998e-05, 8.36529999999995e-05, 8.458299999999919e-05, 8.07910000000002e-05, 8.36529999999995e-05, 8.652799999999891e-05, 8.555600000000052e-05, 8.649999999999977e-05, 8.075000000000096e-05, 8.651399999999934e-05, 8.17230000000023e-05, 8.175000000000196e-05, 8.076400000000053e-05, 8.747299999999764e-05, 8.452800000000038e-05, 8.27230000000033e-05, 8.552800000000138e-05, 8.747200000000163e-05, 8.365200000000003e-05, 8.459699999999876e-05, 8.176400000000153e-05, 8.356999999999809e-05, 8.742999999999945e-05, 8.363899999999994e-05]</msg>
<status status="PASS" starttime="20201112 09:54:39.734" endtime="20201112 09:54:39.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.730" endtime="20201112 09:54:39.737"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.739" endtime="20201112 09:54:39.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:39.743" endtime="20201112 09:54:39.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.741" endtime="20201112 09:54:39.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.738" endtime="20201112 09:54:39.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.368" endtime="20201112 09:54:39.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.367" endtime="20201112 09:54:39.764"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.772" endtime="20201112 09:54:39.795"></status>
</kw>
<msg timestamp="20201112 09:54:39.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.771" endtime="20201112 09:54:39.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.797" endtime="20201112 09:54:39.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.799" endtime="20201112 09:54:39.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.768" endtime="20201112 09:54:39.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.766" endtime="20201112 09:54:39.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.808" endtime="20201112 09:54:40.094"></status>
</kw>
<msg timestamp="20201112 09:54:40.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022835014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022919667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.806" endtime="20201112 09:54:40.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022835014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022919667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.099" endtime="20201112 09:54:40.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.107" endtime="20201112 09:54:40.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.804" endtime="20201112 09:54:40.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.802" endtime="20201112 09:54:40.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:40.114" level="INFO">${RESULT} = [{'time': 0.022919667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.46530000000005e-05, 'source_diff': 8.46530000000005e-05}, {'time': 0.023011625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:40.110" endtime="20201112 09:54:40.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:40.128" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:40.115" endtime="20201112 09:54:40.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.133" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 09:54:40.132" endtime="20201112 09:54:40.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.135" level="INFO">VALUE: [8.46530000000005e-05, 8.73470000000015e-05, 8.17230000000023e-05, 8.066699999999954e-05, 8.270900000000025e-05, 8.543000000000092e-05, 8.46110000000018e-05, 8.638899999999922e-05, 8.550000000000224e-05, 8.36249999999969e-05, 8.452800000000038e-05, 8.263899999999894e-05, 8.073600000000139e-05, 8.359700000000123e-05, 8.07780000000001e-05, 8.351400000000328e-05, 8.073700000000086e-05, 8.166600000000107e-05, 8.354199999999895e-05, 8.64860000000002e-05, 8.158399999999913e-05, 8.651400000000281e-05, 8.262500000000284e-05, 8.551400000000181e-05, 8.363899999999994e-05, 8.551400000000181e-05, 8.162499999999837e-05, 8.269500000000068e-05, 8.458400000000213e-05, 8.170800000000325e-05, 8.268100000000111e-05, 8.544499999999997e-05, 8.363899999999994e-05, 8.07780000000001e-05, 8.266699999999808e-05, 8.354199999999895e-05, 8.454100000000048e-05, 8.065299999999997e-05, 8.458299999999919e-05, 8.554200000000095e-05, 8.456999999999909e-05, 8.652799999999891e-05, 8.645900000000054e-05, 8.173599999999892e-05, 8.355599999999852e-05, 8.363899999999994e-05, 8.174999999999849e-05, 8.448699999999768e-05, 8.172199999999935e-05, 8.361099999999733e-05]</msg>
<status status="PASS" starttime="20201112 09:54:40.134" endtime="20201112 09:54:40.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.129" endtime="20201112 09:54:40.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.139" endtime="20201112 09:54:40.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:40.142" endtime="20201112 09:54:40.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.141" endtime="20201112 09:54:40.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.137" endtime="20201112 09:54:40.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.765" endtime="20201112 09:54:40.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.764" endtime="20201112 09:54:40.163"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.172" endtime="20201112 09:54:40.191"></status>
</kw>
<msg timestamp="20201112 09:54:40.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.170" endtime="20201112 09:54:40.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.192" endtime="20201112 09:54:40.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.195" endtime="20201112 09:54:40.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.167" endtime="20201112 09:54:40.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.165" endtime="20201112 09:54:40.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.204" endtime="20201112 09:54:40.492"></status>
</kw>
<msg timestamp="20201112 09:54:40.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020351069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020422292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.202" endtime="20201112 09:54:40.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020351069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020422292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.496" endtime="20201112 09:54:40.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.504" endtime="20201112 09:54:40.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.200" endtime="20201112 09:54:40.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.198" endtime="20201112 09:54:40.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:40.511" level="INFO">${RESULT} = [{'time': 0.020422292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.12230000000022e-05, 'source_diff': 7.12230000000022e-05}, {'time': 0.020514653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:40.507" endtime="20201112 09:54:40.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:40.524" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:40.512" endtime="20201112 09:54:40.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.528" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 09:54:40.527" endtime="20201112 09:54:40.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.531" level="INFO">VALUE: [7.12230000000022e-05, 8.270900000000025e-05, 8.36529999999995e-05, 8.459700000000223e-05, 8.554100000000148e-05, 8.654199999999848e-05, 8.36529999999995e-05, 8.36110000000008e-05, 8.654099999999901e-05, 8.363800000000046e-05, 8.461099999999833e-05, 8.367999999999917e-05, 8.459699999999876e-05, 8.362500000000037e-05, 8.648599999999673e-05, 8.64310000000014e-05, 8.176400000000153e-05, 8.458299999999919e-05, 8.651399999999934e-05, 8.26109999999998e-05, 8.36529999999995e-05, 8.07780000000001e-05, 8.651399999999934e-05, 8.458299999999919e-05, 8.162500000000183e-05, 8.558300000000019e-05, 8.269500000000068e-05, 8.461099999999833e-05, 8.36529999999995e-05, 8.169400000000021e-05, 8.458299999999919e-05, 8.652699999999944e-05, 8.363899999999994e-05, 8.262499999999937e-05, 8.368100000000211e-05, 8.363899999999994e-05, 8.173600000000239e-05, 8.559799999999923e-05, 8.270900000000025e-05, 7.976399999999953e-05, 8.463899999999747e-05, 8.163899999999794e-05, 8.356899999999862e-05, 8.363899999999994e-05, 8.268099999999765e-05, 8.175000000000196e-05, 8.270800000000078e-05, 8.355600000000199e-05, 8.373600000000092e-05, 8.54859999999992e-05]</msg>
<status status="PASS" starttime="20201112 09:54:40.530" endtime="20201112 09:54:40.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.525" endtime="20201112 09:54:40.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.535" endtime="20201112 09:54:40.536"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:40.538" endtime="20201112 09:54:40.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.536" endtime="20201112 09:54:40.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.533" endtime="20201112 09:54:40.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.164" endtime="20201112 09:54:40.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.163" endtime="20201112 09:54:40.559"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.568" endtime="20201112 09:54:40.587"></status>
</kw>
<msg timestamp="20201112 09:54:40.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.566" endtime="20201112 09:54:40.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.589" endtime="20201112 09:54:40.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.591" endtime="20201112 09:54:40.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.563" endtime="20201112 09:54:40.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.561" endtime="20201112 09:54:40.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.600" endtime="20201112 09:54:40.887"></status>
</kw>
<msg timestamp="20201112 09:54:40.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021342514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021435722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.599" endtime="20201112 09:54:40.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021342514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021435722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.891" endtime="20201112 09:54:40.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.899" endtime="20201112 09:54:40.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.596" endtime="20201112 09:54:40.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.595" endtime="20201112 09:54:40.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:40.906" level="INFO">${RESULT} = [{'time': 0.021435722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.320800000000087e-05, 'source_diff': 9.320800000000087e-05}, {'time': 0.021526778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:40.903" endtime="20201112 09:54:40.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:40.919" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:40.907" endtime="20201112 09:54:40.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.924" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 09:54:40.923" endtime="20201112 09:54:40.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.926" level="INFO">VALUE: [9.320800000000087e-05, 8.069499999999868e-05, 8.270800000000078e-05, 8.640299999999879e-05, 8.638899999999922e-05, 8.080499999999977e-05, 8.169499999999968e-05, 8.373600000000092e-05, 8.352799999999938e-05, 8.263899999999894e-05, 8.358400000000113e-05, 8.077700000000063e-05, 8.063899999999694e-05, 8.269500000000068e-05, 8.069399999999921e-05, 8.070900000000172e-05, 8.258300000000066e-05, 8.268100000000111e-05, 8.258300000000066e-05, 8.356999999999809e-05, 8.26529999999985e-05, 8.454199999999995e-05, 8.263899999999894e-05, 8.173599999999892e-05, 8.369399999999874e-05, 8.451400000000081e-05, 8.557000000000009e-05, 8.16390000000014e-05, 8.448600000000167e-05, 8.654099999999901e-05, 8.170799999999978e-05, 8.738900000000022e-05, 8.544499999999997e-05, 8.356900000000209e-05, 8.551400000000181e-05, 8.262499999999937e-05, 8.270900000000025e-05, 8.359700000000123e-05, 8.36659999999996e-05, 8.64310000000014e-05, 8.640199999999931e-05, 8.558300000000019e-05, 8.644399999999802e-05, 8.454199999999995e-05, 8.079199999999967e-05, 8.265300000000197e-05, 8.458299999999919e-05, 8.550000000000224e-05, 8.744500000000197e-05, 8.352799999999938e-05]</msg>
<status status="PASS" starttime="20201112 09:54:40.925" endtime="20201112 09:54:40.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.920" endtime="20201112 09:54:40.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.930" endtime="20201112 09:54:40.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:40.933" endtime="20201112 09:54:40.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.932" endtime="20201112 09:54:40.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.928" endtime="20201112 09:54:40.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.560" endtime="20201112 09:54:40.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.559" endtime="20201112 09:54:40.954"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.963" endtime="20201112 09:54:40.984"></status>
</kw>
<msg timestamp="20201112 09:54:40.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.961" endtime="20201112 09:54:40.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.986" endtime="20201112 09:54:40.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.988" endtime="20201112 09:54:40.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.958" endtime="20201112 09:54:40.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.956" endtime="20201112 09:54:40.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.997" endtime="20201112 09:54:41.284"></status>
</kw>
<msg timestamp="20201112 09:54:41.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023138764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023211903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.996" endtime="20201112 09:54:41.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023138764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023211903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:41.288" endtime="20201112 09:54:41.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.297" endtime="20201112 09:54:41.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.993" endtime="20201112 09:54:41.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.991" endtime="20201112 09:54:41.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:41.304" level="INFO">${RESULT} = [{'time': 0.023211903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.313899999999984e-05, 'source_diff': 7.313899999999984e-05}, {'time': 0.02330325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:41.301" endtime="20201112 09:54:41.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:41.317" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:41.305" endtime="20201112 09:54:41.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.322" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 09:54:41.321" endtime="20201112 09:54:41.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.325" level="INFO">VALUE: [7.313899999999984e-05, 8.161100000000227e-05, 8.368099999999865e-05, 8.544499999999997e-05, 8.17369999999984e-05, 8.354099999999948e-05, 8.365300000000297e-05, 8.269500000000068e-05, 8.07369999999974e-05, 7.981899999999834e-05, 8.540300000000126e-05, 8.16659999999976e-05, 8.36529999999995e-05, 8.64860000000002e-05, 8.451400000000081e-05, 8.175000000000196e-05, 8.448600000000167e-05, 8.644399999999802e-05, 8.166700000000054e-05, 8.734699999999804e-05, 8.173599999999892e-05, 8.633300000000094e-05, 8.451400000000081e-05, 8.269500000000068e-05, 8.259700000000023e-05, 8.555599999999705e-05, 8.551399999999834e-05, 8.169499999999968e-05, 8.370800000000178e-05, 8.450000000000124e-05, 8.363899999999994e-05, 8.456899999999962e-05, 8.54859999999992e-05, 8.655600000000152e-05, 8.163899999999794e-05, 7.98190000000018e-05, 8.54729999999991e-05, 8.64860000000002e-05, 8.643000000000192e-05, 8.176400000000153e-05, 8.36529999999995e-05, 8.555600000000052e-05, 8.265300000000197e-05, 8.35980000000007e-05, 8.459799999999823e-05, 8.550000000000224e-05, 8.072200000000182e-05, 8.07780000000001e-05, 8.363899999999994e-05, 8.36529999999995e-05]</msg>
<status status="PASS" starttime="20201112 09:54:41.323" endtime="20201112 09:54:41.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.318" endtime="20201112 09:54:41.326"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.328" endtime="20201112 09:54:41.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:41.331" endtime="20201112 09:54:41.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.330" endtime="20201112 09:54:41.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.326" endtime="20201112 09:54:41.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.955" endtime="20201112 09:54:41.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.954" endtime="20201112 09:54:41.352"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.361" endtime="20201112 09:54:41.382"></status>
</kw>
<msg timestamp="20201112 09:54:41.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.359" endtime="20201112 09:54:41.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.384" endtime="20201112 09:54:41.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.386" endtime="20201112 09:54:41.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.357" endtime="20201112 09:54:41.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.355" endtime="20201112 09:54:41.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.396" endtime="20201112 09:54:41.682"></status>
</kw>
<msg timestamp="20201112 09:54:41.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021683736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021752069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:41.394" endtime="20201112 09:54:41.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021683736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021752069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:41.687" endtime="20201112 09:54:41.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.695" endtime="20201112 09:54:41.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.391" endtime="20201112 09:54:41.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.389" endtime="20201112 09:54:41.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:41.702" level="INFO">${RESULT} = [{'time': 0.021752069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.833300000000028e-05, 'source_diff': 6.833300000000028e-05}, {'time': 0.021843861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:41.698" endtime="20201112 09:54:41.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:41.716" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:41.703" endtime="20201112 09:54:41.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.721" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 09:54:41.720" endtime="20201112 09:54:41.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.723" level="INFO">VALUE: [6.833300000000028e-05, 8.067999999999964e-05, 8.36249999999969e-05, 8.54859999999992e-05, 8.554200000000095e-05, 8.641700000000183e-05, 8.07910000000002e-05, 8.555500000000105e-05, 8.256900000000109e-05, 8.26529999999985e-05, 8.358300000000166e-05, 8.74310000000024e-05, 8.455599999999952e-05, 8.642999999999845e-05, 8.64860000000002e-05, 8.357000000000156e-05, 8.165199999999803e-05, 8.651299999999987e-05, 8.173599999999892e-05, 8.16109999999988e-05, 8.273599999999992e-05, 8.363899999999994e-05, 8.447300000000157e-05, 8.561099999999933e-05, 8.270799999999731e-05, 8.255500000000152e-05, 8.175000000000196e-05, 8.365200000000003e-05, 8.351399999999981e-05, 8.54310000000004e-05, 8.07780000000001e-05, 8.738900000000022e-05, 8.459699999999876e-05, 8.654199999999848e-05, 8.456899999999962e-05, 8.641700000000183e-05, 8.076400000000053e-05, 8.456899999999962e-05, 8.440300000000026e-05, 8.176399999999806e-05, 8.643099999999793e-05, 8.173599999999892e-05, 8.454199999999995e-05, 8.645800000000106e-05, 8.448600000000167e-05, 8.652799999999891e-05, 8.643099999999793e-05, 8.554099999999801e-05, 8.272299999999982e-05, 8.076400000000053e-05]</msg>
<status status="PASS" starttime="20201112 09:54:41.722" endtime="20201112 09:54:41.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.717" endtime="20201112 09:54:41.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.726" endtime="20201112 09:54:41.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:41.730" endtime="20201112 09:54:41.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.728" endtime="20201112 09:54:41.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.725" endtime="20201112 09:54:41.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.353" endtime="20201112 09:54:41.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.353" endtime="20201112 09:54:41.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.120" endtime="20201112 09:54:41.751"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:41.756" endtime="20201112 09:54:41.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.754" endtime="20201112 09:54:41.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.753" endtime="20201112 09:54:41.776"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 09:54:02.008" endtime="20201112 09:54:41.777" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:41.786" endtime="20201112 09:54:41.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.785" endtime="20201112 09:54:41.807"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.820" endtime="20201112 09:54:41.843"></status>
</kw>
<msg timestamp="20201112 09:54:41.844" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.818" endtime="20201112 09:54:41.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.846" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.845" endtime="20201112 09:54:41.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.849" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:41.847" endtime="20201112 09:54:41.850"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:41.816" endtime="20201112 09:54:41.850"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:41.813" endtime="20201112 09:54:41.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.812" endtime="20201112 09:54:41.851"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:41.855" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:41.854" endtime="20201112 09:54:41.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.852" endtime="20201112 09:54:41.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.811" endtime="20201112 09:54:41.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.810" endtime="20201112 09:54:41.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.857" endtime="20201112 09:54:41.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.809" endtime="20201112 09:54:41.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.807" endtime="20201112 09:54:41.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.783" endtime="20201112 09:54:41.859"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.870" endtime="20201112 09:54:41.889"></status>
</kw>
<msg timestamp="20201112 09:54:41.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.868" endtime="20201112 09:54:41.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.891" endtime="20201112 09:54:41.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.893" endtime="20201112 09:54:41.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.866" endtime="20201112 09:54:41.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.863" endtime="20201112 09:54:41.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.903" endtime="20201112 09:54:42.188"></status>
</kw>
<msg timestamp="20201112 09:54:42.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079153306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079162, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:41.901" endtime="20201112 09:54:42.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079153306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079162, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:42.192" endtime="20201112 09:54:42.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.200" endtime="20201112 09:54:42.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.898" endtime="20201112 09:54:42.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.897" endtime="20201112 09:54:42.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:42.207" level="INFO">${RESULT} = [{'time': 0.079162, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.693999999989654e-06, 'source_diff': 8.693999999989654e-06}, {'time': 0.079178667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:54:42.203" endtime="20201112 09:54:42.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:42.221" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:42.208" endtime="20201112 09:54:42.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.225" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 09:54:42.224" endtime="20201112 09:54:42.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.228" level="INFO">VALUE: [8.693999999989654e-06, 8.749999999987934e-06, 8.736000000009181e-06, 8.708999999995637e-06, 8.680999999996497e-06, 8.722000000002672e-06, 8.735999999995303e-06, 8.721999999988794e-06, 8.693999999989654e-06, 8.722000000002672e-06, 8.707999999996163e-06, 8.693999999989654e-06, 8.737000000008655e-06, 8.721999999988794e-06, 8.709000000009515e-06, 8.722000000002672e-06, 8.750000000001812e-06, 8.708000000010041e-06, 8.707999999996163e-06, 8.708000000010041e-06, 8.723000000002146e-06, 8.805000000000618e-06, 8.735999999995303e-06, 8.791999999993583e-06, 8.735999999995303e-06, 8.722000000002672e-06, 8.736000000009181e-06, 8.735999999995303e-06, 8.708999999995637e-06, 8.722000000002672e-06, 8.735999999995303e-06, 8.709000000009515e-06, 8.722000000002672e-06, 8.722000000002672e-06, 8.735999999995303e-06, 8.707999999996163e-06, 8.722000000002672e-06, 8.737000000008655e-06, 8.723000000002146e-06, 8.723000000002146e-06, 8.723000000002146e-06, 8.722000000002672e-06, 8.76299999999497e-06, 8.693999999989654e-06, 8.722000000002672e-06, 8.680999999996497e-06, 8.694000000003532e-06, 8.694000000003532e-06, 8.708999999995637e-06, 8.708000000010041e-06]</msg>
<status status="PASS" starttime="20201112 09:54:42.226" endtime="20201112 09:54:42.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.222" endtime="20201112 09:54:42.229"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.231" endtime="20201112 09:54:42.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:42.234" endtime="20201112 09:54:42.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.233" endtime="20201112 09:54:42.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.229" endtime="20201112 09:54:42.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.862" endtime="20201112 09:54:42.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.861" endtime="20201112 09:54:42.261"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.270" endtime="20201112 09:54:42.286"></status>
</kw>
<msg timestamp="20201112 09:54:42.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.269" endtime="20201112 09:54:42.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.287" endtime="20201112 09:54:42.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.290" endtime="20201112 09:54:42.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.266" endtime="20201112 09:54:42.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.264" endtime="20201112 09:54:42.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.299" endtime="20201112 09:54:42.584"></status>
</kw>
<msg timestamp="20201112 09:54:42.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028117278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028125972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:42.297" endtime="20201112 09:54:42.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028117278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028125972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:42.588" endtime="20201112 09:54:42.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.596" endtime="20201112 09:54:42.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.295" endtime="20201112 09:54:42.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.293" endtime="20201112 09:54:42.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:42.603" level="INFO">${RESULT} = [{'time': 0.028125972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.028142069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:42.600" endtime="20201112 09:54:42.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:42.617" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:42.604" endtime="20201112 09:54:42.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.622" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 09:54:42.621" endtime="20201112 09:54:42.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.624" level="INFO">VALUE: [8.694000000000063e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.722000000002672e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.736999999998246e-06, 8.778000000000952e-06, 8.737000000001716e-06, 8.722000000002672e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.723000000002146e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.722999999998676e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.736999999998246e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.722000000002672e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.694000000000063e-06, 8.736000000002242e-06, 8.707999999999633e-06, 8.722000000002672e-06]</msg>
<status status="PASS" starttime="20201112 09:54:42.623" endtime="20201112 09:54:42.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.618" endtime="20201112 09:54:42.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.627" endtime="20201112 09:54:42.629"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:42.631" endtime="20201112 09:54:42.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.629" endtime="20201112 09:54:42.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.625" endtime="20201112 09:54:42.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.263" endtime="20201112 09:54:42.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.262" endtime="20201112 09:54:42.652"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.660" endtime="20201112 09:54:42.684"></status>
</kw>
<msg timestamp="20201112 09:54:42.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.659" endtime="20201112 09:54:42.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.685" endtime="20201112 09:54:42.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.688" endtime="20201112 09:54:42.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.656" endtime="20201112 09:54:42.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.654" endtime="20201112 09:54:42.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.697" endtime="20201112 09:54:42.982"></status>
</kw>
<msg timestamp="20201112 09:54:42.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023497583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023506347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:42.695" endtime="20201112 09:54:42.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023497583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023506347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:42.986" endtime="20201112 09:54:42.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.994" endtime="20201112 09:54:42.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.693" endtime="20201112 09:54:42.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.691" endtime="20201112 09:54:42.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:43.002" level="INFO">${RESULT} = [{'time': 0.023506347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.023521306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:42.998" endtime="20201112 09:54:43.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:43.015" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:43.003" endtime="20201112 09:54:43.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.020" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 09:54:43.019" endtime="20201112 09:54:43.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.022" level="INFO">VALUE: [8.764000000001382e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.763000000001908e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.653000000000827e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.722999999998676e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.708000000003102e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.777999999997482e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.736999999998246e-06, 8.723000000002146e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.722999999998676e-06, 8.721999999999203e-06, 8.764000000001382e-06, 8.723000000002146e-06, 8.721999999999203e-06, 8.776999999998009e-06, 8.792000000000522e-06, 8.708000000003102e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.694000000000063e-06]</msg>
<status status="PASS" starttime="20201112 09:54:43.021" endtime="20201112 09:54:43.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.016" endtime="20201112 09:54:43.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.026" endtime="20201112 09:54:43.027"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:43.029" endtime="20201112 09:54:43.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.027" endtime="20201112 09:54:43.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.024" endtime="20201112 09:54:43.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.653" endtime="20201112 09:54:43.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.652" endtime="20201112 09:54:43.050"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.058" endtime="20201112 09:54:43.075"></status>
</kw>
<msg timestamp="20201112 09:54:43.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.057" endtime="20201112 09:54:43.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.077" endtime="20201112 09:54:43.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.079" endtime="20201112 09:54:43.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.054" endtime="20201112 09:54:43.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.052" endtime="20201112 09:54:43.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.088" endtime="20201112 09:54:43.377"></status>
</kw>
<msg timestamp="20201112 09:54:43.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022261333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:43.087" endtime="20201112 09:54:43.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022261333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:43.381" endtime="20201112 09:54:43.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.390" endtime="20201112 09:54:43.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.084" endtime="20201112 09:54:43.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.082" endtime="20201112 09:54:43.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:43.397" level="INFO">${RESULT} = [{'time': 0.022261333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.722000000002672e-06, 'source_diff': 8.722000000002672e-06}, {'time': 0.022275264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:43.393" endtime="20201112 09:54:43.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:43.410" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:43.398" endtime="20201112 09:54:43.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.414" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 09:54:43.413" endtime="20201112 09:54:43.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.417" level="INFO">VALUE: [8.722000000002672e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.737000000001716e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.750000000001812e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.736999999998246e-06, 8.707999999999633e-06, 8.723000000002146e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.666000000000923e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.721999999999203e-06, 8.722999999998676e-06, 8.722999999998676e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.722999999998676e-06, 8.667000000000397e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.722999999998676e-06, 8.722000000002672e-06, 8.750000000001812e-06, 8.667000000000397e-06, 8.695000000003006e-06, 8.763999999997912e-06]</msg>
<status status="PASS" starttime="20201112 09:54:43.415" endtime="20201112 09:54:43.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.411" endtime="20201112 09:54:43.418"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.420" endtime="20201112 09:54:43.422"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:43.424" endtime="20201112 09:54:43.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.422" endtime="20201112 09:54:43.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.419" endtime="20201112 09:54:43.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.051" endtime="20201112 09:54:43.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.050" endtime="20201112 09:54:43.445"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.453" endtime="20201112 09:54:43.472"></status>
</kw>
<msg timestamp="20201112 09:54:43.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.452" endtime="20201112 09:54:43.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.473" endtime="20201112 09:54:43.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.476" endtime="20201112 09:54:43.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.449" endtime="20201112 09:54:43.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.447" endtime="20201112 09:54:43.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.485" endtime="20201112 09:54:43.771"></status>
</kw>
<msg timestamp="20201112 09:54:43.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024413028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02442175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:43.483" endtime="20201112 09:54:43.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024413028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02442175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:43.775" endtime="20201112 09:54:43.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.783" endtime="20201112 09:54:43.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.481" endtime="20201112 09:54:43.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.479" endtime="20201112 09:54:43.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:43.790" level="INFO">${RESULT} = [{'time': 0.02442175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.721999999999203e-06, 'source_diff': 8.721999999999203e-06}, {'time': 0.024435778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:43.787" endtime="20201112 09:54:43.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:43.803" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:43.791" endtime="20201112 09:54:43.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.808" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 09:54:43.807" endtime="20201112 09:54:43.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.810" level="INFO">VALUE: [8.721999999999203e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.723000000002146e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.722000000002672e-06, 8.723000000002146e-06, 8.680999999999967e-06, 8.763999999997912e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.736000000002242e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.763999999997912e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.722999999998676e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.735999999998773e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.722000000002672e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.722000000002672e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.736000000002242e-06, 8.736000000002242e-06]</msg>
<status status="PASS" starttime="20201112 09:54:43.809" endtime="20201112 09:54:43.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.804" endtime="20201112 09:54:43.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.814" endtime="20201112 09:54:43.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:43.817" endtime="20201112 09:54:43.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.816" endtime="20201112 09:54:43.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.812" endtime="20201112 09:54:43.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.446" endtime="20201112 09:54:43.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.445" endtime="20201112 09:54:43.838"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.847" endtime="20201112 09:54:43.866"></status>
</kw>
<msg timestamp="20201112 09:54:43.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.845" endtime="20201112 09:54:43.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.867" endtime="20201112 09:54:43.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.870" endtime="20201112 09:54:43.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.843" endtime="20201112 09:54:43.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.841" endtime="20201112 09:54:43.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.879" endtime="20201112 09:54:44.164"></status>
</kw>
<msg timestamp="20201112 09:54:44.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02276175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022770514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:43.877" endtime="20201112 09:54:44.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02276175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022770514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:44.169" endtime="20201112 09:54:44.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.177" endtime="20201112 09:54:44.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.875" endtime="20201112 09:54:44.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.873" endtime="20201112 09:54:44.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:44.184" level="INFO">${RESULT} = [{'time': 0.022770514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.763999999997912e-06, 'source_diff': 8.763999999997912e-06}, {'time': 0.022785125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:44.180" endtime="20201112 09:54:44.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:44.197" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:44.185" endtime="20201112 09:54:44.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.201" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 09:54:44.200" endtime="20201112 09:54:44.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.204" level="INFO">VALUE: [8.763999999997912e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.722000000002672e-06, 8.722000000002672e-06, 8.722000000002672e-06, 8.708999999999106e-06, 8.750000000001812e-06, 8.722999999998676e-06, 8.665999999997454e-06, 8.736999999998246e-06, 8.667000000000397e-06, 8.721999999999203e-06, 8.722000000002672e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.736999999998246e-06, 8.721999999999203e-06, 8.709000000002576e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.708999999999106e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.736000000002242e-06, 8.708000000003102e-06, 8.722000000002672e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.680999999999967e-06, 8.708000000003102e-06, 8.764000000001382e-06, 8.708999999999106e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.721999999999203e-06]</msg>
<status status="PASS" starttime="20201112 09:54:44.202" endtime="20201112 09:54:44.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.198" endtime="20201112 09:54:44.205"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.207" endtime="20201112 09:54:44.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:44.211" endtime="20201112 09:54:44.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.209" endtime="20201112 09:54:44.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.206" endtime="20201112 09:54:44.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.839" endtime="20201112 09:54:44.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.838" endtime="20201112 09:54:44.231"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.240" endtime="20201112 09:54:44.256"></status>
</kw>
<msg timestamp="20201112 09:54:44.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.239" endtime="20201112 09:54:44.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.258" endtime="20201112 09:54:44.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.260" endtime="20201112 09:54:44.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.236" endtime="20201112 09:54:44.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.234" endtime="20201112 09:54:44.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.269" endtime="20201112 09:54:44.556"></status>
</kw>
<msg timestamp="20201112 09:54:44.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021325125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021333861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:44.268" endtime="20201112 09:54:44.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021325125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021333861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:44.560" endtime="20201112 09:54:44.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.569" endtime="20201112 09:54:44.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.265" endtime="20201112 09:54:44.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.263" endtime="20201112 09:54:44.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:44.575" level="INFO">${RESULT} = [{'time': 0.021333861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.735999999998773e-06, 'source_diff': 8.735999999998773e-06}, {'time': 0.021350764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:44.572" endtime="20201112 09:54:44.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:44.588" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:44.576" endtime="20201112 09:54:44.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.593" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 09:54:44.592" endtime="20201112 09:54:44.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.595" level="INFO">VALUE: [8.735999999998773e-06, 8.792000000000522e-06, 8.722000000002672e-06, 8.694999999999536e-06, 8.639000000001257e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.709000000002576e-06, 8.694999999999536e-06, 8.652999999997357e-06, 8.722999999998676e-06, 8.762999999998439e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.736999999998246e-06, 8.680000000000493e-06, 8.708999999999106e-06, 8.708999999999106e-06, 8.680000000000493e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.763999999997912e-06, 8.708999999999106e-06, 8.750000000001812e-06, 8.694999999999536e-06, 8.736000000002242e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.708000000003102e-06, 8.694999999999536e-06, 8.666999999996927e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.708999999999106e-06, 8.694000000000063e-06]</msg>
<status status="PASS" starttime="20201112 09:54:44.594" endtime="20201112 09:54:44.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.589" endtime="20201112 09:54:44.597"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.599" endtime="20201112 09:54:44.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:44.602" endtime="20201112 09:54:44.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.601" endtime="20201112 09:54:44.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.597" endtime="20201112 09:54:44.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.232" endtime="20201112 09:54:44.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.232" endtime="20201112 09:54:44.623"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.632" endtime="20201112 09:54:44.648"></status>
</kw>
<msg timestamp="20201112 09:54:44.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.631" endtime="20201112 09:54:44.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.649" endtime="20201112 09:54:44.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.652" endtime="20201112 09:54:44.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.628" endtime="20201112 09:54:44.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.626" endtime="20201112 09:54:44.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.661" endtime="20201112 09:54:44.948"></status>
</kw>
<msg timestamp="20201112 09:54:44.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021322472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021331181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:44.659" endtime="20201112 09:54:44.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021322472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021331181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:44.953" endtime="20201112 09:54:44.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.961" endtime="20201112 09:54:44.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.657" endtime="20201112 09:54:44.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.655" endtime="20201112 09:54:44.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:44.968" level="INFO">${RESULT} = [{'time': 0.021331181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.709000000002576e-06, 'source_diff': 8.709000000002576e-06}, {'time': 0.021348611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:44.964" endtime="20201112 09:54:44.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:44.981" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:44.969" endtime="20201112 09:54:44.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.985" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 09:54:44.984" endtime="20201112 09:54:44.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.988" level="INFO">VALUE: [8.709000000002576e-06, 8.694000000000063e-06, 8.792000000000522e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.722000000002672e-06, 8.708999999999106e-06, 8.750000000001812e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.764000000001382e-06, 8.694999999999536e-06, 8.749999999998342e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.722999999998676e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.722999999998676e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.805000000000618e-06, 8.749999999998342e-06, 8.694000000000063e-06, 8.709000000002576e-06, 8.721999999999203e-06, 8.735999999998773e-06]</msg>
<status status="PASS" starttime="20201112 09:54:44.986" endtime="20201112 09:54:44.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.982" endtime="20201112 09:54:44.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.991" endtime="20201112 09:54:44.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:44.995" endtime="20201112 09:54:45.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.993" endtime="20201112 09:54:45.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.990" endtime="20201112 09:54:45.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.624" endtime="20201112 09:54:45.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.624" endtime="20201112 09:54:45.016"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.025" endtime="20201112 09:54:45.041"></status>
</kw>
<msg timestamp="20201112 09:54:45.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.023" endtime="20201112 09:54:45.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.043" endtime="20201112 09:54:45.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.045" endtime="20201112 09:54:45.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.020" endtime="20201112 09:54:45.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.018" endtime="20201112 09:54:45.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.054" endtime="20201112 09:54:45.340"></status>
</kw>
<msg timestamp="20201112 09:54:45.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020737778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020746514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:45.053" endtime="20201112 09:54:45.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020737778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020746514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:45.344" endtime="20201112 09:54:45.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.353" endtime="20201112 09:54:45.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.050" endtime="20201112 09:54:45.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.048" endtime="20201112 09:54:45.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:45.360" level="INFO">${RESULT} = [{'time': 0.020746514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.020759833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:45.356" endtime="20201112 09:54:45.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:45.374" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:45.361" endtime="20201112 09:54:45.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.378" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 09:54:45.377" endtime="20201112 09:54:45.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.381" level="INFO">VALUE: [8.736000000002242e-06, 8.763999999997912e-06, 8.777000000001478e-06, 8.694999999999536e-06, 8.708000000003102e-06, 8.708999999999106e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.695000000003006e-06, 8.722999999998676e-06, 8.749999999998342e-06, 8.707999999999633e-06, 8.709000000002576e-06, 8.736000000002242e-06, 8.764000000001382e-06, 8.694000000000063e-06, 8.679999999997023e-06, 8.694999999999536e-06, 8.737000000001716e-06, 8.749999999998342e-06, 8.666000000000923e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.722000000002672e-06, 8.749999999998342e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.708999999999106e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.708999999999106e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.679999999997023e-06, 8.694999999999536e-06, 8.624999999998217e-06, 8.764000000001382e-06, 8.709000000002576e-06, 8.735999999998773e-06]</msg>
<status status="PASS" starttime="20201112 09:54:45.379" endtime="20201112 09:54:45.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.375" endtime="20201112 09:54:45.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.384" endtime="20201112 09:54:45.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:45.388" endtime="20201112 09:54:45.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.386" endtime="20201112 09:54:45.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.382" endtime="20201112 09:54:45.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.017" endtime="20201112 09:54:45.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.016" endtime="20201112 09:54:45.409"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.417" endtime="20201112 09:54:45.437"></status>
</kw>
<msg timestamp="20201112 09:54:45.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.416" endtime="20201112 09:54:45.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.439" endtime="20201112 09:54:45.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.441" endtime="20201112 09:54:45.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.413" endtime="20201112 09:54:45.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.411" endtime="20201112 09:54:45.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.450" endtime="20201112 09:54:45.736"></status>
</kw>
<msg timestamp="20201112 09:54:45.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024994319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025003, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:45.448" endtime="20201112 09:54:45.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024994319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025003, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:45.740" endtime="20201112 09:54:45.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.749" endtime="20201112 09:54:45.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.446" endtime="20201112 09:54:45.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.444" endtime="20201112 09:54:45.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:45.755" level="INFO">${RESULT} = [{'time': 0.025003, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.025019278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:54:45.752" endtime="20201112 09:54:45.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:45.769" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:45.756" endtime="20201112 09:54:45.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.773" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 09:54:45.772" endtime="20201112 09:54:45.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.776" level="INFO">VALUE: [8.680999999999967e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.694000000000063e-06, 8.777999999997482e-06, 8.722000000002672e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.708000000003102e-06, 8.736999999998246e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.736999999998246e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.652000000001353e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.722999999998676e-06, 8.777999999997482e-06, 8.806000000000092e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.723000000002146e-06, 8.735999999998773e-06, 8.792000000000522e-06, 8.707999999999633e-06, 8.666000000000923e-06, 8.777999999997482e-06]</msg>
<status status="PASS" starttime="20201112 09:54:45.774" endtime="20201112 09:54:45.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.769" endtime="20201112 09:54:45.777"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.779" endtime="20201112 09:54:45.780"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:45.782" endtime="20201112 09:54:45.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.781" endtime="20201112 09:54:45.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.777" endtime="20201112 09:54:45.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.410" endtime="20201112 09:54:45.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.409" endtime="20201112 09:54:45.803"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.812" endtime="20201112 09:54:45.832"></status>
</kw>
<msg timestamp="20201112 09:54:45.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.810" endtime="20201112 09:54:45.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.834" endtime="20201112 09:54:45.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.836" endtime="20201112 09:54:45.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.808" endtime="20201112 09:54:45.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.806" endtime="20201112 09:54:45.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.845" endtime="20201112 09:54:46.133"></status>
</kw>
<msg timestamp="20201112 09:54:46.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02208825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022097, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 09:54:45.844" endtime="20201112 09:54:46.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02208825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022097, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 09:54:46.137" endtime="20201112 09:54:46.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.145" endtime="20201112 09:54:46.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.841" endtime="20201112 09:54:46.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.840" endtime="20201112 09:54:46.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:46.152" level="INFO">${RESULT} = [{'time': 0.022097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.749999999998342e-06, 'source_diff': 8.749999999998342e-06}, {'time': 0.022110514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:54:46.148" endtime="20201112 09:54:46.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:46.165" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:46.153" endtime="20201112 09:54:46.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.170" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 09:54:46.168" endtime="20201112 09:54:46.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.172" level="INFO">VALUE: [8.749999999998342e-06, 8.750000000001812e-06, 8.736999999998246e-06, 8.736000000002242e-06, 8.721999999999203e-06, 8.722000000002672e-06, 8.695000000003006e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.762999999998439e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.708000000003102e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.749999999998342e-06, 8.694999999999536e-06, 8.722000000002672e-06, 8.638000000001783e-06, 8.777999999997482e-06, 8.694999999999536e-06, 8.736000000002242e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.722999999998676e-06, 8.750000000001812e-06, 8.695000000003006e-06, 8.736999999998246e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.777000000001478e-06, 8.791999999997052e-06, 8.707999999999633e-06, 8.722999999998676e-06, 8.708000000003102e-06, 8.707999999999633e-06, 8.681000000003436e-06, 8.736000000002242e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.722000000002672e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.735999999998773e-06]</msg>
<status status="PASS" starttime="20201112 09:54:46.171" endtime="20201112 09:54:46.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.166" endtime="20201112 09:54:46.173"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.176" endtime="20201112 09:54:46.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:46.179" endtime="20201112 09:54:46.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.178" endtime="20201112 09:54:46.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.174" endtime="20201112 09:54:46.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.804" endtime="20201112 09:54:46.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.804" endtime="20201112 09:54:46.200"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.209" endtime="20201112 09:54:46.225"></status>
</kw>
<msg timestamp="20201112 09:54:46.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.207" endtime="20201112 09:54:46.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.227" endtime="20201112 09:54:46.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.229" endtime="20201112 09:54:46.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.205" endtime="20201112 09:54:46.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.202" endtime="20201112 09:54:46.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.238" endtime="20201112 09:54:46.525"></status>
</kw>
<msg timestamp="20201112 09:54:46.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022390514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:46.237" endtime="20201112 09:54:46.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022390514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:46.529" endtime="20201112 09:54:46.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.537" endtime="20201112 09:54:46.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.234" endtime="20201112 09:54:46.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.232" endtime="20201112 09:54:46.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:46.544" level="INFO">${RESULT} = [{'time': 0.022399292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.022415625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:46.541" endtime="20201112 09:54:46.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:46.557" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:46.545" endtime="20201112 09:54:46.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.562" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 09:54:46.561" endtime="20201112 09:54:46.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.564" level="INFO">VALUE: [8.778000000000952e-06, 8.708000000003102e-06, 8.695000000003006e-06, 8.722000000002672e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.709000000002576e-06, 8.709000000002576e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.749999999998342e-06, 8.737000000001716e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.639000000001257e-06, 8.721999999999203e-06, 8.737000000001716e-06, 8.694000000000063e-06, 8.708000000003102e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.708000000003102e-06, 8.806000000000092e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.723000000002146e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.707999999999633e-06, 8.709000000002576e-06, 8.723000000002146e-06, 8.735999999998773e-06, 8.722000000002672e-06, 8.694999999999536e-06]</msg>
<status status="PASS" starttime="20201112 09:54:46.563" endtime="20201112 09:54:46.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.558" endtime="20201112 09:54:46.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.568" endtime="20201112 09:54:46.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:46.571" endtime="20201112 09:54:46.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.570" endtime="20201112 09:54:46.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.566" endtime="20201112 09:54:46.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.201" endtime="20201112 09:54:46.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.200" endtime="20201112 09:54:46.592"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.601" endtime="20201112 09:54:46.617"></status>
</kw>
<msg timestamp="20201112 09:54:46.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.599" endtime="20201112 09:54:46.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.618" endtime="20201112 09:54:46.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.621" endtime="20201112 09:54:46.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.597" endtime="20201112 09:54:46.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.594" endtime="20201112 09:54:46.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.630" endtime="20201112 09:54:46.917"></status>
</kw>
<msg timestamp="20201112 09:54:46.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022204014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022212722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:46.628" endtime="20201112 09:54:46.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022204014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022212722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:46.921" endtime="20201112 09:54:46.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.930" endtime="20201112 09:54:46.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.626" endtime="20201112 09:54:46.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.624" endtime="20201112 09:54:46.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:46.936" level="INFO">${RESULT} = [{'time': 0.022212722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.022231972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:46.933" endtime="20201112 09:54:46.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:46.949" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:46.937" endtime="20201112 09:54:46.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.954" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 09:54:46.953" endtime="20201112 09:54:46.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.956" level="INFO">VALUE: [8.707999999999633e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.722000000002672e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.763999999997912e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.708999999999106e-06, 8.735999999998773e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.736000000002242e-06, 8.722999999998676e-06, 8.709000000002576e-06, 8.694000000000063e-06, 8.763999999997912e-06, 8.709000000002576e-06, 8.750000000001812e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.680000000000493e-06, 8.709000000002576e-06, 8.708000000003102e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.708999999999106e-06, 8.695000000003006e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.708000000003102e-06, 8.736000000002242e-06]</msg>
<status status="PASS" starttime="20201112 09:54:46.955" endtime="20201112 09:54:46.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.950" endtime="20201112 09:54:46.958"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.960" endtime="20201112 09:54:46.961"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:46.963" endtime="20201112 09:54:46.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.962" endtime="20201112 09:54:46.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.958" endtime="20201112 09:54:46.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.593" endtime="20201112 09:54:46.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.592" endtime="20201112 09:54:46.984"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.993" endtime="20201112 09:54:47.014"></status>
</kw>
<msg timestamp="20201112 09:54:47.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.991" endtime="20201112 09:54:47.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.016" endtime="20201112 09:54:47.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.018" endtime="20201112 09:54:47.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.989" endtime="20201112 09:54:47.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.987" endtime="20201112 09:54:47.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.027" endtime="20201112 09:54:47.314"></status>
</kw>
<msg timestamp="20201112 09:54:47.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021926889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021935597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:47.026" endtime="20201112 09:54:47.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021926889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021935597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:47.318" endtime="20201112 09:54:47.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.327" endtime="20201112 09:54:47.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.023" endtime="20201112 09:54:47.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.021" endtime="20201112 09:54:47.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:47.333" level="INFO">${RESULT} = [{'time': 0.021935597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.021951833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:47.330" endtime="20201112 09:54:47.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:47.346" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:47.334" endtime="20201112 09:54:47.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.351" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 09:54:47.350" endtime="20201112 09:54:47.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.353" level="INFO">VALUE: [8.707999999999633e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.723000000002146e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.792000000000522e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.750000000001812e-06, 8.639000000001257e-06, 8.721999999999203e-06, 8.776999999998009e-06, 8.736000000002242e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.722999999998676e-06, 8.721999999999203e-06, 8.722999999998676e-06, 8.750000000001812e-06, 8.708000000003102e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.666000000000923e-06, 8.736000000002242e-06, 8.723000000002146e-06, 8.737000000001716e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.791999999997052e-06, 8.667000000000397e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.777999999997482e-06, 8.707999999999633e-06, 8.736000000002242e-06, 8.723000000002146e-06, 8.736000000002242e-06, 8.694000000000063e-06, 8.736000000002242e-06]</msg>
<status status="PASS" starttime="20201112 09:54:47.352" endtime="20201112 09:54:47.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.347" endtime="20201112 09:54:47.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.361" endtime="20201112 09:54:47.362"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:47.364" endtime="20201112 09:54:47.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.363" endtime="20201112 09:54:47.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.359" endtime="20201112 09:54:47.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.985" endtime="20201112 09:54:47.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.985" endtime="20201112 09:54:47.385"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.395" endtime="20201112 09:54:47.411"></status>
</kw>
<msg timestamp="20201112 09:54:47.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.393" endtime="20201112 09:54:47.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.413" endtime="20201112 09:54:47.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.415" endtime="20201112 09:54:47.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.390" endtime="20201112 09:54:47.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.388" endtime="20201112 09:54:47.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.424" endtime="20201112 09:54:47.711"></status>
</kw>
<msg timestamp="20201112 09:54:47.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022910875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022919597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:47.423" endtime="20201112 09:54:47.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022910875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022919597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:47.716" endtime="20201112 09:54:47.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.724" endtime="20201112 09:54:47.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.420" endtime="20201112 09:54:47.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.418" endtime="20201112 09:54:47.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:47.730" level="INFO">${RESULT} = [{'time': 0.022919597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.721999999999203e-06, 'source_diff': 8.721999999999203e-06}, {'time': 0.022932917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:47.727" endtime="20201112 09:54:47.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:47.744" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:47.731" endtime="20201112 09:54:47.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.748" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 09:54:47.747" endtime="20201112 09:54:47.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.750" level="INFO">VALUE: [8.721999999999203e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.722000000002672e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.722999999998676e-06, 8.722000000002672e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.708999999999106e-06, 8.749999999998342e-06, 8.694000000000063e-06, 8.750000000001812e-06, 8.721999999999203e-06, 8.722999999998676e-06, 8.764000000001382e-06, 8.708999999999106e-06, 8.736000000002242e-06, 8.722000000002672e-06, 8.721999999999203e-06, 8.695000000003006e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.750000000001812e-06, 8.665999999997454e-06, 8.680999999999967e-06, 8.737000000001716e-06, 8.735999999998773e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.665999999997454e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.639000000001257e-06, 8.806000000000092e-06, 8.721999999999203e-06, 8.722999999998676e-06]</msg>
<status status="PASS" starttime="20201112 09:54:47.749" endtime="20201112 09:54:47.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.745" endtime="20201112 09:54:47.752"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.754" endtime="20201112 09:54:47.755"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:47.758" endtime="20201112 09:54:47.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.756" endtime="20201112 09:54:47.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.752" endtime="20201112 09:54:47.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.386" endtime="20201112 09:54:47.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.386" endtime="20201112 09:54:47.779"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.787" endtime="20201112 09:54:47.803"></status>
</kw>
<msg timestamp="20201112 09:54:47.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.786" endtime="20201112 09:54:47.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.804" endtime="20201112 09:54:47.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.807" endtime="20201112 09:54:47.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.783" endtime="20201112 09:54:47.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.781" endtime="20201112 09:54:47.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.816" endtime="20201112 09:54:48.103"></status>
</kw>
<msg timestamp="20201112 09:54:48.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021383444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021392167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:47.814" endtime="20201112 09:54:48.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021383444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021392167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:48.107" endtime="20201112 09:54:48.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.115" endtime="20201112 09:54:48.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.811" endtime="20201112 09:54:48.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.810" endtime="20201112 09:54:48.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:48.122" level="INFO">${RESULT} = [{'time': 0.021392167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.722999999998676e-06, 'source_diff': 8.722999999998676e-06}, {'time': 0.021410097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:48.119" endtime="20201112 09:54:48.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:48.136" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:48.123" endtime="20201112 09:54:48.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.140" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 09:54:48.139" endtime="20201112 09:54:48.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.142" level="INFO">VALUE: [8.722999999998676e-06, 8.653000000000827e-06, 8.723000000002146e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.750000000001812e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.722999999998676e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.749999999998342e-06, 8.708999999999106e-06, 8.680000000000493e-06, 8.736000000002242e-06, 8.763999999997912e-06, 8.723000000002146e-06, 8.707999999999633e-06, 8.749999999998342e-06, 8.708000000003102e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.750000000001812e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.722000000002672e-06, 8.749999999998342e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.722000000002672e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.737000000001716e-06]</msg>
<status status="PASS" starttime="20201112 09:54:48.141" endtime="20201112 09:54:48.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.136" endtime="20201112 09:54:48.144"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.146" endtime="20201112 09:54:48.147"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:48.149" endtime="20201112 09:54:48.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.148" endtime="20201112 09:54:48.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.144" endtime="20201112 09:54:48.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.779" endtime="20201112 09:54:48.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.779" endtime="20201112 09:54:48.170"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.179" endtime="20201112 09:54:48.196"></status>
</kw>
<msg timestamp="20201112 09:54:48.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:48.178" endtime="20201112 09:54:48.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:48.198" endtime="20201112 09:54:48.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.200" endtime="20201112 09:54:48.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.175" endtime="20201112 09:54:48.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.173" endtime="20201112 09:54:48.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.209" endtime="20201112 09:54:48.496"></status>
</kw>
<msg timestamp="20201112 09:54:48.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021444694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021453458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:48.208" endtime="20201112 09:54:48.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021444694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021453458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:48.500" endtime="20201112 09:54:48.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.509" endtime="20201112 09:54:48.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.205" endtime="20201112 09:54:48.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.203" endtime="20201112 09:54:48.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:48.516" level="INFO">${RESULT} = [{'time': 0.021453458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.021469167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:48.512" endtime="20201112 09:54:48.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:48.529" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:48.517" endtime="20201112 09:54:48.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.534" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 09:54:48.533" endtime="20201112 09:54:48.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.537" level="INFO">VALUE: [8.764000000001382e-06, 8.778000000000952e-06, 8.721999999999203e-06, 8.737000000001716e-06, 8.721999999999203e-06, 8.722000000002672e-06, 8.708999999999106e-06, 8.736000000002242e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.806000000000092e-06, 8.749999999998342e-06, 8.722999999998676e-06, 8.736000000002242e-06, 8.694000000000063e-06, 8.722999999998676e-06, 8.750000000001812e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.736999999998246e-06, 8.736000000002242e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.653000000000827e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.695000000003006e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.722999999998676e-06, 8.763999999997912e-06, 8.680999999999967e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.723000000002146e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.749999999998342e-06, 8.777000000001478e-06, 8.722000000002672e-06, 8.694000000000063e-06, 8.749999999998342e-06, 8.721999999999203e-06]</msg>
<status status="PASS" starttime="20201112 09:54:48.535" endtime="20201112 09:54:48.537"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.530" endtime="20201112 09:54:48.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.540" endtime="20201112 09:54:48.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:48.544" endtime="20201112 09:54:48.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.542" endtime="20201112 09:54:48.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.539" endtime="20201112 09:54:48.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.171" endtime="20201112 09:54:48.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.171" endtime="20201112 09:54:48.565"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.574" endtime="20201112 09:54:48.592"></status>
</kw>
<msg timestamp="20201112 09:54:48.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:48.572" endtime="20201112 09:54:48.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:48.593" endtime="20201112 09:54:48.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.596" endtime="20201112 09:54:48.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.570" endtime="20201112 09:54:48.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.568" endtime="20201112 09:54:48.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.605" endtime="20201112 09:54:48.891"></status>
</kw>
<msg timestamp="20201112 09:54:48.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023651111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023659819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:48.603" endtime="20201112 09:54:48.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023651111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023659819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:48.896" endtime="20201112 09:54:48.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.904" endtime="20201112 09:54:48.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.601" endtime="20201112 09:54:48.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.599" endtime="20201112 09:54:48.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:48.911" level="INFO">${RESULT} = [{'time': 0.023659819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.023675417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:48.907" endtime="20201112 09:54:48.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:48.924" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:48.912" endtime="20201112 09:54:48.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.928" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 09:54:48.927" endtime="20201112 09:54:48.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.931" level="INFO">VALUE: [8.707999999999633e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.736999999998246e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.708000000003102e-06, 8.723000000002146e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.791999999997052e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.723000000002146e-06, 8.749999999998342e-06, 8.707999999999633e-06, 8.653000000000827e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.652999999997357e-06, 8.722000000002672e-06, 8.778000000000952e-06, 8.722000000002672e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.708999999999106e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.764000000001382e-06, 8.680999999999967e-06, 8.736999999998246e-06, 8.764000000001382e-06, 8.722000000002672e-06, 8.694000000000063e-06, 8.722999999998676e-06]</msg>
<status status="PASS" starttime="20201112 09:54:48.929" endtime="20201112 09:54:48.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.925" endtime="20201112 09:54:48.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.935" endtime="20201112 09:54:48.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:48.939" endtime="20201112 09:54:48.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.937" endtime="20201112 09:54:48.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.933" endtime="20201112 09:54:48.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.566" endtime="20201112 09:54:48.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.565" endtime="20201112 09:54:48.960"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.968" endtime="20201112 09:54:48.984"></status>
</kw>
<msg timestamp="20201112 09:54:48.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:48.967" endtime="20201112 09:54:48.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:48.985" endtime="20201112 09:54:48.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.988" endtime="20201112 09:54:48.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.964" endtime="20201112 09:54:48.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.962" endtime="20201112 09:54:48.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.997" endtime="20201112 09:54:49.283"></status>
</kw>
<msg timestamp="20201112 09:54:49.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020962014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02097075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:48.995" endtime="20201112 09:54:49.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020962014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02097075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:49.288" endtime="20201112 09:54:49.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.296" endtime="20201112 09:54:49.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.993" endtime="20201112 09:54:49.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.991" endtime="20201112 09:54:49.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:49.303" level="INFO">${RESULT} = [{'time': 0.02097075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.735999999998773e-06, 'source_diff': 8.735999999998773e-06}, {'time': 0.020989472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:49.300" endtime="20201112 09:54:49.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:49.317" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:49.304" endtime="20201112 09:54:49.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.322" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 09:54:49.321" endtime="20201112 09:54:49.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.324" level="INFO">VALUE: [8.735999999998773e-06, 8.721999999999203e-06, 8.778000000000952e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.749999999998342e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.708000000003102e-06, 8.721999999999203e-06, 8.723000000002146e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.722000000002672e-06, 8.750000000001812e-06, 8.736999999998246e-06, 8.694999999999536e-06, 8.737000000001716e-06, 8.778000000000952e-06, 8.722999999998676e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.709000000002576e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.736000000002242e-06, 8.680000000000493e-06, 8.763999999997912e-06, 8.693999999996593e-06, 8.736999999998246e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.736000000002242e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.736000000002242e-06, 8.694000000000063e-06, 8.764000000001382e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.639000000001257e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.749999999998342e-06, 8.776999999998009e-06, 8.735999999998773e-06]</msg>
<status status="PASS" starttime="20201112 09:54:49.323" endtime="20201112 09:54:49.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.318" endtime="20201112 09:54:49.326"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.328" endtime="20201112 09:54:49.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:49.332" endtime="20201112 09:54:49.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.330" endtime="20201112 09:54:49.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.327" endtime="20201112 09:54:49.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.960" endtime="20201112 09:54:49.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.960" endtime="20201112 09:54:49.353"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.362" endtime="20201112 09:54:49.382"></status>
</kw>
<msg timestamp="20201112 09:54:49.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:49.360" endtime="20201112 09:54:49.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:49.384" endtime="20201112 09:54:49.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.386" endtime="20201112 09:54:49.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.358" endtime="20201112 09:54:49.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.356" endtime="20201112 09:54:49.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.397" endtime="20201112 09:54:49.686"></status>
</kw>
<msg timestamp="20201112 09:54:49.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024616042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02462475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:49.395" endtime="20201112 09:54:49.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024616042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02462475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:49.690" endtime="20201112 09:54:49.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.698" endtime="20201112 09:54:49.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.393" endtime="20201112 09:54:49.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.390" endtime="20201112 09:54:49.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:49.705" level="INFO">${RESULT} = [{'time': 0.02462475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.02463775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:49.702" endtime="20201112 09:54:49.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:49.718" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:49.706" endtime="20201112 09:54:49.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.723" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 09:54:49.722" endtime="20201112 09:54:49.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.725" level="INFO">VALUE: [8.707999999999633e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.722999999998676e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.653000000000827e-06, 8.722000000002672e-06, 8.736000000002242e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.749999999998342e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.708000000003102e-06, 8.735999999998773e-06, 8.695000000003006e-06, 8.722999999998676e-06, 8.736999999998246e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.722000000002672e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.736000000002242e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.749999999998342e-06, 8.708999999999106e-06, 8.792000000000522e-06, 8.750000000001812e-06]</msg>
<status status="PASS" starttime="20201112 09:54:49.724" endtime="20201112 09:54:49.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.719" endtime="20201112 09:54:49.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.729" endtime="20201112 09:54:49.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:49.732" endtime="20201112 09:54:49.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.731" endtime="20201112 09:54:49.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.727" endtime="20201112 09:54:49.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.354" endtime="20201112 09:54:49.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.353" endtime="20201112 09:54:49.756"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.774" endtime="20201112 09:54:49.796"></status>
</kw>
<msg timestamp="20201112 09:54:49.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:49.771" endtime="20201112 09:54:49.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:49.799" endtime="20201112 09:54:49.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.804" endtime="20201112 09:54:49.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.766" endtime="20201112 09:54:49.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.761" endtime="20201112 09:54:49.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.823" endtime="20201112 09:54:50.114"></status>
</kw>
<msg timestamp="20201112 09:54:50.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036414181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036422889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:49.820" endtime="20201112 09:54:50.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036414181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036422889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:50.118" endtime="20201112 09:54:50.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.126" endtime="20201112 09:54:50.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.814" endtime="20201112 09:54:50.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.811" endtime="20201112 09:54:50.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:50.133" level="INFO">${RESULT} = [{'time': 0.036422889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.708000000003102e-06, 'source_diff': 8.708000000003102e-06}, {'time': 0.036440389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:50.130" endtime="20201112 09:54:50.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:50.146" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:50.134" endtime="20201112 09:54:50.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.151" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 09:54:50.150" endtime="20201112 09:54:50.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.153" level="INFO">VALUE: [8.708000000003102e-06, 8.763999999994443e-06, 8.735999999995303e-06, 8.722000000002672e-06, 8.722000000002672e-06, 8.778000000000952e-06, 8.708000000003102e-06, 8.736000000002242e-06, 8.763999999994443e-06, 8.708999999995637e-06, 8.736000000002242e-06, 8.736000000002242e-06, 8.708000000003102e-06, 8.707999999996163e-06, 8.721999999995733e-06, 8.708000000003102e-06, 8.737000000001716e-06, 8.721999999995733e-06, 8.750000000001812e-06, 8.722000000002672e-06, 8.721999999995733e-06, 8.722999999995207e-06, 8.708999999995637e-06, 8.721999999995733e-06, 8.764000000001382e-06, 8.736000000002242e-06, 8.709000000002576e-06, 8.708000000003102e-06, 8.721999999995733e-06, 8.708000000003102e-06, 8.737000000001716e-06, 8.735999999995303e-06, 8.709000000002576e-06, 8.736000000002242e-06, 8.693999999996593e-06, 8.708999999995637e-06, 8.721999999995733e-06, 8.735999999995303e-06, 8.707999999996163e-06, 8.723000000002146e-06, 8.736000000002242e-06, 8.708000000003102e-06, 8.778000000000952e-06, 8.709000000002576e-06, 8.735999999995303e-06, 8.721999999995733e-06, 8.680000000003962e-06, 8.750000000001812e-06, 8.735999999995303e-06, 8.680000000003962e-06]</msg>
<status status="PASS" starttime="20201112 09:54:50.152" endtime="20201112 09:54:50.154"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.147" endtime="20201112 09:54:50.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.157" endtime="20201112 09:54:50.158"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:50.160" endtime="20201112 09:54:50.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.158" endtime="20201112 09:54:50.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.155" endtime="20201112 09:54:50.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.758" endtime="20201112 09:54:50.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.757" endtime="20201112 09:54:50.181"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.190" endtime="20201112 09:54:50.208"></status>
</kw>
<msg timestamp="20201112 09:54:50.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:50.188" endtime="20201112 09:54:50.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:50.210" endtime="20201112 09:54:50.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.212" endtime="20201112 09:54:50.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.185" endtime="20201112 09:54:50.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.183" endtime="20201112 09:54:50.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.221" endtime="20201112 09:54:50.508"></status>
</kw>
<msg timestamp="20201112 09:54:50.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020523097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020531833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:50.220" endtime="20201112 09:54:50.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020523097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020531833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:50.512" endtime="20201112 09:54:50.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.520" endtime="20201112 09:54:50.522"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.217" endtime="20201112 09:54:50.522"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.216" endtime="20201112 09:54:50.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:50.527" level="INFO">${RESULT} = [{'time': 0.020531833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.735999999998773e-06, 'source_diff': 8.735999999998773e-06}, {'time': 0.020546431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:50.523" endtime="20201112 09:54:50.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:50.540" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:50.528" endtime="20201112 09:54:50.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.545" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 09:54:50.543" endtime="20201112 09:54:50.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.547" level="INFO">VALUE: [8.735999999998773e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.777999999997482e-06, 8.750000000001812e-06, 8.693999999996593e-06, 8.723000000002146e-06, 8.638999999997787e-06, 8.694000000000063e-06, 8.791999999997052e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.722000000002672e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.749999999998342e-06, 8.722000000002672e-06, 8.792000000000522e-06, 8.722000000002672e-06, 8.749999999998342e-06, 8.723000000002146e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.736000000002242e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.639000000001257e-06, 8.722999999998676e-06, 8.722999999998676e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.735999999998773e-06, 8.723000000002146e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.707999999999633e-06]</msg>
<status status="PASS" starttime="20201112 09:54:50.546" endtime="20201112 09:54:50.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.541" endtime="20201112 09:54:50.548"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.551" endtime="20201112 09:54:50.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:50.554" endtime="20201112 09:54:50.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.552" endtime="20201112 09:54:50.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.549" endtime="20201112 09:54:50.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.182" endtime="20201112 09:54:50.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.181" endtime="20201112 09:54:50.575"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.584" endtime="20201112 09:54:50.601"></status>
</kw>
<msg timestamp="20201112 09:54:50.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:50.582" endtime="20201112 09:54:50.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:50.602" endtime="20201112 09:54:50.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.605" endtime="20201112 09:54:50.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.580" endtime="20201112 09:54:50.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.578" endtime="20201112 09:54:50.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.614" endtime="20201112 09:54:50.900"></status>
</kw>
<msg timestamp="20201112 09:54:50.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023212125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023220833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:50.612" endtime="20201112 09:54:50.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023212125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023220833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:50.904" endtime="20201112 09:54:50.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.913" endtime="20201112 09:54:50.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.610" endtime="20201112 09:54:50.915"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.608" endtime="20201112 09:54:50.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:50.919" level="INFO">${RESULT} = [{'time': 0.023220833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.023234361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:50.916" endtime="20201112 09:54:50.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:50.933" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:50.920" endtime="20201112 09:54:50.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.937" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 09:54:50.936" endtime="20201112 09:54:50.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.940" level="INFO">VALUE: [8.707999999999633e-06, 8.735999999998773e-06, 8.723000000002146e-06, 8.694000000000063e-06, 8.722000000002672e-06, 8.721999999999203e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.722999999998676e-06, 8.708999999999106e-06, 8.735999999998773e-06, 8.723000000002146e-06, 8.806000000000092e-06, 8.694999999999536e-06, 8.722999999998676e-06, 8.736000000002242e-06, 8.723000000002146e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.680999999999967e-06, 8.736000000002242e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.722000000002672e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.694000000000063e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.694000000000063e-06, 8.709000000002576e-06, 8.791999999997052e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.736999999998246e-06, 8.722000000002672e-06, 8.736000000002242e-06, 8.763999999997912e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.750000000001812e-06]</msg>
<status status="PASS" starttime="20201112 09:54:50.938" endtime="20201112 09:54:50.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.934" endtime="20201112 09:54:50.941"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.943" endtime="20201112 09:54:50.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:50.947" endtime="20201112 09:54:50.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.945" endtime="20201112 09:54:50.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.942" endtime="20201112 09:54:50.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.576" endtime="20201112 09:54:50.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.576" endtime="20201112 09:54:50.967"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.976" endtime="20201112 09:54:50.994"></status>
</kw>
<msg timestamp="20201112 09:54:50.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:50.975" endtime="20201112 09:54:50.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:50.995" endtime="20201112 09:54:50.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.998" endtime="20201112 09:54:50.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.972" endtime="20201112 09:54:51.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.970" endtime="20201112 09:54:51.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.007" endtime="20201112 09:54:51.294"></status>
</kw>
<msg timestamp="20201112 09:54:51.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022629528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022638236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:51.005" endtime="20201112 09:54:51.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022629528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022638236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:51.298" endtime="20201112 09:54:51.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.306" endtime="20201112 09:54:51.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.003" endtime="20201112 09:54:51.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.001" endtime="20201112 09:54:51.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:51.313" level="INFO">${RESULT} = [{'time': 0.022638236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.02265175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:51.310" endtime="20201112 09:54:51.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:51.326" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:51.314" endtime="20201112 09:54:51.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.331" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 09:54:51.330" endtime="20201112 09:54:51.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.333" level="INFO">VALUE: [8.707999999999633e-06, 8.721999999999203e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.722000000002672e-06, 8.722999999998676e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.721999999999203e-06, 8.722000000002672e-06, 8.707999999999633e-06, 8.805999999996622e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.763999999997912e-06, 8.735999999998773e-06, 8.722000000002672e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.694999999999536e-06, 8.804999999997148e-06, 8.736000000002242e-06, 8.708000000003102e-06, 8.749999999998342e-06, 8.680999999999967e-06, 8.722999999998676e-06, 8.722999999998676e-06, 8.708999999999106e-06, 8.736000000002242e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.737000000001716e-06, 8.735999999998773e-06, 8.722999999998676e-06, 8.707999999999633e-06]</msg>
<status status="PASS" starttime="20201112 09:54:51.332" endtime="20201112 09:54:51.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.327" endtime="20201112 09:54:51.335"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.337" endtime="20201112 09:54:51.338"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:51.340" endtime="20201112 09:54:51.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.339" endtime="20201112 09:54:51.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.335" endtime="20201112 09:54:51.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.968" endtime="20201112 09:54:51.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.968" endtime="20201112 09:54:51.361"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.370" endtime="20201112 09:54:51.390"></status>
</kw>
<msg timestamp="20201112 09:54:51.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.368" endtime="20201112 09:54:51.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.392" endtime="20201112 09:54:51.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.394" endtime="20201112 09:54:51.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.366" endtime="20201112 09:54:51.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.364" endtime="20201112 09:54:51.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.403" endtime="20201112 09:54:51.689"></status>
</kw>
<msg timestamp="20201112 09:54:51.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020673722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020682458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:51.402" endtime="20201112 09:54:51.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020673722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020682458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:51.693" endtime="20201112 09:54:51.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.701" endtime="20201112 09:54:51.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.399" endtime="20201112 09:54:51.704"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.397" endtime="20201112 09:54:51.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:51.708" level="INFO">${RESULT} = [{'time': 0.020682458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.020701667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:51.705" endtime="20201112 09:54:51.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:51.721" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:51.709" endtime="20201112 09:54:51.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.726" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 09:54:51.725" endtime="20201112 09:54:51.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.728" level="INFO">VALUE: [8.736000000002242e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.723000000002146e-06, 8.722999999998676e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.722000000002672e-06, 8.778000000000952e-06, 8.736000000002242e-06, 8.708000000003102e-06, 8.819999999999661e-06, 8.721999999999203e-06, 8.777999999997482e-06, 8.721999999999203e-06, 8.819000000000188e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.749999999998342e-06, 8.694999999999536e-06, 8.652999999997357e-06, 8.653000000000827e-06, 8.806000000000092e-06, 8.721999999999203e-06, 8.737000000001716e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.736000000002242e-06, 8.721999999999203e-06, 8.708000000003102e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.667000000000397e-06, 8.721999999999203e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.722000000002672e-06, 8.694999999999536e-06, 8.791000000001048e-06, 8.721999999999203e-06, 8.736000000002242e-06]</msg>
<status status="PASS" starttime="20201112 09:54:51.727" endtime="20201112 09:54:51.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.722" endtime="20201112 09:54:51.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.732" endtime="20201112 09:54:51.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:51.735" endtime="20201112 09:54:51.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.734" endtime="20201112 09:54:51.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.730" endtime="20201112 09:54:51.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.362" endtime="20201112 09:54:51.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.362" endtime="20201112 09:54:51.756"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.765" endtime="20201112 09:54:51.782"></status>
</kw>
<msg timestamp="20201112 09:54:51.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.763" endtime="20201112 09:54:51.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.783" endtime="20201112 09:54:51.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.786" endtime="20201112 09:54:51.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.761" endtime="20201112 09:54:51.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.759" endtime="20201112 09:54:51.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.795" endtime="20201112 09:54:52.080"></status>
</kw>
<msg timestamp="20201112 09:54:52.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022649014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02265775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:51.793" endtime="20201112 09:54:52.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022649014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02265775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:52.085" endtime="20201112 09:54:52.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.093" endtime="20201112 09:54:52.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.791" endtime="20201112 09:54:52.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.789" endtime="20201112 09:54:52.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:52.100" level="INFO">${RESULT} = [{'time': 0.02265775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.022676542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:52.096" endtime="20201112 09:54:52.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:52.113" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:52.101" endtime="20201112 09:54:52.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.117" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 09:54:52.116" endtime="20201112 09:54:52.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.120" level="INFO">VALUE: [8.736000000002242e-06, 8.723000000002146e-06, 8.708000000003102e-06, 8.722999999998676e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.749999999998342e-06, 8.737000000001716e-06, 8.735999999998773e-06, 8.722000000002672e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.737000000001716e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.750000000001812e-06, 8.695000000003006e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.652999999997357e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.666000000000923e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.722999999998676e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.722999999998676e-06, 8.694000000000063e-06, 8.722000000002672e-06, 8.707999999999633e-06, 8.792000000000522e-06]</msg>
<status status="PASS" starttime="20201112 09:54:52.118" endtime="20201112 09:54:52.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.114" endtime="20201112 09:54:52.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.123" endtime="20201112 09:54:52.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:52.127" endtime="20201112 09:54:52.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.125" endtime="20201112 09:54:52.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.122" endtime="20201112 09:54:52.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.757" endtime="20201112 09:54:52.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.757" endtime="20201112 09:54:52.148"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.156" endtime="20201112 09:54:52.173"></status>
</kw>
<msg timestamp="20201112 09:54:52.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.155" endtime="20201112 09:54:52.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.175" endtime="20201112 09:54:52.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.177" endtime="20201112 09:54:52.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.152" endtime="20201112 09:54:52.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.150" endtime="20201112 09:54:52.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.187" endtime="20201112 09:54:52.474"></status>
</kw>
<msg timestamp="20201112 09:54:52.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023071153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023079847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:52.185" endtime="20201112 09:54:52.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023071153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023079847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:52.478" endtime="20201112 09:54:52.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.487" endtime="20201112 09:54:52.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.182" endtime="20201112 09:54:52.489"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.181" endtime="20201112 09:54:52.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:52.493" level="INFO">${RESULT} = [{'time': 0.023079847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.023097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:54:52.490" endtime="20201112 09:54:52.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:52.507" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:52.495" endtime="20201112 09:54:52.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.511" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 09:54:52.510" endtime="20201112 09:54:52.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.514" level="INFO">VALUE: [8.694000000000063e-06, 8.707999999999633e-06, 8.749999999998342e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.819000000000188e-06, 8.708999999999106e-06, 8.735999999998773e-06, 8.737000000001716e-06, 8.708999999999106e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.735999999998773e-06, 8.736999999998246e-06, 8.749999999998342e-06, 8.694999999999536e-06, 8.708000000003102e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.736000000002242e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.749999999998342e-06, 8.806000000000092e-06, 8.749999999998342e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.722999999998676e-06, 8.723000000002146e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.624999999998217e-06, 8.736000000002242e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.708000000003102e-06, 8.735999999998773e-06, 8.722999999998676e-06]</msg>
<status status="PASS" starttime="20201112 09:54:52.512" endtime="20201112 09:54:52.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.508" endtime="20201112 09:54:52.519"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.521" endtime="20201112 09:54:52.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:52.525" endtime="20201112 09:54:52.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.523" endtime="20201112 09:54:52.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.520" endtime="20201112 09:54:52.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.149" endtime="20201112 09:54:52.546"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.148" endtime="20201112 09:54:52.546"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.554" endtime="20201112 09:54:52.572"></status>
</kw>
<msg timestamp="20201112 09:54:52.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.553" endtime="20201112 09:54:52.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.574" endtime="20201112 09:54:52.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.576" endtime="20201112 09:54:52.578"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.550" endtime="20201112 09:54:52.578"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.548" endtime="20201112 09:54:52.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.586" endtime="20201112 09:54:52.873"></status>
</kw>
<msg timestamp="20201112 09:54:52.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021873042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02188175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:52.584" endtime="20201112 09:54:52.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021873042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02188175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:52.877" endtime="20201112 09:54:52.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.886" endtime="20201112 09:54:52.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.581" endtime="20201112 09:54:52.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.580" endtime="20201112 09:54:52.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:52.892" level="INFO">${RESULT} = [{'time': 0.02188175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.021898181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:52.889" endtime="20201112 09:54:52.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:52.906" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:52.893" endtime="20201112 09:54:52.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.910" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 09:54:52.909" endtime="20201112 09:54:52.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.912" level="INFO">VALUE: [8.707999999999633e-06, 8.736999999998246e-06, 8.708999999999106e-06, 8.749999999998342e-06, 8.694000000000063e-06, 8.722999999998676e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.708000000003102e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.722999999998676e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.652000000001353e-06, 8.750000000001812e-06, 8.694000000000063e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.736999999998246e-06, 8.680000000000493e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.737000000001716e-06, 8.721999999999203e-06, 8.736999999998246e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.694999999999536e-06, 8.722000000002672e-06, 8.749999999998342e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.792000000000522e-06]</msg>
<status status="PASS" starttime="20201112 09:54:52.911" endtime="20201112 09:54:52.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.906" endtime="20201112 09:54:52.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.916" endtime="20201112 09:54:52.917"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:52.920" endtime="20201112 09:54:52.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.918" endtime="20201112 09:54:52.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.914" endtime="20201112 09:54:52.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.547" endtime="20201112 09:54:52.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.546" endtime="20201112 09:54:52.940"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.949" endtime="20201112 09:54:52.968"></status>
</kw>
<msg timestamp="20201112 09:54:52.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.948" endtime="20201112 09:54:52.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.969" endtime="20201112 09:54:52.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.972" endtime="20201112 09:54:52.973"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.945" endtime="20201112 09:54:52.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.943" endtime="20201112 09:54:52.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.981" endtime="20201112 09:54:53.267"></status>
</kw>
<msg timestamp="20201112 09:54:53.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024056903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024065625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:52.979" endtime="20201112 09:54:53.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024056903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024065625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.271" endtime="20201112 09:54:53.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.280" endtime="20201112 09:54:53.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.977" endtime="20201112 09:54:53.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.975" endtime="20201112 09:54:53.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:53.286" level="INFO">${RESULT} = [{'time': 0.024065625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.721999999999203e-06, 'source_diff': 8.721999999999203e-06}, {'time': 0.024079431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:53.283" endtime="20201112 09:54:53.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:53.300" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:53.287" endtime="20201112 09:54:53.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.304" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 09:54:53.303" endtime="20201112 09:54:53.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.307" level="INFO">VALUE: [8.721999999999203e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.722999999998676e-06, 8.709000000002576e-06, 8.749999999998342e-06, 8.707999999999633e-06, 8.805000000000618e-06, 8.736000000002242e-06, 8.737000000001716e-06, 8.749999999998342e-06, 8.820000000003131e-06, 8.722999999998676e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.721999999999203e-06, 8.652999999997357e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.736999999998246e-06, 8.750000000001812e-06, 8.790999999997579e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.722999999998676e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.736000000002242e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.709000000002576e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.723000000002146e-06, 8.709000000002576e-06, 8.736999999998246e-06, 8.680999999999967e-06, 8.638999999997787e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.735999999998773e-06, 8.721999999999203e-06]</msg>
<status status="PASS" starttime="20201112 09:54:53.305" endtime="20201112 09:54:53.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.301" endtime="20201112 09:54:53.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.310" endtime="20201112 09:54:53.311"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:53.314" endtime="20201112 09:54:53.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.312" endtime="20201112 09:54:53.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.309" endtime="20201112 09:54:53.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.941" endtime="20201112 09:54:53.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.941" endtime="20201112 09:54:53.335"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.343" endtime="20201112 09:54:53.362"></status>
</kw>
<msg timestamp="20201112 09:54:53.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.342" endtime="20201112 09:54:53.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.364" endtime="20201112 09:54:53.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.366" endtime="20201112 09:54:53.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.339" endtime="20201112 09:54:53.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.337" endtime="20201112 09:54:53.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.375" endtime="20201112 09:54:53.664"></status>
</kw>
<msg timestamp="20201112 09:54:53.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021945819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021954569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.374" endtime="20201112 09:54:53.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021945819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021954569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.668" endtime="20201112 09:54:53.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.677" endtime="20201112 09:54:53.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.371" endtime="20201112 09:54:53.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.369" endtime="20201112 09:54:53.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:53.683" level="INFO">${RESULT} = [{'time': 0.021954569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.021971889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:53.680" endtime="20201112 09:54:53.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:53.696" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:53.684" endtime="20201112 09:54:53.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.701" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 09:54:53.700" endtime="20201112 09:54:53.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.703" level="INFO">VALUE: [8.750000000001812e-06, 8.708000000003102e-06, 8.707999999999633e-06, 8.722999999998676e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.723000000002146e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.722999999998676e-06, 8.735999999998773e-06, 8.709000000002576e-06, 8.709000000002576e-06, 8.749999999998342e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.764000000001382e-06, 8.680999999999967e-06, 8.777999999997482e-06, 8.736000000002242e-06, 8.736000000002242e-06, 8.777999999997482e-06, 8.694000000000063e-06, 8.652000000001353e-06, 8.777999999997482e-06, 8.776999999998009e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.679999999997023e-06, 8.736999999998246e-06, 8.707999999999633e-06, 8.736000000002242e-06, 8.666000000000923e-06, 8.707999999999633e-06, 8.667000000000397e-06]</msg>
<status status="PASS" starttime="20201112 09:54:53.702" endtime="20201112 09:54:53.704"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.697" endtime="20201112 09:54:53.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.707" endtime="20201112 09:54:53.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:53.710" endtime="20201112 09:54:53.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.709" endtime="20201112 09:54:53.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.705" endtime="20201112 09:54:53.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.335" endtime="20201112 09:54:53.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.335" endtime="20201112 09:54:53.731"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.740" endtime="20201112 09:54:53.759"></status>
</kw>
<msg timestamp="20201112 09:54:53.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.739" endtime="20201112 09:54:53.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.760" endtime="20201112 09:54:53.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.763" endtime="20201112 09:54:53.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.736" endtime="20201112 09:54:53.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.734" endtime="20201112 09:54:53.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.772" endtime="20201112 09:54:54.058"></status>
</kw>
<msg timestamp="20201112 09:54:54.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021919375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021952, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:53.770" endtime="20201112 09:54:54.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021919375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021952, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:54.063" endtime="20201112 09:54:54.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.071" endtime="20201112 09:54:54.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.768" endtime="20201112 09:54:54.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.766" endtime="20201112 09:54:54.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:54.078" level="INFO">${RESULT} = [{'time': 0.021952, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2624999999997933e-05, 'source_diff': 3.2624999999997933e-05}, {'time': 0.021982403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:54.074" endtime="20201112 09:54:54.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:54.091" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:54.079" endtime="20201112 09:54:54.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.096" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 09:54:54.094" endtime="20201112 09:54:54.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.098" level="INFO">VALUE: [3.2624999999997933e-05, 2.2084000000002074e-05, 2.3986000000000146e-05, 2.4013999999999286e-05, 2.594499999999944e-05, 2.4013999999999286e-05, 2.311099999999927e-05, 2.1193999999998686e-05, 2.5971999999999107e-05, 2.115299999999945e-05, 2.3083999999999605e-05, 2.4986000000001146e-05, 2.4986000000001146e-05, 2.5930000000000397e-05, 2.5013999999996817e-05, 2.590300000000073e-05, 2.0165999999998546e-05, 2.211100000000174e-05, 2.018099999999759e-05, 2.0222000000000295e-05, 2.4027999999998856e-05, 2.3054999999997522e-05, 2.4042000000001895e-05, 2.4986000000001146e-05, 2.1165999999999546e-05, 2.4971999999998107e-05, 2.5916000000000827e-05, 2.1222000000001295e-05, 2.022299999999977e-05, 2.212500000000131e-05, 2.116699999999902e-05, 2.206899999999956e-05, 2.0222000000000295e-05, 2.4014000000002755e-05, 2.587500000000159e-05, 2.590299999999726e-05, 2.3986000000000146e-05, 2.018099999999759e-05, 2.59170000000003e-05, 2.4013999999999286e-05, 2.4014000000002755e-05, 2.6860999999999552e-05, 2.59170000000003e-05, 2.4055999999997996e-05, 2.3930000000001866e-05, 2.4028000000002325e-05, 2.49169999999993e-05, 2.5944000000003437e-05, 2.4041999999998426e-05, 2.3028000000001325e-05]</msg>
<status status="PASS" starttime="20201112 09:54:54.097" endtime="20201112 09:54:54.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.092" endtime="20201112 09:54:54.099"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.102" endtime="20201112 09:54:54.103"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:54.105" endtime="20201112 09:54:54.124"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.103" endtime="20201112 09:54:54.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.100" endtime="20201112 09:54:54.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.732" endtime="20201112 09:54:54.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.732" endtime="20201112 09:54:54.126"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.134" endtime="20201112 09:54:54.157"></status>
</kw>
<msg timestamp="20201112 09:54:54.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.133" endtime="20201112 09:54:54.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.158" endtime="20201112 09:54:54.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.161" endtime="20201112 09:54:54.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.130" endtime="20201112 09:54:54.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.128" endtime="20201112 09:54:54.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.170" endtime="20201112 09:54:54.456"></status>
</kw>
<msg timestamp="20201112 09:54:54.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024393778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024429208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:54.168" endtime="20201112 09:54:54.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024393778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024429208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:54.460" endtime="20201112 09:54:54.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.469" endtime="20201112 09:54:54.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.166" endtime="20201112 09:54:54.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.164" endtime="20201112 09:54:54.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:54.475" level="INFO">${RESULT} = [{'time': 0.024429208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.542999999999949e-05, 'source_diff': 3.542999999999949e-05}, {'time': 0.024460319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:54.472" endtime="20201112 09:54:54.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:54.489" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:54.476" endtime="20201112 09:54:54.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.494" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 09:54:54.492" endtime="20201112 09:54:54.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.496" level="INFO">VALUE: [3.542999999999949e-05, 2.4972000000001576e-05, 2.112500000000031e-05, 2.3999999999999716e-05, 2.6833999999999886e-05, 2.5000000000000716e-05, 2.2112000000001214e-05, 2.1179999999999116e-05, 2.4041999999998426e-05, 1.9235999999998865e-05, 2.4014000000002755e-05, 2.1193999999998686e-05, 2.212500000000131e-05, 2.212499999999784e-05, 2.4986000000001146e-05, 2.0165999999998546e-05, 2.118100000000206e-05, 2.497300000000105e-05, 2.4012999999999812e-05, 2.4013999999999286e-05, 2.0180000000001586e-05, 2.3040999999997952e-05, 2.3054999999997522e-05, 2.1138000000000406e-05, 2.0208000000000725e-05, 2.5014000000000286e-05, 2.5971999999999107e-05, 2.305500000000099e-05, 2.3986000000000146e-05, 2.306900000000056e-05, 2.594499999999944e-05, 2.4055999999997996e-05, 2.115299999999945e-05, 2.4013999999999286e-05, 2.594499999999944e-05, 2.308300000000013e-05, 2.116699999999902e-05, 2.212500000000131e-05, 2.5957999999999537e-05, 2.308300000000013e-05, 2.3083999999999605e-05, 2.209700000000217e-05, 2.494500000000191e-05, 2.3028000000001325e-05, 2.211100000000174e-05, 2.0194000000001155e-05, 2.112500000000031e-05, 2.0165999999998546e-05, 2.4042000000001895e-05, 2.5040999999999952e-05]</msg>
<status status="PASS" starttime="20201112 09:54:54.495" endtime="20201112 09:54:54.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.490" endtime="20201112 09:54:54.498"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.500" endtime="20201112 09:54:54.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:54.504" endtime="20201112 09:54:54.523"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.502" endtime="20201112 09:54:54.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.499" endtime="20201112 09:54:54.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.127" endtime="20201112 09:54:54.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.126" endtime="20201112 09:54:54.525"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.534" endtime="20201112 09:54:54.555"></status>
</kw>
<msg timestamp="20201112 09:54:54.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.532" endtime="20201112 09:54:54.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.556" endtime="20201112 09:54:54.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.558" endtime="20201112 09:54:54.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.529" endtime="20201112 09:54:54.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.527" endtime="20201112 09:54:54.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.567" endtime="20201112 09:54:54.856"></status>
</kw>
<msg timestamp="20201112 09:54:54.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022149014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022176889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:54.566" endtime="20201112 09:54:54.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022149014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022176889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:54.860" endtime="20201112 09:54:54.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.868" endtime="20201112 09:54:54.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.563" endtime="20201112 09:54:54.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.562" endtime="20201112 09:54:54.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:54.875" level="INFO">${RESULT} = [{'time': 0.022176889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7875000000000122e-05, 'source_diff': 2.7875000000000122e-05}, {'time': 0.022207819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:54.871" endtime="20201112 09:54:54.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:54.888" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:54.876" endtime="20201112 09:54:54.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.893" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 09:54:54.892" endtime="20201112 09:54:54.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.895" level="INFO">VALUE: [2.7875000000000122e-05, 2.6874999999999122e-05, 2.5000000000000716e-05, 2.5000000000000716e-05, 2.4096999999997232e-05, 2.5916000000000827e-05, 2.204100000000042e-05, 2.5040999999999952e-05, 2.593099999999987e-05, 2.3971999999997107e-05, 2.209700000000217e-05, 2.123700000000034e-05, 2.116699999999902e-05, 2.4972000000001576e-05, 2.215300000000045e-05, 2.3999999999999716e-05, 2.112500000000031e-05, 2.6819000000000842e-05, 2.1151999999999976e-05, 2.4986000000001146e-05, 2.20830000000026e-05, 2.0193999999997686e-05, 2.5014000000000286e-05, 2.3999999999999716e-05, 2.302700000000185e-05, 2.5943999999999967e-05, 2.3999999999999716e-05, 2.2055999999999465e-05, 2.3013999999998286e-05, 2.02090000000002e-05, 2.4986000000001146e-05, 2.308300000000013e-05, 2.4013999999999286e-05, 2.112500000000031e-05, 2.106899999999856e-05, 2.3083999999999605e-05, 2.4041999999998426e-05, 2.119499999999816e-05, 2.305500000000099e-05, 2.1098000000000644e-05, 2.1112000000000214e-05, 2.0194000000001155e-05, 2.113899999999988e-05, 2.69309999999974e-05, 2.5943999999999967e-05, 2.2083999999998605e-05, 2.49169999999993e-05, 2.3972000000000576e-05, 2.5040999999999952e-05, 2.6860999999999552e-05]</msg>
<status status="PASS" starttime="20201112 09:54:54.894" endtime="20201112 09:54:54.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.889" endtime="20201112 09:54:54.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.899" endtime="20201112 09:54:54.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:54.902" endtime="20201112 09:54:54.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.900" endtime="20201112 09:54:54.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.897" endtime="20201112 09:54:54.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.526" endtime="20201112 09:54:54.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.525" endtime="20201112 09:54:54.923"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.932" endtime="20201112 09:54:54.950"></status>
</kw>
<msg timestamp="20201112 09:54:54.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.930" endtime="20201112 09:54:54.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.951" endtime="20201112 09:54:54.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.954" endtime="20201112 09:54:54.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.928" endtime="20201112 09:54:54.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.925" endtime="20201112 09:54:54.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.963" endtime="20201112 09:54:55.250"></status>
</kw>
<msg timestamp="20201112 09:54:55.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021119014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021144958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:54.961" endtime="20201112 09:54:55.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021119014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021144958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:55.254" endtime="20201112 09:54:55.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.262" endtime="20201112 09:54:55.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.959" endtime="20201112 09:54:55.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.957" endtime="20201112 09:54:55.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:55.269" level="INFO">${RESULT} = [{'time': 0.021144958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5943999999999967e-05, 'source_diff': 2.5943999999999967e-05}, {'time': 0.021175403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:55.266" endtime="20201112 09:54:55.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:55.282" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:55.270" endtime="20201112 09:54:55.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.287" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 09:54:55.286" endtime="20201112 09:54:55.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.289" level="INFO">VALUE: [2.5943999999999967e-05, 2.488900000000016e-05, 2.690299999999826e-05, 2.3070000000000035e-05, 2.595899999999901e-05, 2.495899999999801e-05, 2.688900000000216e-05, 2.113899999999988e-05, 2.2208000000002726e-05, 2.3027999999997856e-05, 2.3972000000000576e-05, 2.5943999999999967e-05, 2.0208000000000725e-05, 2.6916000000001827e-05, 2.3013999999998286e-05, 2.30969999999997e-05, 2.691699999999783e-05, 2.215300000000045e-05, 2.0222000000000295e-05, 2.6874999999999122e-05, 2.3999999999999716e-05, 2.3042000000000895e-05, 2.5000000000000716e-05, 2.6901999999998788e-05, 2.115299999999945e-05, 2.012500000000278e-05, 2.4972000000001576e-05, 2.588899999999769e-05, 2.3999999999999716e-05, 1.9263999999998005e-05, 2.3083999999999605e-05, 2.115299999999945e-05, 2.115299999999945e-05, 2.5000000000000716e-05, 2.4040999999998952e-05, 2.6874999999999122e-05, 2.0165999999998546e-05, 2.212500000000131e-05, 2.4026999999999382e-05, 2.5014000000000286e-05, 2.5901999999997788e-05, 2.493099999999887e-05, 2.2083999999998605e-05, 2.4041999999998426e-05, 2.4041999999998426e-05, 2.2152000000000976e-05, 2.4027999999998856e-05, 2.116700000000249e-05, 2.3056000000000465e-05, 2.2111999999997745e-05]</msg>
<status status="PASS" starttime="20201112 09:54:55.288" endtime="20201112 09:54:55.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.283" endtime="20201112 09:54:55.291"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.293" endtime="20201112 09:54:55.294"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:55.296" endtime="20201112 09:54:55.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.295" endtime="20201112 09:54:55.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.291" endtime="20201112 09:54:55.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.924" endtime="20201112 09:54:55.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.923" endtime="20201112 09:54:55.317"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.326" endtime="20201112 09:54:55.347"></status>
</kw>
<msg timestamp="20201112 09:54:55.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.324" endtime="20201112 09:54:55.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.348" endtime="20201112 09:54:55.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.351" endtime="20201112 09:54:55.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.322" endtime="20201112 09:54:55.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.320" endtime="20201112 09:54:55.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.360" endtime="20201112 09:54:55.644"></status>
</kw>
<msg timestamp="20201112 09:54:55.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023662917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023684014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:55.358" endtime="20201112 09:54:55.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023662917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023684014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:55.649" endtime="20201112 09:54:55.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.657" endtime="20201112 09:54:55.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.355" endtime="20201112 09:54:55.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.354" endtime="20201112 09:54:55.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:55.663" level="INFO">${RESULT} = [{'time': 0.023684014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.109700000000117e-05, 'source_diff': 2.109700000000117e-05}, {'time': 0.023714, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:54:55.660" endtime="20201112 09:54:55.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:55.677" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:55.664" endtime="20201112 09:54:55.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.681" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 09:54:55.680" endtime="20201112 09:54:55.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.684" level="INFO">VALUE: [2.109700000000117e-05, 2.4985999999997677e-05, 2.2207999999999256e-05, 2.215300000000045e-05, 2.3070000000000035e-05, 2.112500000000031e-05, 2.4958000000002006e-05, 2.115299999999945e-05, 2.204100000000042e-05, 2.212499999999784e-05, 2.404100000000242e-05, 2.212500000000131e-05, 2.4013999999999286e-05, 2.308300000000013e-05, 2.3986000000000146e-05, 2.112500000000031e-05, 2.212500000000131e-05, 2.493100000000234e-05, 2.6860999999999552e-05, 2.3070000000000035e-05, 2.40970000000007e-05, 2.5971999999999107e-05, 2.116699999999902e-05, 2.3986000000000146e-05, 2.686100000000302e-05, 2.0222000000000295e-05, 2.4027999999998856e-05, 2.111100000000074e-05, 2.308300000000013e-05, 2.497299999999758e-05, 2.5957999999999537e-05, 2.2055999999999465e-05, 2.311100000000274e-05, 2.212500000000131e-05, 2.1193999999998686e-05, 2.593099999999987e-05, 2.118099999999859e-05, 2.206899999999956e-05, 2.109700000000117e-05, 2.119499999999816e-05, 2.5971999999999107e-05, 2.4972000000001576e-05, 2.590300000000073e-05, 2.118099999999859e-05, 2.402700000000285e-05, 2.4055999999997996e-05, 2.1138000000000406e-05, 2.5971999999999107e-05, 2.4999999999997247e-05, 2.4943999999998967e-05]</msg>
<status status="PASS" starttime="20201112 09:54:55.682" endtime="20201112 09:54:55.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.678" endtime="20201112 09:54:55.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.687" endtime="20201112 09:54:55.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:55.691" endtime="20201112 09:54:55.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.689" endtime="20201112 09:54:55.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.686" endtime="20201112 09:54:55.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.318" endtime="20201112 09:54:55.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.318" endtime="20201112 09:54:55.711"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.720" endtime="20201112 09:54:55.741"></status>
</kw>
<msg timestamp="20201112 09:54:55.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.719" endtime="20201112 09:54:55.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.742" endtime="20201112 09:54:55.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.745" endtime="20201112 09:54:55.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.716" endtime="20201112 09:54:55.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.714" endtime="20201112 09:54:55.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.753" endtime="20201112 09:54:56.042"></status>
</kw>
<msg timestamp="20201112 09:54:56.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02128475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021309764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:55.752" endtime="20201112 09:54:56.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02128475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021309764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:56.046" endtime="20201112 09:54:56.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.055" endtime="20201112 09:54:56.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.749" endtime="20201112 09:54:56.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.748" endtime="20201112 09:54:56.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:56.061" level="INFO">${RESULT} = [{'time': 0.021309764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5013999999996817e-05, 'source_diff': 2.5013999999996817e-05}, {'time': 0.021339722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:56.058" endtime="20201112 09:54:56.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:56.074" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:56.062" endtime="20201112 09:54:56.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.079" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 09:54:56.078" endtime="20201112 09:54:56.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.081" level="INFO">VALUE: [2.5013999999996817e-05, 2.0179999999998116e-05, 2.690299999999826e-05, 2.115299999999945e-05, 2.213899999999741e-05, 2.3986000000000146e-05, 2.019500000000063e-05, 2.4026999999999382e-05, 2.20969999999987e-05, 2.0179999999998116e-05, 2.4929999999999397e-05, 2.116699999999902e-05, 2.402700000000285e-05, 2.690300000000173e-05, 2.0180000000001586e-05, 2.3056000000000465e-05, 2.4070000000001035e-05, 2.3986000000000146e-05, 2.019500000000063e-05, 2.212500000000131e-05, 2.5930000000000397e-05, 2.4985999999997677e-05, 2.4042000000001895e-05, 2.1179999999999116e-05, 2.212500000000131e-05, 2.111100000000074e-05, 2.0179999999998116e-05, 2.308300000000013e-05, 2.211100000000174e-05, 2.0208000000000725e-05, 2.211099999999827e-05, 2.59170000000003e-05, 2.4957999999998537e-05, 2.4042000000001895e-05, 2.315299999999798e-05, 2.597300000000205e-05, 2.0235999999999865e-05, 2.113899999999988e-05, 2.3999999999999716e-05, 2.1207999999998256e-05, 2.590300000000073e-05, 2.4041999999998426e-05, 2.0208000000000725e-05, 2.306900000000056e-05, 2.3972000000000576e-05, 2.206899999999956e-05, 2.3028000000001325e-05, 2.3999999999999716e-05, 2.211099999999827e-05, 2.493100000000234e-05]</msg>
<status status="PASS" starttime="20201112 09:54:56.080" endtime="20201112 09:54:56.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.075" endtime="20201112 09:54:56.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.085" endtime="20201112 09:54:56.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:56.089" endtime="20201112 09:54:56.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.087" endtime="20201112 09:54:56.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.083" endtime="20201112 09:54:56.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.712" endtime="20201112 09:54:56.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.712" endtime="20201112 09:54:56.109"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.118" endtime="20201112 09:54:56.136"></status>
</kw>
<msg timestamp="20201112 09:54:56.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.116" endtime="20201112 09:54:56.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.138" endtime="20201112 09:54:56.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.140" endtime="20201112 09:54:56.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.114" endtime="20201112 09:54:56.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.112" endtime="20201112 09:54:56.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.149" endtime="20201112 09:54:56.436"></status>
</kw>
<msg timestamp="20201112 09:54:56.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020242, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020277486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:56.148" endtime="20201112 09:54:56.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020242, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020277486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:56.440" endtime="20201112 09:54:56.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.449" endtime="20201112 09:54:56.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.145" endtime="20201112 09:54:56.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.143" endtime="20201112 09:54:56.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:56.455" level="INFO">${RESULT} = [{'time': 0.020277486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.548600000000124e-05, 'source_diff': 3.548600000000124e-05}, {'time': 0.020308125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:56.452" endtime="20201112 09:54:56.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:56.468" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:56.456" endtime="20201112 09:54:56.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.473" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 09:54:56.472" endtime="20201112 09:54:56.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.475" level="INFO">VALUE: [3.548600000000124e-05, 2.493099999999887e-05, 2.4943999999998967e-05, 2.4999999999997247e-05, 2.5000000000000716e-05, 2.5027999999999856e-05, 2.212500000000131e-05, 2.593099999999987e-05, 2.4026999999999382e-05, 2.593099999999987e-05, 2.116699999999902e-05, 2.1179999999999116e-05, 2.116699999999902e-05, 2.3070000000000035e-05, 2.4986000000001146e-05, 2.120899999999773e-05, 2.0208000000000725e-05, 2.311099999999927e-05, 2.308300000000013e-05, 2.112500000000031e-05, 2.4014000000002755e-05, 2.4041999999998426e-05, 2.694499999999697e-05, 2.116699999999902e-05, 2.0208000000000725e-05, 2.4958000000002006e-05, 2.495900000000148e-05, 2.02090000000002e-05, 2.5000000000000716e-05, 2.5972000000002576e-05, 2.2097999999998175e-05, 2.113899999999988e-05, 2.0165999999998546e-05, 2.5971999999999107e-05, 2.5971999999999107e-05, 2.4958000000002006e-05, 2.20969999999987e-05, 2.4027999999998856e-05, 2.3041999999997426e-05, 2.306900000000056e-05, 2.213900000000088e-05, 2.118100000000206e-05, 2.02090000000002e-05, 2.4042000000001895e-05, 2.304100000000142e-05, 2.3055999999996996e-05, 2.305500000000099e-05, 2.6874999999999122e-05, 2.5000000000000716e-05, 2.312499999999884e-05]</msg>
<status status="PASS" starttime="20201112 09:54:56.474" endtime="20201112 09:54:56.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.469" endtime="20201112 09:54:56.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.479" endtime="20201112 09:54:56.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:56.482" endtime="20201112 09:54:56.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.481" endtime="20201112 09:54:56.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.477" endtime="20201112 09:54:56.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.110" endtime="20201112 09:54:56.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.110" endtime="20201112 09:54:56.503"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.512" endtime="20201112 09:54:56.533"></status>
</kw>
<msg timestamp="20201112 09:54:56.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.510" endtime="20201112 09:54:56.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.534" endtime="20201112 09:54:56.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.537" endtime="20201112 09:54:56.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.508" endtime="20201112 09:54:56.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.506" endtime="20201112 09:54:56.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.546" endtime="20201112 09:54:56.832"></status>
</kw>
<msg timestamp="20201112 09:54:56.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023324, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023335514, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:56.544" endtime="20201112 09:54:56.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023324, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023335514, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:56.836" endtime="20201112 09:54:56.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.845" endtime="20201112 09:54:56.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.542" endtime="20201112 09:54:56.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.540" endtime="20201112 09:54:56.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:56.851" level="INFO">${RESULT} = [{'time': 0.023335514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.0233655, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:56.848" endtime="20201112 09:54:56.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:56.865" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:56.852" endtime="20201112 09:54:56.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.869" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 09:54:56.868" endtime="20201112 09:54:56.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.872" level="INFO">VALUE: [1.1514000000000663e-05, 2.593099999999987e-05, 2.305500000000099e-05, 2.308300000000013e-05, 2.4929999999999397e-05, 2.215299999999698e-05, 2.1179999999999116e-05, 2.5000000000000716e-05, 2.116699999999902e-05, 2.4986000000001146e-05, 2.5902000000001257e-05, 2.593099999999987e-05, 2.2097999999998175e-05, 2.3042000000000895e-05, 2.5014000000000286e-05, 2.213899999999741e-05, 2.4028000000002325e-05, 2.3070000000000035e-05, 2.3014000000001755e-05, 2.590300000000073e-05, 2.019500000000063e-05, 2.5930000000000397e-05, 2.1165999999999546e-05, 2.20830000000026e-05, 2.2070000000002504e-05, 2.115299999999945e-05, 2.5000000000000716e-05, 2.4013999999999286e-05, 2.1222000000001295e-05, 2.3041999999997426e-05, 2.111099999999727e-05, 2.6888999999998692e-05, 2.4985999999997677e-05, 2.6888999999998692e-05, 2.1207999999998256e-05, 2.4026999999999382e-05, 2.211099999999827e-05, 2.4972000000001576e-05, 2.590300000000073e-05, 2.112500000000031e-05, 2.305500000000099e-05, 2.119499999999816e-05, 2.3986000000000146e-05, 2.4972000000001576e-05, 2.408300000000113e-05, 2.211100000000174e-05, 2.4013999999999286e-05, 2.6833000000000412e-05, 2.4986000000001146e-05, 2.2083999999998605e-05]</msg>
<status status="PASS" starttime="20201112 09:54:56.870" endtime="20201112 09:54:56.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.865" endtime="20201112 09:54:56.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.875" endtime="20201112 09:54:56.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:56.879" endtime="20201112 09:54:56.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.877" endtime="20201112 09:54:56.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.873" endtime="20201112 09:54:56.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.504" endtime="20201112 09:54:56.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.504" endtime="20201112 09:54:56.899"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.908" endtime="20201112 09:54:56.929"></status>
</kw>
<msg timestamp="20201112 09:54:56.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.907" endtime="20201112 09:54:56.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.931" endtime="20201112 09:54:56.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.933" endtime="20201112 09:54:56.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.904" endtime="20201112 09:54:56.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.902" endtime="20201112 09:54:56.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.943" endtime="20201112 09:54:57.231"></status>
</kw>
<msg timestamp="20201112 09:54:57.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023999458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024012958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:56.941" endtime="20201112 09:54:57.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023999458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024012958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:57.236" endtime="20201112 09:54:57.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.244" endtime="20201112 09:54:57.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.938" endtime="20201112 09:54:57.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.937" endtime="20201112 09:54:57.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:57.251" level="INFO">${RESULT} = [{'time': 0.024012958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.024043764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:57.247" endtime="20201112 09:54:57.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:57.264" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:57.252" endtime="20201112 09:54:57.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.268" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 09:54:57.267" endtime="20201112 09:54:57.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.271" level="INFO">VALUE: [1.3499999999999623e-05, 2.115299999999945e-05, 2.20969999999987e-05, 2.30969999999997e-05, 2.206899999999956e-05, 2.687500000000259e-05, 2.4027999999998856e-05, 2.112500000000031e-05, 2.3083999999999605e-05, 2.4027999999998856e-05, 2.1180000000002586e-05, 2.594499999999944e-05, 2.0222000000000295e-05, 2.59170000000003e-05, 2.4985999999997677e-05, 2.4958000000002006e-05, 2.112500000000031e-05, 2.495900000000148e-05, 2.30969999999997e-05, 2.40970000000007e-05, 2.594499999999944e-05, 2.211099999999827e-05, 2.3083999999999605e-05, 2.111100000000074e-05, 2.406900000000156e-05, 2.2112000000001214e-05, 2.211100000000174e-05, 2.4986000000001146e-05, 2.115299999999945e-05, 2.0208000000000725e-05, 2.6848000000002925e-05, 2.0208000000000725e-05, 2.4027999999998856e-05, 2.0208000000000725e-05, 2.4999999999997247e-05, 2.5943999999999967e-05, 2.5957999999999537e-05, 2.0235999999999865e-05, 2.690299999999826e-05, 2.1222000000001295e-05, 2.4986000000001146e-05, 2.02090000000002e-05, 2.1138000000000406e-05, 2.405500000000199e-05, 2.306900000000056e-05, 2.593099999999987e-05, 2.497300000000105e-05, 2.4958000000002006e-05, 2.5027999999999856e-05, 2.2137999999997937e-05]</msg>
<status status="PASS" starttime="20201112 09:54:57.269" endtime="20201112 09:54:57.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.265" endtime="20201112 09:54:57.272"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.274" endtime="20201112 09:54:57.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:57.278" endtime="20201112 09:54:57.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.276" endtime="20201112 09:54:57.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.273" endtime="20201112 09:54:57.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.900" endtime="20201112 09:54:57.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.900" endtime="20201112 09:54:57.299"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.307" endtime="20201112 09:54:57.326"></status>
</kw>
<msg timestamp="20201112 09:54:57.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:57.306" endtime="20201112 09:54:57.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:57.328" endtime="20201112 09:54:57.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.330" endtime="20201112 09:54:57.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.303" endtime="20201112 09:54:57.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.301" endtime="20201112 09:54:57.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.339" endtime="20201112 09:54:57.627"></status>
</kw>
<msg timestamp="20201112 09:54:57.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021720222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021728931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:57.337" endtime="20201112 09:54:57.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021720222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021728931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:57.632" endtime="20201112 09:54:57.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.640" endtime="20201112 09:54:57.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.335" endtime="20201112 09:54:57.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.333" endtime="20201112 09:54:57.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:57.647" level="INFO">${RESULT} = [{'time': 0.021728931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.708999999999106e-06, 'source_diff': 8.708999999999106e-06}, {'time': 0.021760069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:57.643" endtime="20201112 09:54:57.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:57.660" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:57.648" endtime="20201112 09:54:57.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.665" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 09:54:57.663" endtime="20201112 09:54:57.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.667" level="INFO">VALUE: [8.708999999999106e-06, 2.1165999999999546e-05, 2.4971999999998107e-05, 2.59170000000003e-05, 2.4971999999998107e-05, 2.3070000000000035e-05, 2.5958000000003006e-05, 2.4056000000001465e-05, 2.209700000000217e-05, 2.6874999999999122e-05, 2.597300000000205e-05, 2.5000000000000716e-05, 2.4986000000001146e-05, 2.588900000000116e-05, 2.493099999999887e-05, 2.211100000000174e-05, 2.308300000000013e-05, 2.308300000000013e-05, 2.5000000000000716e-05, 2.4985999999997677e-05, 2.116699999999902e-05, 2.115299999999945e-05, 2.209700000000217e-05, 2.3028000000001325e-05, 2.5860999999998552e-05, 2.5930000000000397e-05, 2.411100000000027e-05, 2.212500000000131e-05, 2.115299999999945e-05, 2.687500000000259e-05, 2.4014000000002755e-05, 2.4943999999998967e-05, 2.206899999999956e-05, 2.4040999999998952e-05, 2.1250000000000435e-05, 2.4013999999999286e-05, 2.215300000000045e-05, 2.5971999999999107e-05, 2.211100000000174e-05, 2.122300000000077e-05, 2.688900000000216e-05, 2.493099999999887e-05, 2.215300000000045e-05, 2.5902000000001257e-05, 2.0137999999999406e-05, 2.0208000000000725e-05, 2.116699999999902e-05, 2.5943999999999967e-05, 2.5943999999999967e-05, 2.115299999999945e-05]</msg>
<status status="PASS" starttime="20201112 09:54:57.666" endtime="20201112 09:54:57.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.661" endtime="20201112 09:54:57.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.675" endtime="20201112 09:54:57.676"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:57.679" endtime="20201112 09:54:57.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.677" endtime="20201112 09:54:57.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.673" endtime="20201112 09:54:57.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.300" endtime="20201112 09:54:57.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.299" endtime="20201112 09:54:57.700"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.708" endtime="20201112 09:54:57.728"></status>
</kw>
<msg timestamp="20201112 09:54:57.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:57.707" endtime="20201112 09:54:57.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:57.730" endtime="20201112 09:54:57.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.732" endtime="20201112 09:54:57.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.704" endtime="20201112 09:54:57.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.702" endtime="20201112 09:54:57.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.741" endtime="20201112 09:54:58.027"></status>
</kw>
<msg timestamp="20201112 09:54:58.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022700403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022711014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:57.739" endtime="20201112 09:54:58.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022700403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022711014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:58.031" endtime="20201112 09:54:58.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.039" endtime="20201112 09:54:58.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.737" endtime="20201112 09:54:58.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.735" endtime="20201112 09:54:58.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:58.046" level="INFO">${RESULT} = [{'time': 0.022711014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.022741986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:58.043" endtime="20201112 09:54:58.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:58.059" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:58.047" endtime="20201112 09:54:58.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.064" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 09:54:58.063" endtime="20201112 09:54:58.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.067" level="INFO">VALUE: [1.0611000000000648e-05, 2.111099999999727e-05, 2.2097999999998175e-05, 2.313899999999841e-05, 2.308300000000013e-05, 2.4985999999997677e-05, 2.0179999999998116e-05, 2.590300000000073e-05, 2.3027999999997856e-05, 2.4069999999997566e-05, 2.3958000000001006e-05, 2.3070000000000035e-05, 2.1166000000003016e-05, 2.5930000000000397e-05, 2.5846999999998982e-05, 2.690299999999826e-05, 2.3999999999999716e-05, 2.3055999999996996e-05, 2.5916000000000827e-05, 2.305500000000099e-05, 2.494500000000191e-05, 2.3013999999998286e-05, 2.5027999999999856e-05, 2.4040999999998952e-05, 2.4040999999998952e-05, 2.212500000000131e-05, 2.1193999999998686e-05, 2.3097999999999175e-05, 2.3083999999999605e-05, 2.4985999999997677e-05, 2.119500000000163e-05, 2.0208000000000725e-05, 2.588900000000116e-05, 2.0165999999998546e-05, 2.211099999999827e-05, 2.0222000000000295e-05, 2.016700000000149e-05, 2.5000000000000716e-05, 2.2985999999999146e-05, 2.018099999999759e-05, 2.49169999999993e-05, 2.0179999999998116e-05, 2.4013999999999286e-05, 2.690300000000173e-05, 2.308300000000013e-05, 2.4028000000002325e-05, 2.693100000000087e-05, 2.4986000000001146e-05, 2.0152000000002446e-05, 2.3986000000000146e-05]</msg>
<status status="PASS" starttime="20201112 09:54:58.065" endtime="20201112 09:54:58.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.060" endtime="20201112 09:54:58.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.070" endtime="20201112 09:54:58.071"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:58.073" endtime="20201112 09:54:58.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.072" endtime="20201112 09:54:58.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.068" endtime="20201112 09:54:58.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.701" endtime="20201112 09:54:58.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.700" endtime="20201112 09:54:58.094"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.103" endtime="20201112 09:54:58.126"></status>
</kw>
<msg timestamp="20201112 09:54:58.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.101" endtime="20201112 09:54:58.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.127" endtime="20201112 09:54:58.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.130" endtime="20201112 09:54:58.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.099" endtime="20201112 09:54:58.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.097" endtime="20201112 09:54:58.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.139" endtime="20201112 09:54:58.426"></status>
</kw>
<msg timestamp="20201112 09:54:58.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024822833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024853556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:58.137" endtime="20201112 09:54:58.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024822833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024853556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:58.430" endtime="20201112 09:54:58.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.438" endtime="20201112 09:54:58.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.135" endtime="20201112 09:54:58.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.133" endtime="20201112 09:54:58.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:58.445" level="INFO">${RESULT} = [{'time': 0.024853556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.072299999999986e-05, 'source_diff': 3.072299999999986e-05}, {'time': 0.024884278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:58.441" endtime="20201112 09:54:58.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:58.458" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:58.446" endtime="20201112 09:54:58.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.463" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 09:54:58.462" endtime="20201112 09:54:58.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.465" level="INFO">VALUE: [3.072299999999986e-05, 2.4985999999997677e-05, 2.5054999999999522e-05, 2.0222000000000295e-05, 2.406900000000156e-05, 2.116699999999902e-05, 2.5000000000000716e-05, 2.590300000000073e-05, 2.3943999999997967e-05, 2.213900000000088e-05, 2.213899999999741e-05, 2.5943999999999967e-05, 2.5957999999999537e-05, 2.015299999999845e-05, 2.494499999999844e-05, 2.211099999999827e-05, 2.594499999999944e-05, 2.3112000000002214e-05, 2.2152000000000976e-05, 2.212500000000131e-05, 2.2112000000001214e-05, 2.6846999999999982e-05, 2.212500000000131e-05, 2.594499999999944e-05, 2.212500000000131e-05, 2.4041999999998426e-05, 2.5943999999999967e-05, 2.3070000000000035e-05, 2.588899999999769e-05, 2.595899999999901e-05, 2.211100000000174e-05, 2.597299999999858e-05, 2.116699999999902e-05, 2.693100000000087e-05, 2.115299999999945e-05, 2.593099999999987e-05, 2.3084000000003074e-05, 2.405500000000199e-05, 2.3042000000000895e-05, 2.211099999999827e-05, 2.4888000000000687e-05, 2.211099999999827e-05, 2.019500000000063e-05, 2.4985999999997677e-05, 2.211100000000174e-05, 2.116699999999902e-05, 2.308300000000013e-05, 2.593099999999987e-05, 2.3943999999997967e-05, 2.30969999999997e-05]</msg>
<status status="PASS" starttime="20201112 09:54:58.464" endtime="20201112 09:54:58.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.459" endtime="20201112 09:54:58.467"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.469" endtime="20201112 09:54:58.470"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:58.472" endtime="20201112 09:54:58.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.471" endtime="20201112 09:54:58.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.467" endtime="20201112 09:54:58.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.095" endtime="20201112 09:54:58.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.095" endtime="20201112 09:54:58.493"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.502" endtime="20201112 09:54:58.522"></status>
</kw>
<msg timestamp="20201112 09:54:58.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.500" endtime="20201112 09:54:58.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.524" endtime="20201112 09:54:58.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.526" endtime="20201112 09:54:58.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.498" endtime="20201112 09:54:58.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.496" endtime="20201112 09:54:58.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.535" endtime="20201112 09:54:58.829"></status>
</kw>
<msg timestamp="20201112 09:54:58.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022970667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022997556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:58.534" endtime="20201112 09:54:58.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022970667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022997556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:58.833" endtime="20201112 09:54:58.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.841" endtime="20201112 09:54:58.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.531" endtime="20201112 09:54:58.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.529" endtime="20201112 09:54:58.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:58.848" level="INFO">${RESULT} = [{'time': 0.022997556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6888999999998692e-05, 'source_diff': 2.6888999999998692e-05}, {'time': 0.023027542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:58.845" endtime="20201112 09:54:58.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:58.861" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:58.849" endtime="20201112 09:54:58.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.866" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 09:54:58.865" endtime="20201112 09:54:58.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.868" level="INFO">VALUE: [2.6888999999998692e-05, 2.588900000000116e-05, 2.301300000000228e-05, 2.5874999999998122e-05, 2.40970000000007e-05, 2.211100000000174e-05, 2.3083999999999605e-05, 2.3056000000000465e-05, 2.3971999999997107e-05, 2.393100000000134e-05, 2.3040999999997952e-05, 2.4027999999998856e-05, 2.2999999999998716e-05, 2.109700000000117e-05, 2.0208000000000725e-05, 2.211100000000174e-05, 2.1165999999999546e-05, 2.4026999999999382e-05, 2.4929999999999397e-05, 2.0179999999998116e-05, 2.1137999999996937e-05, 2.4999999999997247e-05, 2.4012999999999812e-05, 2.308300000000013e-05, 2.20969999999987e-05, 2.1180000000002586e-05, 2.018100000000106e-05, 2.494500000000191e-05, 2.30969999999997e-05, 2.308300000000013e-05, 2.3056000000000465e-05, 2.5971999999999107e-05, 2.1165999999999546e-05, 2.5027999999999856e-05, 2.209700000000217e-05, 2.5971999999999107e-05, 2.3986000000000146e-05, 2.5860999999998552e-05, 2.018100000000106e-05, 2.3068999999997092e-05, 2.4027999999998856e-05, 2.212499999999784e-05, 2.6888999999998692e-05, 2.4041999999998426e-05, 2.588900000000116e-05, 2.2055999999999465e-05, 2.4986000000001146e-05, 2.5014000000000286e-05, 2.212500000000131e-05, 2.112500000000031e-05]</msg>
<status status="PASS" starttime="20201112 09:54:58.867" endtime="20201112 09:54:58.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.862" endtime="20201112 09:54:58.870"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.872" endtime="20201112 09:54:58.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:58.875" endtime="20201112 09:54:58.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.874" endtime="20201112 09:54:58.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.870" endtime="20201112 09:54:58.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.494" endtime="20201112 09:54:58.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.493" endtime="20201112 09:54:58.896"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.905" endtime="20201112 09:54:58.925"></status>
</kw>
<msg timestamp="20201112 09:54:58.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.903" endtime="20201112 09:54:58.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.927" endtime="20201112 09:54:58.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.929" endtime="20201112 09:54:58.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.901" endtime="20201112 09:54:58.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.899" endtime="20201112 09:54:58.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.938" endtime="20201112 09:54:59.225"></status>
</kw>
<msg timestamp="20201112 09:54:59.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021753222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021781083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:58.937" endtime="20201112 09:54:59.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021753222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021781083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:59.229" endtime="20201112 09:54:59.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.237" endtime="20201112 09:54:59.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.934" endtime="20201112 09:54:59.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.932" endtime="20201112 09:54:59.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:59.244" level="INFO">${RESULT} = [{'time': 0.021781083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7861000000000552e-05, 'source_diff': 2.7861000000000552e-05}, {'time': 0.021812111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:59.241" endtime="20201112 09:54:59.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:59.257" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:59.245" endtime="20201112 09:54:59.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.262" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 09:54:59.261" endtime="20201112 09:54:59.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.264" level="INFO">VALUE: [2.7861000000000552e-05, 2.4943999999998967e-05, 2.3054999999997522e-05, 2.20969999999987e-05, 2.1165999999999546e-05, 2.3070000000000035e-05, 2.5000000000000716e-05, 2.5014000000000286e-05, 2.116699999999902e-05, 2.305500000000099e-05, 2.1151999999999976e-05, 2.1179999999999116e-05, 2.119499999999816e-05, 2.216700000000002e-05, 2.1166000000003016e-05, 2.5000000000000716e-05, 2.211099999999827e-05, 2.20969999999987e-05, 2.5027999999999856e-05, 2.30969999999997e-05, 2.4012999999999812e-05, 2.4042000000001895e-05, 2.5014000000000286e-05, 2.115299999999945e-05, 2.0208000000000725e-05, 2.4027999999998856e-05, 2.1179999999999116e-05, 2.0222000000000295e-05, 2.3083999999999605e-05, 2.4027999999998856e-05, 2.4013999999999286e-05, 2.308300000000013e-05, 2.4026999999999382e-05, 2.0208000000000725e-05, 2.0193999999997686e-05, 2.497300000000105e-05, 2.306900000000056e-05, 2.3070000000000035e-05, 2.5000000000000716e-05, 2.6846999999999982e-05, 2.5014000000000286e-05, 2.0249999999999435e-05, 2.212499999999784e-05, 2.10969999999977e-05, 2.591699999999683e-05, 2.113899999999988e-05, 2.115299999999945e-05, 2.4957999999998537e-05, 2.1165999999999546e-05, 2.0179999999998116e-05]</msg>
<status status="PASS" starttime="20201112 09:54:59.263" endtime="20201112 09:54:59.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.258" endtime="20201112 09:54:59.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.268" endtime="20201112 09:54:59.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:59.271" endtime="20201112 09:54:59.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.270" endtime="20201112 09:54:59.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.266" endtime="20201112 09:54:59.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.897" endtime="20201112 09:54:59.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.897" endtime="20201112 09:54:59.292"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.301" endtime="20201112 09:54:59.320"></status>
</kw>
<msg timestamp="20201112 09:54:59.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:59.299" endtime="20201112 09:54:59.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:59.322" endtime="20201112 09:54:59.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.324" endtime="20201112 09:54:59.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.297" endtime="20201112 09:54:59.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.294" endtime="20201112 09:54:59.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.333" endtime="20201112 09:54:59.621"></status>
</kw>
<msg timestamp="20201112 09:54:59.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022904597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022916111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:59.332" endtime="20201112 09:54:59.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022904597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022916111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:59.625" endtime="20201112 09:54:59.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.633" endtime="20201112 09:54:59.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.329" endtime="20201112 09:54:59.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.328" endtime="20201112 09:54:59.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:59.640" level="INFO">${RESULT} = [{'time': 0.022916111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.0229465, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:59.636" endtime="20201112 09:54:59.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:59.653" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:59.641" endtime="20201112 09:54:59.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.658" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 09:54:59.657" endtime="20201112 09:54:59.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.660" level="INFO">VALUE: [1.1514000000000663e-05, 2.113900000000335e-05, 2.5014000000000286e-05, 2.308300000000013e-05, 2.5000000000000716e-05, 2.308300000000013e-05, 2.019500000000063e-05, 2.30969999999997e-05, 2.2180000000000116e-05, 2.313900000000188e-05, 2.0165999999998546e-05, 2.211099999999827e-05, 2.4027999999998856e-05, 2.3056000000000465e-05, 2.212500000000131e-05, 2.308300000000013e-05, 2.0222000000000295e-05, 2.4972000000001576e-05, 2.111100000000074e-05, 2.4027999999998856e-05, 2.5943999999999967e-05, 2.115299999999945e-05, 2.3999999999999716e-05, 2.4986000000001146e-05, 2.306900000000056e-05, 2.118100000000206e-05, 2.0194000000001155e-05, 2.113899999999988e-05, 2.593099999999987e-05, 2.4026999999999382e-05, 2.4957999999998537e-05, 2.4013999999999286e-05, 2.4958000000002006e-05, 2.3056000000000465e-05, 2.495900000000148e-05, 2.4986000000001146e-05, 2.4985999999997677e-05, 2.593099999999987e-05, 2.59170000000003e-05, 2.594499999999944e-05, 2.20969999999987e-05, 2.213900000000088e-05, 2.3999999999999716e-05, 2.4041999999998426e-05, 2.2112000000001214e-05, 2.116700000000249e-05, 2.5958000000003006e-05, 2.4012999999999812e-05, 2.4958000000002006e-05, 2.4027999999998856e-05]</msg>
<status status="PASS" starttime="20201112 09:54:59.659" endtime="20201112 09:54:59.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.654" endtime="20201112 09:54:59.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.664" endtime="20201112 09:54:59.665"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:59.667" endtime="20201112 09:54:59.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.666" endtime="20201112 09:54:59.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.662" endtime="20201112 09:54:59.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.293" endtime="20201112 09:54:59.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.292" endtime="20201112 09:54:59.688"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.697" endtime="20201112 09:54:59.718"></status>
</kw>
<msg timestamp="20201112 09:54:59.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:59.695" endtime="20201112 09:54:59.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:59.720" endtime="20201112 09:54:59.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.722" endtime="20201112 09:54:59.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.692" endtime="20201112 09:54:59.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.690" endtime="20201112 09:54:59.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.731" endtime="20201112 09:55:00.019"></status>
</kw>
<msg timestamp="20201112 09:55:00.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023873361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023898361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:59.730" endtime="20201112 09:55:00.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023873361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023898361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:00.023" endtime="20201112 09:55:00.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.031" endtime="20201112 09:55:00.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.727" endtime="20201112 09:55:00.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.725" endtime="20201112 09:55:00.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:00.038" level="INFO">${RESULT} = [{'time': 0.023898361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5000000000000716e-05, 'source_diff': 2.5000000000000716e-05}, {'time': 0.023929792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:00.035" endtime="20201112 09:55:00.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:00.051" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:00.039" endtime="20201112 09:55:00.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.056" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 09:55:00.055" endtime="20201112 09:55:00.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.058" level="INFO">VALUE: [2.5000000000000716e-05, 2.311099999999927e-05, 2.4040999999998952e-05, 2.59170000000003e-05, 2.69170000000013e-05, 2.4958000000002006e-05, 2.4026999999999382e-05, 2.211100000000174e-05, 2.213899999999741e-05, 2.212499999999784e-05, 2.2986000000002615e-05, 2.5014000000000286e-05, 2.4026999999999382e-05, 2.0235999999999865e-05, 2.3028000000001325e-05, 2.111099999999727e-05, 2.20969999999987e-05, 2.4985999999997677e-05, 2.49169999999993e-05, 2.4054999999998522e-05, 2.115299999999945e-05, 2.4958000000002006e-05, 2.3068999999997092e-05, 2.119500000000163e-05, 2.406900000000156e-05, 2.212500000000131e-05, 2.206899999999956e-05, 2.3986000000000146e-05, 2.0235999999999865e-05, 2.213900000000088e-05, 2.40970000000007e-05, 2.497300000000105e-05, 2.595899999999901e-05, 2.1179999999999116e-05, 2.211099999999827e-05, 2.304100000000142e-05, 2.4986000000001146e-05, 2.2152000000000976e-05, 2.5971999999999107e-05, 2.308300000000013e-05, 2.308300000000013e-05, 2.118099999999859e-05, 2.4014000000002755e-05, 2.595899999999901e-05, 2.4958000000002006e-05, 2.4040999999998952e-05, 2.0208000000000725e-05, 2.115299999999945e-05, 2.69170000000013e-05, 2.306900000000056e-05]</msg>
<status status="PASS" starttime="20201112 09:55:00.057" endtime="20201112 09:55:00.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.052" endtime="20201112 09:55:00.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.062" endtime="20201112 09:55:00.063"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:00.065" endtime="20201112 09:55:00.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.063" endtime="20201112 09:55:00.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.060" endtime="20201112 09:55:00.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.689" endtime="20201112 09:55:00.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.688" endtime="20201112 09:55:00.086"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.095" endtime="20201112 09:55:00.115"></status>
</kw>
<msg timestamp="20201112 09:55:00.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.093" endtime="20201112 09:55:00.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.116" endtime="20201112 09:55:00.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.119" endtime="20201112 09:55:00.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.090" endtime="20201112 09:55:00.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.088" endtime="20201112 09:55:00.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.128" endtime="20201112 09:55:00.414"></status>
</kw>
<msg timestamp="20201112 09:55:00.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022714014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:00.126" endtime="20201112 09:55:00.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022714014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:00.418" endtime="20201112 09:55:00.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.426" endtime="20201112 09:55:00.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.124" endtime="20201112 09:55:00.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.122" endtime="20201112 09:55:00.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:00.433" level="INFO">${RESULT} = [{'time': 0.022714014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.53750000000015e-05, 'source_diff': 1.53750000000015e-05}, {'time': 0.022744625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:55:00.429" endtime="20201112 09:55:00.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:00.446" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:00.434" endtime="20201112 09:55:00.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.450" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 09:55:00.449" endtime="20201112 09:55:00.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.453" level="INFO">VALUE: [1.53750000000015e-05, 2.0222000000000295e-05, 2.3083999999999605e-05, 2.4971999999998107e-05, 2.212499999999784e-05, 2.5000000000000716e-05, 2.211100000000174e-05, 2.4986000000001146e-05, 2.2056000000002934e-05, 2.594499999999944e-05, 2.595899999999901e-05, 2.4985999999997677e-05, 2.4027999999998856e-05, 2.404100000000242e-05, 2.408300000000113e-05, 2.018100000000106e-05, 2.4986000000001146e-05, 2.305500000000099e-05, 2.690299999999826e-05, 2.205499999999999e-05, 2.3972000000000576e-05, 2.213900000000088e-05, 2.212500000000131e-05, 2.311099999999927e-05, 2.4972000000001576e-05, 2.211100000000174e-05, 2.212500000000131e-05, 2.118099999999859e-05, 2.3084000000003074e-05, 2.404100000000242e-05, 2.5000000000000716e-05, 2.59170000000003e-05, 2.30969999999997e-05, 2.5943999999999967e-05, 2.4026999999999382e-05, 2.1193999999998686e-05, 2.0208000000000725e-05, 2.305500000000099e-05, 2.4013999999999286e-05, 2.593099999999987e-05, 2.69170000000013e-05, 2.0235999999999865e-05, 2.211099999999827e-05, 2.213899999999741e-05, 2.5957999999999537e-05, 2.1193999999998686e-05, 2.309700000000317e-05, 2.3070000000000035e-05, 2.2944000000000436e-05, 2.3070000000000035e-05]</msg>
<status status="PASS" starttime="20201112 09:55:00.452" endtime="20201112 09:55:00.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.447" endtime="20201112 09:55:00.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.457" endtime="20201112 09:55:00.458"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:00.460" endtime="20201112 09:55:00.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.458" endtime="20201112 09:55:00.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.455" endtime="20201112 09:55:00.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.087" endtime="20201112 09:55:00.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.086" endtime="20201112 09:55:00.481"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.489" endtime="20201112 09:55:00.512"></status>
</kw>
<msg timestamp="20201112 09:55:00.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.488" endtime="20201112 09:55:00.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.513" endtime="20201112 09:55:00.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.516" endtime="20201112 09:55:00.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.485" endtime="20201112 09:55:00.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.483" endtime="20201112 09:55:00.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.525" endtime="20201112 09:55:00.813"></status>
</kw>
<msg timestamp="20201112 09:55:00.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024724278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024733958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:00.523" endtime="20201112 09:55:00.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024724278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024733958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:00.817" endtime="20201112 09:55:00.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.826" endtime="20201112 09:55:00.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.520" endtime="20201112 09:55:00.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.519" endtime="20201112 09:55:00.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:00.832" level="INFO">${RESULT} = [{'time': 0.024733958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.680000000001493e-06, 'source_diff': 9.680000000001493e-06}, {'time': 0.024764444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:00.829" endtime="20201112 09:55:00.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:00.845" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:00.833" endtime="20201112 09:55:00.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.850" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 09:55:00.849" endtime="20201112 09:55:00.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.852" level="INFO">VALUE: [9.680000000001493e-06, 2.0194000000001155e-05, 2.211099999999827e-05, 2.3999999999999716e-05, 2.6777999999998137e-05, 2.115299999999945e-05, 2.116699999999902e-05, 2.212500000000131e-05, 2.019499999999716e-05, 2.2041999999999895e-05, 2.2069999999999035e-05, 2.211100000000174e-05, 2.305500000000099e-05, 2.6874999999999122e-05, 2.2112000000001214e-05, 2.305500000000099e-05, 2.0194000000001155e-05, 2.588899999999769e-05, 2.398699999999962e-05, 2.113899999999988e-05, 2.4041999999998426e-05, 2.495900000000148e-05, 2.1193999999998686e-05, 2.5000000000000716e-05, 2.5000000000000716e-05, 2.590300000000073e-05, 2.013899999999888e-05, 2.211099999999827e-05, 2.211100000000174e-05, 2.213900000000088e-05, 2.4055999999997996e-05, 2.0193999999997686e-05, 2.016700000000149e-05, 2.212499999999784e-05, 2.690299999999826e-05, 2.5971999999999107e-05, 2.1151999999999976e-05, 2.4013999999999286e-05, 2.118099999999859e-05, 2.3972000000000576e-05, 2.112500000000031e-05, 2.497300000000105e-05, 2.118100000000206e-05, 2.111099999999727e-05, 2.3986000000000146e-05, 2.5930000000000397e-05, 2.5000000000000716e-05, 2.3083999999999605e-05, 2.115300000000292e-05, 2.588900000000116e-05]</msg>
<status status="PASS" starttime="20201112 09:55:00.851" endtime="20201112 09:55:00.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.846" endtime="20201112 09:55:00.853"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.856" endtime="20201112 09:55:00.857"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:00.859" endtime="20201112 09:55:00.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.858" endtime="20201112 09:55:00.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.854" endtime="20201112 09:55:00.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.482" endtime="20201112 09:55:00.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.481" endtime="20201112 09:55:00.880"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.889" endtime="20201112 09:55:00.908"></status>
</kw>
<msg timestamp="20201112 09:55:00.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.887" endtime="20201112 09:55:00.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.910" endtime="20201112 09:55:00.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.912" endtime="20201112 09:55:00.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.885" endtime="20201112 09:55:00.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.883" endtime="20201112 09:55:00.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.921" endtime="20201112 09:55:01.207"></status>
</kw>
<msg timestamp="20201112 09:55:01.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022303208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022329181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:00.920" endtime="20201112 09:55:01.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022303208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022329181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:01.212" endtime="20201112 09:55:01.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.220" endtime="20201112 09:55:01.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.917" endtime="20201112 09:55:01.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.915" endtime="20201112 09:55:01.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:01.227" level="INFO">${RESULT} = [{'time': 0.022329181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.597299999999858e-05, 'source_diff': 2.597299999999858e-05}, {'time': 0.022359681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:01.223" endtime="20201112 09:55:01.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:01.240" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:01.228" endtime="20201112 09:55:01.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.244" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 09:55:01.243" endtime="20201112 09:55:01.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.247" level="INFO">VALUE: [2.597299999999858e-05, 2.2097999999998175e-05, 2.5901999999997788e-05, 2.3986000000000146e-05, 2.590300000000073e-05, 2.4985999999997677e-05, 2.5957999999999537e-05, 2.308300000000013e-05, 2.4040999999998952e-05, 2.313900000000188e-05, 2.4026999999999382e-05, 2.594499999999944e-05, 2.495900000000148e-05, 2.206899999999956e-05, 2.4957999999998537e-05, 2.1151999999999976e-05, 2.306900000000056e-05, 2.308300000000013e-05, 2.4986000000001146e-05, 2.113899999999988e-05, 2.018100000000106e-05, 2.3027999999997856e-05, 2.59170000000003e-05, 2.2041999999999895e-05, 2.019500000000063e-05, 2.10830000000016e-05, 2.212500000000131e-05, 2.4055999999997996e-05, 2.497300000000105e-05, 2.3986000000000146e-05, 2.115299999999945e-05, 2.4040999999998952e-05, 2.212500000000131e-05, 2.690300000000173e-05, 2.4028000000002325e-05, 2.59170000000003e-05, 2.5915999999997358e-05, 2.5027000000000382e-05, 2.4041999999998426e-05, 2.5986000000002146e-05, 2.118100000000206e-05, 2.306900000000056e-05, 2.59170000000003e-05, 2.208299999999913e-05, 2.59170000000003e-05, 2.311100000000274e-05, 2.1179999999999116e-05, 2.3056000000000465e-05, 2.212500000000131e-05, 2.308300000000013e-05]</msg>
<status status="PASS" starttime="20201112 09:55:01.245" endtime="20201112 09:55:01.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.241" endtime="20201112 09:55:01.248"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.250" endtime="20201112 09:55:01.252"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:01.254" endtime="20201112 09:55:01.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.252" endtime="20201112 09:55:01.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.249" endtime="20201112 09:55:01.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.881" endtime="20201112 09:55:01.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.881" endtime="20201112 09:55:01.275"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.283" endtime="20201112 09:55:01.305"></status>
</kw>
<msg timestamp="20201112 09:55:01.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:01.282" endtime="20201112 09:55:01.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:01.306" endtime="20201112 09:55:01.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.309" endtime="20201112 09:55:01.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.279" endtime="20201112 09:55:01.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.277" endtime="20201112 09:55:01.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.318" endtime="20201112 09:55:01.605"></status>
</kw>
<msg timestamp="20201112 09:55:01.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024655861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024684681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:01.316" endtime="20201112 09:55:01.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024655861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024684681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:01.610" endtime="20201112 09:55:01.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.618" endtime="20201112 09:55:01.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.314" endtime="20201112 09:55:01.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.312" endtime="20201112 09:55:01.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:01.625" level="INFO">${RESULT} = [{'time': 0.024684681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8819999999998847e-05, 'source_diff': 2.8819999999998847e-05}, {'time': 0.024714903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:01.621" endtime="20201112 09:55:01.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:01.638" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:01.626" endtime="20201112 09:55:01.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.642" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 09:55:01.641" endtime="20201112 09:55:01.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.645" level="INFO">VALUE: [2.8819999999998847e-05, 2.116699999999902e-05, 2.404100000000242e-05, 2.5930000000000397e-05, 2.49169999999993e-05, 2.016700000000149e-05, 2.5971999999999107e-05, 2.5957999999999537e-05, 2.311099999999927e-05, 2.213899999999741e-05, 2.5957999999999537e-05, 2.116699999999902e-05, 2.0208000000000725e-05, 2.5943999999999967e-05, 2.116700000000249e-05, 2.3097999999999175e-05, 2.20830000000026e-05, 2.4027999999998856e-05, 2.305500000000099e-05, 2.211100000000174e-05, 2.593099999999987e-05, 2.4027999999998856e-05, 2.013900000000235e-05, 2.408300000000113e-05, 2.4082999999997662e-05, 2.5971999999999107e-05, 2.116699999999902e-05, 2.213900000000088e-05, 2.119500000000163e-05, 2.115299999999945e-05, 2.118099999999859e-05, 2.315300000000145e-05, 2.211099999999827e-05, 2.4055999999997996e-05, 2.5000000000000716e-05, 2.115299999999945e-05, 2.594499999999944e-05, 2.3083999999999605e-05, 2.115300000000292e-05, 2.1165999999999546e-05, 2.0193999999997686e-05, 2.6888999999998692e-05, 2.308300000000013e-05, 2.4972000000001576e-05, 2.113899999999988e-05, 2.4028000000002325e-05, 2.308300000000013e-05, 2.116699999999902e-05, 2.1138000000000406e-05, 2.2098000000001644e-05]</msg>
<status status="PASS" starttime="20201112 09:55:01.643" endtime="20201112 09:55:01.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.639" endtime="20201112 09:55:01.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.649" endtime="20201112 09:55:01.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:01.652" endtime="20201112 09:55:01.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.651" endtime="20201112 09:55:01.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.647" endtime="20201112 09:55:01.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.276" endtime="20201112 09:55:01.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.275" endtime="20201112 09:55:01.673"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.682" endtime="20201112 09:55:01.703"></status>
</kw>
<msg timestamp="20201112 09:55:01.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:01.680" endtime="20201112 09:55:01.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:01.704" endtime="20201112 09:55:01.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.707" endtime="20201112 09:55:01.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.678" endtime="20201112 09:55:01.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.676" endtime="20201112 09:55:01.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.716" endtime="20201112 09:55:02.003"></status>
</kw>
<msg timestamp="20201112 09:55:02.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023278833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023317194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:01.714" endtime="20201112 09:55:02.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023278833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023317194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:02.007" endtime="20201112 09:55:02.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.015" endtime="20201112 09:55:02.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.712" endtime="20201112 09:55:02.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.710" endtime="20201112 09:55:02.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:02.022" level="INFO">${RESULT} = [{'time': 0.023317194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8361000000000645e-05, 'source_diff': 3.8361000000000645e-05}, {'time': 0.023347181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:02.019" endtime="20201112 09:55:02.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:02.035" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:02.023" endtime="20201112 09:55:02.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.040" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 09:55:02.039" endtime="20201112 09:55:02.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.042" level="INFO">VALUE: [3.8361000000000645e-05, 2.3112000000002214e-05, 2.211099999999827e-05, 2.4929999999999397e-05, 2.3040999999997952e-05, 2.4944000000002436e-05, 2.2112000000001214e-05, 2.4957999999998537e-05, 2.1151999999999976e-05, 2.211100000000174e-05, 2.4056000000001465e-05, 2.4042000000001895e-05, 2.4957999999998537e-05, 2.016700000000149e-05, 2.4957999999998537e-05, 2.0137999999999406e-05, 2.691699999999783e-05, 2.211100000000174e-05, 2.594499999999944e-05, 2.6012999999998343e-05, 2.30969999999997e-05, 2.3083999999999605e-05, 2.212500000000131e-05, 2.4957999999998537e-05, 2.3026999999998382e-05, 2.4013999999999286e-05, 2.30969999999997e-05, 2.0222000000000295e-05, 2.4986000000001146e-05, 2.113899999999988e-05, 2.20969999999987e-05, 2.015299999999845e-05, 2.5902000000001257e-05, 2.0207999999997256e-05, 2.213900000000088e-05, 2.4013999999999286e-05, 2.5930000000000397e-05, 2.4026999999999382e-05, 2.109700000000117e-05, 2.3986000000000146e-05, 2.2055999999999465e-05, 2.0249999999999435e-05, 2.4028000000002325e-05, 2.115299999999945e-05, 2.5972000000002576e-05, 2.215299999999698e-05, 2.308300000000013e-05, 2.3041999999997426e-05, 2.0165999999998546e-05, 2.3070000000000035e-05]</msg>
<status status="PASS" starttime="20201112 09:55:02.041" endtime="20201112 09:55:02.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.036" endtime="20201112 09:55:02.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.046" endtime="20201112 09:55:02.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:02.049" endtime="20201112 09:55:02.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.048" endtime="20201112 09:55:02.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.044" endtime="20201112 09:55:02.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.674" endtime="20201112 09:55:02.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.673" endtime="20201112 09:55:02.070"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.079" endtime="20201112 09:55:02.100"></status>
</kw>
<msg timestamp="20201112 09:55:02.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:02.078" endtime="20201112 09:55:02.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:02.102" endtime="20201112 09:55:02.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.104" endtime="20201112 09:55:02.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.075" endtime="20201112 09:55:02.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.073" endtime="20201112 09:55:02.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.113" endtime="20201112 09:55:02.401"></status>
</kw>
<msg timestamp="20201112 09:55:02.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022837139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022864986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:02.111" endtime="20201112 09:55:02.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022837139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022864986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:02.405" endtime="20201112 09:55:02.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.414" endtime="20201112 09:55:02.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.109" endtime="20201112 09:55:02.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.107" endtime="20201112 09:55:02.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:02.420" level="INFO">${RESULT} = [{'time': 0.022864986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7847000000000982e-05, 'source_diff': 2.7847000000000982e-05}, {'time': 0.022895097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:02.417" endtime="20201112 09:55:02.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:02.433" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:02.421" endtime="20201112 09:55:02.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.438" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 09:55:02.437" endtime="20201112 09:55:02.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.440" level="INFO">VALUE: [2.7847000000000982e-05, 2.208299999999913e-05, 2.4028000000002325e-05, 2.211100000000174e-05, 2.5000000000000716e-05, 2.306900000000056e-05, 2.211100000000174e-05, 2.593099999999987e-05, 2.3083999999999605e-05, 2.408300000000113e-05, 2.019500000000063e-05, 2.3083999999999605e-05, 2.211099999999827e-05, 2.688900000000216e-05, 2.4041999999998426e-05, 2.212500000000131e-05, 2.4985999999997677e-05, 2.0222000000000295e-05, 2.69170000000013e-05, 2.4041999999998426e-05, 2.02090000000002e-05, 2.5957999999999537e-05, 2.4041999999998426e-05, 2.4027999999998856e-05, 2.1222000000001295e-05, 2.0194000000001155e-05, 2.0208000000000725e-05, 2.4054999999998522e-05, 2.018099999999759e-05, 2.6972000000000107e-05, 2.5957999999999537e-05, 2.113899999999988e-05, 2.3070000000000035e-05, 2.215300000000045e-05, 2.115299999999945e-05, 2.306900000000056e-05, 2.1179999999999116e-05, 2.5000000000000716e-05, 2.3097999999999175e-05, 2.5971999999999107e-05, 2.2112000000001214e-05, 2.5042000000002895e-05, 2.1151999999999976e-05, 2.59170000000003e-05, 2.20969999999987e-05, 2.4068999999998092e-05, 2.212500000000131e-05, 2.3042000000000895e-05, 2.022299999999977e-05, 2.118099999999859e-05]</msg>
<status status="PASS" starttime="20201112 09:55:02.439" endtime="20201112 09:55:02.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.434" endtime="20201112 09:55:02.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.444" endtime="20201112 09:55:02.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:02.447" endtime="20201112 09:55:02.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.446" endtime="20201112 09:55:02.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.442" endtime="20201112 09:55:02.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.071" endtime="20201112 09:55:02.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.071" endtime="20201112 09:55:02.468"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.477" endtime="20201112 09:55:02.496"></status>
</kw>
<msg timestamp="20201112 09:55:02.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:02.475" endtime="20201112 09:55:02.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:02.498" endtime="20201112 09:55:02.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.500" endtime="20201112 09:55:02.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.473" endtime="20201112 09:55:02.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.471" endtime="20201112 09:55:02.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.509" endtime="20201112 09:55:02.795"></status>
</kw>
<msg timestamp="20201112 09:55:02.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02173225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021740958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:02.508" endtime="20201112 09:55:02.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02173225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021740958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:02.799" endtime="20201112 09:55:02.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.808" endtime="20201112 09:55:02.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.505" endtime="20201112 09:55:02.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.503" endtime="20201112 09:55:02.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:02.814" level="INFO">${RESULT} = [{'time': 0.021740958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.021771972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:02.811" endtime="20201112 09:55:02.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:02.828" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:02.815" endtime="20201112 09:55:02.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.832" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 09:55:02.831" endtime="20201112 09:55:02.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.834" level="INFO">VALUE: [8.707999999999633e-06, 2.4915999999999827e-05, 2.4000000000003185e-05, 2.3986000000000146e-05, 2.493099999999887e-05, 2.590300000000073e-05, 2.594499999999944e-05, 2.0193999999997686e-05, 2.4929999999999397e-05, 2.494499999999844e-05, 2.3042000000000895e-05, 2.4957999999998537e-05, 2.5971999999999107e-05, 2.0222000000000295e-05, 2.3097999999999175e-05, 2.5957999999999537e-05, 2.590300000000073e-05, 2.5943999999999967e-05, 2.212500000000131e-05, 2.687500000000259e-05, 2.3999999999999716e-05, 2.4013999999999286e-05, 2.0222000000000295e-05, 2.0179999999998116e-05, 2.488900000000016e-05, 2.5000000000000716e-05, 2.5000000000000716e-05, 2.115299999999945e-05, 2.018100000000106e-05, 2.0166000000002016e-05, 2.3986000000000146e-05, 2.5916000000000827e-05, 2.219499999999916e-05, 2.4040999999998952e-05, 2.3972000000000576e-05, 2.687500000000259e-05, 2.5943999999999967e-05, 2.112500000000031e-05, 2.3986000000000146e-05, 2.3986000000000146e-05, 2.119499999999816e-05, 2.305500000000099e-05, 2.015300000000192e-05, 2.208299999999913e-05, 2.4027999999998856e-05, 2.016700000000149e-05, 2.495900000000148e-05, 2.3068999999997092e-05, 2.595899999999901e-05, 2.018100000000106e-05]</msg>
<status status="PASS" starttime="20201112 09:55:02.833" endtime="20201112 09:55:02.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.828" endtime="20201112 09:55:02.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.846" endtime="20201112 09:55:02.847"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:02.849" endtime="20201112 09:55:02.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.847" endtime="20201112 09:55:02.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.844" endtime="20201112 09:55:02.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.469" endtime="20201112 09:55:02.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.469" endtime="20201112 09:55:02.870"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.878" endtime="20201112 09:55:02.898"></status>
</kw>
<msg timestamp="20201112 09:55:02.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:02.877" endtime="20201112 09:55:02.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:02.899" endtime="20201112 09:55:02.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.902" endtime="20201112 09:55:02.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.874" endtime="20201112 09:55:02.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.872" endtime="20201112 09:55:02.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.911" endtime="20201112 09:55:03.198"></status>
</kw>
<msg timestamp="20201112 09:55:03.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022127514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:02.909" endtime="20201112 09:55:03.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022127514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:03.202" endtime="20201112 09:55:03.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.211" endtime="20201112 09:55:03.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.907" endtime="20201112 09:55:03.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.905" endtime="20201112 09:55:03.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:03.217" level="INFO">${RESULT} = [{'time': 0.022142903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.53889999999976e-05, 'source_diff': 1.53889999999976e-05}, {'time': 0.022173653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:55:03.214" endtime="20201112 09:55:03.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:03.230" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:03.218" endtime="20201112 09:55:03.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.235" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 09:55:03.234" endtime="20201112 09:55:03.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.237" level="INFO">VALUE: [1.53889999999976e-05, 2.212500000000131e-05, 2.1165999999999546e-05, 2.215300000000045e-05, 2.111100000000074e-05, 2.3070000000000035e-05, 2.5902000000001257e-05, 2.494499999999844e-05, 2.311099999999927e-05, 2.0235999999999865e-05, 2.4041999999998426e-05, 2.212500000000131e-05, 2.590300000000073e-05, 2.3054999999997522e-05, 2.113899999999988e-05, 2.115300000000292e-05, 2.4972000000001576e-05, 2.3056000000000465e-05, 2.02090000000002e-05, 2.2083999999998605e-05, 2.109700000000117e-05, 2.022299999999977e-05, 2.30969999999997e-05, 2.5957999999999537e-05, 2.590300000000073e-05, 2.594499999999944e-05, 2.4028000000002325e-05, 2.69170000000013e-05, 2.118100000000206e-05, 2.2112000000001214e-05, 2.6860999999999552e-05, 2.0193999999997686e-05, 2.3056000000000465e-05, 2.5999999999998247e-05, 2.211099999999827e-05, 2.5943999999999967e-05, 2.5986000000002146e-05, 2.5055999999998996e-05, 2.113899999999988e-05, 2.4027999999998856e-05, 2.311099999999927e-05, 2.116699999999902e-05, 2.5000000000000716e-05, 2.212499999999784e-05, 2.5000000000000716e-05, 2.1193999999998686e-05, 2.5957999999999537e-05, 2.4014000000002755e-05, 2.115299999999945e-05, 2.112500000000031e-05]</msg>
<status status="PASS" starttime="20201112 09:55:03.236" endtime="20201112 09:55:03.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.231" endtime="20201112 09:55:03.239"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.241" endtime="20201112 09:55:03.242"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:03.244" endtime="20201112 09:55:03.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.243" endtime="20201112 09:55:03.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.239" endtime="20201112 09:55:03.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.871" endtime="20201112 09:55:03.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.870" endtime="20201112 09:55:03.265"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.274" endtime="20201112 09:55:03.296"></status>
</kw>
<msg timestamp="20201112 09:55:03.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:03.273" endtime="20201112 09:55:03.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:03.298" endtime="20201112 09:55:03.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.300" endtime="20201112 09:55:03.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.270" endtime="20201112 09:55:03.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.268" endtime="20201112 09:55:03.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.309" endtime="20201112 09:55:03.594"></status>
</kw>
<msg timestamp="20201112 09:55:03.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023519097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023552722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:03.308" endtime="20201112 09:55:03.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023519097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023552722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:03.599" endtime="20201112 09:55:03.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.607" endtime="20201112 09:55:03.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.305" endtime="20201112 09:55:03.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.303" endtime="20201112 09:55:03.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:03.613" level="INFO">${RESULT} = [{'time': 0.023552722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.36250000000024e-05, 'source_diff': 3.36250000000024e-05}, {'time': 0.023583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2....</msg>
<status status="PASS" starttime="20201112 09:55:03.610" endtime="20201112 09:55:03.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:03.627" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:03.614" endtime="20201112 09:55:03.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.632" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 09:55:03.631" endtime="20201112 09:55:03.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.635" level="INFO">VALUE: [3.36250000000024e-05, 2.0194000000001155e-05, 2.211099999999827e-05, 2.4041999999998426e-05, 2.3083999999999605e-05, 2.690299999999826e-05, 2.1222000000001295e-05, 2.212500000000131e-05, 2.213900000000088e-05, 2.4986000000001146e-05, 2.20969999999987e-05, 2.3986000000000146e-05, 2.115299999999945e-05, 2.023699999999934e-05, 2.115299999999945e-05, 2.5000000000000716e-05, 2.5027999999999856e-05, 2.688900000000216e-05, 2.0207999999997256e-05, 2.4027999999998856e-05, 2.213900000000088e-05, 2.4041999999998426e-05, 2.4042000000001895e-05, 2.3083999999999605e-05, 2.116700000000249e-05, 2.0194000000001155e-05, 2.3958000000001006e-05, 2.212500000000131e-05, 2.02090000000002e-05, 2.5000000000000716e-05, 2.3041999999997426e-05, 2.5943999999999967e-05, 2.211099999999827e-05, 2.1193999999998686e-05, 2.593099999999987e-05, 2.306900000000056e-05, 2.4986000000001146e-05, 2.211099999999827e-05, 2.212500000000131e-05, 2.6000000000001716e-05, 2.019500000000063e-05, 2.213900000000088e-05, 2.3070000000000035e-05, 2.595900000000248e-05, 2.0222000000000295e-05, 2.688900000000216e-05, 2.2055999999999465e-05, 2.593099999999987e-05, 2.208299999999913e-05, 2.405500000000199e-05]</msg>
<status status="PASS" starttime="20201112 09:55:03.633" endtime="20201112 09:55:03.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.628" endtime="20201112 09:55:03.636"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.639" endtime="20201112 09:55:03.640"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:03.642" endtime="20201112 09:55:03.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.641" endtime="20201112 09:55:03.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.637" endtime="20201112 09:55:03.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.266" endtime="20201112 09:55:03.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.266" endtime="20201112 09:55:03.663"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.672" endtime="20201112 09:55:03.692"></status>
</kw>
<msg timestamp="20201112 09:55:03.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:03.670" endtime="20201112 09:55:03.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:03.694" endtime="20201112 09:55:03.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.696" endtime="20201112 09:55:03.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.668" endtime="20201112 09:55:03.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.665" endtime="20201112 09:55:03.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.705" endtime="20201112 09:55:03.993"></status>
</kw>
<msg timestamp="20201112 09:55:03.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022832236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022856306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:03.704" endtime="20201112 09:55:03.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022832236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022856306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:03.997" endtime="20201112 09:55:04.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.006" endtime="20201112 09:55:04.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.701" endtime="20201112 09:55:04.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.699" endtime="20201112 09:55:04.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:04.012" level="INFO">${RESULT} = [{'time': 0.022856306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4070000000001035e-05, 'source_diff': 2.4070000000001035e-05}, {'time': 0.022887, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:55:04.009" endtime="20201112 09:55:04.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:04.025" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:04.013" endtime="20201112 09:55:04.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.030" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 09:55:04.029" endtime="20201112 09:55:04.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.032" level="INFO">VALUE: [2.4070000000001035e-05, 2.0208000000000725e-05, 2.211099999999827e-05, 2.111100000000074e-05, 2.3070000000000035e-05, 2.213899999999741e-05, 2.2069999999999035e-05, 2.212499999999784e-05, 2.594499999999944e-05, 2.215300000000045e-05, 2.118100000000206e-05, 2.5014000000000286e-05, 2.018100000000106e-05, 2.113899999999988e-05, 2.3056000000000465e-05, 2.5930000000000397e-05, 2.5000000000000716e-05, 2.5971999999999107e-05, 2.5916000000000827e-05, 2.5957999999999537e-05, 2.211100000000174e-05, 2.5846999999998982e-05, 2.590299999999726e-05, 2.3056000000000465e-05, 2.5902000000001257e-05, 2.3013999999998286e-05, 2.5027999999999856e-05, 2.3958000000001006e-05, 2.595900000000248e-05, 2.5000000000000716e-05, 2.1179999999999116e-05, 2.115299999999945e-05, 2.013900000000235e-05, 2.5930000000000397e-05, 2.2152000000000976e-05, 2.30969999999997e-05, 2.4958000000002006e-05, 2.5847999999998456e-05, 2.3070000000000035e-05, 2.5027999999999856e-05, 2.3083999999999605e-05, 2.0194000000001155e-05, 2.590299999999726e-05, 2.588899999999769e-05, 2.016699999999802e-05, 2.4972000000001576e-05, 2.593099999999987e-05, 2.0222000000000295e-05, 2.4027999999998856e-05, 2.4957999999998537e-05]</msg>
<status status="PASS" starttime="20201112 09:55:04.031" endtime="20201112 09:55:04.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.026" endtime="20201112 09:55:04.034"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.036" endtime="20201112 09:55:04.037"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:04.039" endtime="20201112 09:55:04.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.038" endtime="20201112 09:55:04.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.034" endtime="20201112 09:55:04.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.664" endtime="20201112 09:55:04.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.663" endtime="20201112 09:55:04.060"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.069" endtime="20201112 09:55:04.089"></status>
</kw>
<msg timestamp="20201112 09:55:04.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:04.067" endtime="20201112 09:55:04.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:04.090" endtime="20201112 09:55:04.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.093" endtime="20201112 09:55:04.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.065" endtime="20201112 09:55:04.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.063" endtime="20201112 09:55:04.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.102" endtime="20201112 09:55:04.390"></status>
</kw>
<msg timestamp="20201112 09:55:04.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022323944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022343167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:04.100" endtime="20201112 09:55:04.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022323944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022343167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:04.395" endtime="20201112 09:55:04.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.403" endtime="20201112 09:55:04.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.098" endtime="20201112 09:55:04.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.096" endtime="20201112 09:55:04.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:04.410" level="INFO">${RESULT} = [{'time': 0.022343167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9223000000002238e-05, 'source_diff': 1.9223000000002238e-05}, {'time': 0.022373861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:04.407" endtime="20201112 09:55:04.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:04.424" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:04.411" endtime="20201112 09:55:04.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.429" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 09:55:04.428" endtime="20201112 09:55:04.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.431" level="INFO">VALUE: [1.9223000000002238e-05, 2.206899999999956e-05, 2.116699999999902e-05, 2.5013000000000812e-05, 2.6860999999999552e-05, 2.0208000000000725e-05, 2.306900000000056e-05, 2.306900000000056e-05, 2.209700000000217e-05, 2.5000000000000716e-05, 2.4971999999998107e-05, 2.205499999999999e-05, 2.3999999999999716e-05, 2.4971999999998107e-05, 2.3957999999997537e-05, 2.3958000000001006e-05, 2.4013999999999286e-05, 2.2194000000003156e-05, 2.687500000000259e-05, 2.3013999999998286e-05, 2.1138000000000406e-05, 2.306900000000056e-05, 2.3999999999999716e-05, 2.013900000000235e-05, 2.594499999999944e-05, 2.5013000000000812e-05, 2.5027999999999856e-05, 2.211100000000174e-05, 2.590300000000073e-05, 2.586100000000202e-05, 2.3111999999998745e-05, 2.309700000000317e-05, 2.111100000000074e-05, 2.112500000000031e-05, 2.111099999999727e-05, 2.206899999999956e-05, 2.5930000000000397e-05, 2.019500000000063e-05, 2.302700000000185e-05, 2.209700000000217e-05, 2.4041999999998426e-05, 2.115300000000292e-05, 2.3012999999998812e-05, 2.588900000000116e-05, 2.5957999999999537e-05, 2.116699999999902e-05, 2.59170000000003e-05, 2.3013999999998286e-05, 2.212499999999784e-05, 2.5985999999998677e-05]</msg>
<status status="PASS" starttime="20201112 09:55:04.430" endtime="20201112 09:55:04.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.425" endtime="20201112 09:55:04.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.435" endtime="20201112 09:55:04.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:04.439" endtime="20201112 09:55:04.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.437" endtime="20201112 09:55:04.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.433" endtime="20201112 09:55:04.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.061" endtime="20201112 09:55:04.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.061" endtime="20201112 09:55:04.460"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.469" endtime="20201112 09:55:04.491"></status>
</kw>
<msg timestamp="20201112 09:55:04.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:04.467" endtime="20201112 09:55:04.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:04.492" endtime="20201112 09:55:04.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.495" endtime="20201112 09:55:04.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.465" endtime="20201112 09:55:04.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.462" endtime="20201112 09:55:04.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.504" endtime="20201112 09:55:04.813"></status>
</kw>
<msg timestamp="20201112 09:55:04.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024826792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024850819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:04.503" endtime="20201112 09:55:04.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024826792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024850819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:04.817" endtime="20201112 09:55:04.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.825" endtime="20201112 09:55:04.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.500" endtime="20201112 09:55:04.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.498" endtime="20201112 09:55:04.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:04.832" level="INFO">${RESULT} = [{'time': 0.024850819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4026999999999382e-05, 'source_diff': 2.4026999999999382e-05}, {'time': 0.024882111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:04.829" endtime="20201112 09:55:04.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:04.845" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:04.833" endtime="20201112 09:55:04.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.850" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 09:55:04.849" endtime="20201112 09:55:04.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.852" level="INFO">VALUE: [2.4026999999999382e-05, 2.691699999999783e-05, 2.2112000000001214e-05, 2.311099999999927e-05, 2.1179999999999116e-05, 2.593099999999987e-05, 2.4013999999999286e-05, 2.588900000000116e-05, 2.4026999999999382e-05, 2.013899999999888e-05, 2.3943999999997967e-05, 2.0180000000001586e-05, 2.0194000000001155e-05, 2.590300000000073e-05, 2.4971999999998107e-05, 2.412499999999984e-05, 2.6014000000001286e-05, 2.4056000000001465e-05, 2.597300000000205e-05, 2.4986000000001146e-05, 2.5957999999999537e-05, 2.118099999999859e-05, 2.3999999999999716e-05, 2.4957999999998537e-05, 2.213900000000088e-05, 2.688900000000216e-05, 2.5013999999996817e-05, 2.4027999999998856e-05, 2.6958000000000537e-05, 2.3999999999999716e-05, 2.4040999999998952e-05, 2.4014000000002755e-05, 2.5027999999999856e-05, 2.690300000000173e-05, 2.013900000000235e-05, 2.111100000000074e-05, 2.0193999999997686e-05, 2.0222000000000295e-05, 2.588900000000116e-05, 2.4084000000000605e-05, 2.115300000000292e-05, 2.5971999999999107e-05, 2.0222000000000295e-05, 2.5000000000000716e-05, 2.311100000000274e-05, 2.116699999999902e-05, 2.212499999999784e-05, 2.4986000000001146e-05, 2.118100000000206e-05, 2.5000000000000716e-05]</msg>
<status status="PASS" starttime="20201112 09:55:04.851" endtime="20201112 09:55:04.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.846" endtime="20201112 09:55:04.853"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.856" endtime="20201112 09:55:04.857"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:04.859" endtime="20201112 09:55:04.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.858" endtime="20201112 09:55:04.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.854" endtime="20201112 09:55:04.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.461" endtime="20201112 09:55:04.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.460" endtime="20201112 09:55:04.880"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.889" endtime="20201112 09:55:04.907"></status>
</kw>
<msg timestamp="20201112 09:55:04.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:04.887" endtime="20201112 09:55:04.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:04.909" endtime="20201112 09:55:04.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.911" endtime="20201112 09:55:04.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.885" endtime="20201112 09:55:04.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.882" endtime="20201112 09:55:04.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.920" endtime="20201112 09:55:05.206"></status>
</kw>
<msg timestamp="20201112 09:55:05.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021509111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021527361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:04.919" endtime="20201112 09:55:05.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021509111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021527361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:05.211" endtime="20201112 09:55:05.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.219" endtime="20201112 09:55:05.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.916" endtime="20201112 09:55:05.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.914" endtime="20201112 09:55:05.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:05.226" level="INFO">${RESULT} = [{'time': 0.021527361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8249999999997435e-05, 'source_diff': 1.8249999999997435e-05}, {'time': 0.021558125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:05.222" endtime="20201112 09:55:05.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:05.239" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:05.227" endtime="20201112 09:55:05.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.243" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 09:55:05.242" endtime="20201112 09:55:05.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.246" level="INFO">VALUE: [1.8249999999997435e-05, 2.4944000000002436e-05, 2.59170000000003e-05, 2.4026999999999382e-05, 2.5971999999999107e-05, 2.113899999999988e-05, 2.405500000000199e-05, 2.0277999999998575e-05, 2.2041999999999895e-05, 2.486100000000102e-05, 2.4985999999997677e-05, 2.4985999999997677e-05, 2.213899999999741e-05, 2.213900000000088e-05, 2.4040999999998952e-05, 2.111100000000074e-05, 2.0194000000001155e-05, 2.5014000000000286e-05, 2.312499999999884e-05, 2.116699999999902e-05, 2.211100000000174e-05, 2.69170000000013e-05, 2.590300000000073e-05, 2.206899999999956e-05, 2.4028000000002325e-05, 2.4056000000001465e-05, 2.6014000000001286e-05, 2.1179999999999116e-05, 2.308300000000013e-05, 2.116699999999902e-05, 2.497300000000105e-05, 2.4958000000002006e-05, 2.209700000000217e-05, 2.3083999999999605e-05, 2.118100000000206e-05, 2.595899999999901e-05, 2.3999999999999716e-05, 2.015299999999845e-05, 2.498700000000062e-05, 2.115299999999945e-05, 2.116699999999902e-05, 2.5930000000000397e-05, 2.0222000000000295e-05, 2.691699999999783e-05, 1.9207999999999725e-05, 2.6874999999999122e-05, 2.1151999999999976e-05, 2.0249999999999435e-05, 2.113899999999988e-05, 2.112500000000031e-05]</msg>
<status status="PASS" starttime="20201112 09:55:05.244" endtime="20201112 09:55:05.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.240" endtime="20201112 09:55:05.247"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.249" endtime="20201112 09:55:05.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:05.253" endtime="20201112 09:55:05.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.251" endtime="20201112 09:55:05.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.248" endtime="20201112 09:55:05.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.881" endtime="20201112 09:55:05.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.880" endtime="20201112 09:55:05.273"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.282" endtime="20201112 09:55:05.305"></status>
</kw>
<msg timestamp="20201112 09:55:05.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:05.281" endtime="20201112 09:55:05.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:05.307" endtime="20201112 09:55:05.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.309" endtime="20201112 09:55:05.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.278" endtime="20201112 09:55:05.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.276" endtime="20201112 09:55:05.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.318" endtime="20201112 09:55:05.606"></status>
</kw>
<msg timestamp="20201112 09:55:05.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025029431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025042986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:05.317" endtime="20201112 09:55:05.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025029431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025042986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:05.610" endtime="20201112 09:55:05.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.618" endtime="20201112 09:55:05.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.314" endtime="20201112 09:55:05.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.312" endtime="20201112 09:55:05.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:05.625" level="INFO">${RESULT} = [{'time': 0.025042986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.355499999999843e-05, 'source_diff': 1.355499999999843e-05}, {'time': 0.025073667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:05.622" endtime="20201112 09:55:05.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:05.638" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:05.626" endtime="20201112 09:55:05.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.642" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 09:55:05.641" endtime="20201112 09:55:05.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.645" level="INFO">VALUE: [1.355499999999843e-05, 2.2098000000001644e-05, 2.594499999999944e-05, 2.4985999999997677e-05, 2.5000000000000716e-05, 2.016700000000149e-05, 2.594499999999944e-05, 2.4999999999997247e-05, 2.5958000000003006e-05, 2.02090000000002e-05, 2.5930000000000397e-05, 2.308300000000013e-05, 2.4028000000002325e-05, 2.2055999999999465e-05, 2.3986000000000146e-05, 2.0194000000001155e-05, 2.211100000000174e-05, 2.305500000000099e-05, 2.113899999999988e-05, 2.0207999999997256e-05, 2.690299999999826e-05, 2.5943999999999967e-05, 2.59170000000003e-05, 2.2097999999998175e-05, 2.3042000000000895e-05, 2.2070000000002504e-05, 2.30969999999997e-05, 2.0249999999999435e-05, 2.4027999999998856e-05, 2.1151999999999976e-05, 2.2112000000001214e-05, 2.308300000000013e-05, 2.3986000000000146e-05, 2.590300000000073e-05, 2.113899999999988e-05, 2.0207999999997256e-05, 2.20969999999987e-05, 2.0207999999997256e-05, 2.5901999999997788e-05, 2.4958000000002006e-05, 2.5874999999998122e-05, 2.4056000000001465e-05, 2.212500000000131e-05, 2.308300000000013e-05, 2.211099999999827e-05, 2.206899999999956e-05, 2.5943999999999967e-05, 2.0222000000000295e-05, 2.5000000000000716e-05, 2.4027999999998856e-05]</msg>
<status status="PASS" starttime="20201112 09:55:05.644" endtime="20201112 09:55:05.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.639" endtime="20201112 09:55:05.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.649" endtime="20201112 09:55:05.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:05.652" endtime="20201112 09:55:05.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.650" endtime="20201112 09:55:05.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.647" endtime="20201112 09:55:05.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.274" endtime="20201112 09:55:05.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.274" endtime="20201112 09:55:05.673"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.682" endtime="20201112 09:55:05.702"></status>
</kw>
<msg timestamp="20201112 09:55:05.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:05.680" endtime="20201112 09:55:05.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:05.703" endtime="20201112 09:55:05.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.706" endtime="20201112 09:55:05.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.678" endtime="20201112 09:55:05.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.676" endtime="20201112 09:55:05.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.715" endtime="20201112 09:55:06.003"></status>
</kw>
<msg timestamp="20201112 09:55:06.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022314028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022332236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:05.713" endtime="20201112 09:55:06.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022314028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022332236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:06.007" endtime="20201112 09:55:06.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.015" endtime="20201112 09:55:06.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.711" endtime="20201112 09:55:06.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.709" endtime="20201112 09:55:06.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:06.022" level="INFO">${RESULT} = [{'time': 0.022332236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8207999999998725e-05, 'source_diff': 1.8207999999998725e-05}, {'time': 0.022362653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:06.019" endtime="20201112 09:55:06.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:06.035" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:06.023" endtime="20201112 09:55:06.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.040" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 09:55:06.039" endtime="20201112 09:55:06.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.042" level="INFO">VALUE: [1.8207999999998725e-05, 2.5014000000000286e-05, 2.308300000000013e-05, 2.308300000000013e-05, 2.111099999999727e-05, 2.0137999999999406e-05, 2.4042000000001895e-05, 2.4056000000001465e-05, 2.208299999999913e-05, 2.6833999999999886e-05, 2.3014000000001755e-05, 2.022299999999977e-05, 2.112500000000031e-05, 2.6888999999998692e-05, 2.0166000000002016e-05, 2.3026999999998382e-05, 2.015300000000192e-05, 2.4042000000001895e-05, 2.116699999999902e-05, 2.3083999999999605e-05, 2.1151999999999976e-05, 2.687500000000259e-05, 2.3000000000002185e-05, 2.5874999999998122e-05, 2.308300000000013e-05, 2.4972000000001576e-05, 2.595899999999901e-05, 2.5944000000003437e-05, 2.593099999999987e-05, 2.6027000000001382e-05, 2.6014000000001286e-05, 2.4040999999998952e-05, 2.493099999999887e-05, 2.397300000000005e-05, 2.306900000000056e-05, 2.212499999999784e-05, 2.112499999999684e-05, 2.015299999999845e-05, 2.5971999999999107e-05, 2.4040999999998952e-05, 2.308300000000013e-05, 2.4986000000001146e-05, 2.5000000000000716e-05, 2.691699999999783e-05, 2.2027999999996856e-05, 2.490299999999973e-05, 2.1151999999999976e-05, 2.4027999999998856e-05, 2.215300000000045e-05, 2.0193999999997686e-05]</msg>
<status status="PASS" starttime="20201112 09:55:06.041" endtime="20201112 09:55:06.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.036" endtime="20201112 09:55:06.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.046" endtime="20201112 09:55:06.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:06.049" endtime="20201112 09:55:06.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.048" endtime="20201112 09:55:06.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.044" endtime="20201112 09:55:06.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.674" endtime="20201112 09:55:06.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.674" endtime="20201112 09:55:06.070"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.079" endtime="20201112 09:55:06.099"></status>
</kw>
<msg timestamp="20201112 09:55:06.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:06.077" endtime="20201112 09:55:06.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:06.101" endtime="20201112 09:55:06.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.103" endtime="20201112 09:55:06.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.075" endtime="20201112 09:55:06.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.073" endtime="20201112 09:55:06.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.112" endtime="20201112 09:55:06.399"></status>
</kw>
<msg timestamp="20201112 09:55:06.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022096806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:06.111" endtime="20201112 09:55:06.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022096806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:06.403" endtime="20201112 09:55:06.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.411" endtime="20201112 09:55:06.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.108" endtime="20201112 09:55:06.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.106" endtime="20201112 09:55:06.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:06.418" level="INFO">${RESULT} = [{'time': 0.022155222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8415999999998636e-05, 'source_diff': 5.8415999999998636e-05}, {'time': 0.022215972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:06.414" endtime="20201112 09:55:06.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:06.431" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:06.419" endtime="20201112 09:55:06.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.436" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 09:55:06.435" endtime="20201112 09:55:06.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.438" level="INFO">VALUE: [5.8415999999998636e-05, 5.6514000000000564e-05, 5.180499999999852e-05, 5.3721999999999104e-05, 5.2693999999998964e-05, 5.075000000000218e-05, 5.276400000000028e-05, 5.563899999999969e-05, 5.65549999999998e-05, 5.079199999999742e-05, 5.279200000000289e-05, 5.083300000000013e-05, 5.076399999999828e-05, 5.555600000000174e-05, 5.3707999999999534e-05, 5.556999999999784e-05, 5.652700000000066e-05, 5.6555999999999274e-05, 5.458300000000041e-05, 5.2679999999999394e-05, 5.656899999999937e-05, 5.563899999999969e-05, 5.465299999999826e-05, 5.465300000000173e-05, 5.6528000000000134e-05, 5.177800000000232e-05, 5.559700000000098e-05, 5.658300000000241e-05, 5.3652000000001254e-05, 5.461099999999955e-05, 5.6569999999998843e-05, 5.656899999999937e-05, 5.179200000000189e-05, 5.738900000000144e-05, 5.2693999999998964e-05, 5.562500000000012e-05, 5.657000000000231e-05, 5.558399999999741e-05, 5.1721999999997104e-05, 5.556999999999784e-05, 5.562500000000012e-05, 5.262499999999712e-05, 5.3651999999997785e-05, 5.563899999999969e-05, 5.563899999999969e-05, 5.563899999999969e-05, 5.5527999999999134e-05, 5.462499999999912e-05, 5.656899999999937e-05, 5.262500000000059e-05]</msg>
<status status="PASS" starttime="20201112 09:55:06.437" endtime="20201112 09:55:06.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.432" endtime="20201112 09:55:06.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.442" endtime="20201112 09:55:06.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:06.445" endtime="20201112 09:55:06.464"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.443" endtime="20201112 09:55:06.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.440" endtime="20201112 09:55:06.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.071" endtime="20201112 09:55:06.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.071" endtime="20201112 09:55:06.466"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.475" endtime="20201112 09:55:06.496"></status>
</kw>
<msg timestamp="20201112 09:55:06.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:06.473" endtime="20201112 09:55:06.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:06.497" endtime="20201112 09:55:06.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.500" endtime="20201112 09:55:06.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.470" endtime="20201112 09:55:06.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.468" endtime="20201112 09:55:06.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.509" endtime="20201112 09:55:06.796"></status>
</kw>
<msg timestamp="20201112 09:55:06.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023283972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023351028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:06.507" endtime="20201112 09:55:06.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023283972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023351028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:06.800" endtime="20201112 09:55:06.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.809" endtime="20201112 09:55:06.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.505" endtime="20201112 09:55:06.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.503" endtime="20201112 09:55:06.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:06.815" level="INFO">${RESULT} = [{'time': 0.023351028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.705599999999937e-05, 'source_diff': 6.705599999999937e-05}, {'time': 0.023411556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:06.812" endtime="20201112 09:55:06.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:06.829" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:06.816" endtime="20201112 09:55:06.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.833" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 09:55:06.832" endtime="20201112 09:55:06.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.835" level="INFO">VALUE: [6.705599999999937e-05, 5.555600000000174e-05, 5.659699999999851e-05, 5.556900000000184e-05, 5.3652000000001254e-05, 5.08469999999997e-05, 5.7528000000001134e-05, 5.5555999999998273e-05, 5.363900000000116e-05, 5.46670000000013e-05, 5.5555999999998273e-05, 5.458399999999988e-05, 5.4665999999998355e-05, 5.654100000000023e-05, 5.554200000000217e-05, 5.179099999999895e-05, 5.470900000000001e-05, 5.5541999999998704e-05, 5.077800000000132e-05, 5.177699999999938e-05, 5.75550000000008e-05, 5.083300000000013e-05, 5.2721999999998104e-05, 5.2707999999998534e-05, 4.987500000000131e-05, 5.370899999999901e-05, 5.558300000000141e-05, 5.65549999999998e-05, 5.562500000000012e-05, 5.179199999999842e-05, 5.177799999999885e-05, 5.454200000000117e-05, 5.174999999999971e-05, 5.3707999999999534e-05, 5.463899999999869e-05, 5.273600000000114e-05, 5.559800000000045e-05, 5.7542000000000704e-05, 5.4637999999999215e-05, 5.459699999999998e-05, 5.368099999999987e-05, 5.4665999999998355e-05, 5.275000000000071e-05, 5.370900000000248e-05, 5.2693999999998964e-05, 5.272300000000105e-05, 5.276400000000028e-05, 5.463899999999869e-05, 5.3665999999997355e-05, 5.5486000000000424e-05]</msg>
<status status="PASS" starttime="20201112 09:55:06.834" endtime="20201112 09:55:06.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.829" endtime="20201112 09:55:06.837"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.839" endtime="20201112 09:55:06.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:06.843" endtime="20201112 09:55:06.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.841" endtime="20201112 09:55:06.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.837" endtime="20201112 09:55:06.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.467" endtime="20201112 09:55:06.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.466" endtime="20201112 09:55:06.863"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.872" endtime="20201112 09:55:06.892"></status>
</kw>
<msg timestamp="20201112 09:55:06.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:06.870" endtime="20201112 09:55:06.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:06.894" endtime="20201112 09:55:06.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.896" endtime="20201112 09:55:06.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.868" endtime="20201112 09:55:06.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.866" endtime="20201112 09:55:06.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.905" endtime="20201112 09:55:07.192"></status>
</kw>
<msg timestamp="20201112 09:55:07.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022613444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022654667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:06.904" endtime="20201112 09:55:07.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022613444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022654667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:07.197" endtime="20201112 09:55:07.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.205" endtime="20201112 09:55:07.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.901" endtime="20201112 09:55:07.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.900" endtime="20201112 09:55:07.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:07.212" level="INFO">${RESULT} = [{'time': 0.022654667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1222999999999954e-05, 'source_diff': 4.1222999999999954e-05}, {'time': 0.022715722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:07.208" endtime="20201112 09:55:07.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:07.225" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:07.212" endtime="20201112 09:55:07.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.229" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 09:55:07.228" endtime="20201112 09:55:07.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.232" level="INFO">VALUE: [4.1222999999999954e-05, 5.463900000000216e-05, 5.46670000000013e-05, 5.182000000000103e-05, 5.456900000000084e-05, 5.651299999999762e-05, 5.368099999999987e-05, 5.184800000000017e-05, 5.658300000000241e-05, 5.079200000000089e-05, 5.7499999999998525e-05, 5.369500000000291e-05, 5.172200000000057e-05, 5.456900000000084e-05, 5.6499999999997524e-05, 5.6569999999998843e-05, 5.561100000000055e-05, 5.174999999999971e-05, 5.3721999999999104e-05, 5.0708e-05, 5.6500000000000994e-05, 5.179200000000189e-05, 5.5499999999999994e-05, 5.2735999999997674e-05, 5.3721999999999104e-05, 5.2707999999998534e-05, 5.6541999999999704e-05, 5.3721999999999104e-05, 5.084700000000317e-05, 5.6471999999998385e-05, 5.6541999999999704e-05, 5.6528000000000134e-05, 5.462499999999912e-05, 5.6485999999997955e-05, 5.561100000000055e-05, 5.08469999999997e-05, 5.180499999999852e-05, 5.459699999999998e-05, 5.2708000000002e-05, 5.458399999999988e-05, 5.654100000000023e-05, 5.1707999999997534e-05, 5.46670000000013e-05, 5.273600000000114e-05, 5.1707999999997534e-05, 5.36670000000003e-05, 5.180500000000199e-05, 5.656900000000284e-05, 5.174999999999971e-05, 5.177800000000232e-05]</msg>
<status status="PASS" starttime="20201112 09:55:07.230" endtime="20201112 09:55:07.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.226" endtime="20201112 09:55:07.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.235" endtime="20201112 09:55:07.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:07.239" endtime="20201112 09:55:07.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.237" endtime="20201112 09:55:07.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.233" endtime="20201112 09:55:07.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.864" endtime="20201112 09:55:07.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.864" endtime="20201112 09:55:07.260"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.268" endtime="20201112 09:55:07.289"></status>
</kw>
<msg timestamp="20201112 09:55:07.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:07.267" endtime="20201112 09:55:07.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:07.291" endtime="20201112 09:55:07.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.293" endtime="20201112 09:55:07.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.264" endtime="20201112 09:55:07.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.262" endtime="20201112 09:55:07.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.302" endtime="20201112 09:55:07.588"></status>
</kw>
<msg timestamp="20201112 09:55:07.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023351986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023393236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:07.301" endtime="20201112 09:55:07.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023351986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023393236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:07.592" endtime="20201112 09:55:07.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.601" endtime="20201112 09:55:07.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.298" endtime="20201112 09:55:07.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.296" endtime="20201112 09:55:07.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:07.607" level="INFO">${RESULT} = [{'time': 0.023393236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.124999999999962e-05, 'source_diff': 4.124999999999962e-05}, {'time': 0.023453736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:07.604" endtime="20201112 09:55:07.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:07.621" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:07.608" endtime="20201112 09:55:07.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.625" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 09:55:07.624" endtime="20201112 09:55:07.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.628" level="INFO">VALUE: [4.124999999999962e-05, 5.363899999999769e-05, 5.7528000000001134e-05, 5.561100000000055e-05, 5.6514000000000564e-05, 5.08339999999996e-05, 5.658299999999894e-05, 5.083300000000013e-05, 5.5665999999999355e-05, 5.358300000000288e-05, 5.656900000000284e-05, 5.084799999999917e-05, 5.083300000000013e-05, 5.377800000000085e-05, 5.373600000000214e-05, 5.080599999999699e-05, 5.6541999999999704e-05, 5.4651999999998785e-05, 5.463899999999869e-05, 5.463899999999869e-05, 5.072199999999957e-05, 5.561100000000055e-05, 5.177699999999938e-05, 5.083300000000013e-05, 5.754100000000123e-05, 5.086099999999927e-05, 5.6555999999999274e-05, 5.559700000000098e-05, 5.377800000000085e-05, 5.1651999999999254e-05, 5.465300000000173e-05, 5.272200000000157e-05, 5.176400000000275e-05, 5.468100000000087e-05, 5.272200000000157e-05, 5.561100000000055e-05, 5.081900000000056e-05, 5.558399999999741e-05, 5.359699999999898e-05, 5.562500000000012e-05, 5.084700000000317e-05, 5.086099999999927e-05, 5.656900000000284e-05, 5.077800000000132e-05, 5.2735999999997674e-05, 5.275000000000071e-05, 5.172200000000057e-05, 5.26669999999993e-05, 5.2763999999996813e-05, 5.08469999999997e-05]</msg>
<status status="PASS" starttime="20201112 09:55:07.626" endtime="20201112 09:55:07.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.621" endtime="20201112 09:55:07.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.631" endtime="20201112 09:55:07.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:07.635" endtime="20201112 09:55:07.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.633" endtime="20201112 09:55:07.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.630" endtime="20201112 09:55:07.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.261" endtime="20201112 09:55:07.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.260" endtime="20201112 09:55:07.656"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.664" endtime="20201112 09:55:07.688"></status>
</kw>
<msg timestamp="20201112 09:55:07.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:07.663" endtime="20201112 09:55:07.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:07.690" endtime="20201112 09:55:07.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.693" endtime="20201112 09:55:07.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.660" endtime="20201112 09:55:07.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.658" endtime="20201112 09:55:07.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.702" endtime="20201112 09:55:07.989"></status>
</kw>
<msg timestamp="20201112 09:55:07.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024307722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024375792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:07.701" endtime="20201112 09:55:07.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024307722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024375792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:07.993" endtime="20201112 09:55:08.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.002" endtime="20201112 09:55:08.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.698" endtime="20201112 09:55:08.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.696" endtime="20201112 09:55:08.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:08.009" level="INFO">${RESULT} = [{'time': 0.024375792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.806999999999994e-05, 'source_diff': 6.806999999999994e-05}, {'time': 0.024436819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:08.005" endtime="20201112 09:55:08.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:08.022" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:08.010" endtime="20201112 09:55:08.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.026" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 09:55:08.025" endtime="20201112 09:55:08.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.029" level="INFO">VALUE: [6.806999999999994e-05, 5.081899999999709e-05, 5.084700000000317e-05, 5.6541999999999704e-05, 5.279099999999995e-05, 5.273600000000114e-05, 5.359799999999845e-05, 5.4651999999998785e-05, 5.3665999999997355e-05, 5.465299999999826e-05, 5.272200000000157e-05, 5.363900000000116e-05, 5.18340000000006e-05, 5.65549999999998e-05, 5.65549999999998e-05, 5.2707999999998534e-05, 5.561200000000002e-05, 5.4666000000001824e-05, 5.2665999999999824e-05, 5.176399999999928e-05, 5.4665999999998355e-05, 5.272299999999758e-05, 5.181899999999809e-05, 5.3680000000000394e-05, 5.65549999999998e-05, 5.275000000000071e-05, 5.6485999999997955e-05, 5.463900000000216e-05, 5.561100000000055e-05, 5.176399999999928e-05, 5.180599999999799e-05, 5.559700000000098e-05, 5.6555999999999274e-05, 5.276400000000028e-05, 5.08469999999997e-05, 5.179199999999842e-05, 5.263900000000016e-05, 5.561100000000055e-05, 5.658400000000188e-05, 5.275000000000071e-05, 5.3665999999997355e-05, 5.08469999999997e-05, 5.561100000000055e-05, 5.081900000000056e-05, 5.659700000000198e-05, 5.3707999999999534e-05, 5.463899999999869e-05, 5.6541999999999704e-05, 5.559699999999751e-05, 5.273600000000114e-05]</msg>
<status status="PASS" starttime="20201112 09:55:08.028" endtime="20201112 09:55:08.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.023" endtime="20201112 09:55:08.030"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.032" endtime="20201112 09:55:08.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:08.036" endtime="20201112 09:55:08.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.034" endtime="20201112 09:55:08.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.031" endtime="20201112 09:55:08.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.656" endtime="20201112 09:55:08.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.656" endtime="20201112 09:55:08.057"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.066" endtime="20201112 09:55:08.089"></status>
</kw>
<msg timestamp="20201112 09:55:08.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:08.064" endtime="20201112 09:55:08.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:08.090" endtime="20201112 09:55:08.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.092" endtime="20201112 09:55:08.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.062" endtime="20201112 09:55:08.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.060" endtime="20201112 09:55:08.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.101" endtime="20201112 09:55:08.407"></status>
</kw>
<msg timestamp="20201112 09:55:08.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024642861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024685944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:08.100" endtime="20201112 09:55:08.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024642861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024685944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:08.417" endtime="20201112 09:55:08.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.430" endtime="20201112 09:55:08.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.097" endtime="20201112 09:55:08.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.096" endtime="20201112 09:55:08.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:08.436" level="INFO">${RESULT} = [{'time': 0.024685944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3083000000002786e-05, 'source_diff': 4.3083000000002786e-05}, {'time': 0.024746986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:08.433" endtime="20201112 09:55:08.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:08.449" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:08.437" endtime="20201112 09:55:08.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.454" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 09:55:08.453" endtime="20201112 09:55:08.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.456" level="INFO">VALUE: [4.3083000000002786e-05, 5.2749999999997244e-05, 4.987499999999784e-05, 5.7499999999998525e-05, 5.265299999999973e-05, 5.558299999999794e-05, 5.461099999999955e-05, 5.172300000000005e-05, 5.463900000000216e-05, 5.172200000000057e-05, 5.6443999999999245e-05, 5.18340000000006e-05, 5.2749999999997244e-05, 5.362500000000159e-05, 5.273600000000114e-05, 5.3707999999999534e-05, 5.4527999999998134e-05, 5.6528000000000134e-05, 5.080499999999752e-05, 5.459699999999998e-05, 5.5513999999999564e-05, 5.082000000000003e-05, 5.080600000000046e-05, 5.2721999999998104e-05, 5.551400000000303e-05, 5.265299999999973e-05, 5.561100000000055e-05, 5.262500000000059e-05, 5.076400000000175e-05, 5.176399999999928e-05, 5.561100000000055e-05, 5.3707999999999534e-05, 5.270900000000148e-05, 5.173699999999962e-05, 5.5541999999998704e-05, 5.083300000000013e-05, 5.6541999999999704e-05, 5.1707999999997534e-05, 5.565299999999926e-05, 5.554099999999923e-05, 5.363899999999769e-05, 5.272299999999758e-05, 5.559800000000045e-05, 5.5541999999998704e-05, 5.170899999999701e-05, 5.3693999999999964e-05, 5.074999999999871e-05, 5.361099999999855e-05, 5.561100000000055e-05, 5.3749999999998244e-05]</msg>
<status status="PASS" starttime="20201112 09:55:08.455" endtime="20201112 09:55:08.457"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.450" endtime="20201112 09:55:08.458"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.460" endtime="20201112 09:55:08.461"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:08.464" endtime="20201112 09:55:08.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.462" endtime="20201112 09:55:08.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.458" endtime="20201112 09:55:08.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.058" endtime="20201112 09:55:08.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.058" endtime="20201112 09:55:08.485"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.493" endtime="20201112 09:55:08.515"></status>
</kw>
<msg timestamp="20201112 09:55:08.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:08.492" endtime="20201112 09:55:08.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:08.517" endtime="20201112 09:55:08.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.520" endtime="20201112 09:55:08.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.489" endtime="20201112 09:55:08.522"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.487" endtime="20201112 09:55:08.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.529" endtime="20201112 09:55:08.817"></status>
</kw>
<msg timestamp="20201112 09:55:08.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024049139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024107639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:08.527" endtime="20201112 09:55:08.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024049139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024107639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:08.821" endtime="20201112 09:55:08.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.829" endtime="20201112 09:55:08.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.525" endtime="20201112 09:55:08.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.523" endtime="20201112 09:55:08.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:08.836" level="INFO">${RESULT} = [{'time': 0.024107639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8499999999999525e-05, 'source_diff': 5.8499999999999525e-05}, {'time': 0.02416825, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:55:08.832" endtime="20201112 09:55:08.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:08.849" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:08.837" endtime="20201112 09:55:08.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.853" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 09:55:08.852" endtime="20201112 09:55:08.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.856" level="INFO">VALUE: [5.8499999999999525e-05, 5.174999999999971e-05, 5.180599999999799e-05, 5.46670000000013e-05, 5.275000000000071e-05, 5.5486000000000424e-05, 5.173600000000014e-05, 5.3735999999998674e-05, 5.4651999999998785e-05, 5.082000000000003e-05, 5.661100000000155e-05, 5.279200000000289e-05, 5.081899999999709e-05, 5.465299999999826e-05, 5.465299999999826e-05, 5.179200000000189e-05, 5.562500000000012e-05, 5.08339999999996e-05, 5.2749999999997244e-05, 5.557000000000131e-05, 5.16669999999983e-05, 5.656899999999937e-05, 5.2749999999997244e-05, 5.370899999999901e-05, 5.561099999999708e-05, 5.465299999999826e-05, 5.180600000000146e-05, 5.559700000000098e-05, 5.65549999999998e-05, 5.662499999999765e-05, 5.559700000000098e-05, 5.562500000000012e-05, 5.368099999999987e-05, 5.654100000000023e-05, 5.3721999999999104e-05, 5.273700000000062e-05, 5.275000000000071e-05, 5.270899999999801e-05, 5.080500000000099e-05, 5.463899999999869e-05, 5.081900000000056e-05, 5.7541999999997234e-05, 5.4666000000001824e-05, 5.465299999999826e-05, 5.2749999999997244e-05, 5.270900000000148e-05, 5.2707999999998534e-05, 5.562500000000012e-05, 5.082000000000003e-05, 5.46670000000013e-05]</msg>
<status status="PASS" starttime="20201112 09:55:08.854" endtime="20201112 09:55:08.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.850" endtime="20201112 09:55:08.857"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.859" endtime="20201112 09:55:08.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:08.863" endtime="20201112 09:55:08.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.861" endtime="20201112 09:55:08.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.858" endtime="20201112 09:55:08.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.486" endtime="20201112 09:55:08.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.485" endtime="20201112 09:55:08.884"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.893" endtime="20201112 09:55:08.913"></status>
</kw>
<msg timestamp="20201112 09:55:08.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:08.891" endtime="20201112 09:55:08.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:08.915" endtime="20201112 09:55:08.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.918" endtime="20201112 09:55:08.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.889" endtime="20201112 09:55:08.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.887" endtime="20201112 09:55:08.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.927" endtime="20201112 09:55:09.214"></status>
</kw>
<msg timestamp="20201112 09:55:09.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021551792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021610264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:08.925" endtime="20201112 09:55:09.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021551792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021610264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:09.218" endtime="20201112 09:55:09.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.226" endtime="20201112 09:55:09.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.923" endtime="20201112 09:55:09.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.921" endtime="20201112 09:55:09.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:09.233" level="INFO">${RESULT} = [{'time': 0.021610264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8472000000000385e-05, 'source_diff': 5.8472000000000385e-05}, {'time': 0.021670903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:09.230" endtime="20201112 09:55:09.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:09.246" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:09.234" endtime="20201112 09:55:09.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.251" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 09:55:09.250" endtime="20201112 09:55:09.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.253" level="INFO">VALUE: [5.8472000000000385e-05, 5.074999999999871e-05, 5.270900000000148e-05, 5.368099999999987e-05, 5.7542000000000704e-05, 5.362499999999812e-05, 5.459699999999998e-05, 5.657000000000231e-05, 5.172200000000057e-05, 5.465299999999826e-05, 5.556899999999837e-05, 5.273600000000114e-05, 5.6569999999998843e-05, 5.5527999999999134e-05, 5.463899999999869e-05, 5.083300000000013e-05, 5.3638000000001684e-05, 5.3721999999999104e-05, 5.6555999999999274e-05, 5.08469999999997e-05, 5.074999999999871e-05, 5.2707999999998534e-05, 5.462499999999912e-05, 5.08339999999996e-05, 5.657000000000231e-05, 5.072299999999905e-05, 5.462499999999912e-05, 5.562500000000012e-05, 5.559699999999751e-05, 5.177800000000232e-05, 5.3707999999999534e-05, 5.4651999999998785e-05, 5.656900000000284e-05, 5.074999999999871e-05, 5.751299999999862e-05, 5.177800000000232e-05, 5.559700000000098e-05, 5.465300000000173e-05, 5.258300000000188e-05, 5.463899999999869e-05, 5.465300000000173e-05, 5.177799999999885e-05, 5.08339999999996e-05, 5.16669999999983e-05, 5.176399999999928e-05, 5.176299999999981e-05, 5.559700000000098e-05, 5.176299999999981e-05, 5.179200000000189e-05, 5.562500000000012e-05]</msg>
<status status="PASS" starttime="20201112 09:55:09.252" endtime="20201112 09:55:09.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.247" endtime="20201112 09:55:09.254"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.257" endtime="20201112 09:55:09.258"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:09.260" endtime="20201112 09:55:09.280"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.259" endtime="20201112 09:55:09.280"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.255" endtime="20201112 09:55:09.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.885" endtime="20201112 09:55:09.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.885" endtime="20201112 09:55:09.281"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.290" endtime="20201112 09:55:09.310"></status>
</kw>
<msg timestamp="20201112 09:55:09.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:09.288" endtime="20201112 09:55:09.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:09.311" endtime="20201112 09:55:09.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.314" endtime="20201112 09:55:09.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.286" endtime="20201112 09:55:09.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.283" endtime="20201112 09:55:09.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.323" endtime="20201112 09:55:09.610"></status>
</kw>
<msg timestamp="20201112 09:55:09.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021542611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021585778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:09.321" endtime="20201112 09:55:09.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021542611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021585778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:09.614" endtime="20201112 09:55:09.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.622" endtime="20201112 09:55:09.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.319" endtime="20201112 09:55:09.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.317" endtime="20201112 09:55:09.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:09.629" level="INFO">${RESULT} = [{'time': 0.021585778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3167000000000205e-05, 'source_diff': 4.3167000000000205e-05}, {'time': 0.021646125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:09.626" endtime="20201112 09:55:09.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:09.642" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:09.630" endtime="20201112 09:55:09.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.647" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 09:55:09.646" endtime="20201112 09:55:09.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.649" level="INFO">VALUE: [4.3167000000000205e-05, 4.986099999999827e-05, 5.563899999999969e-05, 5.262500000000059e-05, 5.176399999999928e-05, 5.080600000000046e-05, 5.168099999999787e-05, 5.269400000000243e-05, 5.654100000000023e-05, 5.6443999999999245e-05, 5.273699999999715e-05, 5.45280000000016e-05, 5.562500000000012e-05, 5.177800000000232e-05, 5.083300000000013e-05, 5.263900000000016e-05, 5.369499999999944e-05, 5.5527999999999134e-05, 5.1679999999998394e-05, 5.2665999999999824e-05, 5.362500000000159e-05, 5.2735999999997674e-05, 5.7485999999998955e-05, 5.176399999999928e-05, 5.45549999999978e-05, 5.4680000000001394e-05, 5.3680000000000394e-05, 5.454200000000117e-05, 5.174999999999971e-05, 5.561100000000055e-05, 5.359700000000245e-05, 5.18340000000006e-05, 5.465300000000173e-05, 5.361100000000202e-05, 5.2721999999998104e-05, 5.169400000000143e-05, 5.3693999999999964e-05, 5.365300000000073e-05, 5.358299999999941e-05, 5.177799999999885e-05, 5.463899999999869e-05, 5.162499999999959e-05, 5.5666000000002824e-05, 5.4665999999998355e-05, 5.265299999999973e-05, 5.6555999999999274e-05, 5.173600000000014e-05, 5.465299999999826e-05, 5.359699999999898e-05, 5.36670000000003e-05]</msg>
<status status="PASS" starttime="20201112 09:55:09.648" endtime="20201112 09:55:09.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.643" endtime="20201112 09:55:09.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.653" endtime="20201112 09:55:09.654"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:09.656" endtime="20201112 09:55:09.676"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.655" endtime="20201112 09:55:09.676"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.651" endtime="20201112 09:55:09.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.282" endtime="20201112 09:55:09.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.281" endtime="20201112 09:55:09.677"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.686" endtime="20201112 09:55:09.711"></status>
</kw>
<msg timestamp="20201112 09:55:09.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:09.684" endtime="20201112 09:55:09.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:09.712" endtime="20201112 09:55:09.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.715" endtime="20201112 09:55:09.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.682" endtime="20201112 09:55:09.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.680" endtime="20201112 09:55:09.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.725" endtime="20201112 09:55:10.013"></status>
</kw>
<msg timestamp="20201112 09:55:10.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022296069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022353583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:09.723" endtime="20201112 09:55:10.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022296069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022353583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:10.017" endtime="20201112 09:55:10.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.025" endtime="20201112 09:55:10.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.720" endtime="20201112 09:55:10.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.719" endtime="20201112 09:55:10.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:10.032" level="INFO">${RESULT} = [{'time': 0.022353583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7513999999998094e-05, 'source_diff': 5.7513999999998094e-05}, {'time': 0.022415542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:10.029" endtime="20201112 09:55:10.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:10.045" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:10.033" endtime="20201112 09:55:10.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.050" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 09:55:10.049" endtime="20201112 09:55:10.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.052" level="INFO">VALUE: [5.7513999999998094e-05, 5.5499999999999994e-05, 5.368099999999987e-05, 5.2707999999998534e-05, 5.173600000000014e-05, 5.079199999999742e-05, 5.45549999999978e-05, 5.177699999999938e-05, 5.273600000000114e-05, 5.168000000000186e-05, 5.3721999999999104e-05, 5.558299999999794e-05, 5.456900000000084e-05, 5.083300000000013e-05, 5.2693999999998964e-05, 5.176400000000275e-05, 5.456900000000084e-05, 5.461099999999955e-05, 5.36670000000003e-05, 5.552699999999966e-05, 5.3693999999999964e-05, 5.3693999999999964e-05, 5.647300000000133e-05, 5.563899999999969e-05, 5.272299999999758e-05, 5.554200000000217e-05, 5.652699999999719e-05, 5.559700000000098e-05, 5.463900000000216e-05, 5.5527999999999134e-05, 5.562499999999665e-05, 5.081900000000056e-05, 5.459699999999998e-05, 5.363899999999769e-05, 5.5527999999999134e-05, 5.270900000000148e-05, 5.358299999999941e-05, 5.179200000000189e-05, 5.077699999999838e-05, 5.372200000000257e-05, 5.177800000000232e-05, 5.173600000000014e-05, 5.265299999999973e-05, 5.2735999999997674e-05, 5.174999999999971e-05, 5.1637999999999684e-05, 5.4638000000002684e-05, 5.08469999999997e-05, 5.459699999999998e-05, 5.076399999999828e-05]</msg>
<status status="PASS" starttime="20201112 09:55:10.051" endtime="20201112 09:55:10.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.046" endtime="20201112 09:55:10.053"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.056" endtime="20201112 09:55:10.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:10.059" endtime="20201112 09:55:10.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.058" endtime="20201112 09:55:10.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.054" endtime="20201112 09:55:10.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.678" endtime="20201112 09:55:10.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.678" endtime="20201112 09:55:10.080"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.089" endtime="20201112 09:55:10.108"></status>
</kw>
<msg timestamp="20201112 09:55:10.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:10.087" endtime="20201112 09:55:10.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:10.110" endtime="20201112 09:55:10.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.112" endtime="20201112 09:55:10.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.085" endtime="20201112 09:55:10.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.083" endtime="20201112 09:55:10.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.121" endtime="20201112 09:55:10.410"></status>
</kw>
<msg timestamp="20201112 09:55:10.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021443292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021504625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:10.120" endtime="20201112 09:55:10.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021443292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021504625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:10.414" endtime="20201112 09:55:10.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.422" endtime="20201112 09:55:10.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.117" endtime="20201112 09:55:10.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.115" endtime="20201112 09:55:10.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:10.429" level="INFO">${RESULT} = [{'time': 0.021504625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.133300000000022e-05, 'source_diff': 6.133300000000022e-05}, {'time': 0.021565861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:10.425" endtime="20201112 09:55:10.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:10.442" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:10.430" endtime="20201112 09:55:10.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.446" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 09:55:10.445" endtime="20201112 09:55:10.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.449" level="INFO">VALUE: [6.133300000000022e-05, 5.073599999999914e-05, 5.080500000000099e-05, 5.273600000000114e-05, 5.359699999999898e-05, 5.556900000000184e-05, 5.080600000000046e-05, 5.272200000000157e-05, 5.465299999999826e-05, 5.4541999999997703e-05, 5.275000000000071e-05, 5.561100000000055e-05, 5.465299999999826e-05, 5.36670000000003e-05, 5.269400000000243e-05, 5.177800000000232e-05, 5.2707999999998534e-05, 5.176399999999928e-05, 5.262499999999712e-05, 5.081900000000056e-05, 5.375000000000171e-05, 5.177799999999885e-05, 5.561100000000055e-05, 5.463899999999869e-05, 5.179199999999842e-05, 5.458300000000041e-05, 5.176299999999981e-05, 5.273600000000114e-05, 5.46670000000013e-05, 5.270899999999801e-05, 5.657000000000231e-05, 5.6541999999999704e-05, 5.558300000000141e-05, 5.459699999999998e-05, 5.3666000000000824e-05, 5.7528000000001134e-05, 5.176399999999928e-05, 5.463900000000216e-05, 5.159700000000045e-05, 5.076400000000175e-05, 5.277799999999985e-05, 5.080499999999752e-05, 5.46670000000013e-05, 5.073600000000261e-05, 5.272200000000157e-05, 5.369499999999944e-05, 5.083300000000013e-05, 5.4527999999998134e-05, 5.6555999999999274e-05, 5.465300000000173e-05]</msg>
<status status="PASS" starttime="20201112 09:55:10.447" endtime="20201112 09:55:10.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.443" endtime="20201112 09:55:10.450"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.452" endtime="20201112 09:55:10.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:10.456" endtime="20201112 09:55:10.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.454" endtime="20201112 09:55:10.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.451" endtime="20201112 09:55:10.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.081" endtime="20201112 09:55:10.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.080" endtime="20201112 09:55:10.477"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.485" endtime="20201112 09:55:10.505"></status>
</kw>
<msg timestamp="20201112 09:55:10.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:10.484" endtime="20201112 09:55:10.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:10.506" endtime="20201112 09:55:10.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.509" endtime="20201112 09:55:10.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.481" endtime="20201112 09:55:10.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.479" endtime="20201112 09:55:10.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.518" endtime="20201112 09:55:10.805"></status>
</kw>
<msg timestamp="20201112 09:55:10.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021711736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021753958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:10.516" endtime="20201112 09:55:10.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021711736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021753958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:10.809" endtime="20201112 09:55:10.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.817" endtime="20201112 09:55:10.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.513" endtime="20201112 09:55:10.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.512" endtime="20201112 09:55:10.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:10.824" level="INFO">${RESULT} = [{'time': 0.021753958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.222200000000148e-05, 'source_diff': 4.222200000000148e-05}, {'time': 0.021815014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:10.820" endtime="20201112 09:55:10.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:10.837" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:10.825" endtime="20201112 09:55:10.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.841" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 09:55:10.840" endtime="20201112 09:55:10.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.844" level="INFO">VALUE: [4.222200000000148e-05, 5.368099999999987e-05, 5.7527999999997664e-05, 5.180599999999799e-05, 5.176299999999981e-05, 5.176400000000275e-05, 5.081900000000056e-05, 5.177700000000285e-05, 5.083300000000013e-05, 5.6443999999999245e-05, 5.079199999999742e-05, 5.562500000000012e-05, 5.369499999999944e-05, 5.179200000000189e-05, 5.559699999999751e-05, 5.179099999999895e-05, 5.2679999999999394e-05, 5.177800000000232e-05, 5.08469999999997e-05, 5.0887999999998934e-05, 5.174999999999971e-05, 5.181900000000156e-05, 5.562500000000012e-05, 5.072199999999957e-05, 5.562500000000012e-05, 5.565299999999926e-05, 5.659700000000198e-05, 5.558400000000088e-05, 5.559800000000045e-05, 5.079199999999742e-05, 5.6541999999999704e-05, 5.4651999999998785e-05, 5.369499999999944e-05, 5.6514000000000564e-05, 5.562500000000012e-05, 5.272200000000157e-05, 5.177799999999885e-05, 5.361200000000149e-05, 5.6555999999999274e-05, 5.6541999999999704e-05, 5.462499999999912e-05, 5.6541999999999704e-05, 5.4680000000001394e-05, 5.370899999999901e-05, 5.654100000000023e-05, 5.7499999999998525e-05, 5.561100000000055e-05, 5.082000000000003e-05, 5.080600000000046e-05, 5.280499999999952e-05]</msg>
<status status="PASS" starttime="20201112 09:55:10.842" endtime="20201112 09:55:10.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.838" endtime="20201112 09:55:10.845"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.847" endtime="20201112 09:55:10.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:10.851" endtime="20201112 09:55:10.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.849" endtime="20201112 09:55:10.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.846" endtime="20201112 09:55:10.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.478" endtime="20201112 09:55:10.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.477" endtime="20201112 09:55:10.872"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.880" endtime="20201112 09:55:10.903"></status>
</kw>
<msg timestamp="20201112 09:55:10.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:10.879" endtime="20201112 09:55:10.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:10.905" endtime="20201112 09:55:10.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.907" endtime="20201112 09:55:10.909"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.876" endtime="20201112 09:55:10.909"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.874" endtime="20201112 09:55:10.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.916" endtime="20201112 09:55:11.203"></status>
</kw>
<msg timestamp="20201112 09:55:11.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023607083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023652139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:10.914" endtime="20201112 09:55:11.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023607083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023652139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:11.207" endtime="20201112 09:55:11.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.215" endtime="20201112 09:55:11.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.912" endtime="20201112 09:55:11.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.910" endtime="20201112 09:55:11.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:11.222" level="INFO">${RESULT} = [{'time': 0.023652139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.505599999999818e-05, 'source_diff': 4.505599999999818e-05}, {'time': 0.023713042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:11.218" endtime="20201112 09:55:11.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:11.235" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:11.223" endtime="20201112 09:55:11.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.239" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 09:55:11.238" endtime="20201112 09:55:11.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.242" level="INFO">VALUE: [4.505599999999818e-05, 5.362500000000159e-05, 5.741700000000058e-05, 5.558300000000141e-05, 5.754100000000123e-05, 5.5513999999999564e-05, 5.461199999999902e-05, 5.277699999999691e-05, 5.3707999999999534e-05, 5.5555999999998273e-05, 5.361100000000202e-05, 5.458300000000041e-05, 5.084799999999917e-05, 5.176399999999928e-05, 5.276400000000028e-05, 5.5513999999999564e-05, 5.462500000000259e-05, 5.263900000000016e-05, 5.559800000000045e-05, 5.459699999999998e-05, 5.086100000000274e-05, 5.454200000000117e-05, 4.987500000000131e-05, 5.64870000000009e-05, 5.263900000000016e-05, 5.558400000000088e-05, 5.65549999999998e-05, 5.363899999999769e-05, 5.077700000000185e-05, 5.368099999999987e-05, 5.268099999999887e-05, 5.272200000000157e-05, 5.276400000000028e-05, 5.177699999999938e-05, 5.458300000000041e-05, 5.655600000000274e-05, 5.562500000000012e-05, 5.262500000000059e-05, 5.369499999999944e-05, 5.177799999999885e-05, 5.5651999999999785e-05, 5.7471999999999385e-05, 5.179100000000242e-05, 5.18470000000007e-05, 5.6499999999997524e-05, 5.08469999999997e-05, 5.359699999999898e-05, 5.558300000000141e-05, 5.2749999999997244e-05, 5.262500000000059e-05]</msg>
<status status="PASS" starttime="20201112 09:55:11.240" endtime="20201112 09:55:11.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.236" endtime="20201112 09:55:11.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.245" endtime="20201112 09:55:11.247"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:11.249" endtime="20201112 09:55:11.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.247" endtime="20201112 09:55:11.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.244" endtime="20201112 09:55:11.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.872" endtime="20201112 09:55:11.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.872" endtime="20201112 09:55:11.270"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.278" endtime="20201112 09:55:11.299"></status>
</kw>
<msg timestamp="20201112 09:55:11.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:11.277" endtime="20201112 09:55:11.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:11.301" endtime="20201112 09:55:11.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.303" endtime="20201112 09:55:11.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.274" endtime="20201112 09:55:11.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.272" endtime="20201112 09:55:11.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.312" endtime="20201112 09:55:11.599"></status>
</kw>
<msg timestamp="20201112 09:55:11.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022378819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022437306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:11.311" endtime="20201112 09:55:11.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022378819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022437306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:11.603" endtime="20201112 09:55:11.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.611" endtime="20201112 09:55:11.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.308" endtime="20201112 09:55:11.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.306" endtime="20201112 09:55:11.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:11.618" level="INFO">${RESULT} = [{'time': 0.022437306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.848699999999943e-05, 'source_diff': 5.848699999999943e-05}, {'time': 0.02249875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:55:11.615" endtime="20201112 09:55:11.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:11.631" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:11.619" endtime="20201112 09:55:11.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.636" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 09:55:11.635" endtime="20201112 09:55:11.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.638" level="INFO">VALUE: [5.848699999999943e-05, 5.655600000000274e-05, 5.658300000000241e-05, 5.26669999999993e-05, 5.6528000000000134e-05, 5.655600000000274e-05, 5.3707999999999534e-05, 5.559700000000098e-05, 5.083300000000013e-05, 5.562500000000012e-05, 5.359699999999898e-05, 5.7485999999998955e-05, 5.3707999999999534e-05, 5.463899999999869e-05, 5.087499999999884e-05, 5.275000000000071e-05, 5.179200000000189e-05, 5.65549999999998e-05, 4.98469999999987e-05, 5.462499999999912e-05, 5.079200000000089e-05, 5.5527999999999134e-05, 5.269500000000191e-05, 5.658399999999841e-05, 5.174999999999971e-05, 5.469500000000044e-05, 5.46670000000013e-05, 5.6485999999997955e-05, 5.176399999999928e-05, 5.658300000000241e-05, 5.559800000000045e-05, 5.179100000000242e-05, 5.461099999999955e-05, 5.6500000000000994e-05, 5.559700000000098e-05, 5.3666000000000824e-05, 5.3693999999999964e-05, 5.6541999999999704e-05, 5.558300000000141e-05, 5.7444000000000245e-05, 5.08339999999996e-05, 5.176399999999928e-05, 5.463900000000216e-05, 5.6514000000000564e-05, 5.5541999999998704e-05, 5.3708000000003e-05, 5.559800000000045e-05, 5.658399999999841e-05, 5.368099999999987e-05, 5.65549999999998e-05]</msg>
<status status="PASS" starttime="20201112 09:55:11.637" endtime="20201112 09:55:11.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.632" endtime="20201112 09:55:11.639"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.642" endtime="20201112 09:55:11.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:11.645" endtime="20201112 09:55:11.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.644" endtime="20201112 09:55:11.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.640" endtime="20201112 09:55:11.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.271" endtime="20201112 09:55:11.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.270" endtime="20201112 09:55:11.666"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.675" endtime="20201112 09:55:11.696"></status>
</kw>
<msg timestamp="20201112 09:55:11.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:11.673" endtime="20201112 09:55:11.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:11.697" endtime="20201112 09:55:11.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.700" endtime="20201112 09:55:11.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.671" endtime="20201112 09:55:11.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.669" endtime="20201112 09:55:11.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.709" endtime="20201112 09:55:11.996"></status>
</kw>
<msg timestamp="20201112 09:55:11.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022851458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022900403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:11.707" endtime="20201112 09:55:11.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022851458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022900403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:12.000" endtime="20201112 09:55:12.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.008" endtime="20201112 09:55:12.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.705" endtime="20201112 09:55:12.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.703" endtime="20201112 09:55:12.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:12.015" level="INFO">${RESULT} = [{'time': 0.022900403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.894499999999816e-05, 'source_diff': 4.894499999999816e-05}, {'time': 0.022961639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:12.012" endtime="20201112 09:55:12.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:12.028" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:12.016" endtime="20201112 09:55:12.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.033" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 09:55:12.032" endtime="20201112 09:55:12.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.035" level="INFO">VALUE: [4.894499999999816e-05, 5.5555999999998273e-05, 5.170900000000048e-05, 5.461099999999955e-05, 5.652700000000066e-05, 5.177699999999938e-05, 5.3680000000000394e-05, 5.459699999999998e-05, 5.272299999999758e-05, 5.086199999999874e-05, 5.088899999999841e-05, 5.169400000000143e-05, 5.261100000000102e-05, 5.465299999999826e-05, 5.3707999999999534e-05, 5.076399999999828e-05, 5.36670000000003e-05, 5.3721999999999104e-05, 5.363900000000116e-05, 5.173699999999962e-05, 5.466699999999783e-05, 4.976400000000075e-05, 5.465300000000173e-05, 5.177799999999885e-05, 5.369500000000291e-05, 5.268099999999887e-05, 5.269500000000191e-05, 5.3693999999999964e-05, 5.6555999999999274e-05, 5.263900000000016e-05, 5.463899999999869e-05, 5.654100000000023e-05, 5.6513999999997094e-05, 5.179100000000242e-05, 5.362500000000159e-05, 5.6569999999998843e-05, 5.273600000000114e-05, 5.086099999999927e-05, 5.262500000000059e-05, 5.6514000000000564e-05, 5.561099999999708e-05, 5.073600000000261e-05, 5.654100000000023e-05, 5.276300000000081e-05, 5.5513999999999564e-05, 5.268099999999887e-05, 5.7528000000001134e-05, 5.463900000000216e-05, 5.170900000000048e-05, 5.270900000000148e-05]</msg>
<status status="PASS" starttime="20201112 09:55:12.034" endtime="20201112 09:55:12.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.029" endtime="20201112 09:55:12.036"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.039" endtime="20201112 09:55:12.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:12.042" endtime="20201112 09:55:12.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.040" endtime="20201112 09:55:12.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.037" endtime="20201112 09:55:12.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.667" endtime="20201112 09:55:12.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.667" endtime="20201112 09:55:12.063"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.071" endtime="20201112 09:55:12.094"></status>
</kw>
<msg timestamp="20201112 09:55:12.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:12.070" endtime="20201112 09:55:12.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:12.095" endtime="20201112 09:55:12.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.098" endtime="20201112 09:55:12.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.067" endtime="20201112 09:55:12.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.065" endtime="20201112 09:55:12.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.107" endtime="20201112 09:55:12.394"></status>
</kw>
<msg timestamp="20201112 09:55:12.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023145722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023211903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:12.105" endtime="20201112 09:55:12.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023145722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023211903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:12.398" endtime="20201112 09:55:12.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.407" endtime="20201112 09:55:12.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.103" endtime="20201112 09:55:12.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.101" endtime="20201112 09:55:12.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:12.413" level="INFO">${RESULT} = [{'time': 0.023211903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.618099999999849e-05, 'source_diff': 6.618099999999849e-05}, {'time': 0.023273014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:12.410" endtime="20201112 09:55:12.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:12.426" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:12.414" endtime="20201112 09:55:12.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.431" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 09:55:12.430" endtime="20201112 09:55:12.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.433" level="INFO">VALUE: [6.618099999999849e-05, 5.36670000000003e-05, 5.556899999999837e-05, 5.46809999999974e-05, 5.176400000000275e-05, 5.6514000000000564e-05, 5.5541999999998704e-05, 5.656900000000284e-05, 5.461099999999955e-05, 5.6528000000000134e-05, 5.5541999999998704e-05, 5.177699999999938e-05, 5.375000000000171e-05, 5.079200000000089e-05, 5.363899999999769e-05, 5.3693999999999964e-05, 5.079099999999795e-05, 5.6499999999997524e-05, 5.083300000000013e-05, 5.5527999999999134e-05, 5.362499999999812e-05, 5.2735999999997674e-05, 5.082000000000003e-05, 5.372299999999858e-05, 5.3637999999998215e-05, 5.6471999999998385e-05, 5.3666000000000824e-05, 5.5513999999999564e-05, 5.361099999999855e-05, 5.659699999999851e-05, 5.652700000000066e-05, 5.266700000000277e-05, 5.276400000000028e-05, 5.5513999999999564e-05, 5.457000000000031e-05, 5.179200000000189e-05, 5.172200000000057e-05, 5.358299999999941e-05, 5.272200000000157e-05, 5.455500000000127e-05, 5.076400000000175e-05, 5.65549999999998e-05, 5.268099999999887e-05, 5.465300000000173e-05, 5.461099999999955e-05, 5.554200000000217e-05, 5.459699999999998e-05, 5.26669999999993e-05, 5.179099999999895e-05, 5.556999999999784e-05]</msg>
<status status="PASS" starttime="20201112 09:55:12.432" endtime="20201112 09:55:12.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.427" endtime="20201112 09:55:12.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.437" endtime="20201112 09:55:12.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:12.440" endtime="20201112 09:55:12.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.439" endtime="20201112 09:55:12.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.435" endtime="20201112 09:55:12.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.064" endtime="20201112 09:55:12.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.063" endtime="20201112 09:55:12.461"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.470" endtime="20201112 09:55:12.489"></status>
</kw>
<msg timestamp="20201112 09:55:12.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:12.468" endtime="20201112 09:55:12.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:12.491" endtime="20201112 09:55:12.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.493" endtime="20201112 09:55:12.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.466" endtime="20201112 09:55:12.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.464" endtime="20201112 09:55:12.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.502" endtime="20201112 09:55:12.789"></status>
</kw>
<msg timestamp="20201112 09:55:12.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021440681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021508653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:12.500" endtime="20201112 09:55:12.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021440681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021508653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:12.793" endtime="20201112 09:55:12.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.801" endtime="20201112 09:55:12.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.498" endtime="20201112 09:55:12.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.496" endtime="20201112 09:55:12.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:12.808" level="INFO">${RESULT} = [{'time': 0.021508653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.797199999999948e-05, 'source_diff': 6.797199999999948e-05}, {'time': 0.021569556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:12.805" endtime="20201112 09:55:12.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:12.821" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:12.809" endtime="20201112 09:55:12.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.826" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 09:55:12.825" endtime="20201112 09:55:12.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.828" level="INFO">VALUE: [6.797199999999948e-05, 5.559800000000045e-05, 5.174999999999971e-05, 5.4651999999998785e-05, 5.08469999999997e-05, 5.275000000000071e-05, 5.362500000000159e-05, 5.179199999999842e-05, 5.176399999999928e-05, 5.465299999999826e-05, 5.275000000000071e-05, 5.173600000000014e-05, 5.369499999999944e-05, 5.2735999999997674e-05, 5.6485999999997955e-05, 5.747300000000233e-05, 5.2679999999999394e-05, 5.463899999999869e-05, 5.177799999999885e-05, 5.269499999999844e-05, 5.4666000000001824e-05, 5.3666000000000824e-05, 5.468100000000087e-05, 5.275000000000071e-05, 5.458300000000041e-05, 5.556900000000184e-05, 5.179199999999842e-05, 5.369500000000291e-05, 5.172300000000005e-05, 5.177799999999885e-05, 5.654200000000317e-05, 5.172200000000057e-05, 5.555500000000227e-05, 5.082000000000003e-05, 5.6555999999999274e-05, 5.465299999999826e-05, 5.6485999999997955e-05, 5.086200000000221e-05, 5.370899999999901e-05, 5.658399999999841e-05, 5.558400000000088e-05, 5.658399999999841e-05, 5.363900000000116e-05, 5.362500000000159e-05, 5.5527999999999134e-05, 5.36670000000003e-05, 5.179099999999895e-05, 5.5527999999999134e-05, 5.365300000000073e-05, 5.662499999999765e-05]</msg>
<status status="PASS" starttime="20201112 09:55:12.827" endtime="20201112 09:55:12.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.822" endtime="20201112 09:55:12.829"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.832" endtime="20201112 09:55:12.833"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:12.835" endtime="20201112 09:55:12.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.834" endtime="20201112 09:55:12.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.830" endtime="20201112 09:55:12.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.462" endtime="20201112 09:55:12.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.462" endtime="20201112 09:55:12.856"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.865" endtime="20201112 09:55:12.887"></status>
</kw>
<msg timestamp="20201112 09:55:12.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:12.863" endtime="20201112 09:55:12.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:12.888" endtime="20201112 09:55:12.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.891" endtime="20201112 09:55:12.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.861" endtime="20201112 09:55:12.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.859" endtime="20201112 09:55:12.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.900" endtime="20201112 09:55:13.188"></status>
</kw>
<msg timestamp="20201112 09:55:13.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0235095, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023559319, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:55:12.898" endtime="20201112 09:55:13.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0235095, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023559319, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:55:13.192" endtime="20201112 09:55:13.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.200" endtime="20201112 09:55:13.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.896" endtime="20201112 09:55:13.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.894" endtime="20201112 09:55:13.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:13.207" level="INFO">${RESULT} = [{'time': 0.023559319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.981899999999956e-05, 'source_diff': 4.981899999999956e-05}, {'time': 0.023620403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:13.203" endtime="20201112 09:55:13.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:13.220" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:13.208" endtime="20201112 09:55:13.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.224" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 09:55:13.223" endtime="20201112 09:55:13.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.227" level="INFO">VALUE: [4.981899999999956e-05, 5.076400000000175e-05, 5.6541999999999704e-05, 5.469499999999697e-05, 5.362499999999812e-05, 5.268099999999887e-05, 5.462499999999912e-05, 5.068100000000034e-05, 5.077800000000132e-05, 5.181900000000156e-05, 5.3680000000000394e-05, 5.459699999999998e-05, 5.3680000000000394e-05, 5.462500000000259e-05, 5.269500000000191e-05, 5.174999999999971e-05, 5.1708000000001e-05, 5.368099999999987e-05, 5.362500000000159e-05, 5.462499999999912e-05, 5.457000000000031e-05, 5.554200000000217e-05, 5.462499999999912e-05, 5.077799999999785e-05, 5.65549999999998e-05, 5.654100000000023e-05, 5.079199999999742e-05, 5.081899999999709e-05, 5.269400000000243e-05, 5.462499999999912e-05, 5.269500000000191e-05, 5.2749999999997244e-05, 5.458399999999988e-05, 5.658299999999894e-05, 5.36670000000003e-05, 5.369499999999944e-05, 5.363900000000116e-05, 5.558399999999741e-05, 5.08339999999996e-05, 5.369499999999944e-05, 5.456900000000084e-05, 5.363900000000116e-05, 5.462500000000259e-05, 5.558400000000088e-05, 5.561200000000002e-05, 5.272200000000157e-05, 5.554200000000217e-05, 5.177800000000232e-05, 5.459699999999998e-05, 5.558300000000141e-05]</msg>
<status status="PASS" starttime="20201112 09:55:13.226" endtime="20201112 09:55:13.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.221" endtime="20201112 09:55:13.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.234" endtime="20201112 09:55:13.236"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:13.238" endtime="20201112 09:55:13.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.236" endtime="20201112 09:55:13.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.233" endtime="20201112 09:55:13.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.857" endtime="20201112 09:55:13.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.857" endtime="20201112 09:55:13.259"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.267" endtime="20201112 09:55:13.289"></status>
</kw>
<msg timestamp="20201112 09:55:13.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:13.266" endtime="20201112 09:55:13.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:13.290" endtime="20201112 09:55:13.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.292" endtime="20201112 09:55:13.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.263" endtime="20201112 09:55:13.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.261" endtime="20201112 09:55:13.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.301" endtime="20201112 09:55:13.588"></status>
</kw>
<msg timestamp="20201112 09:55:13.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022817861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022861931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:13.300" endtime="20201112 09:55:13.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022817861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022861931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:13.593" endtime="20201112 09:55:13.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.601" endtime="20201112 09:55:13.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.297" endtime="20201112 09:55:13.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.296" endtime="20201112 09:55:13.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:13.608" level="INFO">${RESULT} = [{'time': 0.022861931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.407000000000022e-05, 'source_diff': 4.407000000000022e-05}, {'time': 0.022923069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:13.604" endtime="20201112 09:55:13.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:13.621" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:13.609" endtime="20201112 09:55:13.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.625" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 09:55:13.624" endtime="20201112 09:55:13.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.628" level="INFO">VALUE: [4.407000000000022e-05, 5.077700000000185e-05, 5.5513999999999564e-05, 5.179100000000242e-05, 5.6500000000000994e-05, 5.6514000000000564e-05, 5.559700000000098e-05, 5.465299999999826e-05, 5.5541999999998704e-05, 5.372299999999858e-05, 5.2735999999997674e-05, 5.5665999999999355e-05, 5.465299999999826e-05, 5.462499999999912e-05, 5.2679999999999394e-05, 5.4680000000001394e-05, 5.562500000000012e-05, 5.463899999999869e-05, 5.172300000000005e-05, 5.179199999999842e-05, 5.170900000000048e-05, 5.559699999999751e-05, 5.659799999999798e-05, 5.657000000000231e-05, 5.3693999999999964e-05, 5.174999999999971e-05, 5.6500000000000994e-05, 5.180499999999852e-05, 5.459699999999998e-05, 5.2693999999998964e-05, 5.080500000000099e-05, 5.2707999999998534e-05, 5.173600000000014e-05, 5.363899999999769e-05, 5.554200000000217e-05, 5.180500000000199e-05, 5.563899999999969e-05, 5.6528000000000134e-05, 5.369499999999944e-05, 5.081900000000056e-05, 5.275000000000071e-05, 5.557000000000131e-05, 5.556900000000184e-05, 5.180599999999799e-05, 5.173600000000014e-05, 5.174999999999971e-05, 5.656899999999937e-05, 5.6500000000000994e-05, 5.265299999999973e-05, 5.277799999999985e-05]</msg>
<status status="PASS" starttime="20201112 09:55:13.626" endtime="20201112 09:55:13.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.622" endtime="20201112 09:55:13.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.631" endtime="20201112 09:55:13.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:13.635" endtime="20201112 09:55:13.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.633" endtime="20201112 09:55:13.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.630" endtime="20201112 09:55:13.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.260" endtime="20201112 09:55:13.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.259" endtime="20201112 09:55:13.656"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.664" endtime="20201112 09:55:13.685"></status>
</kw>
<msg timestamp="20201112 09:55:13.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:13.663" endtime="20201112 09:55:13.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:13.687" endtime="20201112 09:55:13.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.689" endtime="20201112 09:55:13.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.660" endtime="20201112 09:55:13.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.658" endtime="20201112 09:55:13.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.698" endtime="20201112 09:55:13.984"></status>
</kw>
<msg timestamp="20201112 09:55:13.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02282975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022897764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:13.697" endtime="20201112 09:55:13.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02282975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022897764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:13.989" endtime="20201112 09:55:13.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.997" endtime="20201112 09:55:13.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.694" endtime="20201112 09:55:13.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.692" endtime="20201112 09:55:14.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:14.004" level="INFO">${RESULT} = [{'time': 0.022897764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.801400000000166e-05, 'source_diff': 6.801400000000166e-05}, {'time': 0.022959069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:14.000" endtime="20201112 09:55:14.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:14.017" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:14.005" endtime="20201112 09:55:14.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.021" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 09:55:14.020" endtime="20201112 09:55:14.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.024" level="INFO">VALUE: [6.801400000000166e-05, 5.4637999999999215e-05, 5.4708000000000534e-05, 5.4679999999997925e-05, 5.0708e-05, 5.176399999999928e-05, 5.176399999999928e-05, 5.456999999999684e-05, 5.3707999999999534e-05, 5.463899999999869e-05, 5.170900000000048e-05, 5.179199999999842e-05, 5.081900000000056e-05, 5.659699999999851e-05, 5.5527999999999134e-05, 5.08339999999996e-05, 5.565299999999926e-05, 5.455500000000127e-05, 5.181900000000156e-05, 5.4527999999998134e-05, 5.6555999999999274e-05, 5.558300000000141e-05, 5.276400000000028e-05, 5.362500000000159e-05, 5.465300000000173e-05, 5.276400000000028e-05, 5.456900000000084e-05, 5.561100000000055e-05, 5.658299999999894e-05, 5.6472000000001854e-05, 5.7528000000001134e-05, 5.465299999999826e-05, 5.6471999999998385e-05, 5.3665999999997355e-05, 5.083400000000307e-05, 5.461099999999955e-05, 5.563899999999969e-05, 5.1679999999998394e-05, 5.369499999999944e-05, 5.180599999999799e-05, 5.073599999999914e-05, 5.465299999999826e-05, 5.263900000000016e-05, 5.558300000000141e-05, 5.358299999999941e-05, 5.652699999999719e-05, 5.562500000000012e-05, 5.168100000000134e-05, 5.275000000000071e-05, 5.358299999999941e-05]</msg>
<status status="PASS" starttime="20201112 09:55:14.023" endtime="20201112 09:55:14.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.018" endtime="20201112 09:55:14.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.028" endtime="20201112 09:55:14.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:14.031" endtime="20201112 09:55:14.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.029" endtime="20201112 09:55:14.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.026" endtime="20201112 09:55:14.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.657" endtime="20201112 09:55:14.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.656" endtime="20201112 09:55:14.052"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.061" endtime="20201112 09:55:14.086"></status>
</kw>
<msg timestamp="20201112 09:55:14.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:14.059" endtime="20201112 09:55:14.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:14.088" endtime="20201112 09:55:14.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.090" endtime="20201112 09:55:14.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.056" endtime="20201112 09:55:14.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.054" endtime="20201112 09:55:14.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.099" endtime="20201112 09:55:14.387"></status>
</kw>
<msg timestamp="20201112 09:55:14.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023584972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023636722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:14.098" endtime="20201112 09:55:14.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023584972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023636722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:14.391" endtime="20201112 09:55:14.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.399" endtime="20201112 09:55:14.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.095" endtime="20201112 09:55:14.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.094" endtime="20201112 09:55:14.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:14.406" level="INFO">${RESULT} = [{'time': 0.023636722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.174999999999971e-05, 'source_diff': 5.174999999999971e-05}, {'time': 0.023697486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:14.403" endtime="20201112 09:55:14.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:14.419" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:14.407" endtime="20201112 09:55:14.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.424" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 09:55:14.423" endtime="20201112 09:55:14.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.426" level="INFO">VALUE: [5.174999999999971e-05, 5.275000000000071e-05, 5.375000000000171e-05, 5.4722000000000104e-05, 5.180499999999852e-05, 5.176399999999928e-05, 5.080500000000099e-05, 5.463900000000216e-05, 5.468100000000087e-05, 5.3707999999999534e-05, 5.080600000000046e-05, 5.654100000000023e-05, 5.08339999999996e-05, 5.275000000000071e-05, 5.4680000000001394e-05, 5.3693999999999964e-05, 5.275000000000071e-05, 5.372299999999858e-05, 5.365300000000073e-05, 5.083299999999666e-05, 5.562500000000012e-05, 5.562500000000012e-05, 5.6541999999999704e-05, 5.180499999999852e-05, 5.176399999999928e-05, 5.565299999999926e-05, 5.562500000000012e-05, 5.177799999999885e-05, 5.65549999999998e-05, 5.272200000000157e-05, 5.080600000000046e-05, 5.183299999999766e-05, 5.180600000000146e-05, 5.561100000000055e-05, 5.562500000000012e-05, 5.3749999999998244e-05, 5.080599999999699e-05, 5.2735999999997674e-05, 5.465299999999826e-05, 5.083300000000013e-05, 5.4652000000002254e-05, 5.181900000000156e-05, 5.176400000000275e-05, 5.369500000000291e-05, 5.276400000000028e-05, 5.08339999999996e-05, 5.084799999999917e-05, 5.276400000000028e-05, 5.563899999999969e-05, 5.556899999999837e-05]</msg>
<status status="PASS" starttime="20201112 09:55:14.425" endtime="20201112 09:55:14.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.420" endtime="20201112 09:55:14.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.430" endtime="20201112 09:55:14.431"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:14.433" endtime="20201112 09:55:14.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.431" endtime="20201112 09:55:14.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.428" endtime="20201112 09:55:14.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.053" endtime="20201112 09:55:14.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.052" endtime="20201112 09:55:14.454"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.463" endtime="20201112 09:55:14.484"></status>
</kw>
<msg timestamp="20201112 09:55:14.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:14.462" endtime="20201112 09:55:14.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:14.485" endtime="20201112 09:55:14.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.488" endtime="20201112 09:55:14.489"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.459" endtime="20201112 09:55:14.490"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.457" endtime="20201112 09:55:14.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.497" endtime="20201112 09:55:14.783"></status>
</kw>
<msg timestamp="20201112 09:55:14.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023465486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023519181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:14.495" endtime="20201112 09:55:14.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023465486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023519181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:14.787" endtime="20201112 09:55:14.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.796" endtime="20201112 09:55:14.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.492" endtime="20201112 09:55:14.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.491" endtime="20201112 09:55:14.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:14.803" level="INFO">${RESULT} = [{'time': 0.023519181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.369499999999944e-05, 'source_diff': 5.369499999999944e-05}, {'time': 0.023580208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:14.800" endtime="20201112 09:55:14.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:14.817" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:14.804" endtime="20201112 09:55:14.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.821" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 09:55:14.820" endtime="20201112 09:55:14.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.823" level="INFO">VALUE: [5.369499999999944e-05, 5.5513999999999564e-05, 5.461099999999955e-05, 5.561100000000055e-05, 5.169500000000091e-05, 5.558400000000088e-05, 5.4666000000001824e-05, 5.073600000000261e-05, 5.179199999999842e-05, 5.561099999999708e-05, 5.361099999999855e-05, 5.4651999999998785e-05, 5.365300000000073e-05, 5.070899999999948e-05, 5.6555999999999274e-05, 5.170900000000048e-05, 5.4651999999998785e-05, 5.569499999999797e-05, 5.456899999999737e-05, 5.176399999999928e-05, 5.275000000000071e-05, 5.35549999999968e-05, 5.4651999999998785e-05, 5.263900000000016e-05, 5.082000000000003e-05, 5.457000000000031e-05, 5.562500000000012e-05, 5.180499999999852e-05, 5.2707999999998534e-05, 5.1735999999996674e-05, 5.6569999999998843e-05, 5.651300000000109e-05, 5.556900000000184e-05, 5.174999999999971e-05, 5.65549999999998e-05, 5.459699999999998e-05, 5.172200000000057e-05, 5.459799999999945e-05, 5.273600000000114e-05, 4.990300000000045e-05, 5.455500000000127e-05, 5.3680000000000394e-05, 5.08469999999997e-05, 5.359799999999845e-05, 5.275000000000071e-05, 5.6569999999998843e-05, 5.086099999999927e-05, 5.7471999999999385e-05, 5.561100000000055e-05, 5.7528000000001134e-05]</msg>
<status status="PASS" starttime="20201112 09:55:14.822" endtime="20201112 09:55:14.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.817" endtime="20201112 09:55:14.825"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.827" endtime="20201112 09:55:14.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:14.830" endtime="20201112 09:55:14.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.829" endtime="20201112 09:55:14.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.825" endtime="20201112 09:55:14.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.455" endtime="20201112 09:55:14.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.454" endtime="20201112 09:55:14.851"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.860" endtime="20201112 09:55:14.881"></status>
</kw>
<msg timestamp="20201112 09:55:14.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:14.858" endtime="20201112 09:55:14.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:14.883" endtime="20201112 09:55:14.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.885" endtime="20201112 09:55:14.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.856" endtime="20201112 09:55:14.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.854" endtime="20201112 09:55:14.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.895" endtime="20201112 09:55:15.181"></status>
</kw>
<msg timestamp="20201112 09:55:15.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022892167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022944917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:14.893" endtime="20201112 09:55:15.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:15.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022892167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022944917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:15.185" endtime="20201112 09:55:15.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.194" endtime="20201112 09:55:15.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.890" endtime="20201112 09:55:15.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.889" endtime="20201112 09:55:15.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:15.200" level="INFO">${RESULT} = [{'time': 0.022944917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2749999999997244e-05, 'source_diff': 5.2749999999997244e-05}, {'time': 0.023006653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:15.197" endtime="20201112 09:55:15.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:15.213" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:15.201" endtime="20201112 09:55:15.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:15.218" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 09:55:15.217" endtime="20201112 09:55:15.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:15.220" level="INFO">VALUE: [5.2749999999997244e-05, 5.466699999999783e-05, 5.6472000000001854e-05, 5.083300000000013e-05, 5.6528000000000134e-05, 5.263900000000016e-05, 5.36670000000003e-05, 5.275000000000071e-05, 5.075000000000218e-05, 5.173600000000014e-05, 5.277700000000038e-05, 5.372200000000257e-05, 5.36670000000003e-05, 5.079100000000142e-05, 5.369499999999944e-05, 5.180599999999799e-05, 5.270900000000148e-05, 5.458300000000041e-05, 5.177800000000232e-05, 5.080600000000046e-05, 5.368099999999987e-05, 5.173600000000014e-05, 5.180499999999852e-05, 5.36670000000003e-05, 5.265299999999973e-05, 5.565299999999926e-05, 5.656899999999937e-05, 5.180600000000146e-05, 5.180500000000199e-05, 5.083300000000013e-05, 5.363900000000116e-05, 5.7528000000001134e-05, 4.987500000000131e-05, 5.561099999999708e-05, 5.3680000000000394e-05, 5.56809999999984e-05, 5.465300000000173e-05, 5.7569999999999844e-05, 5.557000000000131e-05, 5.362499999999812e-05, 5.368099999999987e-05, 5.559700000000098e-05, 5.561100000000055e-05, 5.180600000000146e-05, 5.659699999999851e-05, 5.174999999999971e-05, 5.173600000000014e-05, 5.561100000000055e-05, 5.561099999999708e-05, 5.4680000000001394e-05]</msg>
<status status="PASS" starttime="20201112 09:55:15.219" endtime="20201112 09:55:15.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.214" endtime="20201112 09:55:15.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.224" endtime="20201112 09:55:15.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:15.227" endtime="20201112 09:55:15.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.226" endtime="20201112 09:55:15.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.222" endtime="20201112 09:55:15.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.852" endtime="20201112 09:55:15.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.852" endtime="20201112 09:55:15.248"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.257" endtime="20201112 09:55:15.279"></status>
</kw>
<msg timestamp="20201112 09:55:15.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:15.255" endtime="20201112 09:55:15.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:15.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:15.280" endtime="20201112 09:55:15.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.283" endtime="20201112 09:55:15.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.253" endtime="20201112 09:55:15.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.251" endtime="20201112 09:55:15.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.292" endtime="20201112 09:55:15.578"></status>
</kw>
<msg timestamp="20201112 09:55:15.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022854486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022920542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:15.290" endtime="20201112 09:55:15.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:15.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022854486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022920542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:15.582" endtime="20201112 09:55:15.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.590" endtime="20201112 09:55:15.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.288" endtime="20201112 09:55:15.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.286" endtime="20201112 09:55:15.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:15.597" level="INFO">${RESULT} = [{'time': 0.022920542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.605599999999837e-05, 'source_diff': 6.605599999999837e-05}, {'time': 0.022981736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:15.593" endtime="20201112 09:55:15.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:15.610" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:15.598" endtime="20201112 09:55:15.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:15.615" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 09:55:15.614" endtime="20201112 09:55:15.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:15.617" level="INFO">VALUE: [6.605599999999837e-05, 5.462499999999912e-05, 5.3666000000000824e-05, 5.2693999999998964e-05, 5.370899999999901e-05, 5.081900000000056e-05, 5.6528000000000134e-05, 5.562500000000012e-05, 5.65549999999998e-05, 5.6499999999997524e-05, 5.372299999999858e-05, 5.363900000000116e-05, 5.173600000000014e-05, 5.180499999999852e-05, 5.076399999999828e-05, 5.1708000000001e-05, 5.558300000000141e-05, 5.5541999999998704e-05, 5.077799999999785e-05, 5.363900000000116e-05, 5.174999999999971e-05, 5.5499999999999994e-05, 5.2749999999997244e-05, 5.174999999999971e-05, 5.173600000000014e-05, 5.263900000000016e-05, 5.462499999999912e-05, 5.473600000000314e-05, 5.365300000000073e-05, 5.180599999999799e-05, 5.65549999999998e-05, 5.466699999999783e-05, 5.179199999999842e-05, 5.081900000000056e-05, 5.461099999999955e-05, 5.651300000000109e-05, 5.555600000000174e-05, 5.556999999999784e-05, 5.4679999999997925e-05, 5.5541999999998704e-05, 5.659700000000198e-05, 5.081900000000056e-05, 5.263900000000016e-05, 5.465299999999826e-05, 5.173600000000014e-05, 5.555600000000174e-05, 5.2707999999998534e-05, 5.6528000000000134e-05, 5.562500000000012e-05, 5.170900000000048e-05]</msg>
<status status="PASS" starttime="20201112 09:55:15.616" endtime="20201112 09:55:15.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.611" endtime="20201112 09:55:15.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.621" endtime="20201112 09:55:15.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:15.624" endtime="20201112 09:55:15.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.622" endtime="20201112 09:55:15.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.619" endtime="20201112 09:55:15.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.249" endtime="20201112 09:55:15.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.249" endtime="20201112 09:55:15.645"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.654" endtime="20201112 09:55:15.675"></status>
</kw>
<msg timestamp="20201112 09:55:15.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:15.652" endtime="20201112 09:55:15.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:15.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:15.676" endtime="20201112 09:55:15.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.679" endtime="20201112 09:55:15.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.649" endtime="20201112 09:55:15.681"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.647" endtime="20201112 09:55:15.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.688" endtime="20201112 09:55:15.975"></status>
</kw>
<msg timestamp="20201112 09:55:15.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023104528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023170639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:15.686" endtime="20201112 09:55:15.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:15.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023104528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023170639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:15.979" endtime="20201112 09:55:15.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.987" endtime="20201112 09:55:15.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.684" endtime="20201112 09:55:15.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.682" endtime="20201112 09:55:15.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:15.994" level="INFO">${RESULT} = [{'time': 0.023170639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.611100000000064e-05, 'source_diff': 6.611100000000064e-05}, {'time': 0.023231639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:15.990" endtime="20201112 09:55:15.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:16.007" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:15.995" endtime="20201112 09:55:16.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.012" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 09:55:16.011" endtime="20201112 09:55:16.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.014" level="INFO">VALUE: [6.611100000000064e-05, 5.1735999999996674e-05, 5.077799999999785e-05, 5.3707999999999534e-05, 5.6528000000000134e-05, 5.363899999999769e-05, 5.36670000000003e-05, 5.459699999999998e-05, 5.180500000000199e-05, 5.4679999999997925e-05, 5.6528000000000134e-05, 5.259700000000145e-05, 5.273700000000062e-05, 5.2679999999999394e-05, 5.365300000000073e-05, 5.081900000000056e-05, 5.083300000000013e-05, 5.651299999999762e-05, 5.263899999999669e-05, 5.461099999999955e-05, 5.2665999999999824e-05, 5.368099999999987e-05, 5.556900000000184e-05, 5.269500000000191e-05, 5.463900000000216e-05, 5.176399999999928e-05, 5.081899999999709e-05, 5.365300000000073e-05, 5.269500000000191e-05, 5.077699999999838e-05, 5.458300000000041e-05, 5.562500000000012e-05, 5.077699999999838e-05, 5.5541999999998704e-05, 5.465300000000173e-05, 5.3735999999998674e-05, 5.2721999999998104e-05, 5.556900000000184e-05, 5.458300000000041e-05, 5.756900000000037e-05, 5.658399999999841e-05, 5.176299999999981e-05, 5.2721999999998104e-05, 5.179099999999895e-05, 5.652699999999719e-05, 5.269500000000191e-05, 5.3693999999999964e-05, 5.558300000000141e-05, 5.174999999999971e-05, 5.463900000000216e-05]</msg>
<status status="PASS" starttime="20201112 09:55:16.013" endtime="20201112 09:55:16.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.008" endtime="20201112 09:55:16.015"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.018" endtime="20201112 09:55:16.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:16.021" endtime="20201112 09:55:16.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.020" endtime="20201112 09:55:16.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.016" endtime="20201112 09:55:16.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.646" endtime="20201112 09:55:16.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.645" endtime="20201112 09:55:16.042"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.051" endtime="20201112 09:55:16.071"></status>
</kw>
<msg timestamp="20201112 09:55:16.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:16.049" endtime="20201112 09:55:16.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:16.073" endtime="20201112 09:55:16.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.075" endtime="20201112 09:55:16.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.047" endtime="20201112 09:55:16.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.044" endtime="20201112 09:55:16.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.084" endtime="20201112 09:55:16.370"></status>
</kw>
<msg timestamp="20201112 09:55:16.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022913736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022962653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:16.083" endtime="20201112 09:55:16.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022913736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022962653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:16.374" endtime="20201112 09:55:16.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.383" endtime="20201112 09:55:16.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.080" endtime="20201112 09:55:16.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.078" endtime="20201112 09:55:16.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:16.389" level="INFO">${RESULT} = [{'time': 0.022962653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.891699999999902e-05, 'source_diff': 4.891699999999902e-05}, {'time': 0.023023208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:16.386" endtime="20201112 09:55:16.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:16.402" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:16.390" endtime="20201112 09:55:16.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.407" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 09:55:16.406" endtime="20201112 09:55:16.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.409" level="INFO">VALUE: [4.891699999999902e-05, 5.3680000000000394e-05, 5.7444000000000245e-05, 5.4722000000000104e-05, 5.462499999999912e-05, 5.259699999999798e-05, 5.2693999999998964e-05, 5.6513999999997094e-05, 5.354200000000017e-05, 5.458399999999988e-05, 5.277799999999985e-05, 5.457000000000031e-05, 5.556899999999837e-05, 5.454200000000117e-05, 5.361099999999855e-05, 5.079200000000089e-05, 5.6514000000000564e-05, 5.272300000000105e-05, 5.6513999999997094e-05, 5.179099999999895e-05, 5.559700000000098e-05, 5.0708e-05, 5.658299999999894e-05, 5.175000000000318e-05, 5.558300000000141e-05, 5.173600000000014e-05, 5.172200000000057e-05, 5.558299999999794e-05, 5.261100000000102e-05, 5.552700000000313e-05, 5.1708000000001e-05, 5.072299999999905e-05, 5.461099999999955e-05, 5.077800000000132e-05, 5.459699999999998e-05, 5.262500000000059e-05, 5.64870000000009e-05, 5.5555999999998273e-05, 5.5527999999999134e-05, 5.555600000000174e-05, 5.077700000000185e-05, 5.65549999999998e-05, 5.458300000000041e-05, 5.556899999999837e-05, 5.4665999999998355e-05, 5.557000000000131e-05, 5.459699999999998e-05, 5.177800000000232e-05, 5.074999999999871e-05, 5.462500000000259e-05]</msg>
<status status="PASS" starttime="20201112 09:55:16.408" endtime="20201112 09:55:16.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.403" endtime="20201112 09:55:16.411"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.413" endtime="20201112 09:55:16.414"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:16.416" endtime="20201112 09:55:16.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.415" endtime="20201112 09:55:16.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.411" endtime="20201112 09:55:16.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.043" endtime="20201112 09:55:16.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.042" endtime="20201112 09:55:16.437"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.446" endtime="20201112 09:55:16.471"></status>
</kw>
<msg timestamp="20201112 09:55:16.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:16.444" endtime="20201112 09:55:16.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:16.472" endtime="20201112 09:55:16.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.475" endtime="20201112 09:55:16.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.442" endtime="20201112 09:55:16.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.440" endtime="20201112 09:55:16.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.484" endtime="20201112 09:55:16.771"></status>
</kw>
<msg timestamp="20201112 09:55:16.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024421764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024463986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:16.482" endtime="20201112 09:55:16.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024421764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024463986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:16.776" endtime="20201112 09:55:16.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.784" endtime="20201112 09:55:16.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.480" endtime="20201112 09:55:16.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.478" endtime="20201112 09:55:16.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:16.791" level="INFO">${RESULT} = [{'time': 0.024463986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.222200000000148e-05, 'source_diff': 4.222200000000148e-05}, {'time': 0.024524194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:16.787" endtime="20201112 09:55:16.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:16.804" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:16.792" endtime="20201112 09:55:16.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.808" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 09:55:16.807" endtime="20201112 09:55:16.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.811" level="INFO">VALUE: [4.222200000000148e-05, 5.551300000000009e-05, 5.561100000000055e-05, 5.373600000000214e-05, 5.177699999999938e-05, 5.277799999999985e-05, 5.7457999999999815e-05, 5.181899999999809e-05, 5.5638000000000215e-05, 5.072199999999957e-05, 5.369499999999944e-05, 5.275000000000071e-05, 5.458300000000041e-05, 5.359699999999898e-05, 5.173699999999962e-05, 5.2735999999997674e-05, 5.658299999999894e-05, 5.369499999999944e-05, 5.6569999999998843e-05, 5.658299999999894e-05, 5.1665999999998824e-05, 5.080599999999699e-05, 5.177800000000232e-05, 5.370899999999901e-05, 5.658399999999841e-05, 5.082000000000003e-05, 5.463900000000216e-05, 5.6486000000001424e-05, 5.4665999999998355e-05, 5.468100000000087e-05, 5.273600000000114e-05, 5.168100000000134e-05, 5.3721999999999104e-05, 5.177799999999885e-05, 5.074999999999871e-05, 5.08469999999997e-05, 5.082000000000003e-05, 5.168099999999787e-05, 5.082000000000003e-05, 5.276400000000028e-05, 5.1693999999997964e-05, 5.658399999999841e-05, 5.091600000000154e-05, 5.3735999999998674e-05, 5.465300000000173e-05, 5.659699999999851e-05, 5.170899999999701e-05, 5.175000000000318e-05, 5.086099999999927e-05, 5.6555999999999274e-05]</msg>
<status status="PASS" starttime="20201112 09:55:16.809" endtime="20201112 09:55:16.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.805" endtime="20201112 09:55:16.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.814" endtime="20201112 09:55:16.816"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:16.818" endtime="20201112 09:55:16.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.816" endtime="20201112 09:55:16.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.813" endtime="20201112 09:55:16.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.438" endtime="20201112 09:55:16.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.438" endtime="20201112 09:55:16.839"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.847" endtime="20201112 09:55:16.871"></status>
</kw>
<msg timestamp="20201112 09:55:16.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:16.846" endtime="20201112 09:55:16.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:16.872" endtime="20201112 09:55:16.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.875" endtime="20201112 09:55:16.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.843" endtime="20201112 09:55:16.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.841" endtime="20201112 09:55:16.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.884" endtime="20201112 09:55:17.171"></status>
</kw>
<msg timestamp="20201112 09:55:17.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025006403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025048542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:16.882" endtime="20201112 09:55:17.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025006403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025048542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:17.175" endtime="20201112 09:55:17.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.183" endtime="20201112 09:55:17.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.880" endtime="20201112 09:55:17.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.878" endtime="20201112 09:55:17.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:17.190" level="INFO">${RESULT} = [{'time': 0.025048542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2139000000000065e-05, 'source_diff': 4.2139000000000065e-05}, {'time': 0.02510975, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:55:17.187" endtime="20201112 09:55:17.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:17.203" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:17.191" endtime="20201112 09:55:17.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.208" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 09:55:17.207" endtime="20201112 09:55:17.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.210" level="INFO">VALUE: [4.2139000000000065e-05, 5.3693999999999964e-05, 5.559700000000098e-05, 5.0736999999998617e-05, 5.465300000000173e-05, 5.5499999999999994e-05, 5.08469999999997e-05, 5.463900000000216e-05, 5.273600000000114e-05, 5.458300000000041e-05, 5.272200000000157e-05, 5.6485999999997955e-05, 5.3721999999999104e-05, 5.084799999999917e-05, 5.275000000000071e-05, 5.6528000000000134e-05, 5.369499999999944e-05, 5.6485999999997955e-05, 5.562500000000012e-05, 5.459699999999998e-05, 5.5472000000000854e-05, 5.173600000000014e-05, 5.466699999999783e-05, 5.1708000000001e-05, 5.561099999999708e-05, 5.181900000000156e-05, 5.5499999999999994e-05, 5.661200000000102e-05, 5.074999999999871e-05, 5.275000000000071e-05, 5.5486000000000424e-05, 5.465300000000173e-05, 5.169400000000143e-05, 5.36670000000003e-05, 5.3735999999998674e-05, 4.976400000000075e-05, 5.370900000000248e-05, 5.26669999999993e-05, 5.7556000000000274e-05, 5.456900000000084e-05, 5.273600000000114e-05, 5.073599999999914e-05, 5.08339999999996e-05, 5.6486000000001424e-05, 5.4651999999998785e-05, 5.277699999999691e-05, 5.5513999999999564e-05, 5.4694000000000964e-05, 5.456900000000084e-05, 5.4665999999998355e-05]</msg>
<status status="PASS" starttime="20201112 09:55:17.209" endtime="20201112 09:55:17.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.204" endtime="20201112 09:55:17.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.214" endtime="20201112 09:55:17.215"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:17.217" endtime="20201112 09:55:17.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.216" endtime="20201112 09:55:17.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.212" endtime="20201112 09:55:17.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.840" endtime="20201112 09:55:17.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.839" endtime="20201112 09:55:17.238"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.247" endtime="20201112 09:55:17.267"></status>
</kw>
<msg timestamp="20201112 09:55:17.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:17.245" endtime="20201112 09:55:17.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:17.269" endtime="20201112 09:55:17.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.271" endtime="20201112 09:55:17.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.243" endtime="20201112 09:55:17.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.241" endtime="20201112 09:55:17.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.280" endtime="20201112 09:55:17.567"></status>
</kw>
<msg timestamp="20201112 09:55:17.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022314958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022368667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:17.279" endtime="20201112 09:55:17.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022314958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022368667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:17.572" endtime="20201112 09:55:17.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.580" endtime="20201112 09:55:17.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.276" endtime="20201112 09:55:17.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.275" endtime="20201112 09:55:17.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:17.587" level="INFO">${RESULT} = [{'time': 0.022368667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.370899999999901e-05, 'source_diff': 5.370899999999901e-05}, {'time': 0.022429597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:17.583" endtime="20201112 09:55:17.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:17.600" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:17.588" endtime="20201112 09:55:17.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.604" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 09:55:17.603" endtime="20201112 09:55:17.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.607" level="INFO">VALUE: [5.370899999999901e-05, 5.4679999999997925e-05, 5.5527999999999134e-05, 5.272300000000105e-05, 5.466699999999783e-05, 5.7569999999999844e-05, 5.362500000000159e-05, 5.561100000000055e-05, 5.08469999999997e-05, 5.658300000000241e-05, 5.5499999999999994e-05, 5.468100000000087e-05, 5.08469999999997e-05, 5.459699999999998e-05, 5.658300000000241e-05, 5.6471999999998385e-05, 5.275000000000071e-05, 5.08469999999997e-05, 5.6500000000000994e-05, 5.368099999999987e-05, 5.6471999999998385e-05, 5.562500000000012e-05, 5.372200000000257e-05, 5.1708000000001e-05, 5.3680000000000394e-05, 5.181899999999809e-05, 5.072199999999957e-05, 5.179200000000189e-05, 5.658399999999841e-05, 5.7429999999997206e-05, 5.086100000000274e-05, 5.169499999999744e-05, 5.561100000000055e-05, 5.073599999999914e-05, 4.987500000000131e-05, 5.663900000000069e-05, 5.2665999999999824e-05, 5.466699999999783e-05, 5.5638000000000215e-05, 5.069400000000043e-05, 5.5638000000000215e-05, 5.362499999999812e-05, 5.2721999999998104e-05, 5.358399999999888e-05, 5.177799999999885e-05, 5.361100000000202e-05, 5.279199999999942e-05, 5.373600000000214e-05, 5.073599999999914e-05, 5.570900000000101e-05]</msg>
<status status="PASS" starttime="20201112 09:55:17.605" endtime="20201112 09:55:17.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.601" endtime="20201112 09:55:17.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.610" endtime="20201112 09:55:17.612"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:17.614" endtime="20201112 09:55:17.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.612" endtime="20201112 09:55:17.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.609" endtime="20201112 09:55:17.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.239" endtime="20201112 09:55:17.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.239" endtime="20201112 09:55:17.635"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.643" endtime="20201112 09:55:17.664"></status>
</kw>
<msg timestamp="20201112 09:55:17.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:17.642" endtime="20201112 09:55:17.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:17.666" endtime="20201112 09:55:17.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.668" endtime="20201112 09:55:17.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.639" endtime="20201112 09:55:17.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.637" endtime="20201112 09:55:17.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.677" endtime="20201112 09:55:17.964"></status>
</kw>
<msg timestamp="20201112 09:55:17.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022880847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022923069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:17.676" endtime="20201112 09:55:17.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022880847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022923069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:17.968" endtime="20201112 09:55:17.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.976" endtime="20201112 09:55:17.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.673" endtime="20201112 09:55:17.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.671" endtime="20201112 09:55:17.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:17.983" level="INFO">${RESULT} = [{'time': 0.022923069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.222200000000148e-05, 'source_diff': 4.222200000000148e-05}, {'time': 0.022984194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:17.979" endtime="20201112 09:55:17.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:17.996" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:17.984" endtime="20201112 09:55:17.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.001" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 09:55:17.999" endtime="20201112 09:55:18.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.003" level="INFO">VALUE: [4.222200000000148e-05, 5.6388000000000965e-05, 5.658299999999894e-05, 5.180499999999852e-05, 5.08339999999996e-05, 5.1665999999998824e-05, 5.177699999999938e-05, 5.184800000000017e-05, 5.16669999999983e-05, 5.084799999999917e-05, 5.086099999999927e-05, 5.180499999999852e-05, 5.079100000000142e-05, 5.6541999999999704e-05, 5.087499999999884e-05, 5.4665999999998355e-05, 5.1651999999999254e-05, 5.3666000000000824e-05, 5.656899999999937e-05, 5.262500000000059e-05, 5.56670000000023e-05, 5.177800000000232e-05, 5.3693999999999964e-05, 5.275000000000071e-05, 5.561100000000055e-05, 5.558300000000141e-05, 5.558299999999794e-05, 5.466699999999783e-05, 5.463899999999869e-05, 5.4541999999997703e-05, 5.080600000000046e-05, 5.3721999999999104e-05, 5.2652000000000254e-05, 5.179099999999895e-05, 5.2749999999997244e-05, 5.081900000000056e-05, 5.457000000000031e-05, 5.080600000000046e-05, 5.7513999999998094e-05, 5.262500000000059e-05, 5.662500000000112e-05, 5.4651999999998785e-05, 5.559699999999751e-05, 5.359799999999845e-05, 5.658300000000241e-05, 5.362500000000159e-05, 5.275000000000071e-05, 5.561099999999708e-05, 5.461100000000302e-05, 5.176399999999928e-05]</msg>
<status status="PASS" starttime="20201112 09:55:18.002" endtime="20201112 09:55:18.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.997" endtime="20201112 09:55:18.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.007" endtime="20201112 09:55:18.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:18.010" endtime="20201112 09:55:18.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.009" endtime="20201112 09:55:18.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.005" endtime="20201112 09:55:18.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.636" endtime="20201112 09:55:18.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.635" endtime="20201112 09:55:18.031"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.040" endtime="20201112 09:55:18.061"></status>
</kw>
<msg timestamp="20201112 09:55:18.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:18.038" endtime="20201112 09:55:18.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:18.063" endtime="20201112 09:55:18.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.066" endtime="20201112 09:55:18.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.036" endtime="20201112 09:55:18.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.033" endtime="20201112 09:55:18.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.075" endtime="20201112 09:55:18.362"></status>
</kw>
<msg timestamp="20201112 09:55:18.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023443819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023539611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:18.073" endtime="20201112 09:55:18.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023443819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023539611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:18.366" endtime="20201112 09:55:18.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.374" endtime="20201112 09:55:18.376"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.070" endtime="20201112 09:55:18.376"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.069" endtime="20201112 09:55:18.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:18.381" level="INFO">${RESULT} = [{'time': 0.023539611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.579199999999732e-05, 'source_diff': 9.579199999999732e-05}, {'time': 0.023630764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:18.378" endtime="20201112 09:55:18.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:18.394" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:18.382" endtime="20201112 09:55:18.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.398" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 09:55:18.397" endtime="20201112 09:55:18.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.401" level="INFO">VALUE: [9.579199999999732e-05, 8.523599999999895e-05, 8.520899999999929e-05, 8.71799999999992e-05, 8.43469999999985e-05, 8.230500000000127e-05, 8.336200000000002e-05, 8.418000000000314e-05, 8.145799999999953e-05, 8.720800000000181e-05, 8.431899999999937e-05, 8.71669999999991e-05, 8.61669999999981e-05, 8.623599999999995e-05, 8.519400000000024e-05, 8.524999999999852e-05, 8.432000000000231e-05, 8.622200000000038e-05, 8.144499999999943e-05, 8.622200000000038e-05, 8.232000000000031e-05, 8.431899999999937e-05, 8.242999999999792e-05, 8.419499999999872e-05, 8.432000000000231e-05, 8.619400000000124e-05, 8.429100000000023e-05, 8.706899999999865e-05, 8.629199999999823e-05, 8.526400000000156e-05, 8.227699999999866e-05, 8.334700000000098e-05, 8.71669999999991e-05, 8.236099999999955e-05, 8.520900000000275e-05, 8.436100000000155e-05, 8.719399999999877e-05, 8.706999999999812e-05, 8.627799999999866e-05, 8.134699999999898e-05, 8.1458000000003e-05, 8.43469999999985e-05, 8.53469999999995e-05, 8.520899999999929e-05, 8.616700000000158e-05, 8.238799999999921e-05, 8.509699999999926e-05, 8.334800000000045e-05, 8.431899999999937e-05, 8.14170000000003e-05]</msg>
<status status="PASS" starttime="20201112 09:55:18.400" endtime="20201112 09:55:18.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.395" endtime="20201112 09:55:18.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.409" endtime="20201112 09:55:18.411"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:18.413" endtime="20201112 09:55:18.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.411" endtime="20201112 09:55:18.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.408" endtime="20201112 09:55:18.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.032" endtime="20201112 09:55:18.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.031" endtime="20201112 09:55:18.434"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.442" endtime="20201112 09:55:18.467"></status>
</kw>
<msg timestamp="20201112 09:55:18.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:18.441" endtime="20201112 09:55:18.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:18.469" endtime="20201112 09:55:18.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.471" endtime="20201112 09:55:18.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.438" endtime="20201112 09:55:18.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.436" endtime="20201112 09:55:18.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.480" endtime="20201112 09:55:18.767"></status>
</kw>
<msg timestamp="20201112 09:55:18.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022839236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022934042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:18.479" endtime="20201112 09:55:18.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022839236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022934042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:18.771" endtime="20201112 09:55:18.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.779" endtime="20201112 09:55:18.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.476" endtime="20201112 09:55:18.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.474" endtime="20201112 09:55:18.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:18.785" level="INFO">${RESULT} = [{'time': 0.022934042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.480600000000283e-05, 'source_diff': 9.480600000000283e-05}, {'time': 0.023025444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:18.782" endtime="20201112 09:55:18.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:18.799" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:18.786" endtime="20201112 09:55:18.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.803" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 09:55:18.802" endtime="20201112 09:55:18.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.806" level="INFO">VALUE: [9.480600000000283e-05, 8.433299999999894e-05, 8.418099999999915e-05, 8.620800000000081e-05, 8.620900000000029e-05, 8.518000000000067e-05, 8.341699999999883e-05, 8.708299999999822e-05, 8.430599999999927e-05, 8.331899999999837e-05, 8.048600000000114e-05, 8.422200000000185e-05, 8.526399999999809e-05, 8.616700000000158e-05, 8.523599999999895e-05, 8.426400000000056e-05, 8.33469999999975e-05, 8.713899999999997e-05, 8.430599999999927e-05, 8.234699999999998e-05, 8.433400000000188e-05, 8.126399999999756e-05, 8.808299999999922e-05, 8.609699999999679e-05, 8.725000000000052e-05, 8.243100000000086e-05, 8.240299999999826e-05, 8.331899999999837e-05, 8.431899999999937e-05, 8.230600000000074e-05, 8.336100000000055e-05, 8.719499999999825e-05, 8.607000000000059e-05, 8.431899999999937e-05, 8.512500000000187e-05, 8.152700000000138e-05, 8.713899999999997e-05, 8.233399999999988e-05, 8.513900000000144e-05, 8.244400000000096e-05, 8.23049999999978e-05, 8.24309999999974e-05, 8.241599999999835e-05, 8.433400000000188e-05, 8.420800000000228e-05, 8.144499999999943e-05, 8.238900000000215e-05, 8.619500000000072e-05, 8.61669999999981e-05, 8.42919999999997e-05]</msg>
<status status="PASS" starttime="20201112 09:55:18.804" endtime="20201112 09:55:18.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.800" endtime="20201112 09:55:18.807"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.809" endtime="20201112 09:55:18.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:18.813" endtime="20201112 09:55:18.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.811" endtime="20201112 09:55:18.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.808" endtime="20201112 09:55:18.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.434" endtime="20201112 09:55:18.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.434" endtime="20201112 09:55:18.834"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.842" endtime="20201112 09:55:18.866"></status>
</kw>
<msg timestamp="20201112 09:55:18.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:18.841" endtime="20201112 09:55:18.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:18.868" endtime="20201112 09:55:18.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.870" endtime="20201112 09:55:18.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.838" endtime="20201112 09:55:18.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.836" endtime="20201112 09:55:18.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.879" endtime="20201112 09:55:19.166"></status>
</kw>
<msg timestamp="20201112 09:55:19.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024615556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024709431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:18.878" endtime="20201112 09:55:19.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024615556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024709431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:19.170" endtime="20201112 09:55:19.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.178" endtime="20201112 09:55:19.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.875" endtime="20201112 09:55:19.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.873" endtime="20201112 09:55:19.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:19.185" level="INFO">${RESULT} = [{'time': 0.024709431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.387500000000021e-05, 'source_diff': 9.387500000000021e-05}, {'time': 0.02480125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:55:19.182" endtime="20201112 09:55:19.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:19.198" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:19.186" endtime="20201112 09:55:19.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.203" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 09:55:19.202" endtime="20201112 09:55:19.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.206" level="INFO">VALUE: [9.387500000000021e-05, 8.434700000000198e-05, 8.611099999999983e-05, 8.136200000000149e-05, 8.619399999999777e-05, 8.522199999999938e-05, 8.426400000000056e-05, 8.138900000000115e-05, 8.33049999999988e-05, 8.61660000000021e-05, 8.332000000000131e-05, 8.518000000000067e-05, 8.419400000000271e-05, 8.240300000000172e-05, 8.322199999999738e-05, 8.622200000000038e-05, 8.236099999999955e-05, 8.326400000000303e-05, 8.61249999999994e-05, 8.237499999999912e-05, 8.606900000000112e-05, 8.147200000000257e-05, 8.233399999999988e-05, 8.709800000000073e-05, 8.426400000000056e-05, 8.140300000000072e-05, 8.427800000000013e-05, 8.331900000000184e-05, 8.238900000000215e-05, 8.512500000000187e-05, 8.149999999999824e-05, 8.627799999999866e-05, 8.422200000000185e-05, 8.71250000000004e-05, 8.134699999999898e-05, 8.622200000000038e-05, 8.131999999999931e-05, 8.801400000000084e-05, 8.622200000000038e-05, 8.133400000000235e-05, 8.531900000000037e-05, 8.145799999999953e-05, 8.24170000000013e-05, 8.611099999999983e-05, 8.713899999999997e-05, 8.530499999999733e-05, 8.138900000000115e-05, 8.429100000000023e-05, 8.513900000000144e-05, 8.236099999999955e-05]</msg>
<status status="PASS" starttime="20201112 09:55:19.204" endtime="20201112 09:55:19.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.199" endtime="20201112 09:55:19.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.209" endtime="20201112 09:55:19.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:19.212" endtime="20201112 09:55:19.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.211" endtime="20201112 09:55:19.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.208" endtime="20201112 09:55:19.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.835" endtime="20201112 09:55:19.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.834" endtime="20201112 09:55:19.233"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.242" endtime="20201112 09:55:19.263"></status>
</kw>
<msg timestamp="20201112 09:55:19.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:19.240" endtime="20201112 09:55:19.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:19.264" endtime="20201112 09:55:19.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.267" endtime="20201112 09:55:19.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.238" endtime="20201112 09:55:19.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.236" endtime="20201112 09:55:19.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.276" endtime="20201112 09:55:19.563"></status>
</kw>
<msg timestamp="20201112 09:55:19.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021785875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:19.274" endtime="20201112 09:55:19.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021785875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:19.568" endtime="20201112 09:55:19.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.576" endtime="20201112 09:55:19.578"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.272" endtime="20201112 09:55:19.578"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.270" endtime="20201112 09:55:19.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:19.583" level="INFO">${RESULT} = [{'time': 0.021876764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.088900000000025e-05, 'source_diff': 9.088900000000025e-05}, {'time': 0.021968403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:19.579" endtime="20201112 09:55:19.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:19.596" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:19.584" endtime="20201112 09:55:19.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.601" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 09:55:19.599" endtime="20201112 09:55:19.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.603" level="INFO">VALUE: [9.088900000000025e-05, 8.623599999999995e-05, 8.138900000000115e-05, 8.702800000000288e-05, 8.526399999999809e-05, 8.238900000000215e-05, 8.332000000000131e-05, 8.238900000000215e-05, 8.516599999999763e-05, 8.33330000000014e-05, 8.609700000000026e-05, 8.619500000000072e-05, 8.618000000000167e-05, 8.51249999999984e-05, 8.338899999999969e-05, 8.323600000000042e-05, 8.231899999999737e-05, 8.525000000000199e-05, 8.324999999999999e-05, 8.137500000000158e-05, 8.136100000000202e-05, 8.524999999999852e-05, 8.231899999999737e-05, 8.237499999999912e-05, 8.138900000000115e-05, 8.60980000000032e-05, 8.524999999999852e-05, 8.618099999999768e-05, 8.136099999999855e-05, 8.323600000000042e-05, 8.426400000000056e-05, 8.131899999999984e-05, 8.429200000000317e-05, 8.237499999999912e-05, 8.327799999999913e-05, 8.51249999999984e-05, 8.231900000000084e-05, 8.42919999999997e-05, 8.5153000000001e-05, 8.334700000000098e-05, 8.238899999999869e-05, 8.419399999999924e-05, 8.238899999999869e-05, 8.518000000000067e-05, 8.809700000000226e-05, 8.713899999999997e-05, 8.612500000000287e-05, 8.243100000000086e-05, 8.515299999999754e-05, 8.238899999999869e-05]</msg>
<status status="PASS" starttime="20201112 09:55:19.602" endtime="20201112 09:55:19.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.597" endtime="20201112 09:55:19.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.607" endtime="20201112 09:55:19.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:19.610" endtime="20201112 09:55:19.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.609" endtime="20201112 09:55:19.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.605" endtime="20201112 09:55:19.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.234" endtime="20201112 09:55:19.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.234" endtime="20201112 09:55:19.631"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.639" endtime="20201112 09:55:19.660"></status>
</kw>
<msg timestamp="20201112 09:55:19.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:19.638" endtime="20201112 09:55:19.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:19.661" endtime="20201112 09:55:19.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.663" endtime="20201112 09:55:19.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.635" endtime="20201112 09:55:19.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.633" endtime="20201112 09:55:19.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.673" endtime="20201112 09:55:19.960"></status>
</kw>
<msg timestamp="20201112 09:55:19.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021136931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02121075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:19.671" endtime="20201112 09:55:19.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021136931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02121075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:19.965" endtime="20201112 09:55:19.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.973" endtime="20201112 09:55:19.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.668" endtime="20201112 09:55:19.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.667" endtime="20201112 09:55:19.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:19.979" level="INFO">${RESULT} = [{'time': 0.02121075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.381899999999927e-05, 'source_diff': 7.381899999999927e-05}, {'time': 0.021302181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:55:19.976" endtime="20201112 09:55:19.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:20.038" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:19.980" endtime="20201112 09:55:20.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.042" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 09:55:20.041" endtime="20201112 09:55:20.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.045" level="INFO">VALUE: [7.381899999999927e-05, 8.707000000000159e-05, 8.433399999999841e-05, 8.247199999999663e-05, 8.144399999999996e-05, 8.141600000000082e-05, 8.424999999999752e-05, 8.522199999999938e-05, 8.623599999999995e-05, 8.43049999999998e-05, 8.53050000000008e-05, 8.427800000000013e-05, 8.33049999999988e-05, 8.336099999999708e-05, 8.432000000000231e-05, 8.334800000000045e-05, 8.419499999999872e-05, 8.523600000000242e-05, 8.419499999999872e-05, 8.42919999999997e-05, 8.61669999999981e-05, 8.42919999999997e-05, 8.238900000000215e-05, 8.137499999999812e-05, 8.138900000000115e-05, 8.145900000000247e-05, 8.234699999999998e-05, 8.622299999999986e-05, 8.334700000000098e-05, 8.337500000000012e-05, 8.436099999999808e-05, 8.51799999999972e-05, 8.33330000000014e-05, 8.527700000000166e-05, 8.719399999999877e-05, 8.800000000000127e-05, 8.144399999999996e-05, 8.716599999999963e-05, 8.237500000000259e-05, 8.527800000000113e-05, 8.04719999999981e-05, 8.41110000000013e-05, 8.622200000000038e-05, 8.32919999999987e-05, 8.616599999999863e-05, 8.240300000000172e-05, 8.423599999999795e-05, 8.134699999999898e-05, 8.719499999999825e-05, 8.333299999999794e-05]</msg>
<status status="PASS" starttime="20201112 09:55:20.043" endtime="20201112 09:55:20.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.039" endtime="20201112 09:55:20.046"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.048" endtime="20201112 09:55:20.050"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:20.052" endtime="20201112 09:55:20.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.050" endtime="20201112 09:55:20.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.047" endtime="20201112 09:55:20.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.632" endtime="20201112 09:55:20.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.631" endtime="20201112 09:55:20.072"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.082" endtime="20201112 09:55:20.102"></status>
</kw>
<msg timestamp="20201112 09:55:20.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:20.080" endtime="20201112 09:55:20.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:20.104" endtime="20201112 09:55:20.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.106" endtime="20201112 09:55:20.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.077" endtime="20201112 09:55:20.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.075" endtime="20201112 09:55:20.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.115" endtime="20201112 09:55:20.401"></status>
</kw>
<msg timestamp="20201112 09:55:20.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021630708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021729278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:20.114" endtime="20201112 09:55:20.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021630708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021729278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:20.406" endtime="20201112 09:55:20.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.414" endtime="20201112 09:55:20.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.111" endtime="20201112 09:55:20.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.110" endtime="20201112 09:55:20.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:20.421" level="INFO">${RESULT} = [{'time': 0.021729278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.857000000000268e-05, 'source_diff': 9.857000000000268e-05}, {'time': 0.021820806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:20.417" endtime="20201112 09:55:20.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:20.434" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:20.422" endtime="20201112 09:55:20.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.438" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 09:55:20.437" endtime="20201112 09:55:20.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.441" level="INFO">VALUE: [9.857000000000268e-05, 8.62370000000029e-05, 8.61249999999994e-05, 8.527799999999766e-05, 8.238899999999869e-05, 8.61249999999994e-05, 8.709800000000073e-05, 8.804199999999998e-05, 8.522299999999886e-05, 8.223599999999942e-05, 8.240299999999826e-05, 8.706899999999865e-05, 8.618099999999768e-05, 8.230599999999727e-05, 8.523699999999843e-05, 8.234699999999998e-05, 8.334700000000098e-05, 8.423599999999795e-05, 8.425000000000099e-05, 8.137500000000158e-05, 8.720900000000129e-05, 8.420900000000175e-05, 8.809699999999879e-05, 8.71250000000004e-05, 8.236099999999955e-05, 8.326399999999956e-05, 8.423599999999795e-05, 8.623699999999943e-05, 8.609799999999973e-05, 8.14450000000029e-05, 8.144499999999943e-05, 8.13329999999994e-05, 8.426400000000056e-05, 8.425000000000099e-05, 8.416699999999958e-05, 8.33330000000014e-05, 8.333299999999794e-05, 8.230599999999727e-05, 8.131899999999984e-05, 8.526400000000156e-05, 8.51249999999984e-05, 8.522199999999938e-05, 8.236099999999955e-05, 8.520799999999981e-05, 8.336100000000055e-05, 8.322200000000085e-05, 8.140299999999726e-05, 8.809699999999879e-05, 8.619399999999777e-05, 8.706899999999865e-05]</msg>
<status status="PASS" starttime="20201112 09:55:20.440" endtime="20201112 09:55:20.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.435" endtime="20201112 09:55:20.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.445" endtime="20201112 09:55:20.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:20.448" endtime="20201112 09:55:20.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.446" endtime="20201112 09:55:20.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.443" endtime="20201112 09:55:20.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.073" endtime="20201112 09:55:20.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.073" endtime="20201112 09:55:20.469"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.478" endtime="20201112 09:55:20.499"></status>
</kw>
<msg timestamp="20201112 09:55:20.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:20.476" endtime="20201112 09:55:20.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:20.500" endtime="20201112 09:55:20.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.503" endtime="20201112 09:55:20.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.473" endtime="20201112 09:55:20.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.471" endtime="20201112 09:55:20.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.512" endtime="20201112 09:55:20.798"></status>
</kw>
<msg timestamp="20201112 09:55:20.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022164528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022253625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:20.510" endtime="20201112 09:55:20.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022164528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022253625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:20.802" endtime="20201112 09:55:20.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.810" endtime="20201112 09:55:20.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.508" endtime="20201112 09:55:20.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.506" endtime="20201112 09:55:20.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:20.817" level="INFO">${RESULT} = [{'time': 0.022253625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.909699999999979e-05, 'source_diff': 8.909699999999979e-05}, {'time': 0.022345681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:20.814" endtime="20201112 09:55:20.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:20.830" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:20.818" endtime="20201112 09:55:20.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.835" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 09:55:20.834" endtime="20201112 09:55:20.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.837" level="INFO">VALUE: [8.909699999999979e-05, 8.622299999999986e-05, 8.327699999999966e-05, 8.140300000000072e-05, 8.327699999999966e-05, 8.623599999999995e-05, 8.324999999999999e-05, 8.140299999999726e-05, 8.241600000000182e-05, 8.520799999999981e-05, 8.138900000000115e-05, 8.713899999999997e-05, 8.42919999999997e-05, 8.323600000000042e-05, 8.623599999999995e-05, 8.711099999999736e-05, 8.419499999999872e-05, 8.143000000000039e-05, 8.420799999999881e-05, 8.240199999999878e-05, 8.324999999999999e-05, 8.622200000000038e-05, 8.433400000000188e-05, 8.140300000000072e-05, 8.236100000000302e-05, 8.427800000000013e-05, 8.706899999999865e-05, 8.141599999999735e-05, 8.801399999999737e-05, 8.143099999999986e-05, 8.427800000000013e-05, 8.5153000000001e-05, 8.720900000000129e-05, 8.229200000000117e-05, 8.241600000000182e-05, 8.322200000000085e-05, 8.145799999999953e-05, 8.719500000000172e-05, 8.23049999999978e-05, 8.61660000000021e-05, 8.237499999999912e-05, 8.704199999999898e-05, 8.623599999999995e-05, 8.61119999999993e-05, 8.426400000000056e-05, 8.804199999999998e-05, 8.432000000000231e-05, 8.51110000000023e-05, 8.42919999999997e-05, 8.032000000000178e-05]</msg>
<status status="PASS" starttime="20201112 09:55:20.836" endtime="20201112 09:55:20.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.831" endtime="20201112 09:55:20.839"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.841" endtime="20201112 09:55:20.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:20.844" endtime="20201112 09:55:20.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.843" endtime="20201112 09:55:20.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.839" endtime="20201112 09:55:20.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.470" endtime="20201112 09:55:20.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.469" endtime="20201112 09:55:20.865"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.874" endtime="20201112 09:55:20.896"></status>
</kw>
<msg timestamp="20201112 09:55:20.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:20.872" endtime="20201112 09:55:20.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:20.897" endtime="20201112 09:55:20.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.900" endtime="20201112 09:55:20.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.870" endtime="20201112 09:55:20.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.868" endtime="20201112 09:55:20.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.909" endtime="20201112 09:55:21.194"></status>
</kw>
<msg timestamp="20201112 09:55:21.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022608444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022687056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:20.907" endtime="20201112 09:55:21.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022608444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022687056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:21.199" endtime="20201112 09:55:21.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.207" endtime="20201112 09:55:21.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.905" endtime="20201112 09:55:21.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.903" endtime="20201112 09:55:21.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:21.213" level="INFO">${RESULT} = [{'time': 0.022687056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.861200000000221e-05, 'source_diff': 7.861200000000221e-05}, {'time': 0.022778028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:21.210" endtime="20201112 09:55:21.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:21.227" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:21.214" endtime="20201112 09:55:21.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.231" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 09:55:21.230" endtime="20201112 09:55:21.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.234" level="INFO">VALUE: [7.861200000000221e-05, 8.048599999999767e-05, 8.23330000000004e-05, 8.623599999999995e-05, 8.144499999999943e-05, 8.432000000000231e-05, 8.33330000000014e-05, 8.337500000000012e-05, 8.431899999999937e-05, 8.330500000000227e-05, 8.529199999999723e-05, 8.22919999999977e-05, 8.719499999999825e-05, 8.147300000000204e-05, 8.71669999999991e-05, 8.238899999999869e-05, 8.813900000000097e-05, 8.052799999999985e-05, 8.340300000000272e-05, 8.431899999999937e-05, 8.337500000000012e-05, 8.533299999999994e-05, 8.232000000000031e-05, 8.330599999999827e-05, 8.340300000000272e-05, 8.241699999999783e-05, 8.144399999999996e-05, 8.047200000000157e-05, 8.236199999999902e-05, 8.136099999999855e-05, 8.709700000000126e-05, 8.618100000000115e-05, 8.047299999999757e-05, 8.337500000000012e-05, 8.526400000000156e-05, 8.427800000000013e-05, 8.413900000000044e-05, 8.143099999999986e-05, 8.431899999999937e-05, 8.241699999999783e-05, 8.427700000000066e-05, 8.622200000000038e-05, 8.24720000000001e-05, 8.719399999999877e-05, 8.326300000000009e-05, 8.71669999999991e-05, 8.71799999999992e-05, 8.427800000000013e-05, 8.137499999999812e-05, 8.718100000000215e-05]</msg>
<status status="PASS" starttime="20201112 09:55:21.232" endtime="20201112 09:55:21.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.228" endtime="20201112 09:55:21.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.237" endtime="20201112 09:55:21.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:21.241" endtime="20201112 09:55:21.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.239" endtime="20201112 09:55:21.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.236" endtime="20201112 09:55:21.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.866" endtime="20201112 09:55:21.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.866" endtime="20201112 09:55:21.262"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.270" endtime="20201112 09:55:21.292"></status>
</kw>
<msg timestamp="20201112 09:55:21.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:21.269" endtime="20201112 09:55:21.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:21.294" endtime="20201112 09:55:21.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.296" endtime="20201112 09:55:21.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.266" endtime="20201112 09:55:21.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.264" endtime="20201112 09:55:21.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.305" endtime="20201112 09:55:21.591"></status>
</kw>
<msg timestamp="20201112 09:55:21.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023447458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023547014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:21.304" endtime="20201112 09:55:21.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023447458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023547014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:21.595" endtime="20201112 09:55:21.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.603" endtime="20201112 09:55:21.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.301" endtime="20201112 09:55:21.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.300" endtime="20201112 09:55:21.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:21.610" level="INFO">${RESULT} = [{'time': 0.023547014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.955600000000064e-05, 'source_diff': 9.955600000000064e-05}, {'time': 0.023638236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:21.607" endtime="20201112 09:55:21.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:21.624" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:21.611" endtime="20201112 09:55:21.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.629" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 09:55:21.628" endtime="20201112 09:55:21.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.631" level="INFO">VALUE: [9.955600000000064e-05, 8.322200000000085e-05, 8.324999999999999e-05, 8.238899999999869e-05, 8.419499999999872e-05, 8.424999999999752e-05, 8.618100000000115e-05, 8.615199999999906e-05, 8.32919999999987e-05, 8.33049999999988e-05, 8.045900000000147e-05, 8.427800000000013e-05, 8.140300000000072e-05, 8.238900000000215e-05, 8.334800000000045e-05, 8.520799999999981e-05, 8.520899999999929e-05, 8.145799999999953e-05, 8.615199999999906e-05, 8.331899999999837e-05, 8.42919999999997e-05, 8.722199999999791e-05, 8.140300000000072e-05, 8.6153000000002e-05, 8.523600000000242e-05, 8.136099999999855e-05, 8.71669999999991e-05, 8.230600000000074e-05, 8.433400000000188e-05, 8.711100000000083e-05, 8.240199999999878e-05, 8.611099999999983e-05, 8.522199999999938e-05, 8.522199999999938e-05, 8.716700000000258e-05, 8.137500000000158e-05, 8.236099999999955e-05, 8.622200000000038e-05, 8.518100000000015e-05, 8.513900000000144e-05, 8.330600000000174e-05, 8.518000000000067e-05, 8.5153000000001e-05, 8.338899999999969e-05, 8.132000000000278e-05, 8.434700000000198e-05, 8.522300000000232e-05, 8.518099999999668e-05, 8.430600000000274e-05, 8.61669999999981e-05]</msg>
<status status="PASS" starttime="20201112 09:55:21.630" endtime="20201112 09:55:21.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.625" endtime="20201112 09:55:21.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.635" endtime="20201112 09:55:21.636"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:21.638" endtime="20201112 09:55:21.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.637" endtime="20201112 09:55:21.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.633" endtime="20201112 09:55:21.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.262" endtime="20201112 09:55:21.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.262" endtime="20201112 09:55:21.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.860" endtime="20201112 09:55:21.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:21.664" endtime="20201112 09:55:21.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.662" endtime="20201112 09:55:21.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.661" endtime="20201112 09:55:21.685"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 09:54:41.780" endtime="20201112 09:55:21.685" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:54:00.629" endtime="20201112 09:55:21.689"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.744" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:55:21.752" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:55:22.834" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:55:21.743" endtime="20201112 09:55:22.835"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.837" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:55:22.836" endtime="20201112 09:55:22.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.741" endtime="20201112 09:55:22.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:22.840" endtime="20201112 09:55:23.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.839" endtime="20201112 09:55:23.025"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.037" endtime="20201112 09:55:23.060"></status>
</kw>
<msg timestamp="20201112 09:55:23.060" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201112 09:55:23.035" endtime="20201112 09:55:23.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.063" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201112 09:55:23.062" endtime="20201112 09:55:23.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.066" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:55:23.064" endtime="20201112 09:55:23.067"></status>
</kw>
<status status="FAIL" starttime="20201112 09:55:23.033" endtime="20201112 09:55:23.067"></status>
</kw>
<status status="FAIL" starttime="20201112 09:55:23.031" endtime="20201112 09:55:23.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.030" endtime="20201112 09:55:23.068"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:55:23.073" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:55:23.072" endtime="20201112 09:55:23.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.069" endtime="20201112 09:55:23.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.029" endtime="20201112 09:55:23.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.028" endtime="20201112 09:55:23.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.075" endtime="20201112 09:55:23.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.027" endtime="20201112 09:55:23.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.078" endtime="20201112 09:55:23.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.025" endtime="20201112 09:55:23.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.740" endtime="20201112 09:55:23.080"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:23.086" endtime="20201112 09:55:23.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.085" endtime="20201112 09:55:23.106"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.120" endtime="20201112 09:55:23.140"></status>
</kw>
<msg timestamp="20201112 09:55:23.141" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:23.118" endtime="20201112 09:55:23.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.143" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:23.142" endtime="20201112 09:55:23.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.146" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:55:23.144" endtime="20201112 09:55:23.147"></status>
</kw>
<status status="FAIL" starttime="20201112 09:55:23.115" endtime="20201112 09:55:23.147"></status>
</kw>
<status status="FAIL" starttime="20201112 09:55:23.113" endtime="20201112 09:55:23.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.112" endtime="20201112 09:55:23.148"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:55:23.152" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:55:23.151" endtime="20201112 09:55:23.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.149" endtime="20201112 09:55:23.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.111" endtime="20201112 09:55:23.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.110" endtime="20201112 09:55:23.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.154" endtime="20201112 09:55:23.155"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.109" endtime="20201112 09:55:23.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.107" endtime="20201112 09:55:23.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.083" endtime="20201112 09:55:23.156"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:55:23.160" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.169" endtime="20201112 09:55:25.279"></status>
</kw>
<msg timestamp="20201112 09:55:25.280" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 387969, 'wakeups': [397979, 407989, 417999, 427978, 437988, 447998, 45...</msg>
<status status="PASS" starttime="20201112 09:55:23.168" endtime="20201112 09:55:25.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.286" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 387969, 'wakeups': [397979, 407989, 417999, 427978, 437988, 447998, 45...</msg>
<status status="PASS" starttime="20201112 09:55:25.282" endtime="20201112 09:55:25.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.289" endtime="20201112 09:55:25.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.165" endtime="20201112 09:55:25.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.162" endtime="20201112 09:55:25.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:25.300" level="INFO">${RESULT} = {'start-time': 387969, 'wakeups': [397979, 407989, 417999, 427978, 437988, 447998, 457977, 467987, 477996, 487976, 497985, 507995, 517974, 527984, 537994, 547973, 557983, 567993, 577972, 587982, 59799...</msg>
<status status="PASS" starttime="20201112 09:55:25.296" endtime="20201112 09:55:25.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.307" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:25.306" endtime="20201112 09:55:25.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.309" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:25.309" endtime="20201112 09:55:25.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.301" endtime="20201112 09:55:25.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.314" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:55:25.313" endtime="20201112 09:55:25.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.316" level="INFO">VALUE: 387969</msg>
<status status="PASS" starttime="20201112 09:55:25.315" endtime="20201112 09:55:25.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.311" endtime="20201112 09:55:25.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.321" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:25.320" endtime="20201112 09:55:25.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.323" level="INFO">VALUE: [397979, 407989, 417999, 427978, 437988, 447998, 457977, 467987, 477996, 487976, 497985, 507995, 517974, 527984, 537994, 547973, 557983, 567993, 577972, 587982, 597991, 607971, 617980, 627990, 637969, 647979, 657989, 667999, 677978, 687988, 697998, 707977, 717987, 727996, 737976, 747985, 757995, 767974, 777984, 787994, 797973, 807983, 817993, 827972, 837982, 847991, 857971, 867980, 877990, 887969, 897979, 907989, 917999, 927978, 937988, 947998, 957977, 967987, 977996, 987976, 997985, 1007995, 1017974, 1027984, 1037994, 1047973, 1057983, 1067993, 1077972, 1087982, 1097991, 1107971, 1117980, 1127990, 1137969, 1147979, 1157989, 1167999, 1177978, 1187988, 1197998, 1207977, 1217987, 1227996, 1237976, 1247985, 1257995, 1267974, 1277984, 1287994, 1297973, 1307983, 1317993, 1327972, 1337982, 1347991, 1357971, 1367980, 1377990, 1387969]</msg>
<status status="PASS" starttime="20201112 09:55:25.322" endtime="20201112 09:55:25.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.318" endtime="20201112 09:55:25.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.331" endtime="20201112 09:55:25.627"></status>
</kw>
<msg timestamp="20201112 09:55:25.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075259361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.085274778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:25.329" endtime="20201112 09:55:25.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075259361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.085274778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:25.631" endtime="20201112 09:55:25.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.639" endtime="20201112 09:55:25.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.327" endtime="20201112 09:55:25.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.325" endtime="20201112 09:55:25.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:25.665" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:25.642" endtime="20201112 09:55:25.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.670" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:55:25.669" endtime="20201112 09:55:25.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.672" level="INFO">VALUE: 0.075259361</msg>
<status status="PASS" starttime="20201112 09:55:25.671" endtime="20201112 09:55:25.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.666" endtime="20201112 09:55:25.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.678" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:25.677" endtime="20201112 09:55:25.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.680" level="INFO">VALUE: [0.085274778, 0.095284222, 0.105293681, 0.115272625, 0.125282028, 0.1352915, 0.145270444, 0.155279903, 0.165289361, 0.175268264, 0.185277722, 0.195287194, 0.205266139, 0.215275611, 0.225285069, 0.235263972, 0.245273389, 0.255282861, 0.265261806, 0.275271236, 0.285280681, 0.295259611, 0.305269083, 0.315278569, 0.325257444, 0.335266917, 0.345276389, 0.355285806, 0.365264764, 0.375274153, 0.385283667, 0.395262667, 0.405272042, 0.4152815, 0.425260403, 0.435269944, 0.445279375, 0.45525825, 0.46526775, 0.475277208, 0.485256125, 0.495265569, 0.505275, 0.515254028, 0.525263403, 0.535272833, 0.54525175, 0.555261236, 0.565270653, 0.575249583, 0.585259097, 0.595268514, 0.605278, 0.615256903, 0.625266333, 0.635275889, 0.645254708, 0.655264194, 0.665273611, 0.675252542, 0.685261986, 0.695271486, 0.705250417, 0.715259847, 0.725269333, 0.735248264, 0.74525775, 0.755267181, 0.765246069, 0.775255528, 0.785265028, 0.795243903, 0.805253389, 0.815262847, 0.825241792, 0.835251222, 0.845260681, 0.855270125, 0.865249042, 0.875258528, 0.885267958, 0.895246875, 0.905256333, 0.91526575, 0.92524475, 0.935254194, 0.945263653, 0.955242569, 0.965251986, 0.975261444, 0.985240389, 0.995249833, 1.005259278, 1.01523825, 1.025247681, 1.035257139, 1.045236083, 1.055245542, 1.065255, 1.075233917] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:25.679" endtime="20201112 09:55:25.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.674" endtime="20201112 09:55:25.681"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.683" endtime="20201112 09:55:25.684"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:25.686" endtime="20201112 09:55:25.706"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.685" endtime="20201112 09:55:25.706"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.681" endtime="20201112 09:55:25.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.161" endtime="20201112 09:55:25.707"></status>
</kw>
<msg timestamp="20201112 09:55:25.707" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.715" endtime="20201112 09:55:27.834"></status>
</kw>
<msg timestamp="20201112 09:55:27.835" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2935485, 'wakeups': [2945526, 2955505, 2965515, 2975494, 2985504, 2995...</msg>
<status status="PASS" starttime="20201112 09:55:25.714" endtime="20201112 09:55:27.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.841" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2935485, 'wakeups': [2945526, 2955505, 2965515, 2975494, 2985504, 2995...</msg>
<status status="PASS" starttime="20201112 09:55:27.838" endtime="20201112 09:55:27.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.844" endtime="20201112 09:55:27.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.711" endtime="20201112 09:55:27.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.709" endtime="20201112 09:55:27.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:27.854" level="INFO">${RESULT} = {'start-time': 2935485, 'wakeups': [2945526, 2955505, 2965515, 2975494, 2985504, 2995513, 3005493, 3015502, 3025512, 3035491, 3045501, 3055511, 3065490, 3075500, 3085510, 3095489, 3105499, 3115509, 31...</msg>
<status status="PASS" starttime="20201112 09:55:27.850" endtime="20201112 09:55:27.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.863" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:27.862" endtime="20201112 09:55:27.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.866" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:27.865" endtime="20201112 09:55:27.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.856" endtime="20201112 09:55:27.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.871" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:55:27.870" endtime="20201112 09:55:27.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.873" level="INFO">VALUE: 2935485</msg>
<status status="PASS" starttime="20201112 09:55:27.872" endtime="20201112 09:55:27.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.867" endtime="20201112 09:55:27.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.878" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:27.877" endtime="20201112 09:55:27.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.880" level="INFO">VALUE: [2945526, 2955505, 2965515, 2975494, 2985504, 2995513, 3005493, 3015502, 3025512, 3035491, 3045501, 3055511, 3065490, 3075500, 3085510, 3095489, 3105499, 3115509, 3125488, 3135498, 3145507, 3155487, 3165496, 3175506, 3185485, 3195495, 3205505, 3215515, 3225494, 3235504, 3245513, 3255493, 3265502, 3275512, 3285491, 3295501, 3305511, 3315490, 3325500, 3335510, 3345489, 3355499, 3365509, 3375488, 3385498, 3395507, 3405487, 3415496, 3425506, 3435485, 3445495, 3455505, 3465515, 3475494, 3485504, 3495513, 3505493, 3515502, 3525512, 3535491, 3545501, 3555511, 3565490, 3575500, 3585510, 3595489, 3605499, 3615509, 3625488, 3635498, 3645507, 3655487, 3665496, 3675506, 3685485, 3695495, 3705505, 3715515, 3725494, 3735504, 3745513, 3755493, 3765502, 3775512, 3785491, 3795501, 3805511, 3815490, 3825500, 3835510, 3845489, 3855499, 3865509, 3875488, 3885498, 3895507, 3905487, 3915496, 3925506, 3935485]</msg>
<status status="PASS" starttime="20201112 09:55:27.879" endtime="20201112 09:55:27.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.874" endtime="20201112 09:55:27.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.887" endtime="20201112 09:55:28.179"></status>
</kw>
<msg timestamp="20201112 09:55:28.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022768306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032790083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:27.886" endtime="20201112 09:55:28.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:28.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022768306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032790083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:28.183" endtime="20201112 09:55:28.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:28.191" endtime="20201112 09:55:28.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.883" endtime="20201112 09:55:28.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.881" endtime="20201112 09:55:28.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:28.218" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:28.194" endtime="20201112 09:55:28.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:28.223" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:55:28.222" endtime="20201112 09:55:28.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:28.225" level="INFO">VALUE: 0.022768306</msg>
<status status="PASS" starttime="20201112 09:55:28.224" endtime="20201112 09:55:28.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.219" endtime="20201112 09:55:28.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:28.230" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:28.229" endtime="20201112 09:55:28.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:28.232" level="INFO">VALUE: [0.032790083, 0.042769, 0.052778472, 0.062757417, 0.072766903, 0.082776347, 0.092755361, 0.102764708, 0.112774153, 0.122753111, 0.132762556, 0.142772014, 0.152750944, 0.162760333, 0.172769792, 0.18274875, 0.192758167, 0.202767653, 0.212746569, 0.222756042, 0.232765611, 0.242744431, 0.252753903, 0.262763347, 0.272742347, 0.282751736, 0.292761139, 0.302770667, 0.312749569, 0.322759042, 0.332768486, 0.342747389, 0.352756861, 0.362766292, 0.372745236, 0.382754694, 0.392764194, 0.402743083, 0.412752542, 0.422761958, 0.432740917, 0.442750319, 0.452759819, 0.462738764, 0.472748236, 0.482757639, 0.492736556, 0.502746056, 0.5127555, 0.522734417, 0.532743861, 0.542753306, 0.552762792, 0.562741694, 0.572751181, 0.582760583, 0.592739583, 0.602749, 0.612758458, 0.622737389, 0.632746819, 0.642756319, 0.65273525, 0.662744653, 0.672754139, 0.682733042, 0.692742514, 0.702751903, 0.712730889, 0.722740333, 0.732749833, 0.742728681, 0.75273825, 0.762747653, 0.772726556, 0.782736, 0.7927455, 0.802754903, 0.812733861, 0.822743347, 0.832752736, 0.842731694, 0.852741125, 0.862750542, 0.8727295, 0.882738972, 0.892748444, 0.902727333, 0.912736806, 0.92274625, 0.932725181, 0.942734653, 0.952744097, 0.962722986, 0.972732528, 0.982741889, 0.992720903, 1.002730361, 1.012739792, 1.022718708] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:28.231" endtime="20201112 09:55:28.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.226" endtime="20201112 09:55:28.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:28.236" endtime="20201112 09:55:28.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:28.239" endtime="20201112 09:55:28.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.238" endtime="20201112 09:55:28.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.234" endtime="20201112 09:55:28.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.708" endtime="20201112 09:55:28.260"></status>
</kw>
<msg timestamp="20201112 09:55:28.260" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:28.268" endtime="20201112 09:55:30.384"></status>
</kw>
<msg timestamp="20201112 09:55:30.385" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5488037, 'wakeups': [5498046, 5508056, 5518066, 5528045, 5538055, 5548...</msg>
<status status="PASS" starttime="20201112 09:55:28.267" endtime="20201112 09:55:30.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.391" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5488037, 'wakeups': [5498046, 5508056, 5518066, 5528045, 5538055, 5548...</msg>
<status status="PASS" starttime="20201112 09:55:30.387" endtime="20201112 09:55:30.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:30.393" endtime="20201112 09:55:30.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.264" endtime="20201112 09:55:30.397"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.262" endtime="20201112 09:55:30.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:30.404" level="INFO">${RESULT} = {'start-time': 5488037, 'wakeups': [5498046, 5508056, 5518066, 5528045, 5538055, 5548065, 5558044, 5568054, 5578063, 5588043, 5598052, 5608062, 5618041, 5628051, 5638061, 5648040, 5658050, 5668060, 56...</msg>
<status status="PASS" starttime="20201112 09:55:30.400" endtime="20201112 09:55:30.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.412" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:30.410" endtime="20201112 09:55:30.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.417" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:30.415" endtime="20201112 09:55:30.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.406" endtime="20201112 09:55:30.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.427" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:55:30.425" endtime="20201112 09:55:30.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.431" level="INFO">VALUE: 5488037</msg>
<status status="PASS" starttime="20201112 09:55:30.430" endtime="20201112 09:55:30.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.420" endtime="20201112 09:55:30.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.439" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:30.438" endtime="20201112 09:55:30.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.441" level="INFO">VALUE: [5498046, 5508056, 5518066, 5528045, 5538055, 5548065, 5558044, 5568054, 5578063, 5588043, 5598052, 5608062, 5618041, 5628051, 5638061, 5648040, 5658050, 5668060, 5678039, 5688049, 5698059, 5708038, 5718048, 5728057, 5738067, 5748046, 5758056, 5768066, 5778045, 5788055, 5798065, 5808044, 5818054, 5828063, 5838043, 5848052, 5858062, 5868041, 5878051, 5888061, 5898040, 5908050, 5918060, 5928039, 5938049, 5948059, 5958038, 5968048, 5978057, 5988067, 5998046, 6008056, 6018066, 6028045, 6038055, 6048065, 6058044, 6068054, 6078063, 6088043, 6098052, 6108062, 6118041, 6128051, 6138061, 6148040, 6158050, 6168060, 6178039, 6188049, 6198059, 6208038, 6218048, 6228057, 6238067, 6248046, 6258056, 6268066, 6278045, 6288055, 6298065, 6308044, 6318054, 6328063, 6338043, 6348052, 6358062, 6368041, 6378051, 6388061, 6398040, 6408050, 6418060, 6428039, 6438049, 6448059, 6458038, 6468048, 6478057, 6488067]</msg>
<status status="PASS" starttime="20201112 09:55:30.440" endtime="20201112 09:55:30.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.435" endtime="20201112 09:55:30.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:30.455" endtime="20201112 09:55:30.747"></status>
</kw>
<msg timestamp="20201112 09:55:30.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02179775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031793375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:30.453" endtime="20201112 09:55:30.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02179775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031793375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:30.751" endtime="20201112 09:55:30.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:30.758" endtime="20201112 09:55:30.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.450" endtime="20201112 09:55:30.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.444" endtime="20201112 09:55:30.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:30.784" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:30.762" endtime="20201112 09:55:30.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.789" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:55:30.788" endtime="20201112 09:55:30.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.791" level="INFO">VALUE: 0.02179775</msg>
<status status="PASS" starttime="20201112 09:55:30.790" endtime="20201112 09:55:30.791"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.785" endtime="20201112 09:55:30.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.796" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:30.795" endtime="20201112 09:55:30.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.798" level="INFO">VALUE: [0.031793375, 0.041802833, 0.05181225, 0.061791194, 0.07180075, 0.081810153, 0.091789056, 0.101798458, 0.111807917, 0.121786847, 0.131796319, 0.141805722, 0.151784708, 0.161794222, 0.171803639, 0.181782486, 0.191792, 0.201801444, 0.211780375, 0.221789833, 0.231799319, 0.241778222, 0.251787667, 0.261797083, 0.271806625, 0.281785486, 0.291794903, 0.301804417, 0.311783319, 0.32179275, 0.331802236, 0.341781167, 0.351790653, 0.361800028, 0.371779056, 0.381788458, 0.391797889, 0.401776861, 0.411786264, 0.421795736, 0.431774694, 0.441784194, 0.451793583, 0.461772542, 0.471781958, 0.481791417, 0.491770361, 0.501779792, 0.511789236, 0.521798722, 0.531777653, 0.541787167, 0.551796583, 0.561775458, 0.571784931, 0.581794333, 0.591773292, 0.601782708, 0.611792222, 0.621771153, 0.631780639, 0.641790056, 0.651768972, 0.661778444, 0.671787931, 0.681766833, 0.691776278, 0.701785681, 0.711764625, 0.721774083, 0.731783597, 0.741762514, 0.751771958, 0.761781431, 0.771790917, 0.781769764, 0.791779264, 0.801788667, 0.811767625, 0.821777125, 0.8317865, 0.841765472, 0.851774917, 0.861784389, 0.871763264, 0.881772764, 0.891782167, 0.901761153, 0.911770583, 0.921780014, 0.931758958, 0.941768403, 0.951777861, 0.961756819, 0.971766264, 0.981775694, 0.991754722, 1.001764097, 1.011773569, 1.021783014] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:30.797" endtime="20201112 09:55:30.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.792" endtime="20201112 09:55:30.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:30.801" endtime="20201112 09:55:30.803"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:30.806" endtime="20201112 09:55:30.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.803" endtime="20201112 09:55:30.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.800" endtime="20201112 09:55:30.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.261" endtime="20201112 09:55:30.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.159" endtime="20201112 09:55:30.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.158" endtime="20201112 09:55:30.827"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:55:30.829" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:30.838" endtime="20201112 09:55:32.937"></status>
</kw>
<msg timestamp="20201112 09:55:32.938" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8055664, 'wakeups': [8065704, 8075683, 8085693, 8095672, 8105682, 8115...</msg>
<status status="PASS" starttime="20201112 09:55:30.836" endtime="20201112 09:55:32.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.940" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8055664, 'wakeups': [8065704, 8075683, 8085693, 8095672, 8105682, 8115...</msg>
<status status="PASS" starttime="20201112 09:55:32.939" endtime="20201112 09:55:32.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.941" endtime="20201112 09:55:32.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.833" endtime="20201112 09:55:32.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.831" endtime="20201112 09:55:32.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:32.947" level="INFO">${RESULT} = {'start-time': 8055664, 'wakeups': [8065704, 8075683, 8085693, 8095672, 8105682, 8115692, 8125671, 8135681, 8145690, 8155670, 8165679, 8175689, 8185668, 8195678, 8205688, 8215667, 8225677, 8235687, 82...</msg>
<status status="PASS" starttime="20201112 09:55:32.945" endtime="20201112 09:55:32.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.951" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:32.950" endtime="20201112 09:55:32.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.953" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:32.952" endtime="20201112 09:55:32.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.948" endtime="20201112 09:55:32.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.958" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:55:32.957" endtime="20201112 09:55:32.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.960" level="INFO">VALUE: 8055664</msg>
<status status="PASS" starttime="20201112 09:55:32.959" endtime="20201112 09:55:32.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.954" endtime="20201112 09:55:32.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.965" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:32.964" endtime="20201112 09:55:32.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.967" level="INFO">VALUE: [8065704, 8075683, 8085693, 8095672, 8105682, 8115692, 8125671, 8135681, 8145690, 8155670, 8165679, 8175689, 8185668, 8195678, 8205688, 8215667, 8225677, 8235687, 8245666, 8255676, 8265686, 8275665, 8285675, 8295684, 8305694, 8315673, 8325683, 8335693, 8345672, 8355682, 8365692, 8375671, 8385681, 8395690, 8405670, 8415679, 8425689, 8435668, 8445678, 8455688, 8465667, 8475677, 8485687, 8495666, 8505676, 8515686, 8525665, 8535675, 8545684, 8555694, 8565673, 8575683, 8585693, 8595672, 8605682, 8615692, 8625671, 8635681, 8645690, 8655670, 8665679, 8675689, 8685668, 8695678, 8705688, 8715667, 8725677, 8735687, 8745666, 8755676, 8765686, 8775665, 8785675, 8795684, 8805694, 8815673, 8825683, 8835693, 8845672, 8855682, 8865692, 8875671, 8885681, 8895690, 8905670, 8915679, 8925689, 8935668, 8945678, 8955688, 8965667, 8975677, 8985687, 8995666, 9005676, 9015686, 9025665, 9035675, 9045684, 9055694]</msg>
<status status="PASS" starttime="20201112 09:55:32.966" endtime="20201112 09:55:32.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.961" endtime="20201112 09:55:32.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.974" endtime="20201112 09:55:33.267"></status>
</kw>
<msg timestamp="20201112 09:55:33.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022783597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032808014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:32.973" endtime="20201112 09:55:33.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:33.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022783597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032808014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:33.271" endtime="20201112 09:55:33.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:33.279" endtime="20201112 09:55:33.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.970" endtime="20201112 09:55:33.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.968" endtime="20201112 09:55:33.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:33.306" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:33.283" endtime="20201112 09:55:33.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:33.311" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:55:33.310" endtime="20201112 09:55:33.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:33.313" level="INFO">VALUE: 0.022783597</msg>
<status status="PASS" starttime="20201112 09:55:33.312" endtime="20201112 09:55:33.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.307" endtime="20201112 09:55:33.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:33.318" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:33.317" endtime="20201112 09:55:33.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:33.320" level="INFO">VALUE: [0.032808014, 0.042803681, 0.052813278, 0.062792236, 0.072801625, 0.082811139, 0.092790083, 0.102799514, 0.112808944, 0.122787847, 0.132797403, 0.142806819, 0.152785722, 0.16279525, 0.172804639, 0.182783597, 0.192793056, 0.202802431, 0.212781403, 0.222790847, 0.232800306, 0.242779278, 0.252788653, 0.262798153, 0.272807569, 0.282786556, 0.292795972, 0.302805403, 0.312784347, 0.322793792, 0.332803236, 0.342782264, 0.352791653, 0.362801056, 0.37278, 0.382789486, 0.392798958, 0.402777778, 0.412787292, 0.42279675, 0.432775708, 0.442785167, 0.452794653, 0.462773528, 0.472783, 0.482792417, 0.492771389, 0.502780861, 0.512790333, 0.522799722, 0.532778694, 0.542788139, 0.552797528, 0.562776472, 0.572785944, 0.582795319, 0.592774292, 0.602783736, 0.612793264, 0.622772167, 0.632781639, 0.642791097, 0.652769917, 0.662779403, 0.672788833, 0.682767819, 0.692777292, 0.70278675, 0.712765667, 0.722775139, 0.732784556, 0.7427635, 0.752772903, 0.762782458, 0.772791806, 0.782770861, 0.792780194, 0.802789722, 0.812768611, 0.822778056, 0.832787514, 0.842766486, 0.852775944, 0.862785347, 0.872764278, 0.88277375, 0.892783208, 0.902762125, 0.912771653, 0.922781056, 0.932759986, 0.942769389, 0.952778861, 0.962757778, 0.972767278, 0.982776722, 0.992755736, 1.002765111, 1.012774514, 1.022783986] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:33.319" endtime="20201112 09:55:33.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.314" endtime="20201112 09:55:33.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:33.323" endtime="20201112 09:55:33.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:33.327" endtime="20201112 09:55:33.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.325" endtime="20201112 09:55:33.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.322" endtime="20201112 09:55:33.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.830" endtime="20201112 09:55:33.347"></status>
</kw>
<msg timestamp="20201112 09:55:33.348" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:33.356" endtime="20201112 09:55:35.477"></status>
</kw>
<msg timestamp="20201112 09:55:35.478" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10573059, 'wakeups': [10583068, 10593078, 10603088, 10613067, 10623077...</msg>
<status status="PASS" starttime="20201112 09:55:33.354" endtime="20201112 09:55:35.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.481" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10573059, 'wakeups': [10583068, 10593078, 10603088, 10613067, 10623077...</msg>
<status status="PASS" starttime="20201112 09:55:35.479" endtime="20201112 09:55:35.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.482" endtime="20201112 09:55:35.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.352" endtime="20201112 09:55:35.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.350" endtime="20201112 09:55:35.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:35.487" level="INFO">${RESULT} = {'start-time': 10573059, 'wakeups': [10583068, 10593078, 10603088, 10613067, 10623077, 10633087, 10643066, 10653076, 10663085, 10673065, 10683074, 10693084, 10703063, 10713073, 10723083, 10733062, 107...</msg>
<status status="PASS" starttime="20201112 09:55:35.485" endtime="20201112 09:55:35.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.495" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:35.494" endtime="20201112 09:55:35.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.497" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:35.496" endtime="20201112 09:55:35.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.488" endtime="20201112 09:55:35.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.502" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:55:35.501" endtime="20201112 09:55:35.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.504" level="INFO">VALUE: 10573059</msg>
<status status="PASS" starttime="20201112 09:55:35.503" endtime="20201112 09:55:35.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.499" endtime="20201112 09:55:35.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.509" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:35.508" endtime="20201112 09:55:35.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.511" level="INFO">VALUE: [10583068, 10593078, 10603088, 10613067, 10623077, 10633087, 10643066, 10653076, 10663085, 10673065, 10683074, 10693084, 10703063, 10713073, 10723083, 10733062, 10743072, 10753082, 10763061, 10773071, 10783081, 10793060, 10803070, 10813079, 10823089, 10833068, 10843078, 10853088, 10863067, 10873077, 10883087, 10893066, 10903076, 10913085, 10923065, 10933074, 10943084, 10953063, 10963073, 10973083, 10983062, 10993072, 11003082, 11013061, 11023071, 11033081, 11043060, 11053070, 11063079, 11073089, 11083068, 11093078, 11103088, 11113067, 11123077, 11133087, 11143066, 11153076, 11163085, 11173065, 11183074, 11193084, 11203063, 11213073, 11223083, 11233062, 11243072, 11253082, 11263061, 11273071, 11283081, 11293060, 11303070, 11313079, 11323089, 11333068, 11343078, 11353088, 11363067, 11373077, 11383087, 11393066, 11403076, 11413085, 11423065, 11433074, 11443084, 11453063, 11463073, 11473083, 11483062, 11493072, 11503082, 11513061, 11523071, 11533081, 11543060, 11553070, 11563079, 11573089]</msg>
<status status="PASS" starttime="20201112 09:55:35.510" endtime="20201112 09:55:35.512"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.506" endtime="20201112 09:55:35.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.518" endtime="20201112 09:55:35.809"></status>
</kw>
<msg timestamp="20201112 09:55:35.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018693833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028720181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:35.517" endtime="20201112 09:55:35.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018693833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028720181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:35.813" endtime="20201112 09:55:35.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.820" endtime="20201112 09:55:35.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.514" endtime="20201112 09:55:35.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.513" endtime="20201112 09:55:35.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:35.847" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:35.824" endtime="20201112 09:55:35.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.852" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:55:35.850" endtime="20201112 09:55:35.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.853" level="INFO">VALUE: 0.018693833</msg>
<status status="PASS" starttime="20201112 09:55:35.853" endtime="20201112 09:55:35.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.848" endtime="20201112 09:55:35.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.859" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:35.858" endtime="20201112 09:55:35.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.861" level="INFO">VALUE: [0.028720181, 0.038729597, 0.048739097, 0.058718083, 0.068727486, 0.078736917, 0.088715847, 0.098725319, 0.108734806, 0.118713708, 0.128723194, 0.138732542, 0.148711528, 0.158720931, 0.168730403, 0.178709319, 0.188718819, 0.198728264, 0.208707194, 0.218716639, 0.228726056, 0.238705056, 0.248714486, 0.258723958, 0.268733333, 0.278712361, 0.288721736, 0.298731167, 0.308710139, 0.318719639, 0.328729042, 0.338707931, 0.348717444, 0.358726875, 0.368705833, 0.378715278, 0.388724694, 0.398703708, 0.408713167, 0.418722569, 0.428701458, 0.438710958, 0.448720389, 0.458699306, 0.468708764, 0.478718222, 0.488697167, 0.498706653, 0.508716028, 0.518725542, 0.528704458, 0.538713861, 0.548723306, 0.558702278, 0.56871175, 0.578721208, 0.588700125, 0.598709597, 0.608719, 0.618697944, 0.628707444, 0.638716861, 0.648695736, 0.658705236, 0.668714694, 0.678693556, 0.688703056, 0.698712542, 0.708691431, 0.718700931, 0.728710375, 0.738689292, 0.748698792, 0.758708222, 0.768717667, 0.778696583, 0.788706069, 0.798715514, 0.808694403, 0.818703903, 0.828713319, 0.838692264, 0.848701708, 0.858711194, 0.868690042, 0.878699583, 0.888709028, 0.898687917, 0.908697403, 0.918706861, 0.928685736, 0.938695222, 0.948704639, 0.958683681, 0.968693028, 0.978702569, 0.988681417, 0.998690944, 1.008700347, 1.018709819] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:35.860" endtime="20201112 09:55:35.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.855" endtime="20201112 09:55:35.862"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.865" endtime="20201112 09:55:35.866"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:35.868" endtime="20201112 09:55:35.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.867" endtime="20201112 09:55:35.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.863" endtime="20201112 09:55:35.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.348" endtime="20201112 09:55:35.889"></status>
</kw>
<msg timestamp="20201112 09:55:35.889" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.897" endtime="20201112 09:55:38.020"></status>
</kw>
<msg timestamp="20201112 09:55:38.022" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13115570, 'wakeups': [13125579, 13135589, 13145599, 13155578, 13165588...</msg>
<status status="PASS" starttime="20201112 09:55:35.895" endtime="20201112 09:55:38.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.028" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13115570, 'wakeups': [13125579, 13135589, 13145599, 13155578, 13165588...</msg>
<status status="PASS" starttime="20201112 09:55:38.024" endtime="20201112 09:55:38.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.030" endtime="20201112 09:55:38.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.893" endtime="20201112 09:55:38.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.891" endtime="20201112 09:55:38.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:38.036" level="INFO">${RESULT} = {'start-time': 13115570, 'wakeups': [13125579, 13135589, 13145599, 13155578, 13165588, 13175598, 13185577, 13195587, 13205596, 13215576, 13225585, 13235595, 13245574, 13255584, 13265594, 13275573, 132...</msg>
<status status="PASS" starttime="20201112 09:55:38.034" endtime="20201112 09:55:38.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.040" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:38.039" endtime="20201112 09:55:38.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.042" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:38.041" endtime="20201112 09:55:38.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.037" endtime="20201112 09:55:38.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.047" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:55:38.046" endtime="20201112 09:55:38.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.050" level="INFO">VALUE: 13115570</msg>
<status status="PASS" starttime="20201112 09:55:38.048" endtime="20201112 09:55:38.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.043" endtime="20201112 09:55:38.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.055" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:38.054" endtime="20201112 09:55:38.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.058" level="INFO">VALUE: [13125579, 13135589, 13145599, 13155578, 13165588, 13175598, 13185577, 13195587, 13205596, 13215576, 13225585, 13235595, 13245574, 13255584, 13265594, 13275573, 13285583, 13295593, 13305572, 13315582, 13325592, 13335571, 13345581, 13355590, 13365600, 13375579, 13385589, 13395599, 13405578, 13415588, 13425598, 13435577, 13445587, 13455596, 13465576, 13475585, 13485595, 13495574, 13505584, 13515594, 13525573, 13535583, 13545593, 13555572, 13565582, 13575592, 13585571, 13595581, 13605590, 13615600, 13625579, 13635589, 13645599, 13655578, 13665588, 13675598, 13685577, 13695587, 13705596, 13715576, 13725585, 13735595, 13745574, 13755584, 13765594, 13775573, 13785583, 13795593, 13805572, 13815582, 13825592, 13835571, 13845581, 13855590, 13865600, 13875579, 13885589, 13895599, 13905578, 13915588, 13925598, 13935577, 13945587, 13955596, 13965576, 13975585, 13985595, 13995574, 14005584, 14015594, 14025573, 14035583, 14045593, 14055572, 14065582, 14075592, 14085571, 14095581, 14105590, 14115600]</msg>
<status status="PASS" starttime="20201112 09:55:38.056" endtime="20201112 09:55:38.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.052" endtime="20201112 09:55:38.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.065" endtime="20201112 09:55:38.355"></status>
</kw>
<msg timestamp="20201112 09:55:38.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019467028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029495056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:38.063" endtime="20201112 09:55:38.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019467028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029495056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:38.358" endtime="20201112 09:55:38.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.366" endtime="20201112 09:55:38.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.061" endtime="20201112 09:55:38.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.059" endtime="20201112 09:55:38.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:38.393" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:38.369" endtime="20201112 09:55:38.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.397" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:55:38.396" endtime="20201112 09:55:38.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.399" level="INFO">VALUE: 0.019467028</msg>
<status status="PASS" starttime="20201112 09:55:38.398" endtime="20201112 09:55:38.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.394" endtime="20201112 09:55:38.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.405" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:38.404" endtime="20201112 09:55:38.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.408" level="INFO">VALUE: [0.029495056, 0.039504514, 0.049513931, 0.059492875, 0.069502361, 0.079511792, 0.089490708, 0.099500194, 0.109509597, 0.119488542, 0.129498028, 0.139507361, 0.149486375, 0.159495833, 0.169505264, 0.179484194, 0.189493653, 0.199503042, 0.209482069, 0.2194915, 0.229500917, 0.239479889, 0.249489292, 0.25949875, 0.26950825, 0.279487181, 0.289496611, 0.299506014, 0.309484944, 0.319494472, 0.329503917, 0.339482875, 0.349492333, 0.359501694, 0.369480694, 0.379490097, 0.389499569, 0.3994785, 0.409487972, 0.419497403, 0.429476347, 0.439485792, 0.449495208, 0.459474167, 0.469483625, 0.479493111, 0.489472083, 0.499481486, 0.509490903, 0.519500319, 0.529479278, 0.539488764, 0.549498222, 0.559477097, 0.569486611, 0.579496042, 0.589475056, 0.599484472, 0.609493903, 0.619472833, 0.629482306, 0.639491694, 0.649470611, 0.659480125, 0.669489542, 0.679468458, 0.689477931, 0.699487417, 0.709466361, 0.71947575, 0.72948525, 0.739464153, 0.749473639, 0.759483069, 0.769492528, 0.779471514, 0.789480861, 0.799490319, 0.809469306, 0.81947875, 0.82948825, 0.839467181, 0.849476583, 0.859486028, 0.869464903, 0.879474403, 0.889483875, 0.899462806, 0.909472264, 0.919481736, 0.929460625, 0.939470069, 0.949479556, 0.959458472, 0.969467931, 0.979477306, 0.989456292, 0.999465681, 1.009475167, 1.019484667] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:38.407" endtime="20201112 09:55:38.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.401" endtime="20201112 09:55:38.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.411" endtime="20201112 09:55:38.412"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:38.414" endtime="20201112 09:55:38.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.413" endtime="20201112 09:55:38.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.409" endtime="20201112 09:55:38.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.890" endtime="20201112 09:55:38.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.828" endtime="20201112 09:55:38.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.827" endtime="20201112 09:55:38.436"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:55:38.438" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.446" endtime="20201112 09:55:40.575"></status>
</kw>
<msg timestamp="20201112 09:55:40.576" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15668121, 'wakeups': [15678161, 15688140, 15698181, 15708129, 15718170...</msg>
<status status="PASS" starttime="20201112 09:55:38.445" endtime="20201112 09:55:40.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.582" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15668121, 'wakeups': [15678161, 15688140, 15698181, 15708129, 15718170...</msg>
<status status="PASS" starttime="20201112 09:55:40.579" endtime="20201112 09:55:40.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.585" endtime="20201112 09:55:40.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.442" endtime="20201112 09:55:40.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.440" endtime="20201112 09:55:40.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:40.590" level="INFO">${RESULT} = {'start-time': 15668121, 'wakeups': [15678161, 15688140, 15698181, 15708129, 15718170, 15728149, 15738159, 15748138, 15758178, 15768127, 15778167, 15788146, 15798156, 15808135, 15818176, 15828125, 158...</msg>
<status status="PASS" starttime="20201112 09:55:40.589" endtime="20201112 09:55:40.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.595" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:40.594" endtime="20201112 09:55:40.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.597" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:40.596" endtime="20201112 09:55:40.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.591" endtime="20201112 09:55:40.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.602" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:55:40.601" endtime="20201112 09:55:40.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.604" level="INFO">VALUE: 15668121</msg>
<status status="PASS" starttime="20201112 09:55:40.603" endtime="20201112 09:55:40.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.598" endtime="20201112 09:55:40.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.609" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:40.608" endtime="20201112 09:55:40.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.611" level="INFO">VALUE: [15678161, 15688140, 15698181, 15708129, 15718170, 15728149, 15738159, 15748138, 15758178, 15768127, 15778167, 15788146, 15798156, 15808135, 15818176, 15828125, 15838165, 15848144, 15858154, 15868133, 15878173, 15888122, 15898162, 15908142, 15918121, 15928161, 15938140, 15948181, 15958129, 15968170, 15978149, 15988159, 15998138, 16008178, 16018127, 16028167, 16038146, 16048156, 16058135, 16068176, 16078125, 16088165, 16098144, 16108154, 16118133, 16128173, 16138122, 16148162, 16158142, 16168121, 16178161, 16188140, 16198181, 16208129, 16218170, 16228149, 16238159, 16248138, 16258178, 16268127, 16278167, 16288146, 16298156, 16308135, 16318176, 16328125, 16338165, 16348144, 16358154, 16368133, 16378173, 16388122, 16398162, 16408142, 16418121, 16428161, 16438140, 16448181, 16458129, 16468170, 16478149, 16488159, 16498138, 16508178, 16518127, 16528167, 16538146, 16548156, 16558135, 16568176, 16578125, 16588165, 16598144, 16608154, 16618133, 16628173, 16638122, 16648162, 16658142, 16668121]</msg>
<status status="PASS" starttime="20201112 09:55:40.610" endtime="20201112 09:55:40.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.605" endtime="20201112 09:55:40.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.623" endtime="20201112 09:55:40.913"></status>
</kw>
<msg timestamp="20201112 09:55:40.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025647083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035687986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:40.616" endtime="20201112 09:55:40.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025647083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035687986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:40.917" endtime="20201112 09:55:40.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.925" endtime="20201112 09:55:40.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.614" endtime="20201112 09:55:40.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.612" endtime="20201112 09:55:40.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:40.951" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:40.928" endtime="20201112 09:55:40.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.955" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:55:40.954" endtime="20201112 09:55:40.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.957" level="INFO">VALUE: 0.025647083</msg>
<status status="PASS" starttime="20201112 09:55:40.956" endtime="20201112 09:55:40.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.951" endtime="20201112 09:55:40.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.962" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:40.961" endtime="20201112 09:55:40.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.965" level="INFO">VALUE: [0.035687986, 0.045680611, 0.055706708, 0.065669028, 0.075695097, 0.085687903, 0.095683458, 0.105676278, 0.115702333, 0.125664653, 0.135690736, 0.145683653, 0.155679042, 0.165671958, 0.175697986, 0.185660375, 0.195686403, 0.205679278, 0.215674778, 0.225667611, 0.235693694, 0.245656028, 0.255682028, 0.265674917, 0.275654042, 0.285679958, 0.295672792, 0.305698778, 0.315661139, 0.325687208, 0.335680056, 0.345675597, 0.355668444, 0.365694486, 0.375656806, 0.385682861, 0.395675694, 0.405671264, 0.415664056, 0.425690167, 0.435652472, 0.445678514, 0.455671444, 0.465666958, 0.475659806, 0.485685847, 0.495648181, 0.505674194, 0.515667069, 0.52564625, 0.535672097, 0.545664917, 0.555690944, 0.565653319, 0.575679347, 0.58567225, 0.59566775, 0.605660569, 0.615686653, 0.625648958, 0.635675, 0.645667889, 0.655663431, 0.665656292, 0.675682278, 0.685644639, 0.695670694, 0.705663542, 0.715659097, 0.725652042, 0.735677986, 0.745640333, 0.755666333, 0.765659181, 0.775638319, 0.785664194, 0.795657042, 0.805683111, 0.815645347, 0.825671472, 0.835664333, 0.845659847, 0.85565275, 0.865678764, 0.875641125, 0.885667153, 0.895660028, 0.905655569, 0.915648375, 0.925674458, 0.93563675, 0.945662833, 0.955655708, 0.965651194, 0.975644042, 0.985670111, 0.995632444, 1.005658528, 1.015651333, 1.0256305] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:40.964" endtime="20201112 09:55:40.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.959" endtime="20201112 09:55:40.965"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.968" endtime="20201112 09:55:40.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:40.971" endtime="20201112 09:55:40.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.969" endtime="20201112 09:55:40.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.966" endtime="20201112 09:55:40.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.439" endtime="20201112 09:55:40.992"></status>
</kw>
<msg timestamp="20201112 09:55:40.992" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.001" endtime="20201112 09:55:43.125"></status>
</kw>
<msg timestamp="20201112 09:55:43.126" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18220672, 'wakeups': [18230712, 18240692, 18250732, 18260681, 18270721...</msg>
<status status="PASS" starttime="20201112 09:55:40.999" endtime="20201112 09:55:43.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.133" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18220672, 'wakeups': [18230712, 18240692, 18250732, 18260681, 18270721...</msg>
<status status="PASS" starttime="20201112 09:55:43.128" endtime="20201112 09:55:43.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.135" endtime="20201112 09:55:43.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.996" endtime="20201112 09:55:43.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.994" endtime="20201112 09:55:43.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:43.143" level="INFO">${RESULT} = {'start-time': 18220672, 'wakeups': [18230712, 18240692, 18250732, 18260681, 18270721, 18280700, 18290710, 18300689, 18310729, 18320678, 18330718, 18340698, 18350708, 18360687, 18370727, 18380676, 183...</msg>
<status status="PASS" starttime="20201112 09:55:43.141" endtime="20201112 09:55:43.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.148" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:43.147" endtime="20201112 09:55:43.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.150" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:43.149" endtime="20201112 09:55:43.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.144" endtime="20201112 09:55:43.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.154" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:55:43.153" endtime="20201112 09:55:43.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.157" level="INFO">VALUE: 18220672</msg>
<status status="PASS" starttime="20201112 09:55:43.156" endtime="20201112 09:55:43.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.151" endtime="20201112 09:55:43.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.161" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:43.160" endtime="20201112 09:55:43.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.164" level="INFO">VALUE: [18230712, 18240692, 18250732, 18260681, 18270721, 18280700, 18290710, 18300689, 18310729, 18320678, 18330718, 18340698, 18350708, 18360687, 18370727, 18380676, 18390716, 18400695, 18410705, 18420684, 18430725, 18440673, 18450714, 18460693, 18470672, 18480712, 18490692, 18500732, 18510681, 18520721, 18530700, 18540710, 18550689, 18560729, 18570678, 18580718, 18590698, 18600708, 18610687, 18620727, 18630676, 18640716, 18650695, 18660705, 18670684, 18680725, 18690673, 18700714, 18710693, 18720672, 18730712, 18740692, 18750732, 18760681, 18770721, 18780700, 18790710, 18800689, 18810729, 18820678, 18830718, 18840698, 18850708, 18860687, 18870727, 18880676, 18890716, 18900695, 18910705, 18920684, 18930725, 18940673, 18950714, 18960693, 18970672, 18980712, 18990692, 19000732, 19010681, 19020721, 19030700, 19040710, 19050689, 19060729, 19070678, 19080718, 19090698, 19100708, 19110687, 19120727, 19130676, 19140716, 19150695, 19160705, 19170684, 19180725, 19190673, 19200714, 19210693, 19220672]</msg>
<status status="PASS" starttime="20201112 09:55:43.163" endtime="20201112 09:55:43.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.158" endtime="20201112 09:55:43.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.171" endtime="20201112 09:55:43.463"></status>
</kw>
<msg timestamp="20201112 09:55:43.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020894653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030937208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:43.169" endtime="20201112 09:55:43.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020894653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030937208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:43.467" endtime="20201112 09:55:43.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.475" endtime="20201112 09:55:43.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.167" endtime="20201112 09:55:43.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.165" endtime="20201112 09:55:43.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:43.503" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:43.478" endtime="20201112 09:55:43.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.508" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:55:43.507" endtime="20201112 09:55:43.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.510" level="INFO">VALUE: 0.020894653</msg>
<status status="PASS" starttime="20201112 09:55:43.509" endtime="20201112 09:55:43.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.504" endtime="20201112 09:55:43.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.515" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:43.514" endtime="20201112 09:55:43.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.517" level="INFO">VALUE: [0.030937208, 0.040929889, 0.050955903, 0.060918222, 0.070944306, 0.080937111, 0.090932653, 0.100925472, 0.110951542, 0.120913875, 0.130939931, 0.140932764, 0.150928319, 0.160921208, 0.170947236, 0.180909569, 0.190935556, 0.2009285, 0.210923944, 0.220916875, 0.230942903, 0.240905222, 0.25093125, 0.260924139, 0.270903278, 0.280929028, 0.290921931, 0.300948014, 0.310910417, 0.320936486, 0.330929278, 0.340924833, 0.350917667, 0.360943722, 0.370906069, 0.380932125, 0.390924944, 0.400920486, 0.410913319, 0.420939431, 0.430901736, 0.440927778, 0.450920556, 0.460916153, 0.470908986, 0.480935097, 0.490897417, 0.500923458, 0.510916333, 0.520895361, 0.530921264, 0.540914097, 0.550940222, 0.560902528, 0.5709285, 0.580921417, 0.590916986, 0.600909833, 0.610935861, 0.620898194, 0.630924264, 0.640917111, 0.650912653, 0.660905542, 0.670931514, 0.680893875, 0.690919903, 0.700912736, 0.710908264, 0.720901181, 0.730927139, 0.740889528, 0.750915611, 0.760908431, 0.770887611, 0.780913472, 0.790906319, 0.800932361, 0.810894611, 0.820920722, 0.830913556, 0.840909139, 0.850902042, 0.860928028, 0.870890319, 0.880916444, 0.890909222, 0.900904764, 0.910897667, 0.920923653, 0.930886014, 0.940912069, 0.950904903, 0.960900472, 0.970893333, 0.980919347, 0.990881667, 1.000907708, 1.010900569, 1.02087975] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:43.516" endtime="20201112 09:55:43.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.511" endtime="20201112 09:55:43.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.520" endtime="20201112 09:55:43.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:43.524" endtime="20201112 09:55:43.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.522" endtime="20201112 09:55:43.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.519" endtime="20201112 09:55:43.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.993" endtime="20201112 09:55:43.545"></status>
</kw>
<msg timestamp="20201112 09:55:43.545" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.553" endtime="20201112 09:55:45.677"></status>
</kw>
<msg timestamp="20201112 09:55:45.678" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20773193, 'wakeups': [20783264, 20793212, 20803253, 20813201, 20823242...</msg>
<status status="PASS" starttime="20201112 09:55:43.551" endtime="20201112 09:55:45.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.684" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20773193, 'wakeups': [20783264, 20793212, 20803253, 20813201, 20823242...</msg>
<status status="PASS" starttime="20201112 09:55:45.680" endtime="20201112 09:55:45.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.686" endtime="20201112 09:55:45.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.549" endtime="20201112 09:55:45.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.547" endtime="20201112 09:55:45.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:45.696" level="INFO">${RESULT} = {'start-time': 20773193, 'wakeups': [20783264, 20793212, 20803253, 20813201, 20823242, 20833221, 20843231, 20853210, 20863250, 20873199, 20883239, 20893218, 20903228, 20913208, 20923248, 20933197, 209...</msg>
<status status="PASS" starttime="20201112 09:55:45.693" endtime="20201112 09:55:45.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.701" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:45.700" endtime="20201112 09:55:45.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.703" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:45.702" endtime="20201112 09:55:45.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.697" endtime="20201112 09:55:45.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.742" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:55:45.741" endtime="20201112 09:55:45.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.744" level="INFO">VALUE: 20773193</msg>
<status status="PASS" starttime="20201112 09:55:45.743" endtime="20201112 09:55:45.744"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.737" endtime="20201112 09:55:45.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.749" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:45.748" endtime="20201112 09:55:45.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.751" level="INFO">VALUE: [20783264, 20793212, 20803253, 20813201, 20823242, 20833221, 20843231, 20853210, 20863250, 20873199, 20883239, 20893218, 20903228, 20913208, 20923248, 20933197, 20943237, 20953216, 20963226, 20973205, 20983245, 20993194, 21003234, 21013214, 21023193, 21033233, 21043212, 21053253, 21063201, 21073242, 21083221, 21093231, 21103210, 21113250, 21123199, 21133239, 21143218, 21153228, 21163208, 21173248, 21183197, 21193237, 21203216, 21213226, 21223205, 21233245, 21243194, 21253234, 21263214, 21273193, 21283233, 21293212, 21303253, 21313201, 21323242, 21333221, 21343231, 21353210, 21363250, 21373199, 21383239, 21393218, 21403228, 21413208, 21423248, 21433197, 21443237, 21453216, 21463226, 21473205, 21483245, 21493194, 21503234, 21513214, 21523193, 21533233, 21543212, 21553253, 21563201, 21573242, 21583221, 21593231, 21603210, 21613250, 21623199, 21633239, 21643218, 21653228, 21663208, 21673248, 21683197, 21693237, 21703216, 21713226, 21723205, 21733245, 21743194, 21753234, 21763214, 21773193]</msg>
<status status="PASS" starttime="20201112 09:55:45.750" endtime="20201112 09:55:45.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.745" endtime="20201112 09:55:45.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.758" endtime="20201112 09:55:46.048"></status>
</kw>
<msg timestamp="20201112 09:55:46.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020287833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030337278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:45.757" endtime="20201112 09:55:46.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:46.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020287833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030337278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:46.052" endtime="20201112 09:55:46.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.059" endtime="20201112 09:55:46.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.754" endtime="20201112 09:55:46.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.752" endtime="20201112 09:55:46.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:46.085" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:46.063" endtime="20201112 09:55:46.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:46.090" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:55:46.089" endtime="20201112 09:55:46.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:46.092" level="INFO">VALUE: 0.020287833</msg>
<status status="PASS" starttime="20201112 09:55:46.091" endtime="20201112 09:55:46.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.086" endtime="20201112 09:55:46.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:46.098" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:46.097" endtime="20201112 09:55:46.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:46.100" level="INFO">VALUE: [0.030337278, 0.040299417, 0.050325389, 0.060287792, 0.070313833, 0.080306667, 0.090302222, 0.100295111, 0.110321097, 0.120283458, 0.130309542, 0.140302361, 0.150297889, 0.160290764, 0.170316806, 0.180279097, 0.190305167, 0.200298042, 0.210293542, 0.220286403, 0.230312431, 0.240274806, 0.250300833, 0.260293681, 0.270272806, 0.280298667, 0.290291528, 0.300317556, 0.310279931, 0.320305958, 0.330298819, 0.340294403, 0.350287194, 0.360313181, 0.370275639, 0.380301653, 0.390294431, 0.400289931, 0.410282931, 0.420308861, 0.430271264, 0.440297319, 0.450290167, 0.460285694, 0.470278528, 0.480304625, 0.490266875, 0.500292944, 0.510285833, 0.520264958, 0.530290806, 0.540283667, 0.550309708, 0.560272042, 0.570298111, 0.580290944, 0.590286444, 0.600279278, 0.610305361, 0.620267708, 0.630293764, 0.640286611, 0.650282194, 0.660275042, 0.670300931, 0.680263417, 0.690289417, 0.700282319, 0.710277764, 0.720270653, 0.730296694, 0.740259069, 0.750285153, 0.760277958, 0.770257042, 0.780282972, 0.790275792, 0.800301764, 0.810264167, 0.820290194, 0.830283069, 0.840278667, 0.850271514, 0.860297542, 0.870259931, 0.880285986, 0.890278736, 0.90027425, 0.910267167, 0.920293236, 0.930255514, 0.940281569, 0.950274486, 0.960269958, 0.970262819, 0.980288861, 0.990251181, 1.000277236, 1.010270069, 1.02024925] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:46.099" endtime="20201112 09:55:46.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.094" endtime="20201112 09:55:46.102"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.104" endtime="20201112 09:55:46.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:46.107" endtime="20201112 09:55:46.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.106" endtime="20201112 09:55:46.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.102" endtime="20201112 09:55:46.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.546" endtime="20201112 09:55:46.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.437" endtime="20201112 09:55:46.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.436" endtime="20201112 09:55:46.128"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:55:46.131" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.139" endtime="20201112 09:55:48.257"></status>
</kw>
<msg timestamp="20201112 09:55:48.258" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23360931, 'wakeups': [23371002, 23380981, 23390960, 23400970, 23410949...</msg>
<status status="PASS" starttime="20201112 09:55:46.137" endtime="20201112 09:55:48.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.260" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23360931, 'wakeups': [23371002, 23380981, 23390960, 23400970, 23410949...</msg>
<status status="PASS" starttime="20201112 09:55:48.259" endtime="20201112 09:55:48.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:48.261" endtime="20201112 09:55:48.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.135" endtime="20201112 09:55:48.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.133" endtime="20201112 09:55:48.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:48.267" level="INFO">${RESULT} = {'start-time': 23360931, 'wakeups': [23371002, 23380981, 23390960, 23400970, 23410949, 23420989, 23430938, 23440979, 23450958, 23460968, 23470947, 23480987, 23490936, 23500976, 23510955, 23520965, 235...</msg>
<status status="PASS" starttime="20201112 09:55:48.265" endtime="20201112 09:55:48.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.271" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:48.270" endtime="20201112 09:55:48.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.273" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:48.272" endtime="20201112 09:55:48.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.268" endtime="20201112 09:55:48.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.278" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:55:48.277" endtime="20201112 09:55:48.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.280" level="INFO">VALUE: 23360931</msg>
<status status="PASS" starttime="20201112 09:55:48.279" endtime="20201112 09:55:48.280"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.274" endtime="20201112 09:55:48.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.285" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:48.284" endtime="20201112 09:55:48.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.287" level="INFO">VALUE: [23371002, 23380981, 23390960, 23400970, 23410949, 23420989, 23430938, 23440979, 23450958, 23460968, 23470947, 23480987, 23490936, 23500976, 23510955, 23520965, 23530944, 23540985, 23550933, 23560974, 23570953, 23580963, 23590942, 23600982, 23610961, 23620941, 23630981, 23640960, 23650970, 23660949, 23670989, 23680938, 23690979, 23700958, 23710968, 23720947, 23730987, 23740936, 23750976, 23760955, 23770965, 23780944, 23790985, 23800933, 23810974, 23820953, 23830963, 23840942, 23850982, 23860961, 23870941, 23880981, 23890960, 23900970, 23910949, 23920989, 23930938, 23940979, 23950958, 23960968, 23970947, 23980987, 23990936, 24000976, 24010955, 24020965, 24030944, 24040985, 24050933, 24060974, 24070953, 24080963, 24090942, 24100982, 24110961, 24120941, 24130981, 24140960, 24150970, 24160949, 24170989, 24180938, 24190979, 24200958, 24210968, 24220947, 24230987, 24240936, 24250976, 24260955, 24270965, 24280944, 24290985, 24300933, 24310974, 24320953, 24330963, 24340942, 24350982, 24360961]</msg>
<status status="PASS" starttime="20201112 09:55:48.286" endtime="20201112 09:55:48.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.281" endtime="20201112 09:55:48.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:48.296" endtime="20201112 09:55:48.588"></status>
</kw>
<msg timestamp="20201112 09:55:48.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024248708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034310944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:48.294" endtime="20201112 09:55:48.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024248708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034310944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:48.592" endtime="20201112 09:55:48.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:48.600" endtime="20201112 09:55:48.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.291" endtime="20201112 09:55:48.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.289" endtime="20201112 09:55:48.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:48.626" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:48.603" endtime="20201112 09:55:48.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.631" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:55:48.630" endtime="20201112 09:55:48.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.633" level="INFO">VALUE: 0.024248708</msg>
<status status="PASS" starttime="20201112 09:55:48.632" endtime="20201112 09:55:48.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.627" endtime="20201112 09:55:48.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.639" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:48.638" endtime="20201112 09:55:48.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.642" level="INFO">VALUE: [0.034310944, 0.044290833, 0.054283167, 0.064279389, 0.074271611, 0.08429825, 0.094260014, 0.104286681, 0.114278806, 0.124275056, 0.134267306, 0.144294, 0.154255653, 0.164282319, 0.174274486, 0.184270653, 0.194262917, 0.204289625, 0.214251292, 0.224278028, 0.234270306, 0.244266347, 0.254258597, 0.264285292, 0.274264667, 0.284256514, 0.294283111, 0.304275375, 0.314271458, 0.324263722, 0.334290472, 0.344252125, 0.354278847, 0.364270972, 0.374267222, 0.384259417, 0.394285986, 0.404247792, 0.414274417, 0.42426675, 0.434262861, 0.444255042, 0.454281792, 0.464243403, 0.474270056, 0.484262361, 0.494258625, 0.50425075, 0.514277403, 0.524256694, 0.534248528, 0.544275306, 0.5542675, 0.564263639, 0.574255833, 0.584282569, 0.594244222, 0.604270972, 0.614263181, 0.624259347, 0.634251583, 0.644278264, 0.654239944, 0.664266597, 0.674258889, 0.684254986, 0.694247167, 0.704273944, 0.7142355, 0.724262208, 0.734254431, 0.744250583, 0.754242806, 0.764269583, 0.774248903, 0.784240681, 0.794267361, 0.804259625, 0.814255833, 0.824248056, 0.834274681, 0.844236375, 0.854263097, 0.86425525, 0.874251375, 0.884243597, 0.894270375, 0.904232042, 0.914258778, 0.924250986, 0.934247153, 0.944239375, 0.954266056, 0.964227694, 0.974254431, 0.984246653, 0.994242806, 1.004234944, 1.014261736, 1.024240958] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:48.640" endtime="20201112 09:55:48.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.634" endtime="20201112 09:55:48.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:48.645" endtime="20201112 09:55:48.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:48.649" endtime="20201112 09:55:48.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.647" endtime="20201112 09:55:48.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.643" endtime="20201112 09:55:48.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.131" endtime="20201112 09:55:48.671"></status>
</kw>
<msg timestamp="20201112 09:55:48.671" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:48.680" endtime="20201112 09:55:50.806"></status>
</kw>
<msg timestamp="20201112 09:55:50.807" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25903442, 'wakeups': [25913482, 25923492, 25933502, 25943481, 25953491...</msg>
<status status="PASS" starttime="20201112 09:55:48.678" endtime="20201112 09:55:50.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.810" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25903442, 'wakeups': [25913482, 25923492, 25933502, 25943481, 25953491...</msg>
<status status="PASS" starttime="20201112 09:55:50.808" endtime="20201112 09:55:50.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.811" endtime="20201112 09:55:50.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.675" endtime="20201112 09:55:50.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.673" endtime="20201112 09:55:50.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:50.816" level="INFO">${RESULT} = {'start-time': 25903442, 'wakeups': [25913482, 25923492, 25933502, 25943481, 25953491, 25963500, 25973480, 25983489, 25993499, 26003479, 26013488, 26023498, 26033477, 26043487, 26053497, 26063476, 260...</msg>
<status status="PASS" starttime="20201112 09:55:50.814" endtime="20201112 09:55:50.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.820" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:50.819" endtime="20201112 09:55:50.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.822" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:50.821" endtime="20201112 09:55:50.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.817" endtime="20201112 09:55:50.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.827" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:55:50.826" endtime="20201112 09:55:50.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.829" level="INFO">VALUE: 25903442</msg>
<status status="PASS" starttime="20201112 09:55:50.828" endtime="20201112 09:55:50.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.824" endtime="20201112 09:55:50.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.834" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:50.833" endtime="20201112 09:55:50.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.836" level="INFO">VALUE: [25913482, 25923492, 25933502, 25943481, 25953491, 25963500, 25973480, 25983489, 25993499, 26003479, 26013488, 26023498, 26033477, 26043487, 26053497, 26063476, 26073486, 26083496, 26093475, 26103485, 26113494, 26123474, 26133483, 26143493, 26153472, 26163482, 26173492, 26183502, 26193481, 26203491, 26213500, 26223480, 26233489, 26243499, 26253479, 26263488, 26273498, 26283477, 26293487, 26303497, 26313476, 26323486, 26333496, 26343475, 26353485, 26363494, 26373474, 26383483, 26393493, 26403472, 26413482, 26423492, 26433502, 26443481, 26453491, 26463500, 26473480, 26483489, 26493499, 26503479, 26513488, 26523498, 26533477, 26543487, 26553497, 26563476, 26573486, 26583496, 26593475, 26603485, 26613494, 26623474, 26633483, 26643493, 26653472, 26663482, 26673492, 26683502, 26693481, 26703491, 26713500, 26723480, 26733489, 26743499, 26753479, 26763488, 26773498, 26783477, 26793487, 26803497, 26813476, 26823486, 26833496, 26843475, 26853485, 26863494, 26873474, 26883483, 26893493, 26903472]</msg>
<status status="PASS" starttime="20201112 09:55:50.835" endtime="20201112 09:55:50.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.831" endtime="20201112 09:55:50.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.843" endtime="20201112 09:55:51.134"></status>
</kw>
<msg timestamp="20201112 09:55:51.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023890569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033944625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:50.842" endtime="20201112 09:55:51.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:51.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023890569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033944625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:51.137" endtime="20201112 09:55:51.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:51.145" endtime="20201112 09:55:51.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.839" endtime="20201112 09:55:51.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.838" endtime="20201112 09:55:51.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:51.177" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:51.153" endtime="20201112 09:55:51.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:51.181" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:55:51.180" endtime="20201112 09:55:51.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:51.183" level="INFO">VALUE: 0.023890569</msg>
<status status="PASS" starttime="20201112 09:55:51.182" endtime="20201112 09:55:51.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.177" endtime="20201112 09:55:51.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:51.188" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:51.187" endtime="20201112 09:55:51.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:51.190" level="INFO">VALUE: [0.033944625, 0.043953861, 0.053963347, 0.063942264, 0.073951681, 0.083961139, 0.093940056, 0.103949528, 0.113959069, 0.123937931, 0.133947306, 0.143956764, 0.153935722, 0.16394525, 0.173954694, 0.183933569, 0.193942986, 0.203952472, 0.213931347, 0.223940792, 0.23395025, 0.24392925, 0.253938639, 0.263948389, 0.273927708, 0.283936444, 0.293945931, 0.303955417, 0.313934389, 0.323943792, 0.333953278, 0.343932264, 0.353941694, 0.363951139, 0.373930042, 0.383939542, 0.393949, 0.403927917, 0.413937278, 0.423946875, 0.433925736, 0.443935181, 0.453944556, 0.463923681, 0.473932972, 0.483942472, 0.493921431, 0.503930889, 0.513940514, 0.523919806, 0.533928736, 0.543938181, 0.553947597, 0.563926556, 0.573936, 0.583945375, 0.593924347, 0.603933806, 0.613943292, 0.623922139, 0.633931667, 0.643941083, 0.653920014, 0.663929514, 0.673938958, 0.683917889, 0.69392725, 0.703936792, 0.713915764, 0.723925222, 0.733934667, 0.743913569, 0.753922986, 0.763932681, 0.773912069, 0.783920861, 0.793930194, 0.803939792, 0.813918681, 0.823928014, 0.833937514, 0.843916486, 0.853925861, 0.863935403, 0.873914361, 0.883923792, 0.893933208, 0.903912222, 0.913921667, 0.923931069, 0.933910097, 0.9439195, 0.953928903, 0.963907861, 0.973917278, 0.983926736, 0.993905583, 1.003915139, 1.013924778, 1.023904111] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:51.189" endtime="20201112 09:55:51.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.185" endtime="20201112 09:55:51.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:51.194" endtime="20201112 09:55:51.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:51.197" endtime="20201112 09:55:51.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.195" endtime="20201112 09:55:51.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.192" endtime="20201112 09:55:51.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.671" endtime="20201112 09:55:51.218"></status>
</kw>
<msg timestamp="20201112 09:55:51.218" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:51.226" endtime="20201112 09:55:53.351"></status>
</kw>
<msg timestamp="20201112 09:55:53.352" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28445953, 'wakeups': [28455993, 28466003, 28476013, 28485992, 28496002...</msg>
<status status="PASS" starttime="20201112 09:55:51.224" endtime="20201112 09:55:53.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.358" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28445953, 'wakeups': [28455993, 28466003, 28476013, 28485992, 28496002...</msg>
<status status="PASS" starttime="20201112 09:55:53.354" endtime="20201112 09:55:53.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.360" endtime="20201112 09:55:53.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.222" endtime="20201112 09:55:53.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.220" endtime="20201112 09:55:53.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:53.366" level="INFO">${RESULT} = {'start-time': 28445953, 'wakeups': [28455993, 28466003, 28476013, 28485992, 28496002, 28506011, 28515991, 28526000, 28536010, 28545989, 28555999, 28566009, 28575988, 28585998, 28596008, 28605987, 286...</msg>
<status status="PASS" starttime="20201112 09:55:53.364" endtime="20201112 09:55:53.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.370" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:53.369" endtime="20201112 09:55:53.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.372" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:53.371" endtime="20201112 09:55:53.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.366" endtime="20201112 09:55:53.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.377" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:55:53.376" endtime="20201112 09:55:53.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.380" level="INFO">VALUE: 28445953</msg>
<status status="PASS" starttime="20201112 09:55:53.379" endtime="20201112 09:55:53.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.374" endtime="20201112 09:55:53.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.385" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:53.384" endtime="20201112 09:55:53.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.387" level="INFO">VALUE: [28455993, 28466003, 28476013, 28485992, 28496002, 28506011, 28515991, 28526000, 28536010, 28545989, 28555999, 28566009, 28575988, 28585998, 28596008, 28605987, 28615997, 28626007, 28635986, 28645996, 28656005, 28665985, 28675994, 28686004, 28695983, 28705993, 28716003, 28726013, 28735992, 28746002, 28756011, 28765991, 28776000, 28786010, 28795989, 28805999, 28816009, 28825988, 28835998, 28846008, 28855987, 28865997, 28876007, 28885986, 28895996, 28906005, 28915985, 28925994, 28936004, 28945983, 28955993, 28966003, 28976013, 28985992, 28996002, 29006011, 29015991, 29026000, 29036010, 29045989, 29055999, 29066009, 29075988, 29085998, 29096008, 29105987, 29115997, 29126007, 29135986, 29145996, 29156005, 29165985, 29175994, 29186004, 29195983, 29205993, 29216003, 29226013, 29235992, 29246002, 29256011, 29265991, 29276000, 29286010, 29295989, 29305999, 29316009, 29325988, 29335998, 29346008, 29355987, 29365997, 29376007, 29385986, 29395996, 29406005, 29415985, 29425994, 29436004, 29445983]</msg>
<status status="PASS" starttime="20201112 09:55:53.386" endtime="20201112 09:55:53.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.382" endtime="20201112 09:55:53.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.395" endtime="20201112 09:55:53.687"></status>
</kw>
<msg timestamp="20201112 09:55:53.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018762139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028829, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:55:53.393" endtime="20201112 09:55:53.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018762139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028829, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:55:53.690" endtime="20201112 09:55:53.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.698" endtime="20201112 09:55:53.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.391" endtime="20201112 09:55:53.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.389" endtime="20201112 09:55:53.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:53.725" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:53.701" endtime="20201112 09:55:53.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.729" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:55:53.728" endtime="20201112 09:55:53.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.731" level="INFO">VALUE: 0.018762139</msg>
<status status="PASS" starttime="20201112 09:55:53.730" endtime="20201112 09:55:53.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.726" endtime="20201112 09:55:53.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.736" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:53.735" endtime="20201112 09:55:53.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.740" level="INFO">VALUE: [0.028829, 0.038838153, 0.048847653, 0.058826625, 0.068836083, 0.078845569, 0.088824347, 0.098833944, 0.108843306, 0.118822292, 0.128831722, 0.138841208, 0.148820056, 0.158829472, 0.168838986, 0.178817903, 0.188827361, 0.198836778, 0.208815778, 0.218825278, 0.228834736, 0.238813653, 0.248823069, 0.258832819, 0.268812083, 0.278820931, 0.288830389, 0.298839806, 0.308818792, 0.318828278, 0.328837681, 0.338816639, 0.348826097, 0.358835597, 0.368814472, 0.378823944, 0.388833306, 0.398812236, 0.408821667, 0.418831153, 0.428810069, 0.438819569, 0.448828944, 0.458807944, 0.468817347, 0.478826806, 0.488805778, 0.498815222, 0.508824819, 0.518804181, 0.528812986, 0.538822583, 0.548831944, 0.558810889, 0.56882025, 0.578829778, 0.588808708, 0.598818111, 0.608827569, 0.618806542, 0.628816056, 0.638825458, 0.648804333, 0.658813861, 0.668823278, 0.678802125, 0.688811681, 0.698821208, 0.708799972, 0.718809458, 0.728818903, 0.738797889, 0.748807292, 0.758816958, 0.768796236, 0.778805111, 0.788814653, 0.798824083, 0.808803069, 0.818812431, 0.828821931, 0.838800875, 0.848810208, 0.858819764, 0.868798667, 0.878808208, 0.888817556, 0.898796458, 0.908806014, 0.918815361, 0.928794375, 0.938803819, 0.948813278, 0.958792139, 0.968801653, 0.978811097, 0.988790083, 0.998799472, 1.008809153, 1.018788444] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:53.738" endtime="20201112 09:55:53.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.732" endtime="20201112 09:55:53.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.743" endtime="20201112 09:55:53.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:53.746" endtime="20201112 09:55:53.766"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.745" endtime="20201112 09:55:53.766"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.741" endtime="20201112 09:55:53.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.219" endtime="20201112 09:55:53.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.129" endtime="20201112 09:55:53.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.129" endtime="20201112 09:55:53.767"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:55:53.770" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.778" endtime="20201112 09:55:55.900"></status>
</kw>
<msg timestamp="20201112 09:55:55.902" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 30998474, 'wakeups': [31008575, 31018524, 31028503, 31038543, 31048522...</msg>
<status status="PASS" starttime="20201112 09:55:53.776" endtime="20201112 09:55:55.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.907" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 30998474, 'wakeups': [31008575, 31018524, 31028503, 31038543, 31048522...</msg>
<status status="PASS" starttime="20201112 09:55:55.904" endtime="20201112 09:55:55.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.910" endtime="20201112 09:55:55.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.774" endtime="20201112 09:55:55.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.772" endtime="20201112 09:55:55.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:55.918" level="INFO">${RESULT} = {'start-time': 30998474, 'wakeups': [31008575, 31018524, 31028503, 31038543, 31048522, 31058502, 31068542, 31078521, 31088500, 31098541, 31108520, 31118499, 31128540, 31138519, 31148498, 31158538, 311...</msg>
<status status="PASS" starttime="20201112 09:55:55.916" endtime="20201112 09:55:55.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.922" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:55.921" endtime="20201112 09:55:55.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.924" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:55.923" endtime="20201112 09:55:55.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.919" endtime="20201112 09:55:55.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.929" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:55:55.928" endtime="20201112 09:55:55.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.931" level="INFO">VALUE: 30998474</msg>
<status status="PASS" starttime="20201112 09:55:55.930" endtime="20201112 09:55:55.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.926" endtime="20201112 09:55:55.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.936" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:55.935" endtime="20201112 09:55:55.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.939" level="INFO">VALUE: [31008575, 31018524, 31028503, 31038543, 31048522, 31058502, 31068542, 31078521, 31088500, 31098541, 31108520, 31118499, 31128540, 31138519, 31148498, 31158538, 31168518, 31178497, 31188537, 31198516, 31208496, 31218536, 31228515, 31238494, 31248565, 31258514, 31268493, 31278564, 31288513, 31298492, 31308563, 31318511, 31328491, 31338562, 31348510, 31358489, 31368560, 31378509, 31388488, 31398559, 31408508, 31418487, 31428558, 31438507, 31448486, 31458557, 31468505, 31478485, 31488555, 31498535, 31508483, 31518554, 31528533, 31538482, 31548553, 31558532, 31568481, 31578552, 31588531, 31598480, 31608551, 31618530, 31628479, 31638549, 31648529, 31658477, 31668548, 31678527, 31688476, 31698547, 31708526, 31718475, 31728546, 31738525, 31748504, 31758544, 31768524, 31778503, 31788543, 31798522, 31808502, 31818542, 31828521, 31838500, 31848541, 31858520, 31868499, 31878540, 31888519, 31898498, 31908538, 31918518, 31928497, 31938537, 31948516, 31958496, 31968536, 31978515, 31988494, 31998565]</msg>
<status status="PASS" starttime="20201112 09:55:55.937" endtime="20201112 09:55:55.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.932" endtime="20201112 09:55:55.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.947" endtime="20201112 09:55:56.239"></status>
</kw>
<msg timestamp="20201112 09:55:56.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021667222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031759597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:55.944" endtime="20201112 09:55:56.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:56.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021667222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031759597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:56.243" endtime="20201112 09:55:56.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:56.250" endtime="20201112 09:55:56.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.942" endtime="20201112 09:55:56.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.940" endtime="20201112 09:55:56.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:56.276" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:56.254" endtime="20201112 09:55:56.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:56.281" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:55:56.280" endtime="20201112 09:55:56.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:56.283" level="INFO">VALUE: 0.021667222</msg>
<status status="PASS" starttime="20201112 09:55:56.282" endtime="20201112 09:55:56.283"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.277" endtime="20201112 09:55:56.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:56.288" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:56.287" endtime="20201112 09:55:56.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:56.290" level="INFO">VALUE: [0.031759597, 0.041702, 0.051693264, 0.061726347, 0.071699778, 0.081691139, 0.091724083, 0.101697542, 0.111688903, 0.121721972, 0.131695472, 0.141686792, 0.151719889, 0.161693278, 0.171684667, 0.181717708, 0.191691111, 0.201682444, 0.211715625, 0.221688986, 0.231680292, 0.241713375, 0.251686833, 0.261678125, 0.271741722, 0.281684611, 0.291675972, 0.301739528, 0.311682514, 0.321673833, 0.331737431, 0.341680347, 0.351671625, 0.361735306, 0.371678083, 0.381669431, 0.391733, 0.401675903, 0.411667264, 0.421730917, 0.431673764, 0.441665139, 0.451728722, 0.461671708, 0.471662917, 0.481726597, 0.491669458, 0.501660819, 0.511724458, 0.521697736, 0.531658653, 0.541722236, 0.551695625, 0.561656417, 0.571720042, 0.581693472, 0.591654278, 0.601717847, 0.611691306, 0.621652111, 0.631715764, 0.641689125, 0.651649931, 0.661713556, 0.671687028, 0.681647792, 0.691711472, 0.701684847, 0.711645667, 0.721709139, 0.731682681, 0.741643444, 0.751707028, 0.7616805, 0.771671833, 0.781704972, 0.791678389, 0.801669667, 0.811702681, 0.82167625, 0.831667542, 0.841700639, 0.851673986, 0.861665361, 0.871698361, 0.881671833, 0.891663181, 0.901696333, 0.91166975, 0.921661083, 0.931694139, 0.941667597, 0.951658875, 0.961691931, 0.971665347, 0.981656736, 0.991689792, 1.001663264, 1.011654542, 1.021718139] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:56.289" endtime="20201112 09:55:56.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.284" endtime="20201112 09:55:56.291"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:56.293" endtime="20201112 09:55:56.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:56.301" endtime="20201112 09:55:56.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.299" endtime="20201112 09:55:56.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.292" endtime="20201112 09:55:56.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.771" endtime="20201112 09:55:56.321"></status>
</kw>
<msg timestamp="20201112 09:55:56.322" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:56.331" endtime="20201112 09:55:58.439"></status>
</kw>
<msg timestamp="20201112 09:55:58.440" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33551025, 'wakeups': [33561126, 33571075, 33581054, 33591094, 33601074...</msg>
<status status="PASS" starttime="20201112 09:55:56.329" endtime="20201112 09:55:58.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.443" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33551025, 'wakeups': [33561126, 33571075, 33581054, 33591094, 33601074...</msg>
<status status="PASS" starttime="20201112 09:55:58.441" endtime="20201112 09:55:58.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.444" endtime="20201112 09:55:58.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.326" endtime="20201112 09:55:58.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.324" endtime="20201112 09:55:58.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:58.449" level="INFO">${RESULT} = {'start-time': 33551025, 'wakeups': [33561126, 33571075, 33581054, 33591094, 33601074, 33611053, 33621093, 33631072, 33641052, 33651092, 33661071, 33671051, 33681091, 33691070, 33701049, 33711090, 337...</msg>
<status status="PASS" starttime="20201112 09:55:58.447" endtime="20201112 09:55:58.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.453" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:58.452" endtime="20201112 09:55:58.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.455" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:58.454" endtime="20201112 09:55:58.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.450" endtime="20201112 09:55:58.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.460" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:55:58.459" endtime="20201112 09:55:58.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.462" level="INFO">VALUE: 33551025</msg>
<status status="PASS" starttime="20201112 09:55:58.461" endtime="20201112 09:55:58.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.456" endtime="20201112 09:55:58.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.467" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:58.466" endtime="20201112 09:55:58.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.469" level="INFO">VALUE: [33561126, 33571075, 33581054, 33591094, 33601074, 33611053, 33621093, 33631072, 33641052, 33651092, 33661071, 33671051, 33681091, 33691070, 33701049, 33711090, 33721069, 33731048, 33741088, 33751068, 33761047, 33771087, 33781066, 33791046, 33801055, 33811096, 33821075, 33831054, 33841094, 33851074, 33861053, 33871093, 33881072, 33891052, 33901092, 33911071, 33921051, 33931091, 33941070, 33951049, 33961090, 33971069, 33981048, 33991088, 34001068, 34011047, 34021087, 34031066, 34041046, 34051055, 34061096, 34071075, 34081054, 34091094, 34101074, 34111053, 34121093, 34131072, 34141052, 34151092, 34161071, 34171051, 34181091, 34191070, 34201049, 34211090, 34221069, 34231048, 34241088, 34251068, 34261047, 34271087, 34281066, 34291046, 34301055, 34311096, 34321075, 34331054, 34341094, 34351074, 34361053, 34371093, 34381072, 34391052, 34401092, 34411071, 34421051, 34431091, 34441070, 34451049, 34461090, 34471069, 34481048, 34491088, 34501068, 34511047, 34521087, 34531066, 34541046, 34551055]</msg>
<status status="PASS" starttime="20201112 09:55:58.468" endtime="20201112 09:55:58.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.463" endtime="20201112 09:55:58.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.477" endtime="20201112 09:55:58.767"></status>
</kw>
<msg timestamp="20201112 09:55:58.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01942225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029511278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:58.475" endtime="20201112 09:55:58.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01942225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029511278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:58.771" endtime="20201112 09:55:58.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.778" endtime="20201112 09:55:58.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.472" endtime="20201112 09:55:58.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.471" endtime="20201112 09:55:58.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:58.806" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:58.782" endtime="20201112 09:55:58.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.810" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:55:58.809" endtime="20201112 09:55:58.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.812" level="INFO">VALUE: 0.01942225</msg>
<status status="PASS" starttime="20201112 09:55:58.811" endtime="20201112 09:55:58.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.807" endtime="20201112 09:55:58.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.817" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:58.816" endtime="20201112 09:55:58.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.820" level="INFO">VALUE: [0.029511278, 0.039453708, 0.049444972, 0.059478069, 0.069451542, 0.079442819, 0.089475889, 0.099449375, 0.109440722, 0.11947375, 0.129447208, 0.139438542, 0.149471514, 0.159444986, 0.169436361, 0.179469333, 0.189442861, 0.199434194, 0.209467333, 0.219440694, 0.229432028, 0.239465028, 0.249438597, 0.259429833, 0.269444917, 0.279472569, 0.289445903, 0.299437181, 0.309470292, 0.319443611, 0.329435014, 0.339468, 0.349441514, 0.359432833, 0.369465847, 0.379439431, 0.389430694, 0.399463681, 0.409437153, 0.419428444, 0.429461583, 0.439434972, 0.449426347, 0.459459306, 0.469432889, 0.479424153, 0.48945725, 0.499430694, 0.509422083, 0.519436944, 0.529464667, 0.539438, 0.549429236, 0.559462389, 0.569435792, 0.579427083, 0.589460236, 0.599433653, 0.609424944, 0.619457986, 0.629431486, 0.639422792, 0.649455903, 0.659429292, 0.669420667, 0.67945375, 0.689427097, 0.699418431, 0.709451472, 0.719425, 0.729416319, 0.739449375, 0.749422806, 0.759414111, 0.769429028, 0.779456889, 0.789430042, 0.799421389, 0.809454542, 0.819427903, 0.829419236, 0.839452347, 0.84942575, 0.859417069, 0.869450083, 0.879423639, 0.889414889, 0.899447986, 0.909421472, 0.919412806, 0.929445875, 0.939419375, 0.949410597, 0.959443694, 0.969417139, 0.979408472, 0.989441528, 0.999414986, 1.009406236, 1.019421306] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:58.819" endtime="20201112 09:55:58.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.814" endtime="20201112 09:55:58.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.823" endtime="20201112 09:55:58.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:58.826" endtime="20201112 09:55:58.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.825" endtime="20201112 09:55:58.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.821" endtime="20201112 09:55:58.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.322" endtime="20201112 09:55:58.847"></status>
</kw>
<msg timestamp="20201112 09:55:58.847" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.855" endtime="20201112 09:56:00.977"></status>
</kw>
<msg timestamp="20201112 09:56:00.978" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36078460, 'wakeups': [36088562, 36098510, 36108489, 36118530, 36128509...</msg>
<status status="PASS" starttime="20201112 09:55:58.854" endtime="20201112 09:56:00.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.981" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36078460, 'wakeups': [36088562, 36098510, 36108489, 36118530, 36128509...</msg>
<status status="PASS" starttime="20201112 09:56:00.979" endtime="20201112 09:56:00.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.982" endtime="20201112 09:56:00.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.851" endtime="20201112 09:56:00.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.849" endtime="20201112 09:56:00.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:00.988" level="INFO">${RESULT} = {'start-time': 36078460, 'wakeups': [36088562, 36098510, 36108489, 36118530, 36128509, 36138488, 36148529, 36158508, 36168487, 36178527, 36188507, 36198486, 36208526, 36218505, 36228485, 36238525, 362...</msg>
<status status="PASS" starttime="20201112 09:56:00.986" endtime="20201112 09:56:00.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.992" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:00.991" endtime="20201112 09:56:00.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.995" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:00.994" endtime="20201112 09:56:00.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.989" endtime="20201112 09:56:00.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.001" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:56:01.000" endtime="20201112 09:56:01.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.003" level="INFO">VALUE: 36078460</msg>
<status status="PASS" starttime="20201112 09:56:01.003" endtime="20201112 09:56:01.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.996" endtime="20201112 09:56:01.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.008" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:01.007" endtime="20201112 09:56:01.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.011" level="INFO">VALUE: [36088562, 36098510, 36108489, 36118530, 36128509, 36138488, 36148529, 36158508, 36168487, 36178527, 36188507, 36198486, 36208526, 36218505, 36228485, 36238525, 36248504, 36258483, 36268524, 36278503, 36288482, 36298522, 36308502, 36318481, 36328491, 36338531, 36348510, 36358489, 36368530, 36378509, 36388488, 36398529, 36408508, 36418487, 36428527, 36438507, 36448486, 36458526, 36468505, 36478485, 36488525, 36498504, 36508483, 36518524, 36528503, 36538482, 36548522, 36558502, 36568481, 36578491, 36588531, 36598510, 36608489, 36618530, 36628509, 36638488, 36648529, 36658508, 36668487, 36678527, 36688507, 36698486, 36708526, 36718505, 36728485, 36738525, 36748504, 36758483, 36768524, 36778503, 36788482, 36798522, 36808502, 36818481, 36828491, 36838531, 36848510, 36858489, 36868530, 36878509, 36888488, 36898529, 36908508, 36918487, 36928527, 36938507, 36948486, 36958526, 36968505, 36978485, 36988525, 36998504, 37008483, 37018524, 37028503, 37038482, 37048522, 37058502, 37068481, 37078491]</msg>
<status status="PASS" starttime="20201112 09:56:01.009" endtime="20201112 09:56:01.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.005" endtime="20201112 09:56:01.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:01.018" endtime="20201112 09:56:01.310"></status>
</kw>
<msg timestamp="20201112 09:56:01.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020837889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030929333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:01.016" endtime="20201112 09:56:01.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020837889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030929333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:01.314" endtime="20201112 09:56:01.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:01.321" endtime="20201112 09:56:01.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.014" endtime="20201112 09:56:01.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.012" endtime="20201112 09:56:01.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:01.347" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:01.325" endtime="20201112 09:56:01.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.356" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:56:01.355" endtime="20201112 09:56:01.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.358" level="INFO">VALUE: 0.020837889</msg>
<status status="PASS" starttime="20201112 09:56:01.357" endtime="20201112 09:56:01.359"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.353" endtime="20201112 09:56:01.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.364" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:01.363" endtime="20201112 09:56:01.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.366" level="INFO">VALUE: [0.030929333, 0.040871778, 0.050863069, 0.060896125, 0.070869611, 0.080860875, 0.090893958, 0.100867403, 0.110858833, 0.120891847, 0.130865319, 0.140856528, 0.150889639, 0.160863097, 0.170854403, 0.180887361, 0.190860931, 0.200852278, 0.210885389, 0.220858778, 0.230850097, 0.240883153, 0.250856667, 0.260847958, 0.270862931, 0.280890722, 0.290863903, 0.300855194, 0.310888278, 0.320861764, 0.330853042, 0.340886083, 0.350859556, 0.360850917, 0.370883986, 0.380857472, 0.390848736, 0.400881861, 0.410855236, 0.420846542, 0.430879625, 0.440853097, 0.450844417, 0.460877486, 0.470850903, 0.480842236, 0.490875236, 0.500848778, 0.510840097, 0.520855, 0.530882792, 0.540855889, 0.550847333, 0.560880417, 0.570853847, 0.580845167, 0.590878264, 0.600851736, 0.610843042, 0.620876153, 0.630849542, 0.640840847, 0.650873917, 0.660847389, 0.670838625, 0.68087175, 0.690845208, 0.700836528, 0.710869625, 0.720843083, 0.730834403, 0.740867431, 0.750840875, 0.760832153, 0.770847042, 0.780874958, 0.790848097, 0.8008395, 0.810872569, 0.820846028, 0.830837278, 0.840870514, 0.850843847, 0.860835125, 0.870868208, 0.880841611, 0.890832958, 0.900866, 0.9108395, 0.920830764, 0.930864014, 0.940837319, 0.950828639, 0.960861708, 0.970835139, 0.980826486, 0.990859639, 1.000832972, 1.010824292, 1.020839347] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:01.365" endtime="20201112 09:56:01.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.360" endtime="20201112 09:56:01.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:01.369" endtime="20201112 09:56:01.371"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:01.373" endtime="20201112 09:56:01.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.371" endtime="20201112 09:56:01.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.368" endtime="20201112 09:56:01.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.848" endtime="20201112 09:56:01.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.769" endtime="20201112 09:56:01.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.768" endtime="20201112 09:56:01.394"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:56:01.397" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:01.405" endtime="20201112 09:56:03.532"></status>
</kw>
<msg timestamp="20201112 09:56:03.533" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38631011, 'wakeups': [38641143, 38651092, 38661102, 38671051, 38681030...</msg>
<status status="PASS" starttime="20201112 09:56:01.403" endtime="20201112 09:56:03.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.536" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38631011, 'wakeups': [38641143, 38651092, 38661102, 38671051, 38681030...</msg>
<status status="PASS" starttime="20201112 09:56:03.534" endtime="20201112 09:56:03.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.537" endtime="20201112 09:56:03.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.401" endtime="20201112 09:56:03.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.399" endtime="20201112 09:56:03.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:03.542" level="INFO">${RESULT} = {'start-time': 38631011, 'wakeups': [38641143, 38651092, 38661102, 38671051, 38681030, 38691131, 38701080, 38711090, 38721069, 38731018, 38741119, 38751098, 38761077, 38771057, 38781036, 38791107, 388...</msg>
<status status="PASS" starttime="20201112 09:56:03.540" endtime="20201112 09:56:03.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.546" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:03.545" endtime="20201112 09:56:03.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.549" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:03.548" endtime="20201112 09:56:03.549"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.543" endtime="20201112 09:56:03.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.554" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:56:03.553" endtime="20201112 09:56:03.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.556" level="INFO">VALUE: 38631011</msg>
<status status="PASS" starttime="20201112 09:56:03.555" endtime="20201112 09:56:03.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.550" endtime="20201112 09:56:03.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.561" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:03.560" endtime="20201112 09:56:03.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.563" level="INFO">VALUE: [38641143, 38651092, 38661102, 38671051, 38681030, 38691131, 38701080, 38711090, 38721069, 38731018, 38741119, 38751098, 38761077, 38771057, 38781036, 38791107, 38801086, 38811096, 38821044, 38831024, 38841125, 38851074, 38861083, 38871063, 38881011, 38891113, 38901092, 38911102, 38921051, 38931030, 38941131, 38951080, 38961090, 38971069, 38981018, 38991119, 39001098, 39011077, 39021057, 39031036, 39041107, 39051086, 39061096, 39071044, 39081024, 39091125, 39101074, 39111083, 39121063, 39131011, 39141113, 39151092, 39161102, 39171051, 39181030, 39191131, 39201080, 39211090, 39221069, 39231018, 39241119, 39251098, 39261077, 39271057, 39281036, 39291107, 39301086, 39311096, 39321044, 39331024, 39341125, 39351074, 39361083, 39371063, 39381011, 39391113, 39401092, 39411102, 39421051, 39431030, 39441131, 39451080, 39461090, 39471069, 39481018, 39491119, 39501098, 39511077, 39521057, 39531036, 39541107, 39551086, 39561096, 39571044, 39581024, 39591125, 39601074, 39611083, 39621063, 39631011]</msg>
<status status="PASS" starttime="20201112 09:56:03.562" endtime="20201112 09:56:03.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.557" endtime="20201112 09:56:03.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.571" endtime="20201112 09:56:03.863"></status>
</kw>
<msg timestamp="20201112 09:56:03.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026312319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036424569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:03.570" endtime="20201112 09:56:03.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026312319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036424569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:03.867" endtime="20201112 09:56:03.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.875" endtime="20201112 09:56:03.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.566" endtime="20201112 09:56:03.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.564" endtime="20201112 09:56:03.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:03.901" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:03.878" endtime="20201112 09:56:03.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.905" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:56:03.904" endtime="20201112 09:56:03.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.907" level="INFO">VALUE: 0.026312319</msg>
<status status="PASS" starttime="20201112 09:56:03.906" endtime="20201112 09:56:03.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.902" endtime="20201112 09:56:03.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.913" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:03.912" endtime="20201112 09:56:03.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.915" level="INFO">VALUE: [0.036424569, 0.04638375, 0.056374417, 0.066334667, 0.076325569, 0.08641, 0.096369958, 0.106360625, 0.116351569, 0.126311861, 0.136396208, 0.146386708, 0.156346847, 0.166337764, 0.176328528, 0.186382472, 0.196372958, 0.206363597, 0.216323917, 0.226314778, 0.236399139, 0.246359111, 0.256349792, 0.266340736, 0.276301028, 0.286385361, 0.296375875, 0.306366583, 0.316326958, 0.32631775, 0.336402153, 0.346362236, 0.356352722, 0.366343569, 0.376303972, 0.386388458, 0.396378847, 0.406338903, 0.416329833, 0.426320681, 0.436374597, 0.446365042, 0.456355694, 0.466316125, 0.476306889, 0.486391278, 0.496351208, 0.506341917, 0.516332806, 0.526293181, 0.536377528, 0.546368028, 0.556358667, 0.566318986, 0.576309931, 0.586394153, 0.596354111, 0.606344736, 0.61633575, 0.626296056, 0.636380431, 0.646371014, 0.656331083, 0.666321972, 0.676312806, 0.686366667, 0.696357125, 0.706347722, 0.716308208, 0.726299, 0.736383431, 0.746343347, 0.756334014, 0.766324875, 0.77628525, 0.786369597, 0.796360181, 0.806350764, 0.816311153, 0.826301958, 0.836386347, 0.846346222, 0.856336917, 0.866327861, 0.876288181, 0.886372611, 0.896363097, 0.906323194, 0.916314069, 0.926304903, 0.936358875, 0.946349375, 0.956339931, 0.966300292, 0.976291139, 0.986375403, 0.996335528, 1.006326167, 1.016316986, 1.026277403] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:03.914" endtime="20201112 09:56:03.915"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.909" endtime="20201112 09:56:03.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.918" endtime="20201112 09:56:03.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:03.922" endtime="20201112 09:56:03.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.920" endtime="20201112 09:56:03.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.917" endtime="20201112 09:56:03.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.397" endtime="20201112 09:56:03.943"></status>
</kw>
<msg timestamp="20201112 09:56:03.943" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.952" endtime="20201112 09:56:06.066"></status>
</kw>
<msg timestamp="20201112 09:56:06.067" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41178558, 'wakeups': [41188659, 41198638, 41208648, 41218597, 41228576...</msg>
<status status="PASS" starttime="20201112 09:56:03.951" endtime="20201112 09:56:06.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.069" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41178558, 'wakeups': [41188659, 41198638, 41208648, 41218597, 41228576...</msg>
<status status="PASS" starttime="20201112 09:56:06.068" endtime="20201112 09:56:06.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.071" endtime="20201112 09:56:06.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.947" endtime="20201112 09:56:06.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.945" endtime="20201112 09:56:06.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:06.076" level="INFO">${RESULT} = {'start-time': 41178558, 'wakeups': [41188659, 41198638, 41208648, 41218597, 41228576, 41238677, 41248626, 41258636, 41268615, 41278564, 41288665, 41298645, 41308624, 41318603, 41328582, 41338653, 413...</msg>
<status status="PASS" starttime="20201112 09:56:06.074" endtime="20201112 09:56:06.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.080" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:06.079" endtime="20201112 09:56:06.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.082" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:06.081" endtime="20201112 09:56:06.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.077" endtime="20201112 09:56:06.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.087" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:56:06.086" endtime="20201112 09:56:06.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.089" level="INFO">VALUE: 41178558</msg>
<status status="PASS" starttime="20201112 09:56:06.088" endtime="20201112 09:56:06.089"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.083" endtime="20201112 09:56:06.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.094" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:06.093" endtime="20201112 09:56:06.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.096" level="INFO">VALUE: [41188659, 41198638, 41208648, 41218597, 41228576, 41238677, 41248626, 41258636, 41268615, 41278564, 41288665, 41298645, 41308624, 41318603, 41328582, 41338653, 41348632, 41358642, 41368591, 41378570, 41388671, 41398620, 41408630, 41418609, 41428619, 41438629, 41448608, 41458587, 41468658, 41478637, 41488647, 41498596, 41508575, 41518676, 41528625, 41538635, 41548614, 41558563, 41568664, 41578643, 41588623, 41598602, 41608581, 41618652, 41628631, 41638641, 41648590, 41658569, 41668670, 41678649, 41688629, 41698638, 41708618, 41718566, 41728668, 41738647, 41748626, 41758605, 41768585, 41778656, 41788635, 41798645, 41808593, 41818572, 41828674, 41838623, 41848632, 41858612, 41868560, 41878662, 41888641, 41898620, 41908599, 41918579, 41928619, 41938598, 41948577, 41958679, 41968627, 41978637, 41988616, 41998565, 42008666, 42018646, 42028625, 42038604, 42048583, 42058654, 42068634, 42078643, 42088592, 42098571, 42108673, 42118621, 42128631, 42138610, 42148559, 42158660, 42168640, 42178588]</msg>
<status status="PASS" starttime="20201112 09:56:06.095" endtime="20201112 09:56:06.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.090" endtime="20201112 09:56:06.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.104" endtime="20201112 09:56:06.394"></status>
</kw>
<msg timestamp="20201112 09:56:06.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024805097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034910181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:06.102" endtime="20201112 09:56:06.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024805097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034910181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:06.398" endtime="20201112 09:56:06.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.406" endtime="20201112 09:56:06.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.100" endtime="20201112 09:56:06.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.098" endtime="20201112 09:56:06.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:06.432" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:06.409" endtime="20201112 09:56:06.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.437" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:56:06.436" endtime="20201112 09:56:06.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.439" level="INFO">VALUE: 0.024805097</msg>
<status status="PASS" starttime="20201112 09:56:06.438" endtime="20201112 09:56:06.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.433" endtime="20201112 09:56:06.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.444" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:06.443" endtime="20201112 09:56:06.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.446" level="INFO">VALUE: [0.034910181, 0.044899542, 0.054890111, 0.064850431, 0.074841417, 0.084925833, 0.094885806, 0.104876389, 0.114867292, 0.124827625, 0.134912069, 0.144902528, 0.154862667, 0.1648535, 0.174844361, 0.184898125, 0.194888681, 0.204879278, 0.214839667, 0.224830597, 0.234914931, 0.244874903, 0.254865611, 0.264856444, 0.274873153, 0.284863458, 0.294854319, 0.304845111, 0.314899028, 0.324889528, 0.334880139, 0.3448405, 0.354831375, 0.364915653, 0.37487575, 0.384866389, 0.39485725, 0.404817611, 0.414901917, 0.424892403, 0.434852514, 0.444843444, 0.454834319, 0.464888306, 0.474878694, 0.484869319, 0.494829694, 0.504820528, 0.514903847, 0.524884389, 0.534874361, 0.544865042, 0.554855875, 0.564816194, 0.574900597, 0.584891125, 0.594851347, 0.604842056, 0.614832986, 0.624886819, 0.634877319, 0.644868069, 0.654828222, 0.664819181, 0.674903542, 0.684863569, 0.694854181, 0.704845042, 0.714805319, 0.724889736, 0.73488025, 0.744840347, 0.754831181, 0.764822139, 0.774838556, 0.784829153, 0.794819972, 0.804904361, 0.814864361, 0.824854931, 0.834845875, 0.844806222, 0.854890472, 0.864881028, 0.874841181, 0.884832069, 0.894822944, 0.90487675, 0.914867264, 0.924857861, 0.934818194, 0.944809125, 0.9548935, 0.964853528, 0.974844139, 0.984834972, 0.994795333, 1.004879722, 1.014869778, 1.024812167] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:06.445" endtime="20201112 09:56:06.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.440" endtime="20201112 09:56:06.447"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.450" endtime="20201112 09:56:06.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:06.453" endtime="20201112 09:56:06.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.451" endtime="20201112 09:56:06.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.448" endtime="20201112 09:56:06.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.943" endtime="20201112 09:56:06.474"></status>
</kw>
<msg timestamp="20201112 09:56:06.474" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.482" endtime="20201112 09:56:08.607"></status>
</kw>
<msg timestamp="20201112 09:56:08.608" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43705993, 'wakeups': [43716094, 43726074, 43736083, 43746032, 43756011...</msg>
<status status="PASS" starttime="20201112 09:56:06.480" endtime="20201112 09:56:08.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.614" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43705993, 'wakeups': [43716094, 43726074, 43736083, 43746032, 43756011...</msg>
<status status="PASS" starttime="20201112 09:56:08.611" endtime="20201112 09:56:08.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.617" endtime="20201112 09:56:08.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.478" endtime="20201112 09:56:08.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.476" endtime="20201112 09:56:08.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:08.628" level="INFO">${RESULT} = {'start-time': 43705993, 'wakeups': [43716094, 43726074, 43736083, 43746032, 43756011, 43766113, 43776062, 43786071, 43796051, 43805999, 43816101, 43826080, 43836059, 43846038, 43856018, 43866088, 438...</msg>
<status status="PASS" starttime="20201112 09:56:08.624" endtime="20201112 09:56:08.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.636" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:08.634" endtime="20201112 09:56:08.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.640" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:08.639" endtime="20201112 09:56:08.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.629" endtime="20201112 09:56:08.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.645" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:56:08.644" endtime="20201112 09:56:08.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.648" level="INFO">VALUE: 43705993</msg>
<status status="PASS" starttime="20201112 09:56:08.647" endtime="20201112 09:56:08.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.642" endtime="20201112 09:56:08.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.653" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:08.652" endtime="20201112 09:56:08.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.655" level="INFO">VALUE: [43716094, 43726074, 43736083, 43746032, 43756011, 43766113, 43776062, 43786071, 43796051, 43805999, 43816101, 43826080, 43836059, 43846038, 43856018, 43866088, 43876068, 43886077, 43896026, 43906005, 43916107, 43926055, 43936065, 43946044, 43956054, 43966064, 43976043, 43986022, 43996093, 44006072, 44016082, 44026031, 44036010, 44046112, 44056060, 44066070, 44076049, 44085998, 44096099, 44106079, 44116058, 44126037, 44136016, 44146087, 44156066, 44166076, 44176025, 44186004, 44196105, 44206085, 44216064, 44226074, 44236053, 44246002, 44256103, 44266082, 44276062, 44286041, 44296020, 44306091, 44316070, 44326080, 44336029, 44346008, 44356109, 44366058, 44376068, 44386047, 44395996, 44406097, 44416076, 44426055, 44436035, 44446014, 44456054, 44466033, 44476013, 44486114, 44496063, 44506072, 44516052, 44526000, 44536102, 44546081, 44556060, 44566040, 44576019, 44586090, 44596069, 44606079, 44616027, 44626007, 44636108, 44646057, 44656066, 44666046, 44675994, 44686096, 44696075, 44706024]</msg>
<status status="PASS" starttime="20201112 09:56:08.654" endtime="20201112 09:56:08.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.650" endtime="20201112 09:56:08.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.662" endtime="20201112 09:56:08.955"></status>
</kw>
<msg timestamp="20201112 09:56:08.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020665236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030773306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:08.661" endtime="20201112 09:56:08.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020665236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030773306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:08.958" endtime="20201112 09:56:08.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.966" endtime="20201112 09:56:08.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.658" endtime="20201112 09:56:08.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.657" endtime="20201112 09:56:08.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:08.992" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:08.969" endtime="20201112 09:56:08.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.997" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:56:08.996" endtime="20201112 09:56:08.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.999" level="INFO">VALUE: 0.020665236</msg>
<status status="PASS" starttime="20201112 09:56:08.998" endtime="20201112 09:56:08.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.993" endtime="20201112 09:56:09.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:09.005" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:09.003" endtime="20201112 09:56:09.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:09.007" level="INFO">VALUE: [0.030773306, 0.040762528, 0.050753236, 0.060713639, 0.070704528, 0.080788736, 0.090748736, 0.100739472, 0.110730389, 0.120690722, 0.130775111, 0.140765556, 0.15072575, 0.160716597, 0.170707417, 0.180761403, 0.190751806, 0.200742431, 0.210702792, 0.220693667, 0.230778, 0.240737931, 0.25072875, 0.260719528, 0.270736167, 0.2807265, 0.290717333, 0.300708264, 0.310762014, 0.320752611, 0.330743111, 0.340703611, 0.350694431, 0.36077875, 0.370738806, 0.380729486, 0.390720306, 0.400680653, 0.410764944, 0.420755528, 0.430715653, 0.440706556, 0.450697417, 0.460751278, 0.470741764, 0.480732417, 0.490692792, 0.500683681, 0.510766944, 0.520747222, 0.530737514, 0.540728125, 0.550718931, 0.560679264, 0.570763653, 0.580754208, 0.590714319, 0.600705181, 0.610696028, 0.620749917, 0.630740403, 0.640731083, 0.650691417, 0.660682292, 0.670766653, 0.680726597, 0.690717319, 0.700708153, 0.710668444, 0.720752903, 0.730743403, 0.740703361, 0.750694375, 0.760685222, 0.770701694, 0.780692111, 0.790683042, 0.800767375, 0.810727403, 0.820718083, 0.830708903, 0.840669306, 0.850753681, 0.860744208, 0.870704319, 0.880695125, 0.890685986, 0.900739931, 0.910730347, 0.920721028, 0.930681306, 0.940672222, 0.950756625, 0.960716667, 0.970707125, 0.980698069, 0.990658444, 1.000742833, 1.010732833, 1.020675181] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:09.006" endtime="20201112 09:56:09.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.001" endtime="20201112 09:56:09.008"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:09.010" endtime="20201112 09:56:09.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:09.014" endtime="20201112 09:56:09.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.012" endtime="20201112 09:56:09.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.009" endtime="20201112 09:56:09.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.475" endtime="20201112 09:56:09.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.395" endtime="20201112 09:56:09.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.395" endtime="20201112 09:56:09.035"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:56:09.037" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:09.046" endtime="20201112 09:56:11.171"></status>
</kw>
<msg timestamp="20201112 09:56:11.172" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46268585, 'wakeups': [46278717, 46288665, 46298736, 46308654, 46318725...</msg>
<status status="PASS" starttime="20201112 09:56:09.044" endtime="20201112 09:56:11.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.178" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46268585, 'wakeups': [46278717, 46288665, 46298736, 46308654, 46318725...</msg>
<status status="PASS" starttime="20201112 09:56:11.174" endtime="20201112 09:56:11.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:11.180" endtime="20201112 09:56:11.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.042" endtime="20201112 09:56:11.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.040" endtime="20201112 09:56:11.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:11.191" level="INFO">${RESULT} = {'start-time': 46268585, 'wakeups': [46278717, 46288665, 46298736, 46308654, 46318725, 46328674, 46338714, 46348663, 46358734, 46368652, 46378723, 46388671, 46398712, 46408660, 46418731, 46428649, 464...</msg>
<status status="PASS" starttime="20201112 09:56:11.187" endtime="20201112 09:56:11.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.197" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:11.196" endtime="20201112 09:56:11.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.199" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:11.198" endtime="20201112 09:56:11.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.193" endtime="20201112 09:56:11.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.204" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:56:11.203" endtime="20201112 09:56:11.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.206" level="INFO">VALUE: 46268585</msg>
<status status="PASS" starttime="20201112 09:56:11.205" endtime="20201112 09:56:11.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.201" endtime="20201112 09:56:11.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.211" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:11.210" endtime="20201112 09:56:11.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.213" level="INFO">VALUE: [46278717, 46288665, 46298736, 46308654, 46318725, 46328674, 46338714, 46348663, 46358734, 46368652, 46378723, 46388671, 46398712, 46408660, 46418731, 46428649, 46438720, 46448669, 46458709, 46468658, 46478729, 46488647, 46498718, 46508666, 46518707, 46528656, 46538726, 46548675, 46558715, 46568664, 46578735, 46588653, 46598724, 46608673, 46618713, 46628662, 46638732, 46648651, 46658721, 46668670, 46678710, 46688659, 46698730, 46708648, 46718719, 46728668, 46738708, 46748657, 46758728, 46768585, 46778594, 46788604, 46798614, 46808593, 46818603, 46828613, 46838592, 46848602, 46858612, 46868591, 46878601, 46888610, 46898590, 46908599, 46918609, 46928588, 46938598, 46948608, 46958587, 46968597, 46978607, 46988586, 46998596, 47008605, 47018585, 47028686, 47038665, 47048645, 47058593, 47068695, 47078674, 47088623, 47098602, 47108703, 47118652, 47128631, 47138610, 47148681, 47158660, 47168640, 47178588, 47188690, 47198669, 47208618, 47218597, 47228698, 47238647, 47248626, 47258605, 47268676]</msg>
<status status="PASS" starttime="20201112 09:56:11.212" endtime="20201112 09:56:11.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.208" endtime="20201112 09:56:11.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:11.222" endtime="20201112 09:56:11.513"></status>
</kw>
<msg timestamp="20201112 09:56:11.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022057708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032179319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:11.219" endtime="20201112 09:56:11.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022057708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032179319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:11.516" endtime="20201112 09:56:11.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:11.524" endtime="20201112 09:56:11.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.217" endtime="20201112 09:56:11.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.215" endtime="20201112 09:56:11.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:11.550" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:11.527" endtime="20201112 09:56:11.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.554" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:56:11.553" endtime="20201112 09:56:11.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.556" level="INFO">VALUE: 0.022057708</msg>
<status status="PASS" starttime="20201112 09:56:11.556" endtime="20201112 09:56:11.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.551" endtime="20201112 09:56:11.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.562" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:11.561" endtime="20201112 09:56:11.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.564" level="INFO">VALUE: [0.032179319, 0.042147806, 0.052196319, 0.062136347, 0.072184708, 0.08215525, 0.092173083, 0.102143597, 0.112191958, 0.122131986, 0.132180458, 0.142150792, 0.152168819, 0.162139153, 0.172187583, 0.182127542, 0.192176139, 0.202146486, 0.2121645, 0.222134861, 0.232183292, 0.24212325, 0.25217175, 0.262142236, 0.272161597, 0.282130528, 0.292179069, 0.302149361, 0.312167389, 0.322137917, 0.332186389, 0.342126264, 0.352174681, 0.362145111, 0.372163097, 0.382133569, 0.392181986, 0.402121986, 0.412170417, 0.422140792, 0.432158694, 0.442129139, 0.45217775, 0.462117625, 0.472166097, 0.482136528, 0.492154431, 0.502124931, 0.512173347, 0.522035903, 0.532045361, 0.542054764, 0.552064264, 0.562043208, 0.572052611, 0.582062069, 0.592041014, 0.602050431, 0.612059931, 0.622038819, 0.632048292, 0.642057722, 0.652036639, 0.662046097, 0.672055556, 0.682034458, 0.692043944, 0.702053389, 0.712032389, 0.722041819, 0.732051264, 0.742030153, 0.752039597, 0.762049153, 0.772048194, 0.782134778, 0.792104861, 0.802095097, 0.812054722, 0.822142056, 0.832112139, 0.842071875, 0.852062042, 0.862149333, 0.872088986, 0.882079125, 0.892069389, 0.902126125, 0.912096278, 0.922086417, 0.932046111, 0.942133403, 0.952103528, 0.962063139, 0.972053361, 0.982140667, 0.992080264, 1.002070472, 1.012060653, 1.022118917] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:11.563" endtime="20201112 09:56:11.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.558" endtime="20201112 09:56:11.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:11.568" endtime="20201112 09:56:11.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:11.571" endtime="20201112 09:56:11.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.569" endtime="20201112 09:56:11.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.566" endtime="20201112 09:56:11.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.038" endtime="20201112 09:56:11.592"></status>
</kw>
<msg timestamp="20201112 09:56:11.592" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:11.601" endtime="20201112 09:56:13.725"></status>
</kw>
<msg timestamp="20201112 09:56:13.727" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 48826141, 'wakeups': [48836303, 48846221, 48856292, 48866210, 48876281...</msg>
<status status="PASS" starttime="20201112 09:56:11.599" endtime="20201112 09:56:13.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.732" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 48826141, 'wakeups': [48836303, 48846221, 48856292, 48866210, 48876281...</msg>
<status status="PASS" starttime="20201112 09:56:13.729" endtime="20201112 09:56:13.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.735" endtime="20201112 09:56:13.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.596" endtime="20201112 09:56:13.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.594" endtime="20201112 09:56:13.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:13.745" level="INFO">${RESULT} = {'start-time': 48826141, 'wakeups': [48836303, 48846221, 48856292, 48866210, 48876281, 48886230, 48896270, 48906219, 48916290, 48926208, 48936279, 48946228, 48956268, 48966217, 48976287, 48986206, 489...</msg>
<status status="PASS" starttime="20201112 09:56:13.741" endtime="20201112 09:56:13.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.752" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:13.751" endtime="20201112 09:56:13.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.754" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:13.753" endtime="20201112 09:56:13.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.747" endtime="20201112 09:56:13.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.759" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:56:13.758" endtime="20201112 09:56:13.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.761" level="INFO">VALUE: 48826141</msg>
<status status="PASS" starttime="20201112 09:56:13.760" endtime="20201112 09:56:13.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.755" endtime="20201112 09:56:13.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.766" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:13.765" endtime="20201112 09:56:13.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.768" level="INFO">VALUE: [48836303, 48846221, 48856292, 48866210, 48876281, 48886230, 48896270, 48906219, 48916290, 48926208, 48936279, 48946228, 48956268, 48966217, 48976287, 48986206, 48996276, 49006225, 49016265, 49026214, 49036285, 49046203, 49056274, 49066223, 49076232, 49086212, 49096191, 49106170, 49116241, 49126220, 49136199, 49146148, 49156250, 49166229, 49176177, 49186157, 49196258, 49206207, 49216186, 49226165, 49236236, 49246215, 49256195, 49266143, 49276245, 49286224, 49296173, 49306152, 49316253, 49326263, 49336212, 49346282, 49356231, 49366271, 49376220, 49386291, 49396209, 49406280, 49416229, 49426269, 49436218, 49446289, 49456207, 49466278, 49476226, 49486267, 49496215, 49506286, 49516204, 49526275, 49536224, 49546264, 49556213, 49566284, 49576171, 49586151, 49596252, 49606231, 49616180, 49626159, 49636260, 49646209, 49656188, 49666168, 49676239, 49686218, 49696197, 49706146, 49716247, 49726226, 49736175, 49746154, 49756256, 49766204, 49776184, 49786163, 49796234, 49806213, 49816192, 49826202]</msg>
<status status="PASS" starttime="20201112 09:56:13.767" endtime="20201112 09:56:13.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.762" endtime="20201112 09:56:13.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.776" endtime="20201112 09:56:14.066"></status>
</kw>
<msg timestamp="20201112 09:56:14.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022110278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032249292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:13.774" endtime="20201112 09:56:14.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:14.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022110278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032249292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:14.070" endtime="20201112 09:56:14.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:14.077" endtime="20201112 09:56:14.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.771" endtime="20201112 09:56:14.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.770" endtime="20201112 09:56:14.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:14.104" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:14.080" endtime="20201112 09:56:14.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:14.108" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:56:14.107" endtime="20201112 09:56:14.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:14.110" level="INFO">VALUE: 0.022110278</msg>
<status status="PASS" starttime="20201112 09:56:14.109" endtime="20201112 09:56:14.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:14.105" endtime="20201112 09:56:14.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:14.116" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:14.115" endtime="20201112 09:56:14.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:14.118" level="INFO">VALUE: [0.032249292, 0.042188056, 0.052236431, 0.062176431, 0.072224847, 0.082195389, 0.092213278, 0.102183847, 0.112232208, 0.122172125, 0.132220569, 0.142191056, 0.152208847, 0.162179403, 0.172227833, 0.182167792, 0.192216153, 0.202186583, 0.212204639, 0.222175028, 0.232223542, 0.242163361, 0.252211764, 0.262181917, 0.272181389, 0.282151125, 0.292141417, 0.302131625, 0.312188292, 0.322158569, 0.332148681, 0.342108417, 0.352195625, 0.362165778, 0.372125542, 0.382115639, 0.392203056, 0.402142625, 0.412132819, 0.422122931, 0.432179778, 0.442149931, 0.452139986, 0.462099736, 0.472187056, 0.482157167, 0.492116819, 0.502107, 0.512193889, 0.522192764, 0.532162889, 0.542211278, 0.552181694, 0.562199611, 0.572170056, 0.582218542, 0.592158472, 0.602206889, 0.612177278, 0.622195444, 0.632165778, 0.642214194, 0.652154125, 0.662202569, 0.672172972, 0.682190958, 0.692161528, 0.702209944, 0.712149833, 0.722198319, 0.732168778, 0.742186639, 0.752157153, 0.762206014, 0.772107181, 0.782096986, 0.792184278, 0.802154389, 0.812114083, 0.822104347, 0.832191528, 0.842131111, 0.852121389, 0.862111597, 0.872168264, 0.882138444, 0.892128708, 0.902088375, 0.912175583, 0.922145819, 0.932105458, 0.942095722, 0.952182917, 0.962122611, 0.972112764, 0.982102917, 0.992159667, 1.002129736, 1.012119958, 1.022137903] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:14.117" endtime="20201112 09:56:14.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:14.112" endtime="20201112 09:56:14.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:14.121" endtime="20201112 09:56:14.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:14.124" endtime="20201112 09:56:14.144"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:14.123" endtime="20201112 09:56:14.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:14.119" endtime="20201112 09:56:14.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.593" endtime="20201112 09:56:14.145"></status>
</kw>
<msg timestamp="20201112 09:56:14.146" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:14.154" endtime="20201112 09:56:16.280"></status>
</kw>
<msg timestamp="20201112 09:56:16.281" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51378692, 'wakeups': [51388854, 51398773, 51408843, 51418762, 51428833...</msg>
<status status="PASS" starttime="20201112 09:56:14.152" endtime="20201112 09:56:16.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.287" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51378692, 'wakeups': [51388854, 51398773, 51408843, 51418762, 51428833...</msg>
<status status="PASS" starttime="20201112 09:56:16.284" endtime="20201112 09:56:16.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:16.290" endtime="20201112 09:56:16.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:14.150" endtime="20201112 09:56:16.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:14.148" endtime="20201112 09:56:16.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:16.300" level="INFO">${RESULT} = {'start-time': 51378692, 'wakeups': [51388854, 51398773, 51408843, 51418762, 51428833, 51438781, 51448822, 51458770, 51468841, 51478759, 51488830, 51498779, 51508819, 51518768, 51528839, 51538757, 515...</msg>
<status status="PASS" starttime="20201112 09:56:16.296" endtime="20201112 09:56:16.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.307" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:16.306" endtime="20201112 09:56:16.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.309" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:16.308" endtime="20201112 09:56:16.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.302" endtime="20201112 09:56:16.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.315" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:56:16.314" endtime="20201112 09:56:16.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.317" level="INFO">VALUE: 51378692</msg>
<status status="PASS" starttime="20201112 09:56:16.316" endtime="20201112 09:56:16.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.311" endtime="20201112 09:56:16.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.322" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:16.321" endtime="20201112 09:56:16.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.324" level="INFO">VALUE: [51388854, 51398773, 51408843, 51418762, 51428833, 51438781, 51448822, 51458770, 51468841, 51478759, 51488830, 51498779, 51508819, 51518768, 51528839, 51538757, 51548828, 51558776, 51568817, 51578765, 51588836, 51598754, 51608825, 51618774, 51628784, 51638763, 51648742, 51658721, 51668792, 51678771, 51688751, 51698699, 51708801, 51718780, 51728729, 51738708, 51748809, 51758758, 51768737, 51778717, 51788787, 51798767, 51808746, 51818695, 51828796, 51838775, 51848724, 51858703, 51868804, 51878814, 51888763, 51898834, 51908782, 51918823, 51928771, 51938842, 51948760, 51958831, 51968780, 51978820, 51988769, 51998840, 52008758, 52018829, 52028778, 52038818, 52048767, 52058837, 52068756, 52078826, 52088775, 52098815, 52108764, 52118835, 52128723, 52138702, 52148803, 52158782, 52168731, 52178710, 52188812, 52198760, 52208740, 52218719, 52228790, 52238769, 52248748, 52258697, 52268798, 52278778, 52288726, 52298706, 52308807, 52318756, 52328735, 52338714, 52348785, 52358764, 52368743, 52378753]</msg>
<status status="PASS" starttime="20201112 09:56:16.323" endtime="20201112 09:56:16.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.318" endtime="20201112 09:56:16.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:16.331" endtime="20201112 09:56:16.622"></status>
</kw>
<msg timestamp="20201112 09:56:16.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021022806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031161125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:16.330" endtime="20201112 09:56:16.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021022806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031161125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:16.627" endtime="20201112 09:56:16.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:16.634" endtime="20201112 09:56:16.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.327" endtime="20201112 09:56:16.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.325" endtime="20201112 09:56:16.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:16.661" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:16.638" endtime="20201112 09:56:16.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.666" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:56:16.665" endtime="20201112 09:56:16.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.668" level="INFO">VALUE: 0.021022806</msg>
<status status="PASS" starttime="20201112 09:56:16.667" endtime="20201112 09:56:16.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.662" endtime="20201112 09:56:16.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.673" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:16.672" endtime="20201112 09:56:16.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.676" level="INFO">VALUE: [0.031161125, 0.041099833, 0.051148333, 0.061088292, 0.071136625, 0.081107181, 0.091125153, 0.101095472, 0.111143972, 0.121083806, 0.131132403, 0.141102792, 0.15112075, 0.161091111, 0.171139681, 0.181079458, 0.191128014, 0.201098431, 0.211116417, 0.221086833, 0.231135389, 0.241075278, 0.251123681, 0.261093653, 0.271093167, 0.281063056, 0.29105325, 0.301043486, 0.311100167, 0.321070306, 0.331060569, 0.341020181, 0.3511075, 0.361077597, 0.371037306, 0.381027528, 0.391114778, 0.401054361, 0.411044639, 0.42103475, 0.4310915, 0.441061806, 0.451051875, 0.461011514, 0.471098833, 0.481069056, 0.491028694, 0.501018875, 0.511105639, 0.521104597, 0.531074681, 0.541123139, 0.551093681, 0.561111583, 0.571081986, 0.581130403, 0.591070347, 0.601118736, 0.611089208, 0.621107056, 0.631077514, 0.641126083, 0.651066056, 0.661114458, 0.671084917, 0.681102875, 0.691073278, 0.701121722, 0.711061681, 0.721110111, 0.731080611, 0.741098514, 0.751068944, 0.761117722, 0.771019056, 0.781008875, 0.791095972, 0.801066194, 0.811025903, 0.821016028, 0.831103417, 0.841043056, 0.851033208, 0.861023403, 0.871080181, 0.881050292, 0.891040486, 0.901000153, 0.911087444, 0.921057583, 0.93101725, 0.941007444, 0.951094653, 0.961034389, 0.971024528, 0.981014736, 0.991071514, 1.001041667, 1.011031861, 1.021049875] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:16.675" endtime="20201112 09:56:16.676"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.670" endtime="20201112 09:56:16.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:16.679" endtime="20201112 09:56:16.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:16.682" endtime="20201112 09:56:16.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.680" endtime="20201112 09:56:16.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.677" endtime="20201112 09:56:16.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:14.146" endtime="20201112 09:56:16.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.036" endtime="20201112 09:56:16.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.035" endtime="20201112 09:56:16.703"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:56:16.706" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:16.714" endtime="20201112 09:56:18.841"></status>
</kw>
<msg timestamp="20201112 09:56:18.842" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 53941314, 'wakeups': [53951446, 53961456, 53971466, 53981445, 53991455...</msg>
<status status="PASS" starttime="20201112 09:56:16.712" endtime="20201112 09:56:18.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.853" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 53941314, 'wakeups': [53951446, 53961456, 53971466, 53981445, 53991455...</msg>
<status status="PASS" starttime="20201112 09:56:18.845" endtime="20201112 09:56:18.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:18.856" endtime="20201112 09:56:18.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.710" endtime="20201112 09:56:18.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.708" endtime="20201112 09:56:18.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:18.863" level="INFO">${RESULT} = {'start-time': 53941314, 'wakeups': [53951446, 53961456, 53971466, 53981445, 53991455, 54001464, 54011444, 54021453, 54031463, 54041442, 54051452, 54061462, 54071441, 54081451, 54091461, 54101440, 541...</msg>
<status status="PASS" starttime="20201112 09:56:18.861" endtime="20201112 09:56:18.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.867" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:18.866" endtime="20201112 09:56:18.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.869" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:18.868" endtime="20201112 09:56:18.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.864" endtime="20201112 09:56:18.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.874" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:56:18.873" endtime="20201112 09:56:18.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.876" level="INFO">VALUE: 53941314</msg>
<status status="PASS" starttime="20201112 09:56:18.875" endtime="20201112 09:56:18.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.871" endtime="20201112 09:56:18.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.881" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:18.880" endtime="20201112 09:56:18.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.883" level="INFO">VALUE: [53951446, 53961456, 53971466, 53981445, 53991455, 54001464, 54011444, 54021453, 54031463, 54041442, 54051452, 54061462, 54071441, 54081451, 54091461, 54101440, 54111450, 54121459, 54131439, 54141448, 54151458, 54161437, 54171447, 54181457, 54191436, 54201446, 54211456, 54221466, 54231445, 54241455, 54251464, 54261444, 54271453, 54281463, 54291442, 54301452, 54311462, 54321441, 54331451, 54341461, 54351440, 54361450, 54371459, 54381439, 54391448, 54401458, 54411437, 54421447, 54431457, 54441436, 54451446, 54461456, 54471466, 54481445, 54491455, 54501464, 54511444, 54521453, 54531463, 54541442, 54551452, 54561462, 54571441, 54581451, 54591461, 54601440, 54611450, 54621459, 54631439, 54641448, 54651458, 54661437, 54671447, 54681457, 54691436, 54701446, 54711456, 54721466, 54731445, 54741455, 54751464, 54761444, 54771453, 54781463, 54791442, 54801452, 54811462, 54821441, 54831451, 54841461, 54851440, 54861450, 54871459, 54881439, 54891448, 54901458, 54911437, 54921447, 54931457, 54941436]</msg>
<status status="PASS" starttime="20201112 09:56:18.882" endtime="20201112 09:56:18.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.878" endtime="20201112 09:56:18.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:18.892" endtime="20201112 09:56:19.182"></status>
</kw>
<msg timestamp="20201112 09:56:19.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025494722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035651097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:18.890" endtime="20201112 09:56:19.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:19.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025494722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035651097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:19.186" endtime="20201112 09:56:19.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:19.193" endtime="20201112 09:56:19.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.887" endtime="20201112 09:56:19.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.885" endtime="20201112 09:56:19.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:19.219" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:19.197" endtime="20201112 09:56:19.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:19.224" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:56:19.223" endtime="20201112 09:56:19.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:19.226" level="INFO">VALUE: 0.025494722</msg>
<status status="PASS" starttime="20201112 09:56:19.225" endtime="20201112 09:56:19.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.221" endtime="20201112 09:56:19.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:19.232" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:19.230" endtime="20201112 09:56:19.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:19.234" level="INFO">VALUE: [0.035651097, 0.045658639, 0.055668153, 0.065647167, 0.0756565, 0.085666, 0.095644958, 0.105654306, 0.115663806, 0.125642861, 0.135652306, 0.145661736, 0.155640556, 0.165650111, 0.175659486, 0.185638514, 0.195648, 0.205657375, 0.215636375, 0.225645778, 0.235655222, 0.245634167, 0.255643597, 0.265651389, 0.275632139, 0.285641389, 0.295650792, 0.305660194, 0.31563925, 0.325648569, 0.335658125, 0.345637111, 0.355646542, 0.365656028, 0.375634944, 0.385644417, 0.395653847, 0.405632736, 0.415642264, 0.425651694, 0.435630653, 0.445640042, 0.455649583, 0.465628458, 0.475637903, 0.485647278, 0.495626319, 0.505635792, 0.515643403, 0.525624319, 0.535633472, 0.545643056, 0.555652389, 0.565631333, 0.575640764, 0.585650319, 0.595629292, 0.605638653, 0.615648042, 0.625627181, 0.635636486, 0.645645986, 0.655624944, 0.665634222, 0.675643875, 0.685622694, 0.695632153, 0.705641569, 0.715620653, 0.725630056, 0.735639556, 0.745618319, 0.755627931, 0.765635542, 0.775616472, 0.785625708, 0.795635153, 0.805644708, 0.815623583, 0.825633, 0.835642556, 0.845621375, 0.855630819, 0.865640333, 0.875619125, 0.885628653, 0.895638069, 0.905617042, 0.915626486, 0.925635944, 0.935614806, 0.945624333, 0.955633667, 0.965612694, 0.975622208, 0.985631486, 0.995610528, 1.005619944, 1.015627653, 1.025608514] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:19.233" endtime="20201112 09:56:19.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.228" endtime="20201112 09:56:19.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:19.237" endtime="20201112 09:56:19.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:19.240" endtime="20201112 09:56:19.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.239" endtime="20201112 09:56:19.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.235" endtime="20201112 09:56:19.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.706" endtime="20201112 09:56:19.262"></status>
</kw>
<msg timestamp="20201112 09:56:19.262" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:19.270" endtime="20201112 09:56:21.396"></status>
</kw>
<msg timestamp="20201112 09:56:21.397" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56493865, 'wakeups': [56503997, 56514007, 56524017, 56533996, 56544006...</msg>
<status status="PASS" starttime="20201112 09:56:19.268" endtime="20201112 09:56:21.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.403" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56493865, 'wakeups': [56503997, 56514007, 56524017, 56533996, 56544006...</msg>
<status status="PASS" starttime="20201112 09:56:21.399" endtime="20201112 09:56:21.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:21.405" endtime="20201112 09:56:21.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.266" endtime="20201112 09:56:21.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.264" endtime="20201112 09:56:21.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:21.416" level="INFO">${RESULT} = {'start-time': 56493865, 'wakeups': [56503997, 56514007, 56524017, 56533996, 56544006, 56554016, 56563995, 56574005, 56584014, 56593994, 56604003, 56614013, 56623992, 56634002, 56644012, 56653991, 566...</msg>
<status status="PASS" starttime="20201112 09:56:21.412" endtime="20201112 09:56:21.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.420" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:21.419" endtime="20201112 09:56:21.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.422" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:21.421" endtime="20201112 09:56:21.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.416" endtime="20201112 09:56:21.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.427" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:56:21.426" endtime="20201112 09:56:21.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.429" level="INFO">VALUE: 56493865</msg>
<status status="PASS" starttime="20201112 09:56:21.428" endtime="20201112 09:56:21.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.423" endtime="20201112 09:56:21.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.434" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:21.433" endtime="20201112 09:56:21.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.436" level="INFO">VALUE: [56503997, 56514007, 56524017, 56533996, 56544006, 56554016, 56563995, 56574005, 56584014, 56593994, 56604003, 56614013, 56623992, 56634002, 56644012, 56653991, 56664001, 56674011, 56683990, 56694000, 56704010, 56713989, 56723999, 56734008, 56743988, 56753997, 56764007, 56774017, 56783996, 56794006, 56804016, 56813995, 56824005, 56834014, 56843994, 56854003, 56864013, 56873992, 56884002, 56894012, 56903991, 56914001, 56924011, 56933990, 56944000, 56954010, 56963989, 56973999, 56984008, 56993988, 57003997, 57014007, 57024017, 57033996, 57044006, 57054016, 57063995, 57074005, 57084014, 57093994, 57104003, 57114013, 57123992, 57134002, 57144012, 57153991, 57164001, 57174011, 57183990, 57194000, 57204010, 57213989, 57223999, 57234008, 57243988, 57253997, 57264007, 57274017, 57283996, 57294006, 57304016, 57313995, 57324005, 57334014, 57343994, 57354003, 57364013, 57373992, 57384002, 57394012, 57403991, 57414001, 57424011, 57433990, 57444000, 57454010, 57463989, 57473999, 57484008, 57493988]</msg>
<status status="PASS" starttime="20201112 09:56:21.435" endtime="20201112 09:56:21.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.430" endtime="20201112 09:56:21.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:21.443" endtime="20201112 09:56:21.736"></status>
</kw>
<msg timestamp="20201112 09:56:21.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018820819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028977528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:21.442" endtime="20201112 09:56:21.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018820819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028977528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:21.740" endtime="20201112 09:56:21.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:21.747" endtime="20201112 09:56:21.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.439" endtime="20201112 09:56:21.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.438" endtime="20201112 09:56:21.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:21.774" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:21.751" endtime="20201112 09:56:21.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.779" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:56:21.778" endtime="20201112 09:56:21.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.781" level="INFO">VALUE: 0.018820819</msg>
<status status="PASS" starttime="20201112 09:56:21.780" endtime="20201112 09:56:21.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.775" endtime="20201112 09:56:21.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.786" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:21.785" endtime="20201112 09:56:21.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.788" level="INFO">VALUE: [0.028977528, 0.038985028, 0.048994556, 0.058973458, 0.068982875, 0.078992347, 0.088971292, 0.098980778, 0.108990125, 0.118969181, 0.128978639, 0.138988069, 0.148966944, 0.158976528, 0.168985819, 0.178964736, 0.188974236, 0.198983694, 0.208962611, 0.218972111, 0.228981528, 0.238960458, 0.248969917, 0.258979319, 0.268958222, 0.278967722, 0.288977236, 0.298986708, 0.308965653, 0.318974986, 0.328984542, 0.338963472, 0.348972819, 0.358982361, 0.36896125, 0.378970639, 0.388980222, 0.398959194, 0.408968611, 0.418978, 0.428956972, 0.438966444, 0.448975903, 0.458954806, 0.468964306, 0.47897375, 0.488952556, 0.498962, 0.508971514, 0.518950444, 0.528959917, 0.538969403, 0.548978875, 0.558957806, 0.568967222, 0.578976708, 0.588955625, 0.598965042, 0.6089745, 0.6189535, 0.628962764, 0.638972375, 0.648951306, 0.658960694, 0.668970097, 0.678949014, 0.688958417, 0.698967958, 0.708946792, 0.718956375, 0.728965736, 0.738944792, 0.748954222, 0.758963708, 0.768942653, 0.778952111, 0.788961486, 0.798970931, 0.808949889, 0.818959389, 0.828968931, 0.838947778, 0.848957194, 0.858966722, 0.868945583, 0.878955042, 0.888964472, 0.898943333, 0.908952903, 0.91896225, 0.928941292, 0.938950667, 0.948960028, 0.958938972, 0.968948472, 0.978958, 0.988936944, 0.998946375, 1.008955708, 1.018934736] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:21.787" endtime="20201112 09:56:21.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.782" endtime="20201112 09:56:21.789"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:21.792" endtime="20201112 09:56:21.793"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:21.795" endtime="20201112 09:56:21.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.793" endtime="20201112 09:56:21.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.790" endtime="20201112 09:56:21.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.263" endtime="20201112 09:56:21.816"></status>
</kw>
<msg timestamp="20201112 09:56:21.816" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:21.824" endtime="20201112 09:56:23.951"></status>
</kw>
<msg timestamp="20201112 09:56:23.952" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59051452, 'wakeups': [59061584, 59071594, 59081604, 59091583, 59101593...</msg>
<status status="PASS" starttime="20201112 09:56:21.823" endtime="20201112 09:56:23.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.958" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59051452, 'wakeups': [59061584, 59071594, 59081604, 59091583, 59101593...</msg>
<status status="PASS" starttime="20201112 09:56:23.955" endtime="20201112 09:56:23.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:23.961" endtime="20201112 09:56:23.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.820" endtime="20201112 09:56:23.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.818" endtime="20201112 09:56:23.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:23.971" level="INFO">${RESULT} = {'start-time': 59051452, 'wakeups': [59061584, 59071594, 59081604, 59091583, 59101593, 59111602, 59121582, 59131591, 59141601, 59151580, 59161590, 59171600, 59181579, 59191589, 59201599, 59211578, 592...</msg>
<status status="PASS" starttime="20201112 09:56:23.968" endtime="20201112 09:56:23.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.975" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:23.974" endtime="20201112 09:56:23.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.977" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:23.976" endtime="20201112 09:56:23.977"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.971" endtime="20201112 09:56:23.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.982" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:56:23.981" endtime="20201112 09:56:23.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.984" level="INFO">VALUE: 59051452</msg>
<status status="PASS" starttime="20201112 09:56:23.983" endtime="20201112 09:56:23.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.978" endtime="20201112 09:56:23.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.989" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:23.988" endtime="20201112 09:56:23.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.991" level="INFO">VALUE: [59061584, 59071594, 59081604, 59091583, 59101593, 59111602, 59121582, 59131591, 59141601, 59151580, 59161590, 59171600, 59181579, 59191589, 59201599, 59211578, 59221588, 59231597, 59241577, 59251586, 59261596, 59271575, 59281585, 59291595, 59301574, 59311584, 59321594, 59331604, 59341583, 59351593, 59361602, 59371582, 59381591, 59391601, 59401580, 59411590, 59421600, 59431579, 59441589, 59451599, 59461578, 59471588, 59481597, 59491577, 59501586, 59511596, 59521575, 59531585, 59541595, 59551574, 59561584, 59571594, 59581604, 59591583, 59601593, 59611602, 59621582, 59631591, 59641601, 59651580, 59661590, 59671600, 59681579, 59691589, 59701599, 59711578, 59721588, 59731597, 59741577, 59751586, 59761596, 59771575, 59781585, 59791595, 59801574, 59811584, 59821594, 59831604, 59841583, 59851593, 59861602, 59871582, 59881591, 59891601, 59901580, 59911590, 59921600, 59931579, 59941589, 59951599, 59961578, 59971588, 59981597, 59991577, 60001586, 60011596, 60021575, 60031585, 60041595, 60051574]</msg>
<status status="PASS" starttime="20201112 09:56:23.990" endtime="20201112 09:56:23.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.985" endtime="20201112 09:56:23.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:23.999" endtime="20201112 09:56:24.290"></status>
</kw>
<msg timestamp="20201112 09:56:24.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031947861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:23.997" endtime="20201112 09:56:24.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031947861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:24.294" endtime="20201112 09:56:24.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:24.302" endtime="20201112 09:56:24.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.995" endtime="20201112 09:56:24.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.992" endtime="20201112 09:56:24.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:24.328" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:24.305" endtime="20201112 09:56:24.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.333" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:56:24.332" endtime="20201112 09:56:24.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.335" level="INFO">VALUE: 0.021789639</msg>
<status status="PASS" starttime="20201112 09:56:24.334" endtime="20201112 09:56:24.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.329" endtime="20201112 09:56:24.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.341" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:24.339" endtime="20201112 09:56:24.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.343" level="INFO">VALUE: [0.031947861, 0.041955389, 0.051964875, 0.061943861, 0.071953236, 0.081962764, 0.091941597, 0.101951069, 0.111960486, 0.121939597, 0.131949028, 0.141958528, 0.151937389, 0.161946833, 0.171956264, 0.181935194, 0.191944694, 0.201954069, 0.211933167, 0.221942472, 0.231951903, 0.241930944, 0.251940306, 0.261948778, 0.271928958, 0.281938083, 0.291947556, 0.301957028, 0.311935931, 0.321945333, 0.331954819, 0.341933792, 0.351943222, 0.361952736, 0.371931736, 0.381941125, 0.3919505, 0.401929431, 0.411938875, 0.421948333, 0.431927167, 0.441936819, 0.451946167, 0.461925153, 0.471934681, 0.481944028, 0.491922917, 0.501932389, 0.511940944, 0.521921222, 0.531930208, 0.541939694, 0.551949181, 0.561928042, 0.571937514, 0.581946944, 0.591925875, 0.601935472, 0.611944708, 0.621923806, 0.631933208, 0.641942667, 0.651921653, 0.661931083, 0.671940431, 0.6819195, 0.691928861, 0.701938458, 0.711917444, 0.721926722, 0.731936153, 0.741915111, 0.751924639, 0.761933125, 0.771913403, 0.781922347, 0.791931875, 0.801941292, 0.811920292, 0.821929681, 0.831939181, 0.841918139, 0.851927528, 0.861937014, 0.871915944, 0.881925431, 0.891934847, 0.901913694, 0.911923264, 0.921932736, 0.931911597, 0.941921083, 0.951930514, 0.961909417, 0.971918875, 0.981928333, 0.991907264, 1.001916764, 1.01192525, 1.021905472] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:24.342" endtime="20201112 09:56:24.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.336" endtime="20201112 09:56:24.343"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:24.346" endtime="20201112 09:56:24.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:24.349" endtime="20201112 09:56:24.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.348" endtime="20201112 09:56:24.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.344" endtime="20201112 09:56:24.370"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.817" endtime="20201112 09:56:24.370"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.704" endtime="20201112 09:56:24.370"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.704" endtime="20201112 09:56:24.370"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:56:24.373" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:24.381" endtime="20201112 09:56:26.507"></status>
</kw>
<msg timestamp="20201112 09:56:26.508" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61609008, 'wakeups': [61619171, 61629180, 61639190, 61649169, 61659179...</msg>
<status status="PASS" starttime="20201112 09:56:24.379" endtime="20201112 09:56:26.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.514" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61609008, 'wakeups': [61619171, 61629180, 61639190, 61649169, 61659179...</msg>
<status status="PASS" starttime="20201112 09:56:26.510" endtime="20201112 09:56:26.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.516" endtime="20201112 09:56:26.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.377" endtime="20201112 09:56:26.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.375" endtime="20201112 09:56:26.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:26.526" level="INFO">${RESULT} = {'start-time': 61609008, 'wakeups': [61619171, 61629180, 61639190, 61649169, 61659179, 61669189, 61679168, 61689178, 61699188, 61709167, 61719177, 61729187, 61739166, 61749176, 61759185, 61769165, 617...</msg>
<status status="PASS" starttime="20201112 09:56:26.523" endtime="20201112 09:56:26.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.530" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:26.529" endtime="20201112 09:56:26.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.532" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:26.531" endtime="20201112 09:56:26.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.527" endtime="20201112 09:56:26.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.538" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:56:26.536" endtime="20201112 09:56:26.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.540" level="INFO">VALUE: 61609008</msg>
<status status="PASS" starttime="20201112 09:56:26.539" endtime="20201112 09:56:26.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.533" endtime="20201112 09:56:26.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.545" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:26.544" endtime="20201112 09:56:26.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.547" level="INFO">VALUE: [61619171, 61629180, 61639190, 61649169, 61659179, 61669189, 61679168, 61689178, 61699188, 61709167, 61719177, 61729187, 61739166, 61749176, 61759185, 61769165, 61779174, 61789184, 61799163, 61809173, 61819183, 61829162, 61839172, 61849182, 61859161, 61869171, 61879180, 61889190, 61899169, 61909179, 61919189, 61929168, 61939178, 61949188, 61959167, 61969177, 61979187, 61989166, 61999176, 62009185, 62019165, 62029174, 62039184, 62049163, 62059173, 62069183, 62079162, 62089172, 62099182, 62109161, 62119171, 62129180, 62139190, 62149169, 62159179, 62169189, 62179168, 62189178, 62199188, 62209167, 62219177, 62229187, 62239166, 62249176, 62259185, 62269165, 62279174, 62289184, 62299163, 62309173, 62319183, 62329162, 62339172, 62349182, 62359161, 62369171, 62379180, 62389190, 62399169, 62409179, 62419189, 62429168, 62439178, 62449188, 62459167, 62469177, 62479187, 62489166, 62499176, 62509185, 62519165, 62529174, 62539184, 62549163, 62559173, 62569183, 62579162, 62589172, 62599182, 62609161]</msg>
<status status="PASS" starttime="20201112 09:56:26.546" endtime="20201112 09:56:26.547"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.541" endtime="20201112 09:56:26.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.554" endtime="20201112 09:56:26.847"></status>
</kw>
<msg timestamp="20201112 09:56:26.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025041625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03521975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:56:26.553" endtime="20201112 09:56:26.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025041625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03521975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:56:26.850" endtime="20201112 09:56:26.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.858" endtime="20201112 09:56:26.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.550" endtime="20201112 09:56:26.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.548" endtime="20201112 09:56:26.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:26.885" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:26.862" endtime="20201112 09:56:26.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.889" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:56:26.888" endtime="20201112 09:56:26.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.891" level="INFO">VALUE: 0.025041625</msg>
<status status="PASS" starttime="20201112 09:56:26.890" endtime="20201112 09:56:26.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.886" endtime="20201112 09:56:26.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.897" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:26.896" endtime="20201112 09:56:26.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.900" level="INFO">VALUE: [0.03521975, 0.045226389, 0.055236153, 0.065215194, 0.075224486, 0.085233972, 0.095212917, 0.105222375, 0.115231833, 0.125210847, 0.135220264, 0.145229611, 0.155208653, 0.165218167, 0.175227403, 0.185206486, 0.195215889, 0.205225278, 0.215204333, 0.225213736, 0.235223083, 0.245202028, 0.255211611, 0.265221069, 0.275199889, 0.285209514, 0.295218833, 0.305228375, 0.31520725, 0.325216792, 0.335226097, 0.345204972, 0.355214472, 0.365223861, 0.375202889, 0.385212264, 0.395221722, 0.405200736, 0.415210292, 0.42521975, 0.435198625, 0.445207986, 0.455217583, 0.465196403, 0.475205931, 0.48521525, 0.495194153, 0.505203611, 0.515213083, 0.525192111, 0.535201417, 0.545211153, 0.555220472, 0.565199319, 0.575208819, 0.585218208, 0.595197139, 0.605206625, 0.615216181, 0.625195083, 0.635204569, 0.645214, 0.655192833, 0.665202278, 0.675211708, 0.685190708, 0.695200222, 0.705209708, 0.715188528, 0.725198111, 0.735207361, 0.745186417, 0.755195819, 0.765205333, 0.775184292, 0.785193778, 0.795203139, 0.805212653, 0.815191542, 0.825200958, 0.835210542, 0.845189403, 0.855198875, 0.865208389, 0.875187306, 0.885196806, 0.895206125, 0.905185167, 0.915194514, 0.925203875, 0.935182917, 0.945192208, 0.95520175, 0.965180722, 0.975190194, 0.985199528, 0.995178514, 1.005188042, 1.015197444, 1.025176306] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:26.899" endtime="20201112 09:56:26.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.893" endtime="20201112 09:56:26.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.903" endtime="20201112 09:56:26.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:26.906" endtime="20201112 09:56:26.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.905" endtime="20201112 09:56:26.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.901" endtime="20201112 09:56:26.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.373" endtime="20201112 09:56:26.927"></status>
</kw>
<msg timestamp="20201112 09:56:26.927" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.935" endtime="20201112 09:56:29.061"></status>
</kw>
<msg timestamp="20201112 09:56:29.062" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64161560, 'wakeups': [64171722, 64181732, 64191741, 64201721, 64211730...</msg>
<status status="PASS" starttime="20201112 09:56:26.933" endtime="20201112 09:56:29.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.068" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64161560, 'wakeups': [64171722, 64181732, 64191741, 64201721, 64211730...</msg>
<status status="PASS" starttime="20201112 09:56:29.065" endtime="20201112 09:56:29.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:29.070" endtime="20201112 09:56:29.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.931" endtime="20201112 09:56:29.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.929" endtime="20201112 09:56:29.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:29.080" level="INFO">${RESULT} = {'start-time': 64161560, 'wakeups': [64171722, 64181732, 64191741, 64201721, 64211730, 64221740, 64231719, 64241729, 64251739, 64261718, 64271728, 64281738, 64291717, 64301727, 64311737, 64321716, 643...</msg>
<status status="PASS" starttime="20201112 09:56:29.078" endtime="20201112 09:56:29.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.090" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:29.089" endtime="20201112 09:56:29.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.092" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:29.091" endtime="20201112 09:56:29.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.086" endtime="20201112 09:56:29.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.097" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:56:29.096" endtime="20201112 09:56:29.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.099" level="INFO">VALUE: 64161560</msg>
<status status="PASS" starttime="20201112 09:56:29.098" endtime="20201112 09:56:29.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.093" endtime="20201112 09:56:29.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.104" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:29.103" endtime="20201112 09:56:29.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.106" level="INFO">VALUE: [64171722, 64181732, 64191741, 64201721, 64211730, 64221740, 64231719, 64241729, 64251739, 64261718, 64271728, 64281738, 64291717, 64301727, 64311737, 64321716, 64331726, 64341735, 64351715, 64361724, 64371734, 64381713, 64391723, 64401733, 64411743, 64421722, 64431732, 64441741, 64451721, 64461730, 64471740, 64481719, 64491729, 64501739, 64511718, 64521728, 64531738, 64541717, 64551727, 64561737, 64571716, 64581726, 64591735, 64601715, 64611724, 64621734, 64631713, 64641723, 64651733, 64661743, 64671722, 64681732, 64691741, 64701721, 64711730, 64721740, 64731719, 64741729, 64751739, 64761718, 64771728, 64781738, 64791717, 64801727, 64811737, 64821716, 64831726, 64841735, 64851715, 64861724, 64871734, 64881713, 64891723, 64901733, 64911743, 64921722, 64931732, 64941741, 64951721, 64961730, 64971740, 64981719, 64991729, 65001739, 65011718, 65021728, 65031738, 65041717, 65051727, 65061737, 65071716, 65081726, 65091735, 65101715, 65111724, 65121734, 65131713, 65141723, 65151733, 65161743]</msg>
<status status="PASS" starttime="20201112 09:56:29.105" endtime="20201112 09:56:29.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.100" endtime="20201112 09:56:29.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:29.113" endtime="20201112 09:56:29.404"></status>
</kw>
<msg timestamp="20201112 09:56:29.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020138931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030316278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:29.112" endtime="20201112 09:56:29.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020138931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030316278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:29.408" endtime="20201112 09:56:29.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:29.415" endtime="20201112 09:56:29.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.109" endtime="20201112 09:56:29.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.107" endtime="20201112 09:56:29.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:29.441" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:29.419" endtime="20201112 09:56:29.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.446" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:56:29.445" endtime="20201112 09:56:29.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.448" level="INFO">VALUE: 0.020138931</msg>
<status status="PASS" starttime="20201112 09:56:29.447" endtime="20201112 09:56:29.448"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.442" endtime="20201112 09:56:29.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.453" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:29.452" endtime="20201112 09:56:29.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.456" level="INFO">VALUE: [0.030316278, 0.040323236, 0.050332806, 0.060311792, 0.070321292, 0.080330694, 0.090309542, 0.100318986, 0.110328472, 0.120307417, 0.130316847, 0.140326306, 0.150305292, 0.16031475, 0.170324278, 0.180303194, 0.190312639, 0.200322069, 0.210301014, 0.220310458, 0.230319903, 0.240298736, 0.250308319, 0.26031775, 0.270327125, 0.280306194, 0.290315625, 0.300325, 0.310303972, 0.320313431, 0.330322875, 0.340301639, 0.350311194, 0.360320611, 0.370299639, 0.380309028, 0.3903185, 0.400297417, 0.410306875, 0.420316361, 0.430295194, 0.440304736, 0.450313986, 0.460293111, 0.470302625, 0.480312, 0.490290986, 0.500300431, 0.510309875, 0.520319306, 0.530298347, 0.540307681, 0.550317111, 0.560296056, 0.570305569, 0.580315056, 0.590293903, 0.600303417, 0.610312847, 0.620291792, 0.630301125, 0.640310653, 0.650289597, 0.660299028, 0.670308472, 0.680287403, 0.690296889, 0.700306361, 0.710285319, 0.720294708, 0.730304208, 0.740283125, 0.750292542, 0.760302, 0.770311444, 0.780290486, 0.790299875, 0.800309319, 0.810288292, 0.820297639, 0.830307153, 0.840286097, 0.850295542, 0.860304958, 0.870283889, 0.880293319, 0.890302778, 0.900281708, 0.910291097, 0.920300583, 0.930279486, 0.940289028, 0.950298472, 0.960277444, 0.970286847, 0.980296167, 0.990275194, 1.000284681, 1.010294014, 1.020303625] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:29.455" endtime="20201112 09:56:29.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.449" endtime="20201112 09:56:29.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:29.459" endtime="20201112 09:56:29.460"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:29.462" endtime="20201112 09:56:29.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.461" endtime="20201112 09:56:29.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.457" endtime="20201112 09:56:29.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.928" endtime="20201112 09:56:29.483"></status>
</kw>
<msg timestamp="20201112 09:56:29.483" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:29.492" endtime="20201112 09:56:31.616"></status>
</kw>
<msg timestamp="20201112 09:56:31.617" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66719146, 'wakeups': [66729309, 66739318, 66749328, 66759307, 66769317...</msg>
<status status="PASS" starttime="20201112 09:56:29.490" endtime="20201112 09:56:31.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.623" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66719146, 'wakeups': [66729309, 66739318, 66749328, 66759307, 66769317...</msg>
<status status="PASS" starttime="20201112 09:56:31.620" endtime="20201112 09:56:31.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:31.626" endtime="20201112 09:56:31.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.487" endtime="20201112 09:56:31.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.485" endtime="20201112 09:56:31.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:31.637" level="INFO">${RESULT} = {'start-time': 66719146, 'wakeups': [66729309, 66739318, 66749328, 66759307, 66769317, 66779327, 66789306, 66799316, 66809326, 66819305, 66829315, 66839324, 66849304, 66859313, 66869323, 66879302, 668...</msg>
<status status="PASS" starttime="20201112 09:56:31.633" endtime="20201112 09:56:31.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.641" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:31.640" endtime="20201112 09:56:31.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.643" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:31.642" endtime="20201112 09:56:31.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.637" endtime="20201112 09:56:31.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.648" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:56:31.647" endtime="20201112 09:56:31.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.650" level="INFO">VALUE: 66719146</msg>
<status status="PASS" starttime="20201112 09:56:31.649" endtime="20201112 09:56:31.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.644" endtime="20201112 09:56:31.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.654" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:31.653" endtime="20201112 09:56:31.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.657" level="INFO">VALUE: [66729309, 66739318, 66749328, 66759307, 66769317, 66779327, 66789306, 66799316, 66809326, 66819305, 66829315, 66839324, 66849304, 66859313, 66869323, 66879302, 66889312, 66899322, 66909301, 66919311, 66929321, 66939300, 66949310, 66959320, 66969207, 66979278, 66989288, 66999298, 67009277, 67019287, 67029296, 67039276, 67049285, 67059295, 67069274, 67079284, 67089294, 67099273, 67109283, 67119293, 67129272, 67139282, 67149291, 67159271, 67169281, 67179290, 67189270, 67199279, 67209289, 67219299, 67229309, 67239318, 67249328, 67259307, 67269317, 67279327, 67289306, 67299316, 67309326, 67319305, 67329315, 67339324, 67349304, 67359313, 67369323, 67379302, 67389312, 67399322, 67409301, 67419311, 67429321, 67439300, 67449310, 67459320, 67469207, 67479309, 67489318, 67499328, 67509307, 67519317, 67529327, 67539306, 67549316, 67559326, 67569305, 67579315, 67589324, 67599304, 67609313, 67619323, 67629302, 67639312, 67649322, 67659301, 67669311, 67679321, 67689300, 67699310, 67709320, 67719207]</msg>
<status status="PASS" starttime="20201112 09:56:31.656" endtime="20201112 09:56:31.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.651" endtime="20201112 09:56:31.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:31.664" endtime="20201112 09:56:31.955"></status>
</kw>
<msg timestamp="20201112 09:56:31.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021218528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031394514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:31.663" endtime="20201112 09:56:31.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021218528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031394514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:31.959" endtime="20201112 09:56:31.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:31.967" endtime="20201112 09:56:31.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.660" endtime="20201112 09:56:31.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.659" endtime="20201112 09:56:31.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:31.994" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:31.970" endtime="20201112 09:56:31.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.998" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:56:31.997" endtime="20201112 09:56:31.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:32.001" level="INFO">VALUE: 0.021218528</msg>
<status status="PASS" starttime="20201112 09:56:32.000" endtime="20201112 09:56:32.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.995" endtime="20201112 09:56:32.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:32.006" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:32.005" endtime="20201112 09:56:32.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:32.008" level="INFO">VALUE: [0.031394514, 0.041401292, 0.051410958, 0.061389903, 0.071399292, 0.081408708, 0.091387583, 0.101397042, 0.111406639, 0.121385597, 0.131395, 0.141404597, 0.151383194, 0.161392722, 0.171402292, 0.18138125, 0.191390653, 0.201400139, 0.211379069, 0.221388472, 0.231397875, 0.241376819, 0.251386319, 0.261393944, 0.271290667, 0.28136225, 0.291371931, 0.301381333, 0.311360167, 0.32136975, 0.331379194, 0.341358125, 0.351367542, 0.361377, 0.371356, 0.381365333, 0.391374986, 0.401353847, 0.41136325, 0.421372708, 0.431351681, 0.441361167, 0.451370528, 0.461349431, 0.471358944, 0.481368417, 0.491347333, 0.501356806, 0.511364542, 0.521366778, 0.531376306, 0.541385708, 0.551395083, 0.561374056, 0.5713835, 0.581393056, 0.591371958, 0.601381375, 0.611390819, 0.621369806, 0.631379181, 0.641388708, 0.651367625, 0.661377097, 0.671386694, 0.681365361, 0.691375042, 0.70138425, 0.711363347, 0.721372764, 0.731382236, 0.741361153, 0.751370569, 0.761378236, 0.771274889, 0.781367972, 0.791377917, 0.801387292, 0.811366319, 0.821375639, 0.831385097, 0.841364097, 0.851373611, 0.861382986, 0.871361861, 0.881371444, 0.891380847, 0.901359653, 0.911369292, 0.921378708, 0.931357653, 0.941367125, 0.951376556, 0.961355375, 0.971364819, 0.981374417, 0.991353236, 1.001362736, 1.011370375, 1.021267083] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:32.007" endtime="20201112 09:56:32.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.002" endtime="20201112 09:56:32.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:32.011" endtime="20201112 09:56:32.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:32.015" endtime="20201112 09:56:32.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.013" endtime="20201112 09:56:32.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.010" endtime="20201112 09:56:32.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.484" endtime="20201112 09:56:32.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.371" endtime="20201112 09:56:32.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.371" endtime="20201112 09:56:32.036"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:56:32.039" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:32.047" endtime="20201112 09:56:34.174"></status>
</kw>
<msg timestamp="20201112 09:56:34.175" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69276824, 'wakeups': [69287017, 69297027, 69306976, 69316925, 693269...</msg>
<status status="PASS" starttime="20201112 09:56:32.045" endtime="20201112 09:56:34.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:34.181" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69276824, 'wakeups': [69287017, 69297027, 69306976, 69316925, 693269...</msg>
<status status="PASS" starttime="20201112 09:56:34.177" endtime="20201112 09:56:34.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:34.183" endtime="20201112 09:56:34.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.043" endtime="20201112 09:56:34.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.041" endtime="20201112 09:56:34.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:34.192" level="INFO">${RESULT} = {'start-time': 69276824, 'wakeups': [69287017, 69297027, 69306976, 69316925, 69326904, 69336883, 69346832, 69356994, 69366943, 69376983, 69387023, 69396972, 69406921, 69416900, 69426879, 69436828, 694...</msg>
<status status="PASS" starttime="20201112 09:56:34.190" endtime="20201112 09:56:34.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:34.196" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:34.195" endtime="20201112 09:56:34.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:34.198" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:34.197" endtime="20201112 09:56:34.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.192" endtime="20201112 09:56:34.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:34.204" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:56:34.203" endtime="20201112 09:56:34.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:34.206" level="INFO">VALUE: 69276824</msg>
<status status="PASS" starttime="20201112 09:56:34.205" endtime="20201112 09:56:34.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.199" endtime="20201112 09:56:34.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:34.211" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:34.210" endtime="20201112 09:56:34.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:34.213" level="INFO">VALUE: [69287017, 69297027, 69306976, 69316925, 69326904, 69336883, 69346832, 69356994, 69366943, 69376983, 69387023, 69396972, 69406921, 69416900, 69426879, 69436828, 69446990, 69456939, 69466979, 69477020, 69486968, 69496917, 69506896, 69516876, 69526824, 69536987, 69546936, 69557006, 69567016, 69576965, 69586944, 69596893, 69606872, 69616851, 69626983, 69636932, 69647003, 69657012, 69666961, 69676940, 69686889, 69696868, 69706848, 69716979, 69726928, 69736999, 69747009, 69756958, 69766937, 69776885, 69786865, 69796844, 69807006, 69816925, 69826995, 69837036, 69846954, 69856933, 69866912, 69876861, 69886840, 69897003, 69906921, 69916992, 69927032, 69936950, 69946929, 69956909, 69966857, 69976837, 69986999, 69996917, 70006988, 70017028, 70026947, 70036926, 70046905, 70056884, 70066833, 70076995, 70086944, 70096984, 70107025, 70116973, 70126922, 70136901, 70146881, 70156829, 70166992, 70176940, 70186981, 70197021, 70206970, 70216918, 70226898, 70236877, 70246826, 70256988, 70266937, 70276977]</msg>
<status status="PASS" starttime="20201112 09:56:34.212" endtime="20201112 09:56:34.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.207" endtime="20201112 09:56:34.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:34.224" endtime="20201112 09:56:34.517"></status>
</kw>
<msg timestamp="20201112 09:56:34.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026194403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036407514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:34.219" endtime="20201112 09:56:34.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:34.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026194403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036407514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:34.521" endtime="20201112 09:56:34.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:34.528" endtime="20201112 09:56:34.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.216" endtime="20201112 09:56:34.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.214" endtime="20201112 09:56:34.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:34.554" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:34.531" endtime="20201112 09:56:34.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:34.559" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:56:34.558" endtime="20201112 09:56:34.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:34.561" level="INFO">VALUE: 0.026194403</msg>
<status status="PASS" starttime="20201112 09:56:34.560" endtime="20201112 09:56:34.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.555" endtime="20201112 09:56:34.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:34.567" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:34.566" endtime="20201112 09:56:34.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:34.569" level="INFO">VALUE: [0.036407514, 0.046413722, 0.056357389, 0.066292694, 0.07628075, 0.086268958, 0.096226597, 0.106364944, 0.116331083, 0.126374972, 0.136406972, 0.146350917, 0.156286306, 0.166274139, 0.176262431, 0.186220139, 0.196358569, 0.206324542, 0.216368361, 0.226400417, 0.236344347, 0.246279792, 0.25626775, 0.266256, 0.276213653, 0.286352056, 0.296318194, 0.306392431, 0.316393875, 0.326337958, 0.336303875, 0.346261264, 0.3562495, 0.366237722, 0.376345611, 0.386311681, 0.396385958, 0.406387556, 0.416331389, 0.42629725, 0.436254694, 0.446242986, 0.456231153, 0.466339125, 0.476305111, 0.486379472, 0.496381014, 0.506324903, 0.516290806, 0.526248292, 0.536236486, 0.546224681, 0.556363069, 0.566298639, 0.576372986, 0.586405125, 0.596318417, 0.606284347, 0.616272361, 0.626230028, 0.636218194, 0.646356667, 0.656292194, 0.666366431, 0.676398569, 0.686312042, 0.696277889, 0.706265806, 0.716223486, 0.726211667, 0.736350042, 0.746285708, 0.756360056, 0.766392083, 0.776305528, 0.786271278, 0.796259306, 0.8062475, 0.816205153, 0.826343542, 0.836309639, 0.846353625, 0.856385653, 0.866329542, 0.876264833, 0.886252819, 0.896241, 0.906198694, 0.916337111, 0.926303139, 0.936347014, 0.946379125, 0.956323083, 0.966258306, 0.976246375, 0.986234542, 0.996192222, 1.006330542, 1.016296694, 1.026340431] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:34.568" endtime="20201112 09:56:34.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.562" endtime="20201112 09:56:34.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:34.572" endtime="20201112 09:56:34.573"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:34.575" endtime="20201112 09:56:34.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.574" endtime="20201112 09:56:34.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.570" endtime="20201112 09:56:34.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.039" endtime="20201112 09:56:34.596"></status>
</kw>
<msg timestamp="20201112 09:56:34.596" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:34.604" endtime="20201112 09:56:36.732"></status>
</kw>
<msg timestamp="20201112 09:56:36.733" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 71834381, 'wakeups': [71844604, 71854583, 71864532, 71874481, 718844...</msg>
<status status="PASS" starttime="20201112 09:56:34.603" endtime="20201112 09:56:36.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:36.740" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 71834381, 'wakeups': [71844604, 71854583, 71864532, 71874481, 718844...</msg>
<status status="PASS" starttime="20201112 09:56:36.735" endtime="20201112 09:56:36.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:36.742" endtime="20201112 09:56:36.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.600" endtime="20201112 09:56:36.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.598" endtime="20201112 09:56:36.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:36.749" level="INFO">${RESULT} = {'start-time': 71834381, 'wakeups': [71844604, 71854583, 71864532, 71874481, 71884460, 71894439, 71904388, 71914550, 71924499, 71934539, 71944580, 71954528, 71964477, 71974456, 71984436, 71994384, 720...</msg>
<status status="PASS" starttime="20201112 09:56:36.747" endtime="20201112 09:56:36.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:36.753" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:36.752" endtime="20201112 09:56:36.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:36.755" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:36.754" endtime="20201112 09:56:36.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.749" endtime="20201112 09:56:36.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:36.760" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:56:36.758" endtime="20201112 09:56:36.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:36.762" level="INFO">VALUE: 71834381</msg>
<status status="PASS" starttime="20201112 09:56:36.761" endtime="20201112 09:56:36.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.756" endtime="20201112 09:56:36.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:36.766" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:36.765" endtime="20201112 09:56:36.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:36.769" level="INFO">VALUE: [71844604, 71854583, 71864532, 71874481, 71884460, 71894439, 71904388, 71914550, 71924499, 71934539, 71944580, 71954528, 71964477, 71974456, 71984436, 71994384, 72004547, 72014495, 72024536, 72034576, 72044525, 72054473, 72064453, 72074432, 72084411, 72094543, 72104492, 72114562, 72124572, 72134521, 72144500, 72154449, 72164428, 72174407, 72184539, 72194488, 72204559, 72214569, 72224517, 72234497, 72244445, 72254425, 72264404, 72274536, 72284484, 72294555, 72304565, 72314514, 72324493, 72334472, 72344421, 72354400, 72364562, 72374481, 72384552, 72394592, 72404510, 72414489, 72424468, 72434417, 72444396, 72454559, 72464477, 72474548, 72484588, 72494506, 72504486, 72514465, 72524414, 72534393, 72544555, 72554473, 72564544, 72574584, 72584533, 72594482, 72604461, 72614440, 72624389, 72634552, 72644500, 72654541, 72664581, 72674530, 72684478, 72694458, 72704437, 72714385, 72724548, 72734497, 72744537, 72754577, 72764526, 72774475, 72784454, 72794433, 72804382, 72814544, 72824493, 72834564]</msg>
<status status="PASS" starttime="20201112 09:56:36.768" endtime="20201112 09:56:36.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.763" endtime="20201112 09:56:36.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:36.777" endtime="20201112 09:56:37.068"></status>
</kw>
<msg timestamp="20201112 09:56:37.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022777778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032998403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:36.774" endtime="20201112 09:56:37.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:37.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022777778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032998403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:37.072" endtime="20201112 09:56:37.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:37.080" endtime="20201112 09:56:37.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.772" endtime="20201112 09:56:37.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.770" endtime="20201112 09:56:37.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:37.106" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:37.083" endtime="20201112 09:56:37.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:37.111" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:56:37.110" endtime="20201112 09:56:37.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:37.113" level="INFO">VALUE: 0.022777778</msg>
<status status="PASS" starttime="20201112 09:56:37.112" endtime="20201112 09:56:37.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.107" endtime="20201112 09:56:37.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:37.118" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:37.117" endtime="20201112 09:56:37.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:37.120" level="INFO">VALUE: [0.032998403, 0.042974389, 0.052918222, 0.062853653, 0.072841528, 0.082829681, 0.092787403, 0.102925833, 0.112891847, 0.122935653, 0.132967833, 0.142911847, 0.152847083, 0.162835111, 0.172823222, 0.182780972, 0.1929195, 0.202885306, 0.212929292, 0.222961431, 0.232905292, 0.242840625, 0.252828625, 0.262816736, 0.272804931, 0.282912931, 0.292878944, 0.302953347, 0.312954847, 0.322898792, 0.332864583, 0.342822125, 0.352810264, 0.362798389, 0.372906417, 0.382872458, 0.392946847, 0.40294825, 0.412892306, 0.422858222, 0.432815486, 0.442803778, 0.452792042, 0.462899875, 0.472866, 0.482940264, 0.492941861, 0.502885792, 0.512851597, 0.522839583, 0.53279725, 0.5427855, 0.552923833, 0.562859403, 0.57293375, 0.582965847, 0.592879264, 0.602845153, 0.612833125, 0.62279075, 0.632779, 0.642917417, 0.652852944, 0.662927292, 0.672959361, 0.682872681, 0.692838667, 0.702826653, 0.71278425, 0.722772514, 0.732910847, 0.742846389, 0.752920819, 0.762952792, 0.772896806, 0.782832181, 0.792820111, 0.802808292, 0.812766083, 0.822904403, 0.832870528, 0.842914347, 0.852946528, 0.862890417, 0.872825681, 0.882813639, 0.892801875, 0.902759528, 0.912897972, 0.922864069, 0.932907875, 0.942939986, 0.952883806, 0.962819139, 0.972807125, 0.982795375, 0.992753028, 1.0028915, 1.012857611, 1.022931931] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:37.119" endtime="20201112 09:56:37.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.114" endtime="20201112 09:56:37.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:37.123" endtime="20201112 09:56:37.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:37.127" endtime="20201112 09:56:37.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.125" endtime="20201112 09:56:37.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.122" endtime="20201112 09:56:37.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.597" endtime="20201112 09:56:37.148"></status>
</kw>
<msg timestamp="20201112 09:56:37.148" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:37.157" endtime="20201112 09:56:39.283"></status>
</kw>
<msg timestamp="20201112 09:56:39.285" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74386962, 'wakeups': [74397155, 74407165, 74417114, 74427062, 744370...</msg>
<status status="PASS" starttime="20201112 09:56:37.155" endtime="20201112 09:56:39.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:39.291" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74386962, 'wakeups': [74397155, 74407165, 74417114, 74427062, 744370...</msg>
<status status="PASS" starttime="20201112 09:56:39.287" endtime="20201112 09:56:39.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:39.293" endtime="20201112 09:56:39.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.152" endtime="20201112 09:56:39.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.150" endtime="20201112 09:56:39.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:39.304" level="INFO">${RESULT} = {'start-time': 74386962, 'wakeups': [74397155, 74407165, 74417114, 74427062, 74437042, 74447021, 74456970, 74467132, 74477081, 74487121, 74497161, 74507110, 74517059, 74527038, 74537017, 74546966, 745...</msg>
<status status="PASS" starttime="20201112 09:56:39.300" endtime="20201112 09:56:39.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:39.312" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:39.310" endtime="20201112 09:56:39.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:39.317" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:39.315" endtime="20201112 09:56:39.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:39.306" endtime="20201112 09:56:39.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:39.329" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:56:39.328" endtime="20201112 09:56:39.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:39.331" level="INFO">VALUE: 74386962</msg>
<status status="PASS" starttime="20201112 09:56:39.330" endtime="20201112 09:56:39.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:39.325" endtime="20201112 09:56:39.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:39.336" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:39.335" endtime="20201112 09:56:39.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:39.338" level="INFO">VALUE: [74397155, 74407165, 74417114, 74427062, 74437042, 74447021, 74456970, 74467132, 74477081, 74487121, 74497161, 74507110, 74517059, 74527038, 74537017, 74546966, 74557128, 74567077, 74577117, 74587158, 74597106, 74607055, 74617034, 74627014, 74636962, 74647125, 74657073, 74667144, 74677154, 74687103, 74697082, 74707031, 74717010, 74726989, 74737121, 74747070, 74757141, 74767150, 74777099, 74787078, 74797027, 74807006, 74816986, 74827117, 74837066, 74847137, 74857147, 74867095, 74877075, 74887023, 74897003, 74906982, 74917144, 74927062, 74937133, 74947174, 74957092, 74967071, 74977050, 74986999, 74996978, 75007141, 75017059, 75027130, 75037170, 75047088, 75057067, 75067047, 75076995, 75086975, 75097137, 75107055, 75117126, 75127166, 75137084, 75147064, 75157043, 75167022, 75176971, 75187133, 75197082, 75207122, 75217163, 75227111, 75237060, 75247039, 75257019, 75266967, 75277130, 75287078, 75297119, 75307159, 75317108, 75327056, 75337036, 75347015, 75356964, 75367126, 75377075, 75387115]</msg>
<status status="PASS" starttime="20201112 09:56:39.337" endtime="20201112 09:56:39.338"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:39.332" endtime="20201112 09:56:39.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:39.345" endtime="20201112 09:56:39.638"></status>
</kw>
<msg timestamp="20201112 09:56:39.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023437222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033650056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:39.344" endtime="20201112 09:56:39.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:39.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023437222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033650056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:39.642" endtime="20201112 09:56:39.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:39.649" endtime="20201112 09:56:39.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:39.341" endtime="20201112 09:56:39.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:39.340" endtime="20201112 09:56:39.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:39.676" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:39.653" endtime="20201112 09:56:39.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:39.680" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:56:39.679" endtime="20201112 09:56:39.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:39.682" level="INFO">VALUE: 0.023437222</msg>
<status status="PASS" starttime="20201112 09:56:39.682" endtime="20201112 09:56:39.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:39.677" endtime="20201112 09:56:39.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:39.688" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:39.687" endtime="20201112 09:56:39.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:39.690" level="INFO">VALUE: [0.033650056, 0.043656194, 0.053600042, 0.063535306, 0.073523306, 0.083511486, 0.093469139, 0.103607611, 0.113573694, 0.123617597, 0.133649611, 0.143593514, 0.153528764, 0.163516792, 0.173505, 0.183462681, 0.193601125, 0.203567181, 0.213611028, 0.223642986, 0.233586931, 0.243522403, 0.253510292, 0.263498542, 0.273456167, 0.283594556, 0.293560681, 0.303635069, 0.313636472, 0.323580556, 0.333546319, 0.343503917, 0.353491958, 0.363480236, 0.373588097, 0.383554167, 0.393628556, 0.403630153, 0.413574097, 0.423539931, 0.433497319, 0.443485458, 0.453473722, 0.463581625, 0.47354775, 0.483622014, 0.493623556, 0.503567431, 0.513533333, 0.523490792, 0.533479042, 0.543467222, 0.553605597, 0.563541208, 0.573615528, 0.583647569, 0.593561125, 0.603526806, 0.613514917, 0.623472542, 0.633460722, 0.643599083, 0.653534639, 0.663609111, 0.673641125, 0.683554472, 0.693520389, 0.703508375, 0.713466069, 0.723454264, 0.733592694, 0.743528278, 0.753602597, 0.763634667, 0.773548125, 0.783513806, 0.793501806, 0.803489972, 0.81344775, 0.823586111, 0.833552153, 0.843596042, 0.853628167, 0.863572111, 0.873507444, 0.883495444, 0.893483556, 0.903441278, 0.913579639, 0.923545806, 0.933589639, 0.943621694, 0.953565583, 0.963500903, 0.973488847, 0.983477056, 0.993434819, 1.003573153, 1.013539347, 1.023583194] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:39.689" endtime="20201112 09:56:39.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:39.684" endtime="20201112 09:56:39.691"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:39.693" endtime="20201112 09:56:39.695"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:39.697" endtime="20201112 09:56:39.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:39.695" endtime="20201112 09:56:39.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:39.692" endtime="20201112 09:56:39.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.148" endtime="20201112 09:56:39.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.037" endtime="20201112 09:56:39.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.037" endtime="20201112 09:56:39.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.157" endtime="20201112 09:56:39.718"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 09:55:23.081" endtime="20201112 09:56:39.719" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:55:21.698" endtime="20201112 09:56:39.722"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.10-devel-1583-gbfb8f-HEAD</item>
</metadata>
<status status="PASS" starttime="20201112 09:53:20.749" endtime="20201112 09:56:39.738"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
