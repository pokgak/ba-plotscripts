<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201112 09:54:12.194" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.432" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:54:13.448" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:54:15.382" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:54:13.428" endtime="20201112 09:54:15.384"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.389" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:54:15.386" endtime="20201112 09:54:15.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.425" endtime="20201112 09:54:15.392"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:15.396" endtime="20201112 09:54:15.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.393" endtime="20201112 09:54:15.733"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.765" endtime="20201112 09:54:15.786"></status>
</kw>
<msg timestamp="20201112 09:54:15.787" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.762" endtime="20201112 09:54:15.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.794" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.790" endtime="20201112 09:54:15.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.801" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:15.796" endtime="20201112 09:54:15.801"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:15.755" endtime="20201112 09:54:15.803"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:15.748" endtime="20201112 09:54:15.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.745" endtime="20201112 09:54:15.806"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:15.814" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:15.812" endtime="20201112 09:54:15.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.808" endtime="20201112 09:54:15.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.743" endtime="20201112 09:54:15.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.742" endtime="20201112 09:54:15.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.818" endtime="20201112 09:54:15.821"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.738" endtime="20201112 09:54:15.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.824" endtime="20201112 09:54:15.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.734" endtime="20201112 09:54:15.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.421" endtime="20201112 09:54:15.830"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:15.845" endtime="20201112 09:54:15.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.842" endtime="20201112 09:54:15.869"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.904" endtime="20201112 09:54:15.925"></status>
</kw>
<msg timestamp="20201112 09:54:15.926" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.901" endtime="20201112 09:54:15.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.933" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.929" endtime="20201112 09:54:15.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.939" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:15.935" endtime="20201112 09:54:15.940"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:15.894" endtime="20201112 09:54:15.942"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:15.887" endtime="20201112 09:54:15.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.884" endtime="20201112 09:54:15.944"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:15.952" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:15.951" endtime="20201112 09:54:15.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.946" endtime="20201112 09:54:15.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.882" endtime="20201112 09:54:15.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.879" endtime="20201112 09:54:15.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.956" endtime="20201112 09:54:15.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.875" endtime="20201112 09:54:15.961"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.871" endtime="20201112 09:54:15.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.839" endtime="20201112 09:54:15.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.982" endtime="20201112 09:54:15.994"></status>
</kw>
<msg timestamp="20201112 09:54:15.995" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.978" endtime="20201112 09:54:15.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.001" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.997" endtime="20201112 09:54:16.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.003" endtime="20201112 09:54:16.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.971" endtime="20201112 09:54:16.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.966" endtime="20201112 09:54:16.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.021" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 09:54:16.019" endtime="20201112 09:54:16.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.026" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 09:54:16.024" endtime="20201112 09:54:16.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.012" endtime="20201112 09:54:16.028"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 09:54:15.831" endtime="20201112 09:54:16.031" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:54:12.453" endtime="20201112 09:54:16.041"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.184" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:54:16.200" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:54:18.134" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:54:16.181" endtime="20201112 09:54:18.135"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.141" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:54:18.138" endtime="20201112 09:54:18.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.178" endtime="20201112 09:54:18.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:18.148" endtime="20201112 09:54:18.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.145" endtime="20201112 09:54:18.487"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.517" endtime="20201112 09:54:18.538"></status>
</kw>
<msg timestamp="20201112 09:54:18.539" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.514" endtime="20201112 09:54:18.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.546" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.542" endtime="20201112 09:54:18.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.552" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:18.548" endtime="20201112 09:54:18.553"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:18.507" endtime="20201112 09:54:18.555"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:18.502" endtime="20201112 09:54:18.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.499" endtime="20201112 09:54:18.557"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:18.565" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:18.564" endtime="20201112 09:54:18.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.559" endtime="20201112 09:54:18.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.497" endtime="20201112 09:54:18.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.495" endtime="20201112 09:54:18.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.569" endtime="20201112 09:54:18.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.492" endtime="20201112 09:54:18.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.576" endtime="20201112 09:54:18.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.489" endtime="20201112 09:54:18.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.174" endtime="20201112 09:54:18.582"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:18.596" endtime="20201112 09:54:18.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.592" endtime="20201112 09:54:18.619"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.714" endtime="20201112 09:54:18.732"></status>
</kw>
<msg timestamp="20201112 09:54:18.734" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.711" endtime="20201112 09:54:18.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.742" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.737" endtime="20201112 09:54:18.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.748" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:18.744" endtime="20201112 09:54:18.749"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:18.704" endtime="20201112 09:54:18.751"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:18.697" endtime="20201112 09:54:18.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.633" endtime="20201112 09:54:18.753"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:18.761" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:18.760" endtime="20201112 09:54:18.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.755" endtime="20201112 09:54:18.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.631" endtime="20201112 09:54:18.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.629" endtime="20201112 09:54:18.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.765" endtime="20201112 09:54:18.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.625" endtime="20201112 09:54:18.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.621" endtime="20201112 09:54:18.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.589" endtime="20201112 09:54:18.772"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 09:54:18.776" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.796" endtime="20201112 09:54:18.807"></status>
</kw>
<msg timestamp="20201112 09:54:18.808" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.793" endtime="20201112 09:54:18.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.814" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.810" endtime="20201112 09:54:18.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.817" endtime="20201112 09:54:18.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.786" endtime="20201112 09:54:18.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.781" endtime="20201112 09:54:18.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.842" endtime="20201112 09:54:19.200"></status>
</kw>
<msg timestamp="20201112 09:54:19.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.190743597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.190744069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:18.838" endtime="20201112 09:54:19.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.190743597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.190744069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:19.210" endtime="20201112 09:54:19.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.229" endtime="20201112 09:54:19.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.831" endtime="20201112 09:54:19.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.826" endtime="20201112 09:54:19.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.245" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:19.243" endtime="20201112 09:54:19.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.258" level="INFO">VALUE: [{'time': 0.190743597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.190744069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190753514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.445000000024573e-06, 'source_diff': 9.445000000024573e-06}, {'time': 0.190753986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 0.190761042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.05600000000528e-06, 'source_diff': 7.05600000000528e-06}, {'time': 0.190761514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190768653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.139000000017104e-06, 'source_diff': 7.139000000017104e-06}, {'time': 0.190769125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190775458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3329999999972575e-06, 'source_diff': 6.3329999999972575e-06}, {'time': 0.190775931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190781611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.679999999980145e-06, 'source_diff': 5.679999999980145e-06}, {'time': 0.190782083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190792458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0375000000006906e-05, 'source_diff': 1.0375000000006906e-05}, {'time': 0.190792931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190802083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152000000012261e-06, 'source_diff': 9.152000000012261e-06}, {'time': 0.190802556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190806986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.190807458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190818278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0819999999994723e-05, 'source_diff': 1.0819999999994723e-05}, {'time': 0.19081875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190827042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.291999999993083e-06, 'source_diff': 8.291999999993083e-06}, {'time': 0.190827514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190836333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.818999999993249e-06, 'source_diff': 8.818999999993249e-06}, {'time': 0.190836806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190847111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0305000000015996e-05, 'source_diff': 1.0305000000015996e-05}, {'time': 0.190847583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 0.19085325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000014744e-06, 'source_diff': 5.667000000014744e-06}, {'time': 0.190853722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190860556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.833999999983353e-06, 'source_diff': 6.833999999983353e-06}, {'time': 0.190861028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190871528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0500000000024379e-05, 'source_diff': 1.0500000000024379e-05}, {'time': 0.190872, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190881889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.88899999998516e-06, 'source_diff': 9.88899999998516e-06}, {'time': 0.190882361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190887111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.190887583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190893458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999988528e-06, 'source_diff': 5.874999999988528e-06}, {'time': 0.190893931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190904333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.040200000002045e-05, 'source_diff': 1.040200000002045e-05}, {'time': 0.190904806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190912153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.346999999990889e-06, 'source_diff': 7.346999999990889e-06}, {'time': 0.190912625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190921028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402999999990168e-06, 'source_diff': 8.402999999990168e-06}, {'time': 0.1909215, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190925931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.190926403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190935236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.833000000013635e-06, 'source_diff': 8.833000000013635e-06}, {'time': 0.190935708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190944042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.333999999998731e-06, 'source_diff': 8.333999999998731e-06}, {'time': 0.190944514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190949569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0550000000038064e-06, 'source_diff': 5.0550000000038064e-06}, {'time': 0.190950042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999730783e-07, 'source_diff': 4.729999999730783e-07}, {'time': 0.190954444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.40200000001445e-06, 'source_diff': 4.40200000001445e-06}, {'time': 0.190954917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190962069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.152000000010261e-06, 'source_diff': 7.152000000010261e-06}, {'time': 0.190962542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190970014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.471999999980605e-06, 'source_diff': 7.471999999980605e-06}, {'time': 0.190970486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190981417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0930999999991808e-05, 'source_diff': 1.0930999999991808e-05}, {'time': 0.190981889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190991014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.190991486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190996667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.181000000020752e-06, 'source_diff': 5.181000000020752e-06}, {'time': 0.190997139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.191007306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.016699999997761e-05, 'source_diff': 1.016699999997761e-05}, {'time': 0.191007778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.191012333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.555000000017184e-06, 'source_diff': 4.555000000017184e-06}, {'time': 0.191012806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.191022972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0166000000005893e-05, 'source_diff': 1.0166000000005893e-05}, {'time': 0.191023444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 0.191032806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.362000000012749e-06, 'source_diff': 9.362000000012749e-06}, {'time': 0.191033278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.19104375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0472000000011361e-05, 'source_diff': 1.0472000000011361e-05}, {'time': 0.191044222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.191050556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.333999999996731e-06, 'source_diff': 6.333999999996731e-06}, {'time': 0.191051028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.191061083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0054999999981051e-05, 'source_diff': 1.0054999999981051e-05}, {'time': 0.191061556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.191067056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.500000000019378e-06, 'source_diff': 5.500000000019378e-06}, {'time': 0.191067528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 0.191076875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.347000000020644e-06, 'source_diff': 9.347000000020644e-06}, {'time': 0.191077347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.191084333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.985999999986614e-06, 'source_diff': 6.985999999986614e-06}, {'time': 0.191084875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 0.191090972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000010455e-06, 'source_diff': 6.097000000010455e-06}, {'time': 0.191091444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.191100056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.611999999991182e-06, 'source_diff': 8.611999999991182e-06}, {'time': 0.191100528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.191111125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.191111597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.191121583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.98600000001737e-06, 'source_diff': 9.98600000001737e-06}, {'time': 0.191122056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.191130347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.290999999993609e-06, 'source_diff': 8.290999999993609e-06}, {'time': 0.191130819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.191137653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.833999999983353e-06, 'source_diff': 6.833999999983353e-06}, {'time': 0.191138125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.191145278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.153000000009735e-06, 'source_diff': 7.153000000009735e-06}, {'time': 0.19114575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.191153333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5830000000054465e-06, 'source_diff': 7.5830000000054465e-06}, {'time': 0.191153806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 09:54:19.248" endtime="20201112 09:54:19.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.237" endtime="20201112 09:54:19.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:19.319" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:19.263" endtime="20201112 09:54:19.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.328" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:19.326" endtime="20201112 09:54:19.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.337" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.720000000013602e-07, 9.445000000024573e-06, 4.7199999997360464e-07, 7.05600000000528e-06, 4.720000000013602e-07, 7.139000000017104e-06, 4.720000000013602e-07, 6.3329999999972575e-06, 4.7300000000083386e-07, 5.679999999980145e-06, 4.720000000013602e-07, 1.0375000000006906e-05, 4.7300000000083386e-07, 9.152000000012261e-06, 4.7300000000083386e-07, 4.429999999999712e-06, 4.720000000013602e-07, 1.0819999999994723e-05, 4.720000000013602e-07, 8.291999999993083e-06, 4.720000000013602e-07, 8.818999999993249e-06, 4.7300000000083386e-07, 1.0305000000015996e-05, 4.7199999997360464e-07, 5.667000000014744e-06, 4.720000000013602e-07, 6.833999999983353e-06, 4.720000000013602e-07, 1.0500000000024379e-05, 4.720000000013602e-07, 9.88899999998516e-06, 4.720000000013602e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 5.874999999988528e-06, 4.7300000000083386e-07, 1.040200000002045e-05, 4.7300000000083386e-07, 7.346999999990889e-06, 4.720000000013602e-07, 8.402999999990168e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 8.833000000013635e-06, 4.720000000013602e-07, 8.333999999998731e-06, 4.720000000013602e-07, 5.0550000000038064e-06, 4.729999999730783e-07, 4.40200000001445e-06, 4.7300000000083386e-07, 7.152000000010261e-06, 4.7300000000083386e-07, 7.471999999980605e-06, 4.720000000013602e-07, 1.0930999999991808e-05, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 5.181000000020752e-06, 4.720000000013602e-07, 1.016699999997761e-05, 4.720000000013602e-07, 4.555000000017184e-06, 4.7300000000083386e-07, 1.0166000000005893e-05, 4.7199999997360464e-07, 9.362000000012749e-06, 4.720000000013602e-07, 1.0472000000011361e-05, 4.720000000013602e-07, 6.333999999996731e-06, 4.720000000013602e-07, 1.0054999999981051e-05, 4.7300000000083386e-07, 5.500000000019378e-06, 4.7199999997360464e-07, 9.347000000020644e-06, 4.720000000013602e-07, 6.985999999986614e-06, 5.419999999922709e-07, 6.097000000010455e-06, 4.720000000013602e-07, 8.611999999991182e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 9.98600000001737e-06, 4.7300000000083386e-07, 8.290999999993609e-06, 4.720000000013602e-07, 6.833999999983353e-06, 4.720000000013602e-07, 7.153000000009735e-06, 4.720000000013602e-07, 7.5830000000054465e-06, 4.7300000000083386e-07], 'time': [0.190743597, 0.190744069, 0.190753514, 0.190753986, 0.190761042, 0.190761514, 0.190768653, 0.190769125, 0.190775458, 0.190775931, 0.190781611, 0.190782083, 0.190792458, 0.190792931, 0.190802083, 0.190802556, 0.190806986, 0.190807458, 0.190818278, 0.19081875, 0.190827042, 0.190827514, 0.190836333, 0.190836806, 0.190847111, 0.190847583, 0.19085325, 0.190853722, 0.190860556, 0.190861028, 0.190871528, 0.190872, 0.190881889, 0.190882361, 0.190887111, 0.190887583, 0.190893458, 0.190893931, 0.190904333, 0.190904806, 0.190912153, 0.190912625, 0.190921028, 0.1909215, 0.190925931, 0.190926403, 0.190935236, 0.190935708, 0.190944042, 0.190944514, 0.190949569, 0.190950042, 0.190954444, 0.190954917, 0.190962069, 0.190962542, 0.190970014, 0.190970486, 0.190981417, 0.190981889, 0.190991014, 0.190991486, 0.190996667, 0.190997139, 0.191007306, 0.191007778, 0.191012333, 0.191012806, 0.191022972, 0.191023444, 0.191032806, 0.191033278, 0.19104375, 0.191044222, 0.191050556, 0.191051028, 0.191061083, 0.191061556, 0.191067056, 0.191067528, 0.191076875, 0.191077347, 0.191084333, 0.191084875, 0.191090972, 0.191091444, 0.191100056, 0.191100528, 0.191111125, 0.191111597, 0.191121583, 0.191122056, 0.191130347, 0.191130819, 0.191137653, 0.191138125, 0.191145278, 0.19114575, 0.191153333, 0.191153806], 'diff': [0, 4.720000000013602e-07, 9.445000000024573e-06, 4.7199999997360464e-07, 7.05600000000528e-06, 4.720000000013602e-07, 7.139000000017104e-06, 4.720000000013602e-07, 6.3329999999972575e-06, 4.7300000000083386e-07, 5.679999999980145e-06, 4.720000000013602e-07, 1.0375000000006906e-05, 4.7300000000083386e-07, 9.152000000012261e-06, 4.7300000000083386e-07, 4.429999999999712e-06, 4.720000000013602e-07, 1.0819999999994723e-05, 4.720000000013602e-07, 8.291999999993083e-06, 4.720000000013602e-07, 8.818999999993249e-06, 4.7300000000083386e-07, 1.0305000000015996e-05, 4.7199999997360464e-07, 5.667000000014744e-06, 4.720000000013602e-07, 6.833999999983353e-06, 4.720000000013602e-07, 1.0500000000024379e-05, 4.720000000013602e-07, 9.88899999998516e-06, 4.720000000013602e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 5.874999999988528e-06, 4.7300000000083386e-07, 1.040200000002045e-05, 4.7300000000083386e-07, 7.346999999990889e-06, 4.720000000013602e-07, 8.402999999990168e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 8.833000000013635e-06, 4.720000000013602e-07, 8.333999999998731e-06, 4.720000000013602e-07, 5.0550000000038064e-06, 4.729999999730783e-07, 4.40200000001445e-06, 4.7300000000083386e-07, 7.152000000010261e-06, 4.7300000000083386e-07, 7.471999999980605e-06, 4.720000000013602e-07, 1.0930999999991808e-05, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 5.181000000020752e-06, 4.720000000013602e-07, 1.016699999997761e-05, 4.720000000013602e-07, 4.555000000017184e-06, 4.7300000000083386e-07, 1.0166000000005893e-05, 4.7199999997360464e-07, 9.362000000012749e-06, 4.720000000013602e-07, 1.0472000000011361e-05, 4.720000000013602e-07, 6.333999999996731e-06, 4.720000000013602e-07, 1.0054999999981051e-05, 4.7300000000083386e-07, 5.500000000019378e-06, 4.7199999997360464e-07, 9.347000000020644e-06, 4.720000000013602e-07, 6.985999999986614e-06, 5.419999999922709e-07, 6.097000000010455e-06, 4.720000000013602e-07, 8.611999999991182e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 9.98600000001737e-06, 4.7300000000083386e-07, 8.290999999993609e-06, 4.720000000013602e-07, 6.833999999983353e-06, 4.720000000013602e-07, 7.153000000009735e-06, 4.720000000013602e-07, 7.5830000000054465e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 09:54:19.330" endtime="20201112 09:54:19.340"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.321" endtime="20201112 09:54:19.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:19.352" level="INFO">${RESULT} = [{'time': 0.190744069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190753986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:19.343" endtime="20201112 09:54:19.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:19.383" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:19.354" endtime="20201112 09:54:19.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.393" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:19.391" endtime="20201112 09:54:19.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.398" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999730783e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 5.419999999922709e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 09:54:19.395" endtime="20201112 09:54:19.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.385" endtime="20201112 09:54:19.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.407" endtime="20201112 09:54:19.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:19.415" endtime="20201112 09:54:19.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.411" endtime="20201112 09:54:19.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.403" endtime="20201112 09:54:19.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.778" endtime="20201112 09:54:19.441"></status>
</kw>
<msg timestamp="20201112 09:54:19.442" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.462" endtime="20201112 09:54:19.472"></status>
</kw>
<msg timestamp="20201112 09:54:19.474" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:19.458" endtime="20201112 09:54:19.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.480" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:19.476" endtime="20201112 09:54:19.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.482" endtime="20201112 09:54:19.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.451" endtime="20201112 09:54:19.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.446" endtime="20201112 09:54:19.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.505" endtime="20201112 09:54:19.844"></status>
</kw>
<msg timestamp="20201112 09:54:19.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036167972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036168514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:19.502" endtime="20201112 09:54:19.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036167972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036168514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:19.854" endtime="20201112 09:54:19.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.873" endtime="20201112 09:54:19.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.495" endtime="20201112 09:54:19.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.490" endtime="20201112 09:54:19.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.890" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:19.888" endtime="20201112 09:54:19.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.901" level="INFO">VALUE: [{'time': 0.036167972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036168514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036177556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.042000000000772e-06, 'source_diff': 9.042000000000772e-06}, {'time': 0.036178028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036188097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0069000000001438e-05, 'source_diff': 1.0069000000001438e-05}, {'time': 0.036188569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036193097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.52800000000364e-06, 'source_diff': 4.52800000000364e-06}, {'time': 0.036193569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036203125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.556000000000842e-06, 'source_diff': 9.556000000000842e-06}, {'time': 0.036203597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036209306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.036209778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036214222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.036214694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036221847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.153000000002796e-06, 'source_diff': 7.153000000002796e-06}, {'time': 0.036222319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036227167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847999999994801e-06, 'source_diff': 4.847999999994801e-06}, {'time': 0.036227639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036234181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.541999999998271e-06, 'source_diff': 6.541999999998271e-06}, {'time': 0.036234653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036245333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0679999999999024e-05, 'source_diff': 1.0679999999999024e-05}, {'time': 0.036245806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036251333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.526999999998228e-06, 'source_diff': 5.526999999998228e-06}, {'time': 0.036251875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.036259861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.985999999994553e-06, 'source_diff': 7.985999999994553e-06}, {'time': 0.036260333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036269611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.278000000001452e-06, 'source_diff': 9.278000000001452e-06}, {'time': 0.036270153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036280236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0083000000001008e-05, 'source_diff': 1.0083000000001008e-05}, {'time': 0.036280708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036290264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.556000000000842e-06, 'source_diff': 9.556000000000842e-06}, {'time': 0.036290736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036296319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.583000000003446e-06, 'source_diff': 5.583000000003446e-06}, {'time': 0.036296792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036305944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.151999999998384e-06, 'source_diff': 9.151999999998384e-06}, {'time': 0.036306417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036313028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.610999999996647e-06, 'source_diff': 6.610999999996647e-06}, {'time': 0.0363135, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036319306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.80600000000403e-06, 'source_diff': 5.80600000000403e-06}, {'time': 0.036319778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036327861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.083000000005947e-06, 'source_diff': 8.083000000005947e-06}, {'time': 0.036328333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036337792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.459000000003326e-06, 'source_diff': 9.459000000003326e-06}, {'time': 0.036338264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036343125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999994897e-06, 'source_diff': 4.860999999994897e-06}, {'time': 0.036343597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036353556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.959000000003826e-06, 'source_diff': 9.959000000003826e-06}, {'time': 0.036354028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036358583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.555000000003306e-06, 'source_diff': 4.555000000003306e-06}, {'time': 0.036359056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036369958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902000000000134e-05, 'source_diff': 1.0902000000000134e-05}, {'time': 0.036370431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036379722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.291000000001548e-06, 'source_diff': 9.291000000001548e-06}, {'time': 0.036380264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036384694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.036385167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036390125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.036390597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036401403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.036401875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036406639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7639999999973814e-06, 'source_diff': 4.7639999999973814e-06}, {'time': 0.036407111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0364135, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.389000000002476e-06, 'source_diff': 6.389000000002476e-06}, {'time': 0.036414042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036423778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.735999999996303e-06, 'source_diff': 9.735999999996303e-06}, {'time': 0.03642425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036432236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.036432708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036437083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.036437625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036447042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.416999999997677e-06, 'source_diff': 9.416999999997677e-06}, {'time': 0.036447514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036452681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.036453153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036462083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.929999999997273e-06, 'source_diff': 8.929999999997273e-06}, {'time': 0.036462556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036473389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0833000000001758e-05, 'source_diff': 1.0833000000001758e-05}, {'time': 0.036473861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036484333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0471999999997483e-05, 'source_diff': 1.0471999999997483e-05}, {'time': 0.036484806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036493417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.036493889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036500833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.944000000001782e-06, 'source_diff': 6.944000000001782e-06}, {'time': 0.036501306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036506167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.036506639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036515458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.036515931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036524458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.527000000001228e-06, 'source_diff': 8.527000000001228e-06}, {'time': 0.036524931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036534153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.222000000003172e-06, 'source_diff': 9.222000000003172e-06}, {'time': 0.036534625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036539583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.036540056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036550556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0499999999996623e-05, 'source_diff': 1.0499999999996623e-05}, {'time': 0.036551028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036556097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.069000000003376e-06, 'source_diff': 5.069000000003376e-06}, {'time': 0.036556569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036566958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.036567431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 09:54:19.892" endtime="20201112 09:54:19.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.882" endtime="20201112 09:54:19.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:19.962" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:19.907" endtime="20201112 09:54:19.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.972" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:19.970" endtime="20201112 09:54:19.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.981" level="INFO">VALUE: {'sourceeventsource_diff': [0, 5.419999999992098e-07, 9.042000000000772e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.7199999999442133e-07, 4.52800000000364e-06, 4.720000000013602e-07, 9.556000000000842e-06, 4.7199999999442133e-07, 5.7089999999995755e-06, 4.720000000013602e-07, 4.443999999999282e-06, 4.720000000013602e-07, 7.153000000002796e-06, 4.720000000013602e-07, 4.847999999994801e-06, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 1.0679999999999024e-05, 4.7300000000083386e-07, 5.526999999998228e-06, 5.420000000061487e-07, 7.985999999994553e-06, 4.720000000013602e-07, 9.278000000001452e-06, 5.419999999992098e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 9.556000000000842e-06, 4.7199999999442133e-07, 5.583000000003446e-06, 4.7300000000083386e-07, 9.151999999998384e-06, 4.7300000000083386e-07, 6.610999999996647e-06, 4.720000000013602e-07, 5.80600000000403e-06, 4.7199999999442133e-07, 8.083000000005947e-06, 4.7199999999442133e-07, 9.459000000003326e-06, 4.720000000013602e-07, 4.860999999994897e-06, 4.720000000013602e-07, 9.959000000003826e-06, 4.7199999999442133e-07, 4.555000000003306e-06, 4.7300000000083386e-07, 1.0902000000000134e-05, 4.7300000000083386e-07, 9.291000000001548e-06, 5.419999999992098e-07, 4.429999999999712e-06, 4.7300000000083386e-07, 4.957999999999352e-06, 4.7199999999442133e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 4.7639999999973814e-06, 4.720000000013602e-07, 6.389000000002476e-06, 5.419999999992098e-07, 9.735999999996303e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 4.375000000000906e-06, 5.419999999992098e-07, 9.416999999997677e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 8.929999999997273e-06, 4.7300000000083386e-07, 1.0833000000001758e-05, 4.720000000013602e-07, 1.0471999999997483e-05, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 6.944000000001782e-06, 4.7299999999389497e-07, 4.861000000001836e-06, 4.720000000013602e-07, 8.819000000000188e-06, 4.7300000000083386e-07, 8.527000000001228e-06, 4.7299999999389497e-07, 9.222000000003172e-06, 4.720000000013602e-07, 4.957999999999352e-06, 4.7300000000083386e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 5.069000000003376e-06, 4.7199999999442133e-07, 1.0388999999999537e-05, 4.7300000000083386e-07], 'time': [0.036167972, 0.036168514, 0.036177556, 0.036178028, 0.036188097, 0.036188569, 0.036193097, 0.036193569, 0.036203125, 0.036203597, 0.036209306, 0.036209778, 0.036214222, 0.036214694, 0.036221847, 0.036222319, 0.036227167, 0.036227639, 0.036234181, 0.036234653, 0.036245333, 0.036245806, 0.036251333, 0.036251875, 0.036259861, 0.036260333, 0.036269611, 0.036270153, 0.036280236, 0.036280708, 0.036290264, 0.036290736, 0.036296319, 0.036296792, 0.036305944, 0.036306417, 0.036313028, 0.0363135, 0.036319306, 0.036319778, 0.036327861, 0.036328333, 0.036337792, 0.036338264, 0.036343125, 0.036343597, 0.036353556, 0.036354028, 0.036358583, 0.036359056, 0.036369958, 0.036370431, 0.036379722, 0.036380264, 0.036384694, 0.036385167, 0.036390125, 0.036390597, 0.036401403, 0.036401875, 0.036406639, 0.036407111, 0.0364135, 0.036414042, 0.036423778, 0.03642425, 0.036432236, 0.036432708, 0.036437083, 0.036437625, 0.036447042, 0.036447514, 0.036452681, 0.036453153, 0.036462083, 0.036462556, 0.036473389, 0.036473861, 0.036484333, 0.036484806, 0.036493417, 0.036493889, 0.036500833, 0.036501306, 0.036506167, 0.036506639, 0.036515458, 0.036515931, 0.036524458, 0.036524931, 0.036534153, 0.036534625, 0.036539583, 0.036540056, 0.036550556, 0.036551028, 0.036556097, 0.036556569, 0.036566958, 0.036567431], 'diff': [0, 5.419999999992098e-07, 9.042000000000772e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.7199999999442133e-07, 4.52800000000364e-06, 4.720000000013602e-07, 9.556000000000842e-06, 4.7199999999442133e-07, 5.7089999999995755e-06, 4.720000000013602e-07, 4.443999999999282e-06, 4.720000000013602e-07, 7.153000000002796e-06, 4.720000000013602e-07, 4.847999999994801e-06, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 1.0679999999999024e-05, 4.7300000000083386e-07, 5.526999999998228e-06, 5.420000000061487e-07, 7.985999999994553e-06, 4.720000000013602e-07, 9.278000000001452e-06, 5.419999999992098e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 9.556000000000842e-06, 4.7199999999442133e-07, 5.583000000003446e-06, 4.7300000000083386e-07, 9.151999999998384e-06, 4.7300000000083386e-07, 6.610999999996647e-06, 4.720000000013602e-07, 5.80600000000403e-06, 4.7199999999442133e-07, 8.083000000005947e-06, 4.7199999999442133e-07, 9.459000000003326e-06, 4.720000000013602e-07, 4.860999999994897e-06, 4.720000000013602e-07, 9.959000000003826e-06, 4.7199999999442133e-07, 4.555000000003306e-06, 4.7300000000083386e-07, 1.0902000000000134e-05, 4.7300000000083386e-07, 9.291000000001548e-06, 5.419999999992098e-07, 4.429999999999712e-06, 4.7300000000083386e-07, 4.957999999999352e-06, 4.7199999999442133e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 4.7639999999973814e-06, 4.720000000013602e-07, 6.389000000002476e-06, 5.419999999992098e-07, 9.735999999996303e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 4.375000000000906e-06, 5.419999999992098e-07, 9.416999999997677e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 8.929999999997273e-06, 4.7300000000083386e-07, 1.0833000000001758e-05, 4.720000000013602e-07, 1.0471999999997483e-05, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 6.944000000001782e-06, 4.7299999999389497e-07, 4.861000000001836e-06, 4.720000000013602e-07, 8.819000000000188e-06, 4.7300000000083386e-07, 8.527000000001228e-06, 4.7299999999389497e-07, 9.222000000003172e-06, 4.720000000013602e-07, 4.957999999999352e-06, 4.7300000000083386e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 5.069000000003376e-06, 4.7199999999442133e-07, 1.0388999999999537e-05, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 09:54:19.974" endtime="20201112 09:54:19.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.964" endtime="20201112 09:54:19.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:19.995" level="INFO">${RESULT} = [{'time': 0.036168514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036178028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:19.986" endtime="20201112 09:54:19.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:20.026" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:19.997" endtime="20201112 09:54:20.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.036" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:20.034" endtime="20201112 09:54:20.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.042" level="INFO">VALUE: [5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.420000000061487e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 09:54:20.039" endtime="20201112 09:54:20.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.028" endtime="20201112 09:54:20.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.051" endtime="20201112 09:54:20.053"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:20.059" endtime="20201112 09:54:20.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.055" endtime="20201112 09:54:20.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.046" endtime="20201112 09:54:20.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.443" endtime="20201112 09:54:20.085"></status>
</kw>
<msg timestamp="20201112 09:54:20.085" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.106" endtime="20201112 09:54:20.117"></status>
</kw>
<msg timestamp="20201112 09:54:20.118" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.102" endtime="20201112 09:54:20.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.124" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.120" endtime="20201112 09:54:20.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.127" endtime="20201112 09:54:20.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.094" endtime="20201112 09:54:20.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.090" endtime="20201112 09:54:20.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.150" endtime="20201112 09:54:20.490"></status>
</kw>
<msg timestamp="20201112 09:54:20.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037570111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037570583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:20.147" endtime="20201112 09:54:20.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037570111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037570583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:20.499" endtime="20201112 09:54:20.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.519" endtime="20201112 09:54:20.523"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.140" endtime="20201112 09:54:20.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.135" endtime="20201112 09:54:20.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.535" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:20.533" endtime="20201112 09:54:20.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.547" level="INFO">VALUE: [{'time': 0.037570111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037570583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037579431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.84800000000574e-06, 'source_diff': 8.84800000000574e-06}, {'time': 0.037579972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037587014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.037587486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037595056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.037595528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037603847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.037604319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037613861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.037614333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037620542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.037621014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037630458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.443999999997343e-06, 'source_diff': 9.443999999997343e-06}, {'time': 0.037630931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037635236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305000000003056e-06, 'source_diff': 4.305000000003056e-06}, {'time': 0.037635708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.0376465, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0792000000002522e-05, 'source_diff': 1.0792000000002522e-05}, {'time': 0.037646972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037652556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.583999999995981e-06, 'source_diff': 5.583999999995981e-06}, {'time': 0.037653028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037660181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.153000000002796e-06, 'source_diff': 7.153000000002796e-06}, {'time': 0.037660653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037670736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0083000000001008e-05, 'source_diff': 1.0083000000001008e-05}, {'time': 0.037671208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037678583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000003906e-06, 'source_diff': 7.375000000003906e-06}, {'time': 0.037679056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037684847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.790999999998048e-06, 'source_diff': 5.790999999998048e-06}, {'time': 0.037685319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03769475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.430999999997247e-06, 'source_diff': 9.430999999997247e-06}, {'time': 0.037695222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037700986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.037701528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037710208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680000000003962e-06, 'source_diff': 8.680000000003962e-06}, {'time': 0.037710681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03771575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0689999999964375e-06, 'source_diff': 5.0689999999964375e-06}, {'time': 0.037716222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037725139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.916999999997177e-06, 'source_diff': 8.916999999997177e-06}, {'time': 0.037725611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037734764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.037735236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037743833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.037744306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037751986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680000000002962e-06, 'source_diff': 7.680000000002962e-06}, {'time': 0.037752458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037761569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.037762042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037771903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.037772375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037782875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0500000000003562e-05, 'source_diff': 1.0500000000003562e-05}, {'time': 0.037783347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037791236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.888999999997037e-06, 'source_diff': 7.888999999997037e-06}, {'time': 0.037791708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037802083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.037802556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037809292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.037809764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037818056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.037818528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037825167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.639000000002726e-06, 'source_diff': 6.639000000002726e-06}, {'time': 0.037825639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037835917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0277999999995513e-05, 'source_diff': 1.0277999999995513e-05}, {'time': 0.037836389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037844486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.037844958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037849597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.037850069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037854514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.037854986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037861181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.037861653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037869861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.207999999995663e-06, 'source_diff': 8.207999999995663e-06}, {'time': 0.037870333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037881153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0820000000001662e-05, 'source_diff': 1.0820000000001662e-05}, {'time': 0.037881625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037890986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.037891528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037898694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.165999999995953e-06, 'source_diff': 7.165999999995953e-06}, {'time': 0.037899167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037907361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194000000003032e-06, 'source_diff': 8.194000000003032e-06}, {'time': 0.037907833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037916222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.388999999997537e-06, 'source_diff': 8.388999999997537e-06}, {'time': 0.037916694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037924069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.374999999996967e-06, 'source_diff': 7.374999999996967e-06}, {'time': 0.037924542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037934722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.037935194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037942764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.037943236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037948931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.037949403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037955639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.037956111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037960931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8200000000026e-06, 'source_diff': 4.8200000000026e-06}, {'time': 0.037961403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037972097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0694000000005532e-05, 'source_diff': 1.0694000000005532e-05}, {'time': 0.037972569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037979736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.167000000002366e-06, 'source_diff': 7.167000000002366e-06}, {'time': 0.037980208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:54:20.538" endtime="20201112 09:54:20.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.527" endtime="20201112 09:54:20.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:20.607" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:20.553" endtime="20201112 09:54:20.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.616" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:20.614" endtime="20201112 09:54:20.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.626" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.7199999999442133e-07, 8.84800000000574e-06, 5.409999999997361e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 8.318999999999688e-06, 4.7199999999442133e-07, 9.542000000001272e-06, 4.720000000013602e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 9.443999999997343e-06, 4.7300000000083386e-07, 4.305000000003056e-06, 4.7199999999442133e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 5.583999999995981e-06, 4.720000000013602e-07, 7.153000000002796e-06, 4.720000000013602e-07, 1.0083000000001008e-05, 4.7199999999442133e-07, 7.375000000003906e-06, 4.7300000000083386e-07, 5.790999999998048e-06, 4.720000000013602e-07, 9.430999999997247e-06, 4.720000000013602e-07, 5.7639999999983815e-06, 5.419999999992098e-07, 8.680000000003962e-06, 4.7300000000083386e-07, 5.0689999999964375e-06, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.7300000000083386e-07, 7.680000000002962e-06, 4.720000000013602e-07, 9.110999999999148e-06, 4.7300000000083386e-07, 9.860999999999898e-06, 4.7199999999442133e-07, 1.0500000000003562e-05, 4.720000000013602e-07, 7.888999999997037e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.7300000000083386e-07, 6.736000000000242e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.7199999999442133e-07, 6.639000000002726e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 8.096999999998578e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 4.4449999999987555e-06, 4.720000000013602e-07, 6.195000000000506e-06, 4.720000000013602e-07, 8.207999999995663e-06, 4.720000000013602e-07, 1.0820000000001662e-05, 4.720000000013602e-07, 9.360999999999398e-06, 5.419999999992098e-07, 7.165999999995953e-06, 4.7300000000083386e-07, 8.194000000003032e-06, 4.720000000013602e-07, 8.388999999997537e-06, 4.720000000013602e-07, 7.374999999996967e-06, 4.7300000000083386e-07, 1.0179999999998524e-05, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 5.695000000000006e-06, 4.720000000013602e-07, 6.235999999999742e-06, 4.720000000013602e-07, 4.8200000000026e-06, 4.7199999999442133e-07, 1.0694000000005532e-05, 4.7199999999442133e-07, 7.167000000002366e-06, 4.720000000013602e-07], 'time': [0.037570111, 0.037570583, 0.037579431, 0.037579972, 0.037587014, 0.037587486, 0.037595056, 0.037595528, 0.037603847, 0.037604319, 0.037613861, 0.037614333, 0.037620542, 0.037621014, 0.037630458, 0.037630931, 0.037635236, 0.037635708, 0.0376465, 0.037646972, 0.037652556, 0.037653028, 0.037660181, 0.037660653, 0.037670736, 0.037671208, 0.037678583, 0.037679056, 0.037684847, 0.037685319, 0.03769475, 0.037695222, 0.037700986, 0.037701528, 0.037710208, 0.037710681, 0.03771575, 0.037716222, 0.037725139, 0.037725611, 0.037734764, 0.037735236, 0.037743833, 0.037744306, 0.037751986, 0.037752458, 0.037761569, 0.037762042, 0.037771903, 0.037772375, 0.037782875, 0.037783347, 0.037791236, 0.037791708, 0.037802083, 0.037802556, 0.037809292, 0.037809764, 0.037818056, 0.037818528, 0.037825167, 0.037825639, 0.037835917, 0.037836389, 0.037844486, 0.037844958, 0.037849597, 0.037850069, 0.037854514, 0.037854986, 0.037861181, 0.037861653, 0.037869861, 0.037870333, 0.037881153, 0.037881625, 0.037890986, 0.037891528, 0.037898694, 0.037899167, 0.037907361, 0.037907833, 0.037916222, 0.037916694, 0.037924069, 0.037924542, 0.037934722, 0.037935194, 0.037942764, 0.037943236, 0.037948931, 0.037949403, 0.037955639, 0.037956111, 0.037960931, 0.037961403, 0.037972097, 0.037972569, 0.037979736, 0.037980208], 'diff': [0, 4.7199999999442133e-07, 8.84800000000574e-06, 5.409999999997361e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 8.318999999999688e-06, 4.7199999999442133e-07, 9.542000000001272e-06, 4.720000000013602e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 9.443999999997343e-06, 4.7300000000083386e-07, 4.305000000003056e-06, 4.7199999999442133e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 5.583999999995981e-06, 4.720000000013602e-07, 7.153000000002796e-06, 4.720000000013602e-07, 1.0083000000001008e-05, 4.7199999999442133e-07, 7.375000000003906e-06, 4.7300000000083386e-07, 5.790999999998048e-06, 4.720000000013602e-07, 9.430999999997247e-06, 4.720000000013602e-07, 5.7639999999983815e-06, 5.419999999992098e-07, 8.680000000003962e-06, 4.7300000000083386e-07, 5.0689999999964375e-06, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.7300000000083386e-07, 7.680000000002962e-06, 4.720000000013602e-07, 9.110999999999148e-06, 4.7300000000083386e-07, 9.860999999999898e-06, 4.7199999999442133e-07, 1.0500000000003562e-05, 4.720000000013602e-07, 7.888999999997037e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.7300000000083386e-07, 6.736000000000242e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.7199999999442133e-07, 6.639000000002726e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 8.096999999998578e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 4.4449999999987555e-06, 4.720000000013602e-07, 6.195000000000506e-06, 4.720000000013602e-07, 8.207999999995663e-06, 4.720000000013602e-07, 1.0820000000001662e-05, 4.720000000013602e-07, 9.360999999999398e-06, 5.419999999992098e-07, 7.165999999995953e-06, 4.7300000000083386e-07, 8.194000000003032e-06, 4.720000000013602e-07, 8.388999999997537e-06, 4.720000000013602e-07, 7.374999999996967e-06, 4.7300000000083386e-07, 1.0179999999998524e-05, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 5.695000000000006e-06, 4.720000000013602e-07, 6.235999999999742e-06, 4.720000000013602e-07, 4.8200000000026e-06, 4.7199999999442133e-07, 1.0694000000005532e-05, 4.7199999999442133e-07, 7.167000000002366e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:54:20.619" endtime="20201112 09:54:20.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.609" endtime="20201112 09:54:20.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:20.640" level="INFO">${RESULT} = [{'time': 0.037570583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037579972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:20.631" endtime="20201112 09:54:20.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:20.671" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:20.642" endtime="20201112 09:54:20.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.682" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:20.679" endtime="20201112 09:54:20.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.688" level="INFO">VALUE: [4.7199999999442133e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:54:20.685" endtime="20201112 09:54:20.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.673" endtime="20201112 09:54:20.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.697" endtime="20201112 09:54:20.699"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:20.705" endtime="20201112 09:54:20.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.701" endtime="20201112 09:54:20.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.692" endtime="20201112 09:54:20.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.086" endtime="20201112 09:54:20.730"></status>
</kw>
<msg timestamp="20201112 09:54:20.731" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.751" endtime="20201112 09:54:20.761"></status>
</kw>
<msg timestamp="20201112 09:54:20.763" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.747" endtime="20201112 09:54:20.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.769" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.765" endtime="20201112 09:54:20.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.771" endtime="20201112 09:54:20.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.740" endtime="20201112 09:54:20.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.735" endtime="20201112 09:54:20.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.794" endtime="20201112 09:54:21.133"></status>
</kw>
<msg timestamp="20201112 09:54:21.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036096625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036097097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:20.791" endtime="20201112 09:54:21.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036096625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036097097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:21.143" endtime="20201112 09:54:21.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.162" endtime="20201112 09:54:21.166"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.784" endtime="20201112 09:54:21.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.779" endtime="20201112 09:54:21.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.178" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:21.176" endtime="20201112 09:54:21.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.190" level="INFO">VALUE: [{'time': 0.036096625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036097097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036104764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666999999995927e-06, 'source_diff': 7.666999999995927e-06}, {'time': 0.036105236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036111028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.79200000000446e-06, 'source_diff': 5.79200000000446e-06}, {'time': 0.0361115, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036122208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0708000000005102e-05, 'source_diff': 1.0708000000005102e-05}, {'time': 0.036122681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036128903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.036129375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036139014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.036139486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036149875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.036150347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036157917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.036158389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036169194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805000000002618e-05, 'source_diff': 1.0805000000002618e-05}, {'time': 0.036169667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036175528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999995897e-06, 'source_diff': 5.860999999995897e-06}, {'time': 0.036176069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036183708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000003726e-06, 'source_diff': 7.639000000003726e-06}, {'time': 0.036184181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036189264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.082999999996007e-06, 'source_diff': 5.082999999996007e-06}, {'time': 0.036189736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036200639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.036201111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036209486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.374999999997967e-06, 'source_diff': 8.374999999997967e-06}, {'time': 0.036210028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036215056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.02800000000414e-06, 'source_diff': 5.02800000000414e-06}, {'time': 0.036215528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036224333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.036224806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036230097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2910000000044866e-06, 'source_diff': 5.2910000000044866e-06}, {'time': 0.036230569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036239889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}, {'time': 0.036240361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036251167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.036251639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036260153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.036260625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036266097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.036266569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036276958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.036277431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036286153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.722000000002672e-06, 'source_diff': 8.722000000002672e-06}, {'time': 0.036286625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036296917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0291999999995083e-05, 'source_diff': 1.0291999999995083e-05}, {'time': 0.036297389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036306736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.036307208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036314569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.036315042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03632, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.036320472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.52800000000364e-06, 'source_diff': 4.52800000000364e-06}, {'time': 0.036325472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036332528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.05600000000528e-06, 'source_diff': 7.05600000000528e-06}, {'time': 0.036333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036339514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5140000000060705e-06, 'source_diff': 6.5140000000060705e-06}, {'time': 0.036339986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036346319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.333000000004196e-06, 'source_diff': 6.333000000004196e-06}, {'time': 0.036346792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036357389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0596999999994139e-05, 'source_diff': 1.0596999999994139e-05}, {'time': 0.036357861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036366458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.036366931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036371375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.036371847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036377319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.036377792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036383375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.583000000003446e-06, 'source_diff': 5.583000000003446e-06}, {'time': 0.036383847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036393708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.036394181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036404472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0291000000002548e-05, 'source_diff': 1.0291000000002548e-05}, {'time': 0.036404944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036412528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.583999999997981e-06, 'source_diff': 7.583999999997981e-06}, {'time': 0.036413, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036418167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.036418639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036427542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.036428014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036436222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.207999999995663e-06, 'source_diff': 8.207999999995663e-06}, {'time': 0.036436694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036446347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.036446819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036452194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.036452667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036459931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.036460403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036470167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.763999999995443e-06, 'source_diff': 9.763999999995443e-06}, {'time': 0.036470639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036475903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.036476375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036485944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.569000000000938e-06, 'source_diff': 9.569000000000938e-06}, {'time': 0.036486417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0364945, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.036494972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036499611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.036500083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:54:21.181" endtime="20201112 09:54:21.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.170" endtime="20201112 09:54:21.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:21.252" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:21.196" endtime="20201112 09:54:21.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.262" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:21.259" endtime="20201112 09:54:21.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.271" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.720000000013602e-07, 7.666999999995927e-06, 4.720000000013602e-07, 5.79200000000446e-06, 4.7199999999442133e-07, 1.0708000000005102e-05, 4.7299999999389497e-07, 6.222000000000172e-06, 4.720000000013602e-07, 9.638999999998787e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 1.0805000000002618e-05, 4.7300000000083386e-07, 5.860999999995897e-06, 5.409999999997361e-07, 7.639000000003726e-06, 4.7300000000083386e-07, 5.082999999996007e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 8.374999999997967e-06, 5.419999999992098e-07, 5.02800000000414e-06, 4.7199999999442133e-07, 8.805000000000618e-06, 4.7300000000083386e-07, 5.2910000000044866e-06, 4.7199999999442133e-07, 9.320000000000161e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 8.514000000001132e-06, 4.7199999999442133e-07, 5.471999999999422e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7300000000083386e-07, 8.722000000002672e-06, 4.720000000013602e-07, 1.0291999999995083e-05, 4.720000000013602e-07, 9.346999999999828e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.7300000000083386e-07, 4.957999999999352e-06, 4.720000000013602e-07, 4.52800000000364e-06, 4.7199999999442133e-07, 7.05600000000528e-06, 4.7199999999442133e-07, 6.5140000000060705e-06, 4.7199999999442133e-07, 6.333000000004196e-06, 4.7300000000083386e-07, 1.0596999999994139e-05, 4.720000000013602e-07, 8.596999999999078e-06, 4.7300000000083386e-07, 4.443999999999282e-06, 4.720000000013602e-07, 5.471999999999422e-06, 4.7300000000083386e-07, 5.583000000003446e-06, 4.7199999999442133e-07, 9.860999999999898e-06, 4.7300000000083386e-07, 1.0291000000002548e-05, 4.720000000013602e-07, 7.583999999997981e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 8.207999999995663e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.7300000000083386e-07, 7.263999999999882e-06, 4.720000000013602e-07, 9.763999999995443e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 9.569000000000938e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07], 'time': [0.036096625, 0.036097097, 0.036104764, 0.036105236, 0.036111028, 0.0361115, 0.036122208, 0.036122681, 0.036128903, 0.036129375, 0.036139014, 0.036139486, 0.036149875, 0.036150347, 0.036157917, 0.036158389, 0.036169194, 0.036169667, 0.036175528, 0.036176069, 0.036183708, 0.036184181, 0.036189264, 0.036189736, 0.036200639, 0.036201111, 0.036209486, 0.036210028, 0.036215056, 0.036215528, 0.036224333, 0.036224806, 0.036230097, 0.036230569, 0.036239889, 0.036240361, 0.036251167, 0.036251639, 0.036260153, 0.036260625, 0.036266097, 0.036266569, 0.036276958, 0.036277431, 0.036286153, 0.036286625, 0.036296917, 0.036297389, 0.036306736, 0.036307208, 0.036314569, 0.036315042, 0.03632, 0.036320472, 0.036325, 0.036325472, 0.036332528, 0.036333, 0.036339514, 0.036339986, 0.036346319, 0.036346792, 0.036357389, 0.036357861, 0.036366458, 0.036366931, 0.036371375, 0.036371847, 0.036377319, 0.036377792, 0.036383375, 0.036383847, 0.036393708, 0.036394181, 0.036404472, 0.036404944, 0.036412528, 0.036413, 0.036418167, 0.036418639, 0.036427542, 0.036428014, 0.036436222, 0.036436694, 0.036446347, 0.036446819, 0.036452194, 0.036452667, 0.036459931, 0.036460403, 0.036470167, 0.036470639, 0.036475903, 0.036476375, 0.036485944, 0.036486417, 0.0364945, 0.036494972, 0.036499611, 0.036500083], 'diff': [0, 4.720000000013602e-07, 7.666999999995927e-06, 4.720000000013602e-07, 5.79200000000446e-06, 4.7199999999442133e-07, 1.0708000000005102e-05, 4.7299999999389497e-07, 6.222000000000172e-06, 4.720000000013602e-07, 9.638999999998787e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 1.0805000000002618e-05, 4.7300000000083386e-07, 5.860999999995897e-06, 5.409999999997361e-07, 7.639000000003726e-06, 4.7300000000083386e-07, 5.082999999996007e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 8.374999999997967e-06, 5.419999999992098e-07, 5.02800000000414e-06, 4.7199999999442133e-07, 8.805000000000618e-06, 4.7300000000083386e-07, 5.2910000000044866e-06, 4.7199999999442133e-07, 9.320000000000161e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 8.514000000001132e-06, 4.7199999999442133e-07, 5.471999999999422e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7300000000083386e-07, 8.722000000002672e-06, 4.720000000013602e-07, 1.0291999999995083e-05, 4.720000000013602e-07, 9.346999999999828e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.7300000000083386e-07, 4.957999999999352e-06, 4.720000000013602e-07, 4.52800000000364e-06, 4.7199999999442133e-07, 7.05600000000528e-06, 4.7199999999442133e-07, 6.5140000000060705e-06, 4.7199999999442133e-07, 6.333000000004196e-06, 4.7300000000083386e-07, 1.0596999999994139e-05, 4.720000000013602e-07, 8.596999999999078e-06, 4.7300000000083386e-07, 4.443999999999282e-06, 4.720000000013602e-07, 5.471999999999422e-06, 4.7300000000083386e-07, 5.583000000003446e-06, 4.7199999999442133e-07, 9.860999999999898e-06, 4.7300000000083386e-07, 1.0291000000002548e-05, 4.720000000013602e-07, 7.583999999997981e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 8.207999999995663e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.7300000000083386e-07, 7.263999999999882e-06, 4.720000000013602e-07, 9.763999999995443e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 9.569000000000938e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:54:21.264" endtime="20201112 09:54:21.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.254" endtime="20201112 09:54:21.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:21.286" level="INFO">${RESULT} = [{'time': 0.036097097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036105236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:21.277" endtime="20201112 09:54:21.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:21.317" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:21.288" endtime="20201112 09:54:21.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.327" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:21.325" endtime="20201112 09:54:21.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.332" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:54:21.329" endtime="20201112 09:54:21.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.319" endtime="20201112 09:54:21.335"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.341" endtime="20201112 09:54:21.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:21.350" endtime="20201112 09:54:21.371"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.345" endtime="20201112 09:54:21.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.337" endtime="20201112 09:54:21.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.732" endtime="20201112 09:54:21.375"></status>
</kw>
<msg timestamp="20201112 09:54:21.376" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.395" endtime="20201112 09:54:21.406"></status>
</kw>
<msg timestamp="20201112 09:54:21.407" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.392" endtime="20201112 09:54:21.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.413" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.409" endtime="20201112 09:54:21.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.416" endtime="20201112 09:54:21.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.385" endtime="20201112 09:54:21.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.380" endtime="20201112 09:54:21.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.439" endtime="20201112 09:54:21.781"></status>
</kw>
<msg timestamp="20201112 09:54:21.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036059306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036059778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:21.436" endtime="20201112 09:54:21.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036059306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036059778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:21.790" endtime="20201112 09:54:21.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.810" endtime="20201112 09:54:21.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.429" endtime="20201112 09:54:21.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.424" endtime="20201112 09:54:21.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.826" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:21.824" endtime="20201112 09:54:21.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.838" level="INFO">VALUE: [{'time': 0.036059306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036059778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036065764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.036066236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036073389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.152999999995857e-06, 'source_diff': 7.152999999995857e-06}, {'time': 0.036073861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036082583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.722000000002672e-06, 'source_diff': 8.722000000002672e-06}, {'time': 0.036083056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036090319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263000000000408e-06, 'source_diff': 7.263000000000408e-06}, {'time': 0.036090792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036101208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0416000000006143e-05, 'source_diff': 1.0416000000006143e-05}, {'time': 0.036101681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036110208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.527000000001228e-06, 'source_diff': 8.527000000001228e-06}, {'time': 0.036110681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036116181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.036116722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036121042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3200000000021e-06, 'source_diff': 4.3200000000021e-06}, {'time': 0.036121514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036131083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.569000000000938e-06, 'source_diff': 9.569000000000938e-06}, {'time': 0.036131556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036136514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.036136986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036146444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.457999999996913e-06, 'source_diff': 9.457999999996913e-06}, {'time': 0.036146917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036155722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.036156194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036165556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.361999999998871e-06, 'source_diff': 9.361999999998871e-06}, {'time': 0.036166028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03617275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.721999999993733e-06, 'source_diff': 6.721999999993733e-06}, {'time': 0.036173222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036179861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.639000000002726e-06, 'source_diff': 6.639000000002726e-06}, {'time': 0.036180333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036186653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319999999997161e-06, 'source_diff': 6.319999999997161e-06}, {'time': 0.036187125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036195431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.036195903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036203778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.874999999997467e-06, 'source_diff': 7.874999999997467e-06}, {'time': 0.03620425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036214139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.036214611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036220139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.527999999997701e-06, 'source_diff': 5.527999999997701e-06}, {'time': 0.036220681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036229528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.036230069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036235764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.036236236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036242861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.036243333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036249486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.152999999994857e-06, 'source_diff': 6.152999999994857e-06}, {'time': 0.036250028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036254778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.75000000000475e-06, 'source_diff': 4.75000000000475e-06}, {'time': 0.03625525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036264819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.568999999993999e-06, 'source_diff': 9.568999999993999e-06}, {'time': 0.036265292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036272833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.540999999999798e-06, 'source_diff': 7.540999999999798e-06}, {'time': 0.036273306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036280694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3880000000040025e-06, 'source_diff': 7.3880000000040025e-06}, {'time': 0.036281167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036290708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.540999999994859e-06, 'source_diff': 9.540999999994859e-06}, {'time': 0.036291181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036296972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.790999999998048e-06, 'source_diff': 5.790999999998048e-06}, {'time': 0.036297444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036307417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.973000000003396e-06, 'source_diff': 9.973000000003396e-06}, {'time': 0.036307889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036315694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.804999999999618e-06, 'source_diff': 7.804999999999618e-06}, {'time': 0.036316167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036322153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.036322625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036331042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.417000000003616e-06, 'source_diff': 8.417000000003616e-06}, {'time': 0.036331514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0363415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.985999999996553e-06, 'source_diff': 9.985999999996553e-06}, {'time': 0.036341972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03635275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0778000000002952e-05, 'source_diff': 1.0778000000002952e-05}, {'time': 0.036353222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036359542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3200000000041e-06, 'source_diff': 6.3200000000041e-06}, {'time': 0.036360014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036368417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402999999997107e-06, 'source_diff': 8.402999999997107e-06}, {'time': 0.036368889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036373736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999995327e-06, 'source_diff': 4.846999999995327e-06}, {'time': 0.036374208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036379583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.036380056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036385639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.582999999996507e-06, 'source_diff': 5.582999999996507e-06}, {'time': 0.036386111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036393264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.153000000002796e-06, 'source_diff': 7.153000000002796e-06}, {'time': 0.036393736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036403708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.971999999996983e-06, 'source_diff': 9.971999999996983e-06}, {'time': 0.036404181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036410708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.526999999999228e-06, 'source_diff': 6.526999999999228e-06}, {'time': 0.036411181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036421264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0083000000001008e-05, 'source_diff': 1.0083000000001008e-05}, {'time': 0.036421736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036430347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.036430819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036435694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.874999999994467e-06, 'source_diff': 4.874999999994467e-06}, {'time': 0.036436167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036443917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.036444389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036452597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.036453069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}]</msg>
<status status="PASS" starttime="20201112 09:54:21.829" endtime="20201112 09:54:21.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.818" endtime="20201112 09:54:21.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:21.898" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:21.844" endtime="20201112 09:54:21.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.907" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:21.905" endtime="20201112 09:54:21.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.916" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.720000000013602e-07, 5.985999999999492e-06, 4.720000000013602e-07, 7.152999999995857e-06, 4.720000000013602e-07, 8.722000000002672e-06, 4.7300000000083386e-07, 7.263000000000408e-06, 4.7299999999389497e-07, 1.0416000000006143e-05, 4.7299999999389497e-07, 8.527000000001228e-06, 4.7300000000083386e-07, 5.499999999998562e-06, 5.409999999997361e-07, 4.3200000000021e-06, 4.720000000013602e-07, 9.569000000000938e-06, 4.7300000000083386e-07, 4.957999999999352e-06, 4.720000000013602e-07, 9.457999999996913e-06, 4.7300000000083386e-07, 8.805000000000618e-06, 4.720000000013602e-07, 9.361999999998871e-06, 4.720000000013602e-07, 6.721999999993733e-06, 4.720000000013602e-07, 6.639000000002726e-06, 4.720000000013602e-07, 6.319999999997161e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 7.874999999997467e-06, 4.720000000013602e-07, 9.888999999999037e-06, 4.720000000013602e-07, 5.527999999997701e-06, 5.419999999992098e-07, 8.846999999999328e-06, 5.409999999997361e-07, 5.695000000000006e-06, 4.720000000013602e-07, 6.625000000003156e-06, 4.720000000013602e-07, 6.152999999994857e-06, 5.419999999992098e-07, 4.75000000000475e-06, 4.720000000013602e-07, 9.568999999993999e-06, 4.7300000000083386e-07, 7.540999999999798e-06, 4.7300000000083386e-07, 7.3880000000040025e-06, 4.7300000000083386e-07, 9.540999999994859e-06, 4.7300000000083386e-07, 5.790999999998048e-06, 4.720000000013602e-07, 9.973000000003396e-06, 4.720000000013602e-07, 7.804999999999618e-06, 4.7300000000083386e-07, 5.985999999999492e-06, 4.7199999999442133e-07, 8.417000000003616e-06, 4.720000000013602e-07, 9.985999999996553e-06, 4.720000000013602e-07, 1.0778000000002952e-05, 4.7199999999442133e-07, 6.3200000000041e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 4.846999999995327e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.7300000000083386e-07, 5.582999999996507e-06, 4.720000000013602e-07, 7.153000000002796e-06, 4.720000000013602e-07, 9.971999999996983e-06, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 4.874999999994467e-06, 4.7300000000083386e-07, 7.750000000000812e-06, 4.720000000013602e-07, 8.208000000002602e-06, 4.7199999999442133e-07], 'time': [0.036059306, 0.036059778, 0.036065764, 0.036066236, 0.036073389, 0.036073861, 0.036082583, 0.036083056, 0.036090319, 0.036090792, 0.036101208, 0.036101681, 0.036110208, 0.036110681, 0.036116181, 0.036116722, 0.036121042, 0.036121514, 0.036131083, 0.036131556, 0.036136514, 0.036136986, 0.036146444, 0.036146917, 0.036155722, 0.036156194, 0.036165556, 0.036166028, 0.03617275, 0.036173222, 0.036179861, 0.036180333, 0.036186653, 0.036187125, 0.036195431, 0.036195903, 0.036203778, 0.03620425, 0.036214139, 0.036214611, 0.036220139, 0.036220681, 0.036229528, 0.036230069, 0.036235764, 0.036236236, 0.036242861, 0.036243333, 0.036249486, 0.036250028, 0.036254778, 0.03625525, 0.036264819, 0.036265292, 0.036272833, 0.036273306, 0.036280694, 0.036281167, 0.036290708, 0.036291181, 0.036296972, 0.036297444, 0.036307417, 0.036307889, 0.036315694, 0.036316167, 0.036322153, 0.036322625, 0.036331042, 0.036331514, 0.0363415, 0.036341972, 0.03635275, 0.036353222, 0.036359542, 0.036360014, 0.036368417, 0.036368889, 0.036373736, 0.036374208, 0.036379583, 0.036380056, 0.036385639, 0.036386111, 0.036393264, 0.036393736, 0.036403708, 0.036404181, 0.036410708, 0.036411181, 0.036421264, 0.036421736, 0.036430347, 0.036430819, 0.036435694, 0.036436167, 0.036443917, 0.036444389, 0.036452597, 0.036453069], 'diff': [0, 4.720000000013602e-07, 5.985999999999492e-06, 4.720000000013602e-07, 7.152999999995857e-06, 4.720000000013602e-07, 8.722000000002672e-06, 4.7300000000083386e-07, 7.263000000000408e-06, 4.7299999999389497e-07, 1.0416000000006143e-05, 4.7299999999389497e-07, 8.527000000001228e-06, 4.7300000000083386e-07, 5.499999999998562e-06, 5.409999999997361e-07, 4.3200000000021e-06, 4.720000000013602e-07, 9.569000000000938e-06, 4.7300000000083386e-07, 4.957999999999352e-06, 4.720000000013602e-07, 9.457999999996913e-06, 4.7300000000083386e-07, 8.805000000000618e-06, 4.720000000013602e-07, 9.361999999998871e-06, 4.720000000013602e-07, 6.721999999993733e-06, 4.720000000013602e-07, 6.639000000002726e-06, 4.720000000013602e-07, 6.319999999997161e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 7.874999999997467e-06, 4.720000000013602e-07, 9.888999999999037e-06, 4.720000000013602e-07, 5.527999999997701e-06, 5.419999999992098e-07, 8.846999999999328e-06, 5.409999999997361e-07, 5.695000000000006e-06, 4.720000000013602e-07, 6.625000000003156e-06, 4.720000000013602e-07, 6.152999999994857e-06, 5.419999999992098e-07, 4.75000000000475e-06, 4.720000000013602e-07, 9.568999999993999e-06, 4.7300000000083386e-07, 7.540999999999798e-06, 4.7300000000083386e-07, 7.3880000000040025e-06, 4.7300000000083386e-07, 9.540999999994859e-06, 4.7300000000083386e-07, 5.790999999998048e-06, 4.720000000013602e-07, 9.973000000003396e-06, 4.720000000013602e-07, 7.804999999999618e-06, 4.7300000000083386e-07, 5.985999999999492e-06, 4.7199999999442133e-07, 8.417000000003616e-06, 4.720000000013602e-07, 9.985999999996553e-06, 4.720000000013602e-07, 1.0778000000002952e-05, 4.7199999999442133e-07, 6.3200000000041e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 4.846999999995327e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.7300000000083386e-07, 5.582999999996507e-06, 4.720000000013602e-07, 7.153000000002796e-06, 4.720000000013602e-07, 9.971999999996983e-06, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 4.874999999994467e-06, 4.7300000000083386e-07, 7.750000000000812e-06, 4.720000000013602e-07, 8.208000000002602e-06, 4.7199999999442133e-07]}</msg>
<status status="PASS" starttime="20201112 09:54:21.910" endtime="20201112 09:54:21.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.900" endtime="20201112 09:54:21.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:21.931" level="INFO">${RESULT} = [{'time': 0.036059778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036066236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:21.922" endtime="20201112 09:54:21.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:21.962" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:21.933" endtime="20201112 09:54:21.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.972" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:21.970" endtime="20201112 09:54:21.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.978" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201112 09:54:21.975" endtime="20201112 09:54:21.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.964" endtime="20201112 09:54:21.980"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.987" endtime="20201112 09:54:21.989"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:21.995" endtime="20201112 09:54:22.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.991" endtime="20201112 09:54:22.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.982" endtime="20201112 09:54:22.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.377" endtime="20201112 09:54:22.021"></status>
</kw>
<msg timestamp="20201112 09:54:22.021" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.043" endtime="20201112 09:54:22.053"></status>
</kw>
<msg timestamp="20201112 09:54:22.054" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.039" endtime="20201112 09:54:22.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.061" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.056" endtime="20201112 09:54:22.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.063" endtime="20201112 09:54:22.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.031" endtime="20201112 09:54:22.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.026" endtime="20201112 09:54:22.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.086" endtime="20201112 09:54:22.429"></status>
</kw>
<msg timestamp="20201112 09:54:22.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037663153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037663625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:22.083" endtime="20201112 09:54:22.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037663153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037663625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:22.439" endtime="20201112 09:54:22.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.458" endtime="20201112 09:54:22.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.076" endtime="20201112 09:54:22.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.071" endtime="20201112 09:54:22.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.474" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:22.472" endtime="20201112 09:54:22.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.486" level="INFO">VALUE: [{'time': 0.037663153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037663625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037668764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.037669236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037675444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.037675917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037684111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999996093e-06, 'source_diff': 8.193999999996093e-06}, {'time': 0.037684583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037689639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999996341e-06, 'source_diff': 5.055999999996341e-06}, {'time': 0.037690111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037698528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.417000000003616e-06, 'source_diff': 8.417000000003616e-06}, {'time': 0.037699, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037704375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999994967e-06, 'source_diff': 5.374999999994967e-06}, {'time': 0.037704847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037709486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.037709958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037715236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.037715708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037723278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.03772375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037732361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.037732833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037737583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.037738056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037745417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000004336e-06, 'source_diff': 7.361000000004336e-06}, {'time': 0.037745889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037754806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.917000000004116e-06, 'source_diff': 8.917000000004116e-06}, {'time': 0.037755278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03776425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999995983e-06, 'source_diff': 8.971999999995983e-06}, {'time': 0.037764792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037772875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.037773347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037780403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.055999999998341e-06, 'source_diff': 7.055999999998341e-06}, {'time': 0.037780875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037790319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.444000000004282e-06, 'source_diff': 9.444000000004282e-06}, {'time': 0.037790792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037800958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0166000000005893e-05, 'source_diff': 1.0166000000005893e-05}, {'time': 0.037801431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037807639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.207999999993663e-06, 'source_diff': 6.207999999993663e-06}, {'time': 0.037808111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037814319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.037814792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037824764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.971999999996983e-06, 'source_diff': 9.971999999996983e-06}, {'time': 0.037825236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037835639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.037836111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037846472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.037846944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03785775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.037858222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037865361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.139000000003226e-06, 'source_diff': 7.139000000003226e-06}, {'time': 0.037865833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037871, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.037871472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037878972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.499999999993623e-06, 'source_diff': 7.499999999993623e-06}, {'time': 0.037879444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037888778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.03788925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037893778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.52800000000364e-06, 'source_diff': 4.52800000000364e-06}, {'time': 0.03789425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037903486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.236000000002742e-06, 'source_diff': 9.236000000002742e-06}, {'time': 0.037903958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037911236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.037911708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037920917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.208999999996137e-06, 'source_diff': 9.208999999996137e-06}, {'time': 0.037921389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037931986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.037932458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037938458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.037938931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037944722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.790999999998048e-06, 'source_diff': 5.790999999998048e-06}, {'time': 0.037945194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037952153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.959000000000826e-06, 'source_diff': 6.959000000000826e-06}, {'time': 0.037952625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037963014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0389000000006476e-05, 'source_diff': 1.0389000000006476e-05}, {'time': 0.037963486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037971472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.037971944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037978153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.037978625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037988792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0166999999998427e-05, 'source_diff': 1.0166999999998427e-05}, {'time': 0.037989264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037993806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999996271e-06, 'source_diff': 4.541999999996271e-06}, {'time': 0.037994278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038000708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.430000000001712e-06, 'source_diff': 6.430000000001712e-06}, {'time': 0.038001181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03800875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.038009222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038013889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.038014361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038019431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.069999999995911e-06, 'source_diff': 5.069999999995911e-06}, {'time': 0.038019972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.03802775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.038028222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038036528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.038037, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038041944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.038042417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038048319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.901999999995133e-06, 'source_diff': 5.901999999995133e-06}, {'time': 0.038048792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 09:54:22.477" endtime="20201112 09:54:22.489"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.466" endtime="20201112 09:54:22.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:22.546" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:22.492" endtime="20201112 09:54:22.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.555" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:22.553" endtime="20201112 09:54:22.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.565" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.720000000013602e-07, 5.139000000001226e-06, 4.720000000013602e-07, 6.208000000000602e-06, 4.7300000000083386e-07, 8.193999999996093e-06, 4.720000000013602e-07, 5.055999999996341e-06, 4.720000000013602e-07, 8.417000000003616e-06, 4.720000000013602e-07, 5.374999999994967e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 4.7499999999978115e-06, 4.7300000000083386e-07, 7.361000000004336e-06, 4.7199999999442133e-07, 8.917000000004116e-06, 4.720000000013602e-07, 8.971999999995983e-06, 5.419999999992098e-07, 8.082999999999008e-06, 4.720000000013602e-07, 7.055999999998341e-06, 4.720000000013602e-07, 9.444000000004282e-06, 4.7299999999389497e-07, 1.0166000000005893e-05, 4.7300000000083386e-07, 6.207999999993663e-06, 4.720000000013602e-07, 6.208000000000602e-06, 4.7300000000083386e-07, 9.971999999996983e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 1.0806000000002092e-05, 4.7199999999442133e-07, 7.139000000003226e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 7.499999999993623e-06, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 4.52800000000364e-06, 4.7199999999442133e-07, 9.236000000002742e-06, 4.720000000013602e-07, 7.2779999999994516e-06, 4.720000000013602e-07, 9.208999999996137e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 5.999999999999062e-06, 4.7300000000083386e-07, 5.790999999998048e-06, 4.720000000013602e-07, 6.959000000000826e-06, 4.7199999999442133e-07, 1.0389000000006476e-05, 4.7199999999442133e-07, 7.986000000001492e-06, 4.720000000013602e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 6.430000000001712e-06, 4.7300000000083386e-07, 7.568999999998938e-06, 4.720000000013602e-07, 4.666999999999866e-06, 4.720000000013602e-07, 5.069999999995911e-06, 5.409999999997361e-07, 7.777999999999952e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 4.943999999999782e-06, 4.7300000000083386e-07, 5.901999999995133e-06, 4.7300000000083386e-07], 'time': [0.037663153, 0.037663625, 0.037668764, 0.037669236, 0.037675444, 0.037675917, 0.037684111, 0.037684583, 0.037689639, 0.037690111, 0.037698528, 0.037699, 0.037704375, 0.037704847, 0.037709486, 0.037709958, 0.037715236, 0.037715708, 0.037723278, 0.03772375, 0.037732361, 0.037732833, 0.037737583, 0.037738056, 0.037745417, 0.037745889, 0.037754806, 0.037755278, 0.03776425, 0.037764792, 0.037772875, 0.037773347, 0.037780403, 0.037780875, 0.037790319, 0.037790792, 0.037800958, 0.037801431, 0.037807639, 0.037808111, 0.037814319, 0.037814792, 0.037824764, 0.037825236, 0.037835639, 0.037836111, 0.037846472, 0.037846944, 0.03785775, 0.037858222, 0.037865361, 0.037865833, 0.037871, 0.037871472, 0.037878972, 0.037879444, 0.037888778, 0.03788925, 0.037893778, 0.03789425, 0.037903486, 0.037903958, 0.037911236, 0.037911708, 0.037920917, 0.037921389, 0.037931986, 0.037932458, 0.037938458, 0.037938931, 0.037944722, 0.037945194, 0.037952153, 0.037952625, 0.037963014, 0.037963486, 0.037971472, 0.037971944, 0.037978153, 0.037978625, 0.037988792, 0.037989264, 0.037993806, 0.037994278, 0.038000708, 0.038001181, 0.03800875, 0.038009222, 0.038013889, 0.038014361, 0.038019431, 0.038019972, 0.03802775, 0.038028222, 0.038036528, 0.038037, 0.038041944, 0.038042417, 0.038048319, 0.038048792], 'diff': [0, 4.720000000013602e-07, 5.139000000001226e-06, 4.720000000013602e-07, 6.208000000000602e-06, 4.7300000000083386e-07, 8.193999999996093e-06, 4.720000000013602e-07, 5.055999999996341e-06, 4.720000000013602e-07, 8.417000000003616e-06, 4.720000000013602e-07, 5.374999999994967e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 4.7499999999978115e-06, 4.7300000000083386e-07, 7.361000000004336e-06, 4.7199999999442133e-07, 8.917000000004116e-06, 4.720000000013602e-07, 8.971999999995983e-06, 5.419999999992098e-07, 8.082999999999008e-06, 4.720000000013602e-07, 7.055999999998341e-06, 4.720000000013602e-07, 9.444000000004282e-06, 4.7299999999389497e-07, 1.0166000000005893e-05, 4.7300000000083386e-07, 6.207999999993663e-06, 4.720000000013602e-07, 6.208000000000602e-06, 4.7300000000083386e-07, 9.971999999996983e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 1.0806000000002092e-05, 4.7199999999442133e-07, 7.139000000003226e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 7.499999999993623e-06, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 4.52800000000364e-06, 4.7199999999442133e-07, 9.236000000002742e-06, 4.720000000013602e-07, 7.2779999999994516e-06, 4.720000000013602e-07, 9.208999999996137e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 5.999999999999062e-06, 4.7300000000083386e-07, 5.790999999998048e-06, 4.720000000013602e-07, 6.959000000000826e-06, 4.7199999999442133e-07, 1.0389000000006476e-05, 4.7199999999442133e-07, 7.986000000001492e-06, 4.720000000013602e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 6.430000000001712e-06, 4.7300000000083386e-07, 7.568999999998938e-06, 4.720000000013602e-07, 4.666999999999866e-06, 4.720000000013602e-07, 5.069999999995911e-06, 5.409999999997361e-07, 7.777999999999952e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 4.943999999999782e-06, 4.7300000000083386e-07, 5.901999999995133e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 09:54:22.558" endtime="20201112 09:54:22.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.548" endtime="20201112 09:54:22.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:22.579" level="INFO">${RESULT} = [{'time': 0.037663625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037669236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:22.570" endtime="20201112 09:54:22.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:22.610" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:22.581" endtime="20201112 09:54:22.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.621" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:22.618" endtime="20201112 09:54:22.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.627" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 09:54:22.624" endtime="20201112 09:54:22.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.612" endtime="20201112 09:54:22.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.635" endtime="20201112 09:54:22.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:22.644" endtime="20201112 09:54:22.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.640" endtime="20201112 09:54:22.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.631" endtime="20201112 09:54:22.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.022" endtime="20201112 09:54:22.670"></status>
</kw>
<msg timestamp="20201112 09:54:22.670" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.690" endtime="20201112 09:54:22.700"></status>
</kw>
<msg timestamp="20201112 09:54:22.702" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.686" endtime="20201112 09:54:22.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.708" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.704" endtime="20201112 09:54:22.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.710" endtime="20201112 09:54:22.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.679" endtime="20201112 09:54:22.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.674" endtime="20201112 09:54:22.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.734" endtime="20201112 09:54:23.071"></status>
</kw>
<msg timestamp="20201112 09:54:23.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036092458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036092931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:22.730" endtime="20201112 09:54:23.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036092458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036092931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:23.080" endtime="20201112 09:54:23.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.099" endtime="20201112 09:54:23.103"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.723" endtime="20201112 09:54:23.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.718" endtime="20201112 09:54:23.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.115" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:23.113" endtime="20201112 09:54:23.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.127" level="INFO">VALUE: [{'time': 0.036092458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036092931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036103861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0929999999999274e-05, 'source_diff': 1.0929999999999274e-05}, {'time': 0.036104403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036111458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.054999999998868e-06, 'source_diff': 7.054999999998868e-06}, {'time': 0.036111931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036118333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.402000000002572e-06, 'source_diff': 6.402000000002572e-06}, {'time': 0.036118875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.03612775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.036128222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036132764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999996271e-06, 'source_diff': 4.541999999996271e-06}, {'time': 0.036133236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036142458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.222000000003172e-06, 'source_diff': 9.222000000003172e-06}, {'time': 0.036150819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.036151292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036160208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.915999999997704e-06, 'source_diff': 8.915999999997704e-06}, {'time': 0.036160681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036168792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.036169264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036175569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.304999999998118e-06, 'source_diff': 6.304999999998118e-06}, {'time': 0.036176042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036180569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.527000000004167e-06, 'source_diff': 4.527000000004167e-06}, {'time': 0.036181042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036186736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.694000000000532e-06, 'source_diff': 5.694000000000532e-06}, {'time': 0.036187208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036193944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.036194417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036201986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.036202458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036210556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.097999999998051e-06, 'source_diff': 8.097999999998051e-06}, {'time': 0.036211028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036215958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.036216431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036225681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.036226153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036235486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.036235958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036241861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.036242333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036253139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0805999999995153e-05, 'source_diff': 1.0805999999995153e-05}, {'time': 0.036253611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036263889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0278000000002452e-05, 'source_diff': 1.0278000000002452e-05}, {'time': 0.036264361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036272667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.036273139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036283, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.036283472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036291556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.08400000000542e-06, 'source_diff': 8.08400000000542e-06}, {'time': 0.036292028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036300667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.639000000004726e-06, 'source_diff': 8.639000000004726e-06}, {'time': 0.036301139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036311514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.036311986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036319444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.036319917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036327958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.041000000000298e-06, 'source_diff': 8.041000000000298e-06}, {'time': 0.0363285, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036333653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.036334125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036341583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.457999999994913e-06, 'source_diff': 7.457999999994913e-06}, {'time': 0.036342056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036349833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.777000000000478e-06, 'source_diff': 7.777000000000478e-06}, {'time': 0.036350306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036359653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.036360125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036364681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.55600000000278e-06, 'source_diff': 4.55600000000278e-06}, {'time': 0.036365153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036369472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.319000000002626e-06, 'source_diff': 4.319000000002626e-06}, {'time': 0.036369944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036377931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.987000000000966e-06, 'source_diff': 7.987000000000966e-06}, {'time': 0.036378403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036385125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.036385597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036392542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.945000000001256e-06, 'source_diff': 6.945000000001256e-06}, {'time': 0.036393014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036400056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.036400528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036409556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.036410028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036417597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.569000000005877e-06, 'source_diff': 7.569000000005877e-06}, {'time': 0.036418069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036426986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.917000000004116e-06, 'source_diff': 8.917000000004116e-06}, {'time': 0.036427458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036435056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.597999999997551e-06, 'source_diff': 7.597999999997551e-06}, {'time': 0.036435528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036443181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.652999999996357e-06, 'source_diff': 7.652999999996357e-06}, {'time': 0.036443653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036451764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.036452306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036456736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.036457208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036464958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.0364655, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036475944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0444000000005282e-05, 'source_diff': 1.0444000000005282e-05}, {'time': 0.036476417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036484306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.889000000003976e-06, 'source_diff': 7.889000000003976e-06}, {'time': 0.036484778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03649425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.471999999996483e-06, 'source_diff': 9.471999999996483e-06}, {'time': 0.036494722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:54:23.118" endtime="20201112 09:54:23.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.107" endtime="20201112 09:54:23.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:23.189" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:23.133" endtime="20201112 09:54:23.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.198" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:23.196" endtime="20201112 09:54:23.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.207" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.7300000000083386e-07, 1.0929999999999274e-05, 5.419999999992098e-07, 7.054999999998868e-06, 4.7300000000083386e-07, 6.402000000002572e-06, 5.419999999992098e-07, 8.874999999998467e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 9.222000000003172e-06, 8.360999999998397e-06, 4.7300000000083386e-07, 8.915999999997704e-06, 4.7300000000083386e-07, 8.110999999998147e-06, 4.720000000013602e-07, 6.304999999998118e-06, 4.7300000000083386e-07, 4.527000000004167e-06, 4.7299999999389497e-07, 5.694000000000532e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.7300000000083386e-07, 7.568999999998938e-06, 4.720000000013602e-07, 8.097999999998051e-06, 4.720000000013602e-07, 4.930000000000212e-06, 4.7300000000083386e-07, 9.250000000002312e-06, 4.7199999999442133e-07, 9.333000000000258e-06, 4.720000000013602e-07, 5.903000000001546e-06, 4.720000000013602e-07, 1.0805999999995153e-05, 4.720000000013602e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.7199999999442133e-07, 8.08400000000542e-06, 4.7199999999442133e-07, 8.639000000004726e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.7199999999442133e-07, 7.458000000001852e-06, 4.7300000000083386e-07, 8.041000000000298e-06, 5.419999999992098e-07, 5.153000000000796e-06, 4.720000000013602e-07, 7.457999999994913e-06, 4.7300000000083386e-07, 7.777000000000478e-06, 4.7300000000083386e-07, 9.346999999999828e-06, 4.720000000013602e-07, 4.55600000000278e-06, 4.7199999999442133e-07, 4.319000000002626e-06, 4.720000000013602e-07, 7.987000000000966e-06, 4.7199999999442133e-07, 6.722000000000672e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.7199999999442133e-07, 7.569000000005877e-06, 4.7199999999442133e-07, 8.917000000004116e-06, 4.720000000013602e-07, 7.597999999997551e-06, 4.720000000013602e-07, 7.652999999996357e-06, 4.720000000013602e-07, 8.110999999998147e-06, 5.419999999992098e-07, 4.429999999999712e-06, 4.720000000013602e-07, 7.750000000000812e-06, 5.419999999992098e-07, 1.0444000000005282e-05, 4.7299999999389497e-07, 7.889000000003976e-06, 4.720000000013602e-07, 9.471999999996483e-06, 4.720000000013602e-07], 'time': [0.036092458, 0.036092931, 0.036103861, 0.036104403, 0.036111458, 0.036111931, 0.036118333, 0.036118875, 0.03612775, 0.036128222, 0.036132764, 0.036133236, 0.036142458, 0.036150819, 0.036151292, 0.036160208, 0.036160681, 0.036168792, 0.036169264, 0.036175569, 0.036176042, 0.036180569, 0.036181042, 0.036186736, 0.036187208, 0.036193944, 0.036194417, 0.036201986, 0.036202458, 0.036210556, 0.036211028, 0.036215958, 0.036216431, 0.036225681, 0.036226153, 0.036235486, 0.036235958, 0.036241861, 0.036242333, 0.036253139, 0.036253611, 0.036263889, 0.036264361, 0.036272667, 0.036273139, 0.036283, 0.036283472, 0.036291556, 0.036292028, 0.036300667, 0.036301139, 0.036311514, 0.036311986, 0.036319444, 0.036319917, 0.036327958, 0.0363285, 0.036333653, 0.036334125, 0.036341583, 0.036342056, 0.036349833, 0.036350306, 0.036359653, 0.036360125, 0.036364681, 0.036365153, 0.036369472, 0.036369944, 0.036377931, 0.036378403, 0.036385125, 0.036385597, 0.036392542, 0.036393014, 0.036400056, 0.036400528, 0.036409556, 0.036410028, 0.036417597, 0.036418069, 0.036426986, 0.036427458, 0.036435056, 0.036435528, 0.036443181, 0.036443653, 0.036451764, 0.036452306, 0.036456736, 0.036457208, 0.036464958, 0.0364655, 0.036475944, 0.036476417, 0.036484306, 0.036484778, 0.03649425, 0.036494722], 'diff': [0, 4.7300000000083386e-07, 1.0929999999999274e-05, 5.419999999992098e-07, 7.054999999998868e-06, 4.7300000000083386e-07, 6.402000000002572e-06, 5.419999999992098e-07, 8.874999999998467e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 9.222000000003172e-06, 8.360999999998397e-06, 4.7300000000083386e-07, 8.915999999997704e-06, 4.7300000000083386e-07, 8.110999999998147e-06, 4.720000000013602e-07, 6.304999999998118e-06, 4.7300000000083386e-07, 4.527000000004167e-06, 4.7299999999389497e-07, 5.694000000000532e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.7300000000083386e-07, 7.568999999998938e-06, 4.720000000013602e-07, 8.097999999998051e-06, 4.720000000013602e-07, 4.930000000000212e-06, 4.7300000000083386e-07, 9.250000000002312e-06, 4.7199999999442133e-07, 9.333000000000258e-06, 4.720000000013602e-07, 5.903000000001546e-06, 4.720000000013602e-07, 1.0805999999995153e-05, 4.720000000013602e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.7199999999442133e-07, 8.08400000000542e-06, 4.7199999999442133e-07, 8.639000000004726e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.7199999999442133e-07, 7.458000000001852e-06, 4.7300000000083386e-07, 8.041000000000298e-06, 5.419999999992098e-07, 5.153000000000796e-06, 4.720000000013602e-07, 7.457999999994913e-06, 4.7300000000083386e-07, 7.777000000000478e-06, 4.7300000000083386e-07, 9.346999999999828e-06, 4.720000000013602e-07, 4.55600000000278e-06, 4.7199999999442133e-07, 4.319000000002626e-06, 4.720000000013602e-07, 7.987000000000966e-06, 4.7199999999442133e-07, 6.722000000000672e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.7199999999442133e-07, 7.569000000005877e-06, 4.7199999999442133e-07, 8.917000000004116e-06, 4.720000000013602e-07, 7.597999999997551e-06, 4.720000000013602e-07, 7.652999999996357e-06, 4.720000000013602e-07, 8.110999999998147e-06, 5.419999999992098e-07, 4.429999999999712e-06, 4.720000000013602e-07, 7.750000000000812e-06, 5.419999999992098e-07, 1.0444000000005282e-05, 4.7299999999389497e-07, 7.889000000003976e-06, 4.720000000013602e-07, 9.471999999996483e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:54:23.200" endtime="20201112 09:54:23.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.191" endtime="20201112 09:54:23.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:23.222" level="INFO">${RESULT} = [{'time': 0.036092931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036104403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:23.212" endtime="20201112 09:54:23.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:23.252" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:23.224" endtime="20201112 09:54:23.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.262" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:23.260" endtime="20201112 09:54:23.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.267" level="INFO">VALUE: [4.7300000000083386e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 8.360999999998397e-06, 8.915999999997704e-06, 8.110999999998147e-06, 6.304999999998118e-06, 4.527000000004167e-06, 5.694000000000532e-06, 6.736000000000242e-06, 7.568999999998938e-06, 8.097999999998051e-06, 4.930000000000212e-06, 9.250000000002312e-06, 9.333000000000258e-06, 5.903000000001546e-06, 1.0805999999995153e-05, 1.0278000000002452e-05, 8.305999999999591e-06, 9.860999999999898e-06, 8.08400000000542e-06, 8.639000000004726e-06, 1.0374999999999968e-05, 7.458000000001852e-06, 8.041000000000298e-06, 5.153000000000796e-06, 7.457999999994913e-06, 7.777000000000478e-06, 9.346999999999828e-06, 4.55600000000278e-06, 4.319000000002626e-06, 7.987000000000966e-06, 6.722000000000672e-06, 6.945000000001256e-06, 7.0419999999987715e-06, 9.028000000001202e-06, 7.569000000005877e-06, 8.917000000004116e-06, 7.597999999997551e-06, 7.652999999996357e-06, 8.110999999998147e-06, 4.429999999999712e-06, 7.750000000000812e-06, 1.0444000000005282e-05, 7.889000000003976e-06, 9.471999999996483e-06]</msg>
<status status="PASS" starttime="20201112 09:54:23.264" endtime="20201112 09:54:23.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.254" endtime="20201112 09:54:23.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.276" endtime="20201112 09:54:23.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:23.285" endtime="20201112 09:54:23.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.280" endtime="20201112 09:54:23.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.272" endtime="20201112 09:54:23.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.671" endtime="20201112 09:54:23.311"></status>
</kw>
<msg timestamp="20201112 09:54:23.311" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.332" endtime="20201112 09:54:23.343"></status>
</kw>
<msg timestamp="20201112 09:54:23.344" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.328" endtime="20201112 09:54:23.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.350" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.346" endtime="20201112 09:54:23.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.353" endtime="20201112 09:54:23.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.321" endtime="20201112 09:54:23.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.316" endtime="20201112 09:54:23.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.376" endtime="20201112 09:54:23.719"></status>
</kw>
<msg timestamp="20201112 09:54:23.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037718111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037718583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:23.373" endtime="20201112 09:54:23.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037718111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037718583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:23.729" endtime="20201112 09:54:23.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.748" endtime="20201112 09:54:23.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.365" endtime="20201112 09:54:23.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.361" endtime="20201112 09:54:23.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.765" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:23.763" endtime="20201112 09:54:23.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.776" level="INFO">VALUE: [{'time': 0.037718111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037718583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037725417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.833999999997231e-06, 'source_diff': 6.833999999997231e-06}, {'time': 0.037725889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037733347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.037733819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03774475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0930999999998747e-05, 'source_diff': 1.0930999999998747e-05}, {'time': 0.037745222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037751972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.037752444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03775925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.037759722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037764417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.6949999999990055e-06, 'source_diff': 4.6949999999990055e-06}, {'time': 0.037764958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.03777325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.037773722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037784431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0708999999997637e-05, 'source_diff': 1.0708999999997637e-05}, {'time': 0.037784903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037793833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.929999999997273e-06, 'source_diff': 8.929999999997273e-06}, {'time': 0.037794306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037801764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.037802236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037811375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.037811847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037818278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.430999999994247e-06, 'source_diff': 6.430999999994247e-06}, {'time': 0.03781875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037829556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.037830028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037835597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5689999999969375e-06, 'source_diff': 5.5689999999969375e-06}, {'time': 0.037836069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037841028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.0378415, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037846681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.037847153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037852625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.037853097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037858986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.888999999995037e-06, 'source_diff': 5.888999999995037e-06}, {'time': 0.037859458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037865778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3200000000041e-06, 'source_diff': 6.3200000000041e-06}, {'time': 0.03786625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037873403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.153000000002796e-06, 'source_diff': 7.153000000002796e-06}, {'time': 0.037873875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037884264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.037884736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037889375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.037889847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037896903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.05600000000528e-06, 'source_diff': 7.05600000000528e-06}, {'time': 0.037897375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037907542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0167000000005366e-05, 'source_diff': 1.0167000000005366e-05}, {'time': 0.037908014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037916944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930000000004212e-06, 'source_diff': 8.930000000004212e-06}, {'time': 0.037917417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037926764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.037927236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037933653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.416999999994677e-06, 'source_diff': 6.416999999994677e-06}, {'time': 0.037934125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037938792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.037939264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037949847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0583000000001508e-05, 'source_diff': 1.0583000000001508e-05}, {'time': 0.037950319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037960722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.037961194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037969375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.181000000002936e-06, 'source_diff': 8.181000000002936e-06}, {'time': 0.037969847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037975944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.096999999996577e-06, 'source_diff': 6.096999999996577e-06}, {'time': 0.037976417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037981792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.037982264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037987542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.037988014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037996194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.179999999996523e-06, 'source_diff': 8.179999999996523e-06}, {'time': 0.037996667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038006847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180000000005462e-05, 'source_diff': 1.0180000000005462e-05}, {'time': 0.038007319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038012486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.038012958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038022458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.500000000002562e-06, 'source_diff': 9.500000000002562e-06}, {'time': 0.038023, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.038033278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0277999999995513e-05, 'source_diff': 1.0277999999995513e-05}, {'time': 0.03803375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038043528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.778000000001952e-06, 'source_diff': 9.778000000001952e-06}, {'time': 0.038044, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038052167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166999999996427e-06, 'source_diff': 8.166999999996427e-06}, {'time': 0.038052639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038061667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.038062139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038067944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.804999999997618e-06, 'source_diff': 5.804999999997618e-06}, {'time': 0.038068417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038076083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.665999999996453e-06, 'source_diff': 7.665999999996453e-06}, {'time': 0.038076556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038087153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.038087625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038094569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.944000000001782e-06, 'source_diff': 6.944000000001782e-06}, {'time': 0.038095042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038103653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.038104125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038108875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.038109347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038119847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0499999999996623e-05, 'source_diff': 1.0499999999996623e-05}, {'time': 0.038120319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:54:23.767" endtime="20201112 09:54:23.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.757" endtime="20201112 09:54:23.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:23.836" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:23.782" endtime="20201112 09:54:23.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.846" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:23.843" endtime="20201112 09:54:23.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.855" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.720000000013602e-07, 6.833999999997231e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.720000000013602e-07, 1.0930999999998747e-05, 4.720000000013602e-07, 6.749999999999812e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.720000000013602e-07, 4.6949999999990055e-06, 5.409999999997361e-07, 8.292000000000022e-06, 4.720000000013602e-07, 1.0708999999997637e-05, 4.720000000013602e-07, 8.929999999997273e-06, 4.7300000000083386e-07, 7.458000000001852e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 6.430999999994247e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 5.5689999999969375e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 5.180999999999936e-06, 4.720000000013602e-07, 5.471999999999422e-06, 4.720000000013602e-07, 5.888999999995037e-06, 4.720000000013602e-07, 6.3200000000041e-06, 4.7199999999442133e-07, 7.153000000002796e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 4.639000000000726e-06, 4.7199999999442133e-07, 7.05600000000528e-06, 4.7199999999442133e-07, 1.0167000000005366e-05, 4.7199999999442133e-07, 8.930000000004212e-06, 4.7300000000083386e-07, 9.346999999999828e-06, 4.720000000013602e-07, 6.416999999994677e-06, 4.720000000013602e-07, 4.666999999999866e-06, 4.720000000013602e-07, 1.0583000000001508e-05, 4.720000000013602e-07, 1.0402999999999107e-05, 4.7199999999442133e-07, 8.181000000002936e-06, 4.720000000013602e-07, 6.096999999996577e-06, 4.7300000000083386e-07, 5.375000000001906e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 8.179999999996523e-06, 4.7300000000083386e-07, 1.0180000000005462e-05, 4.7199999999442133e-07, 5.167000000000366e-06, 4.720000000013602e-07, 9.500000000002562e-06, 5.419999999992098e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 9.778000000001952e-06, 4.720000000013602e-07, 8.166999999996427e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 5.804999999997618e-06, 4.7300000000083386e-07, 7.665999999996453e-06, 4.7300000000083386e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 6.944000000001782e-06, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07], 'time': [0.037718111, 0.037718583, 0.037725417, 0.037725889, 0.037733347, 0.037733819, 0.03774475, 0.037745222, 0.037751972, 0.037752444, 0.03775925, 0.037759722, 0.037764417, 0.037764958, 0.03777325, 0.037773722, 0.037784431, 0.037784903, 0.037793833, 0.037794306, 0.037801764, 0.037802236, 0.037811375, 0.037811847, 0.037818278, 0.03781875, 0.037829556, 0.037830028, 0.037835597, 0.037836069, 0.037841028, 0.0378415, 0.037846681, 0.037847153, 0.037852625, 0.037853097, 0.037858986, 0.037859458, 0.037865778, 0.03786625, 0.037873403, 0.037873875, 0.037884264, 0.037884736, 0.037889375, 0.037889847, 0.037896903, 0.037897375, 0.037907542, 0.037908014, 0.037916944, 0.037917417, 0.037926764, 0.037927236, 0.037933653, 0.037934125, 0.037938792, 0.037939264, 0.037949847, 0.037950319, 0.037960722, 0.037961194, 0.037969375, 0.037969847, 0.037975944, 0.037976417, 0.037981792, 0.037982264, 0.037987542, 0.037988014, 0.037996194, 0.037996667, 0.038006847, 0.038007319, 0.038012486, 0.038012958, 0.038022458, 0.038023, 0.038033278, 0.03803375, 0.038043528, 0.038044, 0.038052167, 0.038052639, 0.038061667, 0.038062139, 0.038067944, 0.038068417, 0.038076083, 0.038076556, 0.038087153, 0.038087625, 0.038094569, 0.038095042, 0.038103653, 0.038104125, 0.038108875, 0.038109347, 0.038119847, 0.038120319], 'diff': [0, 4.720000000013602e-07, 6.833999999997231e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.720000000013602e-07, 1.0930999999998747e-05, 4.720000000013602e-07, 6.749999999999812e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.720000000013602e-07, 4.6949999999990055e-06, 5.409999999997361e-07, 8.292000000000022e-06, 4.720000000013602e-07, 1.0708999999997637e-05, 4.720000000013602e-07, 8.929999999997273e-06, 4.7300000000083386e-07, 7.458000000001852e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 6.430999999994247e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 5.5689999999969375e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 5.180999999999936e-06, 4.720000000013602e-07, 5.471999999999422e-06, 4.720000000013602e-07, 5.888999999995037e-06, 4.720000000013602e-07, 6.3200000000041e-06, 4.7199999999442133e-07, 7.153000000002796e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 4.639000000000726e-06, 4.7199999999442133e-07, 7.05600000000528e-06, 4.7199999999442133e-07, 1.0167000000005366e-05, 4.7199999999442133e-07, 8.930000000004212e-06, 4.7300000000083386e-07, 9.346999999999828e-06, 4.720000000013602e-07, 6.416999999994677e-06, 4.720000000013602e-07, 4.666999999999866e-06, 4.720000000013602e-07, 1.0583000000001508e-05, 4.720000000013602e-07, 1.0402999999999107e-05, 4.7199999999442133e-07, 8.181000000002936e-06, 4.720000000013602e-07, 6.096999999996577e-06, 4.7300000000083386e-07, 5.375000000001906e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 8.179999999996523e-06, 4.7300000000083386e-07, 1.0180000000005462e-05, 4.7199999999442133e-07, 5.167000000000366e-06, 4.720000000013602e-07, 9.500000000002562e-06, 5.419999999992098e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 9.778000000001952e-06, 4.720000000013602e-07, 8.166999999996427e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 5.804999999997618e-06, 4.7300000000083386e-07, 7.665999999996453e-06, 4.7300000000083386e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 6.944000000001782e-06, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:54:23.848" endtime="20201112 09:54:23.857"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.838" endtime="20201112 09:54:23.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:23.869" level="INFO">${RESULT} = [{'time': 0.037718583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037725889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:23.860" endtime="20201112 09:54:23.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:23.900" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:23.871" endtime="20201112 09:54:23.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.910" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:23.908" endtime="20201112 09:54:23.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.916" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:54:23.913" endtime="20201112 09:54:23.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.902" endtime="20201112 09:54:23.918"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.925" endtime="20201112 09:54:23.927"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:23.933" endtime="20201112 09:54:23.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.929" endtime="20201112 09:54:23.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.920" endtime="20201112 09:54:23.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.312" endtime="20201112 09:54:23.959"></status>
</kw>
<msg timestamp="20201112 09:54:23.959" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.981" endtime="20201112 09:54:23.992"></status>
</kw>
<msg timestamp="20201112 09:54:23.993" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.978" endtime="20201112 09:54:23.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.000" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.995" endtime="20201112 09:54:24.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.002" endtime="20201112 09:54:24.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.968" endtime="20201112 09:54:24.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.964" endtime="20201112 09:54:24.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.025" endtime="20201112 09:54:24.365"></status>
</kw>
<msg timestamp="20201112 09:54:24.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038482458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038482931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:24.022" endtime="20201112 09:54:24.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038482458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038482931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:24.375" endtime="20201112 09:54:24.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.394" endtime="20201112 09:54:24.398"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.015" endtime="20201112 09:54:24.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.010" endtime="20201112 09:54:24.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.411" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:24.408" endtime="20201112 09:54:24.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.422" level="INFO">VALUE: [{'time': 0.038482458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038482931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038487222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2910000000034865e-06, 'source_diff': 4.2910000000034865e-06}, {'time': 0.038487694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038498667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0972999999997457e-05, 'source_diff': 1.0972999999997457e-05}, {'time': 0.038499208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.038505111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.038505653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.038514681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.038515153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038523181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.027999999993263e-06, 'source_diff': 8.027999999993263e-06}, {'time': 0.038523722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.41000000006675e-07, 'source_diff': 5.41000000006675e-07}, {'time': 0.038530778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.055999999998341e-06, 'source_diff': 7.055999999998341e-06}, {'time': 0.03853125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038541222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.971999999996983e-06, 'source_diff': 9.971999999996983e-06}, {'time': 0.038541694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038552167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0472999999996957e-05, 'source_diff': 1.0472999999996957e-05}, {'time': 0.038552639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038562611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.971999999996983e-06, 'source_diff': 9.971999999996983e-06}, {'time': 0.038563083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03856825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.038568722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038574319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.597000000003016e-06, 'source_diff': 5.597000000003016e-06}, {'time': 0.038574792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.038582458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666000000003392e-06, 'source_diff': 7.666000000003392e-06}, {'time': 0.038582931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038588319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.388000000002002e-06, 'source_diff': 5.388000000002002e-06}, {'time': 0.038588792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.038598014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.222000000003172e-06, 'source_diff': 9.222000000003172e-06}, {'time': 0.038598486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038604792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.038605264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038614611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.038615083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038624444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.038624917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038629347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.038629819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038638444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.038638917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038647847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.929999999997273e-06, 'source_diff': 8.929999999997273e-06}, {'time': 0.038648319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038653583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.038654056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038659222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.038659694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038664972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.038665444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038672181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7369999999997154e-06, 'source_diff': 6.7369999999997154e-06}, {'time': 0.038672653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038679597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.944000000001782e-06, 'source_diff': 6.944000000001782e-06}, {'time': 0.038680069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038686069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.038686542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038690861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.319000000002626e-06, 'source_diff': 4.319000000002626e-06}, {'time': 0.038691333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038700986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.038701458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038706431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.972999999998395e-06, 'source_diff': 4.972999999998395e-06}, {'time': 0.038706903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038717306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.038717778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038727514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.735999999996303e-06, 'source_diff': 9.735999999996303e-06}, {'time': 0.038727986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038738931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0944999999998317e-05, 'source_diff': 1.0944999999998317e-05}, {'time': 0.038739403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03874925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.038749722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038760347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.038760819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038765958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.038766431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.038771389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.958000000006291e-06, 'source_diff': 4.958000000006291e-06}, {'time': 0.038771861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038780056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.195000000002506e-06, 'source_diff': 8.195000000002506e-06}, {'time': 0.038780528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038785486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.038785958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038790819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999994897e-06, 'source_diff': 4.860999999994897e-06}, {'time': 0.038791292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038796986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.694000000000532e-06, 'source_diff': 5.694000000000532e-06}, {'time': 0.038797458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038805014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.038805486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038815583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0097000000000578e-05, 'source_diff': 1.0097000000000578e-05}, {'time': 0.038816056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038822903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.038823375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038828542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.038829014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038836472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.457999999994913e-06, 'source_diff': 7.457999999994913e-06}, {'time': 0.038836944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038843264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3200000000041e-06, 'source_diff': 6.3200000000041e-06}, {'time': 0.038843736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038852333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.597000000006016e-06, 'source_diff': 8.597000000006016e-06}, {'time': 0.038852806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.038860597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791000000000048e-06, 'source_diff': 7.791000000000048e-06}, {'time': 0.038861069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038867375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.30600000000453e-06, 'source_diff': 6.30600000000453e-06}, {'time': 0.038867847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}]</msg>
<status status="PASS" starttime="20201112 09:54:24.413" endtime="20201112 09:54:24.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.402" endtime="20201112 09:54:24.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:24.482" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:24.428" endtime="20201112 09:54:24.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.492" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:24.490" endtime="20201112 09:54:24.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.501" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.7300000000083386e-07, 4.2910000000034865e-06, 4.720000000013602e-07, 1.0972999999997457e-05, 5.409999999997361e-07, 5.903000000001546e-06, 5.419999999992098e-07, 9.028000000001202e-06, 4.720000000013602e-07, 8.027999999993263e-06, 5.41000000006675e-07, 7.055999999998341e-06, 4.720000000013602e-07, 9.971999999996983e-06, 4.720000000013602e-07, 1.0472999999996957e-05, 4.720000000013602e-07, 9.971999999996983e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 5.597000000003016e-06, 4.7299999999389497e-07, 7.666000000003392e-06, 4.7300000000083386e-07, 5.388000000002002e-06, 4.7299999999389497e-07, 9.222000000003172e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 4.429999999999712e-06, 4.720000000013602e-07, 8.624999999998217e-06, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.7300000000083386e-07, 5.166000000000892e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 6.7369999999997154e-06, 4.720000000013602e-07, 6.944000000001782e-06, 4.7199999999442133e-07, 5.999999999999062e-06, 4.7300000000083386e-07, 4.319000000002626e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 4.972999999998395e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 9.735999999996303e-06, 4.720000000013602e-07, 1.0944999999998317e-05, 4.720000000013602e-07, 9.847000000000328e-06, 4.720000000013602e-07, 1.0625000000000218e-05, 4.720000000013602e-07, 5.139000000001226e-06, 4.7299999999389497e-07, 4.958000000006291e-06, 4.7199999999442133e-07, 8.195000000002506e-06, 4.720000000013602e-07, 4.957999999999352e-06, 4.720000000013602e-07, 4.860999999994897e-06, 4.7300000000083386e-07, 5.694000000000532e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 1.0097000000000578e-05, 4.7300000000083386e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 7.457999999994913e-06, 4.720000000013602e-07, 6.3200000000041e-06, 4.7199999999442133e-07, 8.597000000006016e-06, 4.7299999999389497e-07, 7.791000000000048e-06, 4.720000000013602e-07, 6.30600000000453e-06, 4.7199999999442133e-07], 'time': [0.038482458, 0.038482931, 0.038487222, 0.038487694, 0.038498667, 0.038499208, 0.038505111, 0.038505653, 0.038514681, 0.038515153, 0.038523181, 0.038523722, 0.038530778, 0.03853125, 0.038541222, 0.038541694, 0.038552167, 0.038552639, 0.038562611, 0.038563083, 0.03856825, 0.038568722, 0.038574319, 0.038574792, 0.038582458, 0.038582931, 0.038588319, 0.038588792, 0.038598014, 0.038598486, 0.038604792, 0.038605264, 0.038614611, 0.038615083, 0.038624444, 0.038624917, 0.038629347, 0.038629819, 0.038638444, 0.038638917, 0.038647847, 0.038648319, 0.038653583, 0.038654056, 0.038659222, 0.038659694, 0.038664972, 0.038665444, 0.038672181, 0.038672653, 0.038679597, 0.038680069, 0.038686069, 0.038686542, 0.038690861, 0.038691333, 0.038700986, 0.038701458, 0.038706431, 0.038706903, 0.038717306, 0.038717778, 0.038727514, 0.038727986, 0.038738931, 0.038739403, 0.03874925, 0.038749722, 0.038760347, 0.038760819, 0.038765958, 0.038766431, 0.038771389, 0.038771861, 0.038780056, 0.038780528, 0.038785486, 0.038785958, 0.038790819, 0.038791292, 0.038796986, 0.038797458, 0.038805014, 0.038805486, 0.038815583, 0.038816056, 0.038822903, 0.038823375, 0.038828542, 0.038829014, 0.038836472, 0.038836944, 0.038843264, 0.038843736, 0.038852333, 0.038852806, 0.038860597, 0.038861069, 0.038867375, 0.038867847], 'diff': [0, 4.7300000000083386e-07, 4.2910000000034865e-06, 4.720000000013602e-07, 1.0972999999997457e-05, 5.409999999997361e-07, 5.903000000001546e-06, 5.419999999992098e-07, 9.028000000001202e-06, 4.720000000013602e-07, 8.027999999993263e-06, 5.41000000006675e-07, 7.055999999998341e-06, 4.720000000013602e-07, 9.971999999996983e-06, 4.720000000013602e-07, 1.0472999999996957e-05, 4.720000000013602e-07, 9.971999999996983e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 5.597000000003016e-06, 4.7299999999389497e-07, 7.666000000003392e-06, 4.7300000000083386e-07, 5.388000000002002e-06, 4.7299999999389497e-07, 9.222000000003172e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 4.429999999999712e-06, 4.720000000013602e-07, 8.624999999998217e-06, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.7300000000083386e-07, 5.166000000000892e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 6.7369999999997154e-06, 4.720000000013602e-07, 6.944000000001782e-06, 4.7199999999442133e-07, 5.999999999999062e-06, 4.7300000000083386e-07, 4.319000000002626e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 4.972999999998395e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 9.735999999996303e-06, 4.720000000013602e-07, 1.0944999999998317e-05, 4.720000000013602e-07, 9.847000000000328e-06, 4.720000000013602e-07, 1.0625000000000218e-05, 4.720000000013602e-07, 5.139000000001226e-06, 4.7299999999389497e-07, 4.958000000006291e-06, 4.7199999999442133e-07, 8.195000000002506e-06, 4.720000000013602e-07, 4.957999999999352e-06, 4.720000000013602e-07, 4.860999999994897e-06, 4.7300000000083386e-07, 5.694000000000532e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 1.0097000000000578e-05, 4.7300000000083386e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 7.457999999994913e-06, 4.720000000013602e-07, 6.3200000000041e-06, 4.7199999999442133e-07, 8.597000000006016e-06, 4.7299999999389497e-07, 7.791000000000048e-06, 4.720000000013602e-07, 6.30600000000453e-06, 4.7199999999442133e-07]}</msg>
<status status="PASS" starttime="20201112 09:54:24.494" endtime="20201112 09:54:24.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.484" endtime="20201112 09:54:24.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:24.515" level="INFO">${RESULT} = [{'time': 0.038482931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038487694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:24.506" endtime="20201112 09:54:24.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:24.546" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:24.518" endtime="20201112 09:54:24.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.558" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:24.554" endtime="20201112 09:54:24.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.563" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.41000000006675e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201112 09:54:24.560" endtime="20201112 09:54:24.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.548" endtime="20201112 09:54:24.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.572" endtime="20201112 09:54:24.575"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:24.580" endtime="20201112 09:54:24.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.576" endtime="20201112 09:54:24.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.567" endtime="20201112 09:54:24.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.960" endtime="20201112 09:54:24.606"></status>
</kw>
<msg timestamp="20201112 09:54:24.606" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.626" endtime="20201112 09:54:24.637"></status>
</kw>
<msg timestamp="20201112 09:54:24.638" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.623" endtime="20201112 09:54:24.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.644" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.640" endtime="20201112 09:54:24.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.646" endtime="20201112 09:54:24.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.616" endtime="20201112 09:54:24.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.611" endtime="20201112 09:54:24.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.670" endtime="20201112 09:54:25.009"></status>
</kw>
<msg timestamp="20201112 09:54:25.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036076208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036076681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:24.666" endtime="20201112 09:54:25.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036076208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036076681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:25.018" endtime="20201112 09:54:25.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.038" endtime="20201112 09:54:25.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.659" endtime="20201112 09:54:25.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.654" endtime="20201112 09:54:25.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.054" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:25.052" endtime="20201112 09:54:25.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.065" level="INFO">VALUE: [{'time': 0.036076208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036076681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036082014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.333000000003196e-06, 'source_diff': 5.333000000003196e-06}, {'time': 0.036082556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036089472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.915999999995703e-06, 'source_diff': 6.915999999995703e-06}, {'time': 0.036089944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036096583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.639000000002726e-06, 'source_diff': 6.639000000002726e-06}, {'time': 0.036097056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036104389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.332999999998258e-06, 'source_diff': 7.332999999998258e-06}, {'time': 0.036104931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036109833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.902000000001072e-06, 'source_diff': 4.902000000001072e-06}, {'time': 0.036110306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036119222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.915999999997704e-06, 'source_diff': 8.915999999997704e-06}, {'time': 0.036119694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036126014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319999999997161e-06, 'source_diff': 6.319999999997161e-06}, {'time': 0.036126486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036134264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.036134736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036142736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.036143208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036154111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.036154583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036159542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.959000000005764e-06, 'source_diff': 4.959000000005764e-06}, {'time': 0.036160014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036168097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.083000000005947e-06, 'source_diff': 8.083000000005947e-06}, {'time': 0.036168569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036173625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.05600000000328e-06, 'source_diff': 5.05600000000328e-06}, {'time': 0.036174097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036181875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.036182347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036186667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3200000000021e-06, 'source_diff': 4.3200000000021e-06}, {'time': 0.036187139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036193444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.304999999998118e-06, 'source_diff': 6.304999999998118e-06}, {'time': 0.036193917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036199778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.861000000002836e-06, 'source_diff': 5.861000000002836e-06}, {'time': 0.036200319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036207125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.036207597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036215167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.036215639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036224875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.235999999995803e-06, 'source_diff': 9.235999999995803e-06}, {'time': 0.036225347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036235542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0195000000004506e-05, 'source_diff': 1.0195000000004506e-05}, {'time': 0.036236014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036240764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.75000000000475e-06, 'source_diff': 4.75000000000475e-06}, {'time': 0.036241236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036250986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.749999999995873e-06, 'source_diff': 9.749999999995873e-06}, {'time': 0.036251458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036259861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402999999997107e-06, 'source_diff': 8.402999999997107e-06}, {'time': 0.036260333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036269917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.583999999999981e-06, 'source_diff': 9.583999999999981e-06}, {'time': 0.036270458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036275639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.036276111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036281986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.036282458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036288083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.036288625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036293167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.54200000000321e-06, 'source_diff': 4.54200000000321e-06}, {'time': 0.036293639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036300694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.054999999998868e-06, 'source_diff': 7.054999999998868e-06}, {'time': 0.036301167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036311653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0485999999997053e-05, 'source_diff': 1.0485999999997053e-05}, {'time': 0.036312125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036318236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.110999999996147e-06, 'source_diff': 6.110999999996147e-06}, {'time': 0.036318708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036324417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.036324958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036333778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819999999999661e-06, 'source_diff': 8.819999999999661e-06}, {'time': 0.03633425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036343694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.444000000004282e-06, 'source_diff': 9.444000000004282e-06}, {'time': 0.036344167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036350389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.036350861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036357472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.611000000003586e-06, 'source_diff': 6.611000000003586e-06}, {'time': 0.036357944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036364264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319999999997161e-06, 'source_diff': 6.319999999997161e-06}, {'time': 0.036364736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036375431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0694999999998067e-05, 'source_diff': 1.0694999999998067e-05}, {'time': 0.036375903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036385667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.763999999995443e-06, 'source_diff': 9.763999999995443e-06}, {'time': 0.036386139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036394847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.708000000003102e-06, 'source_diff': 8.708000000003102e-06}, {'time': 0.036395319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036399639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.319999999995161e-06, 'source_diff': 4.319999999995161e-06}, {'time': 0.036400111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036404417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.036404889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036413708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.036414181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.03642425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0069000000001438e-05, 'source_diff': 1.0069000000001438e-05}, {'time': 0.036424722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036434653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.930999999997747e-06, 'source_diff': 9.930999999997747e-06}, {'time': 0.036435194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036443583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.389000000004476e-06, 'source_diff': 8.389000000004476e-06}, {'time': 0.036444056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036449736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.680000000000962e-06, 'source_diff': 5.680000000000962e-06}, {'time': 0.036450208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036458236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.036458778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}]</msg>
<status status="PASS" starttime="20201112 09:54:25.056" endtime="20201112 09:54:25.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.046" endtime="20201112 09:54:25.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:25.128" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:25.072" endtime="20201112 09:54:25.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.137" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:25.135" endtime="20201112 09:54:25.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.146" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.7300000000083386e-07, 5.333000000003196e-06, 5.419999999992098e-07, 6.915999999995703e-06, 4.720000000013602e-07, 6.639000000002726e-06, 4.7300000000083386e-07, 7.332999999998258e-06, 5.419999999992098e-07, 4.902000000001072e-06, 4.7300000000083386e-07, 8.915999999997704e-06, 4.720000000013602e-07, 6.319999999997161e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 8.000000000001062e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.7199999999442133e-07, 4.959000000005764e-06, 4.7199999999442133e-07, 8.083000000005947e-06, 4.7199999999442133e-07, 5.05600000000328e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.7199999999442133e-07, 4.3200000000021e-06, 4.720000000013602e-07, 6.304999999998118e-06, 4.7300000000083386e-07, 5.861000000002836e-06, 5.409999999997361e-07, 6.805999999998091e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 9.235999999995803e-06, 4.720000000013602e-07, 1.0195000000004506e-05, 4.7199999999442133e-07, 4.75000000000475e-06, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 9.583999999999981e-06, 5.409999999997361e-07, 5.180999999999936e-06, 4.720000000013602e-07, 5.875000000002406e-06, 4.7199999999442133e-07, 5.625000000002156e-06, 5.419999999992098e-07, 4.54200000000321e-06, 4.720000000013602e-07, 7.054999999998868e-06, 4.7300000000083386e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 6.110999999996147e-06, 4.720000000013602e-07, 5.7089999999995755e-06, 5.409999999997361e-07, 8.819999999999661e-06, 4.720000000013602e-07, 9.444000000004282e-06, 4.7299999999389497e-07, 6.222000000000172e-06, 4.720000000013602e-07, 6.611000000003586e-06, 4.720000000013602e-07, 6.319999999997161e-06, 4.720000000013602e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 9.763999999995443e-06, 4.720000000013602e-07, 8.708000000003102e-06, 4.720000000013602e-07, 4.319999999995161e-06, 4.720000000013602e-07, 4.30600000000253e-06, 4.720000000013602e-07, 8.819000000000188e-06, 4.7299999999389497e-07, 1.0069000000001438e-05, 4.720000000013602e-07, 9.930999999997747e-06, 5.409999999997361e-07, 8.389000000004476e-06, 4.7300000000083386e-07, 5.680000000000962e-06, 4.7199999999442133e-07, 8.028000000000202e-06, 5.419999999992098e-07], 'time': [0.036076208, 0.036076681, 0.036082014, 0.036082556, 0.036089472, 0.036089944, 0.036096583, 0.036097056, 0.036104389, 0.036104931, 0.036109833, 0.036110306, 0.036119222, 0.036119694, 0.036126014, 0.036126486, 0.036134264, 0.036134736, 0.036142736, 0.036143208, 0.036154111, 0.036154583, 0.036159542, 0.036160014, 0.036168097, 0.036168569, 0.036173625, 0.036174097, 0.036181875, 0.036182347, 0.036186667, 0.036187139, 0.036193444, 0.036193917, 0.036199778, 0.036200319, 0.036207125, 0.036207597, 0.036215167, 0.036215639, 0.036224875, 0.036225347, 0.036235542, 0.036236014, 0.036240764, 0.036241236, 0.036250986, 0.036251458, 0.036259861, 0.036260333, 0.036269917, 0.036270458, 0.036275639, 0.036276111, 0.036281986, 0.036282458, 0.036288083, 0.036288625, 0.036293167, 0.036293639, 0.036300694, 0.036301167, 0.036311653, 0.036312125, 0.036318236, 0.036318708, 0.036324417, 0.036324958, 0.036333778, 0.03633425, 0.036343694, 0.036344167, 0.036350389, 0.036350861, 0.036357472, 0.036357944, 0.036364264, 0.036364736, 0.036375431, 0.036375903, 0.036385667, 0.036386139, 0.036394847, 0.036395319, 0.036399639, 0.036400111, 0.036404417, 0.036404889, 0.036413708, 0.036414181, 0.03642425, 0.036424722, 0.036434653, 0.036435194, 0.036443583, 0.036444056, 0.036449736, 0.036450208, 0.036458236, 0.036458778], 'diff': [0, 4.7300000000083386e-07, 5.333000000003196e-06, 5.419999999992098e-07, 6.915999999995703e-06, 4.720000000013602e-07, 6.639000000002726e-06, 4.7300000000083386e-07, 7.332999999998258e-06, 5.419999999992098e-07, 4.902000000001072e-06, 4.7300000000083386e-07, 8.915999999997704e-06, 4.720000000013602e-07, 6.319999999997161e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 8.000000000001062e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.7199999999442133e-07, 4.959000000005764e-06, 4.7199999999442133e-07, 8.083000000005947e-06, 4.7199999999442133e-07, 5.05600000000328e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.7199999999442133e-07, 4.3200000000021e-06, 4.720000000013602e-07, 6.304999999998118e-06, 4.7300000000083386e-07, 5.861000000002836e-06, 5.409999999997361e-07, 6.805999999998091e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 9.235999999995803e-06, 4.720000000013602e-07, 1.0195000000004506e-05, 4.7199999999442133e-07, 4.75000000000475e-06, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 9.583999999999981e-06, 5.409999999997361e-07, 5.180999999999936e-06, 4.720000000013602e-07, 5.875000000002406e-06, 4.7199999999442133e-07, 5.625000000002156e-06, 5.419999999992098e-07, 4.54200000000321e-06, 4.720000000013602e-07, 7.054999999998868e-06, 4.7300000000083386e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 6.110999999996147e-06, 4.720000000013602e-07, 5.7089999999995755e-06, 5.409999999997361e-07, 8.819999999999661e-06, 4.720000000013602e-07, 9.444000000004282e-06, 4.7299999999389497e-07, 6.222000000000172e-06, 4.720000000013602e-07, 6.611000000003586e-06, 4.720000000013602e-07, 6.319999999997161e-06, 4.720000000013602e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 9.763999999995443e-06, 4.720000000013602e-07, 8.708000000003102e-06, 4.720000000013602e-07, 4.319999999995161e-06, 4.720000000013602e-07, 4.30600000000253e-06, 4.720000000013602e-07, 8.819000000000188e-06, 4.7299999999389497e-07, 1.0069000000001438e-05, 4.720000000013602e-07, 9.930999999997747e-06, 5.409999999997361e-07, 8.389000000004476e-06, 4.7300000000083386e-07, 5.680000000000962e-06, 4.7199999999442133e-07, 8.028000000000202e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201112 09:54:25.139" endtime="20201112 09:54:25.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.130" endtime="20201112 09:54:25.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:25.160" level="INFO">${RESULT} = [{'time': 0.036076681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036082556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:25.151" endtime="20201112 09:54:25.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:25.191" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:25.163" endtime="20201112 09:54:25.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.201" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:25.199" endtime="20201112 09:54:25.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.207" level="INFO">VALUE: [4.7300000000083386e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201112 09:54:25.204" endtime="20201112 09:54:25.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.193" endtime="20201112 09:54:25.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.216" endtime="20201112 09:54:25.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:25.224" endtime="20201112 09:54:25.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.220" endtime="20201112 09:54:25.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.211" endtime="20201112 09:54:25.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.608" endtime="20201112 09:54:25.250"></status>
</kw>
<msg timestamp="20201112 09:54:25.250" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.270" endtime="20201112 09:54:25.280"></status>
</kw>
<msg timestamp="20201112 09:54:25.282" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.267" endtime="20201112 09:54:25.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.288" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.284" endtime="20201112 09:54:25.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.290" endtime="20201112 09:54:25.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.259" endtime="20201112 09:54:25.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.255" endtime="20201112 09:54:25.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.314" endtime="20201112 09:54:25.658"></status>
</kw>
<msg timestamp="20201112 09:54:25.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036009556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036010028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:25.310" endtime="20201112 09:54:25.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036009556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036010028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:25.668" endtime="20201112 09:54:25.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.687" endtime="20201112 09:54:25.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.303" endtime="20201112 09:54:25.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.298" endtime="20201112 09:54:25.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.703" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:25.701" endtime="20201112 09:54:25.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.715" level="INFO">VALUE: [{'time': 0.036009556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036010028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036020014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.986000000003492e-06, 'source_diff': 9.986000000003492e-06}, {'time': 0.036020486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036029028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.036029569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036035042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.473000000005834e-06, 'source_diff': 5.473000000005834e-06}, {'time': 0.036035514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036040889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.036041361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036048097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.036048569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036055097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.036055569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036065667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0098000000000051e-05, 'source_diff': 1.0098000000000051e-05}, {'time': 0.036066139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036076306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0167000000005366e-05, 'source_diff': 1.0167000000005366e-05}, {'time': 0.036076778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036081944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.036082417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036088847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.430000000001712e-06, 'source_diff': 6.430000000001712e-06}, {'time': 0.036089319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036097319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.036097792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036105028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.0361055, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036111931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.431000000001186e-06, 'source_diff': 6.431000000001186e-06}, {'time': 0.036112403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036117042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.036117514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036122681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166999999993427e-06, 'source_diff': 5.166999999993427e-06}, {'time': 0.036123153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036129486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.333000000004196e-06, 'source_diff': 6.333000000004196e-06}, {'time': 0.036129958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036139194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.236000000002742e-06, 'source_diff': 9.236000000002742e-06}, {'time': 0.036139667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036149319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.651999999998884e-06, 'source_diff': 9.651999999998884e-06}, {'time': 0.036149792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036159472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.679999999998024e-06, 'source_diff': 9.679999999998024e-06}, {'time': 0.036159944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036165514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.57000000000335e-06, 'source_diff': 5.57000000000335e-06}, {'time': 0.036165986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036172306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3200000000041e-06, 'source_diff': 6.3200000000041e-06}, {'time': 0.036172778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036178264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.036178736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036185167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.430999999994247e-06, 'source_diff': 6.430999999994247e-06}, {'time': 0.036185639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036194056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.417000000003616e-06, 'source_diff': 8.417000000003616e-06}, {'time': 0.036194528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036201375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000004266e-06, 'source_diff': 6.847000000004266e-06}, {'time': 0.036201847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036211903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0055999999994403e-05, 'source_diff': 1.0055999999994403e-05}, {'time': 0.036212375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036217444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.069000000003376e-06, 'source_diff': 5.069000000003376e-06}, {'time': 0.036217917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036228819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902000000000134e-05, 'source_diff': 1.0902000000000134e-05}, {'time': 0.036229292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036239444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0151999999999384e-05, 'source_diff': 1.0151999999999384e-05}, {'time': 0.036239986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036246583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5969999999970774e-06, 'source_diff': 6.5969999999970774e-06}, {'time': 0.036247056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036253917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.860999999996897e-06, 'source_diff': 6.860999999996897e-06}, {'time': 0.036254389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036263931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.036264403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036268847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.036269319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036275722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.403000000002046e-06, 'source_diff': 6.403000000002046e-06}, {'time': 0.036276194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036283069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.875000000003406e-06, 'source_diff': 6.875000000003406e-06}, {'time': 0.036283542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036287819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.276999999996978e-06, 'source_diff': 4.276999999996978e-06}, {'time': 0.036288292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036297861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.569000000000938e-06, 'source_diff': 9.569000000000938e-06}, {'time': 0.036298333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036307264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930999999996747e-06, 'source_diff': 8.930999999996747e-06}, {'time': 0.036307736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036312917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.036313389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036322722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.036323194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036332958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.763999999995443e-06, 'source_diff': 9.763999999995443e-06}, {'time': 0.036333431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036341944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.513000000001658e-06, 'source_diff': 8.513000000001658e-06}, {'time': 0.036342417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036347069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.036347542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036356056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.036356528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03636525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.722000000002672e-06, 'source_diff': 8.722000000002672e-06}, {'time': 0.036365722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036376333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0610999999993709e-05, 'source_diff': 1.0610999999993709e-05}, {'time': 0.036376806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036384069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263000000000408e-06, 'source_diff': 7.263000000000408e-06}, {'time': 0.036384542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036391264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.036391736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036399097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.036399569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:54:25.706" endtime="20201112 09:54:25.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.695" endtime="20201112 09:54:25.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:25.775" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:25.721" endtime="20201112 09:54:25.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.784" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:25.782" endtime="20201112 09:54:25.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.794" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.720000000013602e-07, 9.986000000003492e-06, 4.7199999999442133e-07, 8.542000000000272e-06, 5.409999999997361e-07, 5.473000000005834e-06, 4.7199999999442133e-07, 5.375000000001906e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 1.0098000000000051e-05, 4.7199999999442133e-07, 1.0167000000005366e-05, 4.7199999999442133e-07, 5.166000000000892e-06, 4.7300000000083386e-07, 6.430000000001712e-06, 4.720000000013602e-07, 8.000000000001062e-06, 4.7299999999389497e-07, 7.236000000000742e-06, 4.720000000013602e-07, 6.431000000001186e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 5.166999999993427e-06, 4.720000000013602e-07, 6.333000000004196e-06, 4.7199999999442133e-07, 9.236000000002742e-06, 4.7300000000083386e-07, 9.651999999998884e-06, 4.7300000000083386e-07, 9.679999999998024e-06, 4.720000000013602e-07, 5.57000000000335e-06, 4.7199999999442133e-07, 6.3200000000041e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.720000000013602e-07, 6.430999999994247e-06, 4.720000000013602e-07, 8.417000000003616e-06, 4.7199999999442133e-07, 6.847000000004266e-06, 4.720000000013602e-07, 1.0055999999994403e-05, 4.720000000013602e-07, 5.069000000003376e-06, 4.7300000000083386e-07, 1.0902000000000134e-05, 4.7300000000083386e-07, 1.0151999999999384e-05, 5.419999999992098e-07, 6.5969999999970774e-06, 4.7300000000083386e-07, 6.860999999996897e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.720000000013602e-07, 4.443999999999282e-06, 4.720000000013602e-07, 6.403000000002046e-06, 4.7199999999442133e-07, 6.875000000003406e-06, 4.7300000000083386e-07, 4.276999999996978e-06, 4.7300000000083386e-07, 9.569000000000938e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 5.180999999999936e-06, 4.720000000013602e-07, 9.333000000000258e-06, 4.720000000013602e-07, 9.763999999995443e-06, 4.7300000000083386e-07, 8.513000000001658e-06, 4.7300000000083386e-07, 4.652000000000822e-06, 4.7299999999389497e-07, 8.514000000001132e-06, 4.720000000013602e-07, 8.722000000002672e-06, 4.720000000013602e-07, 1.0610999999993709e-05, 4.7300000000083386e-07, 7.263000000000408e-06, 4.7300000000083386e-07, 6.722000000000672e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07], 'time': [0.036009556, 0.036010028, 0.036020014, 0.036020486, 0.036029028, 0.036029569, 0.036035042, 0.036035514, 0.036040889, 0.036041361, 0.036048097, 0.036048569, 0.036055097, 0.036055569, 0.036065667, 0.036066139, 0.036076306, 0.036076778, 0.036081944, 0.036082417, 0.036088847, 0.036089319, 0.036097319, 0.036097792, 0.036105028, 0.0361055, 0.036111931, 0.036112403, 0.036117042, 0.036117514, 0.036122681, 0.036123153, 0.036129486, 0.036129958, 0.036139194, 0.036139667, 0.036149319, 0.036149792, 0.036159472, 0.036159944, 0.036165514, 0.036165986, 0.036172306, 0.036172778, 0.036178264, 0.036178736, 0.036185167, 0.036185639, 0.036194056, 0.036194528, 0.036201375, 0.036201847, 0.036211903, 0.036212375, 0.036217444, 0.036217917, 0.036228819, 0.036229292, 0.036239444, 0.036239986, 0.036246583, 0.036247056, 0.036253917, 0.036254389, 0.036263931, 0.036264403, 0.036268847, 0.036269319, 0.036275722, 0.036276194, 0.036283069, 0.036283542, 0.036287819, 0.036288292, 0.036297861, 0.036298333, 0.036307264, 0.036307736, 0.036312917, 0.036313389, 0.036322722, 0.036323194, 0.036332958, 0.036333431, 0.036341944, 0.036342417, 0.036347069, 0.036347542, 0.036356056, 0.036356528, 0.03636525, 0.036365722, 0.036376333, 0.036376806, 0.036384069, 0.036384542, 0.036391264, 0.036391736, 0.036399097, 0.036399569], 'diff': [0, 4.720000000013602e-07, 9.986000000003492e-06, 4.7199999999442133e-07, 8.542000000000272e-06, 5.409999999997361e-07, 5.473000000005834e-06, 4.7199999999442133e-07, 5.375000000001906e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 1.0098000000000051e-05, 4.7199999999442133e-07, 1.0167000000005366e-05, 4.7199999999442133e-07, 5.166000000000892e-06, 4.7300000000083386e-07, 6.430000000001712e-06, 4.720000000013602e-07, 8.000000000001062e-06, 4.7299999999389497e-07, 7.236000000000742e-06, 4.720000000013602e-07, 6.431000000001186e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 5.166999999993427e-06, 4.720000000013602e-07, 6.333000000004196e-06, 4.7199999999442133e-07, 9.236000000002742e-06, 4.7300000000083386e-07, 9.651999999998884e-06, 4.7300000000083386e-07, 9.679999999998024e-06, 4.720000000013602e-07, 5.57000000000335e-06, 4.7199999999442133e-07, 6.3200000000041e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.720000000013602e-07, 6.430999999994247e-06, 4.720000000013602e-07, 8.417000000003616e-06, 4.7199999999442133e-07, 6.847000000004266e-06, 4.720000000013602e-07, 1.0055999999994403e-05, 4.720000000013602e-07, 5.069000000003376e-06, 4.7300000000083386e-07, 1.0902000000000134e-05, 4.7300000000083386e-07, 1.0151999999999384e-05, 5.419999999992098e-07, 6.5969999999970774e-06, 4.7300000000083386e-07, 6.860999999996897e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.720000000013602e-07, 4.443999999999282e-06, 4.720000000013602e-07, 6.403000000002046e-06, 4.7199999999442133e-07, 6.875000000003406e-06, 4.7300000000083386e-07, 4.276999999996978e-06, 4.7300000000083386e-07, 9.569000000000938e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 5.180999999999936e-06, 4.720000000013602e-07, 9.333000000000258e-06, 4.720000000013602e-07, 9.763999999995443e-06, 4.7300000000083386e-07, 8.513000000001658e-06, 4.7300000000083386e-07, 4.652000000000822e-06, 4.7299999999389497e-07, 8.514000000001132e-06, 4.720000000013602e-07, 8.722000000002672e-06, 4.720000000013602e-07, 1.0610999999993709e-05, 4.7300000000083386e-07, 7.263000000000408e-06, 4.7300000000083386e-07, 6.722000000000672e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:54:25.787" endtime="20201112 09:54:25.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.777" endtime="20201112 09:54:25.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:25.808" level="INFO">${RESULT} = [{'time': 0.036010028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036020486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:25.799" endtime="20201112 09:54:25.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:25.839" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:25.810" endtime="20201112 09:54:25.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.849" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:25.847" endtime="20201112 09:54:25.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.855" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999442133e-07, 5.409999999997361e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:54:25.852" endtime="20201112 09:54:25.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.841" endtime="20201112 09:54:25.857"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.864" endtime="20201112 09:54:25.866"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:25.872" endtime="20201112 09:54:25.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.868" endtime="20201112 09:54:25.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.859" endtime="20201112 09:54:25.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.251" endtime="20201112 09:54:25.898"></status>
</kw>
<msg timestamp="20201112 09:54:25.898" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.919" endtime="20201112 09:54:25.930"></status>
</kw>
<msg timestamp="20201112 09:54:25.931" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.916" endtime="20201112 09:54:25.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.937" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.933" endtime="20201112 09:54:25.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.940" endtime="20201112 09:54:25.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.907" endtime="20201112 09:54:25.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.903" endtime="20201112 09:54:25.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.963" endtime="20201112 09:54:26.302"></status>
</kw>
<msg timestamp="20201112 09:54:26.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037436014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037436486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:25.960" endtime="20201112 09:54:26.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037436014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037436486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:26.312" endtime="20201112 09:54:26.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.331" endtime="20201112 09:54:26.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.952" endtime="20201112 09:54:26.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.948" endtime="20201112 09:54:26.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.347" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:26.345" endtime="20201112 09:54:26.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.359" level="INFO">VALUE: [{'time': 0.037436014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037436486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037445194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.708000000003102e-06, 'source_diff': 8.708000000003102e-06}, {'time': 0.037445667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0374545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.037454972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037464208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.235999999995803e-06, 'source_diff': 9.235999999995803e-06}, {'time': 0.037464681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037473722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.041000000001298e-06, 'source_diff': 9.041000000001298e-06}, {'time': 0.037474194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0374805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.037480972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037491917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0944999999998317e-05, 'source_diff': 1.0944999999998317e-05}, {'time': 0.037492458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037499833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000003906e-06, 'source_diff': 7.375000000003906e-06}, {'time': 0.037500306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.0375065, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.037506972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037516333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.037516806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037524361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.554999999999368e-06, 'source_diff': 7.554999999999368e-06}, {'time': 0.037524833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037532819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.037533292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037539403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.110999999996147e-06, 'source_diff': 6.110999999996147e-06}, {'time': 0.037539875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037550583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0707999999998163e-05, 'source_diff': 1.0707999999998163e-05}, {'time': 0.037551056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037561542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000003992e-05, 'source_diff': 1.0486000000003992e-05}, {'time': 0.037562014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037571778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.764000000002382e-06, 'source_diff': 9.764000000002382e-06}, {'time': 0.03757225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037578569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.318999999997688e-06, 'source_diff': 6.318999999997688e-06}, {'time': 0.037579042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037586292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.037586764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037591736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.037592208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037597264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999996341e-06, 'source_diff': 5.055999999996341e-06}, {'time': 0.037597736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037604694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.037605167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037615667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0499999999996623e-05, 'source_diff': 1.0499999999996623e-05}, {'time': 0.037616139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0376215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.037621972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037630569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.597000000006016e-06, 'source_diff': 8.597000000006016e-06}, {'time': 0.037631042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037637347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.304999999998118e-06, 'source_diff': 6.304999999998118e-06}, {'time': 0.037637819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037643931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.111999999995621e-06, 'source_diff': 6.111999999995621e-06}, {'time': 0.037644403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037652625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.222000000002172e-06, 'source_diff': 8.222000000002172e-06}, {'time': 0.037653097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037661694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.037662167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037667944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.776999999998478e-06, 'source_diff': 5.776999999998478e-06}, {'time': 0.037668417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037675778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.03767625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037683708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.037684181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037691069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8880000000035024e-06, 'source_diff': 6.8880000000035024e-06}, {'time': 0.037691611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037697611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.037698083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037703236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.037703708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037709917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.037710389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037719319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930000000004212e-06, 'source_diff': 8.930000000004212e-06}, {'time': 0.037719792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037728625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.037729097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037736972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.874999999997467e-06, 'source_diff': 7.874999999997467e-06}, {'time': 0.037737444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037744083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.638999999995787e-06, 'source_diff': 6.638999999995787e-06}, {'time': 0.037744556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037754833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0277000000002978e-05, 'source_diff': 1.0277000000002978e-05}, {'time': 0.037755306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037762778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.471999999994483e-06, 'source_diff': 7.471999999994483e-06}, {'time': 0.03776325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037770083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8330000000046964e-06, 'source_diff': 6.8330000000046964e-06}, {'time': 0.037770556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037778125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569000000005877e-06, 'source_diff': 7.569000000005877e-06}, {'time': 0.037778597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037784764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.037785306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037795986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0679999999999024e-05, 'source_diff': 1.0679999999999024e-05}, {'time': 0.037796458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037807153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0695000000005006e-05, 'source_diff': 1.0695000000005006e-05}, {'time': 0.037807625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037814181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.55600000000478e-06, 'source_diff': 6.55600000000478e-06}, {'time': 0.037814653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037823458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.037823931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037828389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.037828861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037834097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.037834569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:54:26.350" endtime="20201112 09:54:26.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.339" endtime="20201112 09:54:26.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:26.420" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:26.365" endtime="20201112 09:54:26.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.430" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:26.428" endtime="20201112 09:54:26.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.440" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.720000000013602e-07, 8.708000000003102e-06, 4.7300000000083386e-07, 8.832999999999758e-06, 4.720000000013602e-07, 9.235999999995803e-06, 4.7300000000083386e-07, 9.041000000001298e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 1.0944999999998317e-05, 5.409999999997361e-07, 7.375000000003906e-06, 4.7299999999389497e-07, 6.194000000001032e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 7.554999999999368e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.7300000000083386e-07, 6.110999999996147e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 1.0486000000003992e-05, 4.7199999999442133e-07, 9.764000000002382e-06, 4.720000000013602e-07, 6.318999999997688e-06, 4.7300000000083386e-07, 7.250000000000312e-06, 4.720000000013602e-07, 4.971999999998922e-06, 4.720000000013602e-07, 5.055999999996341e-06, 4.720000000013602e-07, 6.958000000001352e-06, 4.7300000000083386e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 5.361000000002336e-06, 4.7199999999442133e-07, 8.597000000006016e-06, 4.7300000000083386e-07, 6.304999999998118e-06, 4.720000000013602e-07, 6.111999999995621e-06, 4.720000000013602e-07, 8.222000000002172e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.7300000000083386e-07, 5.776999999998478e-06, 4.7300000000083386e-07, 7.360999999997397e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.7299999999389497e-07, 6.8880000000035024e-06, 5.419999999992098e-07, 5.999999999999062e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.720000000013602e-07, 6.2090000000000756e-06, 4.7199999999442133e-07, 8.930000000004212e-06, 4.7300000000083386e-07, 8.832999999999758e-06, 4.720000000013602e-07, 7.874999999997467e-06, 4.720000000013602e-07, 6.638999999995787e-06, 4.7300000000083386e-07, 1.0277000000002978e-05, 4.7300000000083386e-07, 7.471999999994483e-06, 4.720000000013602e-07, 6.8330000000046964e-06, 4.7299999999389497e-07, 7.569000000005877e-06, 4.7199999999442133e-07, 6.167000000001366e-06, 5.419999999992098e-07, 1.0679999999999024e-05, 4.720000000013602e-07, 1.0695000000005006e-05, 4.7199999999442133e-07, 6.55600000000478e-06, 4.7199999999442133e-07, 8.805000000000618e-06, 4.7300000000083386e-07, 4.457999999998852e-06, 4.720000000013602e-07, 5.235999999998742e-06, 4.720000000013602e-07], 'time': [0.037436014, 0.037436486, 0.037445194, 0.037445667, 0.0374545, 0.037454972, 0.037464208, 0.037464681, 0.037473722, 0.037474194, 0.0374805, 0.037480972, 0.037491917, 0.037492458, 0.037499833, 0.037500306, 0.0375065, 0.037506972, 0.037516333, 0.037516806, 0.037524361, 0.037524833, 0.037532819, 0.037533292, 0.037539403, 0.037539875, 0.037550583, 0.037551056, 0.037561542, 0.037562014, 0.037571778, 0.03757225, 0.037578569, 0.037579042, 0.037586292, 0.037586764, 0.037591736, 0.037592208, 0.037597264, 0.037597736, 0.037604694, 0.037605167, 0.037615667, 0.037616139, 0.0376215, 0.037621972, 0.037630569, 0.037631042, 0.037637347, 0.037637819, 0.037643931, 0.037644403, 0.037652625, 0.037653097, 0.037661694, 0.037662167, 0.037667944, 0.037668417, 0.037675778, 0.03767625, 0.037683708, 0.037684181, 0.037691069, 0.037691611, 0.037697611, 0.037698083, 0.037703236, 0.037703708, 0.037709917, 0.037710389, 0.037719319, 0.037719792, 0.037728625, 0.037729097, 0.037736972, 0.037737444, 0.037744083, 0.037744556, 0.037754833, 0.037755306, 0.037762778, 0.03776325, 0.037770083, 0.037770556, 0.037778125, 0.037778597, 0.037784764, 0.037785306, 0.037795986, 0.037796458, 0.037807153, 0.037807625, 0.037814181, 0.037814653, 0.037823458, 0.037823931, 0.037828389, 0.037828861, 0.037834097, 0.037834569], 'diff': [0, 4.720000000013602e-07, 8.708000000003102e-06, 4.7300000000083386e-07, 8.832999999999758e-06, 4.720000000013602e-07, 9.235999999995803e-06, 4.7300000000083386e-07, 9.041000000001298e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 1.0944999999998317e-05, 5.409999999997361e-07, 7.375000000003906e-06, 4.7299999999389497e-07, 6.194000000001032e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 7.554999999999368e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.7300000000083386e-07, 6.110999999996147e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 1.0486000000003992e-05, 4.7199999999442133e-07, 9.764000000002382e-06, 4.720000000013602e-07, 6.318999999997688e-06, 4.7300000000083386e-07, 7.250000000000312e-06, 4.720000000013602e-07, 4.971999999998922e-06, 4.720000000013602e-07, 5.055999999996341e-06, 4.720000000013602e-07, 6.958000000001352e-06, 4.7300000000083386e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 5.361000000002336e-06, 4.7199999999442133e-07, 8.597000000006016e-06, 4.7300000000083386e-07, 6.304999999998118e-06, 4.720000000013602e-07, 6.111999999995621e-06, 4.720000000013602e-07, 8.222000000002172e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.7300000000083386e-07, 5.776999999998478e-06, 4.7300000000083386e-07, 7.360999999997397e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.7299999999389497e-07, 6.8880000000035024e-06, 5.419999999992098e-07, 5.999999999999062e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.720000000013602e-07, 6.2090000000000756e-06, 4.7199999999442133e-07, 8.930000000004212e-06, 4.7300000000083386e-07, 8.832999999999758e-06, 4.720000000013602e-07, 7.874999999997467e-06, 4.720000000013602e-07, 6.638999999995787e-06, 4.7300000000083386e-07, 1.0277000000002978e-05, 4.7300000000083386e-07, 7.471999999994483e-06, 4.720000000013602e-07, 6.8330000000046964e-06, 4.7299999999389497e-07, 7.569000000005877e-06, 4.7199999999442133e-07, 6.167000000001366e-06, 5.419999999992098e-07, 1.0679999999999024e-05, 4.720000000013602e-07, 1.0695000000005006e-05, 4.7199999999442133e-07, 6.55600000000478e-06, 4.7199999999442133e-07, 8.805000000000618e-06, 4.7300000000083386e-07, 4.457999999998852e-06, 4.720000000013602e-07, 5.235999999998742e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:54:26.433" endtime="20201112 09:54:26.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.423" endtime="20201112 09:54:26.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:26.455" level="INFO">${RESULT} = [{'time': 0.037436486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037445667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:26.446" endtime="20201112 09:54:26.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:26.487" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:26.457" endtime="20201112 09:54:26.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.497" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:26.495" endtime="20201112 09:54:26.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.502" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:54:26.499" endtime="20201112 09:54:26.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.489" endtime="20201112 09:54:26.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.511" endtime="20201112 09:54:26.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:26.520" endtime="20201112 09:54:26.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.515" endtime="20201112 09:54:26.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.506" endtime="20201112 09:54:26.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.899" endtime="20201112 09:54:26.545"></status>
</kw>
<msg timestamp="20201112 09:54:26.546" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.565" endtime="20201112 09:54:26.576"></status>
</kw>
<msg timestamp="20201112 09:54:26.577" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:26.562" endtime="20201112 09:54:26.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.583" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:26.579" endtime="20201112 09:54:26.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.586" endtime="20201112 09:54:26.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.555" endtime="20201112 09:54:26.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.550" endtime="20201112 09:54:26.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.609" endtime="20201112 09:54:26.949"></status>
</kw>
<msg timestamp="20201112 09:54:26.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036040833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036041306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:26.606" endtime="20201112 09:54:26.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036040833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036041306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:26.959" endtime="20201112 09:54:26.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.978" endtime="20201112 09:54:26.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.599" endtime="20201112 09:54:26.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.594" endtime="20201112 09:54:26.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.994" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:26.992" endtime="20201112 09:54:26.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.006" level="INFO">VALUE: [{'time': 0.036040833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036041306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036046431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.124999999994717e-06, 'source_diff': 5.124999999994717e-06}, {'time': 0.036046972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036054625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.653000000003296e-06, 'source_diff': 7.653000000003296e-06}, {'time': 0.036055097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036060361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.036060833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036068653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.819999999998661e-06, 'source_diff': 7.819999999998661e-06}, {'time': 0.036069194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036079569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.036080042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036086681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.639000000002726e-06, 'source_diff': 6.639000000002726e-06}, {'time': 0.036087153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036092111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.958000000006291e-06, 'source_diff': 4.958000000006291e-06}, {'time': 0.036092583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036097847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.26400000000482e-06, 'source_diff': 5.26400000000482e-06}, {'time': 0.036098319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036105264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.945000000001256e-06, 'source_diff': 6.945000000001256e-06}, {'time': 0.036105736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036113833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.036114306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036125139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0833000000001758e-05, 'source_diff': 1.0833000000001758e-05}, {'time': 0.036125611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036133472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.036133944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036138889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.036139361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036148069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.707999999996163e-06, 'source_diff': 8.707999999996163e-06}, {'time': 0.036148542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036157903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.036158375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036165833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.036166306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036176708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0401999999999634e-05, 'source_diff': 1.0401999999999634e-05}, {'time': 0.036177181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036186097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.915999999997704e-06, 'source_diff': 8.915999999997704e-06}, {'time': 0.036186569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036194875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.036195347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036201556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.036202028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036209625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.597000000005016e-06, 'source_diff': 7.597000000005016e-06}, {'time': 0.036210097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036216611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5140000000060705e-06, 'source_diff': 6.5140000000060705e-06}, {'time': 0.036217083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036225167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.08400000000542e-06, 'source_diff': 8.08400000000542e-06}, {'time': 0.036225639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036233014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000003906e-06, 'source_diff': 7.375000000003906e-06}, {'time': 0.036233486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036238028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999996271e-06, 'source_diff': 4.541999999996271e-06}, {'time': 0.0362385, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036246597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.036247069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036252431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.36200000000181e-06, 'source_diff': 5.36200000000181e-06}, {'time': 0.036252903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036258403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.036258875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036266125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.036266597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036272069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.036272542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036281056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.036281528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036288778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.03628925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03629525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.036295722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036306236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513999999996193e-05, 'source_diff': 1.0513999999996193e-05}, {'time': 0.036306708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03631625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.036316722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036324111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.388999999996537e-06, 'source_diff': 7.388999999996537e-06}, {'time': 0.036324583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036334861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0278000000002452e-05, 'source_diff': 1.0278000000002452e-05}, {'time': 0.036335333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036343319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.036343792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036353028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.236000000002742e-06, 'source_diff': 9.236000000002742e-06}, {'time': 0.0363535, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036363889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0389000000006476e-05, 'source_diff': 1.0389000000006476e-05}, {'time': 0.036364361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036371139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7779999999989515e-06, 'source_diff': 6.7779999999989515e-06}, {'time': 0.036371681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.036381903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0221999999997233e-05, 'source_diff': 1.0221999999997233e-05}, {'time': 0.036382444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036387597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.036388069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036397, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930999999996747e-06, 'source_diff': 8.930999999996747e-06}, {'time': 0.036397472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036406917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.444999999996817e-06, 'source_diff': 9.444999999996817e-06}, {'time': 0.036407389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036412556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.036413028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036422056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.036422528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036432833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0304999999995179e-05, 'source_diff': 1.0304999999995179e-05}, {'time': 0.036433306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036440139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8330000000046964e-06, 'source_diff': 6.8330000000046964e-06}, {'time': 0.036440611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}]</msg>
<status status="PASS" starttime="20201112 09:54:26.996" endtime="20201112 09:54:27.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.986" endtime="20201112 09:54:27.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:27.067" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:27.012" endtime="20201112 09:54:27.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.077" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:27.075" endtime="20201112 09:54:27.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.086" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.7300000000083386e-07, 5.124999999994717e-06, 5.409999999997361e-07, 7.653000000003296e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 7.819999999998661e-06, 5.409999999997361e-07, 1.0374999999999968e-05, 4.7300000000083386e-07, 6.639000000002726e-06, 4.7199999999442133e-07, 4.958000000006291e-06, 4.7199999999442133e-07, 5.26400000000482e-06, 4.7199999999442133e-07, 6.945000000001256e-06, 4.720000000013602e-07, 8.096999999998578e-06, 4.7300000000083386e-07, 1.0833000000001758e-05, 4.720000000013602e-07, 7.860999999997897e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 8.707999999996163e-06, 4.7300000000083386e-07, 9.360999999999398e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.7300000000083386e-07, 1.0401999999999634e-05, 4.7300000000083386e-07, 8.915999999997704e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 6.2090000000000756e-06, 4.7199999999442133e-07, 7.597000000005016e-06, 4.7199999999442133e-07, 6.5140000000060705e-06, 4.7199999999442133e-07, 8.08400000000542e-06, 4.7199999999442133e-07, 7.375000000003906e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 8.096999999998578e-06, 4.720000000013602e-07, 5.36200000000181e-06, 4.720000000013602e-07, 5.499999999998562e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7199999999442133e-07, 5.471999999999422e-06, 4.7300000000083386e-07, 8.514000000001132e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 1.0513999999996193e-05, 4.720000000013602e-07, 9.542000000001272e-06, 4.720000000013602e-07, 7.388999999996537e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.7199999999442133e-07, 7.986000000001492e-06, 4.7300000000083386e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 1.0389000000006476e-05, 4.7199999999442133e-07, 6.7779999999989515e-06, 5.420000000061487e-07, 1.0221999999997233e-05, 5.409999999997361e-07, 5.153000000000796e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 1.0304999999995179e-05, 4.7300000000083386e-07, 6.8330000000046964e-06, 4.7199999999442133e-07], 'time': [0.036040833, 0.036041306, 0.036046431, 0.036046972, 0.036054625, 0.036055097, 0.036060361, 0.036060833, 0.036068653, 0.036069194, 0.036079569, 0.036080042, 0.036086681, 0.036087153, 0.036092111, 0.036092583, 0.036097847, 0.036098319, 0.036105264, 0.036105736, 0.036113833, 0.036114306, 0.036125139, 0.036125611, 0.036133472, 0.036133944, 0.036138889, 0.036139361, 0.036148069, 0.036148542, 0.036157903, 0.036158375, 0.036165833, 0.036166306, 0.036176708, 0.036177181, 0.036186097, 0.036186569, 0.036194875, 0.036195347, 0.036201556, 0.036202028, 0.036209625, 0.036210097, 0.036216611, 0.036217083, 0.036225167, 0.036225639, 0.036233014, 0.036233486, 0.036238028, 0.0362385, 0.036246597, 0.036247069, 0.036252431, 0.036252903, 0.036258403, 0.036258875, 0.036266125, 0.036266597, 0.036272069, 0.036272542, 0.036281056, 0.036281528, 0.036288778, 0.03628925, 0.03629525, 0.036295722, 0.036306236, 0.036306708, 0.03631625, 0.036316722, 0.036324111, 0.036324583, 0.036334861, 0.036335333, 0.036343319, 0.036343792, 0.036353028, 0.0363535, 0.036363889, 0.036364361, 0.036371139, 0.036371681, 0.036381903, 0.036382444, 0.036387597, 0.036388069, 0.036397, 0.036397472, 0.036406917, 0.036407389, 0.036412556, 0.036413028, 0.036422056, 0.036422528, 0.036432833, 0.036433306, 0.036440139, 0.036440611], 'diff': [0, 4.7300000000083386e-07, 5.124999999994717e-06, 5.409999999997361e-07, 7.653000000003296e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 7.819999999998661e-06, 5.409999999997361e-07, 1.0374999999999968e-05, 4.7300000000083386e-07, 6.639000000002726e-06, 4.7199999999442133e-07, 4.958000000006291e-06, 4.7199999999442133e-07, 5.26400000000482e-06, 4.7199999999442133e-07, 6.945000000001256e-06, 4.720000000013602e-07, 8.096999999998578e-06, 4.7300000000083386e-07, 1.0833000000001758e-05, 4.720000000013602e-07, 7.860999999997897e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 8.707999999996163e-06, 4.7300000000083386e-07, 9.360999999999398e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.7300000000083386e-07, 1.0401999999999634e-05, 4.7300000000083386e-07, 8.915999999997704e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 6.2090000000000756e-06, 4.7199999999442133e-07, 7.597000000005016e-06, 4.7199999999442133e-07, 6.5140000000060705e-06, 4.7199999999442133e-07, 8.08400000000542e-06, 4.7199999999442133e-07, 7.375000000003906e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 8.096999999998578e-06, 4.720000000013602e-07, 5.36200000000181e-06, 4.720000000013602e-07, 5.499999999998562e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7199999999442133e-07, 5.471999999999422e-06, 4.7300000000083386e-07, 8.514000000001132e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 1.0513999999996193e-05, 4.720000000013602e-07, 9.542000000001272e-06, 4.720000000013602e-07, 7.388999999996537e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.7199999999442133e-07, 7.986000000001492e-06, 4.7300000000083386e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 1.0389000000006476e-05, 4.7199999999442133e-07, 6.7779999999989515e-06, 5.420000000061487e-07, 1.0221999999997233e-05, 5.409999999997361e-07, 5.153000000000796e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 1.0304999999995179e-05, 4.7300000000083386e-07, 6.8330000000046964e-06, 4.7199999999442133e-07]}</msg>
<status status="PASS" starttime="20201112 09:54:27.079" endtime="20201112 09:54:27.088"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.069" endtime="20201112 09:54:27.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:27.100" level="INFO">${RESULT} = [{'time': 0.036041306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036046972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:27.091" endtime="20201112 09:54:27.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:27.132" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:27.103" endtime="20201112 09:54:27.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.142" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:27.140" endtime="20201112 09:54:27.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.147" level="INFO">VALUE: [4.7300000000083386e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 5.420000000061487e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201112 09:54:27.144" endtime="20201112 09:54:27.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.134" endtime="20201112 09:54:27.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.156" endtime="20201112 09:54:27.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:27.164" endtime="20201112 09:54:27.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.160" endtime="20201112 09:54:27.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.152" endtime="20201112 09:54:27.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.547" endtime="20201112 09:54:27.190"></status>
</kw>
<msg timestamp="20201112 09:54:27.191" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.210" endtime="20201112 09:54:27.221"></status>
</kw>
<msg timestamp="20201112 09:54:27.222" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.207" endtime="20201112 09:54:27.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.228" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.224" endtime="20201112 09:54:27.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.231" endtime="20201112 09:54:27.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.200" endtime="20201112 09:54:27.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.195" endtime="20201112 09:54:27.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.256" endtime="20201112 09:54:27.598"></status>
</kw>
<msg timestamp="20201112 09:54:27.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036017667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036018139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:27.253" endtime="20201112 09:54:27.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036017667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036018139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:27.607" endtime="20201112 09:54:27.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.626" endtime="20201112 09:54:27.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.244" endtime="20201112 09:54:27.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.239" endtime="20201112 09:54:27.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.643" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:27.641" endtime="20201112 09:54:27.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.654" level="INFO">VALUE: [{'time': 0.036017667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036018139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036027486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.036027958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036034903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.945000000001256e-06, 'source_diff': 6.945000000001256e-06}, {'time': 0.036035375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036043583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.207999999995663e-06, 'source_diff': 8.207999999995663e-06}, {'time': 0.036044056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036050056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.036050528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036061236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0708000000005102e-05, 'source_diff': 1.0708000000005102e-05}, {'time': 0.036061708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036070417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.709000000002576e-06, 'source_diff': 8.709000000002576e-06}, {'time': 0.036070889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036080042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.036080514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036085889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.036086361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036092458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000003516e-06, 'source_diff': 6.097000000003516e-06}, {'time': 0.036092931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036102375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.443999999997343e-06, 'source_diff': 9.443999999997343e-06}, {'time': 0.036102847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036108972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.125000000002656e-06, 'source_diff': 6.125000000002656e-06}, {'time': 0.036109444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036113986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.54200000000321e-06, 'source_diff': 4.54200000000321e-06}, {'time': 0.036114458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036124931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0472999999996957e-05, 'source_diff': 1.0472999999996957e-05}, {'time': 0.036125403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036131208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.804999999997618e-06, 'source_diff': 5.804999999997618e-06}, {'time': 0.036131681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036142597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0915999999999704e-05, 'source_diff': 1.0915999999999704e-05}, {'time': 0.036143069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036154014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0944999999998317e-05, 'source_diff': 1.0944999999998317e-05}, {'time': 0.036154556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036163389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.036163861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036171097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.036171569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036182375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.036182847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036192944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0097000000000578e-05, 'source_diff': 1.0097000000000578e-05}, {'time': 0.036193417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036200125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.036200597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036205972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.036206444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036212583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.139000000002226e-06, 'source_diff': 6.139000000002226e-06}, {'time': 0.036213056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036217347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2909999999965476e-06, 'source_diff': 4.2909999999965476e-06}, {'time': 0.036217819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036224653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.83400000000417e-06, 'source_diff': 6.83400000000417e-06}, {'time': 0.036225125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036229556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4310000000061245e-06, 'source_diff': 4.4310000000061245e-06}, {'time': 0.036230028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036238556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.036239028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036247208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.180000000003462e-06, 'source_diff': 8.180000000003462e-06}, {'time': 0.036247681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036256389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.708000000003102e-06, 'source_diff': 8.708000000003102e-06}, {'time': 0.036256861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036267153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0292000000002022e-05, 'source_diff': 1.0292000000002022e-05}, {'time': 0.036267625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036275292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.036275764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036282083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.318999999997688e-06, 'source_diff': 6.318999999997688e-06}, {'time': 0.036282556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036290861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.036291333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036301528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0194999999997567e-05, 'source_diff': 1.0194999999997567e-05}, {'time': 0.036302, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036308611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.610999999996647e-06, 'source_diff': 6.610999999996647e-06}, {'time': 0.036309083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036318236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.036318708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036327014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.036327486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036337014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.036337486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036344583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0969999999975775e-06, 'source_diff': 7.0969999999975775e-06}, {'time': 0.036345125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036353528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.403000000004046e-06, 'source_diff': 8.403000000004046e-06}, {'time': 0.036354, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036363764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.764000000002382e-06, 'source_diff': 9.764000000002382e-06}, {'time': 0.036364236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036375069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0833000000001758e-05, 'source_diff': 1.0833000000001758e-05}, {'time': 0.036375542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036382458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.916000000002642e-06, 'source_diff': 6.916000000002642e-06}, {'time': 0.036382931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036389764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.036390236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036401042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.036401514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036411167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.036411639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036417639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.036418111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036425472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.036425944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036436014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0070000000000912e-05, 'source_diff': 1.0070000000000912e-05}, {'time': 0.036436486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}]</msg>
<status status="PASS" starttime="20201112 09:54:27.645" endtime="20201112 09:54:27.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.635" endtime="20201112 09:54:27.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:27.715" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:27.660" endtime="20201112 09:54:27.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.724" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:27.722" endtime="20201112 09:54:27.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.733" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.7199999999442133e-07, 9.346999999999828e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.720000000013602e-07, 8.207999999995663e-06, 4.7300000000083386e-07, 5.999999999999062e-06, 4.720000000013602e-07, 1.0708000000005102e-05, 4.7199999999442133e-07, 8.709000000002576e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.7199999999442133e-07, 6.097000000003516e-06, 4.7300000000083386e-07, 9.443999999997343e-06, 4.720000000013602e-07, 6.125000000002656e-06, 4.7199999999442133e-07, 4.54200000000321e-06, 4.720000000013602e-07, 1.0472999999996957e-05, 4.720000000013602e-07, 5.804999999997618e-06, 4.7300000000083386e-07, 1.0915999999999704e-05, 4.720000000013602e-07, 1.0944999999998317e-05, 5.419999999992098e-07, 8.832999999999758e-06, 4.720000000013602e-07, 7.236000000000742e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.7199999999442133e-07, 1.0097000000000578e-05, 4.7300000000083386e-07, 6.708000000001102e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.7199999999442133e-07, 6.139000000002226e-06, 4.7300000000083386e-07, 4.2909999999965476e-06, 4.720000000013602e-07, 6.83400000000417e-06, 4.7199999999442133e-07, 4.4310000000061245e-06, 4.7199999999442133e-07, 8.528000000000702e-06, 4.720000000013602e-07, 8.180000000003462e-06, 4.7299999999389497e-07, 8.708000000003102e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.7199999999442133e-07, 7.667000000002866e-06, 4.720000000013602e-07, 6.318999999997688e-06, 4.7300000000083386e-07, 8.305000000000118e-06, 4.720000000013602e-07, 1.0194999999997567e-05, 4.720000000013602e-07, 6.610999999996647e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 9.528000000001702e-06, 4.720000000013602e-07, 7.0969999999975775e-06, 5.419999999992098e-07, 8.403000000004046e-06, 4.7199999999442133e-07, 9.764000000002382e-06, 4.720000000013602e-07, 1.0833000000001758e-05, 4.7299999999389497e-07, 6.916000000002642e-06, 4.7300000000083386e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 1.0070000000000912e-05, 4.7199999999442133e-07], 'time': [0.036017667, 0.036018139, 0.036027486, 0.036027958, 0.036034903, 0.036035375, 0.036043583, 0.036044056, 0.036050056, 0.036050528, 0.036061236, 0.036061708, 0.036070417, 0.036070889, 0.036080042, 0.036080514, 0.036085889, 0.036086361, 0.036092458, 0.036092931, 0.036102375, 0.036102847, 0.036108972, 0.036109444, 0.036113986, 0.036114458, 0.036124931, 0.036125403, 0.036131208, 0.036131681, 0.036142597, 0.036143069, 0.036154014, 0.036154556, 0.036163389, 0.036163861, 0.036171097, 0.036171569, 0.036182375, 0.036182847, 0.036192944, 0.036193417, 0.036200125, 0.036200597, 0.036205972, 0.036206444, 0.036212583, 0.036213056, 0.036217347, 0.036217819, 0.036224653, 0.036225125, 0.036229556, 0.036230028, 0.036238556, 0.036239028, 0.036247208, 0.036247681, 0.036256389, 0.036256861, 0.036267153, 0.036267625, 0.036275292, 0.036275764, 0.036282083, 0.036282556, 0.036290861, 0.036291333, 0.036301528, 0.036302, 0.036308611, 0.036309083, 0.036318236, 0.036318708, 0.036327014, 0.036327486, 0.036337014, 0.036337486, 0.036344583, 0.036345125, 0.036353528, 0.036354, 0.036363764, 0.036364236, 0.036375069, 0.036375542, 0.036382458, 0.036382931, 0.036389764, 0.036390236, 0.036401042, 0.036401514, 0.036411167, 0.036411639, 0.036417639, 0.036418111, 0.036425472, 0.036425944, 0.036436014, 0.036436486], 'diff': [0, 4.7199999999442133e-07, 9.346999999999828e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.720000000013602e-07, 8.207999999995663e-06, 4.7300000000083386e-07, 5.999999999999062e-06, 4.720000000013602e-07, 1.0708000000005102e-05, 4.7199999999442133e-07, 8.709000000002576e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.7199999999442133e-07, 6.097000000003516e-06, 4.7300000000083386e-07, 9.443999999997343e-06, 4.720000000013602e-07, 6.125000000002656e-06, 4.7199999999442133e-07, 4.54200000000321e-06, 4.720000000013602e-07, 1.0472999999996957e-05, 4.720000000013602e-07, 5.804999999997618e-06, 4.7300000000083386e-07, 1.0915999999999704e-05, 4.720000000013602e-07, 1.0944999999998317e-05, 5.419999999992098e-07, 8.832999999999758e-06, 4.720000000013602e-07, 7.236000000000742e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.7199999999442133e-07, 1.0097000000000578e-05, 4.7300000000083386e-07, 6.708000000001102e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.7199999999442133e-07, 6.139000000002226e-06, 4.7300000000083386e-07, 4.2909999999965476e-06, 4.720000000013602e-07, 6.83400000000417e-06, 4.7199999999442133e-07, 4.4310000000061245e-06, 4.7199999999442133e-07, 8.528000000000702e-06, 4.720000000013602e-07, 8.180000000003462e-06, 4.7299999999389497e-07, 8.708000000003102e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.7199999999442133e-07, 7.667000000002866e-06, 4.720000000013602e-07, 6.318999999997688e-06, 4.7300000000083386e-07, 8.305000000000118e-06, 4.720000000013602e-07, 1.0194999999997567e-05, 4.720000000013602e-07, 6.610999999996647e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 9.528000000001702e-06, 4.720000000013602e-07, 7.0969999999975775e-06, 5.419999999992098e-07, 8.403000000004046e-06, 4.7199999999442133e-07, 9.764000000002382e-06, 4.720000000013602e-07, 1.0833000000001758e-05, 4.7299999999389497e-07, 6.916000000002642e-06, 4.7300000000083386e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 1.0070000000000912e-05, 4.7199999999442133e-07]}</msg>
<status status="PASS" starttime="20201112 09:54:27.726" endtime="20201112 09:54:27.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.716" endtime="20201112 09:54:27.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:27.748" level="INFO">${RESULT} = [{'time': 0.036018139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036027958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:27.739" endtime="20201112 09:54:27.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:27.778" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:27.750" endtime="20201112 09:54:27.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.789" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:27.786" endtime="20201112 09:54:27.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.794" level="INFO">VALUE: [4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201112 09:54:27.791" endtime="20201112 09:54:27.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.780" endtime="20201112 09:54:27.797"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.803" endtime="20201112 09:54:27.806"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:27.813" endtime="20201112 09:54:27.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.807" endtime="20201112 09:54:27.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.798" endtime="20201112 09:54:27.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.192" endtime="20201112 09:54:27.838"></status>
</kw>
<msg timestamp="20201112 09:54:27.839" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.859" endtime="20201112 09:54:27.869"></status>
</kw>
<msg timestamp="20201112 09:54:27.871" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.855" endtime="20201112 09:54:27.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.877" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.873" endtime="20201112 09:54:27.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.879" endtime="20201112 09:54:27.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.848" endtime="20201112 09:54:27.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.843" endtime="20201112 09:54:27.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.903" endtime="20201112 09:54:28.252"></status>
</kw>
<msg timestamp="20201112 09:54:28.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0361285, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036128972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:27.900" endtime="20201112 09:54:28.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0361285, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036128972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:28.262" endtime="20201112 09:54:28.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.281" endtime="20201112 09:54:28.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.892" endtime="20201112 09:54:28.286"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.888" endtime="20201112 09:54:28.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.298" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:28.295" endtime="20201112 09:54:28.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.309" level="INFO">VALUE: [{'time': 0.0361285, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036128972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036135069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.096999999996577e-06, 'source_diff': 6.096999999996577e-06}, {'time': 0.036135542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036143944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.401999999997634e-06, 'source_diff': 8.401999999997634e-06}, {'time': 0.036144417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036151333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.916000000002642e-06, 'source_diff': 6.916000000002642e-06}, {'time': 0.036151806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036156875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0689999999964375e-06, 'source_diff': 5.0689999999964375e-06}, {'time': 0.036157347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036162722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.036163194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036169819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999996217e-06, 'source_diff': 6.624999999996217e-06}, {'time': 0.036170292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036178083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791000000000048e-06, 'source_diff': 7.791000000000048e-06}, {'time': 0.036178556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036189347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.079099999999611e-05, 'source_diff': 1.079099999999611e-05}, {'time': 0.036189819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036195458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.036196, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036206611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.036207083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036215375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.036215847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036224028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.180999999995997e-06, 'source_diff': 8.180999999995997e-06}, {'time': 0.0362245, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036232444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.944000000002782e-06, 'source_diff': 7.944000000002782e-06}, {'time': 0.036232986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036241153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166999999996427e-06, 'source_diff': 8.166999999996427e-06}, {'time': 0.036241625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036248764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.139000000003226e-06, 'source_diff': 7.139000000003226e-06}, {'time': 0.036249236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036257014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.036257486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036267583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0097000000000578e-05, 'source_diff': 1.0097000000000578e-05}, {'time': 0.036268056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036277069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.013000000002158e-06, 'source_diff': 9.013000000002158e-06}, {'time': 0.036277542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036285847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.036286319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036296708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.036297181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036304236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.054999999998868e-06, 'source_diff': 7.054999999998868e-06}, {'time': 0.036304708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036309667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.036310139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036321042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.036321514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036326486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.036326958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036337014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0056000000001342e-05, 'source_diff': 1.0056000000001342e-05}, {'time': 0.036337486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036345111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.624999999997217e-06, 'source_diff': 7.624999999997217e-06}, {'time': 0.036345653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036350528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.036351069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036356028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.0363565, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036366264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.764000000002382e-06, 'source_diff': 9.764000000002382e-06}, {'time': 0.036366736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036373264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.52800000000564e-06, 'source_diff': 6.52800000000564e-06}, {'time': 0.036373736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036382542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.036383014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036393194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.036393667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036404264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.036404736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036414917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.036415389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036419833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.036420306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036426819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.512999999999658e-06, 'source_diff': 6.512999999999658e-06}, {'time': 0.036427292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036435722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.429999999996773e-06, 'source_diff': 8.429999999996773e-06}, {'time': 0.036436194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036442931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7369999999997154e-06, 'source_diff': 6.7369999999997154e-06}, {'time': 0.036443403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036451486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.036451958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036461708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.750000000002812e-06, 'source_diff': 9.750000000002812e-06}, {'time': 0.03646225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036472375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.036472847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036483444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0596999999994139e-05, 'source_diff': 1.0596999999994139e-05}, {'time': 0.036483917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036489806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.036490278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036496083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.804999999997618e-06, 'source_diff': 5.804999999997618e-06}, {'time': 0.036496556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036504861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.036505333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036513833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.036514306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036518861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5549999999963675e-06, 'source_diff': 4.5549999999963675e-06}, {'time': 0.036519333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036527014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680999999995497e-06, 'source_diff': 7.680999999995497e-06}, {'time': 0.036527486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036536806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}, {'time': 0.036537278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:54:28.300" endtime="20201112 09:54:28.312"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.289" endtime="20201112 09:54:28.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:28.373" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:28.315" endtime="20201112 09:54:28.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.383" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:28.380" endtime="20201112 09:54:28.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.392" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.720000000013602e-07, 6.096999999996577e-06, 4.7300000000083386e-07, 8.401999999997634e-06, 4.7300000000083386e-07, 6.916000000002642e-06, 4.7300000000083386e-07, 5.0689999999964375e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.720000000013602e-07, 6.624999999996217e-06, 4.7300000000083386e-07, 7.791000000000048e-06, 4.7300000000083386e-07, 1.079099999999611e-05, 4.720000000013602e-07, 5.639000000001726e-06, 5.419999999992098e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 8.180999999995997e-06, 4.720000000013602e-07, 7.944000000002782e-06, 5.419999999992098e-07, 8.166999999996427e-06, 4.720000000013602e-07, 7.139000000003226e-06, 4.7199999999442133e-07, 7.777999999999952e-06, 4.720000000013602e-07, 1.0097000000000578e-05, 4.7300000000083386e-07, 9.013000000002158e-06, 4.7300000000083386e-07, 8.305000000000118e-06, 4.7199999999442133e-07, 1.0388999999999537e-05, 4.7300000000083386e-07, 7.054999999998868e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 4.971999999998922e-06, 4.720000000013602e-07, 1.0056000000001342e-05, 4.720000000013602e-07, 7.624999999997217e-06, 5.419999999992098e-07, 4.875000000001406e-06, 5.409999999997361e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.7199999999442133e-07, 6.52800000000564e-06, 4.7199999999442133e-07, 8.806000000000092e-06, 4.720000000013602e-07, 1.0179999999998524e-05, 4.7300000000083386e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 4.443999999999282e-06, 4.7300000000083386e-07, 6.512999999999658e-06, 4.7300000000083386e-07, 8.429999999996773e-06, 4.720000000013602e-07, 6.7369999999997154e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.720000000013602e-07, 9.750000000002812e-06, 5.419999999992098e-07, 1.0124999999999718e-05, 4.720000000013602e-07, 1.0596999999994139e-05, 4.7300000000083386e-07, 5.889000000001976e-06, 4.720000000013602e-07, 5.804999999997618e-06, 4.7300000000083386e-07, 8.305000000000118e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.7300000000083386e-07, 4.5549999999963675e-06, 4.720000000013602e-07, 7.680999999995497e-06, 4.720000000013602e-07, 9.320000000000161e-06, 4.720000000013602e-07], 'time': [0.0361285, 0.036128972, 0.036135069, 0.036135542, 0.036143944, 0.036144417, 0.036151333, 0.036151806, 0.036156875, 0.036157347, 0.036162722, 0.036163194, 0.036169819, 0.036170292, 0.036178083, 0.036178556, 0.036189347, 0.036189819, 0.036195458, 0.036196, 0.036206611, 0.036207083, 0.036215375, 0.036215847, 0.036224028, 0.0362245, 0.036232444, 0.036232986, 0.036241153, 0.036241625, 0.036248764, 0.036249236, 0.036257014, 0.036257486, 0.036267583, 0.036268056, 0.036277069, 0.036277542, 0.036285847, 0.036286319, 0.036296708, 0.036297181, 0.036304236, 0.036304708, 0.036309667, 0.036310139, 0.036321042, 0.036321514, 0.036326486, 0.036326958, 0.036337014, 0.036337486, 0.036345111, 0.036345653, 0.036350528, 0.036351069, 0.036356028, 0.0363565, 0.036366264, 0.036366736, 0.036373264, 0.036373736, 0.036382542, 0.036383014, 0.036393194, 0.036393667, 0.036404264, 0.036404736, 0.036414917, 0.036415389, 0.036419833, 0.036420306, 0.036426819, 0.036427292, 0.036435722, 0.036436194, 0.036442931, 0.036443403, 0.036451486, 0.036451958, 0.036461708, 0.03646225, 0.036472375, 0.036472847, 0.036483444, 0.036483917, 0.036489806, 0.036490278, 0.036496083, 0.036496556, 0.036504861, 0.036505333, 0.036513833, 0.036514306, 0.036518861, 0.036519333, 0.036527014, 0.036527486, 0.036536806, 0.036537278], 'diff': [0, 4.720000000013602e-07, 6.096999999996577e-06, 4.7300000000083386e-07, 8.401999999997634e-06, 4.7300000000083386e-07, 6.916000000002642e-06, 4.7300000000083386e-07, 5.0689999999964375e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.720000000013602e-07, 6.624999999996217e-06, 4.7300000000083386e-07, 7.791000000000048e-06, 4.7300000000083386e-07, 1.079099999999611e-05, 4.720000000013602e-07, 5.639000000001726e-06, 5.419999999992098e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 8.180999999995997e-06, 4.720000000013602e-07, 7.944000000002782e-06, 5.419999999992098e-07, 8.166999999996427e-06, 4.720000000013602e-07, 7.139000000003226e-06, 4.7199999999442133e-07, 7.777999999999952e-06, 4.720000000013602e-07, 1.0097000000000578e-05, 4.7300000000083386e-07, 9.013000000002158e-06, 4.7300000000083386e-07, 8.305000000000118e-06, 4.7199999999442133e-07, 1.0388999999999537e-05, 4.7300000000083386e-07, 7.054999999998868e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 4.971999999998922e-06, 4.720000000013602e-07, 1.0056000000001342e-05, 4.720000000013602e-07, 7.624999999997217e-06, 5.419999999992098e-07, 4.875000000001406e-06, 5.409999999997361e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.7199999999442133e-07, 6.52800000000564e-06, 4.7199999999442133e-07, 8.806000000000092e-06, 4.720000000013602e-07, 1.0179999999998524e-05, 4.7300000000083386e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 4.443999999999282e-06, 4.7300000000083386e-07, 6.512999999999658e-06, 4.7300000000083386e-07, 8.429999999996773e-06, 4.720000000013602e-07, 6.7369999999997154e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.720000000013602e-07, 9.750000000002812e-06, 5.419999999992098e-07, 1.0124999999999718e-05, 4.720000000013602e-07, 1.0596999999994139e-05, 4.7300000000083386e-07, 5.889000000001976e-06, 4.720000000013602e-07, 5.804999999997618e-06, 4.7300000000083386e-07, 8.305000000000118e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.7300000000083386e-07, 4.5549999999963675e-06, 4.720000000013602e-07, 7.680999999995497e-06, 4.720000000013602e-07, 9.320000000000161e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:54:28.385" endtime="20201112 09:54:28.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.375" endtime="20201112 09:54:28.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:28.406" level="INFO">${RESULT} = [{'time': 0.036128972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036135542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:28.397" endtime="20201112 09:54:28.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:28.438" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:28.409" endtime="20201112 09:54:28.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.448" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:28.446" endtime="20201112 09:54:28.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.454" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:54:28.451" endtime="20201112 09:54:28.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.440" endtime="20201112 09:54:28.456"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.463" endtime="20201112 09:54:28.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:28.471" endtime="20201112 09:54:28.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.467" endtime="20201112 09:54:28.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.458" endtime="20201112 09:54:28.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.840" endtime="20201112 09:54:28.498"></status>
</kw>
<msg timestamp="20201112 09:54:28.498" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.519" endtime="20201112 09:54:28.532"></status>
</kw>
<msg timestamp="20201112 09:54:28.533" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:28.516" endtime="20201112 09:54:28.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.540" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:28.535" endtime="20201112 09:54:28.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.542" endtime="20201112 09:54:28.546"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.509" endtime="20201112 09:54:28.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.503" endtime="20201112 09:54:28.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.566" endtime="20201112 09:54:28.920"></status>
</kw>
<msg timestamp="20201112 09:54:28.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038551722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038552194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:28.563" endtime="20201112 09:54:28.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038551722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038552194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:28.930" endtime="20201112 09:54:28.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.949" endtime="20201112 09:54:28.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.556" endtime="20201112 09:54:28.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.550" endtime="20201112 09:54:28.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.966" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:28.963" endtime="20201112 09:54:28.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.978" level="INFO">VALUE: [{'time': 0.038551722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038552194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038556931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.737000000004654e-06, 'source_diff': 4.737000000004654e-06}, {'time': 0.038557403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038565181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.038565653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038575417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.764000000002382e-06, 'source_diff': 9.764000000002382e-06}, {'time': 0.038575889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038585319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.429999999997773e-06, 'source_diff': 9.429999999997773e-06}, {'time': 0.038585792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038592958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.165999999995953e-06, 'source_diff': 7.165999999995953e-06}, {'time': 0.038593431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038602125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000003532e-06, 'source_diff': 8.694000000003532e-06}, {'time': 0.038602597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038610389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.038610861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038619361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.499999999994623e-06, 'source_diff': 8.499999999994623e-06}, {'time': 0.038619833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038630458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.038630931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038636917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.038637389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038645278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.888999999997037e-06, 'source_diff': 7.888999999997037e-06}, {'time': 0.03864575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038650972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.038651514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.038657389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.038657861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038665333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.038665806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.038671069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.263000000005347e-06, 'source_diff': 5.263000000005347e-06}, {'time': 0.038671542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038675958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.038676431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.038682431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0000000000060005e-06, 'source_diff': 6.0000000000060005e-06}, {'time': 0.038682903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038689347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.444000000001282e-06, 'source_diff': 6.444000000001282e-06}, {'time': 0.038689819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038696431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.61200000000306e-06, 'source_diff': 6.61200000000306e-06}, {'time': 0.038696903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03870375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000004266e-06, 'source_diff': 6.847000000004266e-06}, {'time': 0.038704222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038711486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.038711958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038718056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.09800000000299e-06, 'source_diff': 6.09800000000299e-06}, {'time': 0.038718528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038729333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.080499999999568e-05, 'source_diff': 1.080499999999568e-05}, {'time': 0.038729806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038734139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.333000000002196e-06, 'source_diff': 4.333000000002196e-06}, {'time': 0.038734611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038742583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.971999999994983e-06, 'source_diff': 7.971999999994983e-06}, {'time': 0.038743056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038753431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.038753903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038762431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.038762903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038772333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.429999999997773e-06, 'source_diff': 9.429999999997773e-06}, {'time': 0.038772806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038779958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.152000000003322e-06, 'source_diff': 7.152000000003322e-06}, {'time': 0.038780431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.03878675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3190000000046265e-06, 'source_diff': 6.3190000000046265e-06}, {'time': 0.038787222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038792181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.038792653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038803042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.038803514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038809722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.038810194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038818708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.038819181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038827153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.972000000001922e-06, 'source_diff': 7.972000000001922e-06}, {'time': 0.038827625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038835208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5830000000054465e-06, 'source_diff': 7.5830000000054465e-06}, {'time': 0.038835681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.038842764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0830000000049465e-06, 'source_diff': 7.0830000000049465e-06}, {'time': 0.038843306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.038852222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.915999999997704e-06, 'source_diff': 8.915999999997704e-06}, {'time': 0.038852694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038861569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.038862111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.038868722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.611000000003586e-06, 'source_diff': 6.611000000003586e-06}, {'time': 0.038869194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038875833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.638999999995787e-06, 'source_diff': 6.638999999995787e-06}, {'time': 0.038876306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038883431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000003656e-06, 'source_diff': 7.125000000003656e-06}, {'time': 0.038883903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038889486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.583000000003446e-06, 'source_diff': 5.583000000003446e-06}, {'time': 0.038889958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038900444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0485999999997053e-05, 'source_diff': 1.0485999999997053e-05}, {'time': 0.038900917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038909653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.038910125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038920181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0056000000001342e-05, 'source_diff': 1.0056000000001342e-05}, {'time': 0.038920653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038927694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.040999999999298e-06, 'source_diff': 7.040999999999298e-06}, {'time': 0.038928167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038934694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.526999999999228e-06, 'source_diff': 6.526999999999228e-06}, {'time': 0.038935167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038944097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.929999999997273e-06, 'source_diff': 8.929999999997273e-06}, {'time': 0.038944569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:54:28.969" endtime="20201112 09:54:28.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.957" endtime="20201112 09:54:28.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:29.039" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:28.984" endtime="20201112 09:54:29.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.049" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:29.046" endtime="20201112 09:54:29.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.058" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.720000000013602e-07, 4.737000000004654e-06, 4.7199999999442133e-07, 7.777999999999952e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.720000000013602e-07, 9.429999999997773e-06, 4.7300000000083386e-07, 7.165999999995953e-06, 4.7300000000083386e-07, 8.694000000003532e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.720000000013602e-07, 8.499999999994623e-06, 4.720000000013602e-07, 1.0625000000000218e-05, 4.7300000000083386e-07, 5.985999999999492e-06, 4.720000000013602e-07, 7.888999999997037e-06, 4.720000000013602e-07, 5.221999999999172e-06, 5.419999999992098e-07, 5.875000000002406e-06, 4.720000000013602e-07, 7.472000000001422e-06, 4.7299999999389497e-07, 5.263000000005347e-06, 4.7300000000083386e-07, 4.416000000000142e-06, 4.7299999999389497e-07, 6.0000000000060005e-06, 4.7199999999442133e-07, 6.444000000001282e-06, 4.720000000013602e-07, 6.61200000000306e-06, 4.7199999999442133e-07, 6.847000000004266e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.7199999999442133e-07, 6.09800000000299e-06, 4.720000000013602e-07, 1.080499999999568e-05, 4.7300000000083386e-07, 4.333000000002196e-06, 4.720000000013602e-07, 7.971999999994983e-06, 4.7300000000083386e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 8.528000000000702e-06, 4.720000000013602e-07, 9.429999999997773e-06, 4.7300000000083386e-07, 7.152000000003322e-06, 4.7299999999389497e-07, 6.3190000000046265e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7199999999442133e-07, 6.208000000000602e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.7300000000083386e-07, 7.972000000001922e-06, 4.7199999999442133e-07, 7.5830000000054465e-06, 4.7299999999389497e-07, 7.0830000000049465e-06, 5.419999999992098e-07, 8.915999999997704e-06, 4.720000000013602e-07, 8.874999999998467e-06, 5.419999999992098e-07, 6.611000000003586e-06, 4.720000000013602e-07, 6.638999999995787e-06, 4.7300000000083386e-07, 7.125000000003656e-06, 4.7199999999442133e-07, 5.583000000003446e-06, 4.720000000013602e-07, 1.0485999999997053e-05, 4.7300000000083386e-07, 8.736000000002242e-06, 4.7199999999442133e-07, 1.0056000000001342e-05, 4.720000000013602e-07, 7.040999999999298e-06, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07], 'time': [0.038551722, 0.038552194, 0.038556931, 0.038557403, 0.038565181, 0.038565653, 0.038575417, 0.038575889, 0.038585319, 0.038585792, 0.038592958, 0.038593431, 0.038602125, 0.038602597, 0.038610389, 0.038610861, 0.038619361, 0.038619833, 0.038630458, 0.038630931, 0.038636917, 0.038637389, 0.038645278, 0.03864575, 0.038650972, 0.038651514, 0.038657389, 0.038657861, 0.038665333, 0.038665806, 0.038671069, 0.038671542, 0.038675958, 0.038676431, 0.038682431, 0.038682903, 0.038689347, 0.038689819, 0.038696431, 0.038696903, 0.03870375, 0.038704222, 0.038711486, 0.038711958, 0.038718056, 0.038718528, 0.038729333, 0.038729806, 0.038734139, 0.038734611, 0.038742583, 0.038743056, 0.038753431, 0.038753903, 0.038762431, 0.038762903, 0.038772333, 0.038772806, 0.038779958, 0.038780431, 0.03878675, 0.038787222, 0.038792181, 0.038792653, 0.038803042, 0.038803514, 0.038809722, 0.038810194, 0.038818708, 0.038819181, 0.038827153, 0.038827625, 0.038835208, 0.038835681, 0.038842764, 0.038843306, 0.038852222, 0.038852694, 0.038861569, 0.038862111, 0.038868722, 0.038869194, 0.038875833, 0.038876306, 0.038883431, 0.038883903, 0.038889486, 0.038889958, 0.038900444, 0.038900917, 0.038909653, 0.038910125, 0.038920181, 0.038920653, 0.038927694, 0.038928167, 0.038934694, 0.038935167, 0.038944097, 0.038944569], 'diff': [0, 4.720000000013602e-07, 4.737000000004654e-06, 4.7199999999442133e-07, 7.777999999999952e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.720000000013602e-07, 9.429999999997773e-06, 4.7300000000083386e-07, 7.165999999995953e-06, 4.7300000000083386e-07, 8.694000000003532e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.720000000013602e-07, 8.499999999994623e-06, 4.720000000013602e-07, 1.0625000000000218e-05, 4.7300000000083386e-07, 5.985999999999492e-06, 4.720000000013602e-07, 7.888999999997037e-06, 4.720000000013602e-07, 5.221999999999172e-06, 5.419999999992098e-07, 5.875000000002406e-06, 4.720000000013602e-07, 7.472000000001422e-06, 4.7299999999389497e-07, 5.263000000005347e-06, 4.7300000000083386e-07, 4.416000000000142e-06, 4.7299999999389497e-07, 6.0000000000060005e-06, 4.7199999999442133e-07, 6.444000000001282e-06, 4.720000000013602e-07, 6.61200000000306e-06, 4.7199999999442133e-07, 6.847000000004266e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.7199999999442133e-07, 6.09800000000299e-06, 4.720000000013602e-07, 1.080499999999568e-05, 4.7300000000083386e-07, 4.333000000002196e-06, 4.720000000013602e-07, 7.971999999994983e-06, 4.7300000000083386e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 8.528000000000702e-06, 4.720000000013602e-07, 9.429999999997773e-06, 4.7300000000083386e-07, 7.152000000003322e-06, 4.7299999999389497e-07, 6.3190000000046265e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7199999999442133e-07, 6.208000000000602e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.7300000000083386e-07, 7.972000000001922e-06, 4.7199999999442133e-07, 7.5830000000054465e-06, 4.7299999999389497e-07, 7.0830000000049465e-06, 5.419999999992098e-07, 8.915999999997704e-06, 4.720000000013602e-07, 8.874999999998467e-06, 5.419999999992098e-07, 6.611000000003586e-06, 4.720000000013602e-07, 6.638999999995787e-06, 4.7300000000083386e-07, 7.125000000003656e-06, 4.7199999999442133e-07, 5.583000000003446e-06, 4.720000000013602e-07, 1.0485999999997053e-05, 4.7300000000083386e-07, 8.736000000002242e-06, 4.7199999999442133e-07, 1.0056000000001342e-05, 4.720000000013602e-07, 7.040999999999298e-06, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:54:29.051" endtime="20201112 09:54:29.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.041" endtime="20201112 09:54:29.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:29.073" level="INFO">${RESULT} = [{'time': 0.038552194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038557403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:29.064" endtime="20201112 09:54:29.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:29.104" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:29.075" endtime="20201112 09:54:29.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.114" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:29.112" endtime="20201112 09:54:29.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.120" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:54:29.117" endtime="20201112 09:54:29.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.106" endtime="20201112 09:54:29.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.129" endtime="20201112 09:54:29.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:29.137" endtime="20201112 09:54:29.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.133" endtime="20201112 09:54:29.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.124" endtime="20201112 09:54:29.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.499" endtime="20201112 09:54:29.163"></status>
</kw>
<msg timestamp="20201112 09:54:29.164" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.186" endtime="20201112 09:54:29.199"></status>
</kw>
<msg timestamp="20201112 09:54:29.200" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.183" endtime="20201112 09:54:29.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.206" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.202" endtime="20201112 09:54:29.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.209" endtime="20201112 09:54:29.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.174" endtime="20201112 09:54:29.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.168" endtime="20201112 09:54:29.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.232" endtime="20201112 09:54:29.578"></status>
</kw>
<msg timestamp="20201112 09:54:29.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039025528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039026, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:29.229" endtime="20201112 09:54:29.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039025528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039026, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:29.587" endtime="20201112 09:54:29.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.607" endtime="20201112 09:54:29.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.222" endtime="20201112 09:54:29.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.217" endtime="20201112 09:54:29.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.624" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:29.621" endtime="20201112 09:54:29.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.635" level="INFO">VALUE: [{'time': 0.039025528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039026, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039033264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.039033736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039044431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0694999999998067e-05, 'source_diff': 1.0694999999998067e-05}, {'time': 0.039044903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039052514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.611000000004586e-06, 'source_diff': 7.611000000004586e-06}, {'time': 0.039053056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.039060306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.039060778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.039070111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.039070583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039076069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.039076542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039085361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.039085833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039092458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999996217e-06, 'source_diff': 6.624999999996217e-06}, {'time': 0.039092931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039097875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.039098347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039105403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.055999999998341e-06, 'source_diff': 7.055999999998341e-06}, {'time': 0.039105875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03911575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.039116222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039124722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.039125194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039132236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.039132708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039139569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.860999999996897e-06, 'source_diff': 6.860999999996897e-06}, {'time': 0.039140042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039146972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.930000000002212e-06, 'source_diff': 6.930000000002212e-06}, {'time': 0.039147444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039157819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.039158292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.039165556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.039166028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039176778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0750000000003812e-05, 'source_diff': 1.0750000000003812e-05}, {'time': 0.039177319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.039185181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861999999997371e-06, 'source_diff': 7.861999999997371e-06}, {'time': 0.039185653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039194375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.721999999995733e-06, 'source_diff': 8.721999999995733e-06}, {'time': 0.039194847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039204931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0084000000000481e-05, 'source_diff': 1.0084000000000481e-05}, {'time': 0.039205403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039210708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.304999999997118e-06, 'source_diff': 5.304999999997118e-06}, {'time': 0.03921125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.039217667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.416999999994677e-06, 'source_diff': 6.416999999994677e-06}, {'time': 0.039218139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039228417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0278000000002452e-05, 'source_diff': 1.0278000000002452e-05}, {'time': 0.039228889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.110999999996147e-06, 'source_diff': 6.110999999996147e-06}, {'time': 0.039235472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039240014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999996271e-06, 'source_diff': 4.541999999996271e-06}, {'time': 0.039240486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039249111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.625000000005156e-06, 'source_diff': 8.625000000005156e-06}, {'time': 0.039249583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.039258181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.59800000000549e-06, 'source_diff': 8.59800000000549e-06}, {'time': 0.039258653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.039266236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5830000000054465e-06, 'source_diff': 7.5830000000054465e-06}, {'time': 0.039266708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.039274986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.039275458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039281875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.417000000001616e-06, 'source_diff': 6.417000000001616e-06}, {'time': 0.039282347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039291486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.039291958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039298264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.039298736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039303375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.039303847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039312583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.735999999995303e-06, 'source_diff': 8.735999999995303e-06}, {'time': 0.039313056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039322167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.039322639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039331403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.039331944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.039339931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.987000000000966e-06, 'source_diff': 7.987000000000966e-06}, {'time': 0.039340403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039347361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.957999999994413e-06, 'source_diff': 6.957999999994413e-06}, {'time': 0.039347833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039353306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.472999999998895e-06, 'source_diff': 5.472999999998895e-06}, {'time': 0.039353778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039358403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.039358875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039368333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.457999999996913e-06, 'source_diff': 9.457999999996913e-06}, {'time': 0.039368806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039377, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194000000003032e-06, 'source_diff': 8.194000000003032e-06}, {'time': 0.039377472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.039383486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0140000000055704e-06, 'source_diff': 6.0140000000055704e-06}, {'time': 0.039383958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.039390375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.417000000001616e-06, 'source_diff': 6.417000000001616e-06}, {'time': 0.039390847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039396111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.039396583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039407167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0584000000000982e-05, 'source_diff': 1.0584000000000982e-05}, {'time': 0.039407639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039416681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.042000000000772e-06, 'source_diff': 9.042000000000772e-06}, {'time': 0.039417153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039422542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.388999999994537e-06, 'source_diff': 5.388999999994537e-06}, {'time': 0.039423014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:54:29.626" endtime="20201112 09:54:29.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.615" endtime="20201112 09:54:29.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:29.698" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:29.641" endtime="20201112 09:54:29.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.707" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:29.705" endtime="20201112 09:54:29.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.716" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.720000000013602e-07, 7.263999999999882e-06, 4.720000000013602e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 7.611000000004586e-06, 5.419999999992098e-07, 7.250000000000312e-06, 4.7199999999442133e-07, 9.333000000000258e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 8.819000000000188e-06, 4.720000000013602e-07, 6.624999999996217e-06, 4.7300000000083386e-07, 4.943999999999782e-06, 4.720000000013602e-07, 7.055999999998341e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 6.860999999996897e-06, 4.7300000000083386e-07, 6.930000000002212e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.7299999999389497e-07, 7.263999999999882e-06, 4.720000000013602e-07, 1.0750000000003812e-05, 5.409999999997361e-07, 7.861999999997371e-06, 4.720000000013602e-07, 8.721999999995733e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.720000000013602e-07, 5.304999999997118e-06, 5.420000000061487e-07, 6.416999999994677e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 6.110999999996147e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 8.625000000005156e-06, 4.7199999999442133e-07, 8.59800000000549e-06, 4.7199999999442133e-07, 7.5830000000054465e-06, 4.7199999999442133e-07, 8.278000000000452e-06, 4.720000000013602e-07, 6.417000000001616e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 8.735999999995303e-06, 4.7300000000083386e-07, 9.110999999999148e-06, 4.720000000013602e-07, 8.764000000001382e-06, 5.409999999997361e-07, 7.987000000000966e-06, 4.720000000013602e-07, 6.957999999994413e-06, 4.720000000013602e-07, 5.472999999998895e-06, 4.720000000013602e-07, 4.625000000001156e-06, 4.720000000013602e-07, 9.457999999996913e-06, 4.7300000000083386e-07, 8.194000000003032e-06, 4.7199999999442133e-07, 6.0140000000055704e-06, 4.7199999999442133e-07, 6.417000000001616e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 1.0584000000000982e-05, 4.720000000013602e-07, 9.042000000000772e-06, 4.720000000013602e-07, 5.388999999994537e-06, 4.720000000013602e-07], 'time': [0.039025528, 0.039026, 0.039033264, 0.039033736, 0.039044431, 0.039044903, 0.039052514, 0.039053056, 0.039060306, 0.039060778, 0.039070111, 0.039070583, 0.039076069, 0.039076542, 0.039085361, 0.039085833, 0.039092458, 0.039092931, 0.039097875, 0.039098347, 0.039105403, 0.039105875, 0.03911575, 0.039116222, 0.039124722, 0.039125194, 0.039132236, 0.039132708, 0.039139569, 0.039140042, 0.039146972, 0.039147444, 0.039157819, 0.039158292, 0.039165556, 0.039166028, 0.039176778, 0.039177319, 0.039185181, 0.039185653, 0.039194375, 0.039194847, 0.039204931, 0.039205403, 0.039210708, 0.03921125, 0.039217667, 0.039218139, 0.039228417, 0.039228889, 0.039235, 0.039235472, 0.039240014, 0.039240486, 0.039249111, 0.039249583, 0.039258181, 0.039258653, 0.039266236, 0.039266708, 0.039274986, 0.039275458, 0.039281875, 0.039282347, 0.039291486, 0.039291958, 0.039298264, 0.039298736, 0.039303375, 0.039303847, 0.039312583, 0.039313056, 0.039322167, 0.039322639, 0.039331403, 0.039331944, 0.039339931, 0.039340403, 0.039347361, 0.039347833, 0.039353306, 0.039353778, 0.039358403, 0.039358875, 0.039368333, 0.039368806, 0.039377, 0.039377472, 0.039383486, 0.039383958, 0.039390375, 0.039390847, 0.039396111, 0.039396583, 0.039407167, 0.039407639, 0.039416681, 0.039417153, 0.039422542, 0.039423014], 'diff': [0, 4.720000000013602e-07, 7.263999999999882e-06, 4.720000000013602e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 7.611000000004586e-06, 5.419999999992098e-07, 7.250000000000312e-06, 4.7199999999442133e-07, 9.333000000000258e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 8.819000000000188e-06, 4.720000000013602e-07, 6.624999999996217e-06, 4.7300000000083386e-07, 4.943999999999782e-06, 4.720000000013602e-07, 7.055999999998341e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 6.860999999996897e-06, 4.7300000000083386e-07, 6.930000000002212e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.7299999999389497e-07, 7.263999999999882e-06, 4.720000000013602e-07, 1.0750000000003812e-05, 5.409999999997361e-07, 7.861999999997371e-06, 4.720000000013602e-07, 8.721999999995733e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.720000000013602e-07, 5.304999999997118e-06, 5.420000000061487e-07, 6.416999999994677e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 6.110999999996147e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 8.625000000005156e-06, 4.7199999999442133e-07, 8.59800000000549e-06, 4.7199999999442133e-07, 7.5830000000054465e-06, 4.7199999999442133e-07, 8.278000000000452e-06, 4.720000000013602e-07, 6.417000000001616e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 8.735999999995303e-06, 4.7300000000083386e-07, 9.110999999999148e-06, 4.720000000013602e-07, 8.764000000001382e-06, 5.409999999997361e-07, 7.987000000000966e-06, 4.720000000013602e-07, 6.957999999994413e-06, 4.720000000013602e-07, 5.472999999998895e-06, 4.720000000013602e-07, 4.625000000001156e-06, 4.720000000013602e-07, 9.457999999996913e-06, 4.7300000000083386e-07, 8.194000000003032e-06, 4.7199999999442133e-07, 6.0140000000055704e-06, 4.7199999999442133e-07, 6.417000000001616e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 1.0584000000000982e-05, 4.720000000013602e-07, 9.042000000000772e-06, 4.720000000013602e-07, 5.388999999994537e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:54:29.709" endtime="20201112 09:54:29.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.699" endtime="20201112 09:54:29.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:29.731" level="INFO">${RESULT} = [{'time': 0.039026, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039033736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:54:29.722" endtime="20201112 09:54:29.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:29.763" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:29.733" endtime="20201112 09:54:29.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.774" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:29.771" endtime="20201112 09:54:29.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.779" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.420000000061487e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:54:29.776" endtime="20201112 09:54:29.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.765" endtime="20201112 09:54:29.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.788" endtime="20201112 09:54:29.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:29.797" endtime="20201112 09:54:29.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.792" endtime="20201112 09:54:29.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.783" endtime="20201112 09:54:29.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.165" endtime="20201112 09:54:29.822"></status>
</kw>
<msg timestamp="20201112 09:54:29.823" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.843" endtime="20201112 09:54:29.855"></status>
</kw>
<msg timestamp="20201112 09:54:29.857" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.839" endtime="20201112 09:54:29.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.863" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.859" endtime="20201112 09:54:29.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.865" endtime="20201112 09:54:29.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.832" endtime="20201112 09:54:29.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.827" endtime="20201112 09:54:29.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.889" endtime="20201112 09:54:30.233"></status>
</kw>
<msg timestamp="20201112 09:54:30.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036442542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036443014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:29.886" endtime="20201112 09:54:30.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036442542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036443014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:30.242" endtime="20201112 09:54:30.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.262" endtime="20201112 09:54:30.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.878" endtime="20201112 09:54:30.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.873" endtime="20201112 09:54:30.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.279" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:30.276" endtime="20201112 09:54:30.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.290" level="INFO">VALUE: [{'time': 0.036442542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036443014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03644975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.036450222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036458111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.889000000003976e-06, 'source_diff': 7.889000000003976e-06}, {'time': 0.036458583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036468458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.036468931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036476208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.276999999999978e-06, 'source_diff': 7.276999999999978e-06}, {'time': 0.036476681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036487056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.036487528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036495097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.036495569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036503264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.695000000002006e-06, 'source_diff': 7.695000000002006e-06}, {'time': 0.036503736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036509208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.036509681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036516917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.036517389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036525903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.036526375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036532208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8329999999967574e-06, 'source_diff': 5.8329999999967574e-06}, {'time': 0.03653275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.036540208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.457999999994913e-06, 'source_diff': 7.457999999994913e-06}, {'time': 0.036540681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036548514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.036549056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.036554889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8329999999967574e-06, 'source_diff': 5.8329999999967574e-06}, {'time': 0.036555431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036563597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166000000003892e-06, 'source_diff': 8.166000000003892e-06}, {'time': 0.036564069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036568819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.75000000000475e-06, 'source_diff': 4.75000000000475e-06}, {'time': 0.036569292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03657675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.457999999994913e-06, 'source_diff': 7.457999999994913e-06}, {'time': 0.036577222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036586986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.764000000002382e-06, 'source_diff': 9.764000000002382e-06}, {'time': 0.036587458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036596944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.485999999996053e-06, 'source_diff': 9.485999999996053e-06}, {'time': 0.036597417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036606306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.036606778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036614361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.036614833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036624792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.959000000003826e-06, 'source_diff': 9.959000000003826e-06}, {'time': 0.036625264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036632736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.036633208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036639222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.036639694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036646319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999996217e-06, 'source_diff': 6.624999999996217e-06}, {'time': 0.036646792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036652597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8050000000045565e-06, 'source_diff': 5.8050000000045565e-06}, {'time': 0.036653069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036662097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.027999999994263e-06, 'source_diff': 9.027999999994263e-06}, {'time': 0.036662569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036669403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.83400000000417e-06, 'source_diff': 6.83400000000417e-06}, {'time': 0.036669875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036675375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5000000000055005e-06, 'source_diff': 5.5000000000055005e-06}, {'time': 0.036675847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03668025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.036680722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036689861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.036690333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036698028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.695000000002006e-06, 'source_diff': 7.695000000002006e-06}, {'time': 0.0366985, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03670825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.749999999995873e-06, 'source_diff': 9.749999999995873e-06}, {'time': 0.036708722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036717861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.036718333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036725889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.036726361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036731014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.036731486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036738528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.036739, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036749917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0916999999999177e-05, 'source_diff': 1.0916999999999177e-05}, {'time': 0.036750389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036756403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.036756875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0367615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.036761972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036766278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.03676675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036773819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.068999999998438e-06, 'source_diff': 7.068999999998438e-06}, {'time': 0.036774292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036783306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.036783778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036791778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.999999999994123e-06, 'source_diff': 7.999999999994123e-06}, {'time': 0.03679225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036796667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.036797139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036801778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.03680225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036812014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.763999999995443e-06, 'source_diff': 9.763999999995443e-06}, {'time': 0.036812486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036817764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.27800000000439e-06, 'source_diff': 5.27800000000439e-06}, {'time': 0.036818236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036827694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.458000000003852e-06, 'source_diff': 9.458000000003852e-06}, {'time': 0.036828167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 09:54:30.281" endtime="20201112 09:54:30.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.270" endtime="20201112 09:54:30.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:30.353" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:30.296" endtime="20201112 09:54:30.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.362" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:30.360" endtime="20201112 09:54:30.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.372" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.720000000013602e-07, 6.736000000000242e-06, 4.7199999999442133e-07, 7.889000000003976e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.7300000000083386e-07, 7.276999999999978e-06, 4.7299999999389497e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 7.568999999998938e-06, 4.720000000013602e-07, 7.695000000002006e-06, 4.720000000013602e-07, 5.471999999999422e-06, 4.7300000000083386e-07, 7.236000000000742e-06, 4.7199999999442133e-07, 8.514000000001132e-06, 4.720000000013602e-07, 5.8329999999967574e-06, 5.420000000061487e-07, 7.457999999994913e-06, 4.7300000000083386e-07, 7.832999999998758e-06, 5.420000000061487e-07, 5.8329999999967574e-06, 5.419999999992098e-07, 8.166000000003892e-06, 4.7199999999442133e-07, 4.75000000000475e-06, 4.7300000000083386e-07, 7.457999999994913e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.720000000013602e-07, 9.485999999996053e-06, 4.7300000000083386e-07, 8.888999999998037e-06, 4.720000000013602e-07, 7.582999999998508e-06, 4.720000000013602e-07, 9.959000000003826e-06, 4.7199999999442133e-07, 7.472000000001422e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 6.624999999996217e-06, 4.7300000000083386e-07, 5.8050000000045565e-06, 4.720000000013602e-07, 9.027999999994263e-06, 4.720000000013602e-07, 6.83400000000417e-06, 4.7199999999442133e-07, 5.5000000000055005e-06, 4.7199999999442133e-07, 4.403000000000046e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 7.695000000002006e-06, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 4.653000000000296e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 4.625000000001156e-06, 4.7199999999442133e-07, 4.30600000000253e-06, 4.720000000013602e-07, 7.068999999998438e-06, 4.7300000000083386e-07, 9.014000000001632e-06, 4.720000000013602e-07, 7.999999999994123e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 9.763999999995443e-06, 4.720000000013602e-07, 5.27800000000439e-06, 4.7199999999442133e-07, 9.458000000003852e-06, 4.7300000000083386e-07], 'time': [0.036442542, 0.036443014, 0.03644975, 0.036450222, 0.036458111, 0.036458583, 0.036468458, 0.036468931, 0.036476208, 0.036476681, 0.036487056, 0.036487528, 0.036495097, 0.036495569, 0.036503264, 0.036503736, 0.036509208, 0.036509681, 0.036516917, 0.036517389, 0.036525903, 0.036526375, 0.036532208, 0.03653275, 0.036540208, 0.036540681, 0.036548514, 0.036549056, 0.036554889, 0.036555431, 0.036563597, 0.036564069, 0.036568819, 0.036569292, 0.03657675, 0.036577222, 0.036586986, 0.036587458, 0.036596944, 0.036597417, 0.036606306, 0.036606778, 0.036614361, 0.036614833, 0.036624792, 0.036625264, 0.036632736, 0.036633208, 0.036639222, 0.036639694, 0.036646319, 0.036646792, 0.036652597, 0.036653069, 0.036662097, 0.036662569, 0.036669403, 0.036669875, 0.036675375, 0.036675847, 0.03668025, 0.036680722, 0.036689861, 0.036690333, 0.036698028, 0.0366985, 0.03670825, 0.036708722, 0.036717861, 0.036718333, 0.036725889, 0.036726361, 0.036731014, 0.036731486, 0.036738528, 0.036739, 0.036749917, 0.036750389, 0.036756403, 0.036756875, 0.0367615, 0.036761972, 0.036766278, 0.03676675, 0.036773819, 0.036774292, 0.036783306, 0.036783778, 0.036791778, 0.03679225, 0.036796667, 0.036797139, 0.036801778, 0.03680225, 0.036812014, 0.036812486, 0.036817764, 0.036818236, 0.036827694, 0.036828167], 'diff': [0, 4.720000000013602e-07, 6.736000000000242e-06, 4.7199999999442133e-07, 7.889000000003976e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.7300000000083386e-07, 7.276999999999978e-06, 4.7299999999389497e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 7.568999999998938e-06, 4.720000000013602e-07, 7.695000000002006e-06, 4.720000000013602e-07, 5.471999999999422e-06, 4.7300000000083386e-07, 7.236000000000742e-06, 4.7199999999442133e-07, 8.514000000001132e-06, 4.720000000013602e-07, 5.8329999999967574e-06, 5.420000000061487e-07, 7.457999999994913e-06, 4.7300000000083386e-07, 7.832999999998758e-06, 5.420000000061487e-07, 5.8329999999967574e-06, 5.419999999992098e-07, 8.166000000003892e-06, 4.7199999999442133e-07, 4.75000000000475e-06, 4.7300000000083386e-07, 7.457999999994913e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.720000000013602e-07, 9.485999999996053e-06, 4.7300000000083386e-07, 8.888999999998037e-06, 4.720000000013602e-07, 7.582999999998508e-06, 4.720000000013602e-07, 9.959000000003826e-06, 4.7199999999442133e-07, 7.472000000001422e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 6.624999999996217e-06, 4.7300000000083386e-07, 5.8050000000045565e-06, 4.720000000013602e-07, 9.027999999994263e-06, 4.720000000013602e-07, 6.83400000000417e-06, 4.7199999999442133e-07, 5.5000000000055005e-06, 4.7199999999442133e-07, 4.403000000000046e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 7.695000000002006e-06, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 4.653000000000296e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 4.625000000001156e-06, 4.7199999999442133e-07, 4.30600000000253e-06, 4.720000000013602e-07, 7.068999999998438e-06, 4.7300000000083386e-07, 9.014000000001632e-06, 4.720000000013602e-07, 7.999999999994123e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 9.763999999995443e-06, 4.720000000013602e-07, 5.27800000000439e-06, 4.7199999999442133e-07, 9.458000000003852e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 09:54:30.365" endtime="20201112 09:54:30.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.355" endtime="20201112 09:54:30.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:30.386" level="INFO">${RESULT} = [{'time': 0.036443014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036450222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:30.377" endtime="20201112 09:54:30.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:30.418" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:30.388" endtime="20201112 09:54:30.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.428" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:30.426" endtime="20201112 09:54:30.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.434" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.420000000061487e-07, 4.7300000000083386e-07, 5.420000000061487e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 09:54:30.431" endtime="20201112 09:54:30.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.420" endtime="20201112 09:54:30.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.443" endtime="20201112 09:54:30.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:30.451" endtime="20201112 09:54:30.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.447" endtime="20201112 09:54:30.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.438" endtime="20201112 09:54:30.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.824" endtime="20201112 09:54:30.477"></status>
</kw>
<msg timestamp="20201112 09:54:30.478" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.498" endtime="20201112 09:54:30.510"></status>
</kw>
<msg timestamp="20201112 09:54:30.511" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.494" endtime="20201112 09:54:30.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.518" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.514" endtime="20201112 09:54:30.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.520" endtime="20201112 09:54:30.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.487" endtime="20201112 09:54:30.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.482" endtime="20201112 09:54:30.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.546" endtime="20201112 09:54:30.895"></status>
</kw>
<msg timestamp="20201112 09:54:30.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036532736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036533208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:30.542" endtime="20201112 09:54:30.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036532736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036533208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:30.905" endtime="20201112 09:54:30.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.924" endtime="20201112 09:54:30.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.533" endtime="20201112 09:54:30.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.528" endtime="20201112 09:54:30.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.941" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:30.939" endtime="20201112 09:54:30.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.953" level="INFO">VALUE: [{'time': 0.036532736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036533208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036543931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0723000000004146e-05, 'source_diff': 1.0723000000004146e-05}, {'time': 0.036544403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036553333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.929999999997273e-06, 'source_diff': 8.929999999997273e-06}, {'time': 0.036553806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036564708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902000000000134e-05, 'source_diff': 1.0902000000000134e-05}, {'time': 0.036565181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036573056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.874999999997467e-06, 'source_diff': 7.874999999997467e-06}, {'time': 0.036573528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036581, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.036581472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036592278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.03659275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036600736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.036601208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036607125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.916999999994177e-06, 'source_diff': 5.916999999994177e-06}, {'time': 0.036607597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036612139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.54200000000321e-06, 'source_diff': 4.54200000000321e-06}, {'time': 0.036612611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036620069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.457999999994913e-06, 'source_diff': 7.457999999994913e-06}, {'time': 0.036620542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036628222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680000000002962e-06, 'source_diff': 7.680000000002962e-06}, {'time': 0.036628694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036634153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.4589999999993255e-06, 'source_diff': 5.4589999999993255e-06}, {'time': 0.036634625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036643264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.639000000004726e-06, 'source_diff': 8.639000000004726e-06}, {'time': 0.036643736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0366535, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.763999999995443e-06, 'source_diff': 9.763999999995443e-06}, {'time': 0.036653972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036658917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.036659389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036668014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.036668486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036675431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.945000000001256e-06, 'source_diff': 6.945000000001256e-06}, {'time': 0.036675903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036686097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0193999999998093e-05, 'source_diff': 1.0193999999998093e-05}, {'time': 0.036686569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036697361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0791999999995583e-05, 'source_diff': 1.0791999999995583e-05}, {'time': 0.036697833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036708806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0972999999997457e-05, 'source_diff': 1.0972999999997457e-05}, {'time': 0.036709347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.41000000006675e-07, 'source_diff': 5.41000000006675e-07}, {'time': 0.036720028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0680999999998497e-05, 'source_diff': 1.0680999999998497e-05}, {'time': 0.0367205, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036730264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.763999999995443e-06, 'source_diff': 9.763999999995443e-06}, {'time': 0.036730736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036738028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.036738569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036745722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.153000000002796e-06, 'source_diff': 7.153000000002796e-06}, {'time': 0.036746194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036756167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972999999996457e-06, 'source_diff': 9.972999999996457e-06}, {'time': 0.036756639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036766083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.443999999997343e-06, 'source_diff': 9.443999999997343e-06}, {'time': 0.036766556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036775472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.915999999997704e-06, 'source_diff': 8.915999999997704e-06}, {'time': 0.036775944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036785931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.987000000002966e-06, 'source_diff': 9.987000000002966e-06}, {'time': 0.036786403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036794181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.036794653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036801306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.653000000002296e-06, 'source_diff': 6.653000000002296e-06}, {'time': 0.036801778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036808083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.304999999998118e-06, 'source_diff': 6.304999999998118e-06}, {'time': 0.036808556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036817431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.036817972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036825431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.459000000001326e-06, 'source_diff': 7.459000000001326e-06}, {'time': 0.036825903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036833681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.036834153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036838458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3049999999961175e-06, 'source_diff': 4.3049999999961175e-06}, {'time': 0.036838931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036843472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5410000000037365e-06, 'source_diff': 4.5410000000037365e-06}, {'time': 0.036843944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036848708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7639999999973814e-06, 'source_diff': 4.7639999999973814e-06}, {'time': 0.036849181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036854653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.036855125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036865542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0416999999998677e-05, 'source_diff': 1.0416999999998677e-05}, {'time': 0.036866014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036872639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999996217e-06, 'source_diff': 6.624999999996217e-06}, {'time': 0.036873111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036877542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.036878014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036888028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.036888569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036896556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986999999994027e-06, 'source_diff': 7.986999999994027e-06}, {'time': 0.036897028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036901458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.036901931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036906292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.036906833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0166999999998427e-05, 'source_diff': 1.0166999999998427e-05}, {'time': 0.036917472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036927417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.944999999997317e-06, 'source_diff': 9.944999999997317e-06}, {'time': 0.036927958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036935389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.431000000002186e-06, 'source_diff': 7.431000000002186e-06}, {'time': 0.036935861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036942694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.036943167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 09:54:30.943" endtime="20201112 09:54:30.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.933" endtime="20201112 09:54:30.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:31.014" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:30.959" endtime="20201112 09:54:31.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.023" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:31.021" endtime="20201112 09:54:31.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.033" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.7199999999442133e-07, 1.0723000000004146e-05, 4.720000000013602e-07, 8.929999999997273e-06, 4.7300000000083386e-07, 1.0902000000000134e-05, 4.7300000000083386e-07, 7.874999999997467e-06, 4.720000000013602e-07, 7.472000000001422e-06, 4.7199999999442133e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 5.916999999994177e-06, 4.720000000013602e-07, 4.54200000000321e-06, 4.720000000013602e-07, 7.457999999994913e-06, 4.7300000000083386e-07, 7.680000000002962e-06, 4.720000000013602e-07, 5.4589999999993255e-06, 4.7199999999442133e-07, 8.639000000004726e-06, 4.720000000013602e-07, 9.763999999995443e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 8.624999999998217e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.720000000013602e-07, 1.0193999999998093e-05, 4.720000000013602e-07, 1.0791999999995583e-05, 4.720000000013602e-07, 1.0972999999997457e-05, 5.41000000006675e-07, 1.0680999999998497e-05, 4.720000000013602e-07, 9.763999999995443e-06, 4.720000000013602e-07, 7.2919999999990215e-06, 5.409999999997361e-07, 7.153000000002796e-06, 4.720000000013602e-07, 9.972999999996457e-06, 4.720000000013602e-07, 9.443999999997343e-06, 4.7300000000083386e-07, 8.915999999997704e-06, 4.720000000013602e-07, 9.987000000002966e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.7199999999442133e-07, 6.653000000002296e-06, 4.720000000013602e-07, 6.304999999998118e-06, 4.7300000000083386e-07, 8.874999999998467e-06, 5.409999999997361e-07, 7.459000000001326e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 4.3049999999961175e-06, 4.7300000000083386e-07, 4.5410000000037365e-06, 4.720000000013602e-07, 4.7639999999973814e-06, 4.7300000000083386e-07, 5.471999999999422e-06, 4.720000000013602e-07, 1.0416999999998677e-05, 4.720000000013602e-07, 6.624999999996217e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 1.0014000000002632e-05, 5.409999999997361e-07, 7.986999999994027e-06, 4.720000000013602e-07, 4.429999999999712e-06, 4.7300000000083386e-07, 4.361000000001336e-06, 5.409999999997361e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 9.944999999997317e-06, 5.409999999997361e-07, 7.431000000002186e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.7300000000083386e-07], 'time': [0.036532736, 0.036533208, 0.036543931, 0.036544403, 0.036553333, 0.036553806, 0.036564708, 0.036565181, 0.036573056, 0.036573528, 0.036581, 0.036581472, 0.036592278, 0.03659275, 0.036600736, 0.036601208, 0.036607125, 0.036607597, 0.036612139, 0.036612611, 0.036620069, 0.036620542, 0.036628222, 0.036628694, 0.036634153, 0.036634625, 0.036643264, 0.036643736, 0.0366535, 0.036653972, 0.036658917, 0.036659389, 0.036668014, 0.036668486, 0.036675431, 0.036675903, 0.036686097, 0.036686569, 0.036697361, 0.036697833, 0.036708806, 0.036709347, 0.036720028, 0.0367205, 0.036730264, 0.036730736, 0.036738028, 0.036738569, 0.036745722, 0.036746194, 0.036756167, 0.036756639, 0.036766083, 0.036766556, 0.036775472, 0.036775944, 0.036785931, 0.036786403, 0.036794181, 0.036794653, 0.036801306, 0.036801778, 0.036808083, 0.036808556, 0.036817431, 0.036817972, 0.036825431, 0.036825903, 0.036833681, 0.036834153, 0.036838458, 0.036838931, 0.036843472, 0.036843944, 0.036848708, 0.036849181, 0.036854653, 0.036855125, 0.036865542, 0.036866014, 0.036872639, 0.036873111, 0.036877542, 0.036878014, 0.036888028, 0.036888569, 0.036896556, 0.036897028, 0.036901458, 0.036901931, 0.036906292, 0.036906833, 0.036917, 0.036917472, 0.036927417, 0.036927958, 0.036935389, 0.036935861, 0.036942694, 0.036943167], 'diff': [0, 4.7199999999442133e-07, 1.0723000000004146e-05, 4.720000000013602e-07, 8.929999999997273e-06, 4.7300000000083386e-07, 1.0902000000000134e-05, 4.7300000000083386e-07, 7.874999999997467e-06, 4.720000000013602e-07, 7.472000000001422e-06, 4.7199999999442133e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 5.916999999994177e-06, 4.720000000013602e-07, 4.54200000000321e-06, 4.720000000013602e-07, 7.457999999994913e-06, 4.7300000000083386e-07, 7.680000000002962e-06, 4.720000000013602e-07, 5.4589999999993255e-06, 4.7199999999442133e-07, 8.639000000004726e-06, 4.720000000013602e-07, 9.763999999995443e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 8.624999999998217e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.720000000013602e-07, 1.0193999999998093e-05, 4.720000000013602e-07, 1.0791999999995583e-05, 4.720000000013602e-07, 1.0972999999997457e-05, 5.41000000006675e-07, 1.0680999999998497e-05, 4.720000000013602e-07, 9.763999999995443e-06, 4.720000000013602e-07, 7.2919999999990215e-06, 5.409999999997361e-07, 7.153000000002796e-06, 4.720000000013602e-07, 9.972999999996457e-06, 4.720000000013602e-07, 9.443999999997343e-06, 4.7300000000083386e-07, 8.915999999997704e-06, 4.720000000013602e-07, 9.987000000002966e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.7199999999442133e-07, 6.653000000002296e-06, 4.720000000013602e-07, 6.304999999998118e-06, 4.7300000000083386e-07, 8.874999999998467e-06, 5.409999999997361e-07, 7.459000000001326e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 4.3049999999961175e-06, 4.7300000000083386e-07, 4.5410000000037365e-06, 4.720000000013602e-07, 4.7639999999973814e-06, 4.7300000000083386e-07, 5.471999999999422e-06, 4.720000000013602e-07, 1.0416999999998677e-05, 4.720000000013602e-07, 6.624999999996217e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 1.0014000000002632e-05, 5.409999999997361e-07, 7.986999999994027e-06, 4.720000000013602e-07, 4.429999999999712e-06, 4.7300000000083386e-07, 4.361000000001336e-06, 5.409999999997361e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 9.944999999997317e-06, 5.409999999997361e-07, 7.431000000002186e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 09:54:31.026" endtime="20201112 09:54:31.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.016" endtime="20201112 09:54:31.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:31.047" level="INFO">${RESULT} = [{'time': 0.036533208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036544403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:31.038" endtime="20201112 09:54:31.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:31.079" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:31.049" endtime="20201112 09:54:31.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.089" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:31.087" endtime="20201112 09:54:31.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.095" level="INFO">VALUE: [4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.41000000006675e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 09:54:31.092" endtime="20201112 09:54:31.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.081" endtime="20201112 09:54:31.097"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.104" endtime="20201112 09:54:31.106"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:31.114" endtime="20201112 09:54:31.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.108" endtime="20201112 09:54:31.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.099" endtime="20201112 09:54:31.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.479" endtime="20201112 09:54:31.139"></status>
</kw>
<msg timestamp="20201112 09:54:31.140" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.160" endtime="20201112 09:54:31.173"></status>
</kw>
<msg timestamp="20201112 09:54:31.174" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.157" endtime="20201112 09:54:31.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.180" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.176" endtime="20201112 09:54:31.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.183" endtime="20201112 09:54:31.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.150" endtime="20201112 09:54:31.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.145" endtime="20201112 09:54:31.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.206" endtime="20201112 09:54:31.559"></status>
</kw>
<msg timestamp="20201112 09:54:31.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036943514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036943986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:31.203" endtime="20201112 09:54:31.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036943514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036943986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:31.568" endtime="20201112 09:54:31.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.588" endtime="20201112 09:54:31.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.196" endtime="20201112 09:54:31.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.191" endtime="20201112 09:54:31.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.606" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:31.603" endtime="20201112 09:54:31.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.618" level="INFO">VALUE: [{'time': 0.036943514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036943986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036952472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.036952944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036963125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.036963597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036972514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.916999999997177e-06, 'source_diff': 8.916999999997177e-06}, {'time': 0.036972986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036980556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.036981028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036987028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.0369875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036997875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.036998347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037009056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0708999999997637e-05, 'source_diff': 1.0708999999997637e-05}, {'time': 0.037009528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037015208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.680000000000962e-06, 'source_diff': 5.680000000000962e-06}, {'time': 0.037015681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037020222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.540999999996798e-06, 'source_diff': 4.540999999996798e-06}, {'time': 0.037020694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037026194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.037026667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037037069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0401999999999634e-05, 'source_diff': 1.0401999999999634e-05}, {'time': 0.037037611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037043708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000003516e-06, 'source_diff': 6.097000000003516e-06}, {'time': 0.037044181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037053861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.679999999998024e-06, 'source_diff': 9.679999999998024e-06}, {'time': 0.037054333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037061458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.124999999996717e-06, 'source_diff': 7.124999999996717e-06}, {'time': 0.037061931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037067833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.902000000002072e-06, 'source_diff': 5.902000000002072e-06}, {'time': 0.037068306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037073778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.03707425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037078694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.037079167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037086111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.943999999994843e-06, 'source_diff': 6.943999999994843e-06}, {'time': 0.037086583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037094056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.473000000000896e-06, 'source_diff': 7.473000000000896e-06}, {'time': 0.037094528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037100944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.415999999995203e-06, 'source_diff': 6.415999999995203e-06}, {'time': 0.037101417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037112222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805000000002618e-05, 'source_diff': 1.0805000000002618e-05}, {'time': 0.037112694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037117014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.319999999995161e-06, 'source_diff': 4.319999999995161e-06}, {'time': 0.037117486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037126, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.037126472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037130889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.037131361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037141597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0235999999996803e-05, 'source_diff': 1.0235999999996803e-05}, {'time': 0.037142139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037146875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7360000000051805e-06, 'source_diff': 4.7360000000051805e-06}, {'time': 0.037147347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037156486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.139000000005226e-06, 'source_diff': 9.139000000005226e-06}, {'time': 0.037156958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037162764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.80600000000403e-06, 'source_diff': 5.80600000000403e-06}, {'time': 0.037163236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037167875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.037168347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037178736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.037179208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037184083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.037184556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037192014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.037192486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037201097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.611000000005586e-06, 'source_diff': 8.611000000005586e-06}, {'time': 0.037201569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037206417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.84800000000174e-06, 'source_diff': 4.84800000000174e-06}, {'time': 0.037206889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037211764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.037212236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037221972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.735999999996303e-06, 'source_diff': 9.735999999996303e-06}, {'time': 0.037222444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037227194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.037227667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037235972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.037236444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037246764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0320000000001162e-05, 'source_diff': 1.0320000000001162e-05}, {'time': 0.037247236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037253306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.069999999996911e-06, 'source_diff': 6.069999999996911e-06}, {'time': 0.037253778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037261736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.957999999995413e-06, 'source_diff': 7.957999999995413e-06}, {'time': 0.037262278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.0372695, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.221999999994233e-06, 'source_diff': 7.221999999994233e-06}, {'time': 0.037269972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0372765, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.037276972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037283611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.639000000002726e-06, 'source_diff': 6.639000000002726e-06}, {'time': 0.037284083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037291431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347999999997301e-06, 'source_diff': 7.347999999997301e-06}, {'time': 0.037291903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037298736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.037299208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037308653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.444999999996817e-06, 'source_diff': 9.444999999996817e-06}, {'time': 0.037309125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037315972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000004266e-06, 'source_diff': 6.847000000004266e-06}, {'time': 0.037316444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037322556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.11200000000256e-06, 'source_diff': 6.11200000000256e-06}, {'time': 0.037323028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:54:31.608" endtime="20201112 09:54:31.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.597" endtime="20201112 09:54:31.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:31.681" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:31.624" endtime="20201112 09:54:31.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.691" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:31.688" endtime="20201112 09:54:31.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.700" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.720000000013602e-07, 8.486000000001992e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 1.0708999999997637e-05, 4.720000000013602e-07, 5.680000000000962e-06, 4.7300000000083386e-07, 4.540999999996798e-06, 4.720000000013602e-07, 5.499999999998562e-06, 4.7300000000083386e-07, 1.0401999999999634e-05, 5.419999999992098e-07, 6.097000000003516e-06, 4.7300000000083386e-07, 9.679999999998024e-06, 4.720000000013602e-07, 7.124999999996717e-06, 4.7300000000083386e-07, 5.902000000002072e-06, 4.7300000000083386e-07, 5.471999999999422e-06, 4.720000000013602e-07, 4.443999999999282e-06, 4.7300000000083386e-07, 6.943999999994843e-06, 4.720000000013602e-07, 7.473000000000896e-06, 4.720000000013602e-07, 6.415999999995203e-06, 4.7300000000083386e-07, 1.0805000000002618e-05, 4.720000000013602e-07, 4.319999999995161e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.720000000013602e-07, 1.0235999999996803e-05, 5.419999999992098e-07, 4.7360000000051805e-06, 4.7199999999442133e-07, 9.139000000005226e-06, 4.7199999999442133e-07, 5.80600000000403e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.7199999999442133e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 4.875000000001406e-06, 4.7300000000083386e-07, 7.458000000001852e-06, 4.7199999999442133e-07, 8.611000000005586e-06, 4.7199999999442133e-07, 4.84800000000174e-06, 4.720000000013602e-07, 4.875000000001406e-06, 4.720000000013602e-07, 9.735999999996303e-06, 4.720000000013602e-07, 4.7499999999978115e-06, 4.7300000000083386e-07, 8.305000000000118e-06, 4.720000000013602e-07, 1.0320000000001162e-05, 4.720000000013602e-07, 6.069999999996911e-06, 4.720000000013602e-07, 7.957999999995413e-06, 5.420000000061487e-07, 7.221999999994233e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 6.639000000002726e-06, 4.720000000013602e-07, 7.347999999997301e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 6.847000000004266e-06, 4.7199999999442133e-07, 6.11200000000256e-06, 4.720000000013602e-07], 'time': [0.036943514, 0.036943986, 0.036952472, 0.036952944, 0.036963125, 0.036963597, 0.036972514, 0.036972986, 0.036980556, 0.036981028, 0.036987028, 0.0369875, 0.036997875, 0.036998347, 0.037009056, 0.037009528, 0.037015208, 0.037015681, 0.037020222, 0.037020694, 0.037026194, 0.037026667, 0.037037069, 0.037037611, 0.037043708, 0.037044181, 0.037053861, 0.037054333, 0.037061458, 0.037061931, 0.037067833, 0.037068306, 0.037073778, 0.03707425, 0.037078694, 0.037079167, 0.037086111, 0.037086583, 0.037094056, 0.037094528, 0.037100944, 0.037101417, 0.037112222, 0.037112694, 0.037117014, 0.037117486, 0.037126, 0.037126472, 0.037130889, 0.037131361, 0.037141597, 0.037142139, 0.037146875, 0.037147347, 0.037156486, 0.037156958, 0.037162764, 0.037163236, 0.037167875, 0.037168347, 0.037178736, 0.037179208, 0.037184083, 0.037184556, 0.037192014, 0.037192486, 0.037201097, 0.037201569, 0.037206417, 0.037206889, 0.037211764, 0.037212236, 0.037221972, 0.037222444, 0.037227194, 0.037227667, 0.037235972, 0.037236444, 0.037246764, 0.037247236, 0.037253306, 0.037253778, 0.037261736, 0.037262278, 0.0372695, 0.037269972, 0.0372765, 0.037276972, 0.037283611, 0.037284083, 0.037291431, 0.037291903, 0.037298736, 0.037299208, 0.037308653, 0.037309125, 0.037315972, 0.037316444, 0.037322556, 0.037323028], 'diff': [0, 4.720000000013602e-07, 8.486000000001992e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 1.0708999999997637e-05, 4.720000000013602e-07, 5.680000000000962e-06, 4.7300000000083386e-07, 4.540999999996798e-06, 4.720000000013602e-07, 5.499999999998562e-06, 4.7300000000083386e-07, 1.0401999999999634e-05, 5.419999999992098e-07, 6.097000000003516e-06, 4.7300000000083386e-07, 9.679999999998024e-06, 4.720000000013602e-07, 7.124999999996717e-06, 4.7300000000083386e-07, 5.902000000002072e-06, 4.7300000000083386e-07, 5.471999999999422e-06, 4.720000000013602e-07, 4.443999999999282e-06, 4.7300000000083386e-07, 6.943999999994843e-06, 4.720000000013602e-07, 7.473000000000896e-06, 4.720000000013602e-07, 6.415999999995203e-06, 4.7300000000083386e-07, 1.0805000000002618e-05, 4.720000000013602e-07, 4.319999999995161e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.720000000013602e-07, 1.0235999999996803e-05, 5.419999999992098e-07, 4.7360000000051805e-06, 4.7199999999442133e-07, 9.139000000005226e-06, 4.7199999999442133e-07, 5.80600000000403e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.7199999999442133e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 4.875000000001406e-06, 4.7300000000083386e-07, 7.458000000001852e-06, 4.7199999999442133e-07, 8.611000000005586e-06, 4.7199999999442133e-07, 4.84800000000174e-06, 4.720000000013602e-07, 4.875000000001406e-06, 4.720000000013602e-07, 9.735999999996303e-06, 4.720000000013602e-07, 4.7499999999978115e-06, 4.7300000000083386e-07, 8.305000000000118e-06, 4.720000000013602e-07, 1.0320000000001162e-05, 4.720000000013602e-07, 6.069999999996911e-06, 4.720000000013602e-07, 7.957999999995413e-06, 5.420000000061487e-07, 7.221999999994233e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 6.639000000002726e-06, 4.720000000013602e-07, 7.347999999997301e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 6.847000000004266e-06, 4.7199999999442133e-07, 6.11200000000256e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:54:31.693" endtime="20201112 09:54:31.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.683" endtime="20201112 09:54:31.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:31.715" level="INFO">${RESULT} = [{'time': 0.036943986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036952944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:31.706" endtime="20201112 09:54:31.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:31.746" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:31.717" endtime="20201112 09:54:31.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.757" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:31.754" endtime="20201112 09:54:31.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.762" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.420000000061487e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:54:31.759" endtime="20201112 09:54:31.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.748" endtime="20201112 09:54:31.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.771" endtime="20201112 09:54:31.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:31.779" endtime="20201112 09:54:31.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.775" endtime="20201112 09:54:31.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.766" endtime="20201112 09:54:31.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.141" endtime="20201112 09:54:31.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.774" endtime="20201112 09:54:31.806"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:31.817" endtime="20201112 09:54:31.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.812" endtime="20201112 09:54:31.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.810" endtime="20201112 09:54:31.841"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 09:54:18.583" endtime="20201112 09:54:31.842" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:31.861" endtime="20201112 09:54:31.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.857" endtime="20201112 09:54:31.885"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.920" endtime="20201112 09:54:31.943"></status>
</kw>
<msg timestamp="20201112 09:54:31.944" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.917" endtime="20201112 09:54:31.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.951" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.946" endtime="20201112 09:54:31.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.958" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:31.954" endtime="20201112 09:54:31.959"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:31.908" endtime="20201112 09:54:31.961"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:31.901" endtime="20201112 09:54:31.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.898" endtime="20201112 09:54:31.963"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:31.971" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:31.969" endtime="20201112 09:54:31.972"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.965" endtime="20201112 09:54:31.972"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.896" endtime="20201112 09:54:31.973"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.895" endtime="20201112 09:54:31.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.974" endtime="20201112 09:54:31.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.891" endtime="20201112 09:54:31.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.886" endtime="20201112 09:54:31.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.854" endtime="20201112 09:54:31.982"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 09:54:31.987" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.007" endtime="20201112 09:54:32.021"></status>
</kw>
<msg timestamp="20201112 09:54:32.022" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.004" endtime="20201112 09:54:32.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.029" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.025" endtime="20201112 09:54:32.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.031" endtime="20201112 09:54:32.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.996" endtime="20201112 09:54:32.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.991" endtime="20201112 09:54:32.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.055" endtime="20201112 09:54:32.415"></status>
</kw>
<msg timestamp="20201112 09:54:32.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136831486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136840361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:32.051" endtime="20201112 09:54:32.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136831486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136840361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:32.425" endtime="20201112 09:54:32.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.444" endtime="20201112 09:54:32.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.044" endtime="20201112 09:54:32.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.039" endtime="20201112 09:54:32.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:32.461" level="INFO">${RESULT} = [{'time': 0.136840361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.874999999991529e-06, 'source_diff': 8.874999999991529e-06}, {'time': 0.136854431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:32.452" endtime="20201112 09:54:32.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:32.494" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:32.463" endtime="20201112 09:54:32.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.505" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:32.503" endtime="20201112 09:54:32.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.511" level="INFO">VALUE: [8.874999999991529e-06, 9.236999999995277e-06, 9.541000000001798e-06, 9.111000000006086e-06, 8.889000000011915e-06, 9.02699999999479e-06, 9.235999999995803e-06, 9.56899999998706e-06, 9.05600000000728e-06, 9.194999999989628e-06, 8.707999999996163e-06, 9.223000000002646e-06, 9.207999999982786e-06, 8.735999999981425e-06, 8.707999999996163e-06, 9.486000000002992e-06, 8.721999999988794e-06, 9.055000000007807e-06, 9.207999999982786e-06, 8.889000000011915e-06, 9.05600000000728e-06, 9.05600000000728e-06, 9.37499999997815e-06, 9.223000000002646e-06, 9.542000000001272e-06, 9.179999999997523e-06, 9.541000000001798e-06, 9.375000000005906e-06, 8.707999999996163e-06, 9.388999999998537e-06, 8.88899999998416e-06, 9.388999999998537e-06, 9.222000000003172e-06, 9.041000000015176e-06, 9.4169999999838e-06, 9.554999999994429e-06, 8.819999999992723e-06, 9.05600000000728e-06, 9.222000000003172e-06, 9.222000000003172e-06, 8.653000000025113e-06, 9.028000000022018e-06, 9.403000000018924e-06, 8.723000000016023e-06, 9.542000000001272e-06, 9.388999999998537e-06, 9.402999999991168e-06, 9.597000000000078e-06, 9.542000000001272e-06, 8.874999999991529e-06]</msg>
<status status="PASS" starttime="20201112 09:54:32.507" endtime="20201112 09:54:32.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.496" endtime="20201112 09:54:32.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.519" endtime="20201112 09:54:32.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:32.528" endtime="20201112 09:54:32.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.523" endtime="20201112 09:54:32.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.515" endtime="20201112 09:54:32.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.988" endtime="20201112 09:54:32.554"></status>
</kw>
<msg timestamp="20201112 09:54:32.554" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.574" endtime="20201112 09:54:32.588"></status>
</kw>
<msg timestamp="20201112 09:54:32.589" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.571" endtime="20201112 09:54:32.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.596" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.592" endtime="20201112 09:54:32.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.598" endtime="20201112 09:54:32.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.564" endtime="20201112 09:54:32.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.559" endtime="20201112 09:54:32.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.623" endtime="20201112 09:54:32.970"></status>
</kw>
<msg timestamp="20201112 09:54:32.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037091819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037101208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:32.619" endtime="20201112 09:54:32.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037091819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037101208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:32.980" endtime="20201112 09:54:32.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.998" endtime="20201112 09:54:33.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.611" endtime="20201112 09:54:33.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.606" endtime="20201112 09:54:33.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:33.016" level="INFO">${RESULT} = [{'time': 0.037101208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.037120403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:33.007" endtime="20201112 09:54:33.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:33.050" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:33.019" endtime="20201112 09:54:33.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.060" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:33.058" endtime="20201112 09:54:33.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.065" level="INFO">VALUE: [9.388999999998537e-06, 9.764000000002382e-06, 8.888999999998037e-06, 9.569999999993473e-06, 8.723000000002146e-06, 9.223000000002646e-06, 9.542000000001272e-06, 8.874999999998467e-06, 9.374999999998967e-06, 9.360999999999398e-06, 9.236000000002742e-06, 8.708000000003102e-06, 9.540999999994859e-06, 9.570000000000412e-06, 9.374999999998967e-06, 8.819999999999661e-06, 9.500000000002562e-06, 9.444000000004282e-06, 9.207999999996663e-06, 8.874999999998467e-06, 8.861000000005836e-06, 9.056000000000342e-06, 8.888999999998037e-06, 9.374999999998967e-06, 8.651999999997884e-06, 8.708000000003102e-06, 9.401999999998634e-06, 9.069999999999911e-06, 9.708000000004102e-06, 9.346999999999828e-06, 8.709000000002576e-06, 9.388999999998537e-06, 9.402999999998107e-06, 9.223000000002646e-06, 9.250000000002312e-06, 8.931000000003686e-06, 9.209000000003076e-06, 9.194999999996567e-06, 8.722999999995207e-06, 8.693999999996593e-06, 9.388999999998537e-06, 9.222000000003172e-06, 8.832999999999758e-06, 9.056000000000342e-06, 8.709000000002576e-06, 9.485999999996053e-06, 9.527000000002228e-06, 9.221999999996233e-06, 8.833999999999231e-06, 8.860999999998898e-06]</msg>
<status status="PASS" starttime="20201112 09:54:33.062" endtime="20201112 09:54:33.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.052" endtime="20201112 09:54:33.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.074" endtime="20201112 09:54:33.077"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:33.083" endtime="20201112 09:54:33.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.078" endtime="20201112 09:54:33.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.070" endtime="20201112 09:54:33.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.555" endtime="20201112 09:54:33.109"></status>
</kw>
<msg timestamp="20201112 09:54:33.109" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.129" endtime="20201112 09:54:33.143"></status>
</kw>
<msg timestamp="20201112 09:54:33.144" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.126" endtime="20201112 09:54:33.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.151" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.147" endtime="20201112 09:54:33.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.153" endtime="20201112 09:54:33.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.118" endtime="20201112 09:54:33.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.114" endtime="20201112 09:54:33.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.177" endtime="20201112 09:54:33.524"></status>
</kw>
<msg timestamp="20201112 09:54:33.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037063875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037073042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:33.174" endtime="20201112 09:54:33.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037063875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037073042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:33.533" endtime="20201112 09:54:33.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.552" endtime="20201112 09:54:33.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.166" endtime="20201112 09:54:33.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.161" endtime="20201112 09:54:33.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:33.570" level="INFO">${RESULT} = [{'time': 0.037073042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.166999999997427e-06, 'source_diff': 9.166999999997427e-06}, {'time': 0.037093056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:33.561" endtime="20201112 09:54:33.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:33.605" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:33.573" endtime="20201112 09:54:33.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.615" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:33.613" endtime="20201112 09:54:33.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.621" level="INFO">VALUE: [9.166999999997427e-06, 9.208999999996137e-06, 9.374999999998967e-06, 8.861000000005836e-06, 9.124999999998717e-06, 9.556000000000842e-06, 8.888999999998037e-06, 8.929999999997273e-06, 8.708000000003102e-06, 9.431000000004186e-06, 9.069999999999911e-06, 9.556000000000842e-06, 9.374999999998967e-06, 9.263999999994943e-06, 9.583999999999981e-06, 9.721999999996733e-06, 9.208999999996137e-06, 9.555000000001368e-06, 9.597000000000078e-06, 9.737000000002716e-06, 9.555000000001368e-06, 9.542000000001272e-06, 8.889000000004976e-06, 9.374999999998967e-06, 9.166999999997427e-06, 9.388999999998537e-06, 9.223000000002646e-06, 9.389000000005476e-06, 9.222000000003172e-06, 9.055000000000868e-06, 9.569000000000938e-06, 9.555000000001368e-06, 8.875000000005406e-06, 8.722000000002672e-06, 9.056000000000342e-06, 9.055000000000868e-06, 9.569000000000938e-06, 9.542000000001272e-06, 9.471999999996483e-06, 9.374999999998967e-06, 9.056000000000342e-06, 8.874999999998467e-06, 9.388999999998537e-06, 9.360999999999398e-06, 9.402999999998107e-06, 9.181000000003936e-06, 8.695000000003006e-06, 9.556000000000842e-06, 9.721999999996733e-06, 9.221999999996233e-06]</msg>
<status status="PASS" starttime="20201112 09:54:33.618" endtime="20201112 09:54:33.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.607" endtime="20201112 09:54:33.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.630" endtime="20201112 09:54:33.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:33.638" endtime="20201112 09:54:33.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.634" endtime="20201112 09:54:33.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.625" endtime="20201112 09:54:33.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.110" endtime="20201112 09:54:33.665"></status>
</kw>
<msg timestamp="20201112 09:54:33.665" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.686" endtime="20201112 09:54:33.700"></status>
</kw>
<msg timestamp="20201112 09:54:33.701" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.683" endtime="20201112 09:54:33.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.708" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.703" endtime="20201112 09:54:33.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.710" endtime="20201112 09:54:33.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.675" endtime="20201112 09:54:33.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.670" endtime="20201112 09:54:33.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.733" endtime="20201112 09:54:34.082"></status>
</kw>
<msg timestamp="20201112 09:54:34.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038492375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038502097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:33.730" endtime="20201112 09:54:34.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038492375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038502097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:34.092" endtime="20201112 09:54:34.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.111" endtime="20201112 09:54:34.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.723" endtime="20201112 09:54:34.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.718" endtime="20201112 09:54:34.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:34.129" level="INFO">${RESULT} = [{'time': 0.038502097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.721999999996733e-06, 'source_diff': 9.721999999996733e-06}, {'time': 0.038516, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:54:34.120" endtime="20201112 09:54:34.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:34.160" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:34.131" endtime="20201112 09:54:34.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.172" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:34.169" endtime="20201112 09:54:34.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.178" level="INFO">VALUE: [9.721999999996733e-06, 9.360999999999398e-06, 9.597000000000078e-06, 9.374999999998967e-06, 8.722000000002672e-06, 9.194999999996567e-06, 8.735999999995303e-06, 9.151999999998384e-06, 9.388999999998537e-06, 9.207999999996663e-06, 9.527999999994763e-06, 9.388999999998537e-06, 9.556000000000842e-06, 9.069999999999911e-06, 9.388999999998537e-06, 9.471999999996483e-06, 8.902999999997607e-06, 8.832999999999758e-06, 9.555000000001368e-06, 9.056000000000342e-06, 9.555000000001368e-06, 9.444999999996817e-06, 9.374999999998967e-06, 9.389000000005476e-06, 9.555000000001368e-06, 8.889000000004976e-06, 9.556000000000842e-06, 8.972000000002922e-06, 9.555000000001368e-06, 8.707999999996163e-06, 9.556000000000842e-06, 8.723000000002146e-06, 8.943999999996843e-06, 8.888999999998037e-06, 8.736000000002242e-06, 9.208000000003602e-06, 9.069000000000438e-06, 9.222000000003172e-06, 8.875000000005406e-06, 8.874999999998467e-06, 8.721999999995733e-06, 9.388999999998537e-06, 8.889000000004976e-06, 9.542000000001272e-06, 9.597999999999551e-06, 9.582999999993569e-06, 9.542000000001272e-06, 9.374999999998967e-06, 9.569000000000938e-06, 8.888999999998037e-06]</msg>
<status status="PASS" starttime="20201112 09:54:34.174" endtime="20201112 09:54:34.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.162" endtime="20201112 09:54:34.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.187" endtime="20201112 09:54:34.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:34.195" endtime="20201112 09:54:34.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.191" endtime="20201112 09:54:34.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.182" endtime="20201112 09:54:34.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.666" endtime="20201112 09:54:34.221"></status>
</kw>
<msg timestamp="20201112 09:54:34.221" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.241" endtime="20201112 09:54:34.255"></status>
</kw>
<msg timestamp="20201112 09:54:34.256" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.238" endtime="20201112 09:54:34.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.263" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.259" endtime="20201112 09:54:34.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.265" endtime="20201112 09:54:34.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.230" endtime="20201112 09:54:34.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.226" endtime="20201112 09:54:34.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.289" endtime="20201112 09:54:34.637"></status>
</kw>
<msg timestamp="20201112 09:54:34.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037063306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037072361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:34.285" endtime="20201112 09:54:34.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037063306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037072361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:34.647" endtime="20201112 09:54:34.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.666" endtime="20201112 09:54:34.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.278" endtime="20201112 09:54:34.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.273" endtime="20201112 09:54:34.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:34.685" level="INFO">${RESULT} = [{'time': 0.037072361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.055000000000868e-06, 'source_diff': 9.055000000000868e-06}, {'time': 0.037088472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:34.675" endtime="20201112 09:54:34.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:34.717" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:34.687" endtime="20201112 09:54:34.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.727" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:34.725" endtime="20201112 09:54:34.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.733" level="INFO">VALUE: [9.055000000000868e-06, 9.402999999998107e-06, 9.374999999998967e-06, 9.556000000000842e-06, 9.195000000003506e-06, 9.403000000005046e-06, 9.542000000001272e-06, 9.36200000000581e-06, 9.236000000002742e-06, 9.083999999999481e-06, 9.221999999996233e-06, 9.055000000000868e-06, 9.235999999995803e-06, 9.583000000000508e-06, 9.374999999998967e-06, 9.056000000000342e-06, 8.901999999998134e-06, 9.207999999996663e-06, 8.708999999995637e-06, 9.402999999998107e-06, 9.041999999993833e-06, 9.207999999996663e-06, 9.570000000000412e-06, 8.86200000000531e-06, 9.042000000000772e-06, 9.250000000002312e-06, 9.055000000000868e-06, 8.722000000002672e-06, 9.236000000002742e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.888000000005503e-06, 9.555000000001368e-06, 9.042000000000772e-06, 9.555000000001368e-06, 8.722999999995207e-06, 9.014000000001632e-06, 8.722000000002672e-06, 9.069000000000438e-06, 8.902999999997607e-06, 8.736000000002242e-06, 8.888999999998037e-06, 9.542000000001272e-06, 9.041999999993833e-06, 9.708000000004102e-06, 8.888999999998037e-06, 9.221999999996233e-06, 9.194999999996567e-06, 9.027000000001728e-06, 9.388999999998537e-06]</msg>
<status status="PASS" starttime="20201112 09:54:34.730" endtime="20201112 09:54:34.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.719" endtime="20201112 09:54:34.735"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.743" endtime="20201112 09:54:34.746"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:34.752" endtime="20201112 09:54:34.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.747" endtime="20201112 09:54:34.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.737" endtime="20201112 09:54:34.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.222" endtime="20201112 09:54:34.778"></status>
</kw>
<msg timestamp="20201112 09:54:34.778" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.798" endtime="20201112 09:54:34.812"></status>
</kw>
<msg timestamp="20201112 09:54:34.813" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.795" endtime="20201112 09:54:34.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.820" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.816" endtime="20201112 09:54:34.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.822" endtime="20201112 09:54:34.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.787" endtime="20201112 09:54:34.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.783" endtime="20201112 09:54:34.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.846" endtime="20201112 09:54:35.193"></status>
</kw>
<msg timestamp="20201112 09:54:35.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037093292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037102181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:34.842" endtime="20201112 09:54:35.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037093292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037102181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.203" endtime="20201112 09:54:35.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.222" endtime="20201112 09:54:35.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.835" endtime="20201112 09:54:35.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.830" endtime="20201112 09:54:35.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:35.239" level="INFO">${RESULT} = [{'time': 0.037102181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.037121153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:35.230" endtime="20201112 09:54:35.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:35.271" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:35.241" endtime="20201112 09:54:35.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.281" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:35.279" endtime="20201112 09:54:35.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.287" level="INFO">VALUE: [8.888999999998037e-06, 9.249999999995373e-06, 8.889000000004976e-06, 9.291000000001548e-06, 9.333000000000258e-06, 9.222000000003172e-06, 9.056000000000342e-06, 9.388999999998537e-06, 9.042000000000772e-06, 9.388999999998537e-06, 8.888999999998037e-06, 9.014000000001632e-06, 8.888999999998037e-06, 8.874999999998467e-06, 9.374999999998967e-06, 8.874999999998467e-06, 8.709000000002576e-06, 8.902999999997607e-06, 9.042000000000772e-06, 9.056000000000342e-06, 9.056000000000342e-06, 8.846999999999328e-06, 8.985999999995553e-06, 9.707999999997163e-06, 9.542000000001272e-06, 9.221999999996233e-06, 9.388999999998537e-06, 9.583000000000508e-06, 9.041000000001298e-06, 9.374999999998967e-06, 9.388999999998537e-06, 8.750000000001812e-06, 9.042000000000772e-06, 8.722000000002672e-06, 9.388999999998537e-06, 9.374999999998967e-06, 8.917000000004116e-06, 8.889000000004976e-06, 9.042000000000772e-06, 9.056000000000342e-06, 9.236000000002742e-06, 9.056000000000342e-06, 9.209000000003076e-06, 9.042000000000772e-06, 9.207999999996663e-06, 8.723000000002146e-06, 9.208000000003602e-06, 8.750000000001812e-06, 8.874999999998467e-06, 8.792000000000522e-06]</msg>
<status status="PASS" starttime="20201112 09:54:35.284" endtime="20201112 09:54:35.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.273" endtime="20201112 09:54:35.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.296" endtime="20201112 09:54:35.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:35.304" endtime="20201112 09:54:35.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.300" endtime="20201112 09:54:35.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.291" endtime="20201112 09:54:35.330"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.779" endtime="20201112 09:54:35.331"></status>
</kw>
<msg timestamp="20201112 09:54:35.332" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.352" endtime="20201112 09:54:35.366"></status>
</kw>
<msg timestamp="20201112 09:54:35.367" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.348" endtime="20201112 09:54:35.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.373" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.369" endtime="20201112 09:54:35.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.375" endtime="20201112 09:54:35.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.341" endtime="20201112 09:54:35.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.336" endtime="20201112 09:54:35.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.400" endtime="20201112 09:54:35.748"></status>
</kw>
<msg timestamp="20201112 09:54:35.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037099889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037109472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.397" endtime="20201112 09:54:35.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037099889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037109472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.758" endtime="20201112 09:54:35.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.777" endtime="20201112 09:54:35.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.389" endtime="20201112 09:54:35.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.384" endtime="20201112 09:54:35.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:35.794" level="INFO">${RESULT} = [{'time': 0.037109472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.037123444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:35.785" endtime="20201112 09:54:35.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:35.827" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:35.796" endtime="20201112 09:54:35.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.838" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:35.835" endtime="20201112 09:54:35.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.843" level="INFO">VALUE: [9.583000000000508e-06, 9.374999999998967e-06, 9.236000000002742e-06, 9.568999999993999e-06, 8.888999999998037e-06, 9.541999999994333e-06, 8.860999999998898e-06, 9.207999999996663e-06, 8.874999999998467e-06, 9.707999999997163e-06, 9.207999999996663e-06, 8.874999999998467e-06, 8.916999999997177e-06, 9.083999999999481e-06, 9.541000000001798e-06, 9.541999999994333e-06, 9.222000000003172e-06, 9.708999999996637e-06, 8.792000000000522e-06, 8.832999999999758e-06, 9.055000000000868e-06, 8.736000000002242e-06, 9.042000000000772e-06, 9.056000000000342e-06, 9.555999999993903e-06, 9.319000000000688e-06, 8.874999999998467e-06, 9.083999999999481e-06, 9.375000000005906e-06, 9.237000000002216e-06, 9.556000000000842e-06, 9.236000000002742e-06, 9.375000000005906e-06, 9.375000000005906e-06, 9.237000000002216e-06, 8.860999999998898e-06, 9.041000000001298e-06, 8.750000000001812e-06, 9.056000000000342e-06, 9.388999999998537e-06, 9.402999999998107e-06, 9.056000000000342e-06, 9.374999999998967e-06, 8.723000000002146e-06, 8.749999999994873e-06, 9.028000000001202e-06, 9.402999999998107e-06, 9.235999999995803e-06, 8.681000000003436e-06, 9.388999999998537e-06]</msg>
<status status="PASS" starttime="20201112 09:54:35.840" endtime="20201112 09:54:35.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.829" endtime="20201112 09:54:35.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.852" endtime="20201112 09:54:35.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:35.861" endtime="20201112 09:54:35.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.856" endtime="20201112 09:54:35.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.848" endtime="20201112 09:54:35.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.333" endtime="20201112 09:54:35.887"></status>
</kw>
<msg timestamp="20201112 09:54:35.887" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.909" endtime="20201112 09:54:35.923"></status>
</kw>
<msg timestamp="20201112 09:54:35.924" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.905" endtime="20201112 09:54:35.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.931" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.926" endtime="20201112 09:54:35.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.934" endtime="20201112 09:54:35.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.898" endtime="20201112 09:54:35.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.892" endtime="20201112 09:54:35.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.957" endtime="20201112 09:54:36.306"></status>
</kw>
<msg timestamp="20201112 09:54:36.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038858694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038867403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.954" endtime="20201112 09:54:36.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038858694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038867403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.315" endtime="20201112 09:54:36.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.334" endtime="20201112 09:54:36.338"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.947" endtime="20201112 09:54:36.340"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.942" endtime="20201112 09:54:36.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:36.352" level="INFO">${RESULT} = [{'time': 0.038867403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.709000000002576e-06, 'source_diff': 8.709000000002576e-06}, {'time': 0.038881556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:36.343" endtime="20201112 09:54:36.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:36.383" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:36.354" endtime="20201112 09:54:36.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.394" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:36.391" endtime="20201112 09:54:36.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.399" level="INFO">VALUE: [8.709000000002576e-06, 9.222999999995707e-06, 9.055000000000868e-06, 8.874999999998467e-06, 9.236000000002742e-06, 8.707999999996163e-06, 9.041000000001298e-06, 9.208000000003602e-06, 9.542000000001272e-06, 9.360999999999398e-06, 8.735999999995303e-06, 8.916999999997177e-06, 8.709000000002576e-06, 9.360999999999398e-06, 9.33400000000667e-06, 9.527000000002228e-06, 9.388999999998537e-06, 9.401999999998634e-06, 8.875000000005406e-06, 9.570000000000412e-06, 8.875000000005406e-06, 8.777000000001478e-06, 9.208000000003602e-06, 9.194000000004032e-06, 9.042000000000772e-06, 9.055000000000868e-06, 9.056000000000342e-06, 9.028000000001202e-06, 8.763000000001908e-06, 8.874999999998467e-06, 9.540999999994859e-06, 9.222000000003172e-06, 9.388999999998537e-06, 9.041999999993833e-06, 8.722000000002672e-06, 8.736000000002242e-06, 8.874999999998467e-06, 8.888999999998037e-06, 9.387999999999064e-06, 9.735999999996303e-06, 8.722000000002672e-06, 9.208999999996137e-06, 8.902999999997607e-06, 9.195000000003506e-06, 8.721999999995733e-06, 9.528000000001702e-06, 9.542000000001272e-06, 8.694999999996067e-06, 9.055999999993403e-06, 8.736000000002242e-06]</msg>
<status status="PASS" starttime="20201112 09:54:36.396" endtime="20201112 09:54:36.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.385" endtime="20201112 09:54:36.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.408" endtime="20201112 09:54:36.411"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:36.417" endtime="20201112 09:54:36.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.412" endtime="20201112 09:54:36.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.404" endtime="20201112 09:54:36.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.888" endtime="20201112 09:54:36.443"></status>
</kw>
<msg timestamp="20201112 09:54:36.443" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.463" endtime="20201112 09:54:36.478"></status>
</kw>
<msg timestamp="20201112 09:54:36.479" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.460" endtime="20201112 09:54:36.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.486" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.482" endtime="20201112 09:54:36.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.488" endtime="20201112 09:54:36.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.453" endtime="20201112 09:54:36.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.448" endtime="20201112 09:54:36.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.513" endtime="20201112 09:54:36.863"></status>
</kw>
<msg timestamp="20201112 09:54:36.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037976069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037985472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.510" endtime="20201112 09:54:36.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037976069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037985472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.873" endtime="20201112 09:54:36.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.892" endtime="20201112 09:54:36.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.503" endtime="20201112 09:54:36.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.498" endtime="20201112 09:54:36.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:36.909" level="INFO">${RESULT} = [{'time': 0.037985472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.038000514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:36.900" endtime="20201112 09:54:36.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:36.941" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:36.912" endtime="20201112 09:54:36.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.951" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:36.949" endtime="20201112 09:54:36.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.956" level="INFO">VALUE: [9.402999999998107e-06, 8.736000000002242e-06, 9.014000000001632e-06, 9.222000000003172e-06, 9.236000000002742e-06, 8.722000000002672e-06, 9.180000000004462e-06, 9.278000000001452e-06, 9.209000000003076e-06, 8.680999999996497e-06, 9.556000000000842e-06, 9.139000000005226e-06, 9.556000000000842e-06, 9.570000000000412e-06, 8.874999999998467e-06, 9.055000000000868e-06, 9.223000000002646e-06, 9.722000000003672e-06, 9.388999999998537e-06, 8.637999999998314e-06, 9.555000000001368e-06, 9.721999999996733e-06, 9.209000000003076e-06, 9.542000000001272e-06, 9.556000000000842e-06, 8.860999999998898e-06, 8.931000000003686e-06, 9.235999999995803e-06, 9.402999999998107e-06, 8.874999999998467e-06, 8.888999999998037e-06, 9.02699999999479e-06, 9.375000000005906e-06, 9.208000000003602e-06, 8.889000000004976e-06, 8.694000000003532e-06, 9.222999999995707e-06, 9.209000000003076e-06, 9.541999999994333e-06, 8.874999999998467e-06, 9.041000000001298e-06, 8.888000000005503e-06, 9.207999999996663e-06, 9.556000000000842e-06, 8.888999999998037e-06, 8.875000000005406e-06, 8.749999999994873e-06, 9.000000000002062e-06, 9.583000000000508e-06, 9.250000000002312e-06]</msg>
<status status="PASS" starttime="20201112 09:54:36.953" endtime="20201112 09:54:36.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.942" endtime="20201112 09:54:36.959"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.965" endtime="20201112 09:54:36.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:36.974" endtime="20201112 09:54:36.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.969" endtime="20201112 09:54:36.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.961" endtime="20201112 09:54:36.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.444" endtime="20201112 09:54:37.000"></status>
</kw>
<msg timestamp="20201112 09:54:37.000" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.021" endtime="20201112 09:54:37.035"></status>
</kw>
<msg timestamp="20201112 09:54:37.037" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.018" endtime="20201112 09:54:37.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.043" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.039" endtime="20201112 09:54:37.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.045" endtime="20201112 09:54:37.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.010" endtime="20201112 09:54:37.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.005" endtime="20201112 09:54:37.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.071" endtime="20201112 09:54:37.421"></status>
</kw>
<msg timestamp="20201112 09:54:37.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038225861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038235597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:37.067" endtime="20201112 09:54:37.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038225861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038235597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:37.432" endtime="20201112 09:54:37.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.452" endtime="20201112 09:54:37.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.058" endtime="20201112 09:54:37.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.053" endtime="20201112 09:54:37.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:37.471" level="INFO">${RESULT} = [{'time': 0.038235597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.736000000003242e-06, 'source_diff': 9.736000000003242e-06}, {'time': 0.038249556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:37.461" endtime="20201112 09:54:37.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:37.501" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:37.473" endtime="20201112 09:54:37.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.512" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:37.509" endtime="20201112 09:54:37.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.517" level="INFO">VALUE: [9.736000000003242e-06, 8.736999999994777e-06, 9.555000000001368e-06, 9.500000000002562e-06, 9.583000000000508e-06, 8.888999999998037e-06, 8.708000000003102e-06, 9.222000000003172e-06, 9.042000000000772e-06, 8.681000000003436e-06, 8.902999999997607e-06, 9.375000000005906e-06, 8.693999999996593e-06, 8.902999999997607e-06, 8.985999999995553e-06, 9.402999999998107e-06, 9.708000000004102e-06, 9.056000000000342e-06, 9.556000000000842e-06, 9.556000000000842e-06, 9.208999999996137e-06, 9.556000000000842e-06, 9.222000000003172e-06, 8.707999999996163e-06, 8.902999999997607e-06, 9.389000000005476e-06, 9.388999999998537e-06, 9.208000000003602e-06, 8.722000000002672e-06, 9.208000000003602e-06, 8.722000000002672e-06, 9.056000000000342e-06, 9.388999999998537e-06, 9.222000000003172e-06, 9.416999999997677e-06, 9.709000000003576e-06, 9.222999999995707e-06, 9.556000000000842e-06, 9.056000000000342e-06, 9.388999999998537e-06, 9.223000000002646e-06, 9.221999999996233e-06, 9.069999999999911e-06, 9.388999999998537e-06, 9.165999999997954e-06, 9.514000000002132e-06, 9.042000000000772e-06, 9.221999999996233e-06, 9.222000000003172e-06, 9.250000000002312e-06]</msg>
<status status="PASS" starttime="20201112 09:54:37.514" endtime="20201112 09:54:37.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.503" endtime="20201112 09:54:37.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.526" endtime="20201112 09:54:37.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:37.535" endtime="20201112 09:54:37.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.530" endtime="20201112 09:54:37.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.522" endtime="20201112 09:54:37.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.002" endtime="20201112 09:54:37.561"></status>
</kw>
<msg timestamp="20201112 09:54:37.562" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.582" endtime="20201112 09:54:37.596"></status>
</kw>
<msg timestamp="20201112 09:54:37.597" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.578" endtime="20201112 09:54:37.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.603" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.599" endtime="20201112 09:54:37.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.606" endtime="20201112 09:54:37.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.571" endtime="20201112 09:54:37.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.566" endtime="20201112 09:54:37.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.629" endtime="20201112 09:54:37.980"></status>
</kw>
<msg timestamp="20201112 09:54:37.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037276097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037285444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:37.626" endtime="20201112 09:54:37.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037276097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037285444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:37.990" endtime="20201112 09:54:38.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.009" endtime="20201112 09:54:38.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.619" endtime="20201112 09:54:38.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.614" endtime="20201112 09:54:38.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:38.027" level="INFO">${RESULT} = [{'time': 0.037285444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.037301556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:38.018" endtime="20201112 09:54:38.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:38.060" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:38.029" endtime="20201112 09:54:38.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.070" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:38.068" endtime="20201112 09:54:38.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.076" level="INFO">VALUE: [9.346999999999828e-06, 9.388999999998537e-06, 9.709000000003576e-06, 8.931000000003686e-06, 9.236000000002742e-06, 9.542000000001272e-06, 9.637999999999314e-06, 9.222000000003172e-06, 9.042000000000772e-06, 9.208000000003602e-06, 8.806000000000092e-06, 8.707999999996163e-06, 8.887999999998564e-06, 9.374999999998967e-06, 9.387999999999064e-06, 9.542000000001272e-06, 8.875000000005406e-06, 9.069000000000438e-06, 8.680000000003962e-06, 9.361000000006336e-06, 8.861000000005836e-06, 9.223000000002646e-06, 9.235999999995803e-06, 9.417000000004616e-06, 9.165999999997954e-06, 9.764000000002382e-06, 9.402999999998107e-06, 8.735999999995303e-06, 8.707999999996163e-06, 8.721999999995733e-06, 9.387999999999064e-06, 9.388999999998537e-06, 9.069000000000438e-06, 9.417000000004616e-06, 8.778000000000952e-06, 9.360999999999398e-06, 9.402999999998107e-06, 8.931000000003686e-06, 9.209000000003076e-06, 9.055000000000868e-06, 9.264000000001882e-06, 9.056000000000342e-06, 9.222000000003172e-06, 8.709000000002576e-06, 9.221999999996233e-06, 9.346999999999828e-06, 8.916999999997177e-06, 8.875000000005406e-06, 9.610999999999648e-06, 9.541999999994333e-06]</msg>
<status status="PASS" starttime="20201112 09:54:38.073" endtime="20201112 09:54:38.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.062" endtime="20201112 09:54:38.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.085" endtime="20201112 09:54:38.088"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:38.094" endtime="20201112 09:54:38.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.090" endtime="20201112 09:54:38.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.081" endtime="20201112 09:54:38.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.563" endtime="20201112 09:54:38.120"></status>
</kw>
<msg timestamp="20201112 09:54:38.120" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.140" endtime="20201112 09:54:38.154"></status>
</kw>
<msg timestamp="20201112 09:54:38.156" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.137" endtime="20201112 09:54:38.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.162" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.158" endtime="20201112 09:54:38.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.164" endtime="20201112 09:54:38.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.130" endtime="20201112 09:54:38.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.125" endtime="20201112 09:54:38.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.188" endtime="20201112 09:54:38.536"></status>
</kw>
<msg timestamp="20201112 09:54:38.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037164931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037173667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:38.184" endtime="20201112 09:54:38.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037164931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037173667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:38.545" endtime="20201112 09:54:38.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.564" endtime="20201112 09:54:38.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.177" endtime="20201112 09:54:38.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.172" endtime="20201112 09:54:38.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:38.582" level="INFO">${RESULT} = [{'time': 0.037173667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.037191764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:38.573" endtime="20201112 09:54:38.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:38.614" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:38.584" endtime="20201112 09:54:38.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.625" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:38.623" endtime="20201112 09:54:38.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.630" level="INFO">VALUE: [8.736000000002242e-06, 8.889000000004976e-06, 9.208999999996137e-06, 8.888999999998037e-06, 9.374999999998967e-06, 8.723000000002146e-06, 8.888999999998037e-06, 8.723000000002146e-06, 9.569000000000938e-06, 9.207999999996663e-06, 8.860999999998898e-06, 9.388999999998537e-06, 9.555000000001368e-06, 9.207999999996663e-06, 9.402999999998107e-06, 9.221999999996233e-06, 9.042000000000772e-06, 9.374999999998967e-06, 9.014000000001632e-06, 8.874999999998467e-06, 9.542000000001272e-06, 8.721999999995733e-06, 9.388999999998537e-06, 9.556000000000842e-06, 9.388999999998537e-06, 8.901999999998134e-06, 9.555000000001368e-06, 8.708999999995637e-06, 9.055000000000868e-06, 9.194999999996567e-06, 9.221999999996233e-06, 9.556000000000842e-06, 9.583000000000508e-06, 9.347999999999301e-06, 9.569000000000938e-06, 9.194000000004032e-06, 9.291000000001548e-06, 8.875000000005406e-06, 9.221999999996233e-06, 9.541999999994333e-06, 8.735999999995303e-06, 9.583999999999981e-06, 9.555000000001368e-06, 9.542000000001272e-06, 9.000000000002062e-06, 8.902999999997607e-06, 9.722000000003672e-06, 8.721999999995733e-06, 9.222000000003172e-06, 8.722000000002672e-06]</msg>
<status status="PASS" starttime="20201112 09:54:38.627" endtime="20201112 09:54:38.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.616" endtime="20201112 09:54:38.634"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.640" endtime="20201112 09:54:38.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:38.649" endtime="20201112 09:54:38.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.644" endtime="20201112 09:54:38.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.635" endtime="20201112 09:54:38.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.121" endtime="20201112 09:54:38.674"></status>
</kw>
<msg timestamp="20201112 09:54:38.675" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.695" endtime="20201112 09:54:38.709"></status>
</kw>
<msg timestamp="20201112 09:54:38.710" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.692" endtime="20201112 09:54:38.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.717" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.713" endtime="20201112 09:54:38.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.719" endtime="20201112 09:54:38.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.684" endtime="20201112 09:54:38.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.680" endtime="20201112 09:54:38.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.743" endtime="20201112 09:54:39.091"></status>
</kw>
<msg timestamp="20201112 09:54:39.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037089875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037098931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:38.739" endtime="20201112 09:54:39.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037089875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037098931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.101" endtime="20201112 09:54:39.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.120" endtime="20201112 09:54:39.124"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.732" endtime="20201112 09:54:39.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.727" endtime="20201112 09:54:39.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:39.137" level="INFO">${RESULT} = [{'time': 0.037098931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.056000000000342e-06, 'source_diff': 9.056000000000342e-06}, {'time': 0.037113958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:39.128" endtime="20201112 09:54:39.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:39.170" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:39.139" endtime="20201112 09:54:39.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.180" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:39.178" endtime="20201112 09:54:39.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.186" level="INFO">VALUE: [9.056000000000342e-06, 9.555000000001368e-06, 8.888999999998037e-06, 9.221999999996233e-06, 9.083000000000008e-06, 9.387999999999064e-06, 8.958000000003352e-06, 8.874999999998467e-06, 9.556000000000842e-06, 8.888999999998037e-06, 9.583000000000508e-06, 9.333000000000258e-06, 8.874999999998467e-06, 9.138999999998287e-06, 9.221999999996233e-06, 9.389000000005476e-06, 8.707999999996163e-06, 8.888999999998037e-06, 9.388999999998537e-06, 9.554999999994429e-06, 9.055000000000868e-06, 9.346999999999828e-06, 9.723000000003146e-06, 9.208000000003602e-06, 9.374999999998967e-06, 9.721999999996733e-06, 9.485999999996053e-06, 8.806000000000092e-06, 9.236000000002742e-06, 9.222999999995707e-06, 9.056000000000342e-06, 8.902999999997607e-06, 9.208000000003602e-06, 9.222000000003172e-06, 9.569000000000938e-06, 9.042000000000772e-06, 9.056000000000342e-06, 9.569000000000938e-06, 8.722000000002672e-06, 9.056000000000342e-06, 8.888999999998037e-06, 9.042000000000772e-06, 8.902999999997607e-06, 9.374999999998967e-06, 9.583000000000508e-06, 9.346999999999828e-06, 9.389000000005476e-06, 9.360999999999398e-06, 9.055000000000868e-06, 9.374999999998967e-06]</msg>
<status status="PASS" starttime="20201112 09:54:39.183" endtime="20201112 09:54:39.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.172" endtime="20201112 09:54:39.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.196" endtime="20201112 09:54:39.198"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:39.204" endtime="20201112 09:54:39.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.200" endtime="20201112 09:54:39.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.191" endtime="20201112 09:54:39.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.676" endtime="20201112 09:54:39.230"></status>
</kw>
<msg timestamp="20201112 09:54:39.230" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.250" endtime="20201112 09:54:39.265"></status>
</kw>
<msg timestamp="20201112 09:54:39.266" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.247" endtime="20201112 09:54:39.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.272" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.268" endtime="20201112 09:54:39.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.274" endtime="20201112 09:54:39.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.240" endtime="20201112 09:54:39.280"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.235" endtime="20201112 09:54:39.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.298" endtime="20201112 09:54:39.645"></status>
</kw>
<msg timestamp="20201112 09:54:39.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037200389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037209444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.295" endtime="20201112 09:54:39.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037200389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037209444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.655" endtime="20201112 09:54:39.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.674" endtime="20201112 09:54:39.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.287" endtime="20201112 09:54:39.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.283" endtime="20201112 09:54:39.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:39.691" level="INFO">${RESULT} = [{'time': 0.037209444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.055000000000868e-06, 'source_diff': 9.055000000000868e-06}, {'time': 0.037223347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:39.682" endtime="20201112 09:54:39.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:39.724" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:39.693" endtime="20201112 09:54:39.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.734" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:39.732" endtime="20201112 09:54:39.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.740" level="INFO">VALUE: [9.055000000000868e-06, 9.374999999998967e-06, 9.096999999999578e-06, 9.069999999999911e-06, 8.721999999995733e-06, 9.540999999994859e-06, 9.569000000000938e-06, 9.402999999998107e-06, 8.889000000004976e-06, 9.556000000000842e-06, 9.528000000001702e-06, 9.237000000002216e-06, 9.374999999998967e-06, 9.375000000005906e-06, 9.222999999995707e-06, 9.554999999994429e-06, 9.056000000000342e-06, 9.041999999993833e-06, 8.860999999998898e-06, 9.222000000003172e-06, 9.694999999997067e-06, 9.610999999999648e-06, 9.221999999996233e-06, 8.888999999998037e-06, 9.541000000001798e-06, 9.264000000001882e-06, 9.278000000001452e-06, 8.917000000004116e-06, 8.707999999996163e-06, 9.000000000002062e-06, 9.416999999997677e-06, 9.056000000000342e-06, 9.486000000002992e-06, 9.042000000000772e-06, 9.028000000001202e-06, 9.541000000001798e-06, 9.360999999999398e-06, 9.555000000001368e-06, 8.888999999998037e-06, 9.193999999997093e-06, 8.874999999998467e-06, 9.555000000001368e-06, 9.722000000003672e-06, 9.208000000003602e-06, 9.208999999996137e-06, 9.666999999997927e-06, 8.889000000004976e-06, 9.541000000001798e-06, 9.207999999996663e-06, 9.583000000000508e-06]</msg>
<status status="PASS" starttime="20201112 09:54:39.736" endtime="20201112 09:54:39.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.726" endtime="20201112 09:54:39.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.749" endtime="20201112 09:54:39.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:39.758" endtime="20201112 09:54:39.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.753" endtime="20201112 09:54:39.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.745" endtime="20201112 09:54:39.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.231" endtime="20201112 09:54:39.784"></status>
</kw>
<msg timestamp="20201112 09:54:39.784" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.804" endtime="20201112 09:54:39.818"></status>
</kw>
<msg timestamp="20201112 09:54:39.820" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.801" endtime="20201112 09:54:39.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.826" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.822" endtime="20201112 09:54:39.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.828" endtime="20201112 09:54:39.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.794" endtime="20201112 09:54:39.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.789" endtime="20201112 09:54:39.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.853" endtime="20201112 09:54:40.199"></status>
</kw>
<msg timestamp="20201112 09:54:40.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037061472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037070639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.849" endtime="20201112 09:54:40.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037061472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037070639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.209" endtime="20201112 09:54:40.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.227" endtime="20201112 09:54:40.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.841" endtime="20201112 09:54:40.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.836" endtime="20201112 09:54:40.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:40.245" level="INFO">${RESULT} = [{'time': 0.037070639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.167000000004366e-06, 'source_diff': 9.167000000004366e-06}, {'time': 0.037088667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:40.236" endtime="20201112 09:54:40.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:40.278" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:40.247" endtime="20201112 09:54:40.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.290" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:40.288" endtime="20201112 09:54:40.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.295" level="INFO">VALUE: [9.167000000004366e-06, 8.708999999995637e-06, 9.055000000000868e-06, 9.209000000003076e-06, 9.056000000000342e-06, 8.721999999995733e-06, 8.888999999998037e-06, 8.722000000002672e-06, 9.208000000003602e-06, 9.194000000004032e-06, 8.681000000003436e-06, 9.221999999996233e-06, 9.541999999994333e-06, 9.555000000001368e-06, 9.388999999998537e-06, 9.374999999998967e-06, 9.195000000003506e-06, 9.402999999998107e-06, 9.735999999996303e-06, 9.388999999998537e-06, 9.569000000000938e-06, 9.096999999999578e-06, 9.389000000005476e-06, 9.555000000001368e-06, 9.555000000001368e-06, 9.541000000001798e-06, 9.570000000000412e-06, 9.222000000003172e-06, 9.387999999999064e-06, 8.986000000002492e-06, 9.235999999995803e-06, 8.874999999998467e-06, 9.041000000001298e-06, 8.916999999997177e-06, 9.374999999998967e-06, 8.888999999998037e-06, 9.556000000000842e-06, 8.694999999996067e-06, 8.667000000003866e-06, 9.042000000000772e-06, 9.221999999996233e-06, 9.570000000000412e-06, 9.374999999998967e-06, 9.096999999999578e-06, 9.222000000003172e-06, 9.096999999999578e-06, 8.874999999998467e-06, 9.556000000000842e-06, 9.264000000001882e-06, 8.764000000001382e-06]</msg>
<status status="PASS" starttime="20201112 09:54:40.292" endtime="20201112 09:54:40.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.280" endtime="20201112 09:54:40.299"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.305" endtime="20201112 09:54:40.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:40.314" endtime="20201112 09:54:40.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.309" endtime="20201112 09:54:40.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.301" endtime="20201112 09:54:40.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.785" endtime="20201112 09:54:40.340"></status>
</kw>
<msg timestamp="20201112 09:54:40.340" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.360" endtime="20201112 09:54:40.374"></status>
</kw>
<msg timestamp="20201112 09:54:40.375" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.357" endtime="20201112 09:54:40.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.382" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.378" endtime="20201112 09:54:40.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.384" endtime="20201112 09:54:40.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.349" endtime="20201112 09:54:40.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.345" endtime="20201112 09:54:40.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.408" endtime="20201112 09:54:40.755"></status>
</kw>
<msg timestamp="20201112 09:54:40.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037062986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037072514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.404" endtime="20201112 09:54:40.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037062986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037072514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.765" endtime="20201112 09:54:40.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.784" endtime="20201112 09:54:40.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.397" endtime="20201112 09:54:40.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.392" endtime="20201112 09:54:40.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:40.802" level="INFO">${RESULT} = [{'time': 0.037072514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.037088542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:40.792" endtime="20201112 09:54:40.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:40.833" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:40.804" endtime="20201112 09:54:40.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.844" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:40.841" endtime="20201112 09:54:40.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.850" level="INFO">VALUE: [9.528000000001702e-06, 8.889000000004976e-06, 9.555000000001368e-06, 9.056000000000342e-06, 9.389000000005476e-06, 9.556000000000842e-06, 8.708000000003102e-06, 9.124999999998717e-06, 9.222000000003172e-06, 9.374999999998967e-06, 9.042000000000772e-06, 9.193999999997093e-06, 9.541000000001798e-06, 9.207999999996663e-06, 9.014000000001632e-06, 9.235999999995803e-06, 8.888999999998037e-06, 9.069999999999911e-06, 9.569000000000938e-06, 8.874999999998467e-06, 9.042000000000772e-06, 8.680999999996497e-06, 9.374999999998967e-06, 8.750000000001812e-06, 8.874999999998467e-06, 9.056000000000342e-06, 8.721999999995733e-06, 9.707999999997163e-06, 9.638999999998787e-06, 9.555000000001368e-06, 9.222000000003172e-06, 9.042000000000772e-06, 9.416000000005142e-06, 9.207999999996663e-06, 9.360999999999398e-06, 9.388999999998537e-06, 9.223000000002646e-06, 9.707999999997163e-06, 8.681000000003436e-06, 8.889000000004976e-06, 9.555000000001368e-06, 9.222000000003172e-06, 8.888999999998037e-06, 9.541999999994333e-06, 9.417000000004616e-06, 8.874999999998467e-06, 8.721999999995733e-06, 8.875000000005406e-06, 9.193999999997093e-06, 9.153000000004796e-06]</msg>
<status status="PASS" starttime="20201112 09:54:40.846" endtime="20201112 09:54:40.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.835" endtime="20201112 09:54:40.854"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.860" endtime="20201112 09:54:40.863"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:40.868" endtime="20201112 09:54:40.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.864" endtime="20201112 09:54:40.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.855" endtime="20201112 09:54:40.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.341" endtime="20201112 09:54:40.895"></status>
</kw>
<msg timestamp="20201112 09:54:40.895" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.916" endtime="20201112 09:54:40.930"></status>
</kw>
<msg timestamp="20201112 09:54:40.931" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.913" endtime="20201112 09:54:40.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.938" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.934" endtime="20201112 09:54:40.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.940" endtime="20201112 09:54:40.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.905" endtime="20201112 09:54:40.946"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.900" endtime="20201112 09:54:40.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.964" endtime="20201112 09:54:41.311"></status>
</kw>
<msg timestamp="20201112 09:54:41.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038425125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038433847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.960" endtime="20201112 09:54:41.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038425125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038433847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:41.321" endtime="20201112 09:54:41.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.340" endtime="20201112 09:54:41.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.953" endtime="20201112 09:54:41.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.948" endtime="20201112 09:54:41.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:41.357" level="INFO">${RESULT} = [{'time': 0.038433847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.722000000002672e-06, 'source_diff': 8.722000000002672e-06}, {'time': 0.038448861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:41.348" endtime="20201112 09:54:41.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:41.389" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:41.359" endtime="20201112 09:54:41.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.399" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:41.397" endtime="20201112 09:54:41.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.404" level="INFO">VALUE: [8.722000000002672e-06, 9.555000000001368e-06, 9.388999999998537e-06, 9.083000000000008e-06, 9.556000000000842e-06, 9.388999999998537e-06, 9.542000000001272e-06, 8.902999999997607e-06, 8.874999999998467e-06, 9.388999999998537e-06, 9.556000000000842e-06, 9.556000000000842e-06, 9.221999999996233e-06, 9.056000000000342e-06, 9.056000000000342e-06, 9.361999999998871e-06, 8.874999999998467e-06, 9.056000000000342e-06, 9.360999999999398e-06, 9.042000000000772e-06, 9.028000000001202e-06, 9.542000000001272e-06, 9.208000000003602e-06, 9.374999999998967e-06, 8.943999999996843e-06, 9.387999999999064e-06, 9.209000000003076e-06, 9.374999999998967e-06, 9.278000000001452e-06, 9.208000000003602e-06, 9.527999999994763e-06, 9.528000000001702e-06, 8.903000000004546e-06, 8.846999999999328e-06, 8.888999999998037e-06, 9.237000000002216e-06, 9.375000000005906e-06, 9.042000000000772e-06, 9.055000000000868e-06, 8.819000000000188e-06, 9.208000000003602e-06, 9.040999999994359e-06, 9.389000000005476e-06, 8.888999999998037e-06, 9.055000000000868e-06, 8.874999999998467e-06, 9.083000000000008e-06, 9.569000000000938e-06, 9.777999999995013e-06, 9.055000000000868e-06]</msg>
<status status="PASS" starttime="20201112 09:54:41.401" endtime="20201112 09:54:41.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.391" endtime="20201112 09:54:41.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.414" endtime="20201112 09:54:41.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:41.424" endtime="20201112 09:54:41.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.420" endtime="20201112 09:54:41.448"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.409" endtime="20201112 09:54:41.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.896" endtime="20201112 09:54:41.450"></status>
</kw>
<msg timestamp="20201112 09:54:41.450" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.471" endtime="20201112 09:54:41.485"></status>
</kw>
<msg timestamp="20201112 09:54:41.486" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.467" endtime="20201112 09:54:41.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.492" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.488" endtime="20201112 09:54:41.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.494" endtime="20201112 09:54:41.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.460" endtime="20201112 09:54:41.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.455" endtime="20201112 09:54:41.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.518" endtime="20201112 09:54:41.866"></status>
</kw>
<msg timestamp="20201112 09:54:41.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037239528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037248583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:41.515" endtime="20201112 09:54:41.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037239528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037248583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:41.875" endtime="20201112 09:54:41.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.894" endtime="20201112 09:54:41.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.507" endtime="20201112 09:54:41.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.503" endtime="20201112 09:54:41.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:41.912" level="INFO">${RESULT} = [{'time': 0.037248583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.055000000000868e-06, 'source_diff': 9.055000000000868e-06}, {'time': 0.037264486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:41.903" endtime="20201112 09:54:41.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:41.944" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:41.914" endtime="20201112 09:54:41.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.954" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:41.952" endtime="20201112 09:54:41.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.960" level="INFO">VALUE: [9.055000000000868e-06, 8.819000000000188e-06, 9.556000000000842e-06, 9.042000000000772e-06, 9.541000000001798e-06, 9.554999999994429e-06, 9.346999999999828e-06, 9.221999999996233e-06, 8.764000000001382e-06, 9.028000000001202e-06, 9.721999999996733e-06, 9.555000000001368e-06, 9.221999999996233e-06, 9.555000000001368e-06, 8.915999999997704e-06, 9.361999999998871e-06, 9.055000000000868e-06, 9.556000000000842e-06, 8.721999999995733e-06, 8.708999999995637e-06, 9.207999999996663e-06, 9.402999999998107e-06, 9.374999999998967e-06, 9.388999999998537e-06, 9.221999999996233e-06, 9.556000000000842e-06, 9.375000000005906e-06, 9.208000000003602e-06, 9.056000000000342e-06, 9.388999999998537e-06, 8.721999999995733e-06, 9.222999999995707e-06, 9.374999999998967e-06, 8.708999999995637e-06, 8.832999999999758e-06, 9.193999999997093e-06, 9.542000000001272e-06, 8.750000000001812e-06, 9.402999999998107e-06, 9.388999999998537e-06, 8.707999999996163e-06, 9.542000000001272e-06, 9.056000000000342e-06, 9.542000000001272e-06, 9.042000000000772e-06, 9.485999999996053e-06, 8.707999999996163e-06, 8.874999999998467e-06, 8.874999999998467e-06, 9.096999999999578e-06]</msg>
<status status="PASS" starttime="20201112 09:54:41.957" endtime="20201112 09:54:41.961"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.946" endtime="20201112 09:54:41.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.970" endtime="20201112 09:54:41.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:41.978" endtime="20201112 09:54:42.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.974" endtime="20201112 09:54:42.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.965" endtime="20201112 09:54:42.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.452" endtime="20201112 09:54:42.006"></status>
</kw>
<msg timestamp="20201112 09:54:42.006" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.026" endtime="20201112 09:54:42.040"></status>
</kw>
<msg timestamp="20201112 09:54:42.041" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.023" endtime="20201112 09:54:42.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.048" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.044" endtime="20201112 09:54:42.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.050" endtime="20201112 09:54:42.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.015" endtime="20201112 09:54:42.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.011" endtime="20201112 09:54:42.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.074" endtime="20201112 09:54:42.421"></status>
</kw>
<msg timestamp="20201112 09:54:42.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037434903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037443931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:42.070" endtime="20201112 09:54:42.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037434903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037443931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:42.431" endtime="20201112 09:54:42.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.449" endtime="20201112 09:54:42.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.063" endtime="20201112 09:54:42.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.058" endtime="20201112 09:54:42.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:42.467" level="INFO">${RESULT} = [{'time': 0.037443931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.037461097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:42.458" endtime="20201112 09:54:42.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:42.500" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:42.469" endtime="20201112 09:54:42.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.511" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:42.508" endtime="20201112 09:54:42.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.516" level="INFO">VALUE: [9.028000000001202e-06, 9.721999999996733e-06, 9.528000000001702e-06, 9.737000000002716e-06, 9.222000000003172e-06, 9.221999999996233e-06, 9.000000000002062e-06, 9.542000000001272e-06, 8.694999999996067e-06, 9.388999999998537e-06, 9.041000000001298e-06, 9.721999999996733e-06, 9.360999999999398e-06, 9.221999999996233e-06, 9.221999999996233e-06, 9.542000000001272e-06, 9.250000000002312e-06, 9.360999999999398e-06, 8.707999999996163e-06, 8.667000000003866e-06, 9.222000000003172e-06, 9.346999999999828e-06, 9.388999999998537e-06, 9.555000000001368e-06, 9.236000000002742e-06, 9.374999999998967e-06, 9.375000000005906e-06, 9.042000000000772e-06, 9.374999999998967e-06, 8.972000000002922e-06, 9.221999999996233e-06, 9.042000000000772e-06, 8.722999999995207e-06, 8.737000000001716e-06, 9.207999999996663e-06, 9.374999999998967e-06, 8.861999999998371e-06, 9.250000000002312e-06, 9.527999999994763e-06, 9.541000000001798e-06, 9.542000000001272e-06, 8.874999999998467e-06, 9.528000000001702e-06, 8.916999999997177e-06, 9.388999999998537e-06, 9.056000000000342e-06, 9.542000000001272e-06, 9.402999999998107e-06, 9.320000000000161e-06, 8.958999999995887e-06]</msg>
<status status="PASS" starttime="20201112 09:54:42.513" endtime="20201112 09:54:42.522"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.502" endtime="20201112 09:54:42.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.531" endtime="20201112 09:54:42.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:42.539" endtime="20201112 09:54:42.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.535" endtime="20201112 09:54:42.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.526" endtime="20201112 09:54:42.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.007" endtime="20201112 09:54:42.565"></status>
</kw>
<msg timestamp="20201112 09:54:42.566" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.587" endtime="20201112 09:54:42.602"></status>
</kw>
<msg timestamp="20201112 09:54:42.603" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.584" endtime="20201112 09:54:42.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.609" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.605" endtime="20201112 09:54:42.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.611" endtime="20201112 09:54:42.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.577" endtime="20201112 09:54:42.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.570" endtime="20201112 09:54:42.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.635" endtime="20201112 09:54:42.984"></status>
</kw>
<msg timestamp="20201112 09:54:42.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038959472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038968708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:42.632" endtime="20201112 09:54:42.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038959472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038968708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:42.994" endtime="20201112 09:54:43.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.013" endtime="20201112 09:54:43.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.625" endtime="20201112 09:54:43.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.620" endtime="20201112 09:54:43.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:43.030" level="INFO">${RESULT} = [{'time': 0.038968708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.235999999995803e-06, 'source_diff': 9.235999999995803e-06}, {'time': 0.038985861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:43.021" endtime="20201112 09:54:43.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:43.062" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:43.033" endtime="20201112 09:54:43.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.072" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:43.070" endtime="20201112 09:54:43.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.078" level="INFO">VALUE: [9.235999999995803e-06, 8.874999999998467e-06, 8.750000000001812e-06, 9.042000000000772e-06, 9.513999999995193e-06, 9.374999999998967e-06, 8.708000000003102e-06, 9.556000000000842e-06, 9.556000000000842e-06, 9.360999999999398e-06, 8.944999999996317e-06, 8.861000000005836e-06, 9.235999999995803e-06, 8.861000000005836e-06, 9.069000000000438e-06, 9.055000000000868e-06, 9.500000000002562e-06, 9.541000000001798e-06, 8.888999999998037e-06, 8.901999999998134e-06, 9.542000000001272e-06, 9.319000000000688e-06, 9.500000000002562e-06, 9.556000000000842e-06, 9.221999999996233e-06, 8.888999999998037e-06, 9.042000000000772e-06, 9.388999999998537e-06, 9.694999999997067e-06, 8.708999999995637e-06, 8.902000000005073e-06, 8.902999999997607e-06, 9.374999999998967e-06, 9.374999999998967e-06, 9.028000000001202e-06, 9.374999999998967e-06, 8.889000000004976e-06, 9.056000000000342e-06, 9.236000000002742e-06, 9.555000000001368e-06, 8.874999999998467e-06, 9.221999999996233e-06, 9.388999999998537e-06, 8.707999999996163e-06, 9.028000000001202e-06, 8.875000000005406e-06, 9.042000000000772e-06, 9.207999999996663e-06, 9.458000000003852e-06, 9.040999999994359e-06]</msg>
<status status="PASS" starttime="20201112 09:54:43.075" endtime="20201112 09:54:43.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.064" endtime="20201112 09:54:43.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.088" endtime="20201112 09:54:43.090"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:43.096" endtime="20201112 09:54:43.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.091" endtime="20201112 09:54:43.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.083" endtime="20201112 09:54:43.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.567" endtime="20201112 09:54:43.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.984" endtime="20201112 09:54:43.122"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:43.133" endtime="20201112 09:54:43.155"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.129" endtime="20201112 09:54:43.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.126" endtime="20201112 09:54:43.158"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 09:54:31.848" endtime="20201112 09:54:43.159" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:43.178" endtime="20201112 09:54:43.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.174" endtime="20201112 09:54:43.202"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.237" endtime="20201112 09:54:43.260"></status>
</kw>
<msg timestamp="20201112 09:54:43.261" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.234" endtime="20201112 09:54:43.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.267" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.263" endtime="20201112 09:54:43.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.274" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:43.270" endtime="20201112 09:54:43.275"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:43.226" endtime="20201112 09:54:43.277"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:43.220" endtime="20201112 09:54:43.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.217" endtime="20201112 09:54:43.279"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:43.287" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:43.285" endtime="20201112 09:54:43.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.281" endtime="20201112 09:54:43.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.215" endtime="20201112 09:54:43.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.213" endtime="20201112 09:54:43.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.290" endtime="20201112 09:54:43.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.208" endtime="20201112 09:54:43.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.203" endtime="20201112 09:54:43.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.171" endtime="20201112 09:54:43.298"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.321" endtime="20201112 09:54:43.347"></status>
</kw>
<msg timestamp="20201112 09:54:43.348" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.318" endtime="20201112 09:54:43.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.355" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.351" endtime="20201112 09:54:43.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.357" endtime="20201112 09:54:43.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.310" endtime="20201112 09:54:43.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.304" endtime="20201112 09:54:43.364"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.369" endtime="20201112 09:54:43.373"></status>
</kw>
<msg timestamp="20201112 09:54:43.374" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 09:54:43.366" endtime="20201112 09:54:43.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.384" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:54:43.382" endtime="20201112 09:54:43.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.389" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:54:43.387" endtime="20201112 09:54:43.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.376" endtime="20201112 09:54:43.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.403" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:54:43.399" endtime="20201112 09:54:43.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.408" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:54:43.405" endtime="20201112 09:54:43.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.393" endtime="20201112 09:54:43.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.427" endtime="20201112 09:54:43.786"></status>
</kw>
<msg timestamp="20201112 09:54:43.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136004111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136020167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:43.423" endtime="20201112 09:54:43.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136004111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136020167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:43.796" endtime="20201112 09:54:43.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.815" endtime="20201112 09:54:43.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.416" endtime="20201112 09:54:43.821"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.411" endtime="20201112 09:54:43.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:43.833" level="INFO">${RESULT} = [{'time': 0.136020167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6055999999986525e-05, 'source_diff': 1.6055999999986525e-05}, {'time': 0.136046292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:43.824" endtime="20201112 09:54:43.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:43.864" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:43.835" endtime="20201112 09:54:43.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.876" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 09:54:43.873" endtime="20201112 09:54:43.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.882" level="INFO">VALUE: [1.6055999999986525e-05, 1.5931000000024564e-05, 1.6431000000011187e-05, 1.587499999999853e-05, 1.662499999999234e-05, 1.6445000000003818e-05, 1.6596999999979323e-05, 1.5777999999994075e-05, 1.6276999999981223e-05, 1.6097000000020456e-05, 1.662499999999234e-05, 1.6292000000001083e-05, 1.661099999999971e-05, 1.659700000000708e-05, 1.593099999999681e-05, 1.6625000000020096e-05, 1.6471999999989606e-05, 1.6389000000005538e-05, 1.6681000000018376e-05, 1.6444000000004344e-05, 1.6083999999999543e-05, 1.6278000000008452e-05, 1.5777999999994075e-05, 1.6111999999984805e-05, 1.6444000000004344e-05, 1.5957999999982597e-05, 1.6028000000001263e-05, 1.6111000000013087e-05, 1.60969999999927e-05, 1.6000000000016e-05, 1.5929999999997335e-05, 1.6125000000005718e-05, 1.5764000000001444e-05, 1.6125000000005718e-05, 1.611099999998533e-05, 1.662499999999234e-05, 1.5929999999997335e-05, 1.645899999999645e-05, 1.5957999999982597e-05, 1.595899999998207e-05, 1.6097999999992174e-05, 1.6292000000001083e-05, 1.6111000000013087e-05, 1.60969999999927e-05, 1.5764000000001444e-05, 1.6292000000001083e-05, 1.6278000000008452e-05, 1.6124999999977963e-05, 1.6305999999993714e-05, 1.5903000000011547e-05]</msg>
<status status="PASS" starttime="20201112 09:54:43.879" endtime="20201112 09:54:43.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.866" endtime="20201112 09:54:43.885"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.891" endtime="20201112 09:54:43.894"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:43.900" endtime="20201112 09:54:43.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.895" endtime="20201112 09:54:43.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.886" endtime="20201112 09:54:43.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.299" endtime="20201112 09:54:43.925"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 09:54:43.164" endtime="20201112 09:54:43.928" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:43.947" endtime="20201112 09:54:43.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.943" endtime="20201112 09:54:43.970"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.008" endtime="20201112 09:54:44.030"></status>
</kw>
<msg timestamp="20201112 09:54:44.032" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.004" endtime="20201112 09:54:44.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.038" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.034" endtime="20201112 09:54:44.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.045" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:44.041" endtime="20201112 09:54:44.045"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:43.996" endtime="20201112 09:54:44.047"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:43.988" endtime="20201112 09:54:44.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.985" endtime="20201112 09:54:44.050"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:44.058" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:44.056" endtime="20201112 09:54:44.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.052" endtime="20201112 09:54:44.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.983" endtime="20201112 09:54:44.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.981" endtime="20201112 09:54:44.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.062" endtime="20201112 09:54:44.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.977" endtime="20201112 09:54:44.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.972" endtime="20201112 09:54:44.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.940" endtime="20201112 09:54:44.069"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.093" endtime="20201112 09:54:44.205"></status>
</kw>
<msg timestamp="20201112 09:54:44.206" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.090" endtime="20201112 09:54:44.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.212" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.208" endtime="20201112 09:54:44.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.215" endtime="20201112 09:54:44.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.082" endtime="20201112 09:54:44.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.076" endtime="20201112 09:54:44.222"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.226" endtime="20201112 09:54:44.231"></status>
</kw>
<msg timestamp="20201112 09:54:44.232" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 09:54:44.223" endtime="20201112 09:54:44.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.242" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:54:44.240" endtime="20201112 09:54:44.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.247" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:54:44.244" endtime="20201112 09:54:44.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.234" endtime="20201112 09:54:44.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.259" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:54:44.256" endtime="20201112 09:54:44.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.263" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:54:44.261" endtime="20201112 09:54:44.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.250" endtime="20201112 09:54:44.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.284" endtime="20201112 09:54:44.644"></status>
</kw>
<msg timestamp="20201112 09:54:44.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140000833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140056097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:44.279" endtime="20201112 09:54:44.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140000833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140056097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:44.653" endtime="20201112 09:54:44.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.672" endtime="20201112 09:54:44.676"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.271" endtime="20201112 09:54:44.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.267" endtime="20201112 09:54:44.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:44.690" level="INFO">${RESULT} = [{'time': 0.140056097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5263999999999314e-05, 'source_diff': 5.5263999999999314e-05}, {'time': 0.141808931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:44.681" endtime="20201112 09:54:44.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:44.721" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:44.692" endtime="20201112 09:54:44.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.733" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 09:54:44.731" endtime="20201112 09:54:44.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.739" level="INFO">VALUE: [5.5263999999999314e-05, 5.463899999999522e-05, 5.540199999998219e-05, 5.505599999999777e-05, 5.472200000000704e-05, 5.4709000000013885e-05, 5.541700000000205e-05, 5.509700000000395e-05, 5.4723000000006516e-05, 5.5069999999990404e-05, 5.505599999999777e-05, 5.470800000001441e-05, 5.504199999997739e-05, 5.519500000000788e-05, 5.5069000000018686e-05, 5.504200000000514e-05, 5.492999999998083e-05, 5.5208000000001034e-05, 5.50549999999983e-05, 5.4389000000015786e-05, 5.43749999999954e-05, 5.4541999999990765e-05, 5.4707999999986656e-05, 5.486099999998939e-05, 5.48340000000036e-05, 5.454099999999129e-05, 5.4527999999998134e-05, 5.484799999999623e-05, 5.519499999998012e-05, 5.5221999999993665e-05, 5.53749999999964e-05, 5.498600000000686e-05, 5.451399999997775e-05, 5.538800000001731e-05, 5.520900000000051e-05, 5.466699999998048e-05, 5.504200000000514e-05, 5.4707999999986656e-05, 5.504100000000567e-05, 5.5179999999988016e-05, 5.4389000000015786e-05, 5.4723000000006516e-05, 5.43749999999954e-05, 5.505599999999777e-05, 5.4707999999986656e-05, 5.43749999999954e-05, 5.441700000000105e-05, 5.472200000000704e-05, 5.5221999999993665e-05, 5.5013999999992125e-05]</msg>
<status status="PASS" starttime="20201112 09:54:44.736" endtime="20201112 09:54:44.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.724" endtime="20201112 09:54:44.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.748" endtime="20201112 09:54:44.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:44.756" endtime="20201112 09:54:44.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.752" endtime="20201112 09:54:44.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.743" endtime="20201112 09:54:44.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.070" endtime="20201112 09:54:44.782"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 09:54:43.933" endtime="20201112 09:54:44.784" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:44.803" endtime="20201112 09:54:44.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.800" endtime="20201112 09:54:44.827"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.864" endtime="20201112 09:54:44.887"></status>
</kw>
<msg timestamp="20201112 09:54:44.888" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.857" endtime="20201112 09:54:44.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.895" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.891" endtime="20201112 09:54:44.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.902" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:44.897" endtime="20201112 09:54:44.902"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:44.850" endtime="20201112 09:54:44.904"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:44.843" endtime="20201112 09:54:44.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.841" endtime="20201112 09:54:44.907"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:44.914" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:44.913" endtime="20201112 09:54:44.915"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.909" endtime="20201112 09:54:44.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.839" endtime="20201112 09:54:44.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.837" endtime="20201112 09:54:44.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.918" endtime="20201112 09:54:44.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.833" endtime="20201112 09:54:44.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.829" endtime="20201112 09:54:44.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.797" endtime="20201112 09:54:44.926"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.950" endtime="20201112 09:54:45.264"></status>
</kw>
<msg timestamp="20201112 09:54:45.265" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.946" endtime="20201112 09:54:45.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.271" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.267" endtime="20201112 09:54:45.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.274" endtime="20201112 09:54:45.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.939" endtime="20201112 09:54:45.279"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.933" endtime="20201112 09:54:45.281"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.285" endtime="20201112 09:54:45.290"></status>
</kw>
<msg timestamp="20201112 09:54:45.291" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 09:54:45.282" endtime="20201112 09:54:45.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.301" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:54:45.299" endtime="20201112 09:54:45.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.306" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:54:45.303" endtime="20201112 09:54:45.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.293" endtime="20201112 09:54:45.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.318" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:54:45.315" endtime="20201112 09:54:45.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.322" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:54:45.320" endtime="20201112 09:54:45.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.309" endtime="20201112 09:54:45.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.341" endtime="20201112 09:54:45.697"></status>
</kw>
<msg timestamp="20201112 09:54:45.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143748208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143845625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:45.338" endtime="20201112 09:54:45.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143748208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143845625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:45.706" endtime="20201112 09:54:45.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.724" endtime="20201112 09:54:45.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.331" endtime="20201112 09:54:45.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.326" endtime="20201112 09:54:45.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:45.742" level="INFO">${RESULT} = [{'time': 0.143845625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.74170000000163e-05, 'source_diff': 9.74170000000163e-05}, {'time': 0.149646986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:45.733" endtime="20201112 09:54:45.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:45.776" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:45.745" endtime="20201112 09:54:45.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.787" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 09:54:45.785" endtime="20201112 09:54:45.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.793" level="INFO">VALUE: [9.74170000000163e-05, 9.663900000000947e-05, 9.675000000000655e-05, 9.686100000000364e-05, 9.637500000000965e-05, 9.6513999999992e-05, 9.647199999998635e-05, 9.687499999999627e-05, 9.651299999999252e-05, 9.672199999999354e-05, 9.705600000001202e-05, 9.7027999999999e-05, 9.718000000000226e-05, 9.737500000001065e-05, 9.688900000001666e-05, 9.669499999997999e-05, 9.686100000000364e-05, 9.636100000001702e-05, 9.704200000001939e-05, 9.7208999999987e-05, 9.668000000001564e-05, 9.666699999999473e-05, 9.686100000000364e-05, 9.667999999996013e-05, 9.705599999998427e-05, 9.630599999999045e-05, 9.62910000000261e-05, 9.701400000000637e-05, 9.652700000001291e-05, 9.684799999998273e-05, 9.704199999999163e-05, 9.719499999999437e-05, 9.719499999999437e-05, 9.717999999997451e-05, 9.687499999999627e-05, 9.663900000000947e-05, 9.649999999999936e-05, 9.736199999998973e-05, 9.687499999999627e-05, 9.719399999996714e-05, 9.688900000004441e-05, 9.704100000001992e-05, 9.720800000001528e-05, 9.66950000000355e-05, 9.717999999997451e-05, 9.716599999998188e-05, 9.7027999999999e-05, 9.733300000003275e-05, 9.71249999999757e-05, 9.698600000002111e-05]</msg>
<status status="PASS" starttime="20201112 09:54:45.790" endtime="20201112 09:54:45.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.778" endtime="20201112 09:54:45.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.802" endtime="20201112 09:54:45.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:45.810" endtime="20201112 09:54:45.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.806" endtime="20201112 09:54:45.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.797" endtime="20201112 09:54:45.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.928" endtime="20201112 09:54:45.836"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 09:54:44.790" endtime="20201112 09:54:45.838" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:45.857" endtime="20201112 09:54:45.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.854" endtime="20201112 09:54:45.881"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.915" endtime="20201112 09:54:45.937"></status>
</kw>
<msg timestamp="20201112 09:54:45.939" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.911" endtime="20201112 09:54:45.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.945" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.941" endtime="20201112 09:54:45.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.953" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:45.948" endtime="20201112 09:54:45.954"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:45.904" endtime="20201112 09:54:45.956"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:45.898" endtime="20201112 09:54:45.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.895" endtime="20201112 09:54:45.958"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:45.966" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:45.965" endtime="20201112 09:54:45.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.960" endtime="20201112 09:54:45.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.893" endtime="20201112 09:54:45.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.891" endtime="20201112 09:54:45.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.970" endtime="20201112 09:54:45.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.887" endtime="20201112 09:54:45.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.883" endtime="20201112 09:54:45.977"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.851" endtime="20201112 09:54:45.978"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.001" endtime="20201112 09:54:46.027"></status>
</kw>
<msg timestamp="20201112 09:54:46.028" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.998" endtime="20201112 09:54:46.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.035" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.031" endtime="20201112 09:54:46.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.037" endtime="20201112 09:54:46.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.990" endtime="20201112 09:54:46.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.985" endtime="20201112 09:54:46.045"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.050" endtime="20201112 09:54:46.054"></status>
</kw>
<msg timestamp="20201112 09:54:46.056" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 09:54:46.046" endtime="20201112 09:54:46.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.066" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:54:46.064" endtime="20201112 09:54:46.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.071" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:54:46.069" endtime="20201112 09:54:46.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.058" endtime="20201112 09:54:46.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.084" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:54:46.081" endtime="20201112 09:54:46.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.088" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:54:46.086" endtime="20201112 09:54:46.089"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.075" endtime="20201112 09:54:46.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.107" endtime="20201112 09:54:46.467"></status>
</kw>
<msg timestamp="20201112 09:54:46.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135936139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135938222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:46.104" endtime="20201112 09:54:46.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135936139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135938222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:46.476" endtime="20201112 09:54:46.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.495" endtime="20201112 09:54:46.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.097" endtime="20201112 09:54:46.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.092" endtime="20201112 09:54:46.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:46.514" level="INFO">${RESULT} = [{'time': 0.135938222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0829999999860682e-06, 'source_diff': 2.0829999999860682e-06}, {'time': 0.135962736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:46.505" endtime="20201112 09:54:46.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:46.547" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:46.516" endtime="20201112 09:54:46.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.558" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 09:54:46.556" endtime="20201112 09:54:46.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.564" level="INFO">VALUE: [2.0829999999860682e-06, 2.0279999999872622e-06, 2.083000000013824e-06, 2.083000000013824e-06, 2.083000000013824e-06, 2.055000000000806e-06, 2.068999999993437e-06, 2.0840000000132974e-06, 2.110999999999086e-06, 2.013999999994631e-06, 2.013000000022913e-06, 2.027000000015544e-06, 2.083999999985542e-06, 2.068999999993437e-06, 2.083000000013824e-06, 2.068999999993437e-06, 2.0419999999798932e-06, 2.055000000000806e-06, 2.110999999999086e-06, 2.0969999999786992e-06, 2.028000000015018e-06, 2.083000000013824e-06, 2.05600000000028e-06, 2.069999999992911e-06, 2.055000000000806e-06, 2.0690000000211928e-06, 2.0279999999872622e-06, 2.055000000000806e-06, 2.083999999985542e-06, 2.0700000000206664e-06, 2.083000000013824e-06, 2.124999999991717e-06, 2.069999999992911e-06, 2.068999999993437e-06, 2.068999999993437e-06, 2.068999999993437e-06, 2.0829999999860682e-06, 2.0690000000211928e-06, 2.068999999993437e-06, 2.097000000006455e-06, 2.124999999991717e-06, 2.068999999993437e-06, 2.083999999985542e-06, 2.0419999999798932e-06, 2.068999999993437e-06, 2.05600000000028e-06, 2.0269999999877886e-06, 2.083000000013824e-06, 2.083000000013824e-06, 2.068999999993437e-06]</msg>
<status status="PASS" starttime="20201112 09:54:46.561" endtime="20201112 09:54:46.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.549" endtime="20201112 09:54:46.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.573" endtime="20201112 09:54:46.575"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:46.581" endtime="20201112 09:54:46.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.576" endtime="20201112 09:54:46.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.568" endtime="20201112 09:54:46.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.980" endtime="20201112 09:54:46.607"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 09:54:45.844" endtime="20201112 09:54:46.609" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:46.628" endtime="20201112 09:54:46.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.624" endtime="20201112 09:54:46.652"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.686" endtime="20201112 09:54:46.708"></status>
</kw>
<msg timestamp="20201112 09:54:46.710" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.682" endtime="20201112 09:54:46.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.716" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.712" endtime="20201112 09:54:46.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.724" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:46.719" endtime="20201112 09:54:46.725"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:46.675" endtime="20201112 09:54:46.727"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:46.668" endtime="20201112 09:54:46.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.666" endtime="20201112 09:54:46.730"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:46.738" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:46.736" endtime="20201112 09:54:46.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.732" endtime="20201112 09:54:46.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.664" endtime="20201112 09:54:46.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.662" endtime="20201112 09:54:46.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.742" endtime="20201112 09:54:46.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.658" endtime="20201112 09:54:46.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.653" endtime="20201112 09:54:46.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.622" endtime="20201112 09:54:46.749"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.772" endtime="20201112 09:54:46.885"></status>
</kw>
<msg timestamp="20201112 09:54:46.887" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.769" endtime="20201112 09:54:46.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.893" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.889" endtime="20201112 09:54:46.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.895" endtime="20201112 09:54:46.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.762" endtime="20201112 09:54:46.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.756" endtime="20201112 09:54:46.902"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.907" endtime="20201112 09:54:46.912"></status>
</kw>
<msg timestamp="20201112 09:54:46.913" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 09:54:46.904" endtime="20201112 09:54:46.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.923" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:54:46.920" endtime="20201112 09:54:46.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.927" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:54:46.925" endtime="20201112 09:54:46.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.914" endtime="20201112 09:54:46.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.939" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:54:46.937" endtime="20201112 09:54:46.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.944" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:54:46.942" endtime="20201112 09:54:46.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.931" endtime="20201112 09:54:46.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.963" endtime="20201112 09:54:47.322"></status>
</kw>
<msg timestamp="20201112 09:54:47.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138015403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138027722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:46.960" endtime="20201112 09:54:47.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138015403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138027722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:47.331" endtime="20201112 09:54:47.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.350" endtime="20201112 09:54:47.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.952" endtime="20201112 09:54:47.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.947" endtime="20201112 09:54:47.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:47.368" level="INFO">${RESULT} = [{'time': 0.138027722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2318999999982871e-05, 'source_diff': 1.2318999999982871e-05}, {'time': 0.139788153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:47.359" endtime="20201112 09:54:47.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:47.401" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:47.370" endtime="20201112 09:54:47.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.412" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 09:54:47.410" endtime="20201112 09:54:47.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.418" level="INFO">VALUE: [1.2318999999982871e-05, 1.2291999999997083e-05, 1.2319000000010627e-05, 1.2319999999982345e-05, 1.2249999999991434e-05, 1.229099999999761e-05, 1.230600000001747e-05, 1.2305999999989714e-05, 1.2277999999976696e-05, 1.2319999999982345e-05, 1.2305999999989714e-05, 1.2305000000017996e-05, 1.23200000000101e-05, 1.2318999999982871e-05, 1.229099999999761e-05, 1.230600000001747e-05, 1.230499999999024e-05, 1.236099999998852e-05, 1.2319999999982345e-05, 1.230600000001747e-05, 1.2318999999982871e-05, 1.2333000000003258e-05, 1.2333000000003258e-05, 1.2361999999987994e-05, 1.2319000000010627e-05, 1.2305000000017996e-05, 1.23200000000101e-05, 1.2305000000017996e-05, 1.2305999999989714e-05, 1.2278000000004452e-05, 1.2291999999997083e-05, 1.2346999999995889e-05, 1.2291999999997083e-05, 1.2305999999989714e-05, 1.2347999999995363e-05, 1.2318999999982871e-05, 1.2305000000017996e-05, 1.2318999999982871e-05, 1.2291999999997083e-05, 1.2305000000017996e-05, 1.2305000000017996e-05, 1.2347000000023645e-05, 1.2292000000024839e-05, 1.2346999999995889e-05, 1.2346999999995889e-05, 1.2305999999989714e-05, 1.2319999999982345e-05, 1.2291999999997083e-05, 1.2305999999989714e-05, 1.2305999999989714e-05]</msg>
<status status="PASS" starttime="20201112 09:54:47.415" endtime="20201112 09:54:47.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.403" endtime="20201112 09:54:47.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.427" endtime="20201112 09:54:47.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:47.436" endtime="20201112 09:54:47.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.431" endtime="20201112 09:54:47.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.422" endtime="20201112 09:54:47.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.751" endtime="20201112 09:54:47.462"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 09:54:46.615" endtime="20201112 09:54:47.464" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:47.484" endtime="20201112 09:54:47.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.480" endtime="20201112 09:54:47.507"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.541" endtime="20201112 09:54:47.569"></status>
</kw>
<msg timestamp="20201112 09:54:47.570" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.538" endtime="20201112 09:54:47.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.576" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.572" endtime="20201112 09:54:47.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.590" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:47.579" endtime="20201112 09:54:47.590"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:47.530" endtime="20201112 09:54:47.592"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:47.524" endtime="20201112 09:54:47.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.521" endtime="20201112 09:54:47.595"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:47.602" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:47.601" endtime="20201112 09:54:47.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.596" endtime="20201112 09:54:47.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.519" endtime="20201112 09:54:47.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.518" endtime="20201112 09:54:47.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.606" endtime="20201112 09:54:47.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.513" endtime="20201112 09:54:47.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.509" endtime="20201112 09:54:47.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.477" endtime="20201112 09:54:47.613"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.637" endtime="20201112 09:54:47.953"></status>
</kw>
<msg timestamp="20201112 09:54:47.954" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.634" endtime="20201112 09:54:47.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.960" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.956" endtime="20201112 09:54:47.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.962" endtime="20201112 09:54:47.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.626" endtime="20201112 09:54:47.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.620" endtime="20201112 09:54:47.969"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.974" endtime="20201112 09:54:47.979"></status>
</kw>
<msg timestamp="20201112 09:54:47.980" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 09:54:47.971" endtime="20201112 09:54:47.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.990" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:54:47.987" endtime="20201112 09:54:47.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.994" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:54:47.992" endtime="20201112 09:54:47.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.981" endtime="20201112 09:54:47.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.006" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:54:48.004" endtime="20201112 09:54:48.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.011" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:54:48.009" endtime="20201112 09:54:48.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.998" endtime="20201112 09:54:48.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.033" endtime="20201112 09:54:48.391"></status>
</kw>
<msg timestamp="20201112 09:54:48.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.150874694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.150897458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:48.029" endtime="20201112 09:54:48.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.150874694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.150897458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:48.401" endtime="20201112 09:54:48.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.419" endtime="20201112 09:54:48.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.022" endtime="20201112 09:54:48.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.016" endtime="20201112 09:54:48.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:48.440" level="INFO">${RESULT} = [{'time': 0.150897458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2764000000008444e-05, 'source_diff': 2.2764000000008444e-05}, {'time': 0.156719583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:48.429" endtime="20201112 09:54:48.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:48.474" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:48.442" endtime="20201112 09:54:48.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.485" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 09:54:48.483" endtime="20201112 09:54:48.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.491" level="INFO">VALUE: [2.2764000000008444e-05, 2.2693999999989778e-05, 2.2749999999988058e-05, 2.2749999999988058e-05, 2.2735999999995427e-05, 2.276300000000897e-05, 2.2693999999989778e-05, 2.2764000000008444e-05, 2.2749999999988058e-05, 2.2750000000015813e-05, 2.2693999999989778e-05, 2.2749999999988058e-05, 2.2722000000002796e-05, 2.2735999999995427e-05, 2.2778000000001075e-05, 2.2750000000015813e-05, 2.2749999999988058e-05, 2.2722000000002796e-05, 2.273599999996767e-05, 2.2764000000008444e-05, 2.2736000000023182e-05, 2.273599999996767e-05, 2.2764000000008444e-05, 2.2695000000017007e-05, 2.2750000000015813e-05, 2.2764000000008444e-05, 2.2736000000023182e-05, 2.2736000000023182e-05, 2.2762999999981215e-05, 2.2736000000023182e-05, 2.2750000000015813e-05, 2.2764000000008444e-05, 2.2736000000023182e-05, 2.2750000000015813e-05, 2.2764000000008444e-05, 2.2736000000023182e-05, 2.2764000000008444e-05, 2.2749999999960302e-05, 2.2736000000023182e-05, 2.2736000000023182e-05, 2.2763999999952933e-05, 2.272199999997504e-05, 2.2695000000017007e-05, 2.273599999996767e-05, 2.2749999999960302e-05, 2.2736000000023182e-05, 2.2750000000015813e-05, 2.2764000000008444e-05, 2.2750000000015813e-05, 2.2708999999954127e-05]</msg>
<status status="PASS" starttime="20201112 09:54:48.488" endtime="20201112 09:54:48.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.476" endtime="20201112 09:54:48.493"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.500" endtime="20201112 09:54:48.503"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:48.508" endtime="20201112 09:54:48.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.504" endtime="20201112 09:54:48.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.495" endtime="20201112 09:54:48.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.615" endtime="20201112 09:54:48.534"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 09:54:47.470" endtime="20201112 09:54:48.537" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:54:16.061" endtime="20201112 09:54:48.558"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.732" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:54:48.747" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:54:50.689" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:54:48.728" endtime="20201112 09:54:50.690"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.695" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:54:50.692" endtime="20201112 09:54:50.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.725" endtime="20201112 09:54:50.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:50.703" endtime="20201112 09:54:51.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.700" endtime="20201112 09:54:51.040"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.071" endtime="20201112 09:54:51.093"></status>
</kw>
<msg timestamp="20201112 09:54:51.094" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.068" endtime="20201112 09:54:51.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.101" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.096" endtime="20201112 09:54:51.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.107" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:51.103" endtime="20201112 09:54:51.108"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:51.061" endtime="20201112 09:54:51.110"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:51.056" endtime="20201112 09:54:51.112"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.052" endtime="20201112 09:54:51.112"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:51.120" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:51.119" endtime="20201112 09:54:51.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.114" endtime="20201112 09:54:51.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.050" endtime="20201112 09:54:51.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.049" endtime="20201112 09:54:51.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.124" endtime="20201112 09:54:51.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.045" endtime="20201112 09:54:51.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.131" endtime="20201112 09:54:51.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.042" endtime="20201112 09:54:51.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.722" endtime="20201112 09:54:51.137"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:51.154" endtime="20201112 09:54:51.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.150" endtime="20201112 09:54:51.178"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.212" endtime="20201112 09:54:51.234"></status>
</kw>
<msg timestamp="20201112 09:54:51.236" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.208" endtime="20201112 09:54:51.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.243" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.238" endtime="20201112 09:54:51.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.249" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:51.245" endtime="20201112 09:54:51.250"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:51.201" endtime="20201112 09:54:51.252"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:51.194" endtime="20201112 09:54:51.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.191" endtime="20201112 09:54:51.254"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:51.263" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:51.262" endtime="20201112 09:54:51.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.256" endtime="20201112 09:54:51.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.190" endtime="20201112 09:54:51.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.188" endtime="20201112 09:54:51.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.267" endtime="20201112 09:54:51.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.184" endtime="20201112 09:54:51.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.179" endtime="20201112 09:54:51.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.145" endtime="20201112 09:54:51.274"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.301" endtime="20201112 09:54:51.317"></status>
</kw>
<msg timestamp="20201112 09:54:51.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.297" endtime="20201112 09:54:51.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.321" endtime="20201112 09:54:51.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.327" endtime="20201112 09:54:51.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.290" endtime="20201112 09:54:51.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.284" endtime="20201112 09:54:51.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.353" endtime="20201112 09:54:51.715"></status>
</kw>
<msg timestamp="20201112 09:54:51.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138265, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138281306, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:51.349" endtime="20201112 09:54:51.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138265, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138281306, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:51.724" endtime="20201112 09:54:51.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.744" endtime="20201112 09:54:51.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.340" endtime="20201112 09:54:51.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.335" endtime="20201112 09:54:51.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:51.762" level="INFO">${RESULT} = [{'time': 0.138281306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6305999999993714e-05, 'source_diff': 1.6305999999993714e-05}, {'time': 0.138308292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:51.753" endtime="20201112 09:54:51.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:51.793" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:51.764" endtime="20201112 09:54:51.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.805" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 09:54:51.802" endtime="20201112 09:54:51.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.810" level="INFO">VALUE: [1.6305999999993714e-05, 1.6653000000005358e-05, 1.615299999999098e-05, 1.6999999999989246e-05, 1.6985999999996615e-05, 1.6500000000002624e-05, 1.681900000000125e-05, 1.6985999999996615e-05, 1.6653000000005358e-05, 1.6500000000002624e-05, 1.680500000000862e-05, 1.630499999999424e-05, 1.6985999999996615e-05, 1.6487000000009466e-05, 1.629100000000161e-05, 1.666699999999799e-05, 1.6334000000006732e-05, 1.6485999999982237e-05, 1.6319999999986345e-05, 1.6764000000002444e-05, 1.6833999999993354e-05, 1.666699999999799e-05, 1.681900000000125e-05, 1.6318999999986872e-05, 1.6847000000014267e-05, 1.615299999999098e-05, 1.681900000000125e-05, 1.6958000000011353e-05, 1.663899999998497e-05, 1.626400000001582e-05, 1.698600000002437e-05, 1.713899999999935e-05, 1.6985999999996615e-05, 1.663899999998497e-05, 1.6985999999996615e-05, 1.6833999999993354e-05, 1.6653000000005358e-05, 1.681900000000125e-05, 1.6151999999991506e-05, 1.6652000000005884e-05, 1.681900000000125e-05, 1.6319999999986345e-05, 1.6985999999996615e-05, 1.6486000000009993e-05, 1.665199999997813e-05, 1.6153000000018736e-05, 1.6999999999989246e-05, 1.634699999999989e-05, 1.6957999999983597e-05, 1.663899999998497e-05]</msg>
<status status="PASS" starttime="20201112 09:54:51.807" endtime="20201112 09:54:51.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.795" endtime="20201112 09:54:51.814"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.820" endtime="20201112 09:54:51.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:51.829" endtime="20201112 09:54:51.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.824" endtime="20201112 09:54:51.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.815" endtime="20201112 09:54:51.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.279" endtime="20201112 09:54:51.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.278" endtime="20201112 09:54:51.855"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.878" endtime="20201112 09:54:51.895"></status>
</kw>
<msg timestamp="20201112 09:54:51.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.874" endtime="20201112 09:54:51.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.898" endtime="20201112 09:54:51.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.904" endtime="20201112 09:54:51.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.867" endtime="20201112 09:54:51.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.861" endtime="20201112 09:54:51.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.928" endtime="20201112 09:54:52.278"></status>
</kw>
<msg timestamp="20201112 09:54:52.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041157097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041174083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:51.925" endtime="20201112 09:54:52.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041157097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041174083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:52.287" endtime="20201112 09:54:52.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.306" endtime="20201112 09:54:52.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.917" endtime="20201112 09:54:52.312"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.913" endtime="20201112 09:54:52.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:52.324" level="INFO">${RESULT} = [{'time': 0.041174083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6986000000003554e-05, 'source_diff': 1.6986000000003554e-05}, {'time': 0.041201083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:52.315" endtime="20201112 09:54:52.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:52.357" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:52.326" endtime="20201112 09:54:52.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.368" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 09:54:52.365" endtime="20201112 09:54:52.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.373" level="INFO">VALUE: [1.6986000000003554e-05, 1.6985999999996615e-05, 1.6166000000004954e-05, 1.668099999999756e-05, 1.668099999999756e-05, 1.647299999999602e-05, 1.662499999999928e-05, 1.716699999999849e-05, 1.6320000000000223e-05, 1.665299999999842e-05, 1.6485999999996115e-05, 1.6637999999999376e-05, 1.713899999999935e-05, 1.681899999999431e-05, 1.7028000000002264e-05, 1.666699999999799e-05, 1.665299999999842e-05, 1.6985999999996615e-05, 1.6653000000005358e-05, 1.637499999999903e-05, 1.715299999999892e-05, 1.662499999999928e-05, 1.630500000000118e-05, 1.630500000000118e-05, 1.6471999999996545e-05, 1.631900000000075e-05, 1.6971999999997045e-05, 1.6651999999998945e-05, 1.6165999999998015e-05, 1.6444000000004344e-05, 1.631900000000075e-05, 1.683300000000082e-05, 1.6320000000000223e-05, 1.6277999999994575e-05, 1.680499999999474e-05, 1.6651999999998945e-05, 1.7000000000003124e-05, 1.630499999999424e-05, 1.6263999999995005e-05, 1.666699999999799e-05, 1.665299999999842e-05, 1.6167000000004428e-05, 1.631900000000075e-05, 1.631900000000075e-05, 1.681900000000125e-05, 1.684700000000039e-05, 1.6320000000000223e-05, 1.6652000000005884e-05, 1.7167000000005428e-05, 1.683300000000082e-05]</msg>
<status status="PASS" starttime="20201112 09:54:52.370" endtime="20201112 09:54:52.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.359" endtime="20201112 09:54:52.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.383" endtime="20201112 09:54:52.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:52.391" endtime="20201112 09:54:52.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.387" endtime="20201112 09:54:52.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.378" endtime="20201112 09:54:52.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.857" endtime="20201112 09:54:52.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.856" endtime="20201112 09:54:52.418"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.441" endtime="20201112 09:54:52.457"></status>
</kw>
<msg timestamp="20201112 09:54:52.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.437" endtime="20201112 09:54:52.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.461" endtime="20201112 09:54:52.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.467" endtime="20201112 09:54:52.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.430" endtime="20201112 09:54:52.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.424" endtime="20201112 09:54:52.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.491" endtime="20201112 09:54:52.838"></status>
</kw>
<msg timestamp="20201112 09:54:52.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040753889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040770375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:52.488" endtime="20201112 09:54:52.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040753889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040770375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:52.848" endtime="20201112 09:54:52.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.867" endtime="20201112 09:54:52.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.480" endtime="20201112 09:54:52.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.475" endtime="20201112 09:54:52.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:52.886" level="INFO">${RESULT} = [{'time': 0.040770375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6485999999996115e-05, 'source_diff': 1.6485999999996115e-05}, {'time': 0.040796556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:52.877" endtime="20201112 09:54:52.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:52.918" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:52.888" endtime="20201112 09:54:52.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.929" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 09:54:52.926" endtime="20201112 09:54:52.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.934" level="INFO">VALUE: [1.6485999999996115e-05, 1.648699999999559e-05, 1.7028000000002264e-05, 1.6652000000005884e-05, 1.681900000000125e-05, 1.665299999999842e-05, 1.694499999999738e-05, 1.6695000000004068e-05, 1.6806000000001153e-05, 1.6486000000003054e-05, 1.6472000000003484e-05, 1.7209000000004138e-05, 1.693099999999781e-05, 1.687499999999953e-05, 1.6485999999996115e-05, 1.662499999999928e-05, 1.6471999999996545e-05, 1.6499999999995685e-05, 1.6929999999998335e-05, 1.633300000000032e-05, 1.7014000000002694e-05, 1.6667000000004928e-05, 1.6471999999996545e-05, 1.7042000000001833e-05, 1.637499999999903e-05, 1.6806000000001153e-05, 1.6153000000004858e-05, 1.6750000000002874e-05, 1.6486000000003054e-05, 1.6820000000000723e-05, 1.6665999999998515e-05, 1.681899999999431e-05, 1.7151999999999445e-05, 1.6486000000003054e-05, 1.680499999999474e-05, 1.7055999999994464e-05, 1.6986000000003554e-05, 1.6333999999999793e-05, 1.684700000000039e-05, 1.6986000000003554e-05, 1.7014000000002694e-05, 1.6667000000004928e-05, 1.681900000000125e-05, 1.715299999999892e-05, 1.6471999999996545e-05, 1.6499999999995685e-05, 1.6985999999996615e-05, 1.631900000000075e-05, 1.6500000000002624e-05, 1.6985999999996615e-05]</msg>
<status status="PASS" starttime="20201112 09:54:52.931" endtime="20201112 09:54:52.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.919" endtime="20201112 09:54:52.944"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.950" endtime="20201112 09:54:52.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:52.959" endtime="20201112 09:54:52.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.954" endtime="20201112 09:54:52.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.945" endtime="20201112 09:54:52.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.420" endtime="20201112 09:54:52.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.419" endtime="20201112 09:54:52.985"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.008" endtime="20201112 09:54:53.025"></status>
</kw>
<msg timestamp="20201112 09:54:53.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.005" endtime="20201112 09:54:53.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.028" endtime="20201112 09:54:53.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.035" endtime="20201112 09:54:53.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.997" endtime="20201112 09:54:53.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.991" endtime="20201112 09:54:53.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.058" endtime="20201112 09:54:53.405"></status>
</kw>
<msg timestamp="20201112 09:54:53.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041095181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041111694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.055" endtime="20201112 09:54:53.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041095181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041111694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.414" endtime="20201112 09:54:53.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.434" endtime="20201112 09:54:53.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.048" endtime="20201112 09:54:53.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.043" endtime="20201112 09:54:53.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:53.453" level="INFO">${RESULT} = [{'time': 0.041111694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.651299999999578e-05, 'source_diff': 1.651299999999578e-05}, {'time': 0.041136722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:53.444" endtime="20201112 09:54:53.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:53.484" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:53.455" endtime="20201112 09:54:53.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.495" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 09:54:53.493" endtime="20201112 09:54:53.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.501" level="INFO">VALUE: [1.651299999999578e-05, 1.6500000000002624e-05, 1.6485999999996115e-05, 1.6500000000002624e-05, 1.6999999999996185e-05, 1.6486000000003054e-05, 1.684700000000039e-05, 1.662499999999928e-05, 1.6320000000000223e-05, 1.630500000000118e-05, 1.6471999999996545e-05, 1.7166000000005954e-05, 1.615299999999792e-05, 1.6985999999996615e-05, 1.6985999999996615e-05, 1.6320000000000223e-05, 1.705500000000193e-05, 1.6847999999999863e-05, 1.630500000000118e-05, 1.663899999999885e-05, 1.666699999999799e-05, 1.684700000000039e-05, 1.6485999999996115e-05, 1.6986000000003554e-05, 1.681900000000125e-05, 1.6806000000001153e-05, 1.6153000000004858e-05, 1.663899999999885e-05, 1.715299999999892e-05, 1.659700000000014e-05, 1.6820000000000723e-05, 1.666699999999799e-05, 1.6458000000003914e-05, 1.6806000000001153e-05, 1.6639000000005788e-05, 1.666699999999799e-05, 1.631900000000075e-05, 1.683300000000082e-05, 1.6651999999998945e-05, 1.7014000000002694e-05, 1.631900000000075e-05, 1.7013999999995755e-05, 1.6485999999996115e-05, 1.6791999999994645e-05, 1.6820000000000723e-05, 1.6485999999996115e-05, 1.6999999999996185e-05, 1.6457999999996975e-05, 1.615299999999792e-05, 1.643099999999731e-05]</msg>
<status status="PASS" starttime="20201112 09:54:53.497" endtime="20201112 09:54:53.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.486" endtime="20201112 09:54:53.504"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.510" endtime="20201112 09:54:53.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:53.519" endtime="20201112 09:54:53.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.514" endtime="20201112 09:54:53.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.506" endtime="20201112 09:54:53.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.987" endtime="20201112 09:54:53.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.986" endtime="20201112 09:54:53.545"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.568" endtime="20201112 09:54:53.585"></status>
</kw>
<msg timestamp="20201112 09:54:53.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.565" endtime="20201112 09:54:53.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.589" endtime="20201112 09:54:53.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.595" endtime="20201112 09:54:53.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.558" endtime="20201112 09:54:53.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.552" endtime="20201112 09:54:53.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.619" endtime="20201112 09:54:53.966"></status>
</kw>
<msg timestamp="20201112 09:54:53.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041045083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041062083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.615" endtime="20201112 09:54:53.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041045083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041062083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.975" endtime="20201112 09:54:53.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.994" endtime="20201112 09:54:53.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.608" endtime="20201112 09:54:54.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.603" endtime="20201112 09:54:54.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:54.014" level="INFO">${RESULT} = [{'time': 0.041062083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6999999999996185e-05, 'source_diff': 1.6999999999996185e-05}, {'time': 0.041086111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:54.004" endtime="20201112 09:54:54.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:54.045" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:54.016" endtime="20201112 09:54:54.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.056" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 09:54:54.054" endtime="20201112 09:54:54.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.062" level="INFO">VALUE: [1.6999999999996185e-05, 1.713899999999935e-05, 1.6971999999997045e-05, 1.6500000000002624e-05, 1.6834000000000293e-05, 1.6820000000000723e-05, 1.6665999999998515e-05, 1.681900000000125e-05, 1.6665999999998515e-05, 1.663899999999885e-05, 1.615299999999792e-05, 1.681900000000125e-05, 1.6278000000001513e-05, 1.6834000000000293e-05, 1.6499999999995685e-05, 1.6486000000003054e-05, 1.698699999999609e-05, 1.684700000000039e-05, 1.6320000000000223e-05, 1.631900000000075e-05, 1.663899999999885e-05, 1.6306000000000653e-05, 1.6306000000000653e-05, 1.6735999999996365e-05, 1.6972000000003984e-05, 1.640299999999817e-05, 1.663899999999885e-05, 1.6570000000000473e-05, 1.681899999999431e-05, 1.665299999999842e-05, 1.6320000000000223e-05, 1.612499999999878e-05, 1.6472000000003484e-05, 1.7195000000004568e-05, 1.686099999999996e-05, 1.60690000000005e-05, 1.6264000000001944e-05, 1.698699999999609e-05, 1.6681000000004498e-05, 1.630500000000118e-05, 1.6834000000000293e-05, 1.665299999999842e-05, 1.6957999999997475e-05, 1.631900000000075e-05, 1.6665999999998515e-05, 1.7014000000002694e-05, 1.6694000000004594e-05, 1.634699999999989e-05, 1.633300000000032e-05, 1.6999999999996185e-05]</msg>
<status status="PASS" starttime="20201112 09:54:54.059" endtime="20201112 09:54:54.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.047" endtime="20201112 09:54:54.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.072" endtime="20201112 09:54:54.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:54.080" endtime="20201112 09:54:54.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.075" endtime="20201112 09:54:54.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.067" endtime="20201112 09:54:54.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.547" endtime="20201112 09:54:54.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.546" endtime="20201112 09:54:54.106"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.129" endtime="20201112 09:54:54.146"></status>
</kw>
<msg timestamp="20201112 09:54:54.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.126" endtime="20201112 09:54:54.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.150" endtime="20201112 09:54:54.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.156" endtime="20201112 09:54:54.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.119" endtime="20201112 09:54:54.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.113" endtime="20201112 09:54:54.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.180" endtime="20201112 09:54:54.527"></status>
</kw>
<msg timestamp="20201112 09:54:54.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041110583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041127069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:54.176" endtime="20201112 09:54:54.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041110583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041127069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:54.537" endtime="20201112 09:54:54.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.555" endtime="20201112 09:54:54.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.169" endtime="20201112 09:54:54.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.164" endtime="20201112 09:54:54.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:54.575" level="INFO">${RESULT} = [{'time': 0.041127069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6486000000003054e-05, 'source_diff': 1.6486000000003054e-05}, {'time': 0.041150111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:54.565" endtime="20201112 09:54:54.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:54.608" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:54.577" endtime="20201112 09:54:54.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.619" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 09:54:54.617" endtime="20201112 09:54:54.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.624" level="INFO">VALUE: [1.6486000000003054e-05, 1.6972000000003984e-05, 1.7013999999995755e-05, 1.7014000000002694e-05, 1.613899999999835e-05, 1.6764000000002444e-05, 1.6806000000001153e-05, 1.6486000000003054e-05, 1.6806000000001153e-05, 1.668099999999756e-05, 1.6665999999998515e-05, 1.6320000000000223e-05, 1.681900000000125e-05, 1.633300000000032e-05, 1.631900000000075e-05, 1.6971999999997045e-05, 1.7014000000002694e-05, 1.683300000000082e-05, 1.695899999999695e-05, 1.6971999999997045e-05, 1.7014000000002694e-05, 1.615299999999792e-05, 1.681899999999431e-05, 1.6806000000001153e-05, 1.6306000000000653e-05, 1.715299999999892e-05, 1.7000000000003124e-05, 1.662499999999928e-05, 1.683300000000082e-05, 1.6651999999998945e-05, 1.698699999999609e-05, 1.6806000000001153e-05, 1.6985999999996615e-05, 1.6667000000004928e-05, 1.7151999999999445e-05, 1.629100000000161e-05, 1.633300000000032e-05, 1.683299999999388e-05, 1.72089999999972e-05, 1.6986000000003554e-05, 1.6971999999997045e-05, 1.666699999999799e-05, 1.6639000000005788e-05, 1.663899999999885e-05, 1.647299999999602e-05, 1.6181000000003998e-05, 1.634699999999989e-05, 1.681899999999431e-05, 1.6347999999999363e-05, 1.6333999999999793e-05]</msg>
<status status="PASS" starttime="20201112 09:54:54.621" endtime="20201112 09:54:54.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.610" endtime="20201112 09:54:54.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.634" endtime="20201112 09:54:54.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:54.643" endtime="20201112 09:54:54.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.638" endtime="20201112 09:54:54.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.630" endtime="20201112 09:54:54.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.108" endtime="20201112 09:54:54.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.107" endtime="20201112 09:54:54.669"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.692" endtime="20201112 09:54:54.708"></status>
</kw>
<msg timestamp="20201112 09:54:54.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.688" endtime="20201112 09:54:54.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.712" endtime="20201112 09:54:54.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.718" endtime="20201112 09:54:54.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.681" endtime="20201112 09:54:54.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.675" endtime="20201112 09:54:54.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.742" endtime="20201112 09:54:55.090"></status>
</kw>
<msg timestamp="20201112 09:54:55.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040655194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040672194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:54.738" endtime="20201112 09:54:55.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040655194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040672194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:55.100" endtime="20201112 09:54:55.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.119" endtime="20201112 09:54:55.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.731" endtime="20201112 09:54:55.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.726" endtime="20201112 09:54:55.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:55.137" level="INFO">${RESULT} = [{'time': 0.040672194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7000000000003124e-05, 'source_diff': 1.7000000000003124e-05}, {'time': 0.040700333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:55.128" endtime="20201112 09:54:55.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:55.170" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:55.139" endtime="20201112 09:54:55.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.181" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 09:54:55.179" endtime="20201112 09:54:55.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.186" level="INFO">VALUE: [1.7000000000003124e-05, 1.633300000000032e-05, 1.6973000000003458e-05, 1.6972000000003984e-05, 1.713899999999935e-05, 1.6472000000003484e-05, 1.7153000000005858e-05, 1.616699999999749e-05, 1.6306000000000653e-05, 1.7014000000002694e-05, 1.701300000000322e-05, 1.6485999999996115e-05, 1.6528000000001764e-05, 1.6485999999996115e-05, 1.663899999999885e-05, 1.72089999999972e-05, 1.712499999999978e-05, 1.701300000000322e-05, 1.6778000000002014e-05, 1.633300000000032e-05, 1.631900000000075e-05, 1.6820000000000723e-05, 1.6999999999996185e-05, 1.6305999999993714e-05, 1.6986000000003554e-05, 1.662499999999928e-05, 1.680500000000168e-05, 1.666699999999799e-05, 1.6139000000005288e-05, 1.7000000000003124e-05, 1.665299999999842e-05, 1.645899999999645e-05, 1.681900000000125e-05, 1.663899999999885e-05, 1.6820000000000723e-05, 1.6179999999997585e-05, 1.6472000000003484e-05, 1.6333999999999793e-05, 1.6986000000003554e-05, 1.613899999999835e-05, 1.67089999999967e-05, 1.637499999999903e-05, 1.6625000000006218e-05, 1.6457999999996975e-05, 1.6999999999996185e-05, 1.666699999999799e-05, 1.6500000000002624e-05, 1.6667000000004928e-05, 1.6320000000000223e-05, 1.665299999999842e-05]</msg>
<status status="PASS" starttime="20201112 09:54:55.183" endtime="20201112 09:54:55.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.172" endtime="20201112 09:54:55.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.196" endtime="20201112 09:54:55.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:55.204" endtime="20201112 09:54:55.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.200" endtime="20201112 09:54:55.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.191" endtime="20201112 09:54:55.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.671" endtime="20201112 09:54:55.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.670" endtime="20201112 09:54:55.231"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.254" endtime="20201112 09:54:55.271"></status>
</kw>
<msg timestamp="20201112 09:54:55.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.250" endtime="20201112 09:54:55.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.274" endtime="20201112 09:54:55.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.280" endtime="20201112 09:54:55.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.243" endtime="20201112 09:54:55.286"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.237" endtime="20201112 09:54:55.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.304" endtime="20201112 09:54:55.653"></status>
</kw>
<msg timestamp="20201112 09:54:55.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040930736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040954833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:55.301" endtime="20201112 09:54:55.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040930736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040954833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:55.662" endtime="20201112 09:54:55.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.681" endtime="20201112 09:54:55.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.294" endtime="20201112 09:54:55.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.289" endtime="20201112 09:54:55.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:55.699" level="INFO">${RESULT} = [{'time': 0.040954833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.40970000000007e-05, 'source_diff': 2.40970000000007e-05}, {'time': 0.040985958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:55.690" endtime="20201112 09:54:55.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:55.732" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:55.701" endtime="20201112 09:54:55.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.743" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 09:54:55.741" endtime="20201112 09:54:55.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.749" level="INFO">VALUE: [2.40970000000007e-05, 2.3416000000005266e-05, 2.3776999999995663e-05, 2.3250000000002435e-05, 2.3457999999997037e-05, 2.343099999999737e-05, 2.3597999999999675e-05, 2.3764000000002505e-05, 2.358300000000063e-05, 2.3250000000002435e-05, 2.3750000000002935e-05, 2.39169999999983e-05, 2.393099999999787e-05, 2.32770000000021e-05, 2.3778000000002075e-05, 2.40970000000007e-05, 2.40970000000007e-05, 2.3778000000002075e-05, 2.3262999999995593e-05, 2.4000000000003185e-05, 2.40970000000007e-05, 2.3777999999995136e-05, 2.358300000000063e-05, 2.411100000000027e-05, 2.411100000000027e-05, 2.3235999999995927e-05, 2.3763999999995566e-05, 2.3957999999997537e-05, 2.34169999999978e-05, 2.365299999999848e-05, 2.3957999999997537e-05, 2.390300000000567e-05, 2.4027999999995386e-05, 2.3915999999998827e-05, 2.39169999999983e-05, 2.390299999999873e-05, 2.40970000000007e-05, 2.39169999999983e-05, 2.3764000000002505e-05, 2.3943999999997967e-05, 2.343100000000431e-05, 2.3929999999998397e-05, 2.3292000000001145e-05, 2.3429999999997897e-05, 2.3429999999997897e-05, 2.3749999999995997e-05, 2.3263999999995066e-05, 2.35970000000002e-05, 2.3429999999997897e-05, 2.362499999999934e-05]</msg>
<status status="PASS" starttime="20201112 09:54:55.745" endtime="20201112 09:54:55.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.734" endtime="20201112 09:54:55.752"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.758" endtime="20201112 09:54:55.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:55.767" endtime="20201112 09:54:55.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.762" endtime="20201112 09:54:55.791"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.754" endtime="20201112 09:54:55.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.233" endtime="20201112 09:54:55.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.232" endtime="20201112 09:54:55.793"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.816" endtime="20201112 09:54:55.833"></status>
</kw>
<msg timestamp="20201112 09:54:55.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.813" endtime="20201112 09:54:55.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.837" endtime="20201112 09:54:55.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.843" endtime="20201112 09:54:55.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.806" endtime="20201112 09:54:55.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.800" endtime="20201112 09:54:55.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.867" endtime="20201112 09:54:56.215"></status>
</kw>
<msg timestamp="20201112 09:54:56.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041060556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041084306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:55.863" endtime="20201112 09:54:56.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041060556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041084306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:56.225" endtime="20201112 09:54:56.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.244" endtime="20201112 09:54:56.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.856" endtime="20201112 09:54:56.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.851" endtime="20201112 09:54:56.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:56.262" level="INFO">${RESULT} = [{'time': 0.041084306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3750000000002935e-05, 'source_diff': 2.3750000000002935e-05}, {'time': 0.041113444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:56.253" endtime="20201112 09:54:56.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:56.294" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:56.264" endtime="20201112 09:54:56.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.305" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 09:54:56.303" endtime="20201112 09:54:56.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.311" level="INFO">VALUE: [2.3750000000002935e-05, 2.3943999999997967e-05, 2.3277999999994636e-05, 2.3193999999997217e-05, 2.406900000000156e-05, 2.3306000000000715e-05, 2.39169999999983e-05, 2.330500000000124e-05, 2.372299999999633e-05, 2.3250000000002435e-05, 2.3915999999998827e-05, 2.3750000000002935e-05, 2.34169999999978e-05, 2.3929999999998397e-05, 2.393100000000481e-05, 2.391700000000524e-05, 2.3750000000002935e-05, 2.393099999999787e-05, 2.3763999999995566e-05, 2.366699999999805e-05, 2.3249999999995496e-05, 2.3915999999998827e-05, 2.4028000000002325e-05, 2.390300000000567e-05, 2.3415999999998327e-05, 2.3250000000002435e-05, 2.4041999999994956e-05, 2.3916000000005766e-05, 2.361099999999977e-05, 2.318099999999712e-05, 2.3777999999995136e-05, 2.343100000000431e-05, 2.345900000000345e-05, 2.3264000000002005e-05, 2.3597999999999675e-05, 2.4084000000000605e-05, 2.3304999999994302e-05, 2.394500000000438e-05, 2.3236000000002865e-05, 2.34169999999978e-05, 2.341700000000474e-05, 2.3526999999995413e-05, 2.3249999999995496e-05, 2.3250000000002435e-05, 2.408300000000113e-05, 2.3736000000003366e-05, 2.372300000000327e-05, 2.35970000000002e-05, 2.3429999999997897e-05, 2.3915999999998827e-05]</msg>
<status status="PASS" starttime="20201112 09:54:56.308" endtime="20201112 09:54:56.312"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.296" endtime="20201112 09:54:56.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.321" endtime="20201112 09:54:56.323"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:56.329" endtime="20201112 09:54:56.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.325" endtime="20201112 09:54:56.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.316" endtime="20201112 09:54:56.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.795" endtime="20201112 09:54:56.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.794" endtime="20201112 09:54:56.355"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.379" endtime="20201112 09:54:56.396"></status>
</kw>
<msg timestamp="20201112 09:54:56.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.375" endtime="20201112 09:54:56.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.400" endtime="20201112 09:54:56.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.407" endtime="20201112 09:54:56.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.368" endtime="20201112 09:54:56.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.362" endtime="20201112 09:54:56.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.430" endtime="20201112 09:54:56.778"></status>
</kw>
<msg timestamp="20201112 09:54:56.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041480111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041503708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:56.427" endtime="20201112 09:54:56.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041480111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041503708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:56.788" endtime="20201112 09:54:56.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.807" endtime="20201112 09:54:56.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.420" endtime="20201112 09:54:56.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.415" endtime="20201112 09:54:56.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:56.824" level="INFO">${RESULT} = [{'time': 0.041503708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.35970000000002e-05, 'source_diff': 2.35970000000002e-05}, {'time': 0.041533792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:56.815" endtime="20201112 09:54:56.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:56.856" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:56.826" endtime="20201112 09:54:56.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.870" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 09:54:56.865" endtime="20201112 09:54:56.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.876" level="INFO">VALUE: [2.35970000000002e-05, 2.388899999999916e-05, 2.3235999999995927e-05, 2.35970000000002e-05, 2.3901999999999257e-05, 2.40970000000007e-05, 2.3277999999994636e-05, 2.390299999999873e-05, 2.3429999999997897e-05, 2.3208000000003726e-05, 2.3264000000002005e-05, 2.3264000000002005e-05, 2.4084000000000605e-05, 2.411100000000027e-05, 2.34169999999978e-05, 2.39169999999983e-05, 2.39169999999983e-05, 2.34169999999978e-05, 2.3249999999995496e-05, 2.361099999999977e-05, 2.39169999999983e-05, 2.40970000000007e-05, 2.344500000000388e-05, 2.3443999999997467e-05, 2.3749999999995997e-05, 2.3735999999996427e-05, 2.39169999999983e-05, 2.326300000000253e-05, 2.358300000000063e-05, 2.358300000000063e-05, 2.4179999999998647e-05, 2.3764000000002505e-05, 2.408300000000113e-05, 2.340299999999823e-05, 2.3276999999995163e-05, 2.3736000000003366e-05, 2.40970000000007e-05, 2.3570000000000535e-05, 2.3693999999997717e-05, 2.361099999999977e-05, 2.34169999999978e-05, 2.336099999999952e-05, 2.394499999999744e-05, 2.39169999999983e-05, 2.343099999999737e-05, 2.4070000000001035e-05, 2.3264000000002005e-05, 2.3736000000003366e-05, 2.35970000000002e-05, 2.40970000000007e-05]</msg>
<status status="PASS" starttime="20201112 09:54:56.873" endtime="20201112 09:54:56.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.858" endtime="20201112 09:54:56.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.886" endtime="20201112 09:54:56.888"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:56.894" endtime="20201112 09:54:56.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.890" endtime="20201112 09:54:56.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.881" endtime="20201112 09:54:56.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.358" endtime="20201112 09:54:56.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.356" endtime="20201112 09:54:56.920"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.943" endtime="20201112 09:54:56.960"></status>
</kw>
<msg timestamp="20201112 09:54:56.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.940" endtime="20201112 09:54:56.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.964" endtime="20201112 09:54:56.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.970" endtime="20201112 09:54:56.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.932" endtime="20201112 09:54:56.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.927" endtime="20201112 09:54:56.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.994" endtime="20201112 09:54:57.341"></status>
</kw>
<msg timestamp="20201112 09:54:57.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040805903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040829653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:56.990" endtime="20201112 09:54:57.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040805903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040829653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:57.350" endtime="20201112 09:54:57.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.369" endtime="20201112 09:54:57.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.983" endtime="20201112 09:54:57.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.978" endtime="20201112 09:54:57.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:57.387" level="INFO">${RESULT} = [{'time': 0.040829653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3750000000002935e-05, 'source_diff': 2.3750000000002935e-05}, {'time': 0.040863778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:57.378" endtime="20201112 09:54:57.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:57.419" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:57.389" endtime="20201112 09:54:57.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.431" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 09:54:57.428" endtime="20201112 09:54:57.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.436" level="INFO">VALUE: [2.3750000000002935e-05, 2.3236000000002865e-05, 2.35970000000002e-05, 2.3583999999993166e-05, 2.3915999999998827e-05, 2.343100000000431e-05, 2.3570000000000535e-05, 2.3250000000002435e-05, 2.3943999999997967e-05, 2.40970000000007e-05, 2.3736000000003366e-05, 2.3264000000002005e-05, 2.39169999999983e-05, 2.3735999999996427e-05, 2.363900000000585e-05, 2.394499999999744e-05, 2.39169999999983e-05, 2.3943999999997967e-05, 2.365299999999848e-05, 2.358300000000063e-05, 2.3582999999993692e-05, 2.393100000000481e-05, 2.3778000000002075e-05, 2.3820000000000785e-05, 2.3735999999996427e-05, 2.343099999999737e-05, 2.40970000000007e-05, 2.40970000000007e-05, 2.3263999999995066e-05, 2.3250000000002435e-05, 2.3443999999997467e-05, 2.3249999999995496e-05, 2.3778000000002075e-05, 2.3834000000000355e-05, 2.3764000000002505e-05, 2.343099999999737e-05, 2.3764000000002505e-05, 2.381900000000131e-05, 2.3249999999995496e-05, 2.394500000000438e-05, 2.393099999999787e-05, 2.340299999999823e-05, 2.3722000000003796e-05, 2.35970000000002e-05, 2.35970000000002e-05, 2.356900000000106e-05, 2.358300000000063e-05, 2.388899999999916e-05, 2.3430000000004836e-05, 2.3916000000005766e-05]</msg>
<status status="PASS" starttime="20201112 09:54:57.433" endtime="20201112 09:54:57.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.421" endtime="20201112 09:54:57.440"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.446" endtime="20201112 09:54:57.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:57.456" endtime="20201112 09:54:57.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.451" endtime="20201112 09:54:57.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.442" endtime="20201112 09:54:57.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.922" endtime="20201112 09:54:57.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.921" endtime="20201112 09:54:57.483"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.506" endtime="20201112 09:54:57.523"></status>
</kw>
<msg timestamp="20201112 09:54:57.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:57.502" endtime="20201112 09:54:57.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:57.526" endtime="20201112 09:54:57.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.533" endtime="20201112 09:54:57.537"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.495" endtime="20201112 09:54:57.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.489" endtime="20201112 09:54:57.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.556" endtime="20201112 09:54:57.904"></status>
</kw>
<msg timestamp="20201112 09:54:57.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040795625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040819722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:57.553" endtime="20201112 09:54:57.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040795625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040819722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:57.914" endtime="20201112 09:54:57.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.933" endtime="20201112 09:54:57.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.546" endtime="20201112 09:54:57.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.541" endtime="20201112 09:54:57.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:57.951" level="INFO">${RESULT} = [{'time': 0.040819722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.40970000000007e-05, 'source_diff': 2.40970000000007e-05}, {'time': 0.040852917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:57.941" endtime="20201112 09:54:57.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:57.982" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:57.953" endtime="20201112 09:54:57.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.993" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 09:54:57.991" endtime="20201112 09:54:57.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.999" level="INFO">VALUE: [2.40970000000007e-05, 2.361099999999977e-05, 2.343099999999737e-05, 2.3916000000005766e-05, 2.408300000000113e-05, 2.386100000000002e-05, 2.3236000000002865e-05, 2.3750000000002935e-05, 2.4098000000000175e-05, 2.3750000000002935e-05, 2.35970000000002e-05, 2.3249999999995496e-05, 2.408300000000113e-05, 2.358300000000063e-05, 2.3584000000000105e-05, 2.35970000000002e-05, 2.3750000000002935e-05, 2.3901999999999257e-05, 2.3264000000002005e-05, 2.3306000000000715e-05, 2.3249999999995496e-05, 2.358300000000063e-05, 2.39169999999983e-05, 2.3542000000001395e-05, 2.3763999999995566e-05, 2.4027999999995386e-05, 2.40970000000007e-05, 2.3570000000000535e-05, 2.345900000000345e-05, 2.3764000000002505e-05, 2.3764000000002505e-05, 2.34169999999978e-05, 2.4028000000002325e-05, 2.3915999999998827e-05, 2.408300000000113e-05, 2.3264000000002005e-05, 2.341700000000474e-05, 2.3263999999995066e-05, 2.3597999999999675e-05, 2.395900000000395e-05, 2.3777999999995136e-05, 2.3250000000002435e-05, 2.3750000000002935e-05, 2.4070000000001035e-05, 2.344499999999694e-05, 2.343099999999737e-05, 2.3763999999995566e-05, 2.3249999999995496e-05, 2.3749999999995997e-05, 2.3972000000004046e-05]</msg>
<status status="PASS" starttime="20201112 09:54:57.995" endtime="20201112 09:54:58.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.984" endtime="20201112 09:54:58.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.013" endtime="20201112 09:54:58.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:58.021" endtime="20201112 09:54:58.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.017" endtime="20201112 09:54:58.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.008" endtime="20201112 09:54:58.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.485" endtime="20201112 09:54:58.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.484" endtime="20201112 09:54:58.049"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.072" endtime="20201112 09:54:58.089"></status>
</kw>
<msg timestamp="20201112 09:54:58.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.069" endtime="20201112 09:54:58.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.093" endtime="20201112 09:54:58.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.099" endtime="20201112 09:54:58.103"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.061" endtime="20201112 09:54:58.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.055" endtime="20201112 09:54:58.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.123" endtime="20201112 09:54:58.471"></status>
</kw>
<msg timestamp="20201112 09:54:58.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041141972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041165542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:58.120" endtime="20201112 09:54:58.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041141972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041165542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:58.481" endtime="20201112 09:54:58.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.500" endtime="20201112 09:54:58.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.112" endtime="20201112 09:54:58.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.107" endtime="20201112 09:54:58.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:58.518" level="INFO">${RESULT} = [{'time': 0.041165542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3570000000000535e-05, 'source_diff': 2.3570000000000535e-05}, {'time': 0.041195583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:58.508" endtime="20201112 09:54:58.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:58.549" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:58.520" endtime="20201112 09:54:58.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.560" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 09:54:58.558" endtime="20201112 09:54:58.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.566" level="INFO">VALUE: [2.3570000000000535e-05, 2.408300000000113e-05, 2.341700000000474e-05, 2.394500000000438e-05, 2.3415999999998327e-05, 2.3778000000002075e-05, 2.35970000000002e-05, 2.3250000000002435e-05, 2.39169999999983e-05, 2.3264000000002005e-05, 2.413900000000635e-05, 2.341700000000474e-05, 2.3249999999995496e-05, 2.3277999999994636e-05, 2.340300000000517e-05, 2.393099999999787e-05, 2.369499999999719e-05, 2.3749999999995997e-05, 2.329100000000167e-05, 2.3929999999998397e-05, 2.390299999999873e-05, 2.3749999999995997e-05, 2.358300000000063e-05, 2.40970000000007e-05, 2.3901999999999257e-05, 2.363899999999891e-05, 2.40970000000007e-05, 2.3915999999998827e-05, 2.3597999999999675e-05, 2.40970000000007e-05, 2.358300000000063e-05, 2.3778000000002075e-05, 2.3901999999999257e-05, 2.3264000000002005e-05, 2.35970000000002e-05, 2.3736000000003366e-05, 2.3735999999996427e-05, 2.3915999999998827e-05, 2.3249999999995496e-05, 2.391700000000524e-05, 2.3943999999997967e-05, 2.34169999999978e-05, 2.3999999999996247e-05, 2.39169999999983e-05, 2.3264000000002005e-05, 2.380500000000174e-05, 2.40970000000007e-05, 2.4056000000001465e-05, 2.391700000000524e-05, 2.337499999999909e-05]</msg>
<status status="PASS" starttime="20201112 09:54:58.563" endtime="20201112 09:54:58.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.551" endtime="20201112 09:54:58.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.575" endtime="20201112 09:54:58.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:58.584" endtime="20201112 09:54:58.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.580" endtime="20201112 09:54:58.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.571" endtime="20201112 09:54:58.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.051" endtime="20201112 09:54:58.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.050" endtime="20201112 09:54:58.610"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.635" endtime="20201112 09:54:58.652"></status>
</kw>
<msg timestamp="20201112 09:54:58.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.631" endtime="20201112 09:54:58.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.656" endtime="20201112 09:54:58.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.662" endtime="20201112 09:54:58.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.624" endtime="20201112 09:54:58.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.617" endtime="20201112 09:54:58.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.686" endtime="20201112 09:54:59.033"></status>
</kw>
<msg timestamp="20201112 09:54:59.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042683569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042707167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:58.682" endtime="20201112 09:54:59.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042683569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042707167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:59.043" endtime="20201112 09:54:59.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.062" endtime="20201112 09:54:59.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.675" endtime="20201112 09:54:59.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.670" endtime="20201112 09:54:59.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:59.080" level="INFO">${RESULT} = [{'time': 0.042707167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3597999999999675e-05, 'source_diff': 2.3597999999999675e-05}, {'time': 0.042741333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:59.070" endtime="20201112 09:54:59.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:59.111" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:59.082" endtime="20201112 09:54:59.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.122" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 09:54:59.120" endtime="20201112 09:54:59.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.127" level="INFO">VALUE: [2.3597999999999675e-05, 2.3929999999998397e-05, 2.3264000000002005e-05, 2.408300000000113e-05, 2.40970000000007e-05, 2.358300000000063e-05, 2.344499999999694e-05, 2.40970000000007e-05, 2.37770000000026e-05, 2.40970000000007e-05, 2.3778000000002075e-05, 2.406900000000156e-05, 2.3764000000002505e-05, 2.358300000000063e-05, 2.340299999999823e-05, 2.3415999999998327e-05, 2.3263999999995066e-05, 2.3264000000002005e-05, 2.393099999999787e-05, 2.344499999999694e-05, 2.4098000000000175e-05, 2.3416000000005266e-05, 2.393099999999787e-05, 2.406900000000156e-05, 2.3929999999998397e-05, 2.3250000000002435e-05, 2.3750000000002935e-05, 2.3763000000003032e-05, 2.3971999999997107e-05, 2.35970000000002e-05, 2.39169999999983e-05, 2.3430000000004836e-05, 2.3930000000005336e-05, 2.387499999999959e-05, 2.408300000000113e-05, 2.34169999999978e-05, 2.4098000000000175e-05, 2.388899999999916e-05, 2.3735999999996427e-05, 2.406900000000156e-05, 2.3764000000002505e-05, 2.3415999999998327e-05, 2.3415999999998327e-05, 2.3250000000002435e-05, 2.3264000000002005e-05, 2.3429999999997897e-05, 2.3554999999994553e-05, 2.408300000000113e-05, 2.3929999999998397e-05, 2.4084000000000605e-05]</msg>
<status status="PASS" starttime="20201112 09:54:59.124" endtime="20201112 09:54:59.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.113" endtime="20201112 09:54:59.131"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.137" endtime="20201112 09:54:59.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:59.145" endtime="20201112 09:54:59.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.141" endtime="20201112 09:54:59.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.132" endtime="20201112 09:54:59.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.612" endtime="20201112 09:54:59.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.611" endtime="20201112 09:54:59.172"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.194" endtime="20201112 09:54:59.215"></status>
</kw>
<msg timestamp="20201112 09:54:59.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:59.191" endtime="20201112 09:54:59.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:59.218" endtime="20201112 09:54:59.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.225" endtime="20201112 09:54:59.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.184" endtime="20201112 09:54:59.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.178" endtime="20201112 09:54:59.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.248" endtime="20201112 09:54:59.597"></status>
</kw>
<msg timestamp="20201112 09:54:59.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040873833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040904556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:59.245" endtime="20201112 09:54:59.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040873833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040904556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:59.607" endtime="20201112 09:54:59.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.626" endtime="20201112 09:54:59.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.238" endtime="20201112 09:54:59.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.233" endtime="20201112 09:54:59.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:59.644" level="INFO">${RESULT} = [{'time': 0.040904556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.072300000000333e-05, 'source_diff': 3.072300000000333e-05}, {'time': 0.040942569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:59.635" endtime="20201112 09:54:59.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:59.675" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:54:59.646" endtime="20201112 09:54:59.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.686" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 09:54:59.684" endtime="20201112 09:54:59.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.691" level="INFO">VALUE: [3.072300000000333e-05, 3.1054999999995114e-05, 3.086100000000008e-05, 3.0360999999999583e-05, 3.104200000000196e-05, 3.086100000000008e-05, 3.070799999999735e-05, 3.0360999999999583e-05, 3.0333999999999917e-05, 3.069399999999778e-05, 3.054100000000198e-05, 3.084700000000051e-05, 3.104200000000196e-05, 3.0374999999999153e-05, 3.105500000000205e-05, 3.099999999999631e-05, 3.0388999999998723e-05, 3.0194000000004217e-05, 3.019399999999728e-05, 3.102799999999545e-05, 3.068099999999768e-05, 3.0208999999996322e-05, 3.0388999999998723e-05, 3.0152999999998042e-05, 3.0374999999999153e-05, 3.119399999999828e-05, 3.0513999999995378e-05, 3.0361999999999056e-05, 3.104200000000196e-05, 3.0513999999995378e-05, 3.069399999999778e-05, 3.0360999999999583e-05, 3.099999999999631e-05, 3.066700000000505e-05, 3.108400000000067e-05, 3.088899999999922e-05, 3.070800000000429e-05, 3.070900000000376e-05, 3.0514000000002317e-05, 3.119400000000522e-05, 3.052700000000241e-05, 3.104200000000196e-05, 3.055600000000103e-05, 3.0347999999999486e-05, 3.0388999999998723e-05, 3.104100000000248e-05, 3.070900000000376e-05, 3.069499999999725e-05, 3.054200000000146e-05, 3.088899999999922e-05]</msg>
<status status="PASS" starttime="20201112 09:54:59.688" endtime="20201112 09:54:59.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.677" endtime="20201112 09:54:59.695"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.701" endtime="20201112 09:54:59.704"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:59.710" endtime="20201112 09:54:59.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.705" endtime="20201112 09:54:59.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.696" endtime="20201112 09:54:59.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.174" endtime="20201112 09:54:59.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.173" endtime="20201112 09:54:59.736"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.759" endtime="20201112 09:54:59.776"></status>
</kw>
<msg timestamp="20201112 09:54:59.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:59.756" endtime="20201112 09:54:59.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:59.780" endtime="20201112 09:54:59.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.786" endtime="20201112 09:54:59.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.748" endtime="20201112 09:54:59.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.742" endtime="20201112 09:54:59.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.812" endtime="20201112 09:55:00.160"></status>
</kw>
<msg timestamp="20201112 09:55:00.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041181889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041213069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:59.808" endtime="20201112 09:55:00.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041181889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041213069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:00.169" endtime="20201112 09:55:00.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.188" endtime="20201112 09:55:00.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.799" endtime="20201112 09:55:00.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.795" endtime="20201112 09:55:00.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:00.206" level="INFO">${RESULT} = [{'time': 0.041213069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.117999999999871e-05, 'source_diff': 3.117999999999871e-05}, {'time': 0.041249056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:00.197" endtime="20201112 09:55:00.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:00.237" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:00.208" endtime="20201112 09:55:00.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.248" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 09:55:00.246" endtime="20201112 09:55:00.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.254" level="INFO">VALUE: [3.117999999999871e-05, 3.0347999999999486e-05, 3.059700000000026e-05, 3.0374999999999153e-05, 3.086100000000008e-05, 3.100000000000325e-05, 3.052800000000189e-05, 3.0360999999999583e-05, 3.086100000000008e-05, 3.052799999999495e-05, 3.0194999999996752e-05, 3.0347000000000013e-05, 3.102800000000239e-05, 3.019399999999728e-05, 3.087499999999965e-05, 3.086100000000008e-05, 3.086100000000008e-05, 3.119399999999828e-05, 3.087499999999965e-05, 3.052799999999495e-05, 3.0416999999997862e-05, 3.105600000000153e-05, 3.101400000000282e-05, 3.0513999999995378e-05, 3.084700000000051e-05, 3.019399999999728e-05, 3.086100000000008e-05, 3.069399999999778e-05, 3.086100000000008e-05, 3.105600000000153e-05, 3.088899999999922e-05, 3.0180999999997182e-05, 3.084700000000051e-05, 3.105600000000153e-05, 3.069399999999778e-05, 3.0360999999999583e-05, 3.0514000000002317e-05, 3.0152000000005508e-05, 3.0180999999997182e-05, 3.0278000000001637e-05, 3.055600000000103e-05, 3.069399999999778e-05, 3.097200000000411e-05, 3.054200000000146e-05, 3.094400000000497e-05, 3.056900000000112e-05, 3.106900000000162e-05, 3.0194999999996752e-05, 3.069399999999778e-05, 3.0347999999999486e-05]</msg>
<status status="PASS" starttime="20201112 09:55:00.251" endtime="20201112 09:55:00.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.239" endtime="20201112 09:55:00.257"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.264" endtime="20201112 09:55:00.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:00.272" endtime="20201112 09:55:00.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.268" endtime="20201112 09:55:00.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.259" endtime="20201112 09:55:00.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.738" endtime="20201112 09:55:00.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.737" endtime="20201112 09:55:00.298"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.321" endtime="20201112 09:55:00.339"></status>
</kw>
<msg timestamp="20201112 09:55:00.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.318" endtime="20201112 09:55:00.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.342" endtime="20201112 09:55:00.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.349" endtime="20201112 09:55:00.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.311" endtime="20201112 09:55:00.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.305" endtime="20201112 09:55:00.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.372" endtime="20201112 09:55:00.722"></status>
</kw>
<msg timestamp="20201112 09:55:00.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040924111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040954806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:00.369" endtime="20201112 09:55:00.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040924111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040954806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:00.731" endtime="20201112 09:55:00.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.751" endtime="20201112 09:55:00.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.362" endtime="20201112 09:55:00.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.357" endtime="20201112 09:55:00.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:00.768" level="INFO">${RESULT} = [{'time': 0.040954806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.069500000000419e-05, 'source_diff': 3.069500000000419e-05}, {'time': 0.040993833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:00.759" endtime="20201112 09:55:00.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:00.800" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:00.771" endtime="20201112 09:55:00.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.811" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 09:55:00.808" endtime="20201112 09:55:00.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.816" level="INFO">VALUE: [3.069500000000419e-05, 3.081900000000137e-05, 3.0540999999995044e-05, 3.072199999999692e-05, 3.083400000000042e-05, 3.087499999999965e-05, 3.069399999999778e-05, 3.0526999999995474e-05, 3.052800000000189e-05, 3.0194999999996752e-05, 3.0208999999996322e-05, 3.0360999999999583e-05, 3.069399999999778e-05, 3.016599999999814e-05, 3.0374999999999153e-05, 3.0333000000000443e-05, 3.092999999999846e-05, 3.086100000000008e-05, 3.052800000000189e-05, 3.0388999999998723e-05, 3.0500000000002747e-05, 3.104200000000196e-05, 3.106900000000162e-05, 3.069499999999725e-05, 3.088899999999922e-05, 3.118099999999818e-05, 3.070900000000376e-05, 3.054200000000146e-05, 3.069399999999778e-05, 3.052799999999495e-05, 3.1054999999995114e-05, 3.070799999999735e-05, 3.119399999999828e-05, 3.080600000000128e-05, 3.052700000000241e-05, 3.048599999999624e-05, 3.119499999999775e-05, 3.0360999999999583e-05, 3.018100000000412e-05, 3.0347000000000013e-05, 3.069500000000419e-05, 3.052800000000189e-05, 3.0862000000006495e-05, 3.108300000000119e-05, 3.119499999999775e-05, 3.070900000000376e-05, 3.102700000000291e-05, 3.052800000000189e-05, 3.0180000000004648e-05, 3.088899999999922e-05]</msg>
<status status="PASS" starttime="20201112 09:55:00.813" endtime="20201112 09:55:00.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.801" endtime="20201112 09:55:00.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.826" endtime="20201112 09:55:00.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:00.834" endtime="20201112 09:55:00.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.830" endtime="20201112 09:55:00.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.821" endtime="20201112 09:55:00.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.300" endtime="20201112 09:55:00.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.299" endtime="20201112 09:55:00.861"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.884" endtime="20201112 09:55:00.901"></status>
</kw>
<msg timestamp="20201112 09:55:00.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.880" endtime="20201112 09:55:00.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.905" endtime="20201112 09:55:00.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.911" endtime="20201112 09:55:00.915"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.873" endtime="20201112 09:55:00.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.867" endtime="20201112 09:55:00.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.935" endtime="20201112 09:55:01.284"></status>
</kw>
<msg timestamp="20201112 09:55:01.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041138903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041170111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:00.931" endtime="20201112 09:55:01.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041138903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041170111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:01.294" endtime="20201112 09:55:01.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.313" endtime="20201112 09:55:01.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.924" endtime="20201112 09:55:01.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.919" endtime="20201112 09:55:01.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:01.331" level="INFO">${RESULT} = [{'time': 0.041170111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.120800000000479e-05, 'source_diff': 3.120800000000479e-05}, {'time': 0.041208083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:01.322" endtime="20201112 09:55:01.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:01.362" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:01.333" endtime="20201112 09:55:01.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.373" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 09:55:01.371" endtime="20201112 09:55:01.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.379" level="INFO">VALUE: [3.120800000000479e-05, 3.0360999999999583e-05, 3.0360999999999583e-05, 3.0374999999999153e-05, 3.1040999999995544e-05, 3.086100000000008e-05, 3.070800000000429e-05, 3.0500000000002747e-05, 3.0750000000003e-05, 3.104199999999502e-05, 3.069499999999725e-05, 3.0388999999998723e-05, 3.069400000000472e-05, 3.0360999999999583e-05, 3.038900000000566e-05, 3.077800000000214e-05, 3.052799999999495e-05, 3.070800000000429e-05, 3.0514000000002317e-05, 3.087499999999965e-05, 3.0208000000003787e-05, 3.068100000000462e-05, 3.019500000000369e-05, 3.094399999999803e-05, 3.120799999999785e-05, 3.0514000000002317e-05, 3.052700000000241e-05, 3.119500000000469e-05, 3.0374999999999153e-05, 3.070799999999735e-05, 3.073599999999649e-05, 3.119499999999775e-05, 3.054200000000146e-05, 3.0499999999995808e-05, 3.102800000000239e-05, 3.072200000000386e-05, 3.054100000000198e-05, 3.119400000000522e-05, 3.0360999999999583e-05, 3.120799999999785e-05, 3.0514000000002317e-05, 3.0861999999999556e-05, 3.020799999999685e-05, 3.016599999999814e-05, 3.019399999999728e-05, 3.0847999999999987e-05, 3.0486000000003177e-05, 3.0514000000002317e-05, 3.0860999999993144e-05, 3.093100000000487e-05]</msg>
<status status="PASS" starttime="20201112 09:55:01.376" endtime="20201112 09:55:01.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.364" endtime="20201112 09:55:01.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.388" endtime="20201112 09:55:01.391"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:01.397" endtime="20201112 09:55:01.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.392" endtime="20201112 09:55:01.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.384" endtime="20201112 09:55:01.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.863" endtime="20201112 09:55:01.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.862" endtime="20201112 09:55:01.423"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.446" endtime="20201112 09:55:01.464"></status>
</kw>
<msg timestamp="20201112 09:55:01.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:01.443" endtime="20201112 09:55:01.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:01.468" endtime="20201112 09:55:01.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.474" endtime="20201112 09:55:01.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.436" endtime="20201112 09:55:01.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.430" endtime="20201112 09:55:01.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.498" endtime="20201112 09:55:01.846"></status>
</kw>
<msg timestamp="20201112 09:55:01.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041085236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041115792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:01.494" endtime="20201112 09:55:01.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041085236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041115792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:01.856" endtime="20201112 09:55:01.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.875" endtime="20201112 09:55:01.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.487" endtime="20201112 09:55:01.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.482" endtime="20201112 09:55:01.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:01.901" level="INFO">${RESULT} = [{'time': 0.041115792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.055600000000103e-05, 'source_diff': 3.055600000000103e-05}, {'time': 0.041157889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:01.890" endtime="20201112 09:55:01.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:01.935" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:01.903" endtime="20201112 09:55:01.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.951" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 09:55:01.948" endtime="20201112 09:55:01.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.958" level="INFO">VALUE: [3.055600000000103e-05, 3.052800000000189e-05, 3.037500000000609e-05, 3.0180999999997182e-05, 3.0374999999999153e-05, 3.092999999999846e-05, 3.0360999999999583e-05, 3.0194999999996752e-05, 3.037500000000609e-05, 3.070800000000429e-05, 3.069399999999778e-05, 3.052800000000189e-05, 3.086100000000008e-05, 3.054200000000146e-05, 3.055500000000155e-05, 3.013900000000541e-05, 3.072200000000386e-05, 3.019399999999728e-05, 3.1040999999995544e-05, 3.052799999999495e-05, 3.0208999999996322e-05, 3.052800000000189e-05, 3.0347000000000013e-05, 3.1026999999995974e-05, 3.102799999999545e-05, 3.120900000000426e-05, 3.070800000000429e-05, 3.037500000000609e-05, 3.0208000000003787e-05, 3.05700000000006e-05, 3.054100000000198e-05, 3.1054999999995114e-05, 3.0360999999999583e-05, 3.072300000000333e-05, 3.0361999999999056e-05, 3.087499999999965e-05, 3.073600000000343e-05, 3.055600000000103e-05, 3.069399999999778e-05, 3.090300000000573e-05, 3.0514000000002317e-05, 3.087499999999965e-05, 3.0180999999997182e-05, 3.119399999999828e-05, 3.068000000000515e-05, 3.1026999999995974e-05, 3.087499999999965e-05, 3.0388999999998723e-05, 3.070799999999735e-05, 3.0374999999999153e-05]</msg>
<status status="PASS" starttime="20201112 09:55:01.954" endtime="20201112 09:55:01.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.938" endtime="20201112 09:55:01.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.970" endtime="20201112 09:55:01.974"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:01.981" endtime="20201112 09:55:02.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.975" endtime="20201112 09:55:02.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.965" endtime="20201112 09:55:02.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.425" endtime="20201112 09:55:02.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.424" endtime="20201112 09:55:02.008"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.031" endtime="20201112 09:55:02.049"></status>
</kw>
<msg timestamp="20201112 09:55:02.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:02.028" endtime="20201112 09:55:02.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:02.052" endtime="20201112 09:55:02.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.059" endtime="20201112 09:55:02.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.021" endtime="20201112 09:55:02.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.015" endtime="20201112 09:55:02.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.083" endtime="20201112 09:55:02.430"></status>
</kw>
<msg timestamp="20201112 09:55:02.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042112569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042143597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:02.079" endtime="20201112 09:55:02.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042112569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042143597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:02.439" endtime="20201112 09:55:02.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.458" endtime="20201112 09:55:02.464"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.072" endtime="20201112 09:55:02.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.067" endtime="20201112 09:55:02.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:02.478" level="INFO">${RESULT} = [{'time': 0.042143597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.102799999999545e-05, 'source_diff': 3.102799999999545e-05}, {'time': 0.042183722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:02.468" endtime="20201112 09:55:02.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:02.509" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:02.480" endtime="20201112 09:55:02.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.520" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 09:55:02.518" endtime="20201112 09:55:02.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.526" level="INFO">VALUE: [3.102799999999545e-05, 3.073599999999649e-05, 3.097199999999717e-05, 3.0333999999999917e-05, 3.069399999999778e-05, 3.120899999999732e-05, 3.087499999999965e-05, 3.055500000000155e-05, 3.0486000000003177e-05, 3.069499999999725e-05, 3.0597999999999737e-05, 3.086100000000008e-05, 3.1040999999995544e-05, 3.0430000000004898e-05, 3.102799999999545e-05, 3.0374999999999153e-05, 3.070899999999682e-05, 3.086100000000008e-05, 3.017999999999771e-05, 3.069499999999725e-05, 3.087499999999965e-05, 3.0360999999999583e-05, 3.102700000000291e-05, 3.070900000000376e-05, 3.068100000000462e-05, 3.102800000000239e-05, 3.0360999999999583e-05, 3.117999999999871e-05, 3.0374999999999153e-05, 3.0514000000002317e-05, 3.08050000000018e-05, 3.0430000000004898e-05, 3.086100000000008e-05, 3.052800000000189e-05, 3.0402999999998293e-05, 3.0347000000000013e-05, 3.0500000000002747e-05, 3.0360999999999583e-05, 3.1013000000003343e-05, 3.086100000000008e-05, 3.119499999999775e-05, 3.0306000000000777e-05, 3.086100000000008e-05, 3.066599999999864e-05, 3.0513999999995378e-05, 3.086100000000008e-05, 3.0360999999999583e-05, 3.086100000000008e-05, 3.043100000000437e-05, 3.101400000000282e-05]</msg>
<status status="PASS" starttime="20201112 09:55:02.522" endtime="20201112 09:55:02.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.511" endtime="20201112 09:55:02.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.536" endtime="20201112 09:55:02.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:02.544" endtime="20201112 09:55:02.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.540" endtime="20201112 09:55:02.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.531" endtime="20201112 09:55:02.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.010" endtime="20201112 09:55:02.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.009" endtime="20201112 09:55:02.571"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.595" endtime="20201112 09:55:02.613"></status>
</kw>
<msg timestamp="20201112 09:55:02.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:02.591" endtime="20201112 09:55:02.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:02.617" endtime="20201112 09:55:02.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.623" endtime="20201112 09:55:02.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.584" endtime="20201112 09:55:02.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.578" endtime="20201112 09:55:02.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.647" endtime="20201112 09:55:02.988"></status>
</kw>
<msg timestamp="20201112 09:55:02.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042923917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042954806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:02.643" endtime="20201112 09:55:02.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042923917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042954806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:02.997" endtime="20201112 09:55:03.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.016" endtime="20201112 09:55:03.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.636" endtime="20201112 09:55:03.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.631" endtime="20201112 09:55:03.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:03.035" level="INFO">${RESULT} = [{'time': 0.042954806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.088899999999922e-05, 'source_diff': 3.088899999999922e-05}, {'time': 0.042990958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:03.026" endtime="20201112 09:55:03.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:03.065" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:03.037" endtime="20201112 09:55:03.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.076" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 09:55:03.074" endtime="20201112 09:55:03.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.082" level="INFO">VALUE: [3.088899999999922e-05, 3.052700000000241e-05, 3.086100000000008e-05, 3.0388999999998723e-05, 3.104200000000196e-05, 3.0374999999999153e-05, 3.0292000000001207e-05, 3.101400000000282e-05, 3.017999999999771e-05, 3.052700000000241e-05, 3.102800000000239e-05, 3.0500000000002747e-05, 3.0374999999999153e-05, 3.102700000000291e-05, 3.104100000000248e-05, 3.073599999999649e-05, 3.1098000000000237e-05, 3.0402999999998293e-05, 3.052700000000241e-05, 3.122200000000436e-05, 3.0194999999996752e-05, 3.0347999999999486e-05, 3.066699999999811e-05, 3.055600000000103e-05, 3.069499999999725e-05, 3.054199999999452e-05, 3.090299999999879e-05, 3.073600000000343e-05, 3.081900000000137e-05, 3.068099999999768e-05, 3.119500000000469e-05, 3.072200000000386e-05, 3.0374999999999153e-05, 3.0347000000000013e-05, 3.070800000000429e-05, 3.090200000000626e-05, 3.102800000000239e-05, 3.0347000000000013e-05, 3.0333000000000443e-05, 3.058300000000069e-05, 3.1013000000003343e-05, 3.0347000000000013e-05, 3.052800000000189e-05, 3.120899999999732e-05, 3.070899999999682e-05, 3.069399999999778e-05, 3.069499999999725e-05, 3.086100000000008e-05, 3.070899999999682e-05, 3.019500000000369e-05]</msg>
<status status="PASS" starttime="20201112 09:55:03.079" endtime="20201112 09:55:03.090"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.067" endtime="20201112 09:55:03.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.099" endtime="20201112 09:55:03.101"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:03.107" endtime="20201112 09:55:03.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.103" endtime="20201112 09:55:03.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.094" endtime="20201112 09:55:03.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.573" endtime="20201112 09:55:03.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.572" endtime="20201112 09:55:03.133"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.156" endtime="20201112 09:55:03.175"></status>
</kw>
<msg timestamp="20201112 09:55:03.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:03.153" endtime="20201112 09:55:03.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:03.178" endtime="20201112 09:55:03.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.184" endtime="20201112 09:55:03.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.146" endtime="20201112 09:55:03.190"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.140" endtime="20201112 09:55:03.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.208" endtime="20201112 09:55:03.557"></status>
</kw>
<msg timestamp="20201112 09:55:03.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041059472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041097444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:03.205" endtime="20201112 09:55:03.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041059472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041097444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:03.566" endtime="20201112 09:55:03.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.585" endtime="20201112 09:55:03.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.198" endtime="20201112 09:55:03.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.193" endtime="20201112 09:55:03.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:03.604" level="INFO">${RESULT} = [{'time': 0.041097444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.797199999999723e-05, 'source_diff': 3.797199999999723e-05}, {'time': 0.041145444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:03.595" endtime="20201112 09:55:03.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:03.636" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:03.607" endtime="20201112 09:55:03.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.648" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 09:55:03.645" endtime="20201112 09:55:03.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.653" level="INFO">VALUE: [3.797199999999723e-05, 3.7791000000002295e-05, 3.7291000000001795e-05, 3.7791000000002295e-05, 3.8152999999999104e-05, 3.726399999999519e-05, 3.7958999999997134e-05, 3.815199999999963e-05, 3.7638999999999034e-05, 3.78059999999944e-05, 3.747200000000367e-05, 3.79580000000046e-05, 3.78059999999944e-05, 3.795799999999766e-05, 3.7652999999998604e-05, 3.729200000000127e-05, 3.7805000000001865e-05, 3.7666999999998174e-05, 3.747199999999673e-05, 3.819399999999834e-05, 3.7291000000001795e-05, 3.7333000000000505e-05, 3.8124999999999964e-05, 3.7638999999999034e-05, 3.797300000000364e-05, 3.80980000000003e-05, 3.7624999999999464e-05, 3.730600000000084e-05, 3.795900000000407e-05, 3.780600000000134e-05, 3.79859999999968e-05, 3.763799999999956e-05, 3.7818999999994496e-05, 3.748600000000324e-05, 3.747199999999673e-05, 3.8152999999999104e-05, 3.747200000000367e-05, 3.7680999999997744e-05, 3.797199999999723e-05, 3.797200000000417e-05, 3.7805000000001865e-05, 3.744399999999759e-05, 3.815199999999963e-05, 3.729200000000127e-05, 3.8111000000000395e-05, 3.780600000000134e-05, 3.782000000000091e-05, 3.747200000000367e-05, 3.729200000000127e-05, 3.807000000000116e-05]</msg>
<status status="PASS" starttime="20201112 09:55:03.650" endtime="20201112 09:55:03.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.638" endtime="20201112 09:55:03.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.663" endtime="20201112 09:55:03.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:03.672" endtime="20201112 09:55:03.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.667" endtime="20201112 09:55:03.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.659" endtime="20201112 09:55:03.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.135" endtime="20201112 09:55:03.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.134" endtime="20201112 09:55:03.698"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.721" endtime="20201112 09:55:03.740"></status>
</kw>
<msg timestamp="20201112 09:55:03.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:03.718" endtime="20201112 09:55:03.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:03.743" endtime="20201112 09:55:03.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.750" endtime="20201112 09:55:03.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.710" endtime="20201112 09:55:03.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.704" endtime="20201112 09:55:03.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.773" endtime="20201112 09:55:04.121"></status>
</kw>
<msg timestamp="20201112 09:55:04.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040903764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040941958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:03.770" endtime="20201112 09:55:04.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040903764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040941958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:04.130" endtime="20201112 09:55:04.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.150" endtime="20201112 09:55:04.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.763" endtime="20201112 09:55:04.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.758" endtime="20201112 09:55:04.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:04.171" level="INFO">${RESULT} = [{'time': 0.040941958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.819399999999834e-05, 'source_diff': 3.819399999999834e-05}, {'time': 0.040991097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:04.162" endtime="20201112 09:55:04.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:04.202" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:04.173" endtime="20201112 09:55:04.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.213" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 09:55:04.211" endtime="20201112 09:55:04.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.218" level="INFO">VALUE: [3.819399999999834e-05, 3.7610999999999895e-05, 3.7624999999999464e-05, 3.8124999999999964e-05, 3.720900000000332e-05, 3.797199999999723e-05, 3.8111000000000395e-05, 3.8111000000000395e-05, 3.8111000000000395e-05, 3.74580000000041e-05, 3.747199999999673e-05, 3.780600000000134e-05, 3.7610999999999895e-05, 3.7638999999999034e-05, 3.779199999999483e-05, 3.797199999999723e-05, 3.7624999999999464e-05, 3.774999999999612e-05, 3.77780000000022e-05, 3.797300000000364e-05, 3.802799999999551e-05, 3.77780000000022e-05, 3.81659999999992e-05, 3.7624999999999464e-05, 3.757000000000066e-05, 3.7638999999999034e-05, 3.747199999999673e-05, 3.7610999999999895e-05, 3.744399999999759e-05, 3.744399999999759e-05, 3.7847000000000575e-05, 3.772199999999698e-05, 3.7305000000001365e-05, 3.7972999999996704e-05, 3.727799999999476e-05, 3.727799999999476e-05, 3.77780000000022e-05, 3.777799999999526e-05, 3.795799999999766e-05, 3.7610999999999895e-05, 3.743000000000496e-05, 3.8124999999999964e-05, 3.7624999999999464e-05, 3.7638999999999034e-05, 3.7652999999998604e-05, 3.7597000000000325e-05, 3.797300000000364e-05, 3.7819000000001435e-05, 3.7958999999997134e-05, 3.7597000000000325e-05]</msg>
<status status="PASS" starttime="20201112 09:55:04.215" endtime="20201112 09:55:04.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.204" endtime="20201112 09:55:04.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.228" endtime="20201112 09:55:04.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:04.237" endtime="20201112 09:55:04.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.232" endtime="20201112 09:55:04.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.223" endtime="20201112 09:55:04.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.700" endtime="20201112 09:55:04.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.699" endtime="20201112 09:55:04.263"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.286" endtime="20201112 09:55:04.304"></status>
</kw>
<msg timestamp="20201112 09:55:04.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:04.282" endtime="20201112 09:55:04.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:04.307" endtime="20201112 09:55:04.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.313" endtime="20201112 09:55:04.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.275" endtime="20201112 09:55:04.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.269" endtime="20201112 09:55:04.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.337" endtime="20201112 09:55:04.685"></status>
</kw>
<msg timestamp="20201112 09:55:04.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040851097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040889236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:04.334" endtime="20201112 09:55:04.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040851097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040889236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:04.695" endtime="20201112 09:55:04.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.714" endtime="20201112 09:55:04.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.326" endtime="20201112 09:55:04.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.322" endtime="20201112 09:55:04.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:04.733" level="INFO">${RESULT} = [{'time': 0.040889236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8138999999999534e-05, 'source_diff': 3.8138999999999534e-05}, {'time': 0.040932375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:04.724" endtime="20201112 09:55:04.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:04.765" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:04.736" endtime="20201112 09:55:04.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.776" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 09:55:04.774" endtime="20201112 09:55:04.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.781" level="INFO">VALUE: [3.8138999999999534e-05, 3.776400000000263e-05, 3.77780000000022e-05, 3.7638999999999034e-05, 3.797200000000417e-05, 3.7444999999997064e-05, 3.8124999999999964e-05, 3.730600000000084e-05, 3.780600000000134e-05, 3.7444999999997064e-05, 3.797199999999723e-05, 3.7624999999999464e-05, 3.78059999999944e-05, 3.7319000000000935e-05, 3.763799999999956e-05, 3.7805000000001865e-05, 3.7305000000001365e-05, 3.8124999999999964e-05, 3.795799999999766e-05, 3.730600000000084e-05, 3.780600000000134e-05, 3.773599999999655e-05, 3.7402999999998354e-05, 3.7819000000001435e-05, 3.7833000000001005e-05, 3.81659999999992e-05, 3.7791000000002295e-05, 3.7291000000001795e-05, 3.797200000000417e-05, 3.801400000000288e-05, 3.797199999999723e-05, 3.7804999999994926e-05, 3.729200000000127e-05, 3.807000000000116e-05, 3.795799999999766e-05, 3.745799999999716e-05, 3.747200000000367e-05, 3.745900000000357e-05, 3.815199999999963e-05, 3.7291000000001795e-05, 3.801399999999594e-05, 3.7610999999999895e-05, 3.8124999999999964e-05, 3.780600000000134e-05, 3.797200000000417e-05, 3.780600000000134e-05, 3.77780000000022e-05, 3.7610999999999895e-05, 3.79580000000046e-05, 3.8124999999999964e-05]</msg>
<status status="PASS" starttime="20201112 09:55:04.778" endtime="20201112 09:55:04.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.767" endtime="20201112 09:55:04.785"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.791" endtime="20201112 09:55:04.794"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:04.799" endtime="20201112 09:55:04.821"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.795" endtime="20201112 09:55:04.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.786" endtime="20201112 09:55:04.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.265" endtime="20201112 09:55:04.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.264" endtime="20201112 09:55:04.826"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.849" endtime="20201112 09:55:04.867"></status>
</kw>
<msg timestamp="20201112 09:55:04.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:04.845" endtime="20201112 09:55:04.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:04.871" endtime="20201112 09:55:04.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.877" endtime="20201112 09:55:04.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.838" endtime="20201112 09:55:04.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.832" endtime="20201112 09:55:04.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.901" endtime="20201112 09:55:05.250"></status>
</kw>
<msg timestamp="20201112 09:55:05.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041420611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041458569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:04.897" endtime="20201112 09:55:05.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041420611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041458569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:05.260" endtime="20201112 09:55:05.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.279" endtime="20201112 09:55:05.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.890" endtime="20201112 09:55:05.286"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.885" endtime="20201112 09:55:05.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:05.298" level="INFO">${RESULT} = [{'time': 0.041458569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.795799999999766e-05, 'source_diff': 3.795799999999766e-05}, {'time': 0.04150375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:55:05.289" endtime="20201112 09:55:05.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:05.329" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:05.300" endtime="20201112 09:55:05.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.341" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 09:55:05.338" endtime="20201112 09:55:05.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.346" level="INFO">VALUE: [3.795799999999766e-05, 3.769399999999784e-05, 3.7624999999999464e-05, 3.7944999999997564e-05, 3.745900000000357e-05, 3.7624999999999464e-05, 3.772199999999698e-05, 3.77780000000022e-05, 3.732000000000041e-05, 3.745799999999716e-05, 3.745900000000357e-05, 3.744400000000453e-05, 3.7458999999996634e-05, 3.7805000000001865e-05, 3.7652999999998604e-05, 3.7291000000001795e-05, 3.72780000000017e-05, 3.745799999999716e-05, 3.797199999999723e-05, 3.7610999999999895e-05, 3.751400000000238e-05, 3.747199999999673e-05, 3.780600000000134e-05, 3.8138999999999534e-05, 3.747199999999673e-05, 3.7458999999996634e-05, 3.7290999999994856e-05, 3.81659999999992e-05, 3.7444999999997064e-05, 3.8138999999999534e-05, 3.8138999999999534e-05, 3.729200000000127e-05, 3.763799999999956e-05, 3.7388999999998784e-05, 3.780600000000134e-05, 3.811199999999987e-05, 3.7277000000002225e-05, 3.797199999999723e-05, 3.7277000000002225e-05, 3.730600000000084e-05, 3.791700000000536e-05, 3.8138999999999534e-05, 3.77780000000022e-05, 3.729200000000127e-05, 3.79580000000046e-05, 3.729200000000127e-05, 3.747199999999673e-05, 3.747200000000367e-05, 3.74859999999963e-05, 3.763900000000597e-05]</msg>
<status status="PASS" starttime="20201112 09:55:05.343" endtime="20201112 09:55:05.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.331" endtime="20201112 09:55:05.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.356" endtime="20201112 09:55:05.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:05.364" endtime="20201112 09:55:05.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.360" endtime="20201112 09:55:05.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.351" endtime="20201112 09:55:05.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.828" endtime="20201112 09:55:05.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.827" endtime="20201112 09:55:05.390"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.413" endtime="20201112 09:55:05.431"></status>
</kw>
<msg timestamp="20201112 09:55:05.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:05.410" endtime="20201112 09:55:05.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:05.435" endtime="20201112 09:55:05.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.441" endtime="20201112 09:55:05.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.403" endtime="20201112 09:55:05.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.397" endtime="20201112 09:55:05.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.465" endtime="20201112 09:55:05.813"></status>
</kw>
<msg timestamp="20201112 09:55:05.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040800708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040838194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:05.462" endtime="20201112 09:55:05.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040800708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040838194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:05.823" endtime="20201112 09:55:05.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.842" endtime="20201112 09:55:05.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.455" endtime="20201112 09:55:05.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.450" endtime="20201112 09:55:05.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:05.861" level="INFO">${RESULT} = [{'time': 0.040838194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.748600000000324e-05, 'source_diff': 3.748600000000324e-05}, {'time': 0.040886222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:05.852" endtime="20201112 09:55:05.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:05.893" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:05.864" endtime="20201112 09:55:05.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.904" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 09:55:05.902" endtime="20201112 09:55:05.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.909" level="INFO">VALUE: [3.748600000000324e-05, 3.747199999999673e-05, 3.7305000000001365e-05, 3.745799999999716e-05, 3.7666999999998174e-05, 3.748600000000324e-05, 3.7305000000001365e-05, 3.763799999999956e-05, 3.722200000000342e-05, 3.77780000000022e-05, 3.8138999999999534e-05, 3.747199999999673e-05, 3.8138999999999534e-05, 3.8124999999999964e-05, 3.779199999999483e-05, 3.799999999999637e-05, 3.8124999999999964e-05, 3.8138999999999534e-05, 3.7305000000001365e-05, 3.723700000000246e-05, 3.744400000000453e-05, 3.8124999999999964e-05, 3.730600000000084e-05, 3.797199999999723e-05, 3.795799999999766e-05, 3.7444999999997064e-05, 3.7597000000000325e-05, 3.795900000000407e-05, 3.7290999999994856e-05, 3.7624999999999464e-05, 3.7624999999999464e-05, 3.79859999999968e-05, 3.72780000000017e-05, 3.815199999999963e-05, 3.765199999999913e-05, 3.7624999999999464e-05, 3.732000000000041e-05, 3.8138999999999534e-05, 3.730600000000084e-05, 3.745799999999716e-05, 3.729200000000127e-05, 3.732000000000041e-05, 3.7583000000000755e-05, 3.7305000000001365e-05, 3.7624999999999464e-05, 3.7944999999997564e-05, 3.74859999999963e-05, 3.7944999999997564e-05, 3.73059999999939e-05, 3.8124999999999964e-05]</msg>
<status status="PASS" starttime="20201112 09:55:05.906" endtime="20201112 09:55:05.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.895" endtime="20201112 09:55:05.913"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.919" endtime="20201112 09:55:05.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:05.928" endtime="20201112 09:55:05.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.923" endtime="20201112 09:55:05.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.914" endtime="20201112 09:55:05.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.393" endtime="20201112 09:55:05.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.391" endtime="20201112 09:55:05.954"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.977" endtime="20201112 09:55:05.995"></status>
</kw>
<msg timestamp="20201112 09:55:05.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:05.974" endtime="20201112 09:55:05.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:05.999" endtime="20201112 09:55:06.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.005" endtime="20201112 09:55:06.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.966" endtime="20201112 09:55:06.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.961" endtime="20201112 09:55:06.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.029" endtime="20201112 09:55:06.377"></status>
</kw>
<msg timestamp="20201112 09:55:06.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041102431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041140292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:06.025" endtime="20201112 09:55:06.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041102431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041140292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:06.386" endtime="20201112 09:55:06.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.406" endtime="20201112 09:55:06.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.018" endtime="20201112 09:55:06.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.013" endtime="20201112 09:55:06.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:06.427" level="INFO">${RESULT} = [{'time': 0.041140292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7861000000000145e-05, 'source_diff': 3.7861000000000145e-05}, {'time': 0.041183333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:06.418" endtime="20201112 09:55:06.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:06.458" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:06.429" endtime="20201112 09:55:06.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.469" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 09:55:06.467" endtime="20201112 09:55:06.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.474" level="INFO">VALUE: [3.7861000000000145e-05, 3.7624999999999464e-05, 3.74859999999963e-05, 3.7902999999998854e-05, 3.8180999999998244e-05, 3.7819000000001435e-05, 3.730600000000084e-05, 3.748700000000271e-05, 3.72780000000017e-05, 3.780600000000134e-05, 3.747199999999673e-05, 3.7305000000001365e-05, 3.8138999999999534e-05, 3.748600000000324e-05, 3.7833000000001005e-05, 3.7804999999994926e-05, 3.747199999999673e-05, 3.799999999999637e-05, 3.8124999999999964e-05, 3.8152999999999104e-05, 3.7305000000001365e-05, 3.79859999999968e-05, 3.745900000000357e-05, 3.730600000000084e-05, 3.782000000000091e-05, 3.7638999999999034e-05, 3.8166999999998674e-05, 3.745799999999716e-05, 3.763799999999956e-05, 3.763900000000597e-05, 3.780600000000134e-05, 3.7458999999996634e-05, 3.763799999999956e-05, 3.7652999999998604e-05, 3.7652999999998604e-05, 3.8180999999998244e-05, 3.747200000000367e-05, 3.774999999999612e-05, 3.74859999999963e-05, 3.747200000000367e-05, 3.782000000000091e-05, 3.7319000000000935e-05, 3.7804999999994926e-05, 3.801399999999594e-05, 3.797199999999723e-05, 3.7304999999994426e-05, 3.765300000000554e-05, 3.758400000000023e-05, 3.791700000000536e-05, 3.7624999999999464e-05]</msg>
<status status="PASS" starttime="20201112 09:55:06.471" endtime="20201112 09:55:06.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.460" endtime="20201112 09:55:06.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.484" endtime="20201112 09:55:06.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:06.493" endtime="20201112 09:55:06.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.488" endtime="20201112 09:55:06.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.479" endtime="20201112 09:55:06.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.956" endtime="20201112 09:55:06.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.955" endtime="20201112 09:55:06.519"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.542" endtime="20201112 09:55:06.560"></status>
</kw>
<msg timestamp="20201112 09:55:06.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:06.538" endtime="20201112 09:55:06.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:06.563" endtime="20201112 09:55:06.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.570" endtime="20201112 09:55:06.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.531" endtime="20201112 09:55:06.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.525" endtime="20201112 09:55:06.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.593" endtime="20201112 09:55:06.941"></status>
</kw>
<msg timestamp="20201112 09:55:06.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040823125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040860972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:06.590" endtime="20201112 09:55:06.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040823125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040860972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:06.950" endtime="20201112 09:55:06.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.969" endtime="20201112 09:55:06.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.583" endtime="20201112 09:55:06.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.578" endtime="20201112 09:55:06.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:06.989" level="INFO">${RESULT} = [{'time': 0.040860972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7847000000000575e-05, 'source_diff': 3.7847000000000575e-05}, {'time': 0.040903944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:06.980" endtime="20201112 09:55:06.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:07.020" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:06.991" endtime="20201112 09:55:07.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.031" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 09:55:07.029" endtime="20201112 09:55:07.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.037" level="INFO">VALUE: [3.7847000000000575e-05, 3.7304999999994426e-05, 3.745799999999716e-05, 3.8152999999999104e-05, 3.7445000000004e-05, 3.798600000000374e-05, 3.751399999999544e-05, 3.747200000000367e-05, 3.77780000000022e-05, 3.7652999999998604e-05, 3.8124999999999964e-05, 3.8124999999999964e-05, 3.795799999999766e-05, 3.7791000000002295e-05, 3.748600000000324e-05, 3.79580000000046e-05, 3.7805000000001865e-05, 3.7638999999999034e-05, 3.8124999999999964e-05, 3.7833000000001005e-05, 3.8124999999999964e-05, 3.802799999999551e-05, 3.747199999999673e-05, 3.7624999999999464e-05, 3.725000000000256e-05, 3.730600000000084e-05, 3.744400000000453e-05, 3.7305000000001365e-05, 3.7944999999997564e-05, 3.8124999999999964e-05, 3.797199999999723e-05, 3.752800000000195e-05, 3.7638999999999034e-05, 3.74859999999963e-05, 3.797200000000417e-05, 3.795799999999766e-05, 3.734799999999955e-05, 3.8138999999999534e-05, 3.763900000000597e-05, 3.798700000000321e-05, 3.797200000000417e-05, 3.744399999999759e-05, 3.729200000000127e-05, 3.748600000000324e-05, 3.799999999999637e-05, 3.794399999999809e-05, 3.7819000000001435e-05, 3.79580000000046e-05, 3.7305000000001365e-05, 3.8152999999999104e-05]</msg>
<status status="PASS" starttime="20201112 09:55:07.034" endtime="20201112 09:55:07.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.022" endtime="20201112 09:55:07.040"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.046" endtime="20201112 09:55:07.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:07.055" endtime="20201112 09:55:07.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.051" endtime="20201112 09:55:07.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.042" endtime="20201112 09:55:07.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.521" endtime="20201112 09:55:07.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.520" endtime="20201112 09:55:07.081"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.104" endtime="20201112 09:55:07.122"></status>
</kw>
<msg timestamp="20201112 09:55:07.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:07.101" endtime="20201112 09:55:07.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:07.126" endtime="20201112 09:55:07.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.132" endtime="20201112 09:55:07.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.093" endtime="20201112 09:55:07.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.088" endtime="20201112 09:55:07.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.156" endtime="20201112 09:55:07.504"></status>
</kw>
<msg timestamp="20201112 09:55:07.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040698556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040743653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:07.152" endtime="20201112 09:55:07.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040698556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040743653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:07.513" endtime="20201112 09:55:07.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.532" endtime="20201112 09:55:07.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.145" endtime="20201112 09:55:07.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.140" endtime="20201112 09:55:07.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:07.551" level="INFO">${RESULT} = [{'time': 0.040743653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5097000000000886e-05, 'source_diff': 4.5097000000000886e-05}, {'time': 0.040795792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:07.542" endtime="20201112 09:55:07.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:07.584" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:07.554" endtime="20201112 09:55:07.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.595" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 09:55:07.593" endtime="20201112 09:55:07.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.601" level="INFO">VALUE: [4.5097000000000886e-05, 4.502799999999557e-05, 4.441599999999851e-05, 4.4416999999997986e-05, 4.457000000000072e-05, 4.5083000000001316e-05, 4.4388999999998846e-05, 4.475000000000312e-05, 4.4597000000000386e-05, 4.4888999999999346e-05, 4.4944999999997626e-05, 4.452799999999507e-05, 4.473600000000355e-05, 4.4902999999998916e-05, 4.504199999999514e-05, 4.4583000000000816e-05, 4.455599999999421e-05, 4.491599999999901e-05, 4.472200000000398e-05, 4.508299999999438e-05, 4.472200000000398e-05, 4.507000000000122e-05, 4.451299999999603e-05, 4.4708999999996946e-05, 4.5069000000001747e-05, 4.509800000000036e-05, 4.508400000000079e-05, 4.457000000000072e-05, 4.4723000000003454e-05, 4.422199999999654e-05, 4.522200000000448e-05, 4.4402999999998416e-05, 4.4569000000001247e-05, 4.454200000000158e-05, 4.507000000000122e-05, 4.522199999999754e-05, 4.4374999999999276e-05, 4.4569000000001247e-05, 4.4874999999999776e-05, 4.505599999999471e-05, 4.4402999999998416e-05, 4.41939999999974e-05, 4.4431000000004495e-05, 4.505600000000165e-05, 4.504200000000208e-05, 4.4223000000002954e-05, 4.5083000000001316e-05, 4.441599999999851e-05, 4.475000000000312e-05, 4.457000000000072e-05]</msg>
<status status="PASS" starttime="20201112 09:55:07.598" endtime="20201112 09:55:07.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.586" endtime="20201112 09:55:07.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.612" endtime="20201112 09:55:07.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:07.620" endtime="20201112 09:55:07.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.616" endtime="20201112 09:55:07.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.606" endtime="20201112 09:55:07.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.083" endtime="20201112 09:55:07.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.082" endtime="20201112 09:55:07.647"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.670" endtime="20201112 09:55:07.689"></status>
</kw>
<msg timestamp="20201112 09:55:07.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:07.666" endtime="20201112 09:55:07.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:07.693" endtime="20201112 09:55:07.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.699" endtime="20201112 09:55:07.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.659" endtime="20201112 09:55:07.704"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.653" endtime="20201112 09:55:07.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.723" endtime="20201112 09:55:08.071"></status>
</kw>
<msg timestamp="20201112 09:55:08.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041085167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041133319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:07.719" endtime="20201112 09:55:08.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041085167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041133319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:08.081" endtime="20201112 09:55:08.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.100" endtime="20201112 09:55:08.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.712" endtime="20201112 09:55:08.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.707" endtime="20201112 09:55:08.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:08.120" level="INFO">${RESULT} = [{'time': 0.041133319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.815200000000269e-05, 'source_diff': 4.815200000000269e-05}, {'time': 0.041209542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:08.110" endtime="20201112 09:55:08.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:08.151" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:08.122" endtime="20201112 09:55:08.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.162" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 09:55:08.160" endtime="20201112 09:55:08.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.167" level="INFO">VALUE: [4.815200000000269e-05, 4.8473000000000266e-05, 4.837499999999634e-05, 4.823600000000011e-05, 4.8361000000003707e-05, 4.884700000000464e-05, 4.830499999999849e-05, 4.8125000000003026e-05, 4.879199999999889e-05, 4.856999999999778e-05, 4.875000000000018e-05, 4.829099999999892e-05, 4.855499999999874e-05, 4.8667000000002236e-05, 4.8903000000002916e-05, 4.826299999999978e-05, 4.83060000000049e-05, 4.887499999999684e-05, 4.8387999999996434e-05, 4.8445000000001126e-05, 4.802799999999857e-05, 4.841699999999505e-05, 4.8013999999999e-05, 4.854199999999864e-05, 4.879199999999889e-05, 4.823600000000011e-05, 4.820800000000097e-05, 4.9014e-05, 4.862499999999659e-05, 4.898600000000086e-05, 4.8681000000001806e-05, 4.8707999999994533e-05, 4.8195000000000876e-05, 4.8111000000003457e-05, 4.813800000000312e-05, 4.848600000000036e-05, 4.8139000000002596e-05, 4.8361000000003707e-05, 4.8889000000003346e-05, 4.823600000000011e-05, 4.902799999999957e-05, 4.9014e-05, 4.895800000000172e-05, 4.8153000000002166e-05, 4.897199999999435e-05, 4.827699999999935e-05, 4.882000000000497e-05, 4.899999999999349e-05, 4.901300000000053e-05, 4.815299999999523e-05]</msg>
<status status="PASS" starttime="20201112 09:55:08.164" endtime="20201112 09:55:08.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.153" endtime="20201112 09:55:08.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.182" endtime="20201112 09:55:08.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:08.191" endtime="20201112 09:55:08.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.186" endtime="20201112 09:55:08.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.177" endtime="20201112 09:55:08.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.649" endtime="20201112 09:55:08.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.648" endtime="20201112 09:55:08.217"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.240" endtime="20201112 09:55:08.260"></status>
</kw>
<msg timestamp="20201112 09:55:08.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:08.237" endtime="20201112 09:55:08.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:08.263" endtime="20201112 09:55:08.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.270" endtime="20201112 09:55:08.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.229" endtime="20201112 09:55:08.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.223" endtime="20201112 09:55:08.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.295" endtime="20201112 09:55:08.651"></status>
</kw>
<msg timestamp="20201112 09:55:08.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041130056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041179681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:08.291" endtime="20201112 09:55:08.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041130056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041179681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:08.661" endtime="20201112 09:55:08.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.680" endtime="20201112 09:55:08.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.283" endtime="20201112 09:55:08.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.278" endtime="20201112 09:55:08.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:08.702" level="INFO">${RESULT} = [{'time': 0.041179681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9625000000004527e-05, 'source_diff': 4.9625000000004527e-05}, {'time': 0.041257903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:08.692" endtime="20201112 09:55:08.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:08.734" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:08.704" endtime="20201112 09:55:08.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.746" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 09:55:08.744" endtime="20201112 09:55:08.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.752" level="INFO">VALUE: [4.9625000000004527e-05, 4.918099999999537e-05, 4.952800000000007e-05, 4.986099999999827e-05, 5.005500000000024e-05, 4.936200000000418e-05, 4.955599999999921e-05, 5.005599999999971e-05, 4.987499999999784e-05, 4.909700000000489e-05, 4.979099999999348e-05, 4.95140000000005e-05, 4.9681000000002806e-05, 4.922200000000154e-05, 4.919499999999494e-05, 4.945899999999476e-05, 4.987499999999784e-05, 4.991600000000401e-05, 4.952800000000007e-05, 4.926400000000025e-05, 4.9723000000001516e-05, 4.9125000000004027e-05, 4.906899999999881e-05, 4.912499999999709e-05, 4.913899999999666e-05, 4.956999999999878e-05, 4.933299999999863e-05, 4.958299999999888e-05, 4.95270000000006e-05, 4.952699999999366e-05, 4.9223000000001016e-05, 4.918099999999537e-05, 4.999999999999449e-05, 4.9167000000002736e-05, 4.959700000000539e-05, 4.9167000000002736e-05, 4.929199999999939e-05, 4.9625000000004527e-05, 4.920800000000197e-05, 4.9929999999996644e-05, 5.0014000000001e-05, 4.980499999999999e-05, 4.904099999999967e-05, 4.965299999999673e-05, 4.908299999999838e-05, 4.9167000000002736e-05, 4.959800000000486e-05, 4.979199999999989e-05, 4.932000000000547e-05, 4.9445000000002126e-05]</msg>
<status status="PASS" starttime="20201112 09:55:08.748" endtime="20201112 09:55:08.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.736" endtime="20201112 09:55:08.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.761" endtime="20201112 09:55:08.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:08.770" endtime="20201112 09:55:08.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.765" endtime="20201112 09:55:08.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.757" endtime="20201112 09:55:08.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.219" endtime="20201112 09:55:08.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.218" endtime="20201112 09:55:08.797"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.821" endtime="20201112 09:55:08.841"></status>
</kw>
<msg timestamp="20201112 09:55:08.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:08.817" endtime="20201112 09:55:08.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:08.844" endtime="20201112 09:55:08.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.851" endtime="20201112 09:55:08.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.810" endtime="20201112 09:55:08.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.804" endtime="20201112 09:55:08.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.875" endtime="20201112 09:55:09.225"></status>
</kw>
<msg timestamp="20201112 09:55:09.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042510778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042561611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:08.872" endtime="20201112 09:55:09.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042510778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042561611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:09.235" endtime="20201112 09:55:09.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.254" endtime="20201112 09:55:09.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.864" endtime="20201112 09:55:09.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.859" endtime="20201112 09:55:09.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:09.273" level="INFO">${RESULT} = [{'time': 0.042561611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.083300000000013e-05, 'source_diff': 5.083300000000013e-05}, {'time': 0.042643833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:09.264" endtime="20201112 09:55:09.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:09.304" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:09.275" endtime="20201112 09:55:09.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.316" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 09:55:09.313" endtime="20201112 09:55:09.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.321" level="INFO">VALUE: [5.083300000000013e-05, 5.0693999999996964e-05, 5.004200000000014e-05, 5.077800000000132e-05, 5.018000000000383e-05, 5.055500000000074e-05, 5.080500000000099e-05, 5.056900000000031e-05, 5.03469999999992e-05, 5.009699999999895e-05, 5.0695000000003376e-05, 5.0221999999995603e-05, 5.0389000000004847e-05, 5.000000000000143e-05, 5.033299999999963e-05, 5.008299999999938e-05, 5.100000000000243e-05, 5.004100000000067e-05, 5.087500000000578e-05, 5.082000000000003e-05, 5.033299999999963e-05, 5.0679999999997394e-05, 5.024999999999474e-05, 5.03469999999992e-05, 5.023600000000211e-05, 5.0735999999995673e-05, 5.040299999999748e-05, 5.0653000000004667e-05, 5.088899999999841e-05, 5.000000000000143e-05, 5.108300000000038e-05, 5.048600000000236e-05, 5.0403000000004416e-05, 5.022299999999508e-05, 5.037500000000528e-05, 5.005500000000024e-05, 5.104100000000167e-05, 5.059700000000639e-05, 5.006999999999928e-05, 5.041699999999705e-05, 5.058299999999988e-05, 5.031900000000006e-05, 5.0417000000003986e-05, 5.0485999999995423e-05, 5.086099999999927e-05, 5.075000000000218e-05, 5.058299999999988e-05, 5.063899999999816e-05, 5.0179999999996894e-05, 5.050000000000193e-05]</msg>
<status status="PASS" starttime="20201112 09:55:09.318" endtime="20201112 09:55:09.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.306" endtime="20201112 09:55:09.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.331" endtime="20201112 09:55:09.334"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:09.339" endtime="20201112 09:55:09.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.335" endtime="20201112 09:55:09.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.326" endtime="20201112 09:55:09.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.799" endtime="20201112 09:55:09.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.798" endtime="20201112 09:55:09.366"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.389" endtime="20201112 09:55:09.408"></status>
</kw>
<msg timestamp="20201112 09:55:09.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:09.385" endtime="20201112 09:55:09.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:09.412" endtime="20201112 09:55:09.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.418" endtime="20201112 09:55:09.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.378" endtime="20201112 09:55:09.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.372" endtime="20201112 09:55:09.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.442" endtime="20201112 09:55:09.791"></status>
</kw>
<msg timestamp="20201112 09:55:09.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040962958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041014931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:09.438" endtime="20201112 09:55:09.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040962958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041014931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:09.801" endtime="20201112 09:55:09.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.821" endtime="20201112 09:55:09.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.431" endtime="20201112 09:55:09.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.426" endtime="20201112 09:55:09.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:09.841" level="INFO">${RESULT} = [{'time': 0.041014931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.197299999999683e-05, 'source_diff': 5.197299999999683e-05}, {'time': 0.041094097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:09.832" endtime="20201112 09:55:09.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:09.872" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:09.843" endtime="20201112 09:55:09.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.883" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 09:55:09.881" endtime="20201112 09:55:09.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.889" level="INFO">VALUE: [5.197299999999683e-05, 5.141600000000551e-05, 5.177700000000285e-05, 5.205600000000171e-05, 5.180500000000199e-05, 5.127800000000182e-05, 5.173600000000361e-05, 5.177700000000285e-05, 5.143099999999762e-05, 5.162499999999959e-05, 5.131900000000106e-05, 5.130500000000149e-05, 5.168099999999787e-05, 5.20419999999952e-05, 5.111099999999952e-05, 5.109799999999942e-05, 5.162499999999959e-05, 5.186100000000027e-05, 5.118099999999737e-05, 5.136099999999977e-05, 5.1943999999998214e-05, 5.125000000000268e-05, 5.143099999999762e-05, 5.11669999999978e-05, 5.125000000000268e-05, 5.143099999999762e-05, 5.1471999999996854e-05, 5.15549999999948e-05, 5.104200000000114e-05, 5.104200000000114e-05, 5.1957999999997784e-05, 5.1679999999998394e-05, 5.108300000000038e-05, 5.1957999999997784e-05, 5.150000000000293e-05, 5.182000000000103e-05, 5.18340000000006e-05, 5.143000000000508e-05, 5.15140000000025e-05, 5.183399999999366e-05, 5.1681000000004806e-05, 5.190299999999898e-05, 5.179200000000189e-05, 5.129199999999445e-05, 5.130500000000149e-05, 5.1235999999996173e-05, 5.119499999999694e-05, 5.1137999999999184e-05, 5.18470000000007e-05, 5.126400000000225e-05]</msg>
<status status="PASS" starttime="20201112 09:55:09.886" endtime="20201112 09:55:09.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.874" endtime="20201112 09:55:09.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.899" endtime="20201112 09:55:09.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:09.907" endtime="20201112 09:55:09.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.903" endtime="20201112 09:55:09.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.894" endtime="20201112 09:55:09.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.368" endtime="20201112 09:55:09.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.366" endtime="20201112 09:55:09.933"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.956" endtime="20201112 09:55:09.976"></status>
</kw>
<msg timestamp="20201112 09:55:09.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:09.953" endtime="20201112 09:55:09.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:09.980" endtime="20201112 09:55:09.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.986" endtime="20201112 09:55:09.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.946" endtime="20201112 09:55:09.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.940" endtime="20201112 09:55:09.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.010" endtime="20201112 09:55:10.359"></status>
</kw>
<msg timestamp="20201112 09:55:10.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040962486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041014861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:10.006" endtime="20201112 09:55:10.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040962486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041014861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:10.368" endtime="20201112 09:55:10.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.387" endtime="20201112 09:55:10.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.999" endtime="20201112 09:55:10.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.994" endtime="20201112 09:55:10.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:10.406" level="INFO">${RESULT} = [{'time': 0.041014861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.237500000000034e-05, 'source_diff': 5.237500000000034e-05}, {'time': 0.041093069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:10.397" endtime="20201112 09:55:10.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:10.438" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:10.409" endtime="20201112 09:55:10.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.449" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 09:55:10.446" endtime="20201112 09:55:10.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.454" level="INFO">VALUE: [5.237500000000034e-05, 5.233300000000163e-05, 5.293099999999912e-05, 5.28340000000016e-05, 5.263900000000016e-05, 5.234800000000067e-05, 5.244499999999819e-05, 5.2165999999999324e-05, 5.286100000000127e-05, 5.231899999999512e-05, 5.241699999999905e-05, 5.293099999999912e-05, 5.229199999999545e-05, 5.2209000000004446e-05, 5.21669999999988e-05, 5.230500000000249e-05, 5.291699999999955e-05, 5.288900000000041e-05, 5.283399999999466e-05, 5.2985999999997924e-05, 5.2471999999997854e-05, 5.245899999999776e-05, 5.211100000000052e-05, 5.2693999999998964e-05, 5.240299999999948e-05, 5.204100000000267e-05, 5.211100000000052e-05, 5.269499999999844e-05, 5.252800000000307e-05, 5.2959000000005196e-05, 5.237500000000034e-05, 5.3014000000004e-05, 5.223600000000411e-05, 5.300000000000443e-05, 5.283299999999519e-05, 5.2513999999996563e-05, 5.212500000000009e-05, 5.2457999999998284e-05, 5.270899999999801e-05, 5.3013999999997063e-05, 5.2665999999999824e-05, 5.254200000000264e-05, 5.2485999999997424e-05, 5.215299999999923e-05, 5.206900000000181e-05, 5.25419999999957e-05, 5.283299999999519e-05, 5.229099999999598e-05, 5.205600000000171e-05, 5.23470000000012e-05]</msg>
<status status="PASS" starttime="20201112 09:55:10.451" endtime="20201112 09:55:10.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.439" endtime="20201112 09:55:10.458"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.464" endtime="20201112 09:55:10.467"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:10.472" endtime="20201112 09:55:10.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.468" endtime="20201112 09:55:10.496"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.459" endtime="20201112 09:55:10.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.935" endtime="20201112 09:55:10.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.934" endtime="20201112 09:55:10.499"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.522" endtime="20201112 09:55:10.542"></status>
</kw>
<msg timestamp="20201112 09:55:10.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:10.518" endtime="20201112 09:55:10.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:10.545" endtime="20201112 09:55:10.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.552" endtime="20201112 09:55:10.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.511" endtime="20201112 09:55:10.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.505" endtime="20201112 09:55:10.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.575" endtime="20201112 09:55:10.923"></status>
</kw>
<msg timestamp="20201112 09:55:10.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040943639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040996819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:10.572" endtime="20201112 09:55:10.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040943639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040996819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:10.932" endtime="20201112 09:55:10.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.951" endtime="20201112 09:55:10.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.565" endtime="20201112 09:55:10.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.560" endtime="20201112 09:55:10.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:10.972" level="INFO">${RESULT} = [{'time': 0.040996819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3179999999999894e-05, 'source_diff': 5.3179999999999894e-05}, {'time': 0.041082042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:10.963" endtime="20201112 09:55:10.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:11.003" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:10.975" endtime="20201112 09:55:11.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.015" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 09:55:11.012" endtime="20201112 09:55:11.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.020" level="INFO">VALUE: [5.3179999999999894e-05, 5.347299999999833e-05, 5.386100000000227e-05, 5.3971999999999354e-05, 5.395800000000672e-05, 5.362499999999465e-05, 5.372299999999858e-05, 5.359700000000245e-05, 5.311099999999458e-05, 5.388900000000141e-05, 5.368099999999987e-05, 5.3957999999999784e-05, 5.3430000000000144e-05, 5.337500000000134e-05, 5.3235999999998174e-05, 5.331999999999559e-05, 5.3999999999998494e-05, 5.31669999999998e-05, 5.3527999999997133e-05, 5.336100000000177e-05, 5.331899999999612e-05, 5.3888000000001934e-05, 5.312500000000109e-05, 5.334699999999526e-05, 5.351300000000503e-05, 5.33340000000021e-05, 5.344499999999919e-05, 5.401299999999859e-05, 5.3193999999999464e-05, 5.388900000000141e-05, 5.4014000000005e-05, 5.366699999999336e-05, 5.390299999999404e-05, 5.3666000000000824e-05, 5.337500000000134e-05, 5.361199999999455e-05, 5.348600000000536e-05, 5.361099999999508e-05, 5.343099999999962e-05, 5.3971999999999354e-05, 5.4013999999998064e-05, 5.338900000000091e-05, 5.3221999999998604e-05, 5.386099999999533e-05, 5.309700000000195e-05, 5.380599999999652e-05, 5.382000000000303e-05, 5.3263999999997313e-05, 5.306900000000281e-05, 5.358299999999594e-05]</msg>
<status status="PASS" starttime="20201112 09:55:11.017" endtime="20201112 09:55:11.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.005" endtime="20201112 09:55:11.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.030" endtime="20201112 09:55:11.033"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:11.038" endtime="20201112 09:55:11.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.034" endtime="20201112 09:55:11.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.025" endtime="20201112 09:55:11.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.501" endtime="20201112 09:55:11.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.500" endtime="20201112 09:55:11.064"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.087" endtime="20201112 09:55:11.107"></status>
</kw>
<msg timestamp="20201112 09:55:11.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:11.084" endtime="20201112 09:55:11.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:11.111" endtime="20201112 09:55:11.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.117" endtime="20201112 09:55:11.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.077" endtime="20201112 09:55:11.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.071" endtime="20201112 09:55:11.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.141" endtime="20201112 09:55:11.489"></status>
</kw>
<msg timestamp="20201112 09:55:11.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040785125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040839431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:11.137" endtime="20201112 09:55:11.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040785125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040839431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:11.499" endtime="20201112 09:55:11.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.518" endtime="20201112 09:55:11.523"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.130" endtime="20201112 09:55:11.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.125" endtime="20201112 09:55:11.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:11.537" level="INFO">${RESULT} = [{'time': 0.040839431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.430600000000396e-05, 'source_diff': 5.430600000000396e-05}, {'time': 0.040923694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:11.528" endtime="20201112 09:55:11.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:11.568" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:11.539" endtime="20201112 09:55:11.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.579" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 09:55:11.577" endtime="20201112 09:55:11.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.585" level="INFO">VALUE: [5.430600000000396e-05, 5.4749999999999244e-05, 5.4430000000001144e-05, 5.482000000000403e-05, 5.4180000000000894e-05, 5.443100000000062e-05, 5.456999999999684e-05, 5.4944000000001214e-05, 5.511099999999658e-05, 5.4235999999999174e-05, 5.4944000000001214e-05, 5.493100000000112e-05, 5.4458000000000284e-05, 5.4999999999999494e-05, 5.48340000000036e-05, 5.41670000000008e-05, 5.4694000000000964e-05, 5.48749999999959e-05, 5.433299999999669e-05, 5.4763999999998814e-05, 5.483299999999719e-05, 5.46670000000013e-05, 5.419499999999994e-05, 5.4485999999999424e-05, 5.486100000000327e-05, 5.4763999999998814e-05, 5.457000000000378e-05, 5.4471999999999854e-05, 5.440300000000148e-05, 5.43749999999954e-05, 5.4999999999999494e-05, 5.493100000000112e-05, 5.4263999999998314e-05, 5.4999999999999494e-05, 5.41670000000008e-05, 5.430600000000396e-05, 5.4902000000002504e-05, 5.456899999999737e-05, 5.469500000000044e-05, 5.469500000000044e-05, 5.433299999999669e-05, 5.412500000000209e-05, 5.459700000000345e-05, 5.444500000000019e-05, 5.4221999999999604e-05, 5.4722000000000104e-05, 5.4679999999994455e-05, 5.465300000000173e-05, 5.404099999999773e-05, 5.4972000000000354e-05]</msg>
<status status="PASS" starttime="20201112 09:55:11.582" endtime="20201112 09:55:11.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.570" endtime="20201112 09:55:11.588"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.594" endtime="20201112 09:55:11.597"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:11.603" endtime="20201112 09:55:11.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.599" endtime="20201112 09:55:11.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.590" endtime="20201112 09:55:11.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.067" endtime="20201112 09:55:11.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.065" endtime="20201112 09:55:11.629"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.652" endtime="20201112 09:55:11.672"></status>
</kw>
<msg timestamp="20201112 09:55:11.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:11.649" endtime="20201112 09:55:11.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:11.676" endtime="20201112 09:55:11.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.682" endtime="20201112 09:55:11.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.641" endtime="20201112 09:55:11.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.636" endtime="20201112 09:55:11.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.706" endtime="20201112 09:55:12.054"></status>
</kw>
<msg timestamp="20201112 09:55:12.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040923639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04097925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:11.703" endtime="20201112 09:55:12.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040923639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04097925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:12.063" endtime="20201112 09:55:12.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.082" endtime="20201112 09:55:12.088"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.695" endtime="20201112 09:55:12.089"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.690" endtime="20201112 09:55:12.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:12.102" level="INFO">${RESULT} = [{'time': 0.04097925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.561100000000402e-05, 'source_diff': 5.561100000000402e-05}, {'time': 0.041062361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:55:12.092" endtime="20201112 09:55:12.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:12.133" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:12.104" endtime="20201112 09:55:12.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.144" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 09:55:12.142" endtime="20201112 09:55:12.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.149" level="INFO">VALUE: [5.561100000000402e-05, 5.541700000000205e-05, 5.512500000000309e-05, 5.583300000000513e-05, 5.538900000000291e-05, 5.5166000000002324e-05, 5.5291999999998453e-05, 5.583299999999819e-05, 5.565299999999579e-05, 5.5305999999998023e-05, 5.537500000000334e-05, 5.534699999999726e-05, 5.508400000000385e-05, 5.590300000000298e-05, 5.5958000000001784e-05, 5.5263999999999314e-05, 5.581899999999862e-05, 5.588899999999647e-05, 5.5236000000000174e-05, 5.587500000000384e-05, 5.593100000000212e-05, 5.5305999999998023e-05, 5.6014000000000064e-05, 5.530499999999855e-05, 5.569500000000144e-05, 5.5291999999998453e-05, 5.594500000000169e-05, 5.5222000000000604e-05, 5.511099999999658e-05, 5.6014000000000064e-05, 5.536100000000377e-05, 5.557000000000478e-05, 5.5652000000003254e-05, 5.583399999999766e-05, 5.559699999999751e-05, 5.5986000000000924e-05, 5.530499999999855e-05, 5.5791999999998954e-05, 5.5999999999993555e-05, 5.56670000000023e-05, 5.509699999999701e-05, 5.5972000000001354e-05, 5.5208000000001034e-05, 5.565300000000273e-05, 5.588900000000341e-05, 5.58749999999969e-05, 5.584699999999776e-05, 5.541700000000205e-05, 5.538899999999597e-05, 5.5915999999996135e-05]</msg>
<status status="PASS" starttime="20201112 09:55:12.146" endtime="20201112 09:55:12.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.135" endtime="20201112 09:55:12.153"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.159" endtime="20201112 09:55:12.162"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:12.168" endtime="20201112 09:55:12.190"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.163" endtime="20201112 09:55:12.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.154" endtime="20201112 09:55:12.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.631" endtime="20201112 09:55:12.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.630" endtime="20201112 09:55:12.194"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.217" endtime="20201112 09:55:12.237"></status>
</kw>
<msg timestamp="20201112 09:55:12.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:12.214" endtime="20201112 09:55:12.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:12.240" endtime="20201112 09:55:12.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.247" endtime="20201112 09:55:12.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.206" endtime="20201112 09:55:12.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.200" endtime="20201112 09:55:12.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.271" endtime="20201112 09:55:12.618"></status>
</kw>
<msg timestamp="20201112 09:55:12.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041392847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041448861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:12.267" endtime="20201112 09:55:12.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041392847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041448861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:12.628" endtime="20201112 09:55:12.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.647" endtime="20201112 09:55:12.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.260" endtime="20201112 09:55:12.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.255" endtime="20201112 09:55:12.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:12.666" level="INFO">${RESULT} = [{'time': 0.041448861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6013999999993125e-05, 'source_diff': 5.6013999999993125e-05}, {'time': 0.041535097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:12.657" endtime="20201112 09:55:12.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:12.697" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:12.669" endtime="20201112 09:55:12.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.709" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 09:55:12.706" endtime="20201112 09:55:12.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.714" level="INFO">VALUE: [5.6013999999993125e-05, 5.684699999999876e-05, 5.638899999999697e-05, 5.6819999999999093e-05, 5.6514000000000564e-05, 5.630600000000596e-05, 5.633299999999869e-05, 5.7000000000001494e-05, 5.6541999999999704e-05, 5.691699999999661e-05, 5.6528000000000134e-05, 5.6486000000001424e-05, 5.608299999999844e-05, 5.634699999999826e-05, 5.68340000000056e-05, 5.609799999999748e-05, 5.691699999999661e-05, 5.643099999999568e-05, 5.661099999999808e-05, 5.6514000000000564e-05, 5.69870000000014e-05, 5.615299999999629e-05, 5.6291999999999454e-05, 5.6291999999999454e-05, 5.615299999999629e-05, 5.6430000000003144e-05, 5.615299999999629e-05, 5.611099999999758e-05, 5.688899999999747e-05, 5.6236000000001174e-05, 5.6500000000000994e-05, 5.7083999999998913e-05, 5.636099999999783e-05, 5.644499999999525e-05, 5.690299999999704e-05, 5.7000000000001494e-05, 5.645899999999482e-05, 5.6555999999999274e-05, 5.622300000000108e-05, 5.627700000000041e-05, 5.669500000000244e-05, 5.6250000000000744e-05, 5.6972000000002354e-05, 5.6444000000002714e-05, 5.6971999999995415e-05, 5.644500000000219e-05, 5.658300000000588e-05, 5.6805999999999524e-05, 5.6750000000001244e-05, 5.68749999999979e-05]</msg>
<status status="PASS" starttime="20201112 09:55:12.711" endtime="20201112 09:55:12.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.699" endtime="20201112 09:55:12.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.724" endtime="20201112 09:55:12.727"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:12.733" endtime="20201112 09:55:12.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.728" endtime="20201112 09:55:12.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.719" endtime="20201112 09:55:12.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.196" endtime="20201112 09:55:12.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.195" endtime="20201112 09:55:12.759"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.782" endtime="20201112 09:55:12.802"></status>
</kw>
<msg timestamp="20201112 09:55:12.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:12.779" endtime="20201112 09:55:12.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:12.806" endtime="20201112 09:55:12.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.812" endtime="20201112 09:55:12.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.771" endtime="20201112 09:55:12.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.765" endtime="20201112 09:55:12.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.836" endtime="20201112 09:55:13.183"></status>
</kw>
<msg timestamp="20201112 09:55:13.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040938042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040996097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:12.832" endtime="20201112 09:55:13.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040938042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040996097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:13.192" endtime="20201112 09:55:13.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.211" endtime="20201112 09:55:13.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.825" endtime="20201112 09:55:13.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.820" endtime="20201112 09:55:13.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:13.233" level="INFO">${RESULT} = [{'time': 0.040996097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.80550000000013e-05, 'source_diff': 5.80550000000013e-05}, {'time': 0.041083306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:55:13.224" endtime="20201112 09:55:13.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:13.264" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:13.235" endtime="20201112 09:55:13.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.275" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 09:55:13.272" endtime="20201112 09:55:13.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.280" level="INFO">VALUE: [5.80550000000013e-05, 5.745900000000276e-05, 5.743100000000362e-05, 5.7542000000000704e-05, 5.7221999999995665e-05, 5.7986000000002924e-05, 5.7929999999997706e-05, 5.738899999999797e-05, 5.7708000000003534e-05, 5.7306000000000024e-05, 5.779100000000148e-05, 5.7569999999999844e-05, 5.733299999999969e-05, 5.8000000000002494e-05, 5.712499999999815e-05, 5.7444000000003714e-05, 5.795899999999632e-05, 5.7264000000001314e-05, 5.7513999999994625e-05, 5.758299999999994e-05, 5.7986000000002924e-05, 5.7250000000001744e-05, 5.7306000000000024e-05, 5.733299999999969e-05, 5.718100000000337e-05, 5.729100000000098e-05, 5.718099999999643e-05, 5.78749999999989e-05, 5.720900000000251e-05, 5.78749999999989e-05, 5.712499999999815e-05, 5.7929999999997706e-05, 5.758299999999994e-05, 5.7542000000000704e-05, 5.7152000000004755e-05, 5.715300000000423e-05, 5.768099999999693e-05, 5.709700000000595e-05, 5.7457999999996345e-05, 5.740299999999754e-05, 5.7416000000004574e-05, 5.7736000000002674e-05, 5.7278000000000884e-05, 5.786100000000627e-05, 5.713899999999772e-05, 5.7971999999996415e-05, 5.7415999999997636e-05, 5.7264000000001314e-05, 5.713900000000466e-05, 5.780500000000105e-05]</msg>
<status status="PASS" starttime="20201112 09:55:13.277" endtime="20201112 09:55:13.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.265" endtime="20201112 09:55:13.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.295" endtime="20201112 09:55:13.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:13.304" endtime="20201112 09:55:13.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.299" endtime="20201112 09:55:13.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.291" endtime="20201112 09:55:13.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.761" endtime="20201112 09:55:13.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.760" endtime="20201112 09:55:13.330"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.353" endtime="20201112 09:55:13.373"></status>
</kw>
<msg timestamp="20201112 09:55:13.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:13.350" endtime="20201112 09:55:13.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:13.376" endtime="20201112 09:55:13.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.383" endtime="20201112 09:55:13.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.342" endtime="20201112 09:55:13.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.336" endtime="20201112 09:55:13.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.406" endtime="20201112 09:55:13.756"></status>
</kw>
<msg timestamp="20201112 09:55:13.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040992986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041051875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:13.403" endtime="20201112 09:55:13.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040992986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041051875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:13.765" endtime="20201112 09:55:13.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.784" endtime="20201112 09:55:13.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.396" endtime="20201112 09:55:13.791"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.391" endtime="20201112 09:55:13.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:13.804" level="INFO">${RESULT} = [{'time': 0.041051875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.888899999999947e-05, 'source_diff': 5.888899999999947e-05}, {'time': 0.041141139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:13.795" endtime="20201112 09:55:13.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:13.835" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:13.806" endtime="20201112 09:55:13.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.846" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 09:55:13.844" endtime="20201112 09:55:13.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.852" level="INFO">VALUE: [5.888899999999947e-05, 5.865299999999879e-05, 5.868099999999793e-05, 5.890299999999904e-05, 5.833300000000069e-05, 5.8236000000003174e-05, 5.856900000000137e-05, 5.841699999999811e-05, 5.8457999999997345e-05, 5.813899999999872e-05, 5.8679999999998456e-05, 5.884700000000076e-05, 5.8985999999996985e-05, 5.8721999999997165e-05, 5.891699999999861e-05, 5.9000000000003494e-05, 5.833300000000069e-05, 5.838899999999897e-05, 5.886100000000033e-05, 5.865299999999879e-05, 5.8415999999998636e-05, 5.8249999999995805e-05, 5.8320000000000594e-05, 5.8542000000001704e-05, 5.9000000000003494e-05, 5.865299999999879e-05, 5.891699999999861e-05, 5.833300000000069e-05, 5.8458000000004284e-05, 5.870899999999707e-05, 5.873700000000315e-05, 5.869500000000444e-05, 5.8194999999997e-05, 5.8291999999994515e-05, 5.883300000000119e-05, 5.8236000000003174e-05, 5.8792000000001954e-05, 5.893100000000512e-05, 5.8986000000003924e-05, 5.834700000000026e-05, 5.886100000000033e-05, 5.9028000000002634e-05, 5.8347999999999733e-05, 5.861100000000008e-05, 5.8943999999998276e-05, 5.868099999999793e-05, 5.888899999999947e-05, 5.8179999999997956e-05, 5.83749999999994e-05, 5.8929999999998706e-05]</msg>
<status status="PASS" starttime="20201112 09:55:13.849" endtime="20201112 09:55:13.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.837" endtime="20201112 09:55:13.855"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.862" endtime="20201112 09:55:13.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:13.870" endtime="20201112 09:55:13.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.866" endtime="20201112 09:55:13.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.857" endtime="20201112 09:55:13.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.332" endtime="20201112 09:55:13.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.331" endtime="20201112 09:55:13.896"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.919" endtime="20201112 09:55:13.940"></status>
</kw>
<msg timestamp="20201112 09:55:13.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:13.916" endtime="20201112 09:55:13.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:13.943" endtime="20201112 09:55:13.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.950" endtime="20201112 09:55:13.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.909" endtime="20201112 09:55:13.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.903" endtime="20201112 09:55:13.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.975" endtime="20201112 09:55:14.322"></status>
</kw>
<msg timestamp="20201112 09:55:14.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041147972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041207611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:13.971" endtime="20201112 09:55:14.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041147972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041207611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:14.332" endtime="20201112 09:55:14.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.351" endtime="20201112 09:55:14.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.964" endtime="20201112 09:55:14.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.959" endtime="20201112 09:55:14.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:14.370" level="INFO">${RESULT} = [{'time': 0.041207611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.963900000000022e-05, 'source_diff': 5.963900000000022e-05}, {'time': 0.041299819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:14.361" endtime="20201112 09:55:14.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:14.401" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:14.373" endtime="20201112 09:55:14.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.412" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 09:55:14.410" endtime="20201112 09:55:14.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.418" level="INFO">VALUE: [5.963900000000022e-05, 5.986100000000133e-05, 5.936100000000083e-05, 5.9943999999999276e-05, 5.95550000000028e-05, 5.940299999999954e-05, 5.9555999999995335e-05, 5.9693999999999026e-05, 5.918099999999843e-05, 6.0028000000003634e-05, 5.961100000000108e-05, 5.9347999999993795e-05, 5.945899999999782e-05, 5.9556000000002274e-05, 5.993099999999918e-05, 5.956900000000237e-05, 5.9292000000002454e-05, 5.9471999999997915e-05, 5.9693999999999026e-05, 5.936100000000083e-05, 5.9084000000000914e-05, 5.912500000000015e-05, 5.980499999999611e-05, 5.9098000000000483e-05, 5.9319999999994655e-05, 6.0027999999996695e-05, 5.984700000000176e-05, 5.9138000000000246e-05, 5.90829999999945e-05, 5.98750000000009e-05, 5.9805999999995585e-05, 5.915299999999929e-05, 5.9679999999999456e-05, 5.993099999999918e-05, 5.9236000000004174e-05, 5.941699999999911e-05, 5.984699999999482e-05, 5.9556000000002274e-05, 5.9971999999998415e-05, 5.980499999999611e-05, 5.9985999999997985e-05, 5.915299999999929e-05, 5.912500000000015e-05, 5.8971999999997415e-05, 5.9665999999999886e-05, 5.911100000000058e-05, 5.9291999999995515e-05, 5.9180000000005895e-05, 5.912500000000015e-05, 5.993099999999918e-05]</msg>
<status status="PASS" starttime="20201112 09:55:14.415" endtime="20201112 09:55:14.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.403" endtime="20201112 09:55:14.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.428" endtime="20201112 09:55:14.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:14.436" endtime="20201112 09:55:14.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.432" endtime="20201112 09:55:14.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.423" endtime="20201112 09:55:14.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.898" endtime="20201112 09:55:14.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.897" endtime="20201112 09:55:14.462"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.485" endtime="20201112 09:55:14.506"></status>
</kw>
<msg timestamp="20201112 09:55:14.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:14.482" endtime="20201112 09:55:14.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:14.509" endtime="20201112 09:55:14.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.515" endtime="20201112 09:55:14.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.475" endtime="20201112 09:55:14.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.469" endtime="20201112 09:55:14.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.539" endtime="20201112 09:55:14.887"></status>
</kw>
<msg timestamp="20201112 09:55:14.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040824028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040884153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:14.536" endtime="20201112 09:55:14.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040824028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040884153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:14.897" endtime="20201112 09:55:14.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.916" endtime="20201112 09:55:14.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.528" endtime="20201112 09:55:14.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.524" endtime="20201112 09:55:14.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:14.935" level="INFO">${RESULT} = [{'time': 0.040884153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.012500000000115e-05, 'source_diff': 6.012500000000115e-05}, {'time': 0.040977417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:14.926" endtime="20201112 09:55:14.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:14.966" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:14.937" endtime="20201112 09:55:14.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.978" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 09:55:14.975" endtime="20201112 09:55:14.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.984" level="INFO">VALUE: [6.012500000000115e-05, 6.1000000000005494e-05, 6.0584000000002414e-05, 6.0305999999996085e-05, 6.008300000000244e-05, 6.0986000000005924e-05, 6.052700000000466e-05, 6.031899999999618e-05, 6.0985999999998985e-05, 6.0222000000005604e-05, 6.0264000000004314e-05, 6.088899999999453e-05, 6.031899999999618e-05, 6.061100000000208e-05, 6.0292000000003454e-05, 6.0194999999999e-05, 6.016699999999986e-05, 6.040300000000054e-05, 6.027699999999747e-05, 6.054100000000423e-05, 6.068099999999993e-05, 6.086100000000233e-05, 6.106899999999693e-05, 6.012500000000115e-05, 6.0152000000000816e-05, 6.081900000000362e-05, 6.081899999999668e-05, 6.008300000000244e-05, 6.062499999999471e-05, 6.0514000000004564e-05, 6.062500000000165e-05, 6.01670000000068e-05, 6.0819999999996155e-05, 6.063900000000122e-05, 6.0527999999997195e-05, 6.0084000000001914e-05, 6.03750000000014e-05, 6.0986000000005924e-05, 6.0249999999997805e-05, 6.038900000000097e-05, 6.068099999999993e-05, 6.1013999999998125e-05, 6.065300000000079e-05, 6.0457999999999346e-05, 6.0930000000000706e-05, 6.0707999999999596e-05, 6.0707999999999596e-05, 6.104099999999779e-05, 6.041700000000011e-05, 6.038900000000097e-05]</msg>
<status status="PASS" starttime="20201112 09:55:14.980" endtime="20201112 09:55:14.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.968" endtime="20201112 09:55:14.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.994" endtime="20201112 09:55:14.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:15.003" endtime="20201112 09:55:15.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.998" endtime="20201112 09:55:15.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.989" endtime="20201112 09:55:15.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.464" endtime="20201112 09:55:15.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.463" endtime="20201112 09:55:15.030"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.053" endtime="20201112 09:55:15.073"></status>
</kw>
<msg timestamp="20201112 09:55:15.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:15.049" endtime="20201112 09:55:15.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:15.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:15.076" endtime="20201112 09:55:15.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.083" endtime="20201112 09:55:15.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.042" endtime="20201112 09:55:15.088"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.036" endtime="20201112 09:55:15.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.106" endtime="20201112 09:55:15.455"></status>
</kw>
<msg timestamp="20201112 09:55:15.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040941736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041003472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:15.103" endtime="20201112 09:55:15.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:15.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040941736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041003472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:15.464" endtime="20201112 09:55:15.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.483" endtime="20201112 09:55:15.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.096" endtime="20201112 09:55:15.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.091" endtime="20201112 09:55:15.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:15.504" level="INFO">${RESULT} = [{'time': 0.041003472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.173599999999974e-05, 'source_diff': 6.173599999999974e-05}, {'time': 0.041092681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:15.495" endtime="20201112 09:55:15.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:15.612" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:15.506" endtime="20201112 09:55:15.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:15.624" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 09:55:15.621" endtime="20201112 09:55:15.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:15.629" level="INFO">VALUE: [6.173599999999974e-05, 6.17499999999993e-05, 6.183399999999672e-05, 6.197200000000042e-05, 6.162499999999571e-05, 6.168000000000146e-05, 6.159800000000298e-05, 6.10829999999965e-05, 6.17499999999993e-05, 6.188899999999553e-05, 6.112499999999521e-05, 6.119400000000053e-05, 6.154199999999777e-05, 6.13479999999958e-05, 6.198599999999999e-05, 6.180499999999811e-05, 6.109700000000301e-05, 6.140300000000154e-05, 6.131899999999718e-05, 6.12629999999989e-05, 6.190300000000204e-05, 6.180599999999759e-05, 6.116600000000139e-05, 6.172299999999964e-05, 6.1195e-05, 6.1500000000006e-05, 6.158300000000394e-05, 6.113900000000172e-05, 6.168000000000146e-05, 6.109699999999607e-05, 6.1195e-05, 6.134699999999632e-05, 6.130599999999709e-05, 6.144400000000078e-05, 6.199999999999956e-05, 6.181900000000462e-05, 6.188899999999553e-05, 6.14029999999946e-05, 6.209699999999707e-05, 6.15279999999982e-05, 6.199999999999956e-05, 6.116700000000086e-05, 6.134699999999632e-05, 6.184699999999682e-05, 6.122199999999967e-05, 6.145800000000035e-05, 6.112500000000215e-05, 6.154199999999777e-05, 6.148599999999949e-05, 6.113900000000172e-05]</msg>
<status status="PASS" starttime="20201112 09:55:15.626" endtime="20201112 09:55:15.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.614" endtime="20201112 09:55:15.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.639" endtime="20201112 09:55:15.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:15.647" endtime="20201112 09:55:15.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.643" endtime="20201112 09:55:15.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.634" endtime="20201112 09:55:15.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.032" endtime="20201112 09:55:15.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.031" endtime="20201112 09:55:15.673"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.698" endtime="20201112 09:55:15.718"></status>
</kw>
<msg timestamp="20201112 09:55:15.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:15.693" endtime="20201112 09:55:15.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:15.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:15.721" endtime="20201112 09:55:15.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.728" endtime="20201112 09:55:15.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.686" endtime="20201112 09:55:15.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.680" endtime="20201112 09:55:15.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.752" endtime="20201112 09:55:16.101"></status>
</kw>
<msg timestamp="20201112 09:55:16.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042049333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042112236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:15.748" endtime="20201112 09:55:16.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042049333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042112236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:16.110" endtime="20201112 09:55:16.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.129" endtime="20201112 09:55:16.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.741" endtime="20201112 09:55:16.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.736" endtime="20201112 09:55:16.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:16.147" level="INFO">${RESULT} = [{'time': 0.042112236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.29029999999961e-05, 'source_diff': 6.29029999999961e-05}, {'time': 0.042203486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:55:16.138" endtime="20201112 09:55:16.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:16.178" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:16.149" endtime="20201112 09:55:16.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.189" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 09:55:16.187" endtime="20201112 09:55:16.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.194" level="INFO">VALUE: [6.29029999999961e-05, 6.279199999999902e-05, 6.230499999999861e-05, 6.266600000000289e-05, 6.262499999999671e-05, 6.250000000000006e-05, 6.254199999999877e-05, 6.213900000000272e-05, 6.288799999999706e-05, 6.212500000000315e-05, 6.211100000000358e-05, 6.229199999999852e-05, 6.238900000000297e-05, 6.254099999999929e-05, 6.212500000000315e-05, 6.237499999999646e-05, 6.277799999999945e-05, 6.250000000000006e-05, 6.302700000000022e-05, 6.268100000000193e-05, 6.234699999999732e-05, 6.301400000000013e-05, 6.251399999999963e-05, 6.288900000000347e-05, 6.241700000000211e-05, 6.211100000000358e-05, 6.266699999999542e-05, 6.218100000000143e-05, 6.292999999999577e-05, 6.2888000000004e-05, 6.293099999999524e-05, 6.277799999999945e-05, 6.273600000000074e-05, 6.215200000000282e-05, 6.205599999999784e-05, 6.28750000000039e-05, 6.245800000000135e-05, 6.211100000000358e-05, 6.243100000000168e-05, 6.223600000000024e-05, 6.22499999999998e-05, 6.29300000000027e-05, 6.244399999999484e-05, 6.254199999999877e-05, 6.22080000000011e-05, 6.269400000000203e-05, 6.23750000000034e-05, 6.286099999999739e-05, 6.280499999999911e-05, 6.237499999999646e-05]</msg>
<status status="PASS" starttime="20201112 09:55:16.191" endtime="20201112 09:55:16.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.180" endtime="20201112 09:55:16.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.204" endtime="20201112 09:55:16.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:16.213" endtime="20201112 09:55:16.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.208" endtime="20201112 09:55:16.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.200" endtime="20201112 09:55:16.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.676" endtime="20201112 09:55:16.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.674" endtime="20201112 09:55:16.239"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.262" endtime="20201112 09:55:16.284"></status>
</kw>
<msg timestamp="20201112 09:55:16.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:16.258" endtime="20201112 09:55:16.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:16.287" endtime="20201112 09:55:16.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.294" endtime="20201112 09:55:16.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.251" endtime="20201112 09:55:16.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.245" endtime="20201112 09:55:16.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.317" endtime="20201112 09:55:16.664"></status>
</kw>
<msg timestamp="20201112 09:55:16.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042245042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042308806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:16.314" endtime="20201112 09:55:16.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042245042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042308806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:16.673" endtime="20201112 09:55:16.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.692" endtime="20201112 09:55:16.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.306" endtime="20201112 09:55:16.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.302" endtime="20201112 09:55:16.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:16.710" level="INFO">${RESULT} = [{'time': 0.042308806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.376400000000088e-05, 'source_diff': 6.376400000000088e-05}, {'time': 0.042400097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:16.701" endtime="20201112 09:55:16.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:16.741" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:16.712" endtime="20201112 09:55:16.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.752" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 09:55:16.750" endtime="20201112 09:55:16.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.758" level="INFO">VALUE: [6.376400000000088e-05, 6.344399999999584e-05, 6.40829999999995e-05, 6.376400000000088e-05, 6.373600000000174e-05, 6.315299999999635e-05, 6.32500000000008e-05, 6.345900000000182e-05, 6.401300000000165e-05, 6.400000000000156e-05, 6.338899999999703e-05, 6.395799999999591e-05, 6.38479999999983e-05, 6.345800000000235e-05, 6.392999999999677e-05, 6.356899999999943e-05, 6.394400000000328e-05, 6.373600000000174e-05, 6.411099999999864e-05, 6.331899999999918e-05, 6.36950000000025e-05, 6.313900000000372e-05, 6.326400000000038e-05, 6.334699999999832e-05, 6.370799999999566e-05, 6.330499999999961e-05, 6.322200000000167e-05, 6.398599999999505e-05, 6.33479999999978e-05, 6.347199999999498e-05, 6.376400000000088e-05, 6.316699999999592e-05, 6.351400000000063e-05, 6.37500000000013e-05, 6.377800000000045e-05, 6.388899999999753e-05, 6.373600000000174e-05, 6.331899999999918e-05, 6.395799999999591e-05, 6.398600000000199e-05, 6.327799999999995e-05, 6.359799999999804e-05, 6.329100000000004e-05, 6.345800000000235e-05, 6.341699999999617e-05, 6.361099999999814e-05, 6.387499999999796e-05, 6.326400000000038e-05, 6.322200000000167e-05, 6.319400000000253e-05]</msg>
<status status="PASS" starttime="20201112 09:55:16.754" endtime="20201112 09:55:16.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.743" endtime="20201112 09:55:16.761"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.767" endtime="20201112 09:55:16.770"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:16.776" endtime="20201112 09:55:16.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.771" endtime="20201112 09:55:16.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.763" endtime="20201112 09:55:16.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.241" endtime="20201112 09:55:16.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.240" endtime="20201112 09:55:16.802"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.825" endtime="20201112 09:55:16.845"></status>
</kw>
<msg timestamp="20201112 09:55:16.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:16.822" endtime="20201112 09:55:16.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:16.849" endtime="20201112 09:55:16.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.855" endtime="20201112 09:55:16.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.814" endtime="20201112 09:55:16.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.808" endtime="20201112 09:55:16.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.881" endtime="20201112 09:55:17.230"></status>
</kw>
<msg timestamp="20201112 09:55:17.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040899319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040964, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:55:16.878" endtime="20201112 09:55:17.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040899319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040964, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:55:17.240" endtime="20201112 09:55:17.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.259" endtime="20201112 09:55:17.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.868" endtime="20201112 09:55:17.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.864" endtime="20201112 09:55:17.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:17.276" level="INFO">${RESULT} = [{'time': 0.040964, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.468099999999699e-05, 'source_diff': 6.468099999999699e-05}, {'time': 0.041057306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:55:17.267" endtime="20201112 09:55:17.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:17.308" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:17.279" endtime="20201112 09:55:17.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.319" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 09:55:17.316" endtime="20201112 09:55:17.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.324" level="INFO">VALUE: [6.468099999999699e-05, 6.455600000000034e-05, 6.423600000000224e-05, 6.459699999999957e-05, 6.443100000000368e-05, 6.462500000000565e-05, 6.494500000000375e-05, 6.47500000000023e-05, 6.497200000000342e-05, 6.423700000000171e-05, 6.506900000000093e-05, 6.411199999999811e-05, 6.48750000000059e-05, 6.477800000000145e-05, 6.423700000000171e-05, 6.416700000000386e-05, 6.479200000000102e-05, 6.50280000000017e-05, 6.466699999999742e-05, 6.476400000000188e-05, 6.436099999999889e-05, 6.409799999999855e-05, 6.473700000000221e-05, 6.462499999999871e-05, 6.476399999999494e-05, 6.412500000000515e-05, 6.44159999999977e-05, 6.430500000000061e-05, 6.469499999999656e-05, 6.430600000000009e-05, 6.413900000000472e-05, 6.450000000000206e-05, 6.49159999999982e-05, 6.4583e-05, 6.467999999999752e-05, 6.501400000000213e-05, 6.433299999999975e-05, 6.487499999999896e-05, 6.481899999999374e-05, 6.477800000000145e-05, 6.497199999999648e-05, 6.451399999999469e-05, 6.415300000000429e-05, 6.441699999999717e-05, 6.433299999999975e-05, 6.413899999999778e-05, 6.512500000000615e-05, 6.483300000000025e-05, 6.430600000000009e-05, 6.412499999999821e-05]</msg>
<status status="PASS" starttime="20201112 09:55:17.321" endtime="20201112 09:55:17.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.309" endtime="20201112 09:55:17.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.334" endtime="20201112 09:55:17.337"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:17.342" endtime="20201112 09:55:17.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.338" endtime="20201112 09:55:17.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.329" endtime="20201112 09:55:17.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.804" endtime="20201112 09:55:17.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.803" endtime="20201112 09:55:17.369"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.392" endtime="20201112 09:55:17.412"></status>
</kw>
<msg timestamp="20201112 09:55:17.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:17.388" endtime="20201112 09:55:17.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:17.416" endtime="20201112 09:55:17.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.422" endtime="20201112 09:55:17.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.381" endtime="20201112 09:55:17.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.375" endtime="20201112 09:55:17.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.446" endtime="20201112 09:55:17.797"></status>
</kw>
<msg timestamp="20201112 09:55:17.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041086153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041151542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:17.442" endtime="20201112 09:55:17.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041086153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041151542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:17.806" endtime="20201112 09:55:17.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.825" endtime="20201112 09:55:17.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.435" endtime="20201112 09:55:17.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.430" endtime="20201112 09:55:17.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:17.843" level="INFO">${RESULT} = [{'time': 0.041151542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.538899999999903e-05, 'source_diff': 6.538899999999903e-05}, {'time': 0.041246778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:17.834" endtime="20201112 09:55:17.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:17.876" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:17.845" endtime="20201112 09:55:17.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.887" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 09:55:17.885" endtime="20201112 09:55:17.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.893" level="INFO">VALUE: [6.538899999999903e-05, 6.512499999999921e-05, 6.551399999999569e-05, 6.568100000000493e-05, 6.595900000000432e-05, 6.508399999999998e-05, 6.599999999999662e-05, 6.504200000000127e-05, 6.548600000000349e-05, 6.527700000000247e-05, 6.595799999999791e-05, 6.522199999999673e-05, 6.605500000000236e-05, 6.522199999999673e-05, 6.586099999999345e-05, 6.530499999999467e-05, 6.548600000000349e-05, 6.580500000000211e-05, 6.545799999999741e-05, 6.559700000000057e-05, 6.551400000000263e-05, 6.5277999999995e-05, 6.541699999999817e-05, 6.60559999999949e-05, 6.54029999999986e-05, 6.587499999999996e-05, 6.570899999999713e-05, 6.515299999999835e-05, 6.594500000000475e-05, 6.577800000000245e-05, 6.544500000000425e-05, 6.594400000000528e-05, 6.527699999999553e-05, 6.523600000000324e-05, 6.552700000000272e-05, 6.548600000000349e-05, 6.55700000000009e-05, 6.583300000000125e-05, 6.547200000000392e-05, 6.588899999999953e-05, 6.552799999999526e-05, 6.60280000000027e-05, 6.505500000000136e-05, 6.567999999999852e-05, 6.52229999999962e-05, 6.601399999999619e-05, 6.605600000000184e-05, 6.548599999999655e-05, 6.580499999999517e-05, 6.594500000000475e-05]</msg>
<status status="PASS" starttime="20201112 09:55:17.890" endtime="20201112 09:55:17.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.878" endtime="20201112 09:55:17.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.903" endtime="20201112 09:55:17.905"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:17.911" endtime="20201112 09:55:17.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.907" endtime="20201112 09:55:17.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.898" endtime="20201112 09:55:17.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.371" endtime="20201112 09:55:17.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.370" endtime="20201112 09:55:17.937"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.961" endtime="20201112 09:55:17.981"></status>
</kw>
<msg timestamp="20201112 09:55:17.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:17.957" endtime="20201112 09:55:17.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:17.984" endtime="20201112 09:55:17.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.991" endtime="20201112 09:55:17.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.950" endtime="20201112 09:55:17.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.944" endtime="20201112 09:55:17.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.015" endtime="20201112 09:55:18.362"></status>
</kw>
<msg timestamp="20201112 09:55:18.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040880889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040947861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:18.011" endtime="20201112 09:55:18.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040880889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040947861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:18.372" endtime="20201112 09:55:18.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.391" endtime="20201112 09:55:18.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.004" endtime="20201112 09:55:18.398"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.999" endtime="20201112 09:55:18.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:18.410" level="INFO">${RESULT} = [{'time': 0.040947861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.697200000000542e-05, 'source_diff': 6.697200000000542e-05}, {'time': 0.041046125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:18.401" endtime="20201112 09:55:18.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:18.441" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:18.412" endtime="20201112 09:55:18.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.452" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 09:55:18.450" endtime="20201112 09:55:18.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.458" level="INFO">VALUE: [6.697200000000542e-05, 6.622200000000467e-05, 6.616700000000586e-05, 6.708299999999556e-05, 6.656900000000243e-05, 6.612500000000021e-05, 6.670799999999866e-05, 6.661100000000114e-05, 6.655500000000286e-05, 6.680499999999617e-05, 6.670799999999866e-05, 6.70280000000037e-05, 6.620799999999816e-05, 6.677800000000345e-05, 6.681900000000268e-05, 6.702699999999728e-05, 6.611100000000064e-05, 6.655600000000234e-05, 6.695899999999838e-05, 6.616700000000586e-05, 6.679200000000302e-05, 6.648599999999755e-05, 6.656899999999549e-05, 6.676399999999694e-05, 6.694399999999934e-05, 6.634699999999438e-05, 6.708299999999556e-05, 6.630499999999567e-05, 6.637500000000046e-05, 6.70830000000025e-05, 6.694400000000628e-05, 6.670799999999866e-05, 6.60700000000014e-05, 6.620799999999816e-05, 6.629200000000252e-05, 6.609700000000107e-05, 6.665299999999985e-05, 6.608400000000098e-05, 6.626299999999696e-05, 6.681899999999574e-05, 6.611100000000064e-05, 6.669399999999909e-05, 6.648600000000449e-05, 6.701400000000413e-05, 6.668099999999899e-05, 6.680600000000259e-05, 6.642999999999927e-05, 6.620799999999816e-05, 6.654099999999635e-05, 6.65280000000032e-05]</msg>
<status status="PASS" starttime="20201112 09:55:18.454" endtime="20201112 09:55:18.464"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.443" endtime="20201112 09:55:18.466"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.472" endtime="20201112 09:55:18.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:18.481" endtime="20201112 09:55:18.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.476" endtime="20201112 09:55:18.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.468" endtime="20201112 09:55:18.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.940" endtime="20201112 09:55:18.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.938" endtime="20201112 09:55:18.507"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.530" endtime="20201112 09:55:18.550"></status>
</kw>
<msg timestamp="20201112 09:55:18.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:18.526" endtime="20201112 09:55:18.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:18.554" endtime="20201112 09:55:18.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.560" endtime="20201112 09:55:18.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.519" endtime="20201112 09:55:18.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.513" endtime="20201112 09:55:18.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.584" endtime="20201112 09:55:18.931"></status>
</kw>
<msg timestamp="20201112 09:55:18.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041021069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041088403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:18.581" endtime="20201112 09:55:18.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041021069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041088403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:18.941" endtime="20201112 09:55:18.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.960" endtime="20201112 09:55:18.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.573" endtime="20201112 09:55:18.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.569" endtime="20201112 09:55:18.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:18.979" level="INFO">${RESULT} = [{'time': 0.041088403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.733400000000223e-05, 'source_diff': 6.733400000000223e-05}, {'time': 0.041186625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:18.970" endtime="20201112 09:55:18.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:19.010" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:18.981" endtime="20201112 09:55:19.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.022" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 09:55:19.019" endtime="20201112 09:55:19.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.027" level="INFO">VALUE: [6.733400000000223e-05, 6.731899999999624e-05, 6.715300000000035e-05, 6.737500000000146e-05, 6.71109999999947e-05, 6.712499999999427e-05, 6.761100000000214e-05, 6.732000000000266e-05, 6.715300000000035e-05, 6.776399999999794e-05, 6.801400000000513e-05, 6.798599999999905e-05, 6.708400000000198e-05, 6.724999999999787e-05, 6.80559999999969e-05, 6.765300000000085e-05, 6.745799999999941e-05, 6.802799999999776e-05, 6.808299999999656e-05, 6.800000000000556e-05, 6.798599999999905e-05, 6.766700000000042e-05, 6.768099999999999e-05, 6.768000000000052e-05, 6.744399999999984e-05, 6.711100000000164e-05, 6.77359999999988e-05, 6.800000000000556e-05, 6.718000000000002e-05, 6.754099999999735e-05, 6.769400000000009e-05, 6.726399999999744e-05, 6.777799999999751e-05, 6.726299999999796e-05, 6.768099999999999e-05, 6.715300000000035e-05, 6.790299999999416e-05, 6.781999999999622e-05, 6.71109999999947e-05, 6.791700000000067e-05, 6.750000000000506e-05, 6.756899999999649e-05, 6.719499999999906e-05, 6.754199999999683e-05, 6.736100000000189e-05, 6.745900000000582e-05, 6.763900000000128e-05, 6.738900000000103e-05, 6.737499999999452e-05, 6.761100000000214e-05]</msg>
<status status="PASS" starttime="20201112 09:55:19.024" endtime="20201112 09:55:19.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.012" endtime="20201112 09:55:19.030"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.037" endtime="20201112 09:55:19.039"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:19.045" endtime="20201112 09:55:19.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.041" endtime="20201112 09:55:19.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.032" endtime="20201112 09:55:19.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.509" endtime="20201112 09:55:19.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.508" endtime="20201112 09:55:19.071"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.094" endtime="20201112 09:55:19.115"></status>
</kw>
<msg timestamp="20201112 09:55:19.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:19.091" endtime="20201112 09:55:19.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:19.119" endtime="20201112 09:55:19.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.125" endtime="20201112 09:55:19.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.084" endtime="20201112 09:55:19.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.078" endtime="20201112 09:55:19.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.150" endtime="20201112 09:55:19.496"></status>
</kw>
<msg timestamp="20201112 09:55:19.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040909528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040978069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:19.146" endtime="20201112 09:55:19.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040909528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040978069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:19.506" endtime="20201112 09:55:19.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.525" endtime="20201112 09:55:19.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.139" endtime="20201112 09:55:19.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.134" endtime="20201112 09:55:19.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:19.544" level="INFO">${RESULT} = [{'time': 0.040978069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.854099999999835e-05, 'source_diff': 6.854099999999835e-05}, {'time': 0.041079319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:19.535" endtime="20201112 09:55:19.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:19.575" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:19.547" endtime="20201112 09:55:19.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.587" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 09:55:19.584" endtime="20201112 09:55:19.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.592" level="INFO">VALUE: [6.854099999999835e-05, 6.850000000000606e-05, 6.880599999999765e-05, 6.862499999999577e-05, 6.847199999999998e-05, 6.8583000000004e-05, 6.820800000000016e-05, 6.852799999999826e-05, 6.847199999999998e-05, 6.890199999999569e-05, 6.808400000000298e-05, 6.833400000000323e-05, 6.816600000000145e-05, 6.888900000000253e-05, 6.899999999999962e-05, 6.85559999999974e-05, 6.818100000000049e-05, 6.859699999999663e-05, 6.897200000000048e-05, 6.884699999999688e-05, 6.883399999999679e-05, 6.874999999999937e-05, 6.84030000000016e-05, 6.824999999999887e-05, 6.84160000000017e-05, 6.826399999999844e-05, 6.858399999999654e-05, 6.858299999999706e-05, 6.865300000000185e-05, 6.849999999999912e-05, 6.855499999999792e-05, 6.856999999999697e-05, 6.809700000000307e-05, 6.809699999999613e-05, 6.87359999999998e-05, 6.827799999999801e-05, 6.806899999999699e-05, 6.836099999999595e-05, 6.840200000000213e-05, 6.886200000000287e-05, 6.84030000000016e-05, 6.844500000000031e-05, 6.874999999999937e-05, 6.827700000000547e-05, 6.906899999999799e-05, 6.841700000000117e-05, 6.838800000000256e-05, 6.893100000000124e-05, 6.812500000000221e-05, 6.84309999999938e-05]</msg>
<status status="PASS" starttime="20201112 09:55:19.589" endtime="20201112 09:55:19.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.577" endtime="20201112 09:55:19.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.602" endtime="20201112 09:55:19.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:19.610" endtime="20201112 09:55:19.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.606" endtime="20201112 09:55:19.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.597" endtime="20201112 09:55:19.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.073" endtime="20201112 09:55:19.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.072" endtime="20201112 09:55:19.637"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.660" endtime="20201112 09:55:19.680"></status>
</kw>
<msg timestamp="20201112 09:55:19.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:19.656" endtime="20201112 09:55:19.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:19.684" endtime="20201112 09:55:19.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.690" endtime="20201112 09:55:19.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.649" endtime="20201112 09:55:19.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.643" endtime="20201112 09:55:19.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.714" endtime="20201112 09:55:20.061"></status>
</kw>
<msg timestamp="20201112 09:55:20.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040987417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041056514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:19.710" endtime="20201112 09:55:20.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040987417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041056514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:20.071" endtime="20201112 09:55:20.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.090" endtime="20201112 09:55:20.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.703" endtime="20201112 09:55:20.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.698" endtime="20201112 09:55:20.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:20.109" level="INFO">${RESULT} = [{'time': 0.041056514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.909700000000407e-05, 'source_diff': 6.909700000000407e-05}, {'time': 0.041158764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:20.100" endtime="20201112 09:55:20.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:20.142" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:20.111" endtime="20201112 09:55:20.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.154" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 09:55:20.152" endtime="20201112 09:55:20.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.160" level="INFO">VALUE: [6.909700000000407e-05, 6.929199999999858e-05, 6.963900000000328e-05, 6.936099999999695e-05, 6.991699999999573e-05, 6.929199999999858e-05, 6.948600000000055e-05, 6.950000000000012e-05, 6.920800000000116e-05, 6.99030000000031e-05, 6.998600000000105e-05, 6.969499999999462e-05, 6.915299999999541e-05, 6.95559999999984e-05, 6.922200000000073e-05, 6.997200000000148e-05, 6.966600000000295e-05, 6.915199999999594e-05, 6.933400000000423e-05, 6.994500000000181e-05, 7.002799999999976e-05, 6.976399999999994e-05, 7.008400000000498e-05, 6.981899999999874e-05, 6.975000000000037e-05, 6.998700000000052e-05, 6.991599999999626e-05, 7.004099999999985e-05, 6.973599999999386e-05, 6.981899999999874e-05, 6.952799999999926e-05, 6.970800000000166e-05, 6.932000000000466e-05, 6.99030000000031e-05, 6.995800000000191e-05, 6.913900000000278e-05, 7.006999999999847e-05, 6.959699999999763e-05, 6.97909999999996e-05, 6.909700000000407e-05, 6.924999999999987e-05, 6.954199999999883e-05, 7.004099999999985e-05, 6.92230000000002e-05, 6.91109999999967e-05, 6.905499999999842e-05, 6.920800000000116e-05, 6.917999999999508e-05, 6.96109999999972e-05, 6.956999999999797e-05]</msg>
<status status="PASS" starttime="20201112 09:55:20.156" endtime="20201112 09:55:20.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.144" endtime="20201112 09:55:20.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.170" endtime="20201112 09:55:20.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:20.179" endtime="20201112 09:55:20.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.174" endtime="20201112 09:55:20.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.165" endtime="20201112 09:55:20.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.639" endtime="20201112 09:55:20.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.638" endtime="20201112 09:55:20.205"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.228" endtime="20201112 09:55:20.249"></status>
</kw>
<msg timestamp="20201112 09:55:20.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:20.225" endtime="20201112 09:55:20.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:20.252" endtime="20201112 09:55:20.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.259" endtime="20201112 09:55:20.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.217" endtime="20201112 09:55:20.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.212" endtime="20201112 09:55:20.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.282" endtime="20201112 09:55:20.630"></status>
</kw>
<msg timestamp="20201112 09:55:20.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041211694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041282167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:20.279" endtime="20201112 09:55:20.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041211694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041282167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:20.640" endtime="20201112 09:55:20.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.659" endtime="20201112 09:55:20.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.272" endtime="20201112 09:55:20.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.267" endtime="20201112 09:55:20.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:20.677" level="INFO">${RESULT} = [{'time': 0.041282167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.047300000000145e-05, 'source_diff': 7.047300000000145e-05}, {'time': 0.041385472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:20.668" endtime="20201112 09:55:20.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:20.709" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:20.679" endtime="20201112 09:55:20.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.720" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 09:55:20.718" endtime="20201112 09:55:20.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.726" level="INFO">VALUE: [7.047300000000145e-05, 7.009699999999813e-05, 7.048600000000155e-05, 7.063899999999734e-05, 7.097299999999501e-05, 7.082000000000616e-05, 7.072199999999529e-05, 7.068099999999605e-05, 7.075000000000137e-05, 7.093000000000377e-05, 7.019399999999565e-05, 7.016700000000292e-05, 7.101400000000119e-05, 7.094500000000281e-05, 7.038899999999709e-05, 7.043000000000327e-05, 7.086099999999845e-05, 7.015299999999641e-05, 7.081899999999974e-05, 7.084700000000582e-05, 7.10559999999999e-05, 7.065199999999744e-05, 7.09030000000041e-05, 7.034699999999838e-05, 7.030599999999915e-05, 7.102800000000076e-05, 7.091700000000367e-05, 7.036099999999795e-05, 7.045800000000241e-05, 7.02360000000013e-05, 7.020800000000216e-05, 7.051400000000069e-05, 7.027800000000001e-05, 7.040299999999666e-05, 7.013899999999684e-05, 7.031899999999924e-05, 7.102800000000076e-05, 7.102700000000128e-05, 7.059699999999863e-05, 7.041599999999676e-05, 7.07910000000006e-05, 7.088900000000453e-05, 7.024999999999393e-05, 7.037499999999752e-05, 7.09309999999963e-05, 7.108299999999956e-05, 7.030600000000609e-05, 7.116700000000392e-05, 7.097200000000248e-05, 7.07360000000018e-05]</msg>
<status status="PASS" starttime="20201112 09:55:20.723" endtime="20201112 09:55:20.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.711" endtime="20201112 09:55:20.729"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.735" endtime="20201112 09:55:20.738"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:20.744" endtime="20201112 09:55:20.766"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.740" endtime="20201112 09:55:20.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.731" endtime="20201112 09:55:20.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.207" endtime="20201112 09:55:20.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.206" endtime="20201112 09:55:20.770"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.793" endtime="20201112 09:55:20.814"></status>
</kw>
<msg timestamp="20201112 09:55:20.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:20.790" endtime="20201112 09:55:20.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:20.817" endtime="20201112 09:55:20.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.824" endtime="20201112 09:55:20.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.783" endtime="20201112 09:55:20.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.777" endtime="20201112 09:55:20.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.848" endtime="20201112 09:55:21.195"></status>
</kw>
<msg timestamp="20201112 09:55:21.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040771514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04084275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:20.844" endtime="20201112 09:55:21.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040771514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04084275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:21.205" endtime="20201112 09:55:21.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.224" endtime="20201112 09:55:21.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.837" endtime="20201112 09:55:21.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.832" endtime="20201112 09:55:21.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:21.242" level="INFO">${RESULT} = [{'time': 0.04084275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.123599999999536e-05, 'source_diff': 7.123599999999536e-05}, {'time': 0.040942, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7...</msg>
<status status="PASS" starttime="20201112 09:55:21.233" endtime="20201112 09:55:21.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:21.275" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:21.244" endtime="20201112 09:55:21.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.286" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 09:55:21.284" endtime="20201112 09:55:21.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.292" level="INFO">VALUE: [7.123599999999536e-05, 7.163899999999834e-05, 7.201400000000219e-05, 7.130500000000067e-05, 7.199999999999568e-05, 7.1763999999995e-05, 7.142999999999733e-05, 7.118099999999655e-05, 7.150000000000212e-05, 7.152799999999432e-05, 7.138900000000503e-05, 7.179200000000108e-05, 7.14030000000046e-05, 7.183300000000031e-05, 7.168000000000452e-05, 7.145900000000288e-05, 7.186099999999945e-05, 7.131900000000024e-05, 7.148599999999561e-05, 7.151299999999527e-05, 7.116599999999751e-05, 7.165300000000485e-05, 7.131999999999972e-05, 7.17360000000028e-05, 7.179199999999414e-05, 7.167999999999758e-05, 7.177700000000203e-05, 7.144500000000331e-05, 7.108399999999904e-05, 7.175000000000237e-05, 7.209700000000013e-05, 7.170900000000313e-05, 7.141699999999723e-05, 7.181900000000074e-05, 7.11109999999987e-05, 7.119500000000306e-05, 7.161199999999868e-05, 7.12230000000022e-05, 7.202800000000176e-05, 7.145799999999647e-05, 7.166700000000442e-05, 7.137499999999852e-05, 7.168099999999705e-05, 7.125000000000187e-05, 7.162499999999877e-05, 7.183300000000031e-05, 7.194400000000434e-05, 7.11109999999987e-05, 7.141700000000417e-05, 7.186099999999945e-05]</msg>
<status status="PASS" starttime="20201112 09:55:21.289" endtime="20201112 09:55:21.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.277" endtime="20201112 09:55:21.295"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.301" endtime="20201112 09:55:21.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:21.310" endtime="20201112 09:55:21.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.305" endtime="20201112 09:55:21.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.297" endtime="20201112 09:55:21.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.773" endtime="20201112 09:55:21.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.771" endtime="20201112 09:55:21.336"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.359" endtime="20201112 09:55:21.380"></status>
</kw>
<msg timestamp="20201112 09:55:21.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:21.355" endtime="20201112 09:55:21.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:21.383" endtime="20201112 09:55:21.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.389" endtime="20201112 09:55:21.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.348" endtime="20201112 09:55:21.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.342" endtime="20201112 09:55:21.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.413" endtime="20201112 09:55:21.761"></status>
</kw>
<msg timestamp="20201112 09:55:21.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040726653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040799597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:21.410" endtime="20201112 09:55:21.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040726653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040799597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:21.771" endtime="20201112 09:55:21.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.790" endtime="20201112 09:55:21.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.402" endtime="20201112 09:55:21.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.398" endtime="20201112 09:55:21.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:21.807" level="INFO">${RESULT} = [{'time': 0.040799597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.29439999999984e-05, 'source_diff': 7.29439999999984e-05}, {'time': 0.040902875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:55:21.798" endtime="20201112 09:55:21.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:21.840" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:21.810" endtime="20201112 09:55:21.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.851" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 09:55:21.849" endtime="20201112 09:55:21.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.857" level="INFO">VALUE: [7.29439999999984e-05, 7.231900000000124e-05, 7.300000000000362e-05, 7.259700000000063e-05, 7.226400000000244e-05, 7.313800000000037e-05, 7.236099999999995e-05, 7.279200000000208e-05, 7.241699999999823e-05, 7.224999999999593e-05, 7.287500000000002e-05, 7.291699999999873e-05, 7.250000000000312e-05, 7.293100000000524e-05, 7.258300000000106e-05, 7.265300000000585e-05, 7.2069000000001e-05, 7.305500000000242e-05, 7.24439999999979e-05, 7.254100000000235e-05, 7.298599999999711e-05, 7.277800000000251e-05, 7.22910000000021e-05, 7.268000000000552e-05, 7.215199999999894e-05, 7.286100000000045e-05, 7.209700000000013e-05, 7.272199999999729e-05, 7.227700000000253e-05, 7.213799999999937e-05, 7.242999999999833e-05, 7.297199999999754e-05, 7.266599999999901e-05, 7.223599999999636e-05, 7.222199999999679e-05, 7.30560000000019e-05, 7.30560000000019e-05, 7.290299999999916e-05, 7.238899999999909e-05, 7.308400000000104e-05, 7.269499999999762e-05, 7.256999999999403e-05, 7.29439999999984e-05, 7.209700000000013e-05, 7.294400000000534e-05, 7.215199999999894e-05, 7.262499999999977e-05, 7.283300000000131e-05, 7.255500000000192e-05, 7.263899999999934e-05]</msg>
<status status="PASS" starttime="20201112 09:55:21.854" endtime="20201112 09:55:21.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.842" endtime="20201112 09:55:21.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.866" endtime="20201112 09:55:21.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:21.875" endtime="20201112 09:55:21.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.870" endtime="20201112 09:55:21.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.862" endtime="20201112 09:55:21.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.338" endtime="20201112 09:55:21.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.337" endtime="20201112 09:55:21.901"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.924" endtime="20201112 09:55:21.945"></status>
</kw>
<msg timestamp="20201112 09:55:21.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:21.920" endtime="20201112 09:55:21.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:21.948" endtime="20201112 09:55:21.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.955" endtime="20201112 09:55:21.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.913" endtime="20201112 09:55:21.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.907" endtime="20201112 09:55:21.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.978" endtime="20201112 09:55:22.326"></status>
</kw>
<msg timestamp="20201112 09:55:22.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040858125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040932181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:21.975" endtime="20201112 09:55:22.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040858125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040932181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:22.336" endtime="20201112 09:55:22.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:22.354" endtime="20201112 09:55:22.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.968" endtime="20201112 09:55:22.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.963" endtime="20201112 09:55:22.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:22.372" level="INFO">${RESULT} = [{'time': 0.040932181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.405599999999596e-05, 'source_diff': 7.405599999999596e-05}, {'time': 0.041037458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:22.363" endtime="20201112 09:55:22.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:22.406" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:22.374" endtime="20201112 09:55:22.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.417" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 09:55:22.415" endtime="20201112 09:55:22.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.423" level="INFO">VALUE: [7.405599999999596e-05, 7.37769999999971e-05, 7.405499999999648e-05, 7.391699999999973e-05, 7.355599999999546e-05, 7.326400000000344e-05, 7.312500000000027e-05, 7.405499999999648e-05, 7.320799999999822e-05, 7.322199999999779e-05, 7.36110000000012e-05, 7.365299999999991e-05, 7.362500000000077e-05, 7.359700000000163e-05, 7.354100000000335e-05, 7.381900000000274e-05, 7.343100000000574e-05, 7.386100000000145e-05, 7.350000000000412e-05, 7.313899999999984e-05, 7.326400000000344e-05, 7.333400000000129e-05, 7.383399999999485e-05, 7.359800000000111e-05, 7.370899999999819e-05, 7.347199999999804e-05, 7.367999999999958e-05, 7.351399999999675e-05, 7.340299999999966e-05, 7.400000000000462e-05, 7.315299999999941e-05, 7.340299999999966e-05, 7.350000000000412e-05, 7.338900000000009e-05, 7.342999999999933e-05, 7.390300000000016e-05, 7.362500000000077e-05, 7.359700000000163e-05, 7.32910000000031e-05, 7.330600000000215e-05, 7.37360000000048e-05, 7.358400000000154e-05, 7.316699999999898e-05, 7.369500000000556e-05, 7.338900000000009e-05, 7.384800000000136e-05, 7.380500000000317e-05, 7.390300000000016e-05, 7.333300000000181e-05, 7.40560000000029e-05]</msg>
<status status="PASS" starttime="20201112 09:55:22.420" endtime="20201112 09:55:22.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.408" endtime="20201112 09:55:22.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:22.433" endtime="20201112 09:55:22.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:22.441" endtime="20201112 09:55:22.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.437" endtime="20201112 09:55:22.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.428" endtime="20201112 09:55:22.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.903" endtime="20201112 09:55:22.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.902" endtime="20201112 09:55:22.467"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:22.490" endtime="20201112 09:55:22.511"></status>
</kw>
<msg timestamp="20201112 09:55:22.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:22.487" endtime="20201112 09:55:22.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:22.514" endtime="20201112 09:55:22.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:22.521" endtime="20201112 09:55:22.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.479" endtime="20201112 09:55:22.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.474" endtime="20201112 09:55:22.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:22.544" endtime="20201112 09:55:22.888"></status>
</kw>
<msg timestamp="20201112 09:55:22.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040761417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040836097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:22.541" endtime="20201112 09:55:22.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040761417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040836097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:22.898" endtime="20201112 09:55:22.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:22.916" endtime="20201112 09:55:22.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.534" endtime="20201112 09:55:22.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.529" endtime="20201112 09:55:22.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:22.934" level="INFO">${RESULT} = [{'time': 0.040836097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.468000000000058e-05, 'source_diff': 7.468000000000058e-05}, {'time': 0.040941375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:22.925" endtime="20201112 09:55:22.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:22.964" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:22.936" endtime="20201112 09:55:22.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.977" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 09:55:22.973" endtime="20201112 09:55:22.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.982" level="INFO">VALUE: [7.468000000000058e-05, 7.479200000000408e-05, 7.487500000000202e-05, 7.461099999999526e-05, 7.409800000000161e-05, 7.501399999999825e-05, 7.504100000000485e-05, 7.502799999999782e-05, 7.420799999999922e-05, 7.51110000000027e-05, 7.479199999999714e-05, 7.420799999999922e-05, 7.430600000000315e-05, 7.473599999999886e-05, 7.434800000000186e-05, 7.46389999999944e-05, 7.412500000000127e-05, 7.432000000000272e-05, 7.486200000000193e-05, 7.444499999999937e-05, 7.498599999999911e-05, 7.429099999999716e-05, 7.420799999999922e-05, 7.452799999999732e-05, 7.447299999999851e-05, 7.449999999999818e-05, 7.411200000000118e-05, 7.466600000000101e-05, 7.441700000000023e-05, 7.502799999999782e-05, 7.422199999999879e-05, 7.468100000000005e-05, 7.463800000000187e-05, 7.429099999999716e-05, 7.470799999999972e-05, 7.409800000000161e-05, 7.497299999999901e-05, 7.487500000000202e-05, 7.463900000000134e-05, 7.425000000000487e-05, 7.474999999999843e-05, 7.41110000000017e-05, 7.448599999999861e-05, 7.423699999999783e-05, 7.470899999999919e-05, 7.418099999999955e-05, 7.437499999999458e-05, 7.448599999999861e-05, 7.461199999999474e-05, 7.420799999999922e-05]</msg>
<status status="PASS" starttime="20201112 09:55:22.979" endtime="20201112 09:55:22.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.966" endtime="20201112 09:55:22.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:22.991" endtime="20201112 09:55:22.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:22.999" endtime="20201112 09:55:23.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.995" endtime="20201112 09:55:23.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.987" endtime="20201112 09:55:23.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.469" endtime="20201112 09:55:23.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.468" endtime="20201112 09:55:23.025"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.048" endtime="20201112 09:55:23.066"></status>
</kw>
<msg timestamp="20201112 09:55:23.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:23.044" endtime="20201112 09:55:23.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:23.070" endtime="20201112 09:55:23.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.076" endtime="20201112 09:55:23.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.037" endtime="20201112 09:55:23.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.032" endtime="20201112 09:55:23.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.099" endtime="20201112 09:55:23.436"></status>
</kw>
<msg timestamp="20201112 09:55:23.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039862722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039938764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:23.096" endtime="20201112 09:55:23.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039862722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039938764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:23.445" endtime="20201112 09:55:23.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.464" endtime="20201112 09:55:23.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.089" endtime="20201112 09:55:23.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.084" endtime="20201112 09:55:23.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:23.481" level="INFO">${RESULT} = [{'time': 0.039938764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.604199999999839e-05, 'source_diff': 7.604199999999839e-05}, {'time': 0.040048042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:23.472" endtime="20201112 09:55:23.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:23.512" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:23.483" endtime="20201112 09:55:23.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.523" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 09:55:23.520" endtime="20201112 09:55:23.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.528" level="INFO">VALUE: [7.604199999999839e-05, 7.604199999999839e-05, 7.56110000000032e-05, 7.591700000000173e-05, 7.529200000000458e-05, 7.584699999999694e-05, 7.601399999999925e-05, 7.59589999999935e-05, 7.607000000000447e-05, 7.594500000000087e-05, 7.602799999999882e-05, 7.554099999999841e-05, 7.544500000000037e-05, 7.572299999999976e-05, 7.569400000000115e-05, 7.580600000000465e-05, 7.566699999999454e-05, 7.54310000000008e-05, 7.540300000000166e-05, 7.606899999999805e-05, 7.601400000000619e-05, 7.548699999999908e-05, 7.561099999999626e-05, 7.586100000000345e-05, 7.534699999999644e-05, 7.586100000000345e-05, 7.520800000000022e-05, 7.556899999999755e-05, 7.574999999999943e-05, 7.545800000000047e-05, 7.615300000000241e-05, 7.587500000000302e-05, 7.562500000000277e-05, 7.551400000000569e-05, 7.552799999999832e-05, 7.531999999999678e-05, 7.604199999999839e-05, 7.555599999999746e-05, 7.54440000000009e-05, 7.524999999999893e-05, 7.54310000000008e-05, 7.59169999999948e-05, 7.580599999999771e-05, 7.544500000000037e-05, 7.532000000000372e-05, 7.587499999999608e-05, 7.520899999999969e-05, 7.558400000000354e-05, 7.527799999999807e-05, 7.54310000000008e-05]</msg>
<status status="PASS" starttime="20201112 09:55:23.525" endtime="20201112 09:55:23.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.514" endtime="20201112 09:55:23.537"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.543" endtime="20201112 09:55:23.546"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:23.551" endtime="20201112 09:55:23.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.547" endtime="20201112 09:55:23.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.539" endtime="20201112 09:55:23.576"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.028" endtime="20201112 09:55:23.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.026" endtime="20201112 09:55:23.577"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.599" endtime="20201112 09:55:23.618"></status>
</kw>
<msg timestamp="20201112 09:55:23.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:23.596" endtime="20201112 09:55:23.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:23.621" endtime="20201112 09:55:23.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.628" endtime="20201112 09:55:23.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.589" endtime="20201112 09:55:23.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.583" endtime="20201112 09:55:23.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.651" endtime="20201112 09:55:23.986"></status>
</kw>
<msg timestamp="20201112 09:55:23.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039807819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039884278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:23.647" endtime="20201112 09:55:23.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039807819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039884278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:23.995" endtime="20201112 09:55:24.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:24.014" endtime="20201112 09:55:24.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.640" endtime="20201112 09:55:24.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.636" endtime="20201112 09:55:24.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:24.031" level="INFO">${RESULT} = [{'time': 0.039884278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.645900000000094e-05, 'source_diff': 7.645900000000094e-05}, {'time': 0.039992542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:24.022" endtime="20201112 09:55:24.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:24.062" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:24.033" endtime="20201112 09:55:24.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.072" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 09:55:24.070" endtime="20201112 09:55:24.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.078" level="INFO">VALUE: [7.645900000000094e-05, 7.652799999999932e-05, 7.69310000000023e-05, 7.6764e-05, 7.651400000000669e-05, 7.658299999999812e-05, 7.704199999999939e-05, 7.641600000000276e-05, 7.693099999999536e-05, 7.652799999999932e-05, 7.697200000000154e-05, 7.651399999999975e-05, 7.651399999999975e-05, 7.690300000000316e-05, 7.706999999999853e-05, 7.679199999999914e-05, 7.645800000000147e-05, 7.650000000000018e-05, 7.687499999999708e-05, 7.684699999999794e-05, 7.698600000000111e-05, 7.618100000000155e-05, 7.669500000000162e-05, 7.673600000000086e-05, 7.706899999999905e-05, 7.651399999999975e-05, 7.636099999999701e-05, 7.673600000000086e-05, 7.673600000000086e-05, 7.627799999999907e-05, 7.697300000000101e-05, 7.632000000000472e-05, 7.680499999999923e-05, 7.71110000000047e-05, 7.612500000000327e-05, 7.683299999999837e-05, 7.656899999999855e-05, 7.616599999999557e-05, 7.637499999999658e-05, 7.659800000000411e-05, 7.670800000000172e-05, 7.627799999999907e-05, 7.637500000000352e-05, 7.652799999999932e-05, 7.606999999999753e-05, 7.620900000000069e-05, 7.669499999999468e-05, 7.633399999999735e-05, 7.698700000000058e-05, 7.70839999999981e-05]</msg>
<status status="PASS" starttime="20201112 09:55:24.075" endtime="20201112 09:55:24.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.064" endtime="20201112 09:55:24.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:24.087" endtime="20201112 09:55:24.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:24.097" endtime="20201112 09:55:24.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.093" endtime="20201112 09:55:24.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.083" endtime="20201112 09:55:24.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.579" endtime="20201112 09:55:24.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.578" endtime="20201112 09:55:24.123"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:24.145" endtime="20201112 09:55:24.164"></status>
</kw>
<msg timestamp="20201112 09:55:24.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:24.142" endtime="20201112 09:55:24.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:24.167" endtime="20201112 09:55:24.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:24.173" endtime="20201112 09:55:24.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.135" endtime="20201112 09:55:24.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.129" endtime="20201112 09:55:24.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:24.196" endtime="20201112 09:55:24.533"></status>
</kw>
<msg timestamp="20201112 09:55:24.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039870736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039948389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:24.193" endtime="20201112 09:55:24.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039870736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039948389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:24.542" endtime="20201112 09:55:24.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:24.561" endtime="20201112 09:55:24.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.186" endtime="20201112 09:55:24.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.181" endtime="20201112 09:55:24.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:24.578" level="INFO">${RESULT} = [{'time': 0.039948389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.765300000000391e-05, 'source_diff': 7.765300000000391e-05}, {'time': 0.040054667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:24.569" endtime="20201112 09:55:24.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:24.610" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:24.580" endtime="20201112 09:55:24.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.621" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 09:55:24.619" endtime="20201112 09:55:24.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.626" level="INFO">VALUE: [7.765300000000391e-05, 7.731999999999878e-05, 7.722200000000179e-05, 7.73890000000041e-05, 7.795799999999603e-05, 7.813900000000484e-05, 7.754199999999989e-05, 7.708400000000504e-05, 7.723600000000136e-05, 7.784699999999894e-05, 7.759700000000563e-05, 7.732000000000572e-05, 7.772199999999535e-05, 7.809700000000613e-05, 7.744499999999543e-05, 7.784699999999894e-05, 7.800000000000168e-05, 7.7151999999997e-05, 7.74719999999951e-05, 7.731999999999878e-05, 7.740199999999725e-05, 7.752800000000032e-05, 7.768100000000305e-05, 7.80269999999944e-05, 7.773599999999492e-05, 7.779200000000014e-05, 7.747200000000204e-05, 7.77770000000011e-05, 7.713900000000384e-05, 7.786099999999851e-05, 7.716599999999657e-05, 7.76389999999974e-05, 7.806900000000006e-05, 7.71389999999969e-05, 7.731999999999878e-05, 7.729100000000017e-05, 7.780599999999971e-05, 7.782000000000622e-05, 7.737500000000452e-05, 7.725000000000093e-05, 7.798600000000211e-05, 7.720800000000222e-05, 7.755499999999999e-05, 7.80839999999991e-05, 7.723600000000136e-05, 7.751399999999381e-05, 7.752700000000085e-05, 7.798600000000211e-05, 7.783299999999937e-05, 7.811099999999876e-05]</msg>
<status status="PASS" starttime="20201112 09:55:24.623" endtime="20201112 09:55:24.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.612" endtime="20201112 09:55:24.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:24.636" endtime="20201112 09:55:24.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:24.644" endtime="20201112 09:55:24.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.640" endtime="20201112 09:55:24.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.631" endtime="20201112 09:55:24.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.125" endtime="20201112 09:55:24.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.124" endtime="20201112 09:55:24.671"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:24.694" endtime="20201112 09:55:24.712"></status>
</kw>
<msg timestamp="20201112 09:55:24.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:24.690" endtime="20201112 09:55:24.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:24.716" endtime="20201112 09:55:24.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:24.722" endtime="20201112 09:55:24.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.683" endtime="20201112 09:55:24.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.678" endtime="20201112 09:55:24.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:24.745" endtime="20201112 09:55:25.079"></status>
</kw>
<msg timestamp="20201112 09:55:25.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041092417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041170611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:24.742" endtime="20201112 09:55:25.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041092417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041170611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:25.089" endtime="20201112 09:55:25.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.107" endtime="20201112 09:55:25.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.735" endtime="20201112 09:55:25.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.730" endtime="20201112 09:55:25.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:25.124" level="INFO">${RESULT} = [{'time': 0.041170611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.819400000000365e-05, 'source_diff': 7.819400000000365e-05}, {'time': 0.041276861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:25.115" endtime="20201112 09:55:25.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:25.155" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:25.126" endtime="20201112 09:55:25.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.166" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 09:55:25.163" endtime="20201112 09:55:25.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.171" level="INFO">VALUE: [7.819400000000365e-05, 7.817999999999714e-05, 7.836099999999901e-05, 7.905599999999402e-05, 7.905599999999402e-05, 7.83190000000003e-05, 7.877800000000157e-05, 7.827699999999466e-05, 7.856900000000056e-05, 7.880500000000124e-05, 7.849999999999524e-05, 7.852800000000132e-05, 7.811099999999876e-05, 7.894499999999693e-05, 7.883300000000037e-05, 7.901399999999531e-05, 7.825000000000193e-05, 7.829200000000064e-05, 7.88890000000056e-05, 7.833299999999987e-05, 7.884799999999942e-05, 7.816600000000451e-05, 7.815299999999747e-05, 7.904200000000139e-05, 7.82640000000015e-05, 7.904100000000192e-05, 7.89310000000043e-05, 7.818099999999661e-05, 7.823599999999542e-05, 7.836099999999901e-05, 7.902800000000182e-05, 7.833299999999987e-05, 7.823600000000236e-05, 7.883300000000037e-05, 7.845800000000347e-05, 7.869399999999721e-05, 7.902700000000235e-05, 7.904199999999445e-05, 7.86389999999984e-05, 7.861099999999926e-05, 7.838899999999815e-05, 7.837500000000552e-05, 7.825000000000193e-05, 7.8151999999998e-05, 7.894399999999746e-05, 7.85839999999996e-05, 7.861099999999926e-05, 7.836099999999901e-05, 7.840300000000466e-05, 7.886200000000593e-05]</msg>
<status status="PASS" starttime="20201112 09:55:25.168" endtime="20201112 09:55:25.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.157" endtime="20201112 09:55:25.174"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.181" endtime="20201112 09:55:25.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:25.189" endtime="20201112 09:55:25.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.184" endtime="20201112 09:55:25.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.176" endtime="20201112 09:55:25.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.673" endtime="20201112 09:55:25.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.672" endtime="20201112 09:55:25.215"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.239" endtime="20201112 09:55:25.258"></status>
</kw>
<msg timestamp="20201112 09:55:25.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:25.235" endtime="20201112 09:55:25.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:25.261" endtime="20201112 09:55:25.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.267" endtime="20201112 09:55:25.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.228" endtime="20201112 09:55:25.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.221" endtime="20201112 09:55:25.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.290" endtime="20201112 09:55:25.627"></status>
</kw>
<msg timestamp="20201112 09:55:25.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041668181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04174775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:25.287" endtime="20201112 09:55:25.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041668181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04174775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:25.636" endtime="20201112 09:55:25.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.655" endtime="20201112 09:55:25.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.280" endtime="20201112 09:55:25.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.275" endtime="20201112 09:55:25.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:25.672" level="INFO">${RESULT} = [{'time': 0.04174775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.956900000000156e-05, 'source_diff': 7.956900000000156e-05}, {'time': 0.041855028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:55:25.663" endtime="20201112 09:55:25.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:25.702" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:25.674" endtime="20201112 09:55:25.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.713" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 09:55:25.711" endtime="20201112 09:55:25.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.719" level="INFO">VALUE: [7.956900000000156e-05, 7.979200000000214e-05, 7.966599999999907e-05, 7.922200000000379e-05, 7.951400000000275e-05, 8.006999999999459e-05, 7.9764000000003e-05, 7.997200000000454e-05, 8.001399999999631e-05, 8.001400000000325e-05, 7.933300000000088e-05, 8.004199999999545e-05, 7.959800000000017e-05, 7.977800000000257e-05, 8.001300000000378e-05, 7.991599999999932e-05, 7.920799999999728e-05, 7.999999999999674e-05, 7.932000000000078e-05, 7.940299999999872e-05, 7.990299999999922e-05, 7.975000000000343e-05, 7.99589999999975e-05, 7.936100000000001e-05, 8.012500000000033e-05, 7.975000000000343e-05, 7.933300000000088e-05, 7.99589999999975e-05, 7.956899999999462e-05, 7.962499999999983e-05, 7.930500000000174e-05, 7.92640000000025e-05, 7.941599999999882e-05, 7.955600000000146e-05, 8.001299999999684e-05, 7.945799999999753e-05, 8.004200000000239e-05, 7.961100000000026e-05, 7.990199999999975e-05, 7.922200000000379e-05, 8.007000000000153e-05, 7.99719999999976e-05, 7.912499999999933e-05, 7.99169999999988e-05, 7.974999999999649e-05, 7.952800000000232e-05, 7.93190000000013e-05, 7.967999999999864e-05, 7.980600000000171e-05, 7.929200000000164e-05]</msg>
<status status="PASS" starttime="20201112 09:55:25.715" endtime="20201112 09:55:25.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.704" endtime="20201112 09:55:25.722"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.728" endtime="20201112 09:55:25.731"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:25.736" endtime="20201112 09:55:25.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.732" endtime="20201112 09:55:25.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.724" endtime="20201112 09:55:25.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.217" endtime="20201112 09:55:25.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.215" endtime="20201112 09:55:25.762"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.785" endtime="20201112 09:55:25.804"></status>
</kw>
<msg timestamp="20201112 09:55:25.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:25.782" endtime="20201112 09:55:25.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:25.807" endtime="20201112 09:55:25.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.813" endtime="20201112 09:55:25.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.774" endtime="20201112 09:55:25.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.769" endtime="20201112 09:55:25.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.838" endtime="20201112 09:55:26.174"></status>
</kw>
<msg timestamp="20201112 09:55:26.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040020083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040100472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:25.835" endtime="20201112 09:55:26.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040020083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040100472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:26.184" endtime="20201112 09:55:26.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:26.202" endtime="20201112 09:55:26.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.828" endtime="20201112 09:55:26.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.823" endtime="20201112 09:55:26.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:26.220" level="INFO">${RESULT} = [{'time': 0.040100472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.038900000000015e-05, 'source_diff': 8.038900000000015e-05}, {'time': 0.040208722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:26.211" endtime="20201112 09:55:26.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:26.250" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:26.222" endtime="20201112 09:55:26.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.261" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 09:55:26.259" endtime="20201112 09:55:26.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.266" level="INFO">VALUE: [8.038900000000015e-05, 8.056900000000256e-05, 8.075000000000443e-05, 8.093099999999936e-05, 8.01389999999999e-05, 8.068099999999911e-05, 8.022199999999785e-05, 8.086100000000151e-05, 8.076399999999706e-05, 8.015299999999947e-05, 8.052800000000332e-05, 8.054100000000342e-05, 8.101299999999784e-05, 8.051399999999681e-05, 8.016700000000598e-05, 8.083400000000185e-05, 8.079099999999673e-05, 8.062500000000083e-05, 8.022200000000479e-05, 8.018100000000555e-05, 8.087500000000108e-05, 8.007000000000153e-05, 8.082000000000228e-05, 8.066699999999954e-05, 8.095800000000597e-05, 8.02919999999957e-05, 8.015300000000641e-05, 8.098599999999817e-05, 8.095800000000597e-05, 8.067999999999964e-05, 8.086100000000151e-05, 8.098599999999817e-05, 8.047300000000451e-05, 8.037500000000058e-05, 8.036100000000101e-05, 8.06390000000004e-05, 8.116599999999363e-05, 8.007000000000153e-05, 8.088900000000065e-05, 8.044399999999896e-05, 8.10970000000022e-05, 8.09719999999986e-05, 8.077699999999716e-05, 8.0152e-05, 8.0764000000004e-05, 8.094399999999946e-05, 8.111099999999483e-05, 8.109799999999473e-05, 8.033300000000188e-05, 8.030600000000221e-05]</msg>
<status status="PASS" starttime="20201112 09:55:26.263" endtime="20201112 09:55:26.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.252" endtime="20201112 09:55:26.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:26.276" endtime="20201112 09:55:26.278"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:26.284" endtime="20201112 09:55:26.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.279" endtime="20201112 09:55:26.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.271" endtime="20201112 09:55:26.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.764" endtime="20201112 09:55:26.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.763" endtime="20201112 09:55:26.310"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:26.332" endtime="20201112 09:55:26.352"></status>
</kw>
<msg timestamp="20201112 09:55:26.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:26.329" endtime="20201112 09:55:26.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:26.355" endtime="20201112 09:55:26.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:26.362" endtime="20201112 09:55:26.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.322" endtime="20201112 09:55:26.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.316" endtime="20201112 09:55:26.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:26.387" endtime="20201112 09:55:26.722"></status>
</kw>
<msg timestamp="20201112 09:55:26.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040373, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040454972, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:55:26.384" endtime="20201112 09:55:26.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040373, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040454972, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:55:26.732" endtime="20201112 09:55:26.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:26.751" endtime="20201112 09:55:26.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.375" endtime="20201112 09:55:26.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.370" endtime="20201112 09:55:26.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:26.768" level="INFO">${RESULT} = [{'time': 0.040454972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.19719999999996e-05, 'source_diff': 8.19719999999996e-05}, {'time': 0.04056325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:55:26.759" endtime="20201112 09:55:26.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:26.800" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:26.770" endtime="20201112 09:55:26.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.811" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 09:55:26.809" endtime="20201112 09:55:26.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.816" level="INFO">VALUE: [8.19719999999996e-05, 8.198599999999917e-05, 8.205599999999702e-05, 8.208300000000363e-05, 8.202799999999788e-05, 8.133400000000235e-05, 8.129099999999723e-05, 8.16390000000014e-05, 8.108300000000263e-05, 8.194499999999993e-05, 8.201399999999831e-05, 8.118000000000014e-05, 8.208299999999669e-05, 8.125000000000493e-05, 8.143099999999986e-05, 8.155599999999652e-05, 8.162500000000183e-05, 8.184700000000295e-05, 8.205500000000449e-05, 8.118099999999961e-05, 8.215300000000147e-05, 8.176399999999806e-05, 8.1458999999999e-05, 8.156899999999662e-05, 8.11390000000009e-05, 8.198599999999917e-05, 8.115300000000047e-05, 8.20269999999984e-05, 8.202799999999788e-05, 8.204100000000492e-05, 8.19589999999995e-05, 8.177699999999816e-05, 8.13469999999955e-05, 8.193100000000036e-05, 8.16520000000015e-05, 8.19170000000008e-05, 8.138899999999422e-05, 8.137500000000158e-05, 8.176399999999806e-05, 8.211099999999583e-05, 8.138800000000168e-05, 8.209800000000267e-05, 8.180500000000424e-05, 8.120799999999928e-05, 8.118099999999961e-05, 8.150000000000518e-05, 8.204099999999798e-05, 8.145799999999953e-05, 8.19589999999995e-05, 8.190300000000122e-05]</msg>
<status status="PASS" starttime="20201112 09:55:26.813" endtime="20201112 09:55:26.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.802" endtime="20201112 09:55:26.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:26.826" endtime="20201112 09:55:26.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:26.834" endtime="20201112 09:55:26.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.830" endtime="20201112 09:55:26.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.821" endtime="20201112 09:55:26.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.312" endtime="20201112 09:55:26.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.311" endtime="20201112 09:55:26.860"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:26.882" endtime="20201112 09:55:26.901"></status>
</kw>
<msg timestamp="20201112 09:55:26.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:26.879" endtime="20201112 09:55:26.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:26.905" endtime="20201112 09:55:26.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:26.911" endtime="20201112 09:55:26.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.872" endtime="20201112 09:55:26.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.866" endtime="20201112 09:55:26.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:26.934" endtime="20201112 09:55:27.271"></status>
</kw>
<msg timestamp="20201112 09:55:27.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039976625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040059125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:26.931" endtime="20201112 09:55:27.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039976625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040059125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:27.280" endtime="20201112 09:55:27.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.299" endtime="20201112 09:55:27.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.923" endtime="20201112 09:55:27.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.919" endtime="20201112 09:55:27.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:27.316" level="INFO">${RESULT} = [{'time': 0.040059125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.249999999999924e-05, 'source_diff': 8.249999999999924e-05}, {'time': 0.040169403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:27.307" endtime="20201112 09:55:27.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:27.346" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:27.318" endtime="20201112 09:55:27.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.357" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 09:55:27.355" endtime="20201112 09:55:27.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.363" level="INFO">VALUE: [8.249999999999924e-05, 8.237500000000259e-05, 8.306899999999812e-05, 8.293100000000136e-05, 8.261099999999633e-05, 8.308300000000463e-05, 8.223599999999942e-05, 8.304199999999845e-05, 8.237500000000259e-05, 8.220800000000028e-05, 8.237499999999565e-05, 8.30840000000041e-05, 8.223599999999942e-05, 8.298600000000017e-05, 8.236099999999608e-05, 8.244500000000043e-05, 8.299999999999974e-05, 8.247299999999957e-05, 8.258399999999666e-05, 8.248599999999967e-05, 8.265300000000197e-05, 8.280599999999777e-05, 8.236099999999608e-05, 8.257000000000403e-05, 8.244399999999402e-05, 8.227800000000507e-05, 8.22919999999977e-05, 8.219400000000071e-05, 8.262500000000284e-05, 8.273599999999992e-05, 8.273599999999992e-05, 8.244400000000096e-05, 8.272199999999341e-05, 8.243100000000086e-05, 8.273700000000633e-05, 8.244400000000096e-05, 8.23049999999978e-05, 8.219400000000071e-05, 8.304200000000539e-05, 8.298599999999323e-05, 8.280599999999777e-05, 8.229100000000517e-05, 8.299999999999974e-05, 8.254200000000489e-05, 8.21249999999954e-05, 8.284799999999648e-05, 8.248599999999967e-05, 8.229099999999823e-05, 8.27919999999982e-05, 8.306999999999759e-05]</msg>
<status status="PASS" starttime="20201112 09:55:27.360" endtime="20201112 09:55:27.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.348" endtime="20201112 09:55:27.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.372" endtime="20201112 09:55:27.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:27.381" endtime="20201112 09:55:27.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.377" endtime="20201112 09:55:27.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.368" endtime="20201112 09:55:27.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.862" endtime="20201112 09:55:27.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.861" endtime="20201112 09:55:27.408"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.430" endtime="20201112 09:55:27.449"></status>
</kw>
<msg timestamp="20201112 09:55:27.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:27.426" endtime="20201112 09:55:27.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:27.452" endtime="20201112 09:55:27.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.458" endtime="20201112 09:55:27.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.419" endtime="20201112 09:55:27.464"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.414" endtime="20201112 09:55:27.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.481" endtime="20201112 09:55:27.818"></status>
</kw>
<msg timestamp="20201112 09:55:27.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040096333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040180361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:27.478" endtime="20201112 09:55:27.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040096333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040180361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:27.827" endtime="20201112 09:55:27.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.846" endtime="20201112 09:55:27.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.471" endtime="20201112 09:55:27.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.466" endtime="20201112 09:55:27.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:27.863" level="INFO">${RESULT} = [{'time': 0.040180361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.402799999999988e-05, 'source_diff': 8.402799999999988e-05}, {'time': 0.040294667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:27.854" endtime="20201112 09:55:27.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:27.893" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:27.865" endtime="20201112 09:55:27.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.904" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 09:55:27.902" endtime="20201112 09:55:27.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.910" level="INFO">VALUE: [8.402799999999988e-05, 8.404199999999945e-05, 8.395799999999509e-05, 8.391599999999638e-05, 8.372200000000135e-05, 8.34720000000011e-05, 8.365300000000297e-05, 8.351399999999981e-05, 8.359800000000417e-05, 8.384700000000495e-05, 8.401300000000084e-05, 8.355599999999852e-05, 8.351399999999981e-05, 8.406999999999859e-05, 8.329099999999923e-05, 8.337499999999665e-05, 8.342999999999545e-05, 8.381999999999834e-05, 8.315199999999606e-05, 8.315299999999554e-05, 8.315300000000247e-05, 8.356999999999809e-05, 8.375000000000049e-05, 8.333400000000435e-05, 8.327799999999913e-05, 8.338800000000368e-05, 8.395800000000203e-05, 8.41249999999974e-05, 8.333400000000435e-05, 8.361099999999733e-05, 8.318099999999468e-05, 8.376300000000059e-05, 8.38049999999993e-05, 8.400000000000074e-05, 8.376400000000006e-05, 8.347300000000057e-05, 8.39170000000028e-05, 8.358299999999819e-05, 8.41390000000039e-05, 8.320800000000128e-05, 8.376400000000006e-05, 8.415299999999654e-05, 8.329099999999923e-05, 8.400000000000074e-05, 8.352699999999991e-05, 8.400000000000074e-05, 8.36799999999957e-05, 8.400000000000074e-05, 8.366600000000307e-05, 8.391699999999586e-05]</msg>
<status status="PASS" starttime="20201112 09:55:27.907" endtime="20201112 09:55:27.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.895" endtime="20201112 09:55:27.913"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.919" endtime="20201112 09:55:27.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:27.927" endtime="20201112 09:55:27.949"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.923" endtime="20201112 09:55:27.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.915" endtime="20201112 09:55:27.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.410" endtime="20201112 09:55:27.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.408" endtime="20201112 09:55:27.953"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.975" endtime="20201112 09:55:27.995"></status>
</kw>
<msg timestamp="20201112 09:55:27.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:27.972" endtime="20201112 09:55:27.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:28.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:27.998" endtime="20201112 09:55:28.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:28.004" endtime="20201112 09:55:28.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.965" endtime="20201112 09:55:28.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.960" endtime="20201112 09:55:28.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:28.027" endtime="20201112 09:55:28.365"></status>
</kw>
<msg timestamp="20201112 09:55:28.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039813111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039897444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:28.024" endtime="20201112 09:55:28.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:28.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039813111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039897444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:28.375" endtime="20201112 09:55:28.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:28.395" endtime="20201112 09:55:28.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.017" endtime="20201112 09:55:28.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.012" endtime="20201112 09:55:28.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:28.415" level="INFO">${RESULT} = [{'time': 0.039897444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.433299999999894e-05, 'source_diff': 8.433299999999894e-05}, {'time': 0.040009667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:28.406" endtime="20201112 09:55:28.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:28.447" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:28.418" endtime="20201112 09:55:28.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:28.458" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 09:55:28.455" endtime="20201112 09:55:28.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:28.463" level="INFO">VALUE: [8.433299999999894e-05, 8.427800000000013e-05, 8.424999999999405e-05, 8.498600000000217e-05, 8.413899999999697e-05, 8.498599999999523e-05, 8.508299999999969e-05, 8.430599999999927e-05, 8.486099999999858e-05, 8.494500000000293e-05, 8.434700000000545e-05, 8.505500000000055e-05, 8.450000000000124e-05, 8.509800000000567e-05, 8.511099999999883e-05, 8.4944999999996e-05, 8.48050000000003e-05, 8.509699999999926e-05, 8.481999999999934e-05, 8.430599999999927e-05, 8.456899999999962e-05, 8.454100000000048e-05, 8.462500000000484e-05, 8.495800000000303e-05, 8.425000000000099e-05, 8.451399999999387e-05, 8.45840000000056e-05, 8.501399999999437e-05, 8.470899999999532e-05, 8.505500000000055e-05, 8.473600000000192e-05, 8.465199999999756e-05, 8.465299999999704e-05, 8.469400000000321e-05, 8.500000000000174e-05, 8.476399999999412e-05, 8.436099999999808e-05, 8.430599999999927e-05, 8.473699999999446e-05, 8.473600000000192e-05, 8.452800000000038e-05, 8.458300000000613e-05, 8.451400000000081e-05, 8.454199999999995e-05, 8.420800000000228e-05, 8.461100000000527e-05, 8.511099999999883e-05, 8.509699999999926e-05, 8.436200000000449e-05, 8.469500000000268e-05]</msg>
<status status="PASS" starttime="20201112 09:55:28.460" endtime="20201112 09:55:28.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.449" endtime="20201112 09:55:28.466"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:28.473" endtime="20201112 09:55:28.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:28.481" endtime="20201112 09:55:28.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.477" endtime="20201112 09:55:28.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.468" endtime="20201112 09:55:28.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.955" endtime="20201112 09:55:28.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.954" endtime="20201112 09:55:28.507"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:28.530" endtime="20201112 09:55:28.549"></status>
</kw>
<msg timestamp="20201112 09:55:28.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:28.526" endtime="20201112 09:55:28.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:28.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:28.552" endtime="20201112 09:55:28.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:28.558" endtime="20201112 09:55:28.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.519" endtime="20201112 09:55:28.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.513" endtime="20201112 09:55:28.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:28.585" endtime="20201112 09:55:28.919"></status>
</kw>
<msg timestamp="20201112 09:55:28.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039988403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040074042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:28.581" endtime="20201112 09:55:28.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:28.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039988403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040074042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:28.929" endtime="20201112 09:55:28.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:28.948" endtime="20201112 09:55:28.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.573" endtime="20201112 09:55:28.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.567" endtime="20201112 09:55:28.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:28.967" level="INFO">${RESULT} = [{'time': 0.040074042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.563899999999847e-05, 'source_diff': 8.563899999999847e-05}, {'time': 0.040192347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:28.958" endtime="20201112 09:55:28.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:28.999" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:28.969" endtime="20201112 09:55:29.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.011" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 09:55:29.008" endtime="20201112 09:55:29.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.016" level="INFO">VALUE: [8.563899999999847e-05, 8.541600000000482e-05, 8.554200000000095e-05, 8.536099999999908e-05, 8.565299999999804e-05, 8.554099999999454e-05, 8.53469999999995e-05, 8.533399999999941e-05, 8.544399999999702e-05, 8.54999999999953e-05, 8.538899999999822e-05, 8.588899999999872e-05, 8.57920000000012e-05, 8.580600000000077e-05, 8.604200000000145e-05, 8.537499999999865e-05, 8.554100000000148e-05, 8.527800000000113e-05, 8.565299999999804e-05, 8.569399999999727e-05, 8.536099999999908e-05, 8.545800000000353e-05, 8.557000000000009e-05, 8.56249999999989e-05, 8.594500000000393e-05, 8.543099999999693e-05, 8.572199999999641e-05, 8.5847e-05, 8.557000000000009e-05, 8.554200000000095e-05, 8.5847e-05, 8.577800000000163e-05, 8.604200000000145e-05, 8.586099999999958e-05, 8.54999999999953e-05, 8.533299999999994e-05, 8.531999999999984e-05, 8.541599999999788e-05, 8.608300000000069e-05, 8.5459000000003e-05, 8.573599999999598e-05, 8.518000000000414e-05, 8.602800000000188e-05, 8.559800000000617e-05, 8.563899999999847e-05, 8.570900000000325e-05, 8.56669999999976e-05, 8.533299999999994e-05, 8.605600000000102e-05, 8.563799999999899e-05]</msg>
<status status="PASS" starttime="20201112 09:55:29.013" endtime="20201112 09:55:29.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.001" endtime="20201112 09:55:29.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:29.025" endtime="20201112 09:55:29.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:29.034" endtime="20201112 09:55:29.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.029" endtime="20201112 09:55:29.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.021" endtime="20201112 09:55:29.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.509" endtime="20201112 09:55:29.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.508" endtime="20201112 09:55:29.060"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:29.082" endtime="20201112 09:55:29.101"></status>
</kw>
<msg timestamp="20201112 09:55:29.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:29.078" endtime="20201112 09:55:29.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:29.104" endtime="20201112 09:55:29.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:29.110" endtime="20201112 09:55:29.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.071" endtime="20201112 09:55:29.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.066" endtime="20201112 09:55:29.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:29.134" endtime="20201112 09:55:29.468"></status>
</kw>
<msg timestamp="20201112 09:55:29.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039856056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039943069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:29.130" endtime="20201112 09:55:29.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039856056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039943069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:29.478" endtime="20201112 09:55:29.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:29.496" endtime="20201112 09:55:29.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.123" endtime="20201112 09:55:29.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.118" endtime="20201112 09:55:29.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:29.514" level="INFO">${RESULT} = [{'time': 0.039943069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.70129999999969e-05, 'source_diff': 8.70129999999969e-05}, {'time': 0.040062375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:55:29.505" endtime="20201112 09:55:29.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:29.545" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:29.516" endtime="20201112 09:55:29.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.556" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 09:55:29.554" endtime="20201112 09:55:29.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.561" level="INFO">VALUE: [8.70129999999969e-05, 8.680599999999483e-05, 8.709800000000073e-05, 8.705500000000255e-05, 8.647199999999716e-05, 8.687500000000015e-05, 8.668099999999818e-05, 8.663899999999947e-05, 8.641699999999836e-05, 8.688899999999972e-05, 8.68050000000023e-05, 8.648600000000367e-05, 8.68050000000023e-05, 8.641699999999836e-05, 8.715299999999954e-05, 8.674999999999655e-05, 8.663899999999947e-05, 8.676400000000306e-05, 8.634799999999998e-05, 8.669400000000521e-05, 8.61669999999981e-05, 8.620899999999682e-05, 8.686100000000058e-05, 8.62920000000017e-05, 8.651400000000281e-05, 8.661100000000033e-05, 8.705499999999561e-05, 8.661100000000033e-05, 8.627699999999572e-05, 8.683300000000144e-05, 8.644400000000496e-05, 8.670800000000478e-05, 8.658400000000066e-05, 8.631900000000137e-05, 8.630600000000127e-05, 8.686100000000058e-05, 8.627800000000213e-05, 8.686100000000058e-05, 8.645799999999759e-05, 8.670799999999784e-05, 8.638899999999922e-05, 8.640199999999931e-05, 8.641699999999836e-05, 8.702800000000288e-05, 8.626399999999562e-05, 8.665300000000598e-05, 8.687500000000015e-05, 8.612500000000634e-05, 8.6847000000001e-05, 8.673600000000392e-05]</msg>
<status status="PASS" starttime="20201112 09:55:29.558" endtime="20201112 09:55:29.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.547" endtime="20201112 09:55:29.564"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:29.571" endtime="20201112 09:55:29.573"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:29.579" endtime="20201112 09:55:29.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.575" endtime="20201112 09:55:29.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.566" endtime="20201112 09:55:29.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.062" endtime="20201112 09:55:29.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.060" endtime="20201112 09:55:29.605"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:29.627" endtime="20201112 09:55:29.646"></status>
</kw>
<msg timestamp="20201112 09:55:29.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:29.624" endtime="20201112 09:55:29.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:29.650" endtime="20201112 09:55:29.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:29.656" endtime="20201112 09:55:29.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.617" endtime="20201112 09:55:29.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.611" endtime="20201112 09:55:29.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:29.679" endtime="20201112 09:55:30.012"></status>
</kw>
<msg timestamp="20201112 09:55:30.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039904556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039991958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:29.676" endtime="20201112 09:55:30.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039904556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039991958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:30.022" endtime="20201112 09:55:30.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:30.040" endtime="20201112 09:55:30.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.669" endtime="20201112 09:55:30.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.664" endtime="20201112 09:55:30.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:30.058" level="INFO">${RESULT} = [{'time': 0.039991958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.740200000000031e-05, 'source_diff': 8.740200000000031e-05}, {'time': 0.040111278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:30.049" endtime="20201112 09:55:30.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:30.089" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:30.060" endtime="20201112 09:55:30.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.100" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 09:55:30.098" endtime="20201112 09:55:30.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.106" level="INFO">VALUE: [8.740200000000031e-05, 8.809700000000226e-05, 8.732000000000184e-05, 8.738900000000022e-05, 8.776400000000406e-05, 8.744500000000544e-05, 8.71250000000004e-05, 8.81250000000014e-05, 8.718099999999868e-05, 8.786099999999464e-05, 8.792999999999995e-05, 8.743099999999893e-05, 8.784699999999507e-05, 8.76250000000009e-05, 8.783300000000244e-05, 8.722300000000432e-05, 8.773599999999798e-05, 8.720800000000528e-05, 8.81250000000014e-05, 8.743099999999893e-05, 8.747199999999816e-05, 8.743099999999893e-05, 8.754200000000295e-05, 8.744400000000596e-05, 8.786100000000158e-05, 8.777800000000363e-05, 8.761099999999439e-05, 8.730600000000227e-05, 8.759700000000176e-05, 8.769499999999875e-05, 8.790200000000081e-05, 8.754199999999601e-05, 8.757000000000209e-05, 8.780600000000277e-05, 8.737500000000065e-05, 8.797199999999866e-05, 8.770899999999832e-05, 8.754199999999601e-05, 8.71250000000004e-05, 8.79999999999978e-05, 8.750000000000424e-05, 8.713800000000049e-05, 8.752800000000338e-05, 8.798599999999823e-05, 8.806899999999618e-05, 8.763900000000047e-05, 8.76669999999996e-05, 8.727799999999619e-05, 8.748599999999773e-05, 8.805499999999661e-05]</msg>
<status status="PASS" starttime="20201112 09:55:30.103" endtime="20201112 09:55:30.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.091" endtime="20201112 09:55:30.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:30.115" endtime="20201112 09:55:30.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:30.123" endtime="20201112 09:55:30.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.119" endtime="20201112 09:55:30.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.111" endtime="20201112 09:55:30.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.607" endtime="20201112 09:55:30.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.606" endtime="20201112 09:55:30.149"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:30.172" endtime="20201112 09:55:30.191"></status>
</kw>
<msg timestamp="20201112 09:55:30.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:30.168" endtime="20201112 09:55:30.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:30.194" endtime="20201112 09:55:30.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:30.201" endtime="20201112 09:55:30.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.161" endtime="20201112 09:55:30.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.156" endtime="20201112 09:55:30.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:30.223" endtime="20201112 09:55:30.559"></status>
</kw>
<msg timestamp="20201112 09:55:30.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040030347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040119236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:30.220" endtime="20201112 09:55:30.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040030347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040119236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:30.568" endtime="20201112 09:55:30.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:30.587" endtime="20201112 09:55:30.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.213" endtime="20201112 09:55:30.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.209" endtime="20201112 09:55:30.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:30.604" level="INFO">${RESULT} = [{'time': 0.040119236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.888900000000172e-05, 'source_diff': 8.888900000000172e-05}, {'time': 0.040237597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:30.595" endtime="20201112 09:55:30.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:30.636" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:30.606" endtime="20201112 09:55:30.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.647" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 09:55:30.645" endtime="20201112 09:55:30.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.653" level="INFO">VALUE: [8.888900000000172e-05, 8.834700000000251e-05, 8.887500000000215e-05, 8.904199999999751e-05, 8.906899999999718e-05, 8.836100000000208e-05, 8.880600000000377e-05, 8.836199999999461e-05, 8.815200000000106e-05, 8.888900000000172e-05, 8.891700000000086e-05, 8.829199999999676e-05, 8.861100000000233e-05, 8.908399999999622e-05, 8.887499999999521e-05, 8.874999999999855e-05, 8.87920000000042e-05, 8.906899999999718e-05, 8.869400000000027e-05, 8.855500000000405e-05, 8.855499999999711e-05, 8.845799999999959e-05, 8.822299999999839e-05, 8.833300000000294e-05, 8.822199999999891e-05, 8.876399999999812e-05, 8.895800000000009e-05, 8.824999999999805e-05, 8.858299999999625e-05, 8.813900000000097e-05, 8.874999999999855e-05, 8.852799999999744e-05, 8.898599999999923e-05, 8.89869999999987e-05, 8.825000000000499e-05, 8.812499999999446e-05, 8.881900000000387e-05, 8.837500000000165e-05, 8.824999999999805e-05, 8.847199999999916e-05, 8.890300000000129e-05, 8.906999999999665e-05, 8.833300000000294e-05, 8.869499999999975e-05, 8.888900000000172e-05, 8.911099999999589e-05, 8.877799999999769e-05, 8.877799999999769e-05, 8.901400000000531e-05, 8.830600000000327e-05]</msg>
<status status="PASS" starttime="20201112 09:55:30.650" endtime="20201112 09:55:30.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.638" endtime="20201112 09:55:30.656"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:30.662" endtime="20201112 09:55:30.665"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:30.670" endtime="20201112 09:55:30.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.666" endtime="20201112 09:55:30.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.658" endtime="20201112 09:55:30.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.151" endtime="20201112 09:55:30.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.150" endtime="20201112 09:55:30.696"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:30.719" endtime="20201112 09:55:30.738"></status>
</kw>
<msg timestamp="20201112 09:55:30.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:30.715" endtime="20201112 09:55:30.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:30.741" endtime="20201112 09:55:30.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:30.748" endtime="20201112 09:55:30.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.708" endtime="20201112 09:55:30.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.703" endtime="20201112 09:55:30.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:30.771" endtime="20201112 09:55:31.106"></status>
</kw>
<msg timestamp="20201112 09:55:31.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040011069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040100389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:30.767" endtime="20201112 09:55:31.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:31.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040011069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040100389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:31.115" endtime="20201112 09:55:31.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:31.134" endtime="20201112 09:55:31.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.760" endtime="20201112 09:55:31.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.755" endtime="20201112 09:55:31.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:31.151" level="INFO">${RESULT} = [{'time': 0.040100389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.93199999999969e-05, 'source_diff': 8.93199999999969e-05}, {'time': 0.040218653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:55:31.142" endtime="20201112 09:55:31.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:31.184" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:31.153" endtime="20201112 09:55:31.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:31.195" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 09:55:31.193" endtime="20201112 09:55:31.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:31.200" level="INFO">VALUE: [8.93199999999969e-05, 8.927799999999819e-05, 8.990299999999535e-05, 8.952799999999844e-05, 9.001399999999937e-05, 8.9332999999997e-05, 8.970800000000084e-05, 8.934699999999657e-05, 8.919500000000025e-05, 8.945800000000059e-05, 8.995799999999415e-05, 8.984700000000401e-05, 8.986099999999664e-05, 9.004199999999851e-05, 8.977799999999869e-05, 8.994400000000152e-05, 8.938800000000274e-05, 8.931899999999743e-05, 8.984699999999707e-05, 8.96529999999951e-05, 9.001399999999937e-05, 8.974999999999955e-05, 8.931899999999743e-05, 9.001399999999937e-05, 8.906899999999718e-05, 8.908299999999675e-05, 8.956900000000462e-05, 8.950000000000624e-05, 8.988800000000324e-05, 9.009699999999732e-05, 8.967999999999476e-05, 8.974999999999955e-05, 8.938900000000222e-05, 8.937499999999571e-05, 8.91250000000024e-05, 8.984700000000401e-05, 8.9332999999997e-05, 8.976399999999912e-05, 8.91670000000011e-05, 9.001400000000631e-05, 8.943100000000093e-05, 8.952800000000538e-05, 8.979099999999879e-05, 8.959699999999682e-05, 8.983300000000444e-05, 8.918100000000068e-05, 8.98199999999974e-05, 8.951400000000581e-05, 8.955599999999758e-05, 8.977799999999869e-05]</msg>
<status status="PASS" starttime="20201112 09:55:31.197" endtime="20201112 09:55:31.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.186" endtime="20201112 09:55:31.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:31.210" endtime="20201112 09:55:31.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:31.218" endtime="20201112 09:55:31.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.214" endtime="20201112 09:55:31.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.205" endtime="20201112 09:55:31.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.698" endtime="20201112 09:55:31.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.697" endtime="20201112 09:55:31.244"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:31.266" endtime="20201112 09:55:31.286"></status>
</kw>
<msg timestamp="20201112 09:55:31.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:31.263" endtime="20201112 09:55:31.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:31.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:31.289" endtime="20201112 09:55:31.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:31.295" endtime="20201112 09:55:31.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.256" endtime="20201112 09:55:31.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.250" endtime="20201112 09:55:31.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:31.318" endtime="20201112 09:55:31.653"></status>
</kw>
<msg timestamp="20201112 09:55:31.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040024556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040115319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:31.315" endtime="20201112 09:55:31.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:31.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040024556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040115319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:31.663" endtime="20201112 09:55:31.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:31.681" endtime="20201112 09:55:31.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.308" endtime="20201112 09:55:31.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.303" endtime="20201112 09:55:31.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:31.699" level="INFO">${RESULT} = [{'time': 0.040115319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.076300000000065e-05, 'source_diff': 9.076300000000065e-05}, {'time': 0.040237569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:31.690" endtime="20201112 09:55:31.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:31.729" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:31.701" endtime="20201112 09:55:31.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:31.742" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 09:55:31.738" endtime="20201112 09:55:31.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:31.747" level="INFO">VALUE: [9.076300000000065e-05, 9.022200000000091e-05, 9.080600000000577e-05, 9.059699999999782e-05, 9.093099999999549e-05, 9.06250000000039e-05, 9.054199999999901e-05, 9.084799999999754e-05, 9.08329999999985e-05, 9.077799999999969e-05, 9.044400000000202e-05, 9.011099999999689e-05, 9.080599999999883e-05, 9.098600000000123e-05, 9.101400000000037e-05, 9.070899999999438e-05, 9.088899999999678e-05, 9.029199999999876e-05, 9.027799999999919e-05, 9.069499999999481e-05, 9.065200000000356e-05, 9.045800000000159e-05, 9.061099999999739e-05, 9.029099999999929e-05, 9.045800000000159e-05, 9.102700000000047e-05, 9.10000000000008e-05, 9.082000000000534e-05, 9.076400000000012e-05, 9.066600000000313e-05, 9.075000000000055e-05, 9.061100000000433e-05, 9.079199999999926e-05, 9.056899999999868e-05, 9.058299999999825e-05, 9.056899999999868e-05, 9.020800000000134e-05, 9.101400000000037e-05, 9.048600000000073e-05, 9.044399999999508e-05, 9.098600000000123e-05, 9.097200000000166e-05, 9.115300000000354e-05, 9.056999999999815e-05, 9.113899999999703e-05, 9.019500000000125e-05, 9.093100000000243e-05, 9.017999999999526e-05, 9.058399999999772e-05, 9.111099999999789e-05]</msg>
<status status="PASS" starttime="20201112 09:55:31.744" endtime="20201112 09:55:31.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.731" endtime="20201112 09:55:31.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:31.757" endtime="20201112 09:55:31.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:31.765" endtime="20201112 09:55:31.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.761" endtime="20201112 09:55:31.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.752" endtime="20201112 09:55:31.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.246" endtime="20201112 09:55:31.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.245" endtime="20201112 09:55:31.791"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:31.813" endtime="20201112 09:55:31.832"></status>
</kw>
<msg timestamp="20201112 09:55:31.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:31.810" endtime="20201112 09:55:31.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:31.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:31.836" endtime="20201112 09:55:31.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:31.842" endtime="20201112 09:55:31.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.803" endtime="20201112 09:55:31.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.797" endtime="20201112 09:55:31.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:31.865" endtime="20201112 09:55:32.199"></status>
</kw>
<msg timestamp="20201112 09:55:32.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039885542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039977153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:31.862" endtime="20201112 09:55:32.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039885542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039977153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:32.209" endtime="20201112 09:55:32.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.227" endtime="20201112 09:55:32.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.855" endtime="20201112 09:55:32.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.850" endtime="20201112 09:55:32.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:32.244" level="INFO">${RESULT} = [{'time': 0.039977153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.161099999999839e-05, 'source_diff': 9.161099999999839e-05}, {'time': 0.040097458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:32.235" endtime="20201112 09:55:32.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:32.276" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:32.246" endtime="20201112 09:55:32.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.286" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 09:55:32.284" endtime="20201112 09:55:32.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.292" level="INFO">VALUE: [9.161099999999839e-05, 9.145800000000259e-05, 9.159699999999882e-05, 9.129100000000029e-05, 9.144499999999556e-05, 9.15000000000013e-05, 9.181899999999993e-05, 9.206999999999965e-05, 9.183399999999897e-05, 9.144399999999608e-05, 9.133300000000594e-05, 9.191699999999692e-05, 9.181899999999993e-05, 9.145800000000259e-05, 9.184799999999854e-05, 9.134699999999857e-05, 9.11529999999966e-05, 9.147200000000216e-05, 9.147200000000216e-05, 9.137500000000465e-05, 9.156899999999968e-05, 9.187499999999821e-05, 9.123600000000148e-05, 9.158299999999925e-05, 9.166699999999667e-05, 9.191599999999744e-05, 9.179200000000026e-05, 9.21250000000054e-05, 9.193099999999649e-05, 9.163899999999753e-05, 9.212499999999846e-05, 9.123600000000148e-05, 9.184700000000601e-05, 9.180599999999983e-05, 9.158299999999925e-05, 9.21250000000054e-05, 9.124999999999411e-05, 9.15000000000013e-05, 9.18199999999994e-05, 9.123599999999454e-05, 9.194499999999606e-05, 9.21250000000054e-05, 9.117999999999626e-05, 9.154100000000054e-05, 9.168100000000318e-05, 9.18329999999995e-05, 9.195900000000257e-05, 9.172199999999547e-05, 9.13199999999989e-05, 9.187499999999821e-05]</msg>
<status status="PASS" starttime="20201112 09:55:32.289" endtime="20201112 09:55:32.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.278" endtime="20201112 09:55:32.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.303" endtime="20201112 09:55:32.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:32.311" endtime="20201112 09:55:32.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.307" endtime="20201112 09:55:32.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.298" endtime="20201112 09:55:32.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.793" endtime="20201112 09:55:32.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.791" endtime="20201112 09:55:32.337"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.359" endtime="20201112 09:55:32.379"></status>
</kw>
<msg timestamp="20201112 09:55:32.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:32.356" endtime="20201112 09:55:32.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:32.382" endtime="20201112 09:55:32.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.388" endtime="20201112 09:55:32.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.349" endtime="20201112 09:55:32.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.343" endtime="20201112 09:55:32.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.411" endtime="20201112 09:55:32.747"></status>
</kw>
<msg timestamp="20201112 09:55:32.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039962681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040055278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:32.408" endtime="20201112 09:55:32.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039962681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040055278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:32.756" endtime="20201112 09:55:32.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.775" endtime="20201112 09:55:32.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.401" endtime="20201112 09:55:32.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.396" endtime="20201112 09:55:32.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:32.792" level="INFO">${RESULT} = [{'time': 0.040055278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.259699999999982e-05, 'source_diff': 9.259699999999982e-05}, {'time': 0.040181611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:32.783" endtime="20201112 09:55:32.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:32.823" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:32.794" endtime="20201112 09:55:32.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.833" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 09:55:32.831" endtime="20201112 09:55:32.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.839" level="INFO">VALUE: [9.259699999999982e-05, 9.311099999999989e-05, 9.251400000000187e-05, 9.272199999999647e-05, 9.308300000000075e-05, 9.237499999999871e-05, 9.213899999999803e-05, 9.251400000000187e-05, 9.273600000000298e-05, 9.258399999999972e-05, 9.28200000000004e-05, 9.231900000000043e-05, 9.269400000000427e-05, 9.277799999999475e-05, 9.308299999999381e-05, 9.280600000000083e-05, 9.22079999999964e-05, 9.23199999999999e-05, 9.311199999999936e-05, 9.230500000000086e-05, 9.263900000000547e-05, 9.225000000000205e-05, 9.230500000000086e-05, 9.254200000000101e-05, 9.252800000000144e-05, 9.294499999999706e-05, 9.275000000000255e-05, 9.291699999999792e-05, 9.304200000000151e-05, 9.266700000000461e-05, 9.294400000000452e-05, 9.247200000000316e-05, 9.270900000000332e-05, 9.309799999999979e-05, 9.284700000000007e-05, 9.272200000000341e-05, 9.288899999999878e-05, 9.291599999999844e-05, 9.231900000000043e-05, 9.243000000000445e-05, 9.252800000000144e-05, 9.238899999999828e-05, 9.230499999999392e-05, 9.212499999999846e-05, 9.293099999999749e-05, 9.259699999999982e-05, 9.248600000000273e-05, 9.312499999999946e-05, 9.313899999999903e-05, 9.243000000000445e-05]</msg>
<status status="PASS" starttime="20201112 09:55:32.836" endtime="20201112 09:55:32.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.825" endtime="20201112 09:55:32.842"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.848" endtime="20201112 09:55:32.853"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:32.858" endtime="20201112 09:55:32.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.854" endtime="20201112 09:55:32.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.844" endtime="20201112 09:55:32.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.339" endtime="20201112 09:55:32.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.338" endtime="20201112 09:55:32.884"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.906" endtime="20201112 09:55:32.927"></status>
</kw>
<msg timestamp="20201112 09:55:32.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:32.903" endtime="20201112 09:55:32.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:32.931" endtime="20201112 09:55:32.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.937" endtime="20201112 09:55:32.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.896" endtime="20201112 09:55:32.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.890" endtime="20201112 09:55:32.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.960" endtime="20201112 09:55:33.306"></status>
</kw>
<msg timestamp="20201112 09:55:33.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039997528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040091208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:32.957" endtime="20201112 09:55:33.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:33.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039997528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040091208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:33.315" endtime="20201112 09:55:33.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:33.333" endtime="20201112 09:55:33.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.949" endtime="20201112 09:55:33.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.945" endtime="20201112 09:55:33.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:33.351" level="INFO">${RESULT} = [{'time': 0.040091208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.36800000000057e-05, 'source_diff': 9.36800000000057e-05}, {'time': 0.0402135, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9...</msg>
<status status="PASS" starttime="20201112 09:55:33.342" endtime="20201112 09:55:33.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:33.381" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:33.353" endtime="20201112 09:55:33.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:33.392" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 09:55:33.390" endtime="20201112 09:55:33.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:33.397" level="INFO">VALUE: [9.36800000000057e-05, 9.377800000000269e-05, 9.31800000000052e-05, 9.388899999999978e-05, 9.383400000000097e-05, 9.406900000000218e-05, 9.387500000000021e-05, 9.32079999999974e-05, 9.336199999999961e-05, 9.369399999999833e-05, 9.34859999999968e-05, 9.336100000000014e-05, 9.34859999999968e-05, 9.340299999999885e-05, 9.413900000000003e-05, 9.412500000000046e-05, 9.39859999999973e-05, 9.409700000000132e-05, 9.386100000000064e-05, 9.34450000000045e-05, 9.320800000000434e-05, 9.355500000000211e-05, 9.366699999999867e-05, 9.408300000000175e-05, 9.358300000000125e-05, 9.337499999999971e-05, 9.38200000000014e-05, 9.361099999999345e-05, 9.377799999999575e-05, 9.322299999999645e-05, 9.362499999999996e-05, 9.338899999999928e-05, 9.388899999999978e-05, 9.373599999999704e-05, 9.397199999999772e-05, 9.354200000000201e-05, 9.325000000000305e-05, 9.404200000000251e-05, 9.336100000000014e-05, 9.363899999999953e-05, 9.327799999999525e-05, 9.379199999999532e-05, 9.334800000000004e-05, 9.354200000000201e-05, 9.35409999999956e-05, 9.358300000000125e-05, 9.322199999999697e-05, 9.351400000000287e-05, 9.343099999999799e-05, 9.399999999999686e-05]</msg>
<status status="PASS" starttime="20201112 09:55:33.394" endtime="20201112 09:55:33.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.383" endtime="20201112 09:55:33.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:33.407" endtime="20201112 09:55:33.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:33.415" endtime="20201112 09:55:33.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.411" endtime="20201112 09:55:33.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.402" endtime="20201112 09:55:33.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.886" endtime="20201112 09:55:33.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.885" endtime="20201112 09:55:33.444"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:33.467" endtime="20201112 09:55:33.488"></status>
</kw>
<msg timestamp="20201112 09:55:33.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:33.464" endtime="20201112 09:55:33.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:33.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:33.491" endtime="20201112 09:55:33.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:33.498" endtime="20201112 09:55:33.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.457" endtime="20201112 09:55:33.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.451" endtime="20201112 09:55:33.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:33.521" endtime="20201112 09:55:33.869"></status>
</kw>
<msg timestamp="20201112 09:55:33.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040506375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040600694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:33.517" endtime="20201112 09:55:33.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:33.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040506375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040600694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:33.878" endtime="20201112 09:55:33.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:33.897" endtime="20201112 09:55:33.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.510" endtime="20201112 09:55:33.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.506" endtime="20201112 09:55:33.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:33.914" level="INFO">${RESULT} = [{'time': 0.040600694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.431900000000243e-05, 'source_diff': 9.431900000000243e-05}, {'time': 0.040724, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:55:33.905" endtime="20201112 09:55:33.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:33.944" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:33.916" endtime="20201112 09:55:33.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:33.955" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 09:55:33.953" endtime="20201112 09:55:33.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:33.961" level="INFO">VALUE: [9.431900000000243e-05, 9.480600000000283e-05, 9.476400000000412e-05, 9.480499999999642e-05, 9.479199999999632e-05, 9.483400000000197e-05, 9.430500000000286e-05, 9.497199999999872e-05, 9.479199999999632e-05, 9.449999999999736e-05, 9.494499999999906e-05, 9.42079999999984e-05, 9.483299999999556e-05, 9.50000000000048e-05, 9.473600000000498e-05, 9.49859999999983e-05, 9.473599999999804e-05, 9.458399999999478e-05, 9.491699999999992e-05, 9.479200000000326e-05, 9.416600000000663e-05, 9.502800000000394e-05, 9.445899999999813e-05, 9.417999999999926e-05, 9.426399999999668e-05, 9.413800000000055e-05, 9.430500000000286e-05, 9.442999999999951e-05, 9.416699999999917e-05, 9.445799999999865e-05, 9.51530000000006e-05, 9.483400000000197e-05, 9.43479999999941e-05, 9.480500000000336e-05, 9.491600000000044e-05, 9.470899999999838e-05, 9.472199999999847e-05, 9.41529999999996e-05, 9.506899999999624e-05, 9.461100000000139e-05, 9.463899999999359e-05, 9.41529999999996e-05, 9.495899999999863e-05, 9.461199999999392e-05, 9.445899999999813e-05, 9.440299999999985e-05, 9.507000000000265e-05, 9.490300000000035e-05, 9.455600000000258e-05, 9.416699999999917e-05]</msg>
<status status="PASS" starttime="20201112 09:55:33.958" endtime="20201112 09:55:33.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.946" endtime="20201112 09:55:33.964"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:33.970" endtime="20201112 09:55:33.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:33.978" endtime="20201112 09:55:34.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.974" endtime="20201112 09:55:34.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.965" endtime="20201112 09:55:34.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.446" endtime="20201112 09:55:34.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.445" endtime="20201112 09:55:34.005"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:34.029" endtime="20201112 09:55:34.048"></status>
</kw>
<msg timestamp="20201112 09:55:34.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:34.025" endtime="20201112 09:55:34.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:34.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:34.052" endtime="20201112 09:55:34.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:34.058" endtime="20201112 09:55:34.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.018" endtime="20201112 09:55:34.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.011" endtime="20201112 09:55:34.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:34.081" endtime="20201112 09:55:34.416"></status>
</kw>
<msg timestamp="20201112 09:55:34.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041969083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042064833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:34.078" endtime="20201112 09:55:34.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:34.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041969083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042064833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:34.426" endtime="20201112 09:55:34.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:34.444" endtime="20201112 09:55:34.448"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.071" endtime="20201112 09:55:34.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.066" endtime="20201112 09:55:34.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:34.461" level="INFO">${RESULT} = [{'time': 0.042064833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.575000000000555e-05, 'source_diff': 9.575000000000555e-05}, {'time': 0.042190139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:34.452" endtime="20201112 09:55:34.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:34.492" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:34.464" endtime="20201112 09:55:34.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:34.502" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 09:55:34.500" endtime="20201112 09:55:34.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:34.508" level="INFO">VALUE: [9.575000000000555e-05, 9.538900000000128e-05, 9.591700000000092e-05, 9.590299999999441e-05, 9.579099999999785e-05, 9.593000000000101e-05, 9.536100000000214e-05, 9.557000000000315e-05, 9.561099999999545e-05, 9.55000000000053e-05, 9.530499999999692e-05, 9.558400000000272e-05, 9.552699999999803e-05, 9.609699999999638e-05, 9.518000000000026e-05, 9.568000000000076e-05, 9.573599999999904e-05, 9.580500000000436e-05, 9.612500000000246e-05, 9.527799999999725e-05, 9.51660000000007e-05, 9.5333000000003e-05, 9.572199999999947e-05, 9.563900000000153e-05, 9.599999999999886e-05, 9.547199999999922e-05, 9.506999999999571e-05, 9.534800000000204e-05, 9.523599999999854e-05, 9.526399999999768e-05, 9.573599999999904e-05, 9.58059999999969e-05, 9.558300000000325e-05, 9.581999999999646e-05, 9.59859999999993e-05, 9.520800000000634e-05, 9.561200000000186e-05, 9.555599999999664e-05, 9.536200000000161e-05, 9.608300000000375e-05, 9.606900000000418e-05, 9.59859999999993e-05, 9.580499999999742e-05, 9.524999999999811e-05, 9.590300000000135e-05, 9.58609999999957e-05, 9.565299999999416e-05, 9.556999999999621e-05, 9.613900000000203e-05, 9.527799999999725e-05]</msg>
<status status="PASS" starttime="20201112 09:55:34.505" endtime="20201112 09:55:34.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.494" endtime="20201112 09:55:34.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:34.522" endtime="20201112 09:55:34.524"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:34.530" endtime="20201112 09:55:34.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.525" endtime="20201112 09:55:34.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.517" endtime="20201112 09:55:34.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.007" endtime="20201112 09:55:34.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.005" endtime="20201112 09:55:34.556"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:34.578" endtime="20201112 09:55:34.599"></status>
</kw>
<msg timestamp="20201112 09:55:34.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:34.575" endtime="20201112 09:55:34.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:34.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:34.603" endtime="20201112 09:55:34.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:34.609" endtime="20201112 09:55:34.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.568" endtime="20201112 09:55:34.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.562" endtime="20201112 09:55:34.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:34.635" endtime="20201112 09:55:34.982"></status>
</kw>
<msg timestamp="20201112 09:55:34.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039956181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040052944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:34.632" endtime="20201112 09:55:34.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039956181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040052944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:34.992" endtime="20201112 09:55:35.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.010" endtime="20201112 09:55:35.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.624" endtime="20201112 09:55:35.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.620" endtime="20201112 09:55:35.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:35.028" level="INFO">${RESULT} = [{'time': 0.040052944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.676299999999971e-05, 'source_diff': 9.676299999999971e-05}, {'time': 0.04018025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:55:35.019" endtime="20201112 09:55:35.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:35.058" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:35.030" endtime="20201112 09:55:35.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.069" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 09:55:35.067" endtime="20201112 09:55:35.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.074" level="INFO">VALUE: [9.676299999999971e-05, 9.61530000000016e-05, 9.629099999999835e-05, 9.655599999999764e-05, 9.711099999999695e-05, 9.695900000000063e-05, 9.656899999999774e-05, 9.694500000000106e-05, 9.705600000000508e-05, 9.652699999999903e-05, 9.68479999999966e-05, 9.669400000000133e-05, 9.695800000000115e-05, 9.706899999999824e-05, 9.63609999999962e-05, 9.661100000000339e-05, 9.697199999999379e-05, 9.66530000000021e-05, 9.651399999999893e-05, 9.638799999999587e-05, 9.679199999999832e-05, 9.693000000000201e-05, 9.64859999999998e-05, 9.712499999999652e-05, 9.694499999999412e-05, 9.631900000000443e-05, 9.673600000000004e-05, 9.658299999999731e-05, 9.634700000000357e-05, 9.644500000000056e-05, 9.69860000000003e-05, 9.7027999999999e-05, 9.652800000000544e-05, 9.674999999999961e-05, 9.638899999999534e-05, 9.640300000000185e-05, 9.684700000000407e-05, 9.686100000000364e-05, 9.659799999999635e-05, 9.697200000000072e-05, 9.649999999999936e-05, 9.6333000000004e-05, 9.634699999999663e-05, 9.684699999999713e-05, 9.684699999999713e-05, 9.713900000000303e-05, 9.630600000000433e-05, 9.624999999999911e-05, 9.705599999999814e-05, 9.618000000000126e-05]</msg>
<status status="PASS" starttime="20201112 09:55:35.071" endtime="20201112 09:55:35.076"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.060" endtime="20201112 09:55:35.077"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.084" endtime="20201112 09:55:35.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:35.092" endtime="20201112 09:55:35.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.087" endtime="20201112 09:55:35.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.079" endtime="20201112 09:55:35.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.558" endtime="20201112 09:55:35.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.557" endtime="20201112 09:55:35.117"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.140" endtime="20201112 09:55:35.160"></status>
</kw>
<msg timestamp="20201112 09:55:35.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:35.136" endtime="20201112 09:55:35.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:35.163" endtime="20201112 09:55:35.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.169" endtime="20201112 09:55:35.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.129" endtime="20201112 09:55:35.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.124" endtime="20201112 09:55:35.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.194" endtime="20201112 09:55:35.529"></status>
</kw>
<msg timestamp="20201112 09:55:35.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039666153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039764278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:35.190" endtime="20201112 09:55:35.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039666153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039764278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:35.539" endtime="20201112 09:55:35.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.558" endtime="20201112 09:55:35.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.182" endtime="20201112 09:55:35.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.177" endtime="20201112 09:55:35.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:35.575" level="INFO">${RESULT} = [{'time': 0.039764278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.812499999999752e-05, 'source_diff': 9.812499999999752e-05}, {'time': 0.039890569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:35.566" endtime="20201112 09:55:35.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:35.605" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:35.577" endtime="20201112 09:55:35.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.616" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 09:55:35.614" endtime="20201112 09:55:35.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.622" level="INFO">VALUE: [9.812499999999752e-05, 9.769400000000233e-05, 9.730499999999892e-05, 9.774999999999368e-05, 9.75279999999995e-05, 9.779099999999985e-05, 9.763899999999659e-05, 9.776400000000018e-05, 9.729199999999882e-05, 9.731999999999796e-05, 9.736100000000414e-05, 9.793100000000249e-05, 9.768000000000276e-05, 9.809799999999785e-05, 9.755599999999864e-05, 9.743100000000199e-05, 9.755499999999917e-05, 9.723600000000054e-05, 9.793100000000249e-05, 9.793000000000301e-05, 9.775000000000061e-05, 9.806899999999924e-05, 9.773600000000104e-05, 9.736100000000414e-05, 9.73609999999972e-05, 9.787500000000421e-05, 9.763900000000353e-05, 9.767999999999583e-05, 9.73200000000049e-05, 9.812499999999752e-05, 9.763899999999659e-05, 9.790299999999641e-05, 9.748599999999386e-05, 9.819400000000283e-05, 9.794400000000258e-05, 9.766699999999573e-05, 9.716700000000217e-05, 9.784800000000454e-05, 9.794399999999565e-05, 9.805599999999914e-05, 9.713900000000303e-05, 9.781999999999846e-05, 9.759699999999788e-05, 9.741700000000242e-05, 9.787500000000421e-05, 9.740299999999591e-05, 9.731899999999849e-05, 9.716700000000217e-05, 9.713899999999609e-05, 9.761099999999745e-05]</msg>
<status status="PASS" starttime="20201112 09:55:35.619" endtime="20201112 09:55:35.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.607" endtime="20201112 09:55:35.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.631" endtime="20201112 09:55:35.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:35.640" endtime="20201112 09:55:35.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.635" endtime="20201112 09:55:35.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.626" endtime="20201112 09:55:35.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.120" endtime="20201112 09:55:35.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.118" endtime="20201112 09:55:35.666"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.689" endtime="20201112 09:55:35.709"></status>
</kw>
<msg timestamp="20201112 09:55:35.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:35.685" endtime="20201112 09:55:35.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:35.712" endtime="20201112 09:55:35.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.718" endtime="20201112 09:55:35.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.678" endtime="20201112 09:55:35.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.673" endtime="20201112 09:55:35.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.742" endtime="20201112 09:55:36.082"></status>
</kw>
<msg timestamp="20201112 09:55:36.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040358681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040457333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:35.738" endtime="20201112 09:55:36.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040358681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040457333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:36.092" endtime="20201112 09:55:36.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:36.110" endtime="20201112 09:55:36.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.731" endtime="20201112 09:55:36.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.726" endtime="20201112 09:55:36.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:36.128" level="INFO">${RESULT} = [{'time': 0.040457333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.865199999999769e-05, 'source_diff': 9.865199999999769e-05}, {'time': 0.040587667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:36.119" endtime="20201112 09:55:36.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:36.158" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:36.130" endtime="20201112 09:55:36.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.169" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 09:55:36.167" endtime="20201112 09:55:36.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.174" level="INFO">VALUE: [9.865199999999769e-05, 9.893100000000349e-05, 9.838899999999734e-05, 9.818100000000274e-05, 9.87080000000029e-05, 9.81530000000036e-05, 9.89730000000022e-05, 9.85280000000005e-05, 9.834700000000557e-05, 9.906900000000024e-05, 9.844499999999562e-05, 9.817999999999633e-05, 9.90410000000011e-05, 9.905600000000014e-05, 9.89860000000023e-05, 9.847200000000222e-05, 9.898599999999536e-05, 9.87080000000029e-05, 9.859699999999888e-05, 9.88059999999999e-05, 9.83479999999981e-05, 9.833400000000547e-05, 9.831999999999896e-05, 9.855599999999964e-05, 9.858299999999931e-05, 9.912500000000546e-05, 9.880500000000042e-05, 9.876400000000118e-05, 9.837500000000471e-05, 9.857000000000615e-05, 9.90689999999933e-05, 9.819500000000231e-05, 9.834700000000557e-05, 9.830499999999992e-05, 9.888899999999784e-05, 9.852700000000103e-05, 9.877800000000075e-05, 9.891700000000392e-05, 9.812499999999752e-05, 9.8415999999997e-05, 9.819500000000231e-05, 9.911099999999895e-05, 9.869500000000281e-05, 9.822199999999504e-05, 9.911099999999895e-05, 9.856899999999974e-05, 9.844499999999562e-05, 9.87080000000029e-05, 9.819499999999537e-05, 9.86530000000041e-05]</msg>
<status status="PASS" starttime="20201112 09:55:36.171" endtime="20201112 09:55:36.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.160" endtime="20201112 09:55:36.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:36.184" endtime="20201112 09:55:36.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:36.192" endtime="20201112 09:55:36.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.188" endtime="20201112 09:55:36.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.179" endtime="20201112 09:55:36.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.669" endtime="20201112 09:55:36.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.667" endtime="20201112 09:55:36.218"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:36.240" endtime="20201112 09:55:36.260"></status>
</kw>
<msg timestamp="20201112 09:55:36.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:36.237" endtime="20201112 09:55:36.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:36.263" endtime="20201112 09:55:36.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:36.270" endtime="20201112 09:55:36.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.230" endtime="20201112 09:55:36.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.224" endtime="20201112 09:55:36.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:36.292" endtime="20201112 09:55:36.629"></status>
</kw>
<msg timestamp="20201112 09:55:36.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039725167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039824486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:36.289" endtime="20201112 09:55:36.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039725167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039824486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:36.638" endtime="20201112 09:55:36.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:36.657" endtime="20201112 09:55:36.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.282" endtime="20201112 09:55:36.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.278" endtime="20201112 09:55:36.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:36.675" level="INFO">${RESULT} = [{'time': 0.039824486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.931900000000049e-05, 'source_diff': 9.931900000000049e-05}, {'time': 0.039953833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:36.665" endtime="20201112 09:55:36.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:36.705" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:36.677" endtime="20201112 09:55:36.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.716" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 09:55:36.714" endtime="20201112 09:55:36.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.722" level="INFO">VALUE: [9.931900000000049e-05, 9.947200000000322e-05, 9.954200000000107e-05, 9.993099999999755e-05, 9.937499999999877e-05, 9.93609999999992e-05, 9.956900000000074e-05, 9.950000000000236e-05, 9.933300000000006e-05, 0.00010007000000000071, 9.98609999999997e-05, 9.983300000000056e-05, 9.990199999999894e-05, 0.00010013899999999909, 9.944399999999715e-05, 9.969499999999687e-05, 9.957000000000021e-05, 0.00010013899999999909, 9.962499999999902e-05, 9.93609999999992e-05, 9.974999999999568e-05, 9.962499999999902e-05, 9.94860000000028e-05, 9.97359999999961e-05, 0.00010012499999999952, 0.00010005600000000114, 9.93609999999992e-05, 9.924999999999518e-05, 0.00010007000000000071, 9.94860000000028e-05, 9.958300000000031e-05, 9.918100000000374e-05, 9.938899999999834e-05, 9.920900000000288e-05, 9.937499999999877e-05, 9.98060000000009e-05, 9.925000000000211e-05, 9.976399999999525e-05, 9.965299999999816e-05, 9.965199999999869e-05, 9.966700000000467e-05, 9.937499999999877e-05, 9.955500000000117e-05, 9.943099999999705e-05, 9.962499999999902e-05, 0.00010009700000000038, 9.926399999999475e-05, 9.959700000000682e-05, 9.974999999999568e-05, 9.977700000000228e-05]</msg>
<status status="PASS" starttime="20201112 09:55:36.719" endtime="20201112 09:55:36.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.707" endtime="20201112 09:55:36.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:36.731" endtime="20201112 09:55:36.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:36.739" endtime="20201112 09:55:36.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.735" endtime="20201112 09:55:36.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.727" endtime="20201112 09:55:36.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.220" endtime="20201112 09:55:36.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.219" endtime="20201112 09:55:36.765"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:36.788" endtime="20201112 09:55:36.808"></status>
</kw>
<msg timestamp="20201112 09:55:36.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:36.785" endtime="20201112 09:55:36.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:36.811" endtime="20201112 09:55:36.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:36.817" endtime="20201112 09:55:36.821"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.778" endtime="20201112 09:55:36.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.772" endtime="20201112 09:55:36.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:36.840" endtime="20201112 09:55:37.174"></status>
</kw>
<msg timestamp="20201112 09:55:37.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040036306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040137069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:36.837" endtime="20201112 09:55:37.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040036306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040137069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:37.183" endtime="20201112 09:55:37.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.201" endtime="20201112 09:55:37.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.830" endtime="20201112 09:55:37.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.825" endtime="20201112 09:55:37.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:37.220" level="INFO">${RESULT} = [{'time': 0.040137069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010076299999999677, 'source_diff': 0.00010076299999999677}, {'time': 0.040269431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:37.211" endtime="20201112 09:55:37.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:37.249" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:37.222" endtime="20201112 09:55:37.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.260" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 09:55:37.258" endtime="20201112 09:55:37.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.266" level="INFO">VALUE: [0.00010076299999999677, 0.00010058400000000078, 0.00010061100000000045, 0.00010038799999999987, 0.00010105600000000214, 0.00010073600000000404, 0.0001008060000000019, 0.00010017999999999833, 0.00010040299999999891, 0.00010102799999999607, 0.00010109800000000085, 0.00010094499999999812, 0.00010062500000000002, 0.00010113900000000009, 0.00010105499999999573, 0.00010105600000000214, 0.00010105499999999573, 0.00010019499999999737, 0.00010033400000000053, 0.00010045900000000413, 0.00010017999999999833, 0.00010032000000000096, 0.00010102799999999607, 0.0001003480000000001, 0.0001007359999999971, 0.00010054199999999514, 0.00010065299999999916, 0.00010031900000000149, 0.0001003480000000001, 0.0001008610000000007, 0.00010029100000000235, 0.00010065199999999969, 0.00010042999999999858, 0.00010116599999999976, 0.00010030499999999498, 0.00010090199999999994, 0.00010052799999999557, 0.00010104099999999616, 0.00010112500000000052, 0.00010083400000000103, 0.00010013899999999909, 0.00010041699999999848, 0.00010109800000000085, 0.00010099999999999693, 0.00010041699999999848, 0.00010062500000000002, 0.00010025000000000311, 0.00010109800000000085, 0.00010084700000000113, 0.00010084700000000113]</msg>
<status status="PASS" starttime="20201112 09:55:37.263" endtime="20201112 09:55:37.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.251" endtime="20201112 09:55:37.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.275" endtime="20201112 09:55:37.278"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:37.283" endtime="20201112 09:55:37.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.279" endtime="20201112 09:55:37.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.271" endtime="20201112 09:55:37.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.768" endtime="20201112 09:55:37.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.766" endtime="20201112 09:55:37.309"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.332" endtime="20201112 09:55:37.352"></status>
</kw>
<msg timestamp="20201112 09:55:37.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:37.328" endtime="20201112 09:55:37.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:37.355" endtime="20201112 09:55:37.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.361" endtime="20201112 09:55:37.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.321" endtime="20201112 09:55:37.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.316" endtime="20201112 09:55:37.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.384" endtime="20201112 09:55:37.719"></status>
</kw>
<msg timestamp="20201112 09:55:37.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040012542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040114597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:37.381" endtime="20201112 09:55:37.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040012542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040114597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:37.728" endtime="20201112 09:55:37.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.747" endtime="20201112 09:55:37.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.374" endtime="20201112 09:55:37.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.369" endtime="20201112 09:55:37.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:37.765" level="INFO">${RESULT} = [{'time': 0.040114597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010205500000000367, 'source_diff': 0.00010205500000000367}, {'time': 0.040246917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:37.756" endtime="20201112 09:55:37.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:37.795" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:37.767" endtime="20201112 09:55:37.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.806" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 09:55:37.803" endtime="20201112 09:55:37.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.811" level="INFO">VALUE: [0.00010205500000000367, 0.00010202799999999707, 0.00010212499999999458, 0.00010188900000000084, 0.00010156900000000274, 0.00010212500000000152, 0.00010155600000000264, 0.00010161100000000145, 0.00010144499999999862, 0.000101416, 0.00010140299999999991, 0.00010211099999999501, 0.00010170799999999897, 0.00010150000000000436, 0.00010215300000000066, 0.00010126299999999727, 0.0001012359999999976, 0.00010174999999999768, 0.0001019160000000005, 0.00010161100000000145, 0.00010119499999999837, 0.00010211099999999501, 0.00010208400000000228, 0.00010197199999999879, 0.00010183299999999562, 0.00010172199999999854, 0.00010147199999999829, 0.00010212499999999458, 0.00010140299999999991, 0.0001012359999999976, 0.00010122200000000497, 0.00010172299999999801, 0.00010184699999999519, 0.00010117999999999933, 0.0001011809999999988, 0.00010181899999999605, 0.00010209700000000238, 0.00010120799999999847, 0.00010138799999999393, 0.00010137500000000077, 0.00010126400000000368, 0.00010127799999999632, 0.00010177800000000375, 0.00010198599999999836, 0.00010134699999999469, 0.00010143100000000599, 0.00010188900000000084, 0.0001012359999999976, 0.00010122199999999804, 0.00010205600000000314]</msg>
<status status="PASS" starttime="20201112 09:55:37.808" endtime="20201112 09:55:37.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.797" endtime="20201112 09:55:37.814"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.821" endtime="20201112 09:55:37.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:37.829" endtime="20201112 09:55:37.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.824" endtime="20201112 09:55:37.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.816" endtime="20201112 09:55:37.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.311" endtime="20201112 09:55:37.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.310" endtime="20201112 09:55:37.855"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.877" endtime="20201112 09:55:37.897"></status>
</kw>
<msg timestamp="20201112 09:55:37.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:37.874" endtime="20201112 09:55:37.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:37.901" endtime="20201112 09:55:37.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.907" endtime="20201112 09:55:37.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.867" endtime="20201112 09:55:37.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.861" endtime="20201112 09:55:37.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.930" endtime="20201112 09:55:38.263"></status>
</kw>
<msg timestamp="20201112 09:55:38.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040316722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040419833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:37.927" endtime="20201112 09:55:38.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040316722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040419833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:38.272" endtime="20201112 09:55:38.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.290" endtime="20201112 09:55:38.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.920" endtime="20201112 09:55:38.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.915" endtime="20201112 09:55:38.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:38.311" level="INFO">${RESULT} = [{'time': 0.040419833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010311100000000295, 'source_diff': 0.00010311100000000295}, {'time': 0.040555181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:38.302" endtime="20201112 09:55:38.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:38.340" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:38.313" endtime="20201112 09:55:38.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.351" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 09:55:38.349" endtime="20201112 09:55:38.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.356" level="INFO">VALUE: [0.00010311100000000295, 0.00010266700000000073, 0.00010227800000000425, 0.00010240300000000091, 0.00010291700000000098, 0.00010308299999999687, 0.00010234700000000263, 0.00010237499999999483, 0.00010230599999999646, 0.00010249999999999843, 0.00010242999999999364, 0.00010250000000000536, 0.00010294400000000065, 0.00010297199999999979, 0.000102513999999998, 0.00010243100000000005, 0.00010317999999999439, 0.00010312499999999558, 0.00010240300000000091, 0.00010295800000000022, 0.00010305499999999773, 0.00010292999999999414, 0.00010294500000000012, 0.00010240299999999397, 0.00010259700000000288, 0.00010262500000000202, 0.00010241700000000048, 0.00010307000000000371, 0.0001022359999999986, 0.00010309700000000338, 0.00010276399999999825, 0.00010305499999999773, 0.00010233300000000306, 0.00010258300000000331, 0.0001025559999999967, 0.00010276400000000518, 0.00010276399999999825, 0.00010270799999999997, 0.00010231900000000349, 0.00010313900000000209, 0.00010215300000000066, 0.0001028610000000027, 0.0001027359999999991, 0.00010262500000000202, 0.00010240300000000091, 0.00010226299999999827, 0.0001023610000000022, 0.0001029160000000015, 0.00010225000000000511, 0.00010255499999999723]</msg>
<status status="PASS" starttime="20201112 09:55:38.353" endtime="20201112 09:55:38.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.342" endtime="20201112 09:55:38.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.365" endtime="20201112 09:55:38.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:38.374" endtime="20201112 09:55:38.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.370" endtime="20201112 09:55:38.397"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.361" endtime="20201112 09:55:38.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.857" endtime="20201112 09:55:38.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.856" endtime="20201112 09:55:38.400"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.422" endtime="20201112 09:55:38.442"></status>
</kw>
<msg timestamp="20201112 09:55:38.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:38.419" endtime="20201112 09:55:38.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:38.445" endtime="20201112 09:55:38.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.452" endtime="20201112 09:55:38.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.412" endtime="20201112 09:55:38.457"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.406" endtime="20201112 09:55:38.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.475" endtime="20201112 09:55:38.811"></status>
</kw>
<msg timestamp="20201112 09:55:38.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039863944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039968014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:38.471" endtime="20201112 09:55:38.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039863944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039968014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:38.821" endtime="20201112 09:55:38.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.839" endtime="20201112 09:55:38.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.464" endtime="20201112 09:55:38.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.460" endtime="20201112 09:55:38.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:38.857" level="INFO">${RESULT} = [{'time': 0.039968014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010407000000000471, 'source_diff': 0.00010407000000000471}, {'time': 0.040104347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:38.849" endtime="20201112 09:55:38.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:38.887" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:38.859" endtime="20201112 09:55:38.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.898" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 09:55:38.895" endtime="20201112 09:55:38.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.903" level="INFO">VALUE: [0.00010407000000000471, 0.00010397200000000079, 0.00010413899999999615, 0.00010322200000000004, 0.00010390300000000241, 0.00010401300000000002, 0.00010397200000000079, 0.00010412500000000352, 0.00010363800000000312, 0.00010334799999999617, 0.00010319500000000037, 0.00010391699999999504, 0.00010391699999999504, 0.00010365300000000216, 0.00010398600000000036, 0.00010347200000000029, 0.00010338900000000234, 0.00010374999999999968, 0.00010363899999999565, 0.00010361099999999651, 0.00010412499999999658, 0.00010393099999999461, 0.00010412500000000352, 0.00010363900000000259, 0.00010381900000000499, 0.00010397200000000079, 0.00010336200000000267, 0.00010336099999999626, 0.000103513999999999, 0.00010404199999999864, 0.0001036810000000013, 0.00010404199999999864, 0.00010408299999999787, 0.0001032359999999996, 0.00010404200000000557, 0.00010383299999999762, 0.0001032359999999996, 0.00010381999999999753, 0.00010347200000000029, 0.00010337500000000277, 0.00010376399999999925, 0.0001032359999999996, 0.00010365300000000216, 0.00010363799999999618, 0.00010381999999999753, 0.00010381899999999805, 0.00010384799999999667, 0.00010347200000000029, 0.00010391599999999557, 0.00010333400000000353]</msg>
<status status="PASS" starttime="20201112 09:55:38.900" endtime="20201112 09:55:38.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.889" endtime="20201112 09:55:38.906"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.912" endtime="20201112 09:55:38.915"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:38.921" endtime="20201112 09:55:38.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.916" endtime="20201112 09:55:38.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.908" endtime="20201112 09:55:38.946"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.402" endtime="20201112 09:55:38.946"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.401" endtime="20201112 09:55:38.947"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.969" endtime="20201112 09:55:38.991"></status>
</kw>
<msg timestamp="20201112 09:55:38.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:38.966" endtime="20201112 09:55:38.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:38.994" endtime="20201112 09:55:38.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:39.000" endtime="20201112 09:55:39.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.959" endtime="20201112 09:55:39.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.953" endtime="20201112 09:55:39.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:39.024" endtime="20201112 09:55:39.367"></status>
</kw>
<msg timestamp="20201112 09:55:39.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040020986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040126139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:39.020" endtime="20201112 09:55:39.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:39.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040020986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040126139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:39.377" endtime="20201112 09:55:39.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:39.395" endtime="20201112 09:55:39.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.013" endtime="20201112 09:55:39.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.009" endtime="20201112 09:55:39.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:39.413" level="INFO">${RESULT} = [{'time': 0.040126139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010515299999999672, 'source_diff': 0.00010515299999999672}, {'time': 0.040261472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:39.405" endtime="20201112 09:55:39.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:39.443" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:39.415" endtime="20201112 09:55:39.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:39.454" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 09:55:39.451" endtime="20201112 09:55:39.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:39.459" level="INFO">VALUE: [0.00010515299999999672, 0.00010459699999999794, 0.00010442999999999564, 0.00010448700000000033, 0.00010436099999999726, 0.0001048060000000059, 0.00010487500000000427, 0.00010480499999999948, 0.00010461099999999751, 0.00010472200000000154, 0.00010461099999999751, 0.00010509700000000538, 0.00010445799999999478, 0.00010448600000000086, 0.00010463899999999665, 0.00010469399999999546, 0.00010437500000000377, 0.00010465300000000316, 0.00010487499999999733, 0.00010508299999999887, 0.00010434699999999769, 0.00010469500000000187, 0.00010509699999999844, 0.00010502800000000007, 0.00010511099999999801, 0.00010487499999999733, 0.00010467999999999589, 0.00010448600000000086, 0.0001050140000000005, 0.00010419500000000137, 0.00010483299999999862, 0.00010430599999999846, 0.00010433299999999812, 0.00010437499999999683, 0.00010470800000000197, 0.00010418099999999486, 0.00010448600000000086, 0.00010445800000000172, 0.00010495800000000222, 0.0001047219999999946, 0.00010443000000000258, 0.00010445800000000172, 0.00010415300000000266, 0.00010513900000000409, 0.0001050689999999993, 0.00010436099999999726, 0.0001050559999999992, 0.00010487499999999733, 0.00010434699999999769, 0.00010454199999999914]</msg>
<status status="PASS" starttime="20201112 09:55:39.456" endtime="20201112 09:55:39.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.445" endtime="20201112 09:55:39.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:39.468" endtime="20201112 09:55:39.471"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:39.477" endtime="20201112 09:55:39.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.472" endtime="20201112 09:55:39.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.464" endtime="20201112 09:55:39.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.949" endtime="20201112 09:55:39.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.948" endtime="20201112 09:55:39.503"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:39.525" endtime="20201112 09:55:39.545"></status>
</kw>
<msg timestamp="20201112 09:55:39.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:39.522" endtime="20201112 09:55:39.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:39.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:39.549" endtime="20201112 09:55:39.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:39.555" endtime="20201112 09:55:39.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.515" endtime="20201112 09:55:39.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.509" endtime="20201112 09:55:39.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:39.578" endtime="20201112 09:55:39.914"></status>
</kw>
<msg timestamp="20201112 09:55:39.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040141875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040247236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:39.575" endtime="20201112 09:55:39.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:39.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040141875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040247236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:39.923" endtime="20201112 09:55:39.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:39.941" endtime="20201112 09:55:39.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.567" endtime="20201112 09:55:39.949"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.563" endtime="20201112 09:55:39.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:39.960" level="INFO">${RESULT} = [{'time': 0.040247236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010536099999999826, 'source_diff': 0.00010536099999999826}, {'time': 0.040381556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:39.952" endtime="20201112 09:55:39.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:39.990" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:39.962" endtime="20201112 09:55:39.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.001" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 09:55:39.998" endtime="20201112 09:55:40.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.006" level="INFO">VALUE: [0.00010536099999999826, 0.00010609799999999892, 0.00010550000000000143, 0.00010563899999999765, 0.00010541700000000348, 0.00010566599999999732, 0.00010570799999999603, 0.00010586099999999876, 0.00010587499999999833, 0.00010608299999999987, 0.00010558299999999937, 0.00010536099999999826, 0.00010613899999999815, 0.0001060690000000003, 0.00010552800000000057, 0.00010541700000000348, 0.00010613899999999815, 0.0001060560000000002, 0.00010594499999999618, 0.00010526400000000075, 0.0001061940000000039, 0.00010540300000000391, 0.00010611099999999901, 0.00010544500000000262, 0.00010548600000000186, 0.00010513900000000409, 0.00010577799999999388, 0.00010540299999999697, 0.00010554100000000066, 0.00010536099999999826, 0.00010580599999999996, 0.00010602800000000107, 0.00010615199999999825, 0.00010583400000000603, 0.0001058889999999979, 0.00010570900000000244, 0.00010609699999999944, 0.00010561199999999799, 0.00010526400000000075, 0.00010588900000000484, 0.00010583299999999962, 0.00010602700000000159, 0.00010561100000000545, 0.0001060690000000003, 0.00010584699999999919, 0.00010608299999999987, 0.00010559799999999842, 0.00010544499999999568, 0.0001053889999999974, 0.00010545800000000272]</msg>
<status status="PASS" starttime="20201112 09:55:40.003" endtime="20201112 09:55:40.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.992" endtime="20201112 09:55:40.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.015" endtime="20201112 09:55:40.018"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:40.024" endtime="20201112 09:55:40.045"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.019" endtime="20201112 09:55:40.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.011" endtime="20201112 09:55:40.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.505" endtime="20201112 09:55:40.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.503" endtime="20201112 09:55:40.050"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.072" endtime="20201112 09:55:40.092"></status>
</kw>
<msg timestamp="20201112 09:55:40.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:40.069" endtime="20201112 09:55:40.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:40.096" endtime="20201112 09:55:40.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.102" endtime="20201112 09:55:40.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.062" endtime="20201112 09:55:40.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.056" endtime="20201112 09:55:40.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.125" endtime="20201112 09:55:40.458"></status>
</kw>
<msg timestamp="20201112 09:55:40.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040077319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040183681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:40.122" endtime="20201112 09:55:40.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040077319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040183681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:40.467" endtime="20201112 09:55:40.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.485" endtime="20201112 09:55:40.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.114" endtime="20201112 09:55:40.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.110" endtime="20201112 09:55:40.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:40.506" level="INFO">${RESULT} = [{'time': 0.040183681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010636199999999874, 'source_diff': 0.00010636199999999874}, {'time': 0.040318069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:40.497" endtime="20201112 09:55:40.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:40.535" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:40.508" endtime="20201112 09:55:40.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.546" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 09:55:40.544" endtime="20201112 09:55:40.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.551" level="INFO">VALUE: [0.00010636199999999874, 0.00010709700000000044, 0.00010658399999999985, 0.0001062360000000026, 0.00010691599999999857, 0.00010631900000000055, 0.00010711100000000001, 0.00010694400000000465, 0.00010712499999999958, 0.0001070690000000013, 0.0001068889999999989, 0.00010675000000000268, 0.00010719399999999796, 0.00010716599999999882, 0.00010626399999999481, 0.0001065419999999942, 0.00010683300000000062, 0.00010647199999999635, 0.00010642999999999764, 0.00010650000000000243, 0.00010684799999999967, 0.00010713899999999915, 0.00010687499999999933, 0.00010687499999999933, 0.00010634799999999917, 0.00010698599999999642, 0.00010659699999999994, 0.00010713899999999915, 0.00010698599999999642, 0.00010622300000000251, 0.00010687499999999933, 0.00010659699999999994, 0.0001063889999999984, 0.00010644500000000362, 0.00010719399999999796, 0.00010619399999999696, 0.00010658399999999985, 0.00010617999999999739, 0.00010650000000000243, 0.00010648600000000286, 0.00010697199999999685, 0.00010665299999999822, 0.00010713899999999915, 0.00010667999999999789, 0.00010663899999999865, 0.0001068340000000001, 0.00010647199999999635, 0.00010722300000000351, 0.00010652700000000209, 0.0001063339999999996]</msg>
<status status="PASS" starttime="20201112 09:55:40.549" endtime="20201112 09:55:40.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.537" endtime="20201112 09:55:40.555"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.561" endtime="20201112 09:55:40.564"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:40.569" endtime="20201112 09:55:40.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.565" endtime="20201112 09:55:40.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.556" endtime="20201112 09:55:40.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.052" endtime="20201112 09:55:40.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.051" endtime="20201112 09:55:40.595"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.617" endtime="20201112 09:55:40.637"></status>
</kw>
<msg timestamp="20201112 09:55:40.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:40.614" endtime="20201112 09:55:40.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:40.641" endtime="20201112 09:55:40.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.647" endtime="20201112 09:55:40.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.607" endtime="20201112 09:55:40.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.601" endtime="20201112 09:55:40.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.670" endtime="20201112 09:55:41.010"></status>
</kw>
<msg timestamp="20201112 09:55:41.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039897806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040005097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:40.667" endtime="20201112 09:55:41.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039897806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040005097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:41.020" endtime="20201112 09:55:41.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.038" endtime="20201112 09:55:41.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.660" endtime="20201112 09:55:41.045"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.655" endtime="20201112 09:55:41.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:41.057" level="INFO">${RESULT} = [{'time': 0.040005097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010729100000000241, 'source_diff': 0.00010729100000000241}, {'time': 0.040141458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:41.048" endtime="20201112 09:55:41.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:41.086" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:41.059" endtime="20201112 09:55:41.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.097" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 09:55:41.095" endtime="20201112 09:55:41.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.102" level="INFO">VALUE: [0.00010729100000000241, 0.0001072219999999971, 0.0001078889999999999, 0.00010731900000000155, 0.00010762500000000008, 0.00010813900000000015, 0.00010797300000000426, 0.000107208999999997, 0.00010754200000000214, 0.00010797200000000479, 0.00010763900000000659, 0.00010797299999999732, 0.00010726399999999581, 0.00010733300000000112, 0.00010779199999999545, 0.00010754200000000214, 0.00010779200000000239, 0.00010818099999999886, 0.00010737499999999983, 0.00010766699999999879, 0.00010795800000000522, 0.00010748700000000333, 0.00010740299999999897, 0.00010819399999999896, 0.00010790299999999947, 0.0001080969999999945, 0.00010756999999999434, 0.00010794399999999871, 0.00010765299999999922, 0.00010812500000000058, 0.00010722300000000351, 0.00010808400000000135, 0.00010742999999999864, 0.00010758300000000137, 0.00010775000000000368, 0.00010765199999999975, 0.00010816599999999982, 0.00010754099999999572, 0.00010731900000000155, 0.00010777800000000282, 0.00010768099999999836, 0.0001080560000000022, 0.00010717999999999839, 0.00010734700000000069, 0.00010773599999999717, 0.00010736100000000026, 0.00010747199999999735, 0.00010745799999999778, 0.00010811099999999407, 0.00010751399999999606]</msg>
<status status="PASS" starttime="20201112 09:55:41.100" endtime="20201112 09:55:41.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.088" endtime="20201112 09:55:41.106"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.112" endtime="20201112 09:55:41.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:41.120" endtime="20201112 09:55:41.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.116" endtime="20201112 09:55:41.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.107" endtime="20201112 09:55:41.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.597" endtime="20201112 09:55:41.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.596" endtime="20201112 09:55:41.146"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.169" endtime="20201112 09:55:41.189"></status>
</kw>
<msg timestamp="20201112 09:55:41.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:41.165" endtime="20201112 09:55:41.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:41.192" endtime="20201112 09:55:41.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.198" endtime="20201112 09:55:41.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.158" endtime="20201112 09:55:41.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.152" endtime="20201112 09:55:41.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.221" endtime="20201112 09:55:41.554"></status>
</kw>
<msg timestamp="20201112 09:55:41.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040094167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040202583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:41.218" endtime="20201112 09:55:41.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040094167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040202583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:41.563" endtime="20201112 09:55:41.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.582" endtime="20201112 09:55:41.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.211" endtime="20201112 09:55:41.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.206" endtime="20201112 09:55:41.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:41.600" level="INFO">${RESULT} = [{'time': 0.040202583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010841600000000007, 'source_diff': 0.00010841600000000007}, {'time': 0.040339944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:41.592" endtime="20201112 09:55:41.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:41.630" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:41.602" endtime="20201112 09:55:41.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.641" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 09:55:41.639" endtime="20201112 09:55:41.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.646" level="INFO">VALUE: [0.00010841600000000007, 0.00010841600000000007, 0.00010887500000000133, 0.00010863900000000065, 0.0001084020000000005, 0.00010912500000000158, 0.00010916600000000082, 0.00010861100000000151, 0.00010884700000000219, 0.00010865200000000075, 0.00010865300000000022, 0.00010879099999999697, 0.0001085690000000028, 0.00010902799999999713, 0.00010887500000000133, 0.00010848600000000486, 0.00010886100000000176, 0.0001087219999999986, 0.00010865300000000022, 0.00010890300000000047, 0.0001087219999999986, 0.00010819399999999896, 0.000108208999999998, 0.00010858400000000185, 0.00010834700000000169, 0.00010907000000000278, 0.00010847200000000529, 0.0001083890000000004, 0.00010880600000000296, 0.00010833300000000212, 0.00010916700000000029, 0.00010919499999999943, 0.00010879199999999645, 0.00010829200000000289, 0.00010908300000000287, 0.00010915300000000072, 0.00010915300000000072, 0.00010916600000000082, 0.00010840299999999997, 0.00010825000000000418, 0.00010888899999999396, 0.00010865300000000022, 0.00010818099999999886, 0.00010890300000000047, 0.00010913900000000115, 0.00010862500000000108, 0.00010822300000000451, 0.00010924999999999824, 0.00010857000000000228, 0.00010911100000000201]</msg>
<status status="PASS" starttime="20201112 09:55:41.643" endtime="20201112 09:55:41.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.632" endtime="20201112 09:55:41.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.655" endtime="20201112 09:55:41.658"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:41.663" endtime="20201112 09:55:41.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.659" endtime="20201112 09:55:41.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.651" endtime="20201112 09:55:41.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.148" endtime="20201112 09:55:41.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.147" endtime="20201112 09:55:41.689"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.711" endtime="20201112 09:55:41.732"></status>
</kw>
<msg timestamp="20201112 09:55:41.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:41.708" endtime="20201112 09:55:41.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:41.735" endtime="20201112 09:55:41.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.742" endtime="20201112 09:55:41.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.701" endtime="20201112 09:55:41.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.695" endtime="20201112 09:55:41.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.764" endtime="20201112 09:55:42.100"></status>
</kw>
<msg timestamp="20201112 09:55:42.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039658667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039768542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:41.761" endtime="20201112 09:55:42.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039658667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039768542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:42.109" endtime="20201112 09:55:42.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:42.127" endtime="20201112 09:55:42.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.754" endtime="20201112 09:55:42.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.750" endtime="20201112 09:55:42.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:42.146" level="INFO">${RESULT} = [{'time': 0.039768542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010987499999999539, 'source_diff': 0.00010987499999999539}, {'time': 0.039907917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:42.137" endtime="20201112 09:55:42.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:42.175" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:42.148" endtime="20201112 09:55:42.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.186" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 09:55:42.184" endtime="20201112 09:55:42.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.192" level="INFO">VALUE: [0.00010987499999999539, 0.00010986100000000276, 0.0001094169999999936, 0.00011004099999999822, 0.00010968100000000036, 0.00011020800000000053, 0.00010969400000000046, 0.00010966700000000079, 0.00010962500000000208, 0.00011011100000000301, 0.00010988899999999496, 0.00010947199999999935, 0.00010930600000000346, 0.00010950000000000543, 0.0001093890000000014, 0.0001092219999999991, 0.00010931899999999661, 0.00010936099999999532, 0.00010931999999999609, 0.00010936100000000226, 0.00010995800000000028, 0.00010991600000000157, 0.0001095419999999972, 0.00010975000000000568, 0.0001100419999999977, 0.000109208999999999, 0.00010991700000000104, 0.00010998599999999942, 0.0001097089999999995, 0.0001098340000000031, 0.0001097360000000061, 0.00011012500000000258, 0.00010940300000000097, 0.00010982000000000353, 0.00010955599999999677, 0.00010933300000000312, 0.00010934699999999575, 0.00010926299999999833, 0.00010961100000000251, 0.00010993100000000061, 0.00010948599999999892, 0.0001095419999999972, 0.00011015300000000172, 0.00010999999999999899, 0.0001093890000000014, 0.00010929200000000389, 0.00010943000000000064, 0.00010947199999999935, 0.00010973599999999917, 0.00010958299999999643]</msg>
<status status="PASS" starttime="20201112 09:55:42.189" endtime="20201112 09:55:42.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.178" endtime="20201112 09:55:42.195"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:42.201" endtime="20201112 09:55:42.204"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:42.209" endtime="20201112 09:55:42.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.205" endtime="20201112 09:55:42.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.197" endtime="20201112 09:55:42.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.691" endtime="20201112 09:55:42.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.690" endtime="20201112 09:55:42.235"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:42.258" endtime="20201112 09:55:42.278"></status>
</kw>
<msg timestamp="20201112 09:55:42.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:42.254" endtime="20201112 09:55:42.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:42.281" endtime="20201112 09:55:42.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:42.288" endtime="20201112 09:55:42.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.247" endtime="20201112 09:55:42.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.242" endtime="20201112 09:55:42.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:42.311" endtime="20201112 09:55:42.646"></status>
</kw>
<msg timestamp="20201112 09:55:42.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040083847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040194806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:42.307" endtime="20201112 09:55:42.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040083847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040194806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:42.655" endtime="20201112 09:55:42.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:42.673" endtime="20201112 09:55:42.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.300" endtime="20201112 09:55:42.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.296" endtime="20201112 09:55:42.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:42.693" level="INFO">${RESULT} = [{'time': 0.040194806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011095900000000075, 'source_diff': 0.00011095900000000075}, {'time': 0.040336125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:42.685" endtime="20201112 09:55:42.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:42.723" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:42.696" endtime="20201112 09:55:42.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.734" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 09:55:42.732" endtime="20201112 09:55:42.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.739" level="INFO">VALUE: [0.00011095900000000075, 0.0001107220000000006, 0.0001107220000000006, 0.00011116600000000282, 0.00011102799999999913, 0.00011086200000000324, 0.00011062500000000308, 0.00011063899999999571, 0.00011080499999999854, 0.00011070800000000103, 0.00011105599999999827, 0.00011084700000000419, 0.00011020800000000053, 0.00011034800000000317, 0.00011029200000000489, 0.00011051399999999906, 0.00011033299999999718, 0.00011020800000000053, 0.00011080599999999802, 0.0001105419999999982, 0.00011116600000000282, 0.00011111099999999707, 0.00011102699999999965, 0.00011058399999999691, 0.00011030599999999752, 0.00011116700000000229, 0.00011086100000000376, 0.00011087500000000333, 0.00011080599999999802, 0.00011099999999999999, 0.00011061100000000351, 0.00011015300000000172, 0.00011093000000000214, 0.0001110549999999988, 0.00011038799999999599, 0.00011066700000000179, 0.00011113899999999621, 0.00011116599999999588, 0.00011115300000000272, 0.00011048599999999992, 0.00011037500000000283, 0.00011118100000000186, 0.00011070799999999409, 0.00011048599999999992, 0.00011026299999999933, 0.00011056899999999786, 0.00011087500000000333, 0.00011041600000000207, 0.00011074999999999974, 0.0001105560000000047]</msg>
<status status="PASS" starttime="20201112 09:55:42.736" endtime="20201112 09:55:42.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.725" endtime="20201112 09:55:42.742"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:42.749" endtime="20201112 09:55:42.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:42.757" endtime="20201112 09:55:42.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.753" endtime="20201112 09:55:42.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.744" endtime="20201112 09:55:42.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.237" endtime="20201112 09:55:42.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.236" endtime="20201112 09:55:42.783"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:42.805" endtime="20201112 09:55:42.825"></status>
</kw>
<msg timestamp="20201112 09:55:42.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:42.802" endtime="20201112 09:55:42.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:42.829" endtime="20201112 09:55:42.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:42.835" endtime="20201112 09:55:42.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.795" endtime="20201112 09:55:42.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.789" endtime="20201112 09:55:42.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:42.858" endtime="20201112 09:55:43.194"></status>
</kw>
<msg timestamp="20201112 09:55:43.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039868778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039980403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:42.855" endtime="20201112 09:55:43.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039868778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039980403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:43.203" endtime="20201112 09:55:43.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.221" endtime="20201112 09:55:43.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.848" endtime="20201112 09:55:43.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.843" endtime="20201112 09:55:43.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:43.240" level="INFO">${RESULT} = [{'time': 0.039980403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011162499999999714, 'source_diff': 0.00011162499999999714}, {'time': 0.040124806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:43.231" endtime="20201112 09:55:43.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:43.270" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:43.242" endtime="20201112 09:55:43.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.281" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 09:55:43.278" endtime="20201112 09:55:43.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.286" level="INFO">VALUE: [0.00011162499999999714, 0.00011194500000000218, 0.00011169500000000193, 0.00011126399999999981, 0.0001115690000000058, 0.00011177799999999988, 0.00011168000000000289, 0.00011180599999999902, 0.00011165300000000322, 0.00011179199999999945, 0.00011180599999999902, 0.00011213899999999721, 0.00011181899999999911, 0.00011184699999999825, 0.00011138899999999646, 0.00011211099999999807, 0.00011170800000000203, 0.00011125000000000024, 0.00011141600000000307, 0.00011213899999999721, 0.00011165199999999681, 0.00011191600000000357, 0.00011125000000000024, 0.00011180499999999954, 0.00011141700000000254, 0.00011143000000000264, 0.00011180499999999954, 0.0001120549999999998, 0.00011212500000000458, 0.00011187500000000433, 0.00011204100000000022, 0.0001118340000000051, 0.00011150000000000049, 0.00011127799999999938, 0.00011197200000000185, 0.00011179199999999945, 0.00011130499999999904, 0.00011147199999999441, 0.00011155599999999877, 0.00011197300000000132, 0.00011180600000000596, 0.00011148600000000092, 0.00011159799999999748, 0.00011136099999999732, 0.00011166699999999585, 0.00011208299999999893, 0.00011211099999999807, 0.00011145800000000178, 0.0001120419999999997, 0.0001120419999999997]</msg>
<status status="PASS" starttime="20201112 09:55:43.283" endtime="20201112 09:55:43.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.271" endtime="20201112 09:55:43.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.295" endtime="20201112 09:55:43.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:43.303" endtime="20201112 09:55:43.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.299" endtime="20201112 09:55:43.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.291" endtime="20201112 09:55:43.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.785" endtime="20201112 09:55:43.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.784" endtime="20201112 09:55:43.329"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.352" endtime="20201112 09:55:43.372"></status>
</kw>
<msg timestamp="20201112 09:55:43.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:43.348" endtime="20201112 09:55:43.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:43.375" endtime="20201112 09:55:43.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.382" endtime="20201112 09:55:43.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.341" endtime="20201112 09:55:43.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.336" endtime="20201112 09:55:43.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.405" endtime="20201112 09:55:43.740"></status>
</kw>
<msg timestamp="20201112 09:55:43.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039868889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039981319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:43.401" endtime="20201112 09:55:43.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039868889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039981319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:43.749" endtime="20201112 09:55:43.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.768" endtime="20201112 09:55:43.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.394" endtime="20201112 09:55:43.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.390" endtime="20201112 09:55:43.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:43.786" level="INFO">${RESULT} = [{'time': 0.039981319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011243000000000364, 'source_diff': 0.00011243000000000364}, {'time': 0.040123639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:43.777" endtime="20201112 09:55:43.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:43.816" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:43.788" endtime="20201112 09:55:43.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.827" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 09:55:43.824" endtime="20201112 09:55:43.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.832" level="INFO">VALUE: [0.00011243000000000364, 0.00011302800000000113, 0.00011315299999999778, 0.00011268099999999642, 0.00011245800000000278, 0.00011245799999999584, 0.00011249999999999455, 0.00011298600000000242, 0.00011219400000000296, 0.00011237500000000483, 0.00011256999999999934, 0.00011301400000000156, 0.00011218100000000286, 0.00011288899999999796, 0.00011240300000000397, 0.00011265299999999728, 0.00011300000000000199, 0.00011265299999999728, 0.00011256999999999934, 0.00011294499999999624, 0.00011302800000000113, 0.00011302800000000113, 0.00011261100000000551, 0.00011258299999999943, 0.0001122220000000021, 0.00011298699999999495, 0.00011283399999999916, 0.00011218000000000339, 0.00011223600000000167, 0.00011243100000000311, 0.00011244500000000268, 0.00011277800000000088, 0.00011297200000000285, 0.00011316599999999788, 0.00011317999999999745, 0.00011266700000000379, 0.00011223700000000114, 0.00011315300000000472, 0.00011319399999999702, 0.00011244500000000268, 0.00011312499999999864, 0.00011295799999999634, 0.00011258299999999943, 0.00011258299999999943, 0.0001130969999999995, 0.00011308299999999993, 0.00011250000000000149, 0.00011273599999999523, 0.00011220800000000253, 0.00011297200000000285]</msg>
<status status="PASS" starttime="20201112 09:55:43.829" endtime="20201112 09:55:43.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.818" endtime="20201112 09:55:43.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.841" endtime="20201112 09:55:43.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:43.850" endtime="20201112 09:55:43.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.845" endtime="20201112 09:55:43.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.837" endtime="20201112 09:55:43.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.331" endtime="20201112 09:55:43.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.330" endtime="20201112 09:55:43.876"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.898" endtime="20201112 09:55:43.919"></status>
</kw>
<msg timestamp="20201112 09:55:43.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:43.895" endtime="20201112 09:55:43.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:43.923" endtime="20201112 09:55:43.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.929" endtime="20201112 09:55:43.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.888" endtime="20201112 09:55:43.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.882" endtime="20201112 09:55:43.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.953" endtime="20201112 09:55:44.287"></status>
</kw>
<msg timestamp="20201112 09:55:44.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040599236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040713278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:43.950" endtime="20201112 09:55:44.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040599236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040713278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:44.297" endtime="20201112 09:55:44.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:44.315" endtime="20201112 09:55:44.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.943" endtime="20201112 09:55:44.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.938" endtime="20201112 09:55:44.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:44.333" level="INFO">${RESULT} = [{'time': 0.040713278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001140420000000017, 'source_diff': 0.0001140420000000017}, {'time': 0.040858681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:44.325" endtime="20201112 09:55:44.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:44.363" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:44.335" endtime="20201112 09:55:44.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.374" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 09:55:44.372" endtime="20201112 09:55:44.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.379" level="INFO">VALUE: [0.0001140420000000017, 0.0001138749999999994, 0.0001133749999999989, 0.000113597, 0.00011344399999999727, 0.00011356899999999392, 0.00011333299999999324, 0.00011341599999999813, 0.00011393000000000514, 0.00011373700000000264, 0.00011350000000000249, 0.0001137220000000036, 0.00011370800000000403, 0.00011370799999999709, 0.00011391600000000557, 0.00011341599999999813, 0.00011315300000000472, 0.00011350000000000249, 0.00011333399999999966, 0.00011338899999999846, 0.0001137220000000036, 0.0001138749999999994, 0.00011363899999999871, 0.00011332000000000009, 0.00011363899999999871, 0.00011401399999999562, 0.00011400000000000299, 0.00011325000000000224, 0.00011408400000000041, 0.00011358300000000043, 0.00011375000000000274, 0.00011319500000000343, 0.00011427800000000238, 0.00011361099999999957, 0.00011363899999999871, 0.00011345900000000325, 0.00011394499999999724, 0.000113597, 0.00011413899999999921, 0.00011336099999999932, 0.00011413899999999921, 0.00011326400000000181, 0.0001133749999999989, 0.00011352800000000163, 0.00011381899999999417, 0.0001135550000000013, 0.00011351400000000206, 0.00011415200000000625, 0.00011343000000000464, 0.00011343000000000464]</msg>
<status status="PASS" starttime="20201112 09:55:44.376" endtime="20201112 09:55:44.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.365" endtime="20201112 09:55:44.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:44.389" endtime="20201112 09:55:44.391"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:44.397" endtime="20201112 09:55:44.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.393" endtime="20201112 09:55:44.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.384" endtime="20201112 09:55:44.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.878" endtime="20201112 09:55:44.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.876" endtime="20201112 09:55:44.423"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:44.445" endtime="20201112 09:55:44.466"></status>
</kw>
<msg timestamp="20201112 09:55:44.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:44.442" endtime="20201112 09:55:44.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:44.469" endtime="20201112 09:55:44.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:44.476" endtime="20201112 09:55:44.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.435" endtime="20201112 09:55:44.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.429" endtime="20201112 09:55:44.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:44.499" endtime="20201112 09:55:44.832"></status>
</kw>
<msg timestamp="20201112 09:55:44.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040199042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040313486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:44.495" endtime="20201112 09:55:44.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040199042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040313486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:44.842" endtime="20201112 09:55:44.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:44.860" endtime="20201112 09:55:44.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.488" endtime="20201112 09:55:44.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.484" endtime="20201112 09:55:44.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:44.880" level="INFO">${RESULT} = [{'time': 0.040313486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011444400000000521, 'source_diff': 0.00011444400000000521}, {'time': 0.040454833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:44.872" endtime="20201112 09:55:44.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:44.910" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:44.882" endtime="20201112 09:55:44.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.921" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 09:55:44.919" endtime="20201112 09:55:44.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.926" level="INFO">VALUE: [0.00011444400000000521, 0.00011465199999999981, 0.00011466699999999885, 0.00011468099999999842, 0.00011447300000000382, 0.00011515300000000672, 0.00011456900000000186, 0.00011451399999999612, 0.00011440299999999903, 0.00011502799999999619, 0.000115082999999995, 0.00011476400000000331, 0.00011433300000000118, 0.00011422199999999716, 0.00011449999999999655, 0.00011451400000000306, 0.00011440299999999903, 0.00011509699999999456, 0.00011461100000000057, 0.00011508400000000141, 0.00011438899999999946, 0.00011448599999999698, 0.00011427800000000238, 0.00011515299999999978, 0.00011419399999999802, 0.00011447200000000435, 0.00011434800000000023, 0.00011450000000000349, 0.00011484699999999431, 0.00011433400000000066, 0.00011508300000000193, 0.00011513900000000021, 0.00011447199999999741, 0.00011433300000000118, 0.00011484700000000125, 0.00011448599999999698, 0.00011511100000000107, 0.00011501399999999662, 0.00011502800000000313, 0.00011444400000000521, 0.00011517999999999945, 0.00011499999999999705, 0.00011512500000000064, 0.00011468000000000589, 0.00011433400000000066, 0.00011447200000000435, 0.00011429200000000195, 0.0001148750000000004, 0.00011470799999999809, 0.00011516599999999988]</msg>
<status status="PASS" starttime="20201112 09:55:44.923" endtime="20201112 09:55:44.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.912" endtime="20201112 09:55:44.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:44.936" endtime="20201112 09:55:44.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:44.945" endtime="20201112 09:55:44.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.940" endtime="20201112 09:55:44.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.931" endtime="20201112 09:55:44.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.425" endtime="20201112 09:55:44.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.424" endtime="20201112 09:55:44.971"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:44.993" endtime="20201112 09:55:45.014"></status>
</kw>
<msg timestamp="20201112 09:55:45.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:44.990" endtime="20201112 09:55:45.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:45.018" endtime="20201112 09:55:45.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.024" endtime="20201112 09:55:45.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.983" endtime="20201112 09:55:45.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.977" endtime="20201112 09:55:45.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.047" endtime="20201112 09:55:45.381"></status>
</kw>
<msg timestamp="20201112 09:55:45.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040397611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040513264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:45.044" endtime="20201112 09:55:45.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040397611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040513264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:45.390" endtime="20201112 09:55:45.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.408" endtime="20201112 09:55:45.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.036" endtime="20201112 09:55:45.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.032" endtime="20201112 09:55:45.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:45.427" level="INFO">${RESULT} = [{'time': 0.040513264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011565300000000028, 'source_diff': 0.00011565300000000028}, {'time': 0.040660681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:45.418" endtime="20201112 09:55:45.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:45.457" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:45.429" endtime="20201112 09:55:45.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.468" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 09:55:45.465" endtime="20201112 09:55:45.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.473" level="INFO">VALUE: [0.00011565300000000028, 0.00011563899999999377, 0.00011575000000000474, 0.00011547199999999841, 0.00011584700000000225, 0.00011547199999999841, 0.00011577799999999694, 0.00011523600000000467, 0.00011523599999999773, 0.00011577799999999694, 0.00011532000000000209, 0.00011604199999999676, 0.00011551400000000406, 0.00011609800000000198, 0.00011552699999999722, 0.00011548600000000492, 0.00011563900000000071, 0.00011523600000000467, 0.00011562500000000114, 0.00011594399999999977, 0.00011561100000000157, 0.00011572299999999813, 0.00011577799999999694, 0.00011573599999999823, 0.00011583299999999574, 0.00011593099999999967, 0.00011529199999999601, 0.00011549999999999755, 0.00011534699999999481, 0.0001153750000000009, 0.00011579099999999704, 0.00011602699999999772, 0.0001159300000000002, 0.0001160550000000038, 0.00011609699999999556, 0.0001160970000000025, 0.00011581900000000311, 0.00011612500000000164, 0.00011526399999999687, 0.00011612500000000164, 0.00011538900000000046, 0.00011613800000000174, 0.00011615300000000078, 0.00011536100000000132, 0.00011613900000000121, 0.0001154169999999996, 0.00011604199999999676, 0.00011567999999999995, 0.00011526399999999687, 0.0001154299999999997]</msg>
<status status="PASS" starttime="20201112 09:55:45.470" endtime="20201112 09:55:45.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.459" endtime="20201112 09:55:45.480"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.486" endtime="20201112 09:55:45.489"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:45.495" endtime="20201112 09:55:45.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.490" endtime="20201112 09:55:45.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.482" endtime="20201112 09:55:45.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.973" endtime="20201112 09:55:45.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.972" endtime="20201112 09:55:45.520"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.543" endtime="20201112 09:55:45.563"></status>
</kw>
<msg timestamp="20201112 09:55:45.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:45.540" endtime="20201112 09:55:45.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:45.567" endtime="20201112 09:55:45.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.573" endtime="20201112 09:55:45.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.532" endtime="20201112 09:55:45.578"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.527" endtime="20201112 09:55:45.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.596" endtime="20201112 09:55:45.931"></status>
</kw>
<msg timestamp="20201112 09:55:45.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039879083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039995278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:45.593" endtime="20201112 09:55:45.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039879083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039995278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:45.940" endtime="20201112 09:55:45.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.959" endtime="20201112 09:55:45.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.585" endtime="20201112 09:55:45.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.581" endtime="20201112 09:55:45.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:45.978" level="INFO">${RESULT} = [{'time': 0.039995278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011619499999999949, 'source_diff': 0.00011619499999999949}, {'time': 0.040144681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:45.969" endtime="20201112 09:55:45.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:46.008" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:45.980" endtime="20201112 09:55:46.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:46.019" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 09:55:46.017" endtime="20201112 09:55:46.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:46.024" level="INFO">VALUE: [0.00011619499999999949, 0.00011688900000000196, 0.00011620800000000653, 0.00011638900000000146, 0.00011627799999999744, 0.00011638900000000146, 0.00011658300000000343, 0.00011629199999999701, 0.00011673600000000617, 0.00011623599999999873, 0.00011705499999999786, 0.00011715200000000231, 0.00011706900000000436, 0.00011643100000000017, 0.00011716700000000135, 0.00011670899999999956, 0.0001172369999999992, 0.00011651399999999812, 0.00011716699999999441, 0.0001164300000000007, 0.00011633400000000266, 0.00011649999999999855, 0.00011679200000000445, 0.00011698699999999895, 0.00011647199999999941, 0.00011686100000000282, 0.00011706899999999743, 0.00011651399999999812, 0.00011666599999999444, 0.00011626399999999787, 0.0001169170000000011, 0.00011662500000000214, 0.00011648600000000592, 0.00011711100000000307, 0.0001169029999999946, 0.00011673599999999923, 0.00011700000000000599, 0.0001163049999999971, 0.00011709699999999656, 0.00011684699999999631, 0.00011702800000000513, 0.00011647299999999888, 0.000116597000000003, 0.00011630500000000404, 0.00011655599999999683, 0.00011683299999999675, 0.00011683300000000368, 0.00011688900000000196, 0.00011644499999999974, 0.00011634800000000223]</msg>
<status status="PASS" starttime="20201112 09:55:46.021" endtime="20201112 09:55:46.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.010" endtime="20201112 09:55:46.027"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.034" endtime="20201112 09:55:46.036"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:46.042" endtime="20201112 09:55:46.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.038" endtime="20201112 09:55:46.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.029" endtime="20201112 09:55:46.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.522" endtime="20201112 09:55:46.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.521" endtime="20201112 09:55:46.068"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.091" endtime="20201112 09:55:46.111"></status>
</kw>
<msg timestamp="20201112 09:55:46.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:46.087" endtime="20201112 09:55:46.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:46.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:46.115" endtime="20201112 09:55:46.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.121" endtime="20201112 09:55:46.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.080" endtime="20201112 09:55:46.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.074" endtime="20201112 09:55:46.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.144" endtime="20201112 09:55:46.478"></status>
</kw>
<msg timestamp="20201112 09:55:46.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040009097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040127278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:46.141" endtime="20201112 09:55:46.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:46.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040009097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040127278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:46.487" endtime="20201112 09:55:46.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.506" endtime="20201112 09:55:46.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.133" endtime="20201112 09:55:46.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.129" endtime="20201112 09:55:46.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:46.524" level="INFO">${RESULT} = [{'time': 0.040127278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011818100000000192, 'source_diff': 0.00011818100000000192}, {'time': 0.040276667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:46.516" endtime="20201112 09:55:46.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:46.554" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:46.526" endtime="20201112 09:55:46.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:46.565" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 09:55:46.563" endtime="20201112 09:55:46.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:46.570" level="INFO">VALUE: [0.00011818100000000192, 0.0001175420000000052, 0.00011813900000000321, 0.00011777800000000588, 0.00011797199999999397, 0.00011790200000000306, 0.0001172499999999993, 0.00011759800000000348, 0.00011749999999999955, 0.00011734799999999629, 0.00011807000000000484, 0.00011745800000000084, 0.00011788900000000296, 0.0001181249999999967, 0.00011762500000000314, 0.00011749999999999955, 0.00011801399999999962, 0.00011758400000000391, 0.00011742999999999476, 0.00011747200000000041, 0.00011772200000000066, 0.0001177499999999998, 0.00011816600000000288, 0.00011790300000000253, 0.00011786099999999688, 0.00011790300000000253, 0.00011736099999999638, 0.00011770800000000109, 0.00011781899999999818, 0.00011755499999999836, 0.00011812500000000364, 0.00011761100000000357, 0.00011800000000000005, 0.00011777800000000588, 0.00011806899999999843, 0.00011811100000000407, 0.00011806899999999843, 0.00011745800000000084, 0.00011780599999999808, 0.00011763900000000271, 0.00011738899999999552, 0.00011788900000000296, 0.00011787499999999645, 0.00011786099999999688, 0.00011766700000000185, 0.00011745900000000031, 0.00011736099999999638, 0.00011793100000000167, 0.00011781999999999765, 0.000117695000000001]</msg>
<status status="PASS" starttime="20201112 09:55:46.567" endtime="20201112 09:55:46.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.556" endtime="20201112 09:55:46.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.580" endtime="20201112 09:55:46.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:46.588" endtime="20201112 09:55:46.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.583" endtime="20201112 09:55:46.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.575" endtime="20201112 09:55:46.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.070" endtime="20201112 09:55:46.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.069" endtime="20201112 09:55:46.614"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.636" endtime="20201112 09:55:46.657"></status>
</kw>
<msg timestamp="20201112 09:55:46.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:46.633" endtime="20201112 09:55:46.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:46.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:46.660" endtime="20201112 09:55:46.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.666" endtime="20201112 09:55:46.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.626" endtime="20201112 09:55:46.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.620" endtime="20201112 09:55:46.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.689" endtime="20201112 09:55:47.025"></status>
</kw>
<msg timestamp="20201112 09:55:47.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03983475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039953625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:46.686" endtime="20201112 09:55:47.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03983475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039953625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:47.034" endtime="20201112 09:55:47.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.053" endtime="20201112 09:55:47.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.679" endtime="20201112 09:55:47.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.674" endtime="20201112 09:55:47.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:47.073" level="INFO">${RESULT} = [{'time': 0.039953625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011887499999999745, 'source_diff': 0.00011887499999999745}, {'time': 0.040105986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:47.065" endtime="20201112 09:55:47.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:47.103" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:47.075" endtime="20201112 09:55:47.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.114" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 09:55:47.112" endtime="20201112 09:55:47.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.119" level="INFO">VALUE: [0.00011887499999999745, 0.0001190970000000055, 0.0001191950000000025, 0.00011911099999999814, 0.00011854199999999926, 0.00011904199999999976, 0.00011844500000000174, 0.00011880599999999908, 0.00011902800000000019, 0.00011852799999999969, 0.00011826399999999987, 0.00011865299999999634, 0.00011888900000000396, 0.00011844400000000227, 0.00011847200000000141, 0.0001182500000000003, 0.00011855599999999883, 0.0001184300000000027, 0.0001189579999999954, 0.0001189579999999954, 0.00011931900000000661, 0.00011881899999999918, 0.00011854099999999979, 0.00011919400000000302, 0.00011845800000000184, 0.0001187500000000008, 0.00011911099999999814, 0.00011902700000000072, 0.00011926400000000087, 0.00011851400000000012, 0.00011897300000000138, 0.00011822200000000116, 0.0001191249999999977, 0.00011845900000000131, 0.00011827800000000638, 0.00011840300000000303, 0.00011836099999999738, 0.00011838899999999652, 0.0001183620000000038, 0.000118597000000005, 0.00011904199999999976, 0.0001186249999999972, 0.00011838900000000346, 0.00011847200000000141, 0.00011869399999999558, 0.0001186249999999972, 0.00011855599999999883, 0.00011920799999999565, 0.00011863899999999677, 0.00011909699999999857]</msg>
<status status="PASS" starttime="20201112 09:55:47.116" endtime="20201112 09:55:47.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.105" endtime="20201112 09:55:47.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.129" endtime="20201112 09:55:47.131"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:47.137" endtime="20201112 09:55:47.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.132" endtime="20201112 09:55:47.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.124" endtime="20201112 09:55:47.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.616" endtime="20201112 09:55:47.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.615" endtime="20201112 09:55:47.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.275" endtime="20201112 09:55:47.163"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:47.174" endtime="20201112 09:55:47.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.169" endtime="20201112 09:55:47.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.167" endtime="20201112 09:55:47.198"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 09:54:51.138" endtime="20201112 09:55:47.199" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:47.219" endtime="20201112 09:55:47.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.215" endtime="20201112 09:55:47.242"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.277" endtime="20201112 09:55:47.294"></status>
</kw>
<msg timestamp="20201112 09:55:47.296" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:47.272" endtime="20201112 09:55:47.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.302" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:47.298" endtime="20201112 09:55:47.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.309" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:55:47.304" endtime="20201112 09:55:47.309"></status>
</kw>
<status status="FAIL" starttime="20201112 09:55:47.264" endtime="20201112 09:55:47.311"></status>
</kw>
<status status="FAIL" starttime="20201112 09:55:47.258" endtime="20201112 09:55:47.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.256" endtime="20201112 09:55:47.313"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:55:47.321" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:55:47.320" endtime="20201112 09:55:47.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.315" endtime="20201112 09:55:47.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.254" endtime="20201112 09:55:47.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.252" endtime="20201112 09:55:47.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.324" endtime="20201112 09:55:47.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.248" endtime="20201112 09:55:47.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.244" endtime="20201112 09:55:47.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.212" endtime="20201112 09:55:47.331"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.358" endtime="20201112 09:55:47.375"></status>
</kw>
<msg timestamp="20201112 09:55:47.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:47.354" endtime="20201112 09:55:47.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:47.378" endtime="20201112 09:55:47.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.384" endtime="20201112 09:55:47.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.347" endtime="20201112 09:55:47.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.341" endtime="20201112 09:55:47.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.407" endtime="20201112 09:55:47.765"></status>
</kw>
<msg timestamp="20201112 09:55:47.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131365125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131386903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:47.404" endtime="20201112 09:55:47.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131365125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131386903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:47.774" endtime="20201112 09:55:47.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.793" endtime="20201112 09:55:47.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.397" endtime="20201112 09:55:47.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.392" endtime="20201112 09:55:47.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:47.811" level="INFO">${RESULT} = [{'time': 0.131386903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1778000000000075e-05, 'source_diff': 2.1778000000000075e-05}, {'time': 0.131416903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:47.802" endtime="20201112 09:55:47.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:47.842" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:47.813" endtime="20201112 09:55:47.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.854" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 09:55:47.851" endtime="20201112 09:55:47.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.859" level="INFO">VALUE: [2.1778000000000075e-05, 2.159700000001208e-05, 2.1110999999990332e-05, 2.117999999998177e-05, 2.1278000000013453e-05, 2.1110999999990332e-05, 2.179200000002046e-05, 2.1110999999990332e-05, 2.0972000000007984e-05, 2.1596999999984323e-05, 2.1652999999982603e-05, 2.145799999997422e-05, 2.0777999999999075e-05, 2.0943999999994967e-05, 2.0930000000002336e-05, 2.093100000000181e-05, 2.1431000000016187e-05, 2.162499999999734e-05, 2.1791000000020988e-05, 2.1444999999981063e-05, 2.0944000000022722e-05, 2.093100000000181e-05, 2.10969999999977e-05, 2.1444999999981063e-05, 2.0791999999991706e-05, 2.140300000000317e-05, 2.161100000000471e-05, 2.1735999999994426e-05, 2.1429999999988958e-05, 2.1582999999991692e-05, 2.1778000000000075e-05, 2.1262999999993593e-05, 2.1221999999987418e-05, 2.1471999999994607e-05, 2.1124999999982963e-05, 2.1820000000005724e-05, 2.1278000000013453e-05, 2.1444000000009344e-05, 2.112500000001072e-05, 2.092999999997458e-05, 2.0943999999994967e-05, 2.159700000001208e-05, 2.1319999999991346e-05, 2.1041999999998895e-05, 2.0930000000002336e-05, 2.1583999999991166e-05, 2.1290999999978855e-05, 2.1250000000000435e-05, 2.097199999998023e-05, 2.0930000000002336e-05]</msg>
<status status="PASS" starttime="20201112 09:55:47.856" endtime="20201112 09:55:47.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.845" endtime="20201112 09:55:47.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.868" endtime="20201112 09:55:47.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:47.876" endtime="20201112 09:55:47.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.871" endtime="20201112 09:55:47.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.863" endtime="20201112 09:55:47.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.337" endtime="20201112 09:55:47.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.335" endtime="20201112 09:55:47.903"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.925" endtime="20201112 09:55:47.941"></status>
</kw>
<msg timestamp="20201112 09:55:47.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:47.922" endtime="20201112 09:55:47.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:47.945" endtime="20201112 09:55:47.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.951" endtime="20201112 09:55:47.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.915" endtime="20201112 09:55:47.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.910" endtime="20201112 09:55:47.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.974" endtime="20201112 09:55:48.315"></status>
</kw>
<msg timestamp="20201112 09:55:48.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041122278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041143708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:47.971" endtime="20201112 09:55:48.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041122278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041143708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:48.325" endtime="20201112 09:55:48.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:48.344" endtime="20201112 09:55:48.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.964" endtime="20201112 09:55:48.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.959" endtime="20201112 09:55:48.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:48.361" level="INFO">${RESULT} = [{'time': 0.041143708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1430000000002836e-05, 'source_diff': 2.1430000000002836e-05}, {'time': 0.041172875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:48.352" endtime="20201112 09:55:48.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:48.393" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:48.363" endtime="20201112 09:55:48.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.404" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 09:55:48.402" endtime="20201112 09:55:48.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.411" level="INFO">VALUE: [2.1430000000002836e-05, 2.1305999999998715e-05, 2.0944000000001906e-05, 2.126300000000053e-05, 2.10969999999977e-05, 2.1471999999994607e-05, 2.126300000000053e-05, 2.140299999999623e-05, 2.094500000000138e-05, 2.1277999999999575e-05, 2.1443999999995467e-05, 2.1277999999999575e-05, 2.1430000000002836e-05, 2.126300000000053e-05, 2.1000000000000185e-05, 2.1055999999998465e-05, 2.0693999999994717e-05, 2.0943999999994967e-05, 2.1277999999999575e-05, 2.1778000000000075e-05, 2.1083999999997605e-05, 2.1250000000000435e-05, 2.12090000000012e-05, 2.163899999999691e-05, 2.181899999999931e-05, 2.161100000000471e-05, 2.15969999999982e-05, 2.158299999999863e-05, 2.1222000000001295e-05, 2.1764000000000505e-05, 2.129099999999967e-05, 2.1180000000002586e-05, 2.111099999999727e-05, 2.111100000000421e-05, 2.1444000000002406e-05, 2.1569999999998535e-05, 2.144500000000188e-05, 2.1291999999999145e-05, 2.090300000000267e-05, 2.1444000000002406e-05, 2.1277999999999575e-05, 2.091700000000224e-05, 2.1264000000000005e-05, 2.144499999999494e-05, 2.143100000000231e-05, 2.1778000000000075e-05, 2.093100000000181e-05, 2.1764000000000505e-05, 2.0749999999999935e-05, 2.12770000000001e-05]</msg>
<status status="PASS" starttime="20201112 09:55:48.407" endtime="20201112 09:55:48.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.395" endtime="20201112 09:55:48.413"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:48.420" endtime="20201112 09:55:48.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:48.428" endtime="20201112 09:55:48.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.424" endtime="20201112 09:55:48.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.415" endtime="20201112 09:55:48.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.905" endtime="20201112 09:55:48.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.904" endtime="20201112 09:55:48.456"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:48.480" endtime="20201112 09:55:48.495"></status>
</kw>
<msg timestamp="20201112 09:55:48.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:48.477" endtime="20201112 09:55:48.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:48.498" endtime="20201112 09:55:48.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:48.505" endtime="20201112 09:55:48.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.470" endtime="20201112 09:55:48.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.463" endtime="20201112 09:55:48.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:48.528" endtime="20201112 09:55:48.867"></status>
</kw>
<msg timestamp="20201112 09:55:48.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042845458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042866944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:48.525" endtime="20201112 09:55:48.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042845458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042866944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:48.877" endtime="20201112 09:55:48.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:48.895" endtime="20201112 09:55:48.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.518" endtime="20201112 09:55:48.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.513" endtime="20201112 09:55:48.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:48.913" level="INFO">${RESULT} = [{'time': 0.042866944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1485999999994176e-05, 'source_diff': 2.1485999999994176e-05}, {'time': 0.042895056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:48.904" endtime="20201112 09:55:48.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:48.943" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:48.915" endtime="20201112 09:55:48.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.958" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 09:55:48.952" endtime="20201112 09:55:48.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.964" level="INFO">VALUE: [2.1485999999994176e-05, 2.144500000000188e-05, 2.1430000000002836e-05, 2.143100000000231e-05, 2.111100000000421e-05, 2.093099999999487e-05, 2.105499999999899e-05, 2.0763999999999505e-05, 2.1486000000001115e-05, 2.10969999999977e-05, 2.162499999999734e-05, 2.094500000000138e-05, 2.116700000000249e-05, 2.1514000000000255e-05, 2.113899999999641e-05, 2.140299999999623e-05, 2.1444000000002406e-05, 2.143099999999537e-05, 2.140300000000317e-05, 2.1264000000000005e-05, 2.1041999999998895e-05, 2.15969999999982e-05, 2.0763999999999505e-05, 2.1250000000000435e-05, 2.10969999999977e-05, 2.0736000000000365e-05, 2.1027999999999325e-05, 2.158300000000557e-05, 2.1429999999995897e-05, 2.08890000000031e-05, 2.155499999999949e-05, 2.1583999999998105e-05, 2.1264000000000005e-05, 2.10969999999977e-05, 2.0777999999999075e-05, 2.15969999999982e-05, 2.111099999999727e-05, 2.1444000000002406e-05, 2.1264000000000005e-05, 2.093100000000181e-05, 2.1584000000005044e-05, 2.10969999999977e-05, 2.111099999999727e-05, 2.158299999999863e-05, 2.098700000000009e-05, 2.095899999999401e-05, 2.0958000000001475e-05, 2.087499999999659e-05, 2.165299999999648e-05, 2.111099999999727e-05]</msg>
<status status="PASS" starttime="20201112 09:55:48.961" endtime="20201112 09:55:48.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.945" endtime="20201112 09:55:48.967"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:48.974" endtime="20201112 09:55:48.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:48.982" endtime="20201112 09:55:49.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.978" endtime="20201112 09:55:49.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.969" endtime="20201112 09:55:49.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.458" endtime="20201112 09:55:49.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.457" endtime="20201112 09:55:49.008"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:49.030" endtime="20201112 09:55:49.046"></status>
</kw>
<msg timestamp="20201112 09:55:49.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:49.027" endtime="20201112 09:55:49.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:49.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:49.050" endtime="20201112 09:55:49.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:49.056" endtime="20201112 09:55:49.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.020" endtime="20201112 09:55:49.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.014" endtime="20201112 09:55:49.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:49.080" endtime="20201112 09:55:49.426"></status>
</kw>
<msg timestamp="20201112 09:55:49.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039901403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039922889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:49.077" endtime="20201112 09:55:49.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:49.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039901403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039922889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:49.436" endtime="20201112 09:55:49.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:49.454" endtime="20201112 09:55:49.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.069" endtime="20201112 09:55:49.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.064" endtime="20201112 09:55:49.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:49.472" level="INFO">${RESULT} = [{'time': 0.039922889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1486000000001115e-05, 'source_diff': 2.1486000000001115e-05}, {'time': 0.039949778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:49.463" endtime="20201112 09:55:49.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:49.502" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:49.474" endtime="20201112 09:55:49.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:49.513" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 09:55:49.511" endtime="20201112 09:55:49.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:49.518" level="INFO">VALUE: [2.1486000000001115e-05, 2.1277999999999575e-05, 2.1764000000000505e-05, 2.1236000000000865e-05, 2.143099999999537e-05, 2.1264000000000005e-05, 2.094499999999444e-05, 2.15969999999982e-05, 2.1472000000001545e-05, 2.1264000000000005e-05, 2.1291999999999145e-05, 2.1597999999997675e-05, 2.15969999999982e-05, 2.0958000000001475e-05, 2.0791999999998645e-05, 2.1583999999998105e-05, 2.15969999999982e-05, 2.1458000000001975e-05, 2.1264000000000005e-05, 2.094499999999444e-05, 2.144500000000188e-05, 2.0929999999995397e-05, 2.087499999999659e-05, 2.1055999999998465e-05, 2.1250000000000435e-05, 2.112500000000378e-05, 2.0777999999999075e-05, 2.137500000000403e-05, 2.093099999999487e-05, 2.0862000000003433e-05, 2.080499999999874e-05, 2.1264000000000005e-05, 2.1277999999999575e-05, 2.17770000000006e-05, 2.0916000000002766e-05, 2.10969999999977e-05, 2.0944000000001906e-05, 2.0916000000002766e-05, 2.1472000000001545e-05, 2.0763999999999505e-05, 2.1444000000002406e-05, 2.10969999999977e-05, 2.1443999999995467e-05, 2.143100000000231e-05, 2.0708000000001225e-05, 2.111100000000421e-05, 2.10969999999977e-05, 2.1277999999999575e-05, 2.1722000000001795e-05, 2.1264000000000005e-05]</msg>
<status status="PASS" starttime="20201112 09:55:49.515" endtime="20201112 09:55:49.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.504" endtime="20201112 09:55:49.522"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:49.528" endtime="20201112 09:55:49.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:49.537" endtime="20201112 09:55:49.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.532" endtime="20201112 09:55:49.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.523" endtime="20201112 09:55:49.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.010" endtime="20201112 09:55:49.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.009" endtime="20201112 09:55:49.563"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:49.586" endtime="20201112 09:55:49.602"></status>
</kw>
<msg timestamp="20201112 09:55:49.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:49.583" endtime="20201112 09:55:49.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:49.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:49.606" endtime="20201112 09:55:49.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:49.612" endtime="20201112 09:55:49.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.575" endtime="20201112 09:55:49.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.570" endtime="20201112 09:55:49.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:49.635" endtime="20201112 09:55:49.982"></status>
</kw>
<msg timestamp="20201112 09:55:49.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040148514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040170097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:49.632" endtime="20201112 09:55:49.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040148514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040170097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:49.991" endtime="20201112 09:55:50.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.010" endtime="20201112 09:55:50.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.624" endtime="20201112 09:55:50.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.620" endtime="20201112 09:55:50.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:50.027" level="INFO">${RESULT} = [{'time': 0.040170097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.158299999999863e-05, 'source_diff': 2.158299999999863e-05}, {'time': 0.040197167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:50.018" endtime="20201112 09:55:50.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:50.057" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:50.029" endtime="20201112 09:55:50.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.068" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 09:55:50.066" endtime="20201112 09:55:50.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.073" level="INFO">VALUE: [2.158299999999863e-05, 2.1277999999999575e-05, 2.162499999999734e-05, 2.161100000000471e-05, 2.12770000000001e-05, 2.161100000000471e-05, 2.161099999999777e-05, 2.109700000000464e-05, 2.109700000000464e-05, 2.1264000000000005e-05, 2.0930000000002336e-05, 2.111099999999727e-05, 2.136099999999752e-05, 2.1264000000000005e-05, 2.080499999999874e-05, 2.143099999999537e-05, 2.111099999999727e-05, 2.144500000000188e-05, 2.17770000000006e-05, 2.0763999999999505e-05, 2.1264000000000005e-05, 2.094500000000138e-05, 2.179100000000017e-05, 2.0958000000001475e-05, 2.1444000000002406e-05, 2.1264000000000005e-05, 2.15969999999982e-05, 2.097300000000052e-05, 2.10969999999977e-05, 2.0943999999994967e-05, 2.143099999999537e-05, 2.131899999999881e-05, 2.14169999999958e-05, 2.090300000000267e-05, 2.1264000000000005e-05, 2.126300000000053e-05, 2.0915999999995827e-05, 2.0929999999995397e-05, 2.1569000000006e-05, 2.111100000000421e-05, 2.094500000000138e-05, 2.183299999999888e-05, 2.14169999999958e-05, 2.093099999999487e-05, 2.112499999999684e-05, 2.143100000000231e-05, 2.1250000000000435e-05, 2.087499999999659e-05, 2.1791999999999645e-05, 2.15969999999982e-05]</msg>
<status status="PASS" starttime="20201112 09:55:50.070" endtime="20201112 09:55:50.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.059" endtime="20201112 09:55:50.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.083" endtime="20201112 09:55:50.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:50.091" endtime="20201112 09:55:50.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.086" endtime="20201112 09:55:50.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.078" endtime="20201112 09:55:50.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.565" endtime="20201112 09:55:50.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.564" endtime="20201112 09:55:50.117"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.142" endtime="20201112 09:55:50.157"></status>
</kw>
<msg timestamp="20201112 09:55:50.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:50.139" endtime="20201112 09:55:50.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:50.160" endtime="20201112 09:55:50.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.167" endtime="20201112 09:55:50.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.132" endtime="20201112 09:55:50.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.124" endtime="20201112 09:55:50.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.190" endtime="20201112 09:55:50.524"></status>
</kw>
<msg timestamp="20201112 09:55:50.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043012611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043033861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:50.186" endtime="20201112 09:55:50.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043012611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043033861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:50.533" endtime="20201112 09:55:50.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.551" endtime="20201112 09:55:50.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.179" endtime="20201112 09:55:50.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.175" endtime="20201112 09:55:50.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:50.569" level="INFO">${RESULT} = [{'time': 0.043033861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1250000000000435e-05, 'source_diff': 2.1250000000000435e-05}, {'time': 0.043061889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:50.560" endtime="20201112 09:55:50.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:50.599" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:50.571" endtime="20201112 09:55:50.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.610" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 09:55:50.608" endtime="20201112 09:55:50.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.615" level="INFO">VALUE: [2.1250000000000435e-05, 2.161099999999777e-05, 2.0944000000001906e-05, 2.1292000000006084e-05, 2.144500000000188e-05, 2.1778000000000075e-05, 2.093100000000181e-05, 2.1193999999995217e-05, 2.111100000000421e-05, 2.109700000000464e-05, 2.091700000000224e-05, 2.0777999999999075e-05, 2.094500000000138e-05, 2.1250000000000435e-05, 2.1791999999999645e-05, 2.179100000000017e-05, 2.0763999999999505e-05, 2.141700000000274e-05, 2.162499999999734e-05, 2.091700000000224e-05, 2.1041999999998895e-05, 2.1236000000000865e-05, 2.112499999999684e-05, 2.0833999999997355e-05, 2.166700000000299e-05, 2.0763999999999505e-05, 2.1097999999997175e-05, 2.161099999999777e-05, 2.143099999999537e-05, 2.119500000000163e-05, 2.1443999999995467e-05, 2.12770000000001e-05, 2.144500000000188e-05, 2.17770000000006e-05, 2.15969999999982e-05, 2.09169999999953e-05, 2.1778000000000075e-05, 2.1000000000000185e-05, 2.0930000000002336e-05, 2.144500000000188e-05, 2.1776999999993663e-05, 2.144500000000188e-05, 2.1778000000000075e-05, 2.111099999999727e-05, 2.15969999999982e-05, 2.093100000000181e-05, 2.0943999999994967e-05, 2.093100000000181e-05, 2.091700000000224e-05, 2.0986000000000615e-05]</msg>
<status status="PASS" starttime="20201112 09:55:50.612" endtime="20201112 09:55:50.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.601" endtime="20201112 09:55:50.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.630" endtime="20201112 09:55:50.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:50.638" endtime="20201112 09:55:50.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.634" endtime="20201112 09:55:50.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.625" endtime="20201112 09:55:50.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.120" endtime="20201112 09:55:50.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.118" endtime="20201112 09:55:50.664"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.686" endtime="20201112 09:55:50.704"></status>
</kw>
<msg timestamp="20201112 09:55:50.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:50.683" endtime="20201112 09:55:50.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:50.707" endtime="20201112 09:55:50.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.714" endtime="20201112 09:55:50.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.676" endtime="20201112 09:55:50.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.670" endtime="20201112 09:55:50.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.736" endtime="20201112 09:55:51.085"></status>
</kw>
<msg timestamp="20201112 09:55:51.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04128325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041304361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:50.733" endtime="20201112 09:55:51.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:51.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04128325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041304361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:51.094" endtime="20201112 09:55:51.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:51.112" endtime="20201112 09:55:51.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.726" endtime="20201112 09:55:51.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.722" endtime="20201112 09:55:51.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:51.130" level="INFO">${RESULT} = [{'time': 0.041304361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.111099999999727e-05, 'source_diff': 2.111099999999727e-05}, {'time': 0.041334403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:51.121" endtime="20201112 09:55:51.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:51.161" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:51.132" endtime="20201112 09:55:51.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:51.172" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 09:55:51.170" endtime="20201112 09:55:51.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:51.177" level="INFO">VALUE: [2.111099999999727e-05, 2.14169999999958e-05, 2.0944000000001906e-05, 2.0749999999999935e-05, 2.161099999999777e-05, 2.161099999999777e-05, 2.112499999999684e-05, 2.111099999999727e-05, 2.1598000000004614e-05, 2.1250000000000435e-05, 2.1056000000005404e-05, 2.1264000000000005e-05, 2.0777999999999075e-05, 2.111099999999727e-05, 2.0930000000002336e-05, 2.0944000000001906e-05, 2.1013999999999755e-05, 2.1430000000002836e-05, 2.0763999999999505e-05, 2.1764000000000505e-05, 2.1750000000000935e-05, 2.1083999999997605e-05, 2.1569999999998535e-05, 2.126300000000053e-05, 2.1306000000005654e-05, 2.1791999999999645e-05, 2.0791999999998645e-05, 2.0930000000002336e-05, 2.111100000000421e-05, 2.1569999999998535e-05, 2.093099999999487e-05, 2.104099999999942e-05, 2.09169999999953e-05, 2.1250000000000435e-05, 2.151300000000078e-05, 2.1750000000000935e-05, 2.1778000000000075e-05, 2.1569000000006e-05, 2.1098000000004113e-05, 2.179100000000017e-05, 2.1277999999999575e-05, 2.15969999999982e-05, 2.155499999999949e-05, 2.145900000000145e-05, 2.1694000000002656e-05, 2.1264000000000005e-05, 2.0943999999994967e-05, 2.126300000000053e-05, 2.1277999999999575e-05, 2.1444000000002406e-05]</msg>
<status status="PASS" starttime="20201112 09:55:51.174" endtime="20201112 09:55:51.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.163" endtime="20201112 09:55:51.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:51.187" endtime="20201112 09:55:51.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:51.195" endtime="20201112 09:55:51.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.191" endtime="20201112 09:55:51.218"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.182" endtime="20201112 09:55:51.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.666" endtime="20201112 09:55:51.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.665" endtime="20201112 09:55:51.221"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:51.243" endtime="20201112 09:55:51.260"></status>
</kw>
<msg timestamp="20201112 09:55:51.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:51.240" endtime="20201112 09:55:51.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:51.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:51.263" endtime="20201112 09:55:51.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:51.269" endtime="20201112 09:55:51.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.233" endtime="20201112 09:55:51.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.227" endtime="20201112 09:55:51.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:51.296" endtime="20201112 09:55:51.643"></status>
</kw>
<msg timestamp="20201112 09:55:51.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039932931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039961514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:51.293" endtime="20201112 09:55:51.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:51.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039932931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039961514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:51.652" endtime="20201112 09:55:51.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:51.671" endtime="20201112 09:55:51.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.282" endtime="20201112 09:55:51.676"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.277" endtime="20201112 09:55:51.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:51.688" level="INFO">${RESULT} = [{'time': 0.039961514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8582999999998693e-05, 'source_diff': 2.8582999999998693e-05}, {'time': 0.039998583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:51.679" endtime="20201112 09:55:51.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:51.718" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:51.690" endtime="20201112 09:55:51.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:51.729" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 09:55:51.727" endtime="20201112 09:55:51.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:51.734" level="INFO">VALUE: [2.8582999999998693e-05, 2.7888999999996222e-05, 2.8236000000000927e-05, 2.867999999999621e-05, 2.8736000000001427e-05, 2.7860999999997083e-05, 2.8777000000000663e-05, 2.8541999999999457e-05, 2.8527999999999887e-05, 2.8194000000002217e-05, 2.8222000000001357e-05, 2.8013999999999817e-05, 2.8208000000001787e-05, 2.8555999999999027e-05, 2.819500000000169e-05, 2.8540999999999983e-05, 2.8541999999999457e-05, 2.8026999999999913e-05, 2.8026999999999913e-05, 2.8208000000001787e-05, 2.8722000000001857e-05, 2.8541999999999457e-05, 2.8221999999994418e-05, 2.8056000000005465e-05, 2.7805999999998277e-05, 2.8068999999998623e-05, 2.840300000000323e-05, 2.837500000000409e-05, 2.8541999999999457e-05, 2.8041999999998957e-05, 2.8208000000001787e-05, 2.8054999999999053e-05, 2.8236000000000927e-05, 2.7930999999994932e-05, 2.8194999999994752e-05, 2.819399999999528e-05, 2.788900000000316e-05, 2.8430999999995432e-05, 2.8555999999999027e-05, 2.838900000000366e-05, 2.8388999999996722e-05, 2.8208999999994322e-05, 2.8527000000000413e-05, 2.7916000000002827e-05, 2.8514000000000317e-05, 2.811100000000427e-05, 2.8541999999999457e-05, 2.8054999999999053e-05, 2.8054999999999053e-05, 2.8554999999999553e-05]</msg>
<status status="PASS" starttime="20201112 09:55:51.731" endtime="20201112 09:55:51.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.720" endtime="20201112 09:55:51.738"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:51.744" endtime="20201112 09:55:51.747"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:51.752" endtime="20201112 09:55:51.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.748" endtime="20201112 09:55:51.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.740" endtime="20201112 09:55:51.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.223" endtime="20201112 09:55:51.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.222" endtime="20201112 09:55:51.778"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:51.800" endtime="20201112 09:55:51.817"></status>
</kw>
<msg timestamp="20201112 09:55:51.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:51.797" endtime="20201112 09:55:51.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:51.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:51.820" endtime="20201112 09:55:51.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:51.827" endtime="20201112 09:55:51.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.790" endtime="20201112 09:55:51.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.784" endtime="20201112 09:55:51.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:51.850" endtime="20201112 09:55:52.198"></status>
</kw>
<msg timestamp="20201112 09:55:52.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039946583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039974972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:51.846" endtime="20201112 09:55:52.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039946583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039974972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:52.207" endtime="20201112 09:55:52.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.226" endtime="20201112 09:55:52.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.839" endtime="20201112 09:55:52.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.835" endtime="20201112 09:55:52.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:52.243" level="INFO">${RESULT} = [{'time': 0.039974972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8388999999996722e-05, 'source_diff': 2.8388999999996722e-05}, {'time': 0.040008028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:52.234" endtime="20201112 09:55:52.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:52.274" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:52.245" endtime="20201112 09:55:52.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.284" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 09:55:52.282" endtime="20201112 09:55:52.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.290" level="INFO">VALUE: [2.8388999999996722e-05, 2.8027999999999387e-05, 2.8694000000002717e-05, 2.8027999999999387e-05, 2.8680999999995682e-05, 2.8527999999999887e-05, 2.8360999999997583e-05, 2.8360999999997583e-05, 2.8333999999997916e-05, 2.8194000000002217e-05, 2.8026999999999913e-05, 2.8638999999996972e-05, 2.8042000000005896e-05, 2.8346999999998013e-05, 2.8319999999998346e-05, 2.867999999999621e-05, 2.787500000000359e-05, 2.8541999999999457e-05, 2.815300000000298e-05, 2.868100000000262e-05, 2.8360999999997583e-05, 2.8527000000000413e-05, 2.8541999999999457e-05, 2.787500000000359e-05, 2.7846999999997513e-05, 2.7777999999999137e-05, 2.8194000000002217e-05, 2.8041999999998957e-05, 2.8055999999998527e-05, 2.7860999999997083e-05, 2.837500000000409e-05, 2.838799999999725e-05, 2.813900000000341e-05, 2.8194000000002217e-05, 2.7944999999994502e-05, 2.86379999999975e-05, 2.8346999999998013e-05, 2.7888999999996222e-05, 2.8736000000001427e-05, 2.869399999999578e-05, 2.8207999999994848e-05, 2.8596999999998263e-05, 2.8194000000002217e-05, 2.7874999999996652e-05, 2.8180000000002647e-05, 2.8361999999997056e-05, 2.8264000000000067e-05, 2.8750000000000997e-05, 2.8208000000001787e-05, 2.8054999999999053e-05]</msg>
<status status="PASS" starttime="20201112 09:55:52.287" endtime="20201112 09:55:52.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.276" endtime="20201112 09:55:52.293"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.299" endtime="20201112 09:55:52.302"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:52.308" endtime="20201112 09:55:52.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.303" endtime="20201112 09:55:52.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.295" endtime="20201112 09:55:52.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.780" endtime="20201112 09:55:52.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.779" endtime="20201112 09:55:52.334"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.356" endtime="20201112 09:55:52.371"></status>
</kw>
<msg timestamp="20201112 09:55:52.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:52.353" endtime="20201112 09:55:52.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:52.375" endtime="20201112 09:55:52.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.381" endtime="20201112 09:55:52.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.346" endtime="20201112 09:55:52.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.340" endtime="20201112 09:55:52.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.404" endtime="20201112 09:55:52.740"></status>
</kw>
<msg timestamp="20201112 09:55:52.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040313361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040341208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:52.400" endtime="20201112 09:55:52.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040313361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040341208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:52.749" endtime="20201112 09:55:52.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.768" endtime="20201112 09:55:52.772"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.393" endtime="20201112 09:55:52.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.389" endtime="20201112 09:55:52.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:52.786" level="INFO">${RESULT} = [{'time': 0.040341208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.784700000000445e-05, 'source_diff': 2.784700000000445e-05}, {'time': 0.040377319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:52.777" endtime="20201112 09:55:52.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:52.816" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:52.788" endtime="20201112 09:55:52.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.827" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 09:55:52.824" endtime="20201112 09:55:52.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.832" level="INFO">VALUE: [2.784700000000445e-05, 2.8026999999999913e-05, 2.8194000000002217e-05, 2.8013999999999817e-05, 2.8486000000001177e-05, 2.8778000000000137e-05, 2.865300000000348e-05, 2.8180999999995182e-05, 2.8040999999999483e-05, 2.8027999999999387e-05, 2.8722000000001857e-05, 2.8180000000002647e-05, 2.8722000000001857e-05, 2.8555999999999027e-05, 2.8042000000005896e-05, 2.8652999999996542e-05, 2.8722000000001857e-05, 2.7958000000001537e-05, 2.786100000000402e-05, 2.869399999999578e-05, 2.8374999999997152e-05, 2.869399999999578e-05, 2.867999999999621e-05, 2.8040999999999483e-05, 2.8013999999999817e-05, 2.8027999999999387e-05, 2.8527999999999887e-05, 2.8208000000001787e-05, 2.8527999999999887e-05, 2.8222000000001357e-05, 2.869399999999578e-05, 2.7999999999993308e-05, 2.8208000000001787e-05, 2.869500000000219e-05, 2.8041999999998957e-05, 2.8250000000000497e-05, 2.8346999999998013e-05, 2.8028000000006326e-05, 2.8500000000000747e-05, 2.8527000000000413e-05, 2.8708999999994822e-05, 2.8346999999998013e-05, 2.820900000000126e-05, 2.816700000000255e-05, 2.8208000000001787e-05, 2.8722000000001857e-05, 2.8527999999999887e-05, 2.8513000000000843e-05, 2.7833999999997416e-05, 2.8194999999994752e-05]</msg>
<status status="PASS" starttime="20201112 09:55:52.829" endtime="20201112 09:55:52.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.818" endtime="20201112 09:55:52.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.841" endtime="20201112 09:55:52.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:52.850" endtime="20201112 09:55:52.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.845" endtime="20201112 09:55:52.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.837" endtime="20201112 09:55:52.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.336" endtime="20201112 09:55:52.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.334" endtime="20201112 09:55:52.875"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.898" endtime="20201112 09:55:52.915"></status>
</kw>
<msg timestamp="20201112 09:55:52.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:52.894" endtime="20201112 09:55:52.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:52.920" endtime="20201112 09:55:52.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.927" endtime="20201112 09:55:52.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.887" endtime="20201112 09:55:52.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.882" endtime="20201112 09:55:52.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.950" endtime="20201112 09:55:53.287"></status>
</kw>
<msg timestamp="20201112 09:55:53.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039933514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039962069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:52.947" endtime="20201112 09:55:53.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039933514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039962069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:53.296" endtime="20201112 09:55:53.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.314" endtime="20201112 09:55:53.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.939" endtime="20201112 09:55:53.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.935" endtime="20201112 09:55:53.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:53.333" level="INFO">${RESULT} = [{'time': 0.039962069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8554999999999553e-05, 'source_diff': 2.8554999999999553e-05}, {'time': 0.039995181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:53.324" endtime="20201112 09:55:53.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:53.363" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:53.335" endtime="20201112 09:55:53.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.374" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 09:55:53.372" endtime="20201112 09:55:53.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.380" level="INFO">VALUE: [2.8554999999999553e-05, 2.7874999999996652e-05, 2.8541999999999457e-05, 2.8055999999998527e-05, 2.784700000000445e-05, 2.8222000000001357e-05, 2.837500000000409e-05, 2.7874999999996652e-05, 2.8361999999997056e-05, 2.8708000000002287e-05, 2.8708000000002287e-05, 2.8694000000002717e-05, 2.8722000000001857e-05, 2.848700000000065e-05, 2.8568999999999123e-05, 2.836100000000452e-05, 2.822300000000083e-05, 2.8264000000000067e-05, 2.865300000000348e-05, 2.8013999999999817e-05, 2.8346999999998013e-05, 2.8527999999999887e-05, 2.8000000000000247e-05, 2.8055999999998527e-05, 2.8208999999994322e-05, 2.834700000000495e-05, 2.8402999999996292e-05, 2.869399999999578e-05, 2.820900000000126e-05, 2.8514000000000317e-05, 2.8207999999994848e-05, 2.8527999999999887e-05, 2.8250000000000497e-05, 2.8708000000002287e-05, 2.8569999999998597e-05, 2.8694000000002717e-05, 2.8680000000003147e-05, 2.8680000000003147e-05, 2.8764000000000567e-05, 2.8040999999999483e-05, 2.7861999999996556e-05, 2.872300000000133e-05, 2.836100000000452e-05, 2.8208999999994322e-05, 2.7986000000000677e-05, 2.8222000000001357e-05, 2.8360999999997583e-05, 2.87370000000009e-05, 2.8054999999999053e-05, 2.7888999999996222e-05]</msg>
<status status="PASS" starttime="20201112 09:55:53.376" endtime="20201112 09:55:53.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.365" endtime="20201112 09:55:53.383"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.389" endtime="20201112 09:55:53.392"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:53.397" endtime="20201112 09:55:53.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.393" endtime="20201112 09:55:53.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.384" endtime="20201112 09:55:53.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.878" endtime="20201112 09:55:53.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.876" endtime="20201112 09:55:53.423"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.445" endtime="20201112 09:55:53.461"></status>
</kw>
<msg timestamp="20201112 09:55:53.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:53.442" endtime="20201112 09:55:53.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:53.464" endtime="20201112 09:55:53.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.470" endtime="20201112 09:55:53.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.435" endtime="20201112 09:55:53.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.429" endtime="20201112 09:55:53.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.493" endtime="20201112 09:55:53.828"></status>
</kw>
<msg timestamp="20201112 09:55:53.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039928444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039956306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:53.490" endtime="20201112 09:55:53.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039928444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039956306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:53.837" endtime="20201112 09:55:53.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.855" endtime="20201112 09:55:53.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.483" endtime="20201112 09:55:53.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.478" endtime="20201112 09:55:53.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:53.876" level="INFO">${RESULT} = [{'time': 0.039956306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7861999999996556e-05, 'source_diff': 2.7861999999996556e-05}, {'time': 0.039992417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:53.868" endtime="20201112 09:55:53.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:53.906" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:53.879" endtime="20201112 09:55:53.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.917" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 09:55:53.915" endtime="20201112 09:55:53.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.922" level="INFO">VALUE: [2.7861999999996556e-05, 2.793100000000187e-05, 2.820900000000126e-05, 2.7888999999996222e-05, 2.8360999999997583e-05, 2.7916000000002827e-05, 2.7874999999996652e-05, 2.8374999999997152e-05, 2.8541999999999457e-05, 2.8694000000002717e-05, 2.786100000000402e-05, 2.8027999999999387e-05, 2.8541999999999457e-05, 2.870799999999535e-05, 2.837500000000409e-05, 2.793100000000187e-05, 2.8041999999998957e-05, 2.8555999999999027e-05, 2.836100000000452e-05, 2.8013000000000343e-05, 2.8722000000001857e-05, 2.8540999999999983e-05, 2.8013999999999817e-05, 2.838900000000366e-05, 2.8264000000000067e-05, 2.819500000000169e-05, 2.837500000000409e-05, 2.7818999999998373e-05, 2.8555999999999027e-05, 2.869399999999578e-05, 2.7860999999997083e-05, 2.8236000000000927e-05, 2.8222000000001357e-05, 2.7861999999996556e-05, 2.8208000000001787e-05, 2.8207999999994848e-05, 2.837500000000409e-05, 2.8554999999999553e-05, 2.8722000000001857e-05, 2.8040999999999483e-05, 2.8040999999999483e-05, 2.8722000000001857e-05, 2.8152999999996042e-05, 2.8527999999999887e-05, 2.8527999999999887e-05, 2.7986000000000677e-05, 2.8360999999997583e-05, 2.787500000000359e-05, 2.868100000000262e-05, 2.8514000000000317e-05]</msg>
<status status="PASS" starttime="20201112 09:55:53.919" endtime="20201112 09:55:53.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.908" endtime="20201112 09:55:53.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.932" endtime="20201112 09:55:53.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:53.940" endtime="20201112 09:55:53.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.936" endtime="20201112 09:55:53.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.927" endtime="20201112 09:55:53.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.425" endtime="20201112 09:55:53.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.424" endtime="20201112 09:55:53.966"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.988" endtime="20201112 09:55:54.004"></status>
</kw>
<msg timestamp="20201112 09:55:54.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:53.985" endtime="20201112 09:55:54.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:54.007" endtime="20201112 09:55:54.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:54.014" endtime="20201112 09:55:54.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.978" endtime="20201112 09:55:54.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.973" endtime="20201112 09:55:54.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:54.037" endtime="20201112 09:55:54.373"></status>
</kw>
<msg timestamp="20201112 09:55:54.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040248722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040277125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:54.034" endtime="20201112 09:55:54.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040248722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040277125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:54.382" endtime="20201112 09:55:54.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:54.401" endtime="20201112 09:55:54.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.026" endtime="20201112 09:55:54.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.022" endtime="20201112 09:55:54.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:54.420" level="INFO">${RESULT} = [{'time': 0.040277125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8402999999996292e-05, 'source_diff': 2.8402999999996292e-05}, {'time': 0.040316347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:54.411" endtime="20201112 09:55:54.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:54.450" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:54.422" endtime="20201112 09:55:54.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.461" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 09:55:54.458" endtime="20201112 09:55:54.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.466" level="INFO">VALUE: [2.8402999999996292e-05, 2.8222000000001357e-05, 2.8041999999998957e-05, 2.8290999999999733e-05, 2.8388999999996722e-05, 2.7902000000003258e-05, 2.8222000000001357e-05, 2.788900000000316e-05, 2.8388999999996722e-05, 2.819399999999528e-05, 2.820900000000126e-05, 2.8721999999994918e-05, 2.870900000000176e-05, 2.8430999999995432e-05, 2.8388999999996722e-05, 2.822300000000083e-05, 2.8402999999996292e-05, 2.8068999999998623e-05, 2.8236000000000927e-05, 2.7888999999996222e-05, 2.790300000000273e-05, 2.788900000000316e-05, 2.8222000000001357e-05, 2.8722999999994392e-05, 2.8291000000006672e-05, 2.8222000000001357e-05, 2.8360999999997583e-05, 2.8236000000000927e-05, 2.838799999999725e-05, 2.7902999999995792e-05, 2.8083999999997666e-05, 2.8068999999998623e-05, 2.8402999999996292e-05, 2.8708000000002287e-05, 2.8040999999999483e-05, 2.8388999999996722e-05, 2.8736000000001427e-05, 2.8360999999997583e-05, 2.8305999999998777e-05, 2.8236000000000927e-05, 2.8236000000000927e-05, 2.8277999999999637e-05, 2.8541999999999457e-05, 2.8026999999999913e-05, 2.8708999999994822e-05, 2.7791999999998707e-05, 2.8222000000001357e-05, 2.820900000000126e-05, 2.7888999999996222e-05, 2.8554999999999553e-05]</msg>
<status status="PASS" starttime="20201112 09:55:54.463" endtime="20201112 09:55:54.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.452" endtime="20201112 09:55:54.469"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:54.475" endtime="20201112 09:55:54.478"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:54.484" endtime="20201112 09:55:54.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.479" endtime="20201112 09:55:54.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.471" endtime="20201112 09:55:54.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.968" endtime="20201112 09:55:54.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.967" endtime="20201112 09:55:54.509"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:54.532" endtime="20201112 09:55:54.547"></status>
</kw>
<msg timestamp="20201112 09:55:54.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:54.528" endtime="20201112 09:55:54.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:54.550" endtime="20201112 09:55:54.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:54.556" endtime="20201112 09:55:54.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.521" endtime="20201112 09:55:54.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.516" endtime="20201112 09:55:54.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:54.580" endtime="20201112 09:55:54.914"></status>
</kw>
<msg timestamp="20201112 09:55:54.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039958875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039987431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:54.576" endtime="20201112 09:55:54.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039958875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039987431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:54.924" endtime="20201112 09:55:54.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:54.942" endtime="20201112 09:55:54.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.569" endtime="20201112 09:55:54.949"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.564" endtime="20201112 09:55:54.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:54.961" level="INFO">${RESULT} = [{'time': 0.039987431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8555999999999027e-05, 'source_diff': 2.8555999999999027e-05}, {'time': 0.040023625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:54.952" endtime="20201112 09:55:54.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:54.991" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:54.963" endtime="20201112 09:55:54.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.002" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 09:55:55.000" endtime="20201112 09:55:55.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.008" level="INFO">VALUE: [2.8555999999999027e-05, 2.8222000000001357e-05, 2.8040999999999483e-05, 2.8388999999996722e-05, 2.8208000000001787e-05, 2.7874999999996652e-05, 2.8207999999994848e-05, 2.7861999999996556e-05, 2.8041999999998957e-05, 2.8320000000005285e-05, 2.8056000000005465e-05, 2.861100000000477e-05, 2.8638999999996972e-05, 2.837500000000409e-05, 2.8583999999998166e-05, 2.8694000000002717e-05, 2.8027999999999387e-05, 2.8221999999994418e-05, 2.8556000000005966e-05, 2.8222000000001357e-05, 2.836100000000452e-05, 2.8041999999998957e-05, 2.8346999999998013e-05, 2.787500000000359e-05, 2.8554999999999553e-05, 2.8027999999999387e-05, 2.8055999999998527e-05, 2.819399999999528e-05, 2.8722000000001857e-05, 2.8570000000005535e-05, 2.8736000000001427e-05, 2.8540999999999983e-05, 2.8318999999998873e-05, 2.867999999999621e-05, 2.8722000000001857e-05, 2.8042000000005896e-05, 2.837500000000409e-05, 2.8041999999998957e-05, 2.8527999999999887e-05, 2.8722000000001857e-05, 2.8694000000002717e-05, 2.8249999999993558e-05, 2.8361999999997056e-05, 2.8360999999997583e-05, 2.820900000000126e-05, 2.8055999999998527e-05, 2.8055000000005992e-05, 2.8040999999999483e-05, 2.8013999999999817e-05, 2.820900000000126e-05]</msg>
<status status="PASS" starttime="20201112 09:55:55.004" endtime="20201112 09:55:55.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.993" endtime="20201112 09:55:55.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.017" endtime="20201112 09:55:55.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:55.025" endtime="20201112 09:55:55.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.021" endtime="20201112 09:55:55.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.012" endtime="20201112 09:55:55.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.512" endtime="20201112 09:55:55.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.510" endtime="20201112 09:55:55.051"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.073" endtime="20201112 09:55:55.089"></status>
</kw>
<msg timestamp="20201112 09:55:55.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:55.070" endtime="20201112 09:55:55.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:55.092" endtime="20201112 09:55:55.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.099" endtime="20201112 09:55:55.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.063" endtime="20201112 09:55:55.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.057" endtime="20201112 09:55:55.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.122" endtime="20201112 09:55:55.455"></status>
</kw>
<msg timestamp="20201112 09:55:55.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040113042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040148194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:55.118" endtime="20201112 09:55:55.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040113042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040148194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:55.464" endtime="20201112 09:55:55.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.483" endtime="20201112 09:55:55.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.111" endtime="20201112 09:55:55.490"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.107" endtime="20201112 09:55:55.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:55.502" level="INFO">${RESULT} = [{'time': 0.040148194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.515199999999663e-05, 'source_diff': 3.515199999999663e-05}, {'time': 0.040188208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:55.493" endtime="20201112 09:55:55.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:55.532" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:55.504" endtime="20201112 09:55:55.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.543" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 09:55:55.540" endtime="20201112 09:55:55.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.548" level="INFO">VALUE: [3.515199999999663e-05, 3.49580000000016e-05, 3.497200000000117e-05, 3.581999999999891e-05, 3.51250000000039e-05, 3.4916999999995424e-05, 3.5610999999997894e-05, 3.5638999999997034e-05, 3.5138999999996534e-05, 3.548600000000124e-05, 3.550000000000081e-05, 3.518100000000218e-05, 3.530599999999884e-05, 3.573600000000149e-05, 3.54859999999943e-05, 3.5652999999996604e-05, 3.5138999999996534e-05, 3.544400000000253e-05, 3.4832999999998004e-05, 3.497200000000117e-05, 3.5804999999999865e-05, 3.5124999999996964e-05, 3.54859999999943e-05, 3.513900000000347e-05, 3.5318999999998935e-05, 3.5276999999993286e-05, 3.497200000000117e-05, 3.497300000000064e-05, 3.548600000000124e-05, 3.559800000000474e-05, 3.548600000000124e-05, 3.548600000000124e-05, 3.4818999999998435e-05, 3.548600000000124e-05, 3.49580000000016e-05, 3.548700000000071e-05, 3.548600000000124e-05, 3.540300000000329e-05, 3.483400000000442e-05, 3.5374999999997214e-05, 3.548600000000124e-05, 3.5152999999996104e-05, 3.576400000000063e-05, 3.5846999999998574e-05, 3.548600000000124e-05, 3.548600000000124e-05, 3.513799999999706e-05, 3.497300000000064e-05, 3.545900000000157e-05, 3.5346999999998074e-05]</msg>
<status status="PASS" starttime="20201112 09:55:55.545" endtime="20201112 09:55:55.549"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.534" endtime="20201112 09:55:55.551"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.557" endtime="20201112 09:55:55.560"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:55.565" endtime="20201112 09:55:55.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.561" endtime="20201112 09:55:55.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.553" endtime="20201112 09:55:55.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.053" endtime="20201112 09:55:55.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.052" endtime="20201112 09:55:55.591"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.614" endtime="20201112 09:55:55.629"></status>
</kw>
<msg timestamp="20201112 09:55:55.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:55.610" endtime="20201112 09:55:55.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:55.633" endtime="20201112 09:55:55.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.639" endtime="20201112 09:55:55.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.603" endtime="20201112 09:55:55.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.598" endtime="20201112 09:55:55.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.662" endtime="20201112 09:55:55.995"></status>
</kw>
<msg timestamp="20201112 09:55:56.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039956528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039991986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:55.659" endtime="20201112 09:55:56.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:56.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039956528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039991986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:56.004" endtime="20201112 09:55:56.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:56.023" endtime="20201112 09:55:56.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.651" endtime="20201112 09:55:56.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.647" endtime="20201112 09:55:56.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:56.043" level="INFO">${RESULT} = [{'time': 0.039991986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.54580000000021e-05, 'source_diff': 3.54580000000021e-05}, {'time': 0.040037236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:55:56.035" endtime="20201112 09:55:56.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:56.073" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:56.045" endtime="20201112 09:55:56.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:56.084" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 09:55:56.082" endtime="20201112 09:55:56.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:56.090" level="INFO">VALUE: [3.54580000000021e-05, 3.549999999999387e-05, 3.494399999999509e-05, 3.51250000000039e-05, 3.579199999999977e-05, 3.5624999999997464e-05, 3.545900000000157e-05, 3.51250000000039e-05, 3.5624999999997464e-05, 3.5624999999997464e-05, 3.576400000000063e-05, 3.513900000000347e-05, 3.545799999999516e-05, 3.500000000000031e-05, 3.544400000000253e-05, 3.5290999999999795e-05, 3.580599999999934e-05, 3.545900000000157e-05, 3.497200000000117e-05, 3.5624999999997464e-05, 3.49580000000016e-05, 3.51250000000039e-05, 3.547300000000114e-05, 3.495799999999466e-05, 3.5624999999997464e-05, 3.51250000000039e-05, 3.494399999999509e-05, 3.5138999999996534e-05, 3.497199999999423e-05, 3.5638999999997034e-05, 3.498600000000074e-05, 3.526400000000013e-05, 3.511100000000433e-05, 3.547300000000114e-05, 3.5040999999999545e-05, 3.49580000000016e-05, 3.54580000000021e-05, 3.579199999999977e-05, 3.508399999999773e-05, 3.5277000000000225e-05, 3.531999999999841e-05, 3.545900000000157e-05, 3.547200000000167e-05, 3.482000000000485e-05, 3.495799999999466e-05, 3.5318999999998935e-05, 3.5638999999997034e-05, 3.497200000000117e-05, 3.526400000000013e-05, 3.527800000000664e-05]</msg>
<status status="PASS" starttime="20201112 09:55:56.087" endtime="20201112 09:55:56.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.075" endtime="20201112 09:55:56.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:56.099" endtime="20201112 09:55:56.102"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:56.107" endtime="20201112 09:55:56.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.103" endtime="20201112 09:55:56.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.095" endtime="20201112 09:55:56.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.593" endtime="20201112 09:55:56.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.592" endtime="20201112 09:55:56.133"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:56.155" endtime="20201112 09:55:56.171"></status>
</kw>
<msg timestamp="20201112 09:55:56.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:56.152" endtime="20201112 09:55:56.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:56.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:56.174" endtime="20201112 09:55:56.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:56.181" endtime="20201112 09:55:56.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.145" endtime="20201112 09:55:56.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.140" endtime="20201112 09:55:56.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:56.204" endtime="20201112 09:55:56.537"></status>
</kw>
<msg timestamp="20201112 09:55:56.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040014556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040050028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:56.200" endtime="20201112 09:55:56.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:56.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040014556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040050028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:56.546" endtime="20201112 09:55:56.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:56.564" endtime="20201112 09:55:56.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.193" endtime="20201112 09:55:56.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.189" endtime="20201112 09:55:56.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:56.583" level="INFO">${RESULT} = [{'time': 0.040050028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.547200000000167e-05, 'source_diff': 3.547200000000167e-05}, {'time': 0.040093125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:56.574" endtime="20201112 09:55:56.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:56.613" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:56.585" endtime="20201112 09:55:56.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:56.624" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 09:55:56.622" endtime="20201112 09:55:56.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:56.630" level="INFO">VALUE: [3.547200000000167e-05, 3.565300000000354e-05, 3.588900000000422e-05, 3.519400000000228e-05, 3.529199999999927e-05, 3.565199999999713e-05, 3.547200000000167e-05, 3.5666999999996174e-05, 3.495900000000107e-05, 3.5290999999999795e-05, 3.5624999999997464e-05, 3.548600000000124e-05, 3.497300000000064e-05, 3.530599999999884e-05, 3.4916999999995424e-05, 3.5138999999996534e-05, 3.513900000000347e-05, 3.534700000000501e-05, 3.497200000000117e-05, 3.480599999999834e-05, 3.500000000000031e-05, 3.52779999999997e-05, 3.547200000000167e-05, 3.580599999999934e-05, 3.515300000000304e-05, 3.530599999999884e-05, 3.5304999999999365e-05, 3.5124999999996964e-05, 3.530599999999884e-05, 3.5472999999994204e-05, 3.497200000000117e-05, 3.547200000000167e-05, 3.532000000000535e-05, 3.501399999999988e-05, 3.565200000000407e-05, 3.549999999999387e-05, 3.5152999999996104e-05, 3.5666999999996174e-05, 3.5652999999996604e-05, 3.51250000000039e-05, 3.5138999999996534e-05, 3.566700000000311e-05, 3.54580000000021e-05, 3.498600000000074e-05, 3.5652999999996604e-05, 3.529199999999927e-05, 3.547200000000167e-05, 3.5110999999997394e-05, 3.54580000000021e-05, 3.569400000000278e-05]</msg>
<status status="PASS" starttime="20201112 09:55:56.626" endtime="20201112 09:55:56.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.615" endtime="20201112 09:55:56.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:56.639" endtime="20201112 09:55:56.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:56.647" endtime="20201112 09:55:56.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.643" endtime="20201112 09:55:56.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.635" endtime="20201112 09:55:56.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.135" endtime="20201112 09:55:56.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.134" endtime="20201112 09:55:56.673"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:56.695" endtime="20201112 09:55:56.711"></status>
</kw>
<msg timestamp="20201112 09:55:56.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:56.692" endtime="20201112 09:55:56.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:56.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:56.714" endtime="20201112 09:55:56.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:56.721" endtime="20201112 09:55:56.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.685" endtime="20201112 09:55:56.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.679" endtime="20201112 09:55:56.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:56.744" endtime="20201112 09:55:57.078"></status>
</kw>
<msg timestamp="20201112 09:55:57.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039918972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039954139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:56.740" endtime="20201112 09:55:57.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039918972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039954139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:57.087" endtime="20201112 09:55:57.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.105" endtime="20201112 09:55:57.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.733" endtime="20201112 09:55:57.112"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.729" endtime="20201112 09:55:57.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:57.124" level="INFO">${RESULT} = [{'time': 0.039954139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.516700000000261e-05, 'source_diff': 3.516700000000261e-05}, {'time': 0.039997111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:57.115" endtime="20201112 09:55:57.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:57.154" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:57.126" endtime="20201112 09:55:57.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.165" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 09:55:57.163" endtime="20201112 09:55:57.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.171" level="INFO">VALUE: [3.516700000000261e-05, 3.565300000000354e-05, 3.5304999999999365e-05, 3.498600000000074e-05, 3.5304999999999365e-05, 3.494400000000203e-05, 3.497200000000117e-05, 3.5638999999997034e-05, 3.513900000000347e-05, 3.5444999999995064e-05, 3.54580000000021e-05, 3.5138999999996534e-05, 3.563900000000397e-05, 3.497200000000117e-05, 3.547300000000114e-05, 3.5138999999996534e-05, 3.531999999999841e-05, 3.547200000000167e-05, 3.548700000000071e-05, 3.547200000000167e-05, 3.498600000000074e-05, 3.5138999999996534e-05, 3.513900000000347e-05, 3.5304999999999365e-05, 3.511100000000433e-05, 3.515200000000357e-05, 3.505599999999859e-05, 3.515200000000357e-05, 3.5332999999998504e-05, 3.497300000000064e-05, 3.5304999999999365e-05, 3.56250000000044e-05, 3.5818999999999435e-05, 3.543000000000296e-05, 3.4888999999996284e-05, 3.5638999999997034e-05, 3.5846999999998574e-05, 3.550000000000081e-05, 3.497200000000117e-05, 3.5318999999998935e-05, 3.530599999999884e-05, 3.5304999999999365e-05, 3.500000000000031e-05, 3.500000000000031e-05, 3.533399999999798e-05, 3.498600000000074e-05, 3.530599999999884e-05, 3.522199999999448e-05, 3.580599999999934e-05, 3.480599999999834e-05]</msg>
<status status="PASS" starttime="20201112 09:55:57.168" endtime="20201112 09:55:57.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.156" endtime="20201112 09:55:57.174"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.180" endtime="20201112 09:55:57.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:57.188" endtime="20201112 09:55:57.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.184" endtime="20201112 09:55:57.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.175" endtime="20201112 09:55:57.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.675" endtime="20201112 09:55:57.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.674" endtime="20201112 09:55:57.214"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.237" endtime="20201112 09:55:57.252"></status>
</kw>
<msg timestamp="20201112 09:55:57.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:57.233" endtime="20201112 09:55:57.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:57.256" endtime="20201112 09:55:57.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.262" endtime="20201112 09:55:57.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.226" endtime="20201112 09:55:57.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.221" endtime="20201112 09:55:57.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.285" endtime="20201112 09:55:57.619"></status>
</kw>
<msg timestamp="20201112 09:55:57.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040155972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040191264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:57.282" endtime="20201112 09:55:57.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040155972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040191264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:57.629" endtime="20201112 09:55:57.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.647" endtime="20201112 09:55:57.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.274" endtime="20201112 09:55:57.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.270" endtime="20201112 09:55:57.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:57.666" level="INFO">${RESULT} = [{'time': 0.040191264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.529199999999927e-05, 'source_diff': 3.529199999999927e-05}, {'time': 0.040237389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:57.657" endtime="20201112 09:55:57.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:57.696" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:57.668" endtime="20201112 09:55:57.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.707" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 09:55:57.705" endtime="20201112 09:55:57.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.712" level="INFO">VALUE: [3.529199999999927e-05, 3.5652999999996604e-05, 3.531999999999841e-05, 3.5138000000004e-05, 3.5652999999996604e-05, 3.580600000000628e-05, 3.475000000000006e-05, 3.526400000000013e-05, 3.4818999999998435e-05, 3.497200000000117e-05, 3.49859999999938e-05, 3.5819000000006374e-05, 3.490300000000279e-05, 3.563900000000397e-05, 3.563799999999756e-05, 3.5458999999994634e-05, 3.579199999999977e-05, 3.569400000000278e-05, 3.548600000000124e-05, 3.530599999999884e-05, 3.548600000000124e-05, 3.5138999999996534e-05, 3.56659999999967e-05, 3.5304999999999365e-05, 3.47779999999992e-05, 3.5152999999996104e-05, 3.57780000000002e-05, 3.516700000000261e-05, 3.513900000000347e-05, 3.547199999999473e-05, 3.54580000000021e-05, 3.511100000000433e-05, 3.54580000000021e-05, 3.494400000000203e-05, 3.566700000000311e-05, 3.4958999999994134e-05, 3.522200000000142e-05, 3.565300000000354e-05, 3.565300000000354e-05, 3.56250000000044e-05, 3.548600000000124e-05, 3.481999999999791e-05, 3.4819000000005373e-05, 3.548600000000124e-05, 3.565300000000354e-05, 3.479199999999877e-05, 3.495900000000107e-05, 3.5332999999998504e-05, 3.4805000000005804e-05, 3.500000000000031e-05]</msg>
<status status="PASS" starttime="20201112 09:55:57.709" endtime="20201112 09:55:57.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.698" endtime="20201112 09:55:57.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.722" endtime="20201112 09:55:57.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:57.730" endtime="20201112 09:55:57.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.726" endtime="20201112 09:55:57.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.717" endtime="20201112 09:55:57.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.216" endtime="20201112 09:55:57.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.215" endtime="20201112 09:55:57.756"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.778" endtime="20201112 09:55:57.794"></status>
</kw>
<msg timestamp="20201112 09:55:57.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:57.775" endtime="20201112 09:55:57.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:57.798" endtime="20201112 09:55:57.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.804" endtime="20201112 09:55:57.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.768" endtime="20201112 09:55:57.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.762" endtime="20201112 09:55:57.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.827" endtime="20201112 09:55:58.159"></status>
</kw>
<msg timestamp="20201112 09:55:58.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040201236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040236208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:57.824" endtime="20201112 09:55:58.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040201236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040236208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:58.168" endtime="20201112 09:55:58.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.187" endtime="20201112 09:55:58.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.816" endtime="20201112 09:55:58.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.812" endtime="20201112 09:55:58.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:58.207" level="INFO">${RESULT} = [{'time': 0.040236208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.497200000000117e-05, 'source_diff': 3.497200000000117e-05}, {'time': 0.040276431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:58.198" endtime="20201112 09:55:58.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:58.237" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:58.209" endtime="20201112 09:55:58.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.248" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 09:55:58.246" endtime="20201112 09:55:58.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.253" level="INFO">VALUE: [3.497200000000117e-05, 3.548700000000071e-05, 3.5666999999996174e-05, 3.548600000000124e-05, 3.5624999999997464e-05, 3.5152999999996104e-05, 3.513900000000347e-05, 3.56250000000044e-05, 3.547200000000167e-05, 3.511100000000433e-05, 3.5138999999996534e-05, 3.480599999999834e-05, 3.5804999999999865e-05, 3.498600000000074e-05, 3.501399999999988e-05, 3.579199999999977e-05, 3.515300000000304e-05, 3.565300000000354e-05, 3.495900000000107e-05, 3.545799999999516e-05, 3.563900000000397e-05, 3.513900000000347e-05, 3.550000000000081e-05, 3.495900000000107e-05, 3.54580000000021e-05, 3.4790999999999295e-05, 3.497200000000117e-05, 3.545900000000157e-05, 3.563799999999756e-05, 3.547200000000167e-05, 3.5832999999999005e-05, 3.547199999999473e-05, 3.5832999999999005e-05, 3.563900000000397e-05, 3.5638999999997034e-05, 3.54859999999943e-05, 3.529199999999927e-05, 3.5832999999999005e-05, 3.5818999999999435e-05, 3.483300000000494e-05, 3.49450000000015e-05, 3.565199999999713e-05, 3.49580000000016e-05, 3.493000000000246e-05, 3.548600000000124e-05, 3.511100000000433e-05, 3.52779999999997e-05, 3.565300000000354e-05, 3.547200000000167e-05, 3.548600000000124e-05]</msg>
<status status="PASS" starttime="20201112 09:55:58.250" endtime="20201112 09:55:58.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.239" endtime="20201112 09:55:58.257"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.263" endtime="20201112 09:55:58.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:58.271" endtime="20201112 09:55:58.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.267" endtime="20201112 09:55:58.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.258" endtime="20201112 09:55:58.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.758" endtime="20201112 09:55:58.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.757" endtime="20201112 09:55:58.297"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.319" endtime="20201112 09:55:58.335"></status>
</kw>
<msg timestamp="20201112 09:55:58.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:58.316" endtime="20201112 09:55:58.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:58.338" endtime="20201112 09:55:58.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.344" endtime="20201112 09:55:58.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.309" endtime="20201112 09:55:58.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.303" endtime="20201112 09:55:58.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.368" endtime="20201112 09:55:58.702"></status>
</kw>
<msg timestamp="20201112 09:55:58.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039826806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039861944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:58.364" endtime="20201112 09:55:58.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039826806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039861944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:58.712" endtime="20201112 09:55:58.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.730" endtime="20201112 09:55:58.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.357" endtime="20201112 09:55:58.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.352" endtime="20201112 09:55:58.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:58.749" level="INFO">${RESULT} = [{'time': 0.039861944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5138000000004e-05, 'source_diff': 3.5138000000004e-05}, {'time': 0.039905972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3...</msg>
<status status="PASS" starttime="20201112 09:55:58.741" endtime="20201112 09:55:58.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:58.780" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:58.751" endtime="20201112 09:55:58.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.790" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 09:55:58.788" endtime="20201112 09:55:58.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.796" level="INFO">VALUE: [3.5138000000004e-05, 3.4804999999998865e-05, 3.565300000000354e-05, 3.5624999999997464e-05, 3.5610999999997894e-05, 3.530599999999884e-05, 3.529199999999927e-05, 3.5804999999999865e-05, 3.479199999999877e-05, 3.4874999999996714e-05, 3.525000000000056e-05, 3.51250000000039e-05, 3.545900000000157e-05, 3.5638999999997034e-05, 3.530599999999884e-05, 3.497199999999423e-05, 3.497200000000117e-05, 3.519500000000175e-05, 3.529199999999927e-05, 3.497200000000117e-05, 3.481999999999791e-05, 3.52779999999997e-05, 3.513900000000347e-05, 3.5318999999998935e-05, 3.567999999999627e-05, 3.495900000000107e-05, 3.5138999999996534e-05, 3.54580000000021e-05, 3.4972999999993704e-05, 3.4776999999999725e-05, 3.491700000000236e-05, 3.497200000000117e-05, 3.513900000000347e-05, 3.5624999999997464e-05, 3.565199999999713e-05, 3.5152999999996104e-05, 3.548700000000071e-05, 3.547200000000167e-05, 3.498600000000074e-05, 3.497199999999423e-05, 3.550000000000081e-05, 3.513900000000347e-05, 3.529199999999927e-05, 3.572199999999498e-05, 3.530599999999884e-05, 3.5318999999998935e-05, 3.5332999999998504e-05, 3.497300000000064e-05, 3.476399999999963e-05, 3.508300000000519e-05]</msg>
<status status="PASS" starttime="20201112 09:55:58.793" endtime="20201112 09:55:58.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.781" endtime="20201112 09:55:58.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.805" endtime="20201112 09:55:58.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:58.813" endtime="20201112 09:55:58.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.809" endtime="20201112 09:55:58.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.801" endtime="20201112 09:55:58.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.299" endtime="20201112 09:55:58.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.298" endtime="20201112 09:55:58.839"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.861" endtime="20201112 09:55:58.879"></status>
</kw>
<msg timestamp="20201112 09:55:58.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:58.858" endtime="20201112 09:55:58.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:58.882" endtime="20201112 09:55:58.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.889" endtime="20201112 09:55:58.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.851" endtime="20201112 09:55:58.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.845" endtime="20201112 09:55:58.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.911" endtime="20201112 09:55:59.258"></status>
</kw>
<msg timestamp="20201112 09:55:59.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039956597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039999333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:58.908" endtime="20201112 09:55:59.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039956597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039999333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:59.267" endtime="20201112 09:55:59.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:59.285" endtime="20201112 09:55:59.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.901" endtime="20201112 09:55:59.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.896" endtime="20201112 09:55:59.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:59.304" level="INFO">${RESULT} = [{'time': 0.039999333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.273599999999461e-05, 'source_diff': 4.273599999999461e-05}, {'time': 0.040048347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:59.295" endtime="20201112 09:55:59.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:59.335" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:59.306" endtime="20201112 09:55:59.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.345" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 09:55:59.343" endtime="20201112 09:55:59.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.351" level="INFO">VALUE: [4.273599999999461e-05, 4.2610999999997956e-05, 4.272200000000198e-05, 4.2054999999999176e-05, 4.2096999999997886e-05, 4.2610999999997956e-05, 4.275000000000112e-05, 4.274999999999418e-05, 4.2582999999998816e-05, 4.258400000000523e-05, 4.1930999999995056e-05, 4.273600000000155e-05, 4.2568999999999246e-05, 4.219400000000234e-05, 4.1875000000003715e-05, 4.2138999999996596e-05, 4.273600000000155e-05, 4.208399999999779e-05, 4.2388999999996846e-05, 4.2068999999998746e-05, 4.223600000000105e-05, 4.20980000000043e-05, 4.224999999999368e-05, 4.1903000000002855e-05, 4.2125000000003965e-05, 4.2417000000002925e-05, 4.223600000000105e-05, 4.2403000000003355e-05, 4.275000000000112e-05, 4.1903000000002855e-05, 4.220799999999497e-05, 4.184799999999711e-05, 4.205600000000559e-05, 4.2054999999999176e-05, 4.226400000000019e-05, 4.225000000000062e-05, 4.226300000000072e-05, 4.223600000000105e-05, 4.276300000000122e-05, 4.272200000000198e-05, 4.2416999999995986e-05, 4.2388999999996846e-05, 4.276300000000122e-05, 4.2431000000002494e-05, 4.2582999999998816e-05, 4.191599999999601e-05, 4.2431000000002494e-05, 4.1931000000001994e-05, 4.2082999999998316e-05, 4.2431000000002494e-05]</msg>
<status status="PASS" starttime="20201112 09:55:59.348" endtime="20201112 09:55:59.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.336" endtime="20201112 09:55:59.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:59.360" endtime="20201112 09:55:59.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:59.369" endtime="20201112 09:55:59.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.364" endtime="20201112 09:55:59.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.356" endtime="20201112 09:55:59.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.841" endtime="20201112 09:55:59.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.840" endtime="20201112 09:55:59.395"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:59.419" endtime="20201112 09:55:59.437"></status>
</kw>
<msg timestamp="20201112 09:55:59.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:59.415" endtime="20201112 09:55:59.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:59.440" endtime="20201112 09:55:59.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:59.446" endtime="20201112 09:55:59.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.408" endtime="20201112 09:55:59.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.402" endtime="20201112 09:55:59.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:59.469" endtime="20201112 09:55:59.818"></status>
</kw>
<msg timestamp="20201112 09:55:59.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042180958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042223694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:59.466" endtime="20201112 09:55:59.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042180958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042223694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:59.827" endtime="20201112 09:55:59.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:59.845" endtime="20201112 09:55:59.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.459" endtime="20201112 09:55:59.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.454" endtime="20201112 09:55:59.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:59.864" level="INFO">${RESULT} = [{'time': 0.042223694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.273600000000155e-05, 'source_diff': 4.273600000000155e-05}, {'time': 0.042270931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:59.855" endtime="20201112 09:55:59.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:59.894" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:55:59.866" endtime="20201112 09:55:59.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.905" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 09:55:59.903" endtime="20201112 09:55:59.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.911" level="INFO">VALUE: [4.273600000000155e-05, 4.1973000000000704e-05, 4.259799999999786e-05, 4.2445000000002064e-05, 4.191600000000295e-05, 4.250000000000087e-05, 4.1944999999994625e-05, 4.2402999999996416e-05, 4.229199999999933e-05, 4.1875000000003715e-05, 4.2445000000002064e-05, 4.1931000000001994e-05, 4.226400000000019e-05, 4.241600000000345e-05, 4.2388999999996846e-05, 4.226400000000019e-05, 4.2153000000003105e-05, 4.2361000000004645e-05, 4.243000000000302e-05, 4.2582999999998816e-05, 4.225000000000062e-05, 4.275000000000112e-05, 4.2582999999998816e-05, 4.2596999999998386e-05, 4.223600000000105e-05, 4.227799999999976e-05, 4.226400000000019e-05, 4.208400000000473e-05, 4.225000000000062e-05, 4.1917000000002425e-05, 4.1917000000002425e-05, 4.1902999999995916e-05, 4.226400000000019e-05, 4.259799999999786e-05, 4.1903000000002855e-05, 4.1875000000003715e-05, 4.2346999999998136e-05, 4.241599999999651e-05, 4.226400000000019e-05, 4.208399999999779e-05, 4.259799999999786e-05, 4.2374999999997276e-05, 4.222200000000148e-05, 4.270800000000241e-05, 4.226400000000019e-05, 4.275000000000112e-05, 4.2597000000005325e-05, 4.192999999999558e-05, 4.256999999999872e-05, 4.191600000000295e-05]</msg>
<status status="PASS" starttime="20201112 09:55:59.907" endtime="20201112 09:55:59.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.896" endtime="20201112 09:55:59.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:59.920" endtime="20201112 09:55:59.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:59.928" endtime="20201112 09:55:59.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.924" endtime="20201112 09:55:59.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.915" endtime="20201112 09:55:59.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.397" endtime="20201112 09:55:59.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.396" endtime="20201112 09:55:59.954"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:59.976" endtime="20201112 09:55:59.993"></status>
</kw>
<msg timestamp="20201112 09:55:59.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:59.973" endtime="20201112 09:55:59.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:59.996" endtime="20201112 09:56:00.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.002" endtime="20201112 09:56:00.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.966" endtime="20201112 09:56:00.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.960" endtime="20201112 09:56:00.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.025" endtime="20201112 09:56:00.360"></status>
</kw>
<msg timestamp="20201112 09:56:00.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040221667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040263625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:00.022" endtime="20201112 09:56:00.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040221667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040263625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:00.369" endtime="20201112 09:56:00.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.388" endtime="20201112 09:56:00.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.015" endtime="20201112 09:56:00.397"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.010" endtime="20201112 09:56:00.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:00.408" level="INFO">${RESULT} = [{'time': 0.040263625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.195799999999472e-05, 'source_diff': 4.195799999999472e-05}, {'time': 0.040310708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:56:00.400" endtime="20201112 09:56:00.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:00.439" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:00.410" endtime="20201112 09:56:00.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.450" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 09:56:00.448" endtime="20201112 09:56:00.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.456" level="INFO">VALUE: [4.195799999999472e-05, 4.190200000000338e-05, 4.1874999999996776e-05, 4.1874999999996776e-05, 4.191600000000295e-05, 4.1945000000001564e-05, 4.1917000000002425e-05, 4.225000000000062e-05, 4.2040999999999606e-05, 4.2402999999996416e-05, 4.225000000000062e-05, 4.2223000000000954e-05, 4.1889000000003285e-05, 4.2375000000004215e-05, 4.241599999999651e-05, 4.1916999999995486e-05, 4.2596999999998386e-05, 4.2097000000004825e-05, 4.274999999999418e-05, 4.225000000000062e-05, 4.2068999999998746e-05, 4.275000000000112e-05, 4.2388999999996846e-05, 4.2723000000001454e-05, 4.273600000000155e-05, 4.2388999999996846e-05, 4.273600000000155e-05, 4.2459000000001634e-05, 4.2082999999998316e-05, 4.243000000000302e-05, 4.226400000000019e-05, 4.227799999999976e-05, 4.2096999999997886e-05, 4.2388999999996846e-05, 4.191599999999601e-05, 4.2068999999998746e-05, 4.240199999999694e-05, 4.272200000000198e-05, 4.225000000000062e-05, 4.225000000000062e-05, 4.2403000000003355e-05, 4.274999999999418e-05, 4.2417000000002925e-05, 4.2416999999995986e-05, 4.225000000000062e-05, 4.2596999999998386e-05, 4.257000000000566e-05, 4.2610999999997956e-05, 4.2068999999998746e-05, 4.238799999999737e-05]</msg>
<status status="PASS" starttime="20201112 09:56:00.453" endtime="20201112 09:56:00.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.441" endtime="20201112 09:56:00.459"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.465" endtime="20201112 09:56:00.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:00.474" endtime="20201112 09:56:00.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.469" endtime="20201112 09:56:00.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.461" endtime="20201112 09:56:00.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.956" endtime="20201112 09:56:00.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.955" endtime="20201112 09:56:00.500"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.522" endtime="20201112 09:56:00.538"></status>
</kw>
<msg timestamp="20201112 09:56:00.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:00.519" endtime="20201112 09:56:00.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:00.541" endtime="20201112 09:56:00.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.547" endtime="20201112 09:56:00.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.511" endtime="20201112 09:56:00.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.506" endtime="20201112 09:56:00.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.570" endtime="20201112 09:56:00.903"></status>
</kw>
<msg timestamp="20201112 09:56:00.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039879875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039922625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:00.567" endtime="20201112 09:56:00.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039879875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039922625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:00.912" endtime="20201112 09:56:00.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.931" endtime="20201112 09:56:00.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.560" endtime="20201112 09:56:00.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.555" endtime="20201112 09:56:00.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:00.950" level="INFO">${RESULT} = [{'time': 0.039922625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.275000000000112e-05, 'source_diff': 4.275000000000112e-05}, {'time': 0.039975694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:56:00.941" endtime="20201112 09:56:00.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:00.980" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:00.952" endtime="20201112 09:56:00.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.991" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 09:56:00.989" endtime="20201112 09:56:00.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.996" level="INFO">VALUE: [4.275000000000112e-05, 4.2082999999998316e-05, 4.2568999999999246e-05, 4.241600000000345e-05, 4.2361000000004645e-05, 4.274999999999418e-05, 4.222200000000148e-05, 4.273600000000155e-05, 4.2417000000002925e-05, 4.2554999999999676e-05, 4.275000000000112e-05, 4.1860999999997206e-05, 4.223600000000105e-05, 4.1903000000002855e-05, 4.2388999999996846e-05, 4.223600000000105e-05, 4.1875000000003715e-05, 4.2069000000005685e-05, 4.2554999999999676e-05, 4.205599999999865e-05, 4.2403000000003355e-05, 4.223600000000105e-05, 4.202799999999951e-05, 4.225000000000062e-05, 4.2209000000001384e-05, 4.2737000000001024e-05, 4.2209000000001384e-05, 4.256999999999872e-05, 4.225000000000062e-05, 4.2403000000003355e-05, 4.241599999999651e-05, 4.270800000000241e-05, 4.222200000000148e-05, 4.190200000000338e-05, 4.1888999999996346e-05, 4.223600000000105e-05, 4.222200000000148e-05, 4.190200000000338e-05, 4.1889000000003285e-05, 4.276400000000069e-05, 4.2068999999998746e-05, 4.2568999999999246e-05, 4.273600000000155e-05, 4.2040999999999606e-05, 4.195799999999472e-05, 4.2069000000005685e-05, 4.1889000000003285e-05, 4.1902999999995916e-05, 4.2403000000003355e-05, 4.2639000000004035e-05]</msg>
<status status="PASS" starttime="20201112 09:56:00.993" endtime="20201112 09:56:00.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.982" endtime="20201112 09:56:00.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:01.006" endtime="20201112 09:56:01.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:01.016" endtime="20201112 09:56:01.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.011" endtime="20201112 09:56:01.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.001" endtime="20201112 09:56:01.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.502" endtime="20201112 09:56:01.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.500" endtime="20201112 09:56:01.044"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:01.073" endtime="20201112 09:56:01.091"></status>
</kw>
<msg timestamp="20201112 09:56:01.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:01.068" endtime="20201112 09:56:01.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:01.095" endtime="20201112 09:56:01.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:01.102" endtime="20201112 09:56:01.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.059" endtime="20201112 09:56:01.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.052" endtime="20201112 09:56:01.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:01.130" endtime="20201112 09:56:01.466"></status>
</kw>
<msg timestamp="20201112 09:56:01.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049353847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049396583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:01.125" endtime="20201112 09:56:01.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049353847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049396583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:01.475" endtime="20201112 09:56:01.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:01.494" endtime="20201112 09:56:01.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.117" endtime="20201112 09:56:01.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.112" endtime="20201112 09:56:01.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:01.513" level="INFO">${RESULT} = [{'time': 0.049396583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.273600000000155e-05, 'source_diff': 4.273600000000155e-05}, {'time': 0.049449764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:56:01.504" endtime="20201112 09:56:01.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:01.543" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:01.515" endtime="20201112 09:56:01.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.554" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 09:56:01.552" endtime="20201112 09:56:01.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.559" level="INFO">VALUE: [4.273600000000155e-05, 4.256999999999872e-05, 4.2459000000001634e-05, 4.279199999999983e-05, 4.1889000000003285e-05, 4.2582999999998816e-05, 4.2568999999999246e-05, 4.2445000000002064e-05, 4.244399999999565e-05, 4.275000000000112e-05, 4.1930999999995056e-05, 4.28059999999994e-05, 4.2431000000002494e-05, 4.225000000000062e-05, 4.273600000000155e-05, 4.256999999999872e-05, 4.277800000000026e-05, 4.2068999999998746e-05, 4.258400000000523e-05, 4.197200000000123e-05, 4.2082999999998316e-05, 4.225000000000062e-05, 4.276400000000069e-05, 4.275000000000112e-05, 4.1931000000001994e-05, 4.240200000000388e-05, 4.275000000000112e-05, 4.259799999999786e-05, 4.2431000000002494e-05, 4.238800000000431e-05, 4.1903000000002855e-05, 4.2124999999997026e-05, 4.2582999999998816e-05, 4.2554999999999676e-05, 4.2417000000002925e-05, 4.225000000000062e-05, 4.209799999999736e-05, 4.223600000000105e-05, 4.2403000000003355e-05, 4.243000000000302e-05, 4.2596999999998386e-05, 4.25980000000048e-05, 4.270799999999547e-05, 4.2083000000005255e-05, 4.2166999999995736e-05, 4.190199999999644e-05, 4.1917000000002425e-05, 4.240199999999694e-05, 4.202799999999951e-05, 4.2596999999998386e-05]</msg>
<status status="PASS" starttime="20201112 09:56:01.556" endtime="20201112 09:56:01.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.545" endtime="20201112 09:56:01.562"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:01.569" endtime="20201112 09:56:01.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:01.577" endtime="20201112 09:56:01.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.573" endtime="20201112 09:56:01.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.564" endtime="20201112 09:56:01.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.047" endtime="20201112 09:56:01.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.046" endtime="20201112 09:56:01.603"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:01.625" endtime="20201112 09:56:01.641"></status>
</kw>
<msg timestamp="20201112 09:56:01.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:01.622" endtime="20201112 09:56:01.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:01.644" endtime="20201112 09:56:01.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:01.651" endtime="20201112 09:56:01.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.615" endtime="20201112 09:56:01.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.609" endtime="20201112 09:56:01.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:01.674" endtime="20201112 09:56:02.007"></status>
</kw>
<msg timestamp="20201112 09:56:02.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040003056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040045139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:01.670" endtime="20201112 09:56:02.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040003056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040045139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:02.016" endtime="20201112 09:56:02.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:02.035" endtime="20201112 09:56:02.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.663" endtime="20201112 09:56:02.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.659" endtime="20201112 09:56:02.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:02.054" level="INFO">${RESULT} = [{'time': 0.040045139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2082999999998316e-05, 'source_diff': 4.2082999999998316e-05}, {'time': 0.040096292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:02.045" endtime="20201112 09:56:02.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:02.084" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:02.056" endtime="20201112 09:56:02.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.095" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 09:56:02.092" endtime="20201112 09:56:02.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.100" level="INFO">VALUE: [4.2082999999998316e-05, 4.225000000000062e-05, 4.208399999999779e-05, 4.223600000000105e-05, 4.2681000000002745e-05, 4.275000000000112e-05, 4.1903000000002855e-05, 4.1888999999996346e-05, 4.2568999999999246e-05, 4.225000000000062e-05, 4.204199999999908e-05, 4.1903000000002855e-05, 4.1889000000003285e-05, 4.276400000000069e-05, 4.2611000000004895e-05, 4.2096999999997886e-05, 4.219400000000234e-05, 4.1861000000004145e-05, 4.2222999999994015e-05, 4.2582999999998816e-05, 4.2596999999998386e-05, 4.2554999999999676e-05, 4.2083000000005255e-05, 4.240200000000388e-05, 4.2417000000002925e-05, 4.2097000000004825e-05, 4.225000000000062e-05, 4.1902999999995916e-05, 4.275000000000112e-05, 4.273599999999461e-05, 4.206999999999822e-05, 4.1888999999996346e-05, 4.2431000000002494e-05, 4.2582999999998816e-05, 4.2083000000005255e-05, 4.227799999999976e-05, 4.1944999999994625e-05, 4.226400000000019e-05, 4.2791000000000357e-05, 4.256999999999872e-05, 4.2068999999998746e-05, 4.1902999999995916e-05, 4.277800000000026e-05, 4.273600000000155e-05, 4.2402999999996416e-05, 4.225000000000062e-05, 4.2083000000005255e-05, 4.273600000000155e-05, 4.1916999999995486e-05, 4.2402999999996416e-05]</msg>
<status status="PASS" starttime="20201112 09:56:02.097" endtime="20201112 09:56:02.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.086" endtime="20201112 09:56:02.103"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:02.109" endtime="20201112 09:56:02.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:02.118" endtime="20201112 09:56:02.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.113" endtime="20201112 09:56:02.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.105" endtime="20201112 09:56:02.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.605" endtime="20201112 09:56:02.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.604" endtime="20201112 09:56:02.144"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:02.166" endtime="20201112 09:56:02.182"></status>
</kw>
<msg timestamp="20201112 09:56:02.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:02.163" endtime="20201112 09:56:02.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:02.185" endtime="20201112 09:56:02.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:02.192" endtime="20201112 09:56:02.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.155" endtime="20201112 09:56:02.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.150" endtime="20201112 09:56:02.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:02.214" endtime="20201112 09:56:02.548"></status>
</kw>
<msg timestamp="20201112 09:56:02.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040059236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0401015, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:56:02.211" endtime="20201112 09:56:02.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040059236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0401015, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:56:02.557" endtime="20201112 09:56:02.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:02.576" endtime="20201112 09:56:02.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.204" endtime="20201112 09:56:02.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.200" endtime="20201112 09:56:02.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:02.597" level="INFO">${RESULT} = [{'time': 0.0401015, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.226400000000019e-05, 'source_diff': 4.226400000000019e-05}, {'time': 0.040151597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:56:02.588" endtime="20201112 09:56:02.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:02.627" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:02.599" endtime="20201112 09:56:02.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.638" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 09:56:02.635" endtime="20201112 09:56:02.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.643" level="INFO">VALUE: [4.226400000000019e-05, 4.1902999999995916e-05, 4.1917000000002425e-05, 4.1945000000001564e-05, 4.1875000000003715e-05, 4.1889000000003285e-05, 4.2082999999998316e-05, 4.2417000000002925e-05, 4.224999999999368e-05, 4.266599999999676e-05, 4.225000000000062e-05, 4.2402999999996416e-05, 4.223600000000105e-05, 4.2139000000003535e-05, 4.1917000000002425e-05, 4.2403000000003355e-05, 4.1945000000001564e-05, 4.2596999999998386e-05, 4.255599999999915e-05, 4.2568999999999246e-05, 4.276300000000122e-05, 4.273600000000155e-05, 4.256999999999872e-05, 4.1945000000001564e-05, 4.255599999999915e-05, 4.223600000000105e-05, 4.226400000000019e-05, 4.2111000000004395e-05, 4.225000000000062e-05, 4.241600000000345e-05, 4.1888999999996346e-05, 4.1903000000002855e-05, 4.1917000000002425e-05, 4.2431000000002494e-05, 4.242999999999608e-05, 4.2360999999997706e-05, 4.2694999999995376e-05, 4.2568999999999246e-05, 4.2403000000003355e-05, 4.226400000000019e-05, 4.251400000000044e-05, 4.225000000000062e-05, 4.273600000000155e-05, 4.2695000000002314e-05, 4.2416999999995986e-05, 4.201399999999994e-05, 4.1860999999997206e-05, 4.2096999999997886e-05, 4.223600000000105e-05, 4.209799999999736e-05]</msg>
<status status="PASS" starttime="20201112 09:56:02.640" endtime="20201112 09:56:02.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.629" endtime="20201112 09:56:02.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:02.652" endtime="20201112 09:56:02.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:02.661" endtime="20201112 09:56:02.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.656" endtime="20201112 09:56:02.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.648" endtime="20201112 09:56:02.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.146" endtime="20201112 09:56:02.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.144" endtime="20201112 09:56:02.687"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:02.709" endtime="20201112 09:56:02.727"></status>
</kw>
<msg timestamp="20201112 09:56:02.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:02.706" endtime="20201112 09:56:02.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:02.731" endtime="20201112 09:56:02.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:02.737" endtime="20201112 09:56:02.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.699" endtime="20201112 09:56:02.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.693" endtime="20201112 09:56:02.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:02.760" endtime="20201112 09:56:03.106"></status>
</kw>
<msg timestamp="20201112 09:56:03.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040130431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040179792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:02.756" endtime="20201112 09:56:03.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040130431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040179792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:03.115" endtime="20201112 09:56:03.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.134" endtime="20201112 09:56:03.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.749" endtime="20201112 09:56:03.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.745" endtime="20201112 09:56:03.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:03.152" level="INFO">${RESULT} = [{'time': 0.040179792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.936099999999777e-05, 'source_diff': 4.936099999999777e-05}, {'time': 0.040235028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:56:03.144" endtime="20201112 09:56:03.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:03.182" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:03.154" endtime="20201112 09:56:03.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.193" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 09:56:03.191" endtime="20201112 09:56:03.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.199" level="INFO">VALUE: [4.936099999999777e-05, 4.963899999999716e-05, 4.936100000000471e-05, 4.95140000000005e-05, 4.879199999999889e-05, 4.904099999999967e-05, 4.897199999999435e-05, 4.931899999999906e-05, 4.900000000000043e-05, 4.9389000000003846e-05, 4.936100000000471e-05, 4.95270000000006e-05, 4.93469999999982e-05, 4.9195000000001876e-05, 4.96940000000029e-05, 4.900000000000043e-05, 4.9209000000001446e-05, 4.937499999999734e-05, 4.943099999999562e-05, 4.9667000000003236e-05, 4.9651999999997254e-05, 4.9181000000002306e-05, 4.91940000000024e-05, 4.933299999999863e-05, 4.95270000000006e-05, 4.954100000000017e-05, 4.95270000000006e-05, 4.95270000000006e-05, 4.9014e-05, 4.9389000000003846e-05, 4.954200000000658e-05, 4.93469999999982e-05, 4.908299999999838e-05, 4.918000000000283e-05, 4.954100000000017e-05, 4.9723000000001516e-05, 4.898600000000086e-05, 4.918000000000283e-05, 4.93339999999981e-05, 4.947299999999433e-05, 4.973599999999467e-05, 4.90270000000001e-05, 4.9014e-05, 4.900000000000043e-05, 4.954199999999964e-05, 4.9693999999995964e-05, 4.9181000000002306e-05, 4.9181000000002306e-05, 4.970800000000247e-05, 4.900000000000043e-05]</msg>
<status status="PASS" starttime="20201112 09:56:03.195" endtime="20201112 09:56:03.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.184" endtime="20201112 09:56:03.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.208" endtime="20201112 09:56:03.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:03.216" endtime="20201112 09:56:03.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.212" endtime="20201112 09:56:03.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.203" endtime="20201112 09:56:03.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.689" endtime="20201112 09:56:03.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.687" endtime="20201112 09:56:03.242"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.264" endtime="20201112 09:56:03.285"></status>
</kw>
<msg timestamp="20201112 09:56:03.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:03.261" endtime="20201112 09:56:03.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:03.288" endtime="20201112 09:56:03.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.294" endtime="20201112 09:56:03.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.254" endtime="20201112 09:56:03.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.248" endtime="20201112 09:56:03.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.317" endtime="20201112 09:56:03.664"></status>
</kw>
<msg timestamp="20201112 09:56:03.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0401505, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040238667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:56:03.314" endtime="20201112 09:56:03.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0401505, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040238667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:56:03.673" endtime="20201112 09:56:03.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.692" endtime="20201112 09:56:03.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.307" endtime="20201112 09:56:03.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.302" endtime="20201112 09:56:03.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:03.711" level="INFO">${RESULT} = [{'time': 0.040238667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.81670000000001e-05, 'source_diff': 8.81670000000001e-05}, {'time': 0.040336014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:56:03.702" endtime="20201112 09:56:03.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:03.741" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:03.713" endtime="20201112 09:56:03.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.751" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 09:56:03.749" endtime="20201112 09:56:03.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.757" level="INFO">VALUE: [8.81670000000001e-05, 8.823600000000542e-05, 8.887500000000215e-05, 8.804199999999651e-05, 8.898599999999923e-05, 8.81250000000014e-05, 8.84999999999983e-05, 8.869499999999975e-05, 8.809800000000173e-05, 8.83050000000038e-05, 8.898599999999923e-05, 8.813800000000149e-05, 8.847300000000557e-05, 8.86800000000007e-05, 8.90129999999989e-05, 8.802800000000388e-05, 8.831900000000337e-05, 8.838800000000174e-05, 8.841600000000088e-05, 8.879100000000473e-05, 8.823599999999848e-05, 8.847199999999916e-05, 8.836099999999514e-05, 8.841699999999342e-05, 8.852799999999744e-05, 8.86120000000018e-05, 8.84999999999983e-05, 8.859700000000276e-05, 8.83050000000038e-05, 8.883300000000344e-05, 8.854100000000448e-05, 8.834700000000251e-05, 8.897199999999966e-05, 8.877799999999769e-05, 8.866600000000113e-05, 8.843100000000687e-05, 8.854099999999754e-05, 8.843000000000045e-05, 8.880599999999683e-05, 8.876399999999812e-05, 8.906900000000412e-05, 8.823600000000542e-05, 8.837499999999471e-05, 8.856900000000362e-05, 8.91670000000011e-05, 8.854199999999701e-05, 8.819399999999977e-05, 8.819499999999925e-05, 8.872199999999941e-05, 8.872199999999941e-05]</msg>
<status status="PASS" starttime="20201112 09:56:03.754" endtime="20201112 09:56:03.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.742" endtime="20201112 09:56:03.760"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.766" endtime="20201112 09:56:03.769"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:03.774" endtime="20201112 09:56:03.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.770" endtime="20201112 09:56:03.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.762" endtime="20201112 09:56:03.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.244" endtime="20201112 09:56:03.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.243" endtime="20201112 09:56:03.800"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.823" endtime="20201112 09:56:03.841"></status>
</kw>
<msg timestamp="20201112 09:56:03.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:03.819" endtime="20201112 09:56:03.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:03.844" endtime="20201112 09:56:03.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.850" endtime="20201112 09:56:03.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.812" endtime="20201112 09:56:03.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.806" endtime="20201112 09:56:03.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.873" endtime="20201112 09:56:04.208"></status>
</kw>
<msg timestamp="20201112 09:56:04.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040067722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040157625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:03.870" endtime="20201112 09:56:04.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:04.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040067722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040157625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:04.218" endtime="20201112 09:56:04.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:04.236" endtime="20201112 09:56:04.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.863" endtime="20201112 09:56:04.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.859" endtime="20201112 09:56:04.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:04.255" level="INFO">${RESULT} = [{'time': 0.040157625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.990300000000229e-05, 'source_diff': 8.990300000000229e-05}, {'time': 0.040255917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:56:04.246" endtime="20201112 09:56:04.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:04.285" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:04.257" endtime="20201112 09:56:04.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:04.296" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 09:56:04.294" endtime="20201112 09:56:04.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:04.302" level="INFO">VALUE: [8.990300000000229e-05, 8.947299999999964e-05, 8.932000000000384e-05, 8.94450000000005e-05, 9.002699999999947e-05, 8.92079999999934e-05, 8.947200000000016e-05, 8.962499999999596e-05, 8.972200000000041e-05, 8.937500000000265e-05, 8.990300000000229e-05, 8.912499999999546e-05, 8.976299999999965e-05, 8.937500000000265e-05, 8.937499999999571e-05, 8.813900000000097e-05, 8.998600000000023e-05, 8.926399999999862e-05, 8.830499999999686e-05, 8.956900000000462e-05, 8.955499999999811e-05, 9.001399999999937e-05, 8.958399999999672e-05, 8.93199999999969e-05, 8.919500000000025e-05, 8.951300000000634e-05, 8.948599999999973e-05, 8.94450000000005e-05, 8.923699999999896e-05, 8.81800000000002e-05, 8.924999999999905e-05, 8.957000000000409e-05, 8.961099999999639e-05, 8.920899999999982e-05, 8.865300000000104e-05, 8.951399999999887e-05, 8.938900000000222e-05, 8.97079999999939e-05, 8.984700000000401e-05, 9.008399999999722e-05, 9.004199999999851e-05, 8.977699999999922e-05, 8.976399999999912e-05, 8.9332999999997e-05, 8.922199999999991e-05, 8.979099999999879e-05, 8.980599999999783e-05, 8.979099999999879e-05, 8.988900000000272e-05, 8.834700000000251e-05]</msg>
<status status="PASS" starttime="20201112 09:56:04.299" endtime="20201112 09:56:04.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.287" endtime="20201112 09:56:04.305"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:04.311" endtime="20201112 09:56:04.314"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:04.319" endtime="20201112 09:56:04.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.315" endtime="20201112 09:56:04.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.306" endtime="20201112 09:56:04.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.802" endtime="20201112 09:56:04.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.801" endtime="20201112 09:56:04.345"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:04.367" endtime="20201112 09:56:04.386"></status>
</kw>
<msg timestamp="20201112 09:56:04.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:04.364" endtime="20201112 09:56:04.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:04.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:04.389" endtime="20201112 09:56:04.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:04.395" endtime="20201112 09:56:04.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.357" endtime="20201112 09:56:04.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.351" endtime="20201112 09:56:04.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:04.418" endtime="20201112 09:56:04.752"></status>
</kw>
<msg timestamp="20201112 09:56:04.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040000708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040090514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:04.415" endtime="20201112 09:56:04.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:04.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040000708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040090514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:04.761" endtime="20201112 09:56:04.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:04.780" endtime="20201112 09:56:04.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.408" endtime="20201112 09:56:04.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.403" endtime="20201112 09:56:04.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:04.800" level="INFO">${RESULT} = [{'time': 0.040090514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.980599999999783e-05, 'source_diff': 8.980599999999783e-05}, {'time': 0.040187778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:56:04.792" endtime="20201112 09:56:04.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:04.830" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:04.802" endtime="20201112 09:56:04.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:04.841" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 09:56:04.839" endtime="20201112 09:56:04.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:04.847" level="INFO">VALUE: [8.980599999999783e-05, 9.065300000000304e-05, 8.913800000000249e-05, 9.072200000000141e-05, 8.958299999999725e-05, 8.931900000000437e-05, 8.97920000000052e-05, 9.040299999999585e-05, 8.991700000000186e-05, 8.926400000000556e-05, 8.993100000000143e-05, 8.937499999999571e-05, 8.956999999999715e-05, 9.030599999999833e-05, 9.002799999999894e-05, 8.97920000000052e-05, 8.936099999999614e-05, 9.084699999999807e-05, 8.923599999999948e-05, 9.08329999999985e-05, 8.934699999999657e-05, 8.922199999999991e-05, 9.012499999999646e-05, 9.079099999999979e-05, 8.924999999999905e-05, 9.040300000000279e-05, 8.983399999999697e-05, 9.102799999999994e-05, 8.991599999999544e-05, 9.104199999999951e-05, 8.948599999999973e-05, 8.947200000000016e-05, 9.011099999999689e-05, 8.963899999999553e-05, 9.043000000000245e-05, 8.973599999999998e-05, 8.965300000000204e-05, 8.952700000000591e-05, 9.08199999999984e-05, 8.970800000000084e-05, 9.066600000000313e-05, 8.972299999999989e-05, 9.093000000000295e-05, 9.054199999999901e-05, 8.98329999999975e-05, 8.987499999999621e-05, 9.002799999999894e-05, 8.969500000000075e-05, 9.005499999999861e-05, 9.04450000000015e-05]</msg>
<status status="PASS" starttime="20201112 09:56:04.844" endtime="20201112 09:56:04.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.832" endtime="20201112 09:56:04.850"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:04.856" endtime="20201112 09:56:04.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:04.864" endtime="20201112 09:56:04.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.860" endtime="20201112 09:56:04.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.852" endtime="20201112 09:56:04.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.347" endtime="20201112 09:56:04.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.346" endtime="20201112 09:56:04.890"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:04.912" endtime="20201112 09:56:04.930"></status>
</kw>
<msg timestamp="20201112 09:56:04.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:04.909" endtime="20201112 09:56:04.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:04.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:04.934" endtime="20201112 09:56:04.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:04.940" endtime="20201112 09:56:04.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.902" endtime="20201112 09:56:04.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.896" endtime="20201112 09:56:04.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:04.963" endtime="20201112 09:56:05.298"></status>
</kw>
<msg timestamp="20201112 09:56:05.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039765528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039856278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:04.960" endtime="20201112 09:56:05.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039765528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039856278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:05.307" endtime="20201112 09:56:05.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:05.325" endtime="20201112 09:56:05.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.953" endtime="20201112 09:56:05.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.948" endtime="20201112 09:56:05.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:05.344" level="INFO">${RESULT} = [{'time': 0.039856278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.075000000000055e-05, 'source_diff': 9.075000000000055e-05}, {'time': 0.039951458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:56:05.335" endtime="20201112 09:56:05.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:05.374" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:05.346" endtime="20201112 09:56:05.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.385" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 09:56:05.383" endtime="20201112 09:56:05.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.391" level="INFO">VALUE: [9.075000000000055e-05, 9.065200000000356e-05, 9.062499999999696e-05, 9.012499999999646e-05, 9.027699999999972e-05, 9.030600000000527e-05, 9.045900000000107e-05, 9.019400000000177e-05, 9.055499999999911e-05, 9.054100000000648e-05, 9.092999999999601e-05, 9.069400000000227e-05, 9.054099999999954e-05, 9.051399999999987e-05, 9.025000000000005e-05, 9.026399999999962e-05, 9.063799999999705e-05, 9.070899999999438e-05, 9.066600000000313e-05, 9.069399999999533e-05, 9.102799999999994e-05, 9.0332999999998e-05, 9.01529999999956e-05, 9.086099999999764e-05, 9.106999999999865e-05, 9.080599999999883e-05, 9.048600000000073e-05, 9.037499999999671e-05, 9.044400000000202e-05, 9.052799999999944e-05, 9.087499999999721e-05, 9.077700000000022e-05, 9.038800000000374e-05, 9.06250000000039e-05, 9.036099999999714e-05, 9.033399999999747e-05, 9.034699999999757e-05, 9.084799999999754e-05, 9.01670000000021e-05, 9.047300000000064e-05, 9.013900000000297e-05, 9.026399999999962e-05, 9.051399999999987e-05, 9.08329999999985e-05, 9.037499999999671e-05, 9.027699999999972e-05, 9.045800000000159e-05, 9.148600000000173e-05, 9.0332999999998e-05, 9.070899999999438e-05]</msg>
<status status="PASS" starttime="20201112 09:56:05.388" endtime="20201112 09:56:05.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.376" endtime="20201112 09:56:05.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:05.400" endtime="20201112 09:56:05.403"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:05.408" endtime="20201112 09:56:05.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.404" endtime="20201112 09:56:05.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.395" endtime="20201112 09:56:05.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.892" endtime="20201112 09:56:05.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.891" endtime="20201112 09:56:05.434"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:05.456" endtime="20201112 09:56:05.475"></status>
</kw>
<msg timestamp="20201112 09:56:05.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:05.453" endtime="20201112 09:56:05.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:05.478" endtime="20201112 09:56:05.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:05.485" endtime="20201112 09:56:05.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.446" endtime="20201112 09:56:05.490"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.440" endtime="20201112 09:56:05.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:05.508" endtime="20201112 09:56:05.842"></status>
</kw>
<msg timestamp="20201112 09:56:05.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040235542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040327181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:05.504" endtime="20201112 09:56:05.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040235542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040327181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:05.851" endtime="20201112 09:56:05.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:05.870" endtime="20201112 09:56:05.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.497" endtime="20201112 09:56:05.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.493" endtime="20201112 09:56:05.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:05.889" level="INFO">${RESULT} = [{'time': 0.040327181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.163899999999753e-05, 'source_diff': 9.163899999999753e-05}, {'time': 0.040425458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:56:05.880" endtime="20201112 09:56:05.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:05.919" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:05.891" endtime="20201112 09:56:05.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.930" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 09:56:05.927" endtime="20201112 09:56:05.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.935" level="INFO">VALUE: [9.163899999999753e-05, 9.230500000000086e-05, 9.184699999999907e-05, 9.192999999999701e-05, 9.262499999999896e-05, 9.290299999999835e-05, 9.148600000000173e-05, 9.258399999999972e-05, 9.28879999999993e-05, 9.115200000000406e-05, 9.286100000000658e-05, 9.165300000000404e-05, 9.136099999999814e-05, 9.184699999999907e-05, 9.172300000000189e-05, 9.16670000000036e-05, 9.183399999999897e-05, 9.14859999999948e-05, 9.263900000000547e-05, 9.262499999999896e-05, 9.295799999999715e-05, 9.15130000000014e-05, 9.180599999999983e-05, 9.188899999999778e-05, 9.130499999999986e-05, 9.212499999999846e-05, 9.237499999999871e-05, 9.191700000000386e-05, 9.17079999999959e-05, 9.127800000000019e-05, 9.294399999999758e-05, 9.208299999999975e-05, 9.255600000000058e-05, 9.122200000000191e-05, 9.276400000000212e-05, 9.161099999999839e-05, 9.2333e-05, 9.206999999999965e-05, 9.137500000000465e-05, 9.195800000000309e-05, 9.18199999999994e-05, 9.234699999999957e-05, 9.117999999999626e-05, 9.247199999999622e-05, 9.193099999999649e-05, 9.252800000000144e-05, 9.179200000000026e-05, 9.24859999999958e-05, 9.115200000000406e-05, 9.188899999999778e-05]</msg>
<status status="PASS" starttime="20201112 09:56:05.932" endtime="20201112 09:56:05.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.920" endtime="20201112 09:56:05.938"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:05.944" endtime="20201112 09:56:05.947"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:05.952" endtime="20201112 09:56:05.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.948" endtime="20201112 09:56:05.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.940" endtime="20201112 09:56:05.977"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.436" endtime="20201112 09:56:05.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.435" endtime="20201112 09:56:05.978"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.001" endtime="20201112 09:56:06.019"></status>
</kw>
<msg timestamp="20201112 09:56:06.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:05.997" endtime="20201112 09:56:06.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:06.023" endtime="20201112 09:56:06.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.029" endtime="20201112 09:56:06.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.990" endtime="20201112 09:56:06.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.984" endtime="20201112 09:56:06.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.052" endtime="20201112 09:56:06.388"></status>
</kw>
<msg timestamp="20201112 09:56:06.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040312167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040405972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:06.049" endtime="20201112 09:56:06.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040312167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040405972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:06.398" endtime="20201112 09:56:06.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.416" endtime="20201112 09:56:06.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.042" endtime="20201112 09:56:06.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.037" endtime="20201112 09:56:06.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:06.435" level="INFO">${RESULT} = [{'time': 0.040405972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.380499999999542e-05, 'source_diff': 9.380499999999542e-05}, {'time': 0.040504222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:56:06.426" endtime="20201112 09:56:06.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:06.465" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:06.437" endtime="20201112 09:56:06.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.476" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 09:56:06.473" endtime="20201112 09:56:06.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.481" level="INFO">VALUE: [9.380499999999542e-05, 9.277800000000169e-05, 9.370800000000484e-05, 9.367999999999876e-05, 9.359699999999388e-05, 9.291700000000486e-05, 9.322200000000391e-05, 9.415200000000012e-05, 9.354199999999507e-05, 9.397200000000466e-05, 9.259799999999929e-05, 9.377800000000269e-05, 9.280500000000136e-05, 9.411100000000089e-05, 9.399999999999686e-05, 9.211099999999889e-05, 9.362499999999996e-05, 9.327800000000219e-05, 9.284700000000007e-05, 9.406899999999524e-05, 9.28879999999993e-05, 9.368099999999824e-05, 9.275000000000255e-05, 9.412500000000046e-05, 9.262499999999896e-05, 9.261099999999939e-05, 9.223600000000248e-05, 9.323599999999654e-05, 9.384800000000054e-05, 9.276399999999518e-05, 9.359700000000082e-05, 9.368100000000518e-05, 9.21529999999976e-05, 9.387500000000021e-05, 9.354100000000254e-05, 9.287500000000615e-05, 9.387500000000021e-05, 9.337499999999971e-05, 9.309699999999338e-05, 9.345799999999765e-05, 9.219500000000325e-05, 9.329200000000176e-05, 9.242999999999751e-05, 9.325000000000305e-05, 9.363899999999953e-05, 9.409700000000132e-05, 9.305600000000108e-05, 9.390299999999935e-05, 9.35279999999955e-05, 9.372199999999747e-05]</msg>
<status status="PASS" starttime="20201112 09:56:06.478" endtime="20201112 09:56:06.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.466" endtime="20201112 09:56:06.484"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.491" endtime="20201112 09:56:06.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:06.499" endtime="20201112 09:56:06.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.495" endtime="20201112 09:56:06.523"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.486" endtime="20201112 09:56:06.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.980" endtime="20201112 09:56:06.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.979" endtime="20201112 09:56:06.525"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.548" endtime="20201112 09:56:06.566"></status>
</kw>
<msg timestamp="20201112 09:56:06.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:06.544" endtime="20201112 09:56:06.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:06.570" endtime="20201112 09:56:06.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.576" endtime="20201112 09:56:06.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.537" endtime="20201112 09:56:06.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.531" endtime="20201112 09:56:06.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.599" endtime="20201112 09:56:06.934"></status>
</kw>
<msg timestamp="20201112 09:56:06.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040353125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040447653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:06.596" endtime="20201112 09:56:06.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040353125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040447653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:06.944" endtime="20201112 09:56:06.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.962" endtime="20201112 09:56:06.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.589" endtime="20201112 09:56:06.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.584" endtime="20201112 09:56:06.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:06.982" level="INFO">${RESULT} = [{'time': 0.040447653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.452800000000344e-05, 'source_diff': 9.452800000000344e-05}, {'time': 0.040552875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:56:06.974" endtime="20201112 09:56:06.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:07.012" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:06.984" endtime="20201112 09:56:07.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:07.023" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 09:56:07.021" endtime="20201112 09:56:07.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:07.029" level="INFO">VALUE: [9.452800000000344e-05, 9.484700000000207e-05, 9.451400000000387e-05, 9.456899999999574e-05, 9.420899999999788e-05, 9.467999999999976e-05, 9.426399999999668e-05, 9.44859999999978e-05, 9.501399999999743e-05, 9.490300000000035e-05, 9.433299999999506e-05, 9.433400000000147e-05, 9.455599999999564e-05, 9.440299999999985e-05, 9.441599999999994e-05, 9.51530000000006e-05, 9.473599999999804e-05, 9.462500000000096e-05, 9.463900000000053e-05, 9.411100000000089e-05, 9.347300000000364e-05, 9.418099999999874e-05, 9.505500000000361e-05, 9.320800000000434e-05, 9.434800000000104e-05, 9.463900000000053e-05, 9.441699999999942e-05, 9.407000000000165e-05, 9.473599999999804e-05, 9.437500000000071e-05, 9.45409999999966e-05, 9.463900000000053e-05, 9.430600000000233e-05, 9.459700000000182e-05, 9.508399999999528e-05, 9.427800000000319e-05, 9.323599999999654e-05, 9.45000000000043e-05, 9.501400000000437e-05, 9.493099999999949e-05, 9.365300000000604e-05, 9.487500000000121e-05, 9.46660000000002e-05, 9.426400000000362e-05, 9.430600000000233e-05, 9.515200000000112e-05, 9.493000000000001e-05, 9.447200000000516e-05, 9.416699999999917e-05, 9.409800000000079e-05]</msg>
<status status="PASS" starttime="20201112 09:56:07.026" endtime="20201112 09:56:07.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.014" endtime="20201112 09:56:07.032"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:07.038" endtime="20201112 09:56:07.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:07.046" endtime="20201112 09:56:07.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.042" endtime="20201112 09:56:07.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.033" endtime="20201112 09:56:07.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.527" endtime="20201112 09:56:07.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.526" endtime="20201112 09:56:07.072"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:07.095" endtime="20201112 09:56:07.113"></status>
</kw>
<msg timestamp="20201112 09:56:07.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:07.091" endtime="20201112 09:56:07.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:07.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:07.117" endtime="20201112 09:56:07.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:07.123" endtime="20201112 09:56:07.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.084" endtime="20201112 09:56:07.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.078" endtime="20201112 09:56:07.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:07.146" endtime="20201112 09:56:07.480"></status>
</kw>
<msg timestamp="20201112 09:56:07.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040141056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040236236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:07.143" endtime="20201112 09:56:07.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:07.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040141056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040236236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:07.489" endtime="20201112 09:56:07.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:07.508" endtime="20201112 09:56:07.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.135" endtime="20201112 09:56:07.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.131" endtime="20201112 09:56:07.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:07.527" level="INFO">${RESULT} = [{'time': 0.040236236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.518000000000026e-05, 'source_diff': 9.518000000000026e-05}, {'time': 0.040337528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:56:07.518" endtime="20201112 09:56:07.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:07.557" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:07.529" endtime="20201112 09:56:07.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:07.567" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 09:56:07.565" endtime="20201112 09:56:07.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:07.573" level="INFO">VALUE: [9.518000000000026e-05, 9.509699999999538e-05, 9.530499999999692e-05, 9.540300000000085e-05, 9.519499999999931e-05, 9.559700000000282e-05, 9.530499999999692e-05, 9.562499999999502e-05, 9.57079999999999e-05, 9.618100000000074e-05, 9.605599999999714e-05, 9.529200000000376e-05, 9.606900000000418e-05, 9.527700000000472e-05, 9.55000000000053e-05, 9.533299999999606e-05, 9.606999999999671e-05, 9.51660000000007e-05, 9.526399999999768e-05, 9.511100000000189e-05, 9.573599999999904e-05, 9.54859999999988e-05, 9.598699999999877e-05, 9.5415999999994e-05, 9.599999999999886e-05, 9.574999999999861e-05, 9.519500000000625e-05, 9.597199999999972e-05, 9.505599999999614e-05, 9.547199999999922e-05, 9.611099999999595e-05, 9.587500000000221e-05, 9.558299999999631e-05, 9.604100000000504e-05, 9.572299999999895e-05, 9.568000000000076e-05, 9.56530000000011e-05, 9.575000000000555e-05, 9.54729999999987e-05, 9.554199999999707e-05, 9.543000000000051e-05, 9.593000000000101e-05, 9.537500000000171e-05, 9.534699999999563e-05, 9.56660000000012e-05, 9.584700000000307e-05, 9.53200000000029e-05, 9.583299999999656e-05, 9.6027999999998e-05, 9.530600000000333e-05]</msg>
<status status="PASS" starttime="20201112 09:56:07.570" endtime="20201112 09:56:07.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.558" endtime="20201112 09:56:07.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:07.582" endtime="20201112 09:56:07.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:07.590" endtime="20201112 09:56:07.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.586" endtime="20201112 09:56:07.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.578" endtime="20201112 09:56:07.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.074" endtime="20201112 09:56:07.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.073" endtime="20201112 09:56:07.616"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:07.639" endtime="20201112 09:56:07.657"></status>
</kw>
<msg timestamp="20201112 09:56:07.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:07.635" endtime="20201112 09:56:07.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:07.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:07.661" endtime="20201112 09:56:07.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:07.667" endtime="20201112 09:56:07.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.628" endtime="20201112 09:56:07.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.623" endtime="20201112 09:56:07.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:07.692" endtime="20201112 09:56:08.024"></status>
</kw>
<msg timestamp="20201112 09:56:08.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039933083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040029292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:07.688" endtime="20201112 09:56:08.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039933083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040029292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:08.034" endtime="20201112 09:56:08.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.053" endtime="20201112 09:56:08.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.681" endtime="20201112 09:56:08.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.676" endtime="20201112 09:56:08.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:08.072" level="INFO">${RESULT} = [{'time': 0.040029292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.620899999999988e-05, 'source_diff': 9.620899999999988e-05}, {'time': 0.040130569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:56:08.063" endtime="20201112 09:56:08.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:08.102" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:08.074" endtime="20201112 09:56:08.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.114" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 09:56:08.112" endtime="20201112 09:56:08.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.120" level="INFO">VALUE: [9.620899999999988e-05, 9.674999999999961e-05, 9.644400000000108e-05, 9.695800000000115e-05, 9.691700000000192e-05, 9.633399999999653e-05, 9.642999999999458e-05, 9.661099999999645e-05, 9.680499999999842e-05, 9.634699999999663e-05, 9.655599999999764e-05, 9.701399999999943e-05, 9.702800000000594e-05, 9.701399999999943e-05, 9.627699999999878e-05, 9.631999999999696e-05, 9.701399999999943e-05, 9.672200000000047e-05, 9.665299999999516e-05, 9.68330000000045e-05, 9.662499999999602e-05, 9.633299999999706e-05, 9.626399999999868e-05, 9.636200000000261e-05, 9.680499999999842e-05, 9.716700000000217e-05, 9.663900000000253e-05, 9.63059999999974e-05, 9.612500000000246e-05, 9.645800000000065e-05, 9.655599999999764e-05, 9.687500000000321e-05, 9.649999999999936e-05, 9.673600000000004e-05, 9.648600000000673e-05, 9.718100000000174e-05, 9.613900000000203e-05, 9.644400000000108e-05, 9.65000000000063e-05, 9.66530000000021e-05, 9.688899999999584e-05, 9.613900000000203e-05, 9.673600000000004e-05, 9.616700000000117e-05, 9.622199999999997e-05, 9.631999999999696e-05, 9.691700000000192e-05, 9.670900000000038e-05, 9.659799999999635e-05, 9.665199999999569e-05]</msg>
<status status="PASS" starttime="20201112 09:56:08.116" endtime="20201112 09:56:08.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.105" endtime="20201112 09:56:08.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.129" endtime="20201112 09:56:08.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:08.138" endtime="20201112 09:56:08.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.133" endtime="20201112 09:56:08.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.125" endtime="20201112 09:56:08.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.618" endtime="20201112 09:56:08.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.617" endtime="20201112 09:56:08.163"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.186" endtime="20201112 09:56:08.205"></status>
</kw>
<msg timestamp="20201112 09:56:08.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:08.183" endtime="20201112 09:56:08.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:08.208" endtime="20201112 09:56:08.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.214" endtime="20201112 09:56:08.218"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.175" endtime="20201112 09:56:08.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.170" endtime="20201112 09:56:08.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.237" endtime="20201112 09:56:08.575"></status>
</kw>
<msg timestamp="20201112 09:56:08.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040200819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040298139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:08.234" endtime="20201112 09:56:08.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040200819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040298139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:08.584" endtime="20201112 09:56:08.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.603" endtime="20201112 09:56:08.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.227" endtime="20201112 09:56:08.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.222" endtime="20201112 09:56:08.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:08.622" level="INFO">${RESULT} = [{'time': 0.040298139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.731999999999796e-05, 'source_diff': 9.731999999999796e-05}, {'time': 0.040405417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:56:08.613" endtime="20201112 09:56:08.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:08.652" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:08.624" endtime="20201112 09:56:08.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.663" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 09:56:08.660" endtime="20201112 09:56:08.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.668" level="INFO">VALUE: [9.731999999999796e-05, 9.711099999999695e-05, 9.715199999999619e-05, 9.712499999999652e-05, 9.768100000000224e-05, 9.766599999999626e-05, 9.71530000000026e-05, 9.769499999999487e-05, 9.8028e-05, 9.758399999999778e-05, 9.73609999999972e-05, 9.706899999999824e-05, 9.783399999999803e-05, 9.745900000000113e-05, 9.808299999999881e-05, 9.815299999999666e-05, 9.758299999999831e-05, 9.712499999999652e-05, 9.781899999999899e-05, 9.74860000000008e-05, 9.77080000000019e-05, 9.74860000000008e-05, 9.734800000000404e-05, 9.7027999999999e-05, 9.730600000000533e-05, 9.791700000000292e-05, 9.800000000000086e-05, 9.722200000000097e-05, 9.773600000000104e-05, 9.783400000000497e-05, 9.787499999999727e-05, 9.762500000000396e-05, 9.790300000000335e-05, 9.758299999999831e-05, 9.792999999999608e-05, 9.712500000000346e-05, 9.813899999999709e-05, 9.747200000000122e-05, 9.759799999999735e-05, 9.806899999999924e-05, 9.805600000000608e-05, 9.768000000000276e-05, 9.805599999999914e-05, 9.750000000000036e-05, 9.738899999999634e-05, 9.727799999999925e-05, 9.716700000000217e-05, 9.80410000000001e-05, 9.793000000000301e-05, 9.776400000000018e-05]</msg>
<status status="PASS" starttime="20201112 09:56:08.665" endtime="20201112 09:56:08.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.654" endtime="20201112 09:56:08.671"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.677" endtime="20201112 09:56:08.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:08.686" endtime="20201112 09:56:08.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.681" endtime="20201112 09:56:08.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.673" endtime="20201112 09:56:08.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.166" endtime="20201112 09:56:08.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.164" endtime="20201112 09:56:08.712"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.735" endtime="20201112 09:56:08.754"></status>
</kw>
<msg timestamp="20201112 09:56:08.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:08.732" endtime="20201112 09:56:08.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:08.757" endtime="20201112 09:56:08.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.764" endtime="20201112 09:56:08.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.724" endtime="20201112 09:56:08.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.719" endtime="20201112 09:56:08.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.787" endtime="20201112 09:56:09.120"></status>
</kw>
<msg timestamp="20201112 09:56:09.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040984167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04108275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:56:08.783" endtime="20201112 09:56:09.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:09.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040984167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04108275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:56:09.130" endtime="20201112 09:56:09.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:09.148" endtime="20201112 09:56:09.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.776" endtime="20201112 09:56:09.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.772" endtime="20201112 09:56:09.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:09.169" level="INFO">${RESULT} = [{'time': 0.04108275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.858299999999931e-05, 'source_diff': 9.858299999999931e-05}, {'time': 0.041192014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:56:09.160" endtime="20201112 09:56:09.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:09.199" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:09.171" endtime="20201112 09:56:09.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:09.210" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 09:56:09.208" endtime="20201112 09:56:09.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:09.216" level="INFO">VALUE: [9.858299999999931e-05, 9.877800000000075e-05, 9.894399999999665e-05, 9.833399999999853e-05, 9.850000000000136e-05, 9.838899999999734e-05, 9.840299999999691e-05, 9.898599999999536e-05, 9.912500000000546e-05, 9.850000000000136e-05, 9.820899999999494e-05, 9.822200000000197e-05, 9.87080000000029e-05, 9.82080000000024e-05, 9.856899999999974e-05, 9.822200000000197e-05, 9.806899999999924e-05, 9.850000000000136e-05, 9.904199999999364e-05, 9.888899999999784e-05, 9.827800000000025e-05, 9.890300000000435e-05, 9.858399999999878e-05, 9.847199999999529e-05, 9.854200000000007e-05, 9.813900000000403e-05, 9.897200000000272e-05, 9.869499999999587e-05, 9.856899999999974e-05, 9.848599999999486e-05, 9.887499999999827e-05, 9.834699999999863e-05, 9.858299999999931e-05, 9.898700000000177e-05, 9.8415999999997e-05, 9.88609999999987e-05, 9.811099999999795e-05, 9.820899999999494e-05, 9.845900000000213e-05, 9.845799999999572e-05, 9.862499999999802e-05, 9.841600000000394e-05, 9.904099999999416e-05, 9.858299999999931e-05, 9.815199999999719e-05, 9.888799999999837e-05, 9.84860000000018e-05, 9.862500000000496e-05, 9.875000000000161e-05, 9.837499999999777e-05]</msg>
<status status="PASS" starttime="20201112 09:56:09.213" endtime="20201112 09:56:09.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.201" endtime="20201112 09:56:09.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:09.225" endtime="20201112 09:56:09.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:09.233" endtime="20201112 09:56:09.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.229" endtime="20201112 09:56:09.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.221" endtime="20201112 09:56:09.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.714" endtime="20201112 09:56:09.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.713" endtime="20201112 09:56:09.259"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:09.281" endtime="20201112 09:56:09.300"></status>
</kw>
<msg timestamp="20201112 09:56:09.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:09.278" endtime="20201112 09:56:09.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:09.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:09.304" endtime="20201112 09:56:09.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:09.310" endtime="20201112 09:56:09.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.271" endtime="20201112 09:56:09.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.265" endtime="20201112 09:56:09.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:09.333" endtime="20201112 09:56:09.666"></status>
</kw>
<msg timestamp="20201112 09:56:09.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040078333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040178069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:09.330" endtime="20201112 09:56:09.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:09.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040078333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040178069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:09.676" endtime="20201112 09:56:09.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:09.694" endtime="20201112 09:56:09.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.323" endtime="20201112 09:56:09.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.318" endtime="20201112 09:56:09.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:09.713" level="INFO">${RESULT} = [{'time': 0.040178069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.97359999999961e-05, 'source_diff': 9.97359999999961e-05}, {'time': 0.040288347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:56:09.704" endtime="20201112 09:56:09.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:09.744" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:09.715" endtime="20201112 09:56:09.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:09.755" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 09:56:09.753" endtime="20201112 09:56:09.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:09.760" level="INFO">VALUE: [9.97359999999961e-05, 9.988899999999884e-05, 9.97359999999961e-05, 9.976399999999525e-05, 9.922300000000245e-05, 9.919400000000383e-05, 9.848700000000127e-05, 9.916699999999723e-05, 9.866599999999726e-05, 9.930500000000092e-05, 9.926400000000168e-05, 9.941600000000494e-05, 0.00010004200000000157, 9.912499999999852e-05, 9.840300000000385e-05, 9.981899999999405e-05, 9.861100000000539e-05, 9.950000000000236e-05, 9.997199999999679e-05, 9.929100000000135e-05, 0.00010009700000000038, 9.962499999999902e-05, 9.958399999999978e-05, 9.972200000000347e-05, 0.00010000000000000286, 0.00010011099999999995, 9.945800000000365e-05, 9.990300000000535e-05, 9.952699999999509e-05, 9.976399999999525e-05, 9.933300000000006e-05, 9.994499999999712e-05, 9.915299999999766e-05, 9.963799999999912e-05, 9.883299999999956e-05, 9.95280000000015e-05, 9.959699999999988e-05, 0.0001001530000000056, 9.966699999999773e-05, 9.947299999999576e-05, 9.909699999999938e-05, 9.929200000000082e-05, 9.888900000000478e-05, 9.962500000000596e-05, 9.918000000000426e-05, 9.959699999999988e-05, 9.99860000000033e-05, 9.995900000000363e-05, 9.9513999999995e-05, 9.913899999999809e-05]</msg>
<status status="PASS" starttime="20201112 09:56:09.757" endtime="20201112 09:56:09.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.746" endtime="20201112 09:56:09.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:09.770" endtime="20201112 09:56:09.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:09.778" endtime="20201112 09:56:09.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.773" endtime="20201112 09:56:09.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.765" endtime="20201112 09:56:09.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.261" endtime="20201112 09:56:09.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.260" endtime="20201112 09:56:09.804"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:09.826" endtime="20201112 09:56:09.845"></status>
</kw>
<msg timestamp="20201112 09:56:09.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:09.823" endtime="20201112 09:56:09.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:09.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:09.848" endtime="20201112 09:56:09.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:09.855" endtime="20201112 09:56:09.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.816" endtime="20201112 09:56:09.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.810" endtime="20201112 09:56:09.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:09.878" endtime="20201112 09:56:10.211"></status>
</kw>
<msg timestamp="20201112 09:56:10.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040090972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040190931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:09.874" endtime="20201112 09:56:10.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040090972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040190931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:10.220" endtime="20201112 09:56:10.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:10.238" endtime="20201112 09:56:10.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.867" endtime="20201112 09:56:10.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.863" endtime="20201112 09:56:10.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:10.257" level="INFO">${RESULT} = [{'time': 0.040190931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.995899999999669e-05, 'source_diff': 9.995899999999669e-05}, {'time': 0.040297194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:56:10.248" endtime="20201112 09:56:10.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:10.286" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:10.259" endtime="20201112 09:56:10.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.297" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 09:56:10.295" endtime="20201112 09:56:10.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.302" level="INFO">VALUE: [9.995899999999669e-05, 0.00010006900000000124, 0.00010040299999999891, 0.00010093099999999855, 0.00010008400000000028, 0.00010051400000000293, 0.00010072300000000395, 0.00010016699999999823, 0.00010047199999999729, 0.00010083400000000103, 0.00010070799999999797, 0.00010058300000000131, 0.00010070899999999744, 0.00010072199999999754, 0.0001008060000000019, 0.00010029099999999541, 0.00010015299999999866, 9.955600000000064e-05, 0.00010020899999999694, 9.99860000000033e-05, 9.959800000000629e-05, 0.00010062500000000002, 0.00010059700000000088, 0.00010058400000000078, 0.00010040299999999891, 0.00010095799999999822, 0.00010091699999999898, 0.00010045799999999772, 0.00010074999999999668, 9.988899999999884e-05, 9.997299999999626e-05, 0.00010037499999999977, 0.00010108299999999487, 0.00010056999999999428, 0.00010020799999999747, 9.938899999999834e-05, 0.00010040299999999891, 9.940199999999844e-05, 9.940299999999791e-05, 0.00010087500000000027, 0.00010040299999999891, 0.00010076400000000318, 0.00010094499999999812, 0.00010088899999999984, 0.00010104199999999564, 0.00010074999999999668, 0.00010054200000000207, 9.945799999999672e-05, 0.0001009860000000043, 0.00010011099999999995]</msg>
<status status="PASS" starttime="20201112 09:56:10.299" endtime="20201112 09:56:10.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.288" endtime="20201112 09:56:10.305"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:10.312" endtime="20201112 09:56:10.314"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:10.320" endtime="20201112 09:56:10.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.316" endtime="20201112 09:56:10.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.307" endtime="20201112 09:56:10.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.806" endtime="20201112 09:56:10.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:09.805" endtime="20201112 09:56:10.346"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:10.369" endtime="20201112 09:56:10.389"></status>
</kw>
<msg timestamp="20201112 09:56:10.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:10.365" endtime="20201112 09:56:10.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:10.393" endtime="20201112 09:56:10.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:10.399" endtime="20201112 09:56:10.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.358" endtime="20201112 09:56:10.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.353" endtime="20201112 09:56:10.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:10.422" endtime="20201112 09:56:10.762"></status>
</kw>
<msg timestamp="20201112 09:56:10.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040457861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040558292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:10.419" endtime="20201112 09:56:10.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040457861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040558292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:10.772" endtime="20201112 09:56:10.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:10.790" endtime="20201112 09:56:10.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.412" endtime="20201112 09:56:10.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.407" endtime="20201112 09:56:10.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:10.809" level="INFO">${RESULT} = [{'time': 0.040558292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010043100000000499, 'source_diff': 0.00010043100000000499}, {'time': 0.0406645, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:56:10.800" endtime="20201112 09:56:10.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:10.838" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:10.811" endtime="20201112 09:56:10.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.849" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 09:56:10.847" endtime="20201112 09:56:10.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.855" level="INFO">VALUE: [0.00010043100000000499, 0.00010163900000000059, 0.00010180599999999596, 0.00010155499999999623, 0.00010175000000000461, 0.0001010139999999965, 0.00010127699999999684, 0.00010066699999999873, 0.00010181999999999553, 0.00010117999999999933, 0.00010033400000000053, 0.00010174999999999768, 0.00010037499999999977, 0.00010205499999999673, 0.00010054200000000207, 0.000101028000000003, 0.00010123600000000454, 0.00010138800000000087, 0.00010191699999999998, 0.00010070900000000438, 0.0001009159999999995, 0.00010152799999999657, 0.00010111100000000095, 0.00010170799999999897, 0.00010140200000000044, 0.00010200000000000486, 0.00010115299999999966, 0.000101028000000003, 0.0001010139999999965, 0.0001011809999999988, 0.00010204200000000357, 0.00010105600000000214, 0.00010198599999999836, 0.00010040299999999891, 0.00010117999999999933, 0.0001006939999999984, 0.00010159700000000188, 0.0001012359999999976, 0.0001013610000000012, 0.00010081900000000199, 0.0001012080000000054, 0.00010070799999999797, 0.00010172200000000547, 0.00010082000000000146, 0.00010197199999999879, 0.00010176399999999725, 0.0001003610000000002, 0.00010191699999999998, 0.00010142999999999958, 0.00010112500000000052]</msg>
<status status="PASS" starttime="20201112 09:56:10.852" endtime="20201112 09:56:10.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.840" endtime="20201112 09:56:10.858"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:10.864" endtime="20201112 09:56:10.867"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:10.872" endtime="20201112 09:56:10.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.868" endtime="20201112 09:56:10.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.860" endtime="20201112 09:56:10.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.348" endtime="20201112 09:56:10.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.347" endtime="20201112 09:56:10.898"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:10.920" endtime="20201112 09:56:10.939"></status>
</kw>
<msg timestamp="20201112 09:56:10.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:10.917" endtime="20201112 09:56:10.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:10.943" endtime="20201112 09:56:10.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:10.949" endtime="20201112 09:56:10.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.910" endtime="20201112 09:56:10.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.904" endtime="20201112 09:56:10.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:10.972" endtime="20201112 09:56:11.305"></status>
</kw>
<msg timestamp="20201112 09:56:11.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039886694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039988278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:10.969" endtime="20201112 09:56:11.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039886694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039988278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:11.314" endtime="20201112 09:56:11.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:11.332" endtime="20201112 09:56:11.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.961" endtime="20201112 09:56:11.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.957" endtime="20201112 09:56:11.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:11.352" level="INFO">${RESULT} = [{'time': 0.039988278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010158400000000178, 'source_diff': 0.00010158400000000178}, {'time': 0.040097542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:11.344" endtime="20201112 09:56:11.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:11.382" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:11.354" endtime="20201112 09:56:11.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.393" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 09:56:11.390" endtime="20201112 09:56:11.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.398" level="INFO">VALUE: [0.00010158400000000178, 0.00010274999999999868, 0.00010166700000000667, 0.00010159700000000188, 0.00010198599999999836, 0.00010290300000000141, 0.00010279199999999739, 0.00010295800000000022, 0.00010173600000000504, 0.00010224999999999818, 0.00010243100000000005, 0.00010188900000000084, 0.00010251400000000493, 0.00010187500000000127, 0.00010141699999999948, 0.0001023889999999944, 0.00010238900000000134, 0.00010180500000000342, 0.00010274999999999868, 0.00010257000000000321, 0.00010247299999999876, 0.00010162500000000102, 0.0001011809999999988, 0.00010113800000000062, 0.00010215300000000066, 0.00010184700000000213, 0.0001024860000000058, 0.00010229099999999741, 0.00010208400000000228, 0.00010236099999999526, 0.00010212500000000152, 0.00010229199999999689, 0.00010176399999999725, 0.00010159699999999494, 0.00010272199999999954, 0.00010172199999999854, 0.00010215300000000066, 0.00010161100000000145, 0.00010215300000000066, 0.00010247199999999929, 0.00010232000000000296, 0.00010205500000000367, 0.00010127800000000325, 0.00010220799999999947, 0.00010172299999999801, 0.00010315300000000166, 0.00010266700000000073, 0.00010232000000000296, 0.00010208400000000228, 0.00010268099999999336]</msg>
<status status="PASS" starttime="20201112 09:56:11.395" endtime="20201112 09:56:11.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.384" endtime="20201112 09:56:11.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:11.407" endtime="20201112 09:56:11.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:11.415" endtime="20201112 09:56:11.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.411" endtime="20201112 09:56:11.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.403" endtime="20201112 09:56:11.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.900" endtime="20201112 09:56:11.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.899" endtime="20201112 09:56:11.441"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:11.464" endtime="20201112 09:56:11.483"></status>
</kw>
<msg timestamp="20201112 09:56:11.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:11.460" endtime="20201112 09:56:11.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:11.486" endtime="20201112 09:56:11.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:11.492" endtime="20201112 09:56:11.496"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.453" endtime="20201112 09:56:11.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.447" endtime="20201112 09:56:11.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:11.515" endtime="20201112 09:56:11.850"></status>
</kw>
<msg timestamp="20201112 09:56:11.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039999486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040101819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:11.512" endtime="20201112 09:56:11.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039999486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040101819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:11.859" endtime="20201112 09:56:11.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:11.877" endtime="20201112 09:56:11.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.505" endtime="20201112 09:56:11.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.500" endtime="20201112 09:56:11.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:11.896" level="INFO">${RESULT} = [{'time': 0.040101819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010233299999999612, 'source_diff': 0.00010233299999999612}, {'time': 0.040214167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:11.887" endtime="20201112 09:56:11.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:11.925" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:11.898" endtime="20201112 09:56:11.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.936" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 09:56:11.934" endtime="20201112 09:56:11.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.942" level="INFO">VALUE: [0.00010233299999999612, 0.00010259800000000235, 0.00010363900000000259, 0.00010245799999999972, 0.00010397199999999385, 0.0001022359999999986, 0.00010338900000000234, 0.00010255499999999723, 0.00010343000000000158, 0.0001027359999999991, 0.00010387500000000327, 0.00010380599999999796, 0.00010299999999999893, 0.00010336099999999626, 0.00010254200000000407, 0.00010395800000000122, 0.00010307000000000371, 0.00010412499999999658, 0.000102513999999998, 0.00010372300000000001, 0.0001025689999999968, 0.0001028889999999949, 0.0001026810000000003, 0.00010334799999999617, 0.00010363899999999565, 0.00010308299999999687, 0.00010277699999999834, 0.0001037089999999935, 0.00010279099999999791, 0.00010216700000000023, 0.00010218000000000033, 0.00010307000000000371, 0.00010240300000000091, 0.00010319500000000037, 0.00010355499999999823, 0.00010272199999999954, 0.00010262499999999508, 0.00010355499999999823, 0.00010258400000000278, 0.0001022359999999986, 0.00010268000000000083, 0.00010327699999999884, 0.00010252699999999809, 0.00010279200000000432, 0.0001037360000000001, 0.00010277799999999782, 0.00010259799999999542, 0.0001028610000000027, 0.00010252799999999757, 0.00010255600000000364]</msg>
<status status="PASS" starttime="20201112 09:56:11.939" endtime="20201112 09:56:11.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.927" endtime="20201112 09:56:11.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:11.951" endtime="20201112 09:56:11.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:11.959" endtime="20201112 09:56:11.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.955" endtime="20201112 09:56:11.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.947" endtime="20201112 09:56:11.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.443" endtime="20201112 09:56:11.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.442" endtime="20201112 09:56:11.985"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:12.008" endtime="20201112 09:56:12.027"></status>
</kw>
<msg timestamp="20201112 09:56:12.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:12.004" endtime="20201112 09:56:12.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:12.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:12.030" endtime="20201112 09:56:12.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:12.036" endtime="20201112 09:56:12.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.997" endtime="20201112 09:56:12.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.992" endtime="20201112 09:56:12.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:12.060" endtime="20201112 09:56:12.394"></status>
</kw>
<msg timestamp="20201112 09:56:12.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040097167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040200792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:12.056" endtime="20201112 09:56:12.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:12.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040097167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040200792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:12.403" endtime="20201112 09:56:12.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:12.421" endtime="20201112 09:56:12.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:12.049" endtime="20201112 09:56:12.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:12.044" endtime="20201112 09:56:12.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:12.440" level="INFO">${RESULT} = [{'time': 0.040200792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010362499999999608, 'source_diff': 0.00010362499999999608}, {'time': 0.040314083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:12.431" endtime="20201112 09:56:12.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:12.469" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:12.442" endtime="20201112 09:56:12.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:12.480" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 09:56:12.478" endtime="20201112 09:56:12.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:12.485" level="INFO">VALUE: [0.00010362499999999608, 0.00010448600000000086, 0.00010379200000000532, 0.00010355499999999823, 0.00010476400000000025, 0.00010493100000000255, 0.00010327699999999884, 0.00010370900000000044, 0.00010461100000000445, 0.00010356999999999728, 0.00010413899999999615, 0.00010402699999999959, 0.00010461100000000445, 0.00010383300000000456, 0.00010437500000000377, 0.00010382000000000446, 0.00010399999999999993, 0.00010329099999999841, 0.00010358400000000378, 0.00010377799999999882, 0.00010476400000000025, 0.00010419500000000137, 0.00010490300000000341, 0.0001039160000000025, 0.0001036810000000013, 0.00010369500000000087, 0.00010359699999999694, 0.00010380599999999796, 0.0001040689999999983, 0.0001045559999999987, 0.00010352799999999857, 0.00010492999999999614, 0.00010408299999999787, 0.00010484700000000513, 0.00010365300000000216, 0.00010461100000000445, 0.00010395800000000122, 0.00010444400000000215, 0.00010436099999999726, 0.00010347200000000029, 0.00010397200000000079, 0.0001045689999999988, 0.00010340300000000191, 0.00010486099999999776, 0.00010480599999999896, 0.00010416600000000276, 0.00010447200000000129, 0.00010316599999999482, 0.00010377799999999882, 0.00010327799999999832]</msg>
<status status="PASS" starttime="20201112 09:56:12.483" endtime="20201112 09:56:12.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:12.471" endtime="20201112 09:56:12.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:12.495" endtime="20201112 09:56:12.498"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:12.503" endtime="20201112 09:56:12.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:12.499" endtime="20201112 09:56:12.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:12.490" endtime="20201112 09:56:12.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.987" endtime="20201112 09:56:12.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.986" endtime="20201112 09:56:12.529"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:12.551" endtime="20201112 09:56:12.570"></status>
</kw>
<msg timestamp="20201112 09:56:12.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:12.548" endtime="20201112 09:56:12.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:12.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:12.574" endtime="20201112 09:56:12.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:12.580" endtime="20201112 09:56:12.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:12.541" endtime="20201112 09:56:12.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:12.535" endtime="20201112 09:56:12.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:12.603" endtime="20201112 09:56:12.939"></status>
</kw>
<msg timestamp="20201112 09:56:12.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040017667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040122306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:12.600" endtime="20201112 09:56:12.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:12.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040017667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040122306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:12.948" endtime="20201112 09:56:12.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:12.965" endtime="20201112 09:56:12.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:12.592" endtime="20201112 09:56:12.972"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:12.588" endtime="20201112 09:56:12.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:12.984" level="INFO">${RESULT} = [{'time': 0.040122306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010463900000000359, 'source_diff': 0.00010463900000000359}, {'time': 0.040237597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:12.975" endtime="20201112 09:56:12.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:13.014" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:12.986" endtime="20201112 09:56:13.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.024" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 09:56:13.022" endtime="20201112 09:56:13.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.030" level="INFO">VALUE: [0.00010463900000000359, 0.00010437499999999683, 0.00010511099999999801, 0.00010473700000000058, 0.0001050689999999993, 0.00010561099999999851, 0.0001050140000000005, 0.00010518000000000333, 0.00010444400000000215, 0.00010470799999999503, 0.00010555500000000023, 0.00010498600000000136, 0.00010509699999999844, 0.00010459800000000435, 0.00010472200000000154, 0.00010455600000000564, 0.00010598600000000236, 0.00010444500000000162, 0.00010565199999999775, 0.00010463899999999665, 0.00010508299999999887, 0.00010608399999999935, 0.00010458299999999837, 0.00010444400000000215, 0.00010452799999999957, 0.00010419399999999496, 0.00010500000000000093, 0.000104416000000003, 0.00010512500000000452, 0.00010594400000000365, 0.00010501300000000102, 0.00010494400000000265, 0.00010608299999999987, 0.00010558399999999885, 0.00010427800000000625, 0.00010525000000000118, 0.00010484699999999819, 0.00010462499999999708, 0.00010511199999999749, 0.00010530599999999946, 0.00010486099999999776, 0.0001052360000000016, 0.00010513799999999768, 0.00010447200000000129, 0.00010504199999999964, 0.00010483400000000503, 0.00010511099999999801, 0.00010559800000000535, 0.00010415199999999625, 0.0001043610000000042]</msg>
<status status="PASS" starttime="20201112 09:56:13.027" endtime="20201112 09:56:13.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.015" endtime="20201112 09:56:13.033"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.039" endtime="20201112 09:56:13.042"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:13.047" endtime="20201112 09:56:13.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.043" endtime="20201112 09:56:13.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.035" endtime="20201112 09:56:13.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:12.531" endtime="20201112 09:56:13.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:12.530" endtime="20201112 09:56:13.073"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.095" endtime="20201112 09:56:13.114"></status>
</kw>
<msg timestamp="20201112 09:56:13.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:13.092" endtime="20201112 09:56:13.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:13.118" endtime="20201112 09:56:13.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.124" endtime="20201112 09:56:13.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.085" endtime="20201112 09:56:13.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.079" endtime="20201112 09:56:13.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.147" endtime="20201112 09:56:13.482"></status>
</kw>
<msg timestamp="20201112 09:56:13.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039914167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040020347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:13.144" endtime="20201112 09:56:13.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039914167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040020347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:13.492" endtime="20201112 09:56:13.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.510" endtime="20201112 09:56:13.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.137" endtime="20201112 09:56:13.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.132" endtime="20201112 09:56:13.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:13.530" level="INFO">${RESULT} = [{'time': 0.040020347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010617999999999739, 'source_diff': 0.00010617999999999739}, {'time': 0.040136653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:13.522" endtime="20201112 09:56:13.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:13.560" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:13.532" endtime="20201112 09:56:13.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.570" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 09:56:13.568" endtime="20201112 09:56:13.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.576" level="INFO">VALUE: [0.00010617999999999739, 0.00010552800000000057, 0.00010640299999999797, 0.00010516700000000323, 0.0001056940000000034, 0.000105416000000004, 0.00010519399999999596, 0.00010518099999999586, 0.00010577800000000082, 0.00010576399999999431, 0.00010540299999999697, 0.00010526400000000075, 0.00010586099999999876, 0.00010550000000000143, 0.0001052360000000016, 0.00010558399999999885, 0.00010704200000000164, 0.00010693099999999761, 0.00010548600000000186, 0.00010575000000000168, 0.00010595800000000322, 0.00010593100000000355, 0.00010591699999999704, 0.0001053889999999974, 0.00010525000000000118, 0.0001052219999999951, 0.00010572200000000254, 0.00010540200000000444, 0.00010695799999999728, 0.0001053889999999974, 0.0001053339999999986, 0.00010561099999999851, 0.00010529100000000041, 0.00010600000000000193, 0.00010562500000000502, 0.00010587500000000527, 0.00010536099999999826, 0.00010548599999999492, 0.00010530599999999946, 0.00010552800000000057, 0.00010587499999999833, 0.00010516699999999629, 0.0001056940000000034, 0.00010537500000000477, 0.00010561100000000545, 0.0001060140000000015, 0.00010584799999999867, 0.00010536099999999826, 0.000105514000000001, 0.00010647200000000329]</msg>
<status status="PASS" starttime="20201112 09:56:13.573" endtime="20201112 09:56:13.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.561" endtime="20201112 09:56:13.579"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.585" endtime="20201112 09:56:13.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:13.593" endtime="20201112 09:56:13.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.589" endtime="20201112 09:56:13.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.580" endtime="20201112 09:56:13.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.075" endtime="20201112 09:56:13.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.074" endtime="20201112 09:56:13.619"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.641" endtime="20201112 09:56:13.662"></status>
</kw>
<msg timestamp="20201112 09:56:13.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:13.638" endtime="20201112 09:56:13.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:13.666" endtime="20201112 09:56:13.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.672" endtime="20201112 09:56:13.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.631" endtime="20201112 09:56:13.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.625" endtime="20201112 09:56:13.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.695" endtime="20201112 09:56:14.040"></status>
</kw>
<msg timestamp="20201112 09:56:14.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039932389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040038847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:13.691" endtime="20201112 09:56:14.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:14.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039932389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040038847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:14.049" endtime="20201112 09:56:14.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:14.067" endtime="20201112 09:56:14.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.684" endtime="20201112 09:56:14.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.680" endtime="20201112 09:56:14.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:14.085" level="INFO">${RESULT} = [{'time': 0.040038847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010645800000000372, 'source_diff': 0.00010645800000000372}, {'time': 0.040154153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:14.077" endtime="20201112 09:56:14.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:14.115" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:14.087" endtime="20201112 09:56:14.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:14.125" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 09:56:14.123" endtime="20201112 09:56:14.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:14.131" level="INFO">VALUE: [0.00010645800000000372, 0.0001063889999999984, 0.00010636099999999926, 0.00010645900000000319, 0.00010694399999999771, 0.00010711100000000001, 0.00010625000000000218, 0.0001065419999999942, 0.00010697200000000379, 0.00010719499999999743, 0.00010636099999999926, 0.00010656999999999334, 0.00010704099999999522, 0.00010662499999999908, 0.00010634699999999969, 0.00010691700000000498, 0.00010673599999999617, 0.00010684700000000019, 0.00010698599999999642, 0.00010695800000000422, 0.00010627800000000132, 0.00010698600000000336, 0.0001070690000000013, 0.00010662500000000602, 0.00010657000000000028, 0.00010711100000000001, 0.00010681900000000105, 0.00010693100000000455, 0.00010693100000000455, 0.00010662499999999908, 0.00010626400000000175, 0.00010637499999999883, 0.00010672200000000354, 0.00010677800000000182, 0.00010700000000000293, 0.00010616699999999729, 0.00010675000000000268, 0.00010620799999999653, 0.00010720800000000447, 0.00010709700000000044, 0.00010640299999999797, 0.00010711100000000001, 0.00010680500000000148, 0.00010644499999999668, 0.00010650000000000243, 0.00010634699999999969, 0.00010668099999999736, 0.00010669500000000387, 0.00010670800000000397, 0.0001068889999999989]</msg>
<status status="PASS" starttime="20201112 09:56:14.128" endtime="20201112 09:56:14.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:14.116" endtime="20201112 09:56:14.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:14.140" endtime="20201112 09:56:14.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:14.148" endtime="20201112 09:56:14.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:14.144" endtime="20201112 09:56:14.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:14.136" endtime="20201112 09:56:14.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.621" endtime="20201112 09:56:14.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.620" endtime="20201112 09:56:14.175"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:14.197" endtime="20201112 09:56:14.216"></status>
</kw>
<msg timestamp="20201112 09:56:14.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:14.194" endtime="20201112 09:56:14.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:14.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:14.220" endtime="20201112 09:56:14.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:14.226" endtime="20201112 09:56:14.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:14.186" endtime="20201112 09:56:14.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:14.181" endtime="20201112 09:56:14.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:14.249" endtime="20201112 09:56:14.582"></status>
</kw>
<msg timestamp="20201112 09:56:14.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040582819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040690569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:14.246" endtime="20201112 09:56:14.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:14.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040582819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040690569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:14.591" endtime="20201112 09:56:14.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:14.609" endtime="20201112 09:56:14.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:14.239" endtime="20201112 09:56:14.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:14.234" endtime="20201112 09:56:14.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:14.628" level="INFO">${RESULT} = [{'time': 0.040690569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010775000000000368, 'source_diff': 0.00010775000000000368}, {'time': 0.040807889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:14.619" endtime="20201112 09:56:14.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:14.657" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:14.630" endtime="20201112 09:56:14.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:14.668" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 09:56:14.666" endtime="20201112 09:56:14.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:14.673" level="INFO">VALUE: [0.00010775000000000368, 0.00010777800000000282, 0.00010729100000000241, 0.00010742999999999864, 0.00010757000000000128, 0.00010733300000000112, 0.00010798600000000436, 0.00010727700000000284, 0.0001075419999999952, 0.00010811100000000101, 0.00010769499999999793, 0.00010799999999999699, 0.00010773599999999717, 0.00010734700000000069, 0.00010797200000000479, 0.00010755599999999477, 0.00010724999999999624, 0.00010915300000000072, 0.00010730599999999452, 0.00010800000000000393, 0.00010719399999999796, 0.00010725000000000318, 0.00010812500000000058, 0.0001072360000000036, 0.0001080140000000035, 0.00010724999999999624, 0.00010802799999999613, 0.00010766699999999879, 0.00010792999999999914, 0.00010787500000000033, 0.000107514000000003, 0.00010815299999999972, 0.00010745799999999778, 0.00010736100000000026, 0.00010799999999999699, 0.00010758400000000085, 0.00010791699999999904, 0.0001080690000000023, 0.00010752800000000257, 0.0001078889999999999, 0.00010832000000000203, 0.00010783300000000162, 0.00010798600000000436, 0.00010819499999999843, 0.00010748599999999692, 0.00010752800000000257, 0.00010866699999999979, 0.000107902, 0.00010769399999999846, 0.0001072219999999971]</msg>
<status status="PASS" starttime="20201112 09:56:14.670" endtime="20201112 09:56:14.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:14.659" endtime="20201112 09:56:14.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:14.683" endtime="20201112 09:56:14.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:14.691" endtime="20201112 09:56:14.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:14.686" endtime="20201112 09:56:14.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:14.678" endtime="20201112 09:56:14.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:14.177" endtime="20201112 09:56:14.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:14.175" endtime="20201112 09:56:14.717"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:14.739" endtime="20201112 09:56:14.758"></status>
</kw>
<msg timestamp="20201112 09:56:14.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:14.736" endtime="20201112 09:56:14.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:14.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:14.762" endtime="20201112 09:56:14.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:14.768" endtime="20201112 09:56:14.772"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:14.729" endtime="20201112 09:56:14.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:14.723" endtime="20201112 09:56:14.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:14.791" endtime="20201112 09:56:15.126"></status>
</kw>
<msg timestamp="20201112 09:56:15.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040096986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040205556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:14.788" endtime="20201112 09:56:15.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040096986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040205556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:15.135" endtime="20201112 09:56:15.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:15.153" endtime="20201112 09:56:15.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:14.781" endtime="20201112 09:56:15.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:14.776" endtime="20201112 09:56:15.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:15.172" level="INFO">${RESULT} = [{'time': 0.040205556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010857000000000228, 'source_diff': 0.00010857000000000228}, {'time': 0.040322889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:15.163" endtime="20201112 09:56:15.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:15.201" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:15.174" endtime="20201112 09:56:15.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.212" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 09:56:15.210" endtime="20201112 09:56:15.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.217" level="INFO">VALUE: [0.00010857000000000228, 0.00010995800000000028, 0.00010905599999999627, 0.00010856899999999586, 0.00010836100000000126, 0.00010829100000000341, 0.00010863900000000065, 0.00010915300000000072, 0.0001092219999999991, 0.00010857000000000228, 0.00010886100000000176, 0.00010874999999999774, 0.00010898599999999842, 0.00010858299999999543, 0.00010899999999999799, 0.00010856899999999586, 0.00010883300000000262, 0.00010842999999999964, 0.0001097219999999996, 0.00010988800000000243, 0.00010844499999999868, 0.00010847199999999835, 0.00010836100000000126, 0.00010863899999999371, 0.00010826399999999681, 0.00010832000000000203, 0.00010836099999999432, 0.00010909700000000244, 0.00010886099999999482, 0.00010897199999999885, 0.0001082219999999981, 0.00010834699999999475, 0.00010901399999999756, 0.00010877800000000382, 0.00010902800000000407, 0.00010894399999999971, 0.00010893099999999961, 0.00010847199999999835, 0.00010902800000000407, 0.00010823599999999767, 0.00010818099999999886, 0.00010899999999999799, 0.00010820900000000494, 0.00010876400000000425, 0.00010851399999999706, 0.00010895899999999875, 0.00010876399999999731, 0.00010852699999999715, 0.00010948599999999892, 0.00010907000000000278]</msg>
<status status="PASS" starttime="20201112 09:56:15.214" endtime="20201112 09:56:15.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.203" endtime="20201112 09:56:15.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:15.226" endtime="20201112 09:56:15.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:15.235" endtime="20201112 09:56:15.256"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.230" endtime="20201112 09:56:15.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.222" endtime="20201112 09:56:15.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:14.719" endtime="20201112 09:56:15.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:14.718" endtime="20201112 09:56:15.260"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:15.283" endtime="20201112 09:56:15.302"></status>
</kw>
<msg timestamp="20201112 09:56:15.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:15.280" endtime="20201112 09:56:15.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:15.305" endtime="20201112 09:56:15.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:15.312" endtime="20201112 09:56:15.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.272" endtime="20201112 09:56:15.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.267" endtime="20201112 09:56:15.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:15.335" endtime="20201112 09:56:15.669"></status>
</kw>
<msg timestamp="20201112 09:56:15.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039995403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040105347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:15.331" endtime="20201112 09:56:15.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039995403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040105347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:15.678" endtime="20201112 09:56:15.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:15.696" endtime="20201112 09:56:15.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.324" endtime="20201112 09:56:15.705"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.320" endtime="20201112 09:56:15.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:15.716" level="INFO">${RESULT} = [{'time': 0.040105347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010994400000000071, 'source_diff': 0.00010994400000000071}, {'time': 0.040223708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:15.708" endtime="20201112 09:56:15.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:15.746" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:15.719" endtime="20201112 09:56:15.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.757" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 09:56:15.755" endtime="20201112 09:56:15.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.762" level="INFO">VALUE: [0.00010994400000000071, 0.00010986099999999582, 0.00010997299999999932, 0.00011012499999999564, 0.00011047200000000035, 0.00010998599999999942, 0.00010948599999999892, 0.00011016599999999488, 0.00011012500000000258, 0.00011122199999999416, 0.00010991700000000104, 0.00010961100000000251, 0.00010943100000000011, 0.00010970800000000003, 0.00010961200000000199, 0.00011104099999999922, 0.00010990299999999453, 0.00010938899999999446, 0.00010993100000000061, 0.0001097219999999996, 0.00010968000000000089, 0.00011112500000000358, 0.00010958399999999591, 0.00010983299999999668, 0.00010974999999999874, 0.00010977799999999788, 0.00010968100000000036, 0.00010938800000000193, 0.00010930600000000346, 0.0001097219999999996, 0.00010961100000000251, 0.00010957000000000328, 0.00010973599999999917, 0.00010969499999999993, 0.00010963900000000165, 0.00010936100000000226, 0.00010994399999999377, 0.00011001399999999856, 0.00010959700000000294, 0.00011083399999999716, 0.00010963899999999471, 0.00010970800000000003, 0.00010949999999999849, 0.00010998699999999889, 0.00010970800000000003, 0.00011018000000000139, 0.00010933399999999566, 0.00010937500000000183, 0.00010929200000000389, 0.00011006899999999736]</msg>
<status status="PASS" starttime="20201112 09:56:15.759" endtime="20201112 09:56:15.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.748" endtime="20201112 09:56:15.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:15.772" endtime="20201112 09:56:15.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:15.780" endtime="20201112 09:56:15.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.775" endtime="20201112 09:56:15.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.767" endtime="20201112 09:56:15.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.263" endtime="20201112 09:56:15.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.261" endtime="20201112 09:56:15.806"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:15.828" endtime="20201112 09:56:15.847"></status>
</kw>
<msg timestamp="20201112 09:56:15.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:15.825" endtime="20201112 09:56:15.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:15.851" endtime="20201112 09:56:15.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:15.857" endtime="20201112 09:56:15.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.818" endtime="20201112 09:56:15.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.812" endtime="20201112 09:56:15.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:15.880" endtime="20201112 09:56:16.215"></status>
</kw>
<msg timestamp="20201112 09:56:16.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040076111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040186403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:15.877" endtime="20201112 09:56:16.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040076111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040186403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:16.224" endtime="20201112 09:56:16.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:16.242" endtime="20201112 09:56:16.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.870" endtime="20201112 09:56:16.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.865" endtime="20201112 09:56:16.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:16.261" level="INFO">${RESULT} = [{'time': 0.040186403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011029200000000489, 'source_diff': 0.00011029200000000489}, {'time': 0.040303778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:16.252" endtime="20201112 09:56:16.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:16.291" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:16.263" endtime="20201112 09:56:16.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.301" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 09:56:16.299" endtime="20201112 09:56:16.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.307" level="INFO">VALUE: [0.00011029200000000489, 0.00011086099999999682, 0.00011032000000000403, 0.0001107220000000006, 0.0001105690000000048, 0.00011122199999999416, 0.00011177799999999988, 0.00011086100000000376, 0.0001115560000000057, 0.0001117220000000016, 0.00011176400000000031, 0.00011193099999999567, 0.00011087500000000333, 0.00011054200000000514, 0.00011049999999999949, 0.0001103340000000036, 0.00011061199999999605, 0.00011069500000000093, 0.00011161099999999757, 0.00011036100000000326, 0.0001104299999999947, 0.00011090300000000247, 0.0001104020000000025, 0.00011054200000000514, 0.000111596999999998, 0.00011104100000000616, 0.00011068100000000136, 0.0001110549999999988, 0.0001103340000000036, 0.00011205599999999927, 0.00011084700000000419, 0.00011049999999999949, 0.00011079199999999845, 0.00011083299999999768, 0.00011068100000000136, 0.00011080599999999802, 0.00011036200000000274, 0.00011061200000000299, 0.00011031999999999709, 0.00011048599999999992, 0.00011094500000000118, 0.00011049999999999949, 0.00011044500000000068, 0.00011169500000000193, 0.00011169499999999499, 0.00011034699999999675, 0.00011045900000000025, 0.00011101300000000008, 0.00011141700000000254, 0.00011094399999999477]</msg>
<status status="PASS" starttime="20201112 09:56:16.304" endtime="20201112 09:56:16.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.292" endtime="20201112 09:56:16.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:16.316" endtime="20201112 09:56:16.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:16.324" endtime="20201112 09:56:16.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.320" endtime="20201112 09:56:16.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.312" endtime="20201112 09:56:16.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.808" endtime="20201112 09:56:16.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.806" endtime="20201112 09:56:16.350"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:16.372" endtime="20201112 09:56:16.392"></status>
</kw>
<msg timestamp="20201112 09:56:16.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:16.369" endtime="20201112 09:56:16.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:16.395" endtime="20201112 09:56:16.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:16.401" endtime="20201112 09:56:16.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.362" endtime="20201112 09:56:16.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.356" endtime="20201112 09:56:16.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:16.424" endtime="20201112 09:56:16.758"></status>
</kw>
<msg timestamp="20201112 09:56:16.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039910222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040021514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:16.421" endtime="20201112 09:56:16.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039910222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040021514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:16.767" endtime="20201112 09:56:16.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:16.785" endtime="20201112 09:56:16.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.414" endtime="20201112 09:56:16.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.409" endtime="20201112 09:56:16.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:16.803" level="INFO">${RESULT} = [{'time': 0.040021514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011129199999999895, 'source_diff': 0.00011129199999999895}, {'time': 0.040141917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:16.795" endtime="20201112 09:56:16.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:16.833" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:16.805" endtime="20201112 09:56:16.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.844" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 09:56:16.841" endtime="20201112 09:56:16.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.849" level="INFO">VALUE: [0.00011129199999999895, 0.00011127799999999938, 0.00011168000000000289, 0.00011155599999999877, 0.00011173600000000117, 0.00011181999999999859, 0.00011261099999999857, 0.00011157000000000528, 0.00011170800000000203, 0.00011195800000000228, 0.00011127799999999938, 0.00011194399999999577, 0.00011308299999999993, 0.00011156999999999834, 0.0001113890000000034, 0.00011131999999999809, 0.0001119169999999961, 0.00011150000000000049, 0.00011158299999999843, 0.0001114299999999957, 0.0001120560000000062, 0.00011136099999999732, 0.00011284699999999925, 0.00011173600000000117, 0.00011145800000000178, 0.00011180599999999902, 0.00011157000000000528, 0.00011148600000000092, 0.00011170800000000203, 0.00011217999999999645, 0.00011198600000000142, 0.00011170800000000203, 0.00011193099999999567, 0.00011198600000000142, 0.0001115549999999993, 0.00011181899999999911, 0.00011238899999999746, 0.00011126399999999981, 0.00011166699999999585, 0.00011170800000000203, 0.00011152799999999963, 0.0001112220000000011, 0.00011165300000000322, 0.00011213900000000415, 0.00011145800000000178, 0.00011133299999999818, 0.00011169500000000193, 0.00011163799999999724, 0.000111209000000001, 0.00011204100000000022]</msg>
<status status="PASS" starttime="20201112 09:56:16.846" endtime="20201112 09:56:16.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.835" endtime="20201112 09:56:16.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:16.858" endtime="20201112 09:56:16.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:16.866" endtime="20201112 09:56:16.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.862" endtime="20201112 09:56:16.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.854" endtime="20201112 09:56:16.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.352" endtime="20201112 09:56:16.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.351" endtime="20201112 09:56:16.892"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:16.915" endtime="20201112 09:56:16.936"></status>
</kw>
<msg timestamp="20201112 09:56:16.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:16.911" endtime="20201112 09:56:16.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:16.940" endtime="20201112 09:56:16.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:16.946" endtime="20201112 09:56:16.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.904" endtime="20201112 09:56:16.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.899" endtime="20201112 09:56:16.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:16.971" endtime="20201112 09:56:17.317"></status>
</kw>
<msg timestamp="20201112 09:56:17.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040111694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040225153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:16.967" endtime="20201112 09:56:17.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:17.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040111694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040225153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:17.326" endtime="20201112 09:56:17.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:17.344" endtime="20201112 09:56:17.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.960" endtime="20201112 09:56:17.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.955" endtime="20201112 09:56:17.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:17.363" level="INFO">${RESULT} = [{'time': 0.040225153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011345899999999631, 'source_diff': 0.00011345899999999631}, {'time': 0.040348486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:17.354" endtime="20201112 09:56:17.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:17.392" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:17.365" endtime="20201112 09:56:17.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:17.403" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 09:56:17.401" endtime="20201112 09:56:17.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:17.409" level="INFO">VALUE: [0.00011345899999999631, 0.0001127220000000026, 0.00011365299999999828, 0.00011341700000000454, 0.00011291599999999763, 0.00011298600000000242, 0.00011408300000000093, 0.000112902000000005, 0.00011295800000000328, 0.00011273600000000217, 0.0001128619999999983, 0.00011231999999999909, 0.00011318100000000386, 0.00011308299999999993, 0.00011426399999999587, 0.00011302799999999419, 0.0001130969999999995, 0.00011280500000000054, 0.00011290299999999753, 0.00011300000000000199, 0.00011238899999999746, 0.00011337500000000583, 0.00011223600000000167, 0.00011252800000000063, 0.00011234699999999875, 0.00011247199999999541, 0.00011301400000000156, 0.00011244400000000321, 0.00011361099999999957, 0.00011269400000000346, 0.00011251400000000106, 0.00011240299999999703, 0.00011244399999999627, 0.00011418099999999792, 0.00011298599999999548, 0.00011316700000000429, 0.00011327800000000138, 0.00011234699999999875, 0.00011265300000000422, 0.00011300000000000199, 0.00011231899999999961, 0.00011298600000000242, 0.0001130420000000007, 0.00011309799999999898, 0.00011312499999999864, 0.00011270899999999556, 0.0001129169999999971, 0.00011313799999999874, 0.00011225000000000124, 0.00011281999999999959]</msg>
<status status="PASS" starttime="20201112 09:56:17.405" endtime="20201112 09:56:17.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:17.394" endtime="20201112 09:56:17.415"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:17.422" endtime="20201112 09:56:17.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:17.430" endtime="20201112 09:56:17.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:17.426" endtime="20201112 09:56:17.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:17.417" endtime="20201112 09:56:17.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.894" endtime="20201112 09:56:17.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.893" endtime="20201112 09:56:17.456"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:17.479" endtime="20201112 09:56:17.500"></status>
</kw>
<msg timestamp="20201112 09:56:17.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:17.475" endtime="20201112 09:56:17.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:17.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:17.503" endtime="20201112 09:56:17.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:17.510" endtime="20201112 09:56:17.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:17.469" endtime="20201112 09:56:17.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:17.463" endtime="20201112 09:56:17.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:17.533" endtime="20201112 09:56:17.879"></status>
</kw>
<msg timestamp="20201112 09:56:17.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040405333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040519375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:17.529" endtime="20201112 09:56:17.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:17.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040405333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040519375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:17.888" endtime="20201112 09:56:17.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:17.906" endtime="20201112 09:56:17.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:17.522" endtime="20201112 09:56:17.915"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:17.518" endtime="20201112 09:56:17.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:17.927" level="INFO">${RESULT} = [{'time': 0.040519375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001140420000000017, 'source_diff': 0.0001140420000000017}, {'time': 0.040643736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:56:17.918" endtime="20201112 09:56:17.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:17.956" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:17.929" endtime="20201112 09:56:17.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:17.967" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 09:56:17.965" endtime="20201112 09:56:17.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:17.973" level="INFO">VALUE: [0.0001140420000000017, 0.00011333300000000018, 0.00011393000000000514, 0.00011402799999999519, 0.0001139169999999981, 0.00011415299999999878, 0.00011320800000000353, 0.00011381899999999417, 0.00011333300000000018, 0.00011376399999999537, 0.00011377800000000188, 0.00011402800000000213, 0.00011350000000000249, 0.00011462500000000014, 0.00011477800000000288, 0.00011393099999999767, 0.00011347199999999641, 0.00011440299999999903, 0.00011479200000000245, 0.00011325000000000224, 0.00011500000000000399, 0.00011444399999999827, 0.0001135420000000012, 0.00011443100000000511, 0.00011413899999999921, 0.00011393100000000461, 0.00011458400000000091, 0.00011383300000000068, 0.00011407000000000084, 0.00011343100000000411, 0.00011391599999999863, 0.00011515299999999978, 0.00011476399999999637, 0.00011416599999999888, 0.00011476400000000331, 0.00011323600000000267, 0.00011394400000000471, 0.0001140420000000017, 0.00011470899999999756, 0.00011395799999999734, 0.00011395899999999681, 0.00011334699999999975, 0.00011361099999999957, 0.00011376300000000283, 0.00011462500000000014, 0.00011455600000000177, 0.00011472300000000407, 0.00011340299999999803, 0.00011341599999999813, 0.00011391599999999863]</msg>
<status status="PASS" starttime="20201112 09:56:17.970" endtime="20201112 09:56:17.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:17.958" endtime="20201112 09:56:17.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:17.983" endtime="20201112 09:56:17.986"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:17.991" endtime="20201112 09:56:18.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:17.987" endtime="20201112 09:56:18.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:17.978" endtime="20201112 09:56:18.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:17.459" endtime="20201112 09:56:18.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:17.457" endtime="20201112 09:56:18.018"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:18.040" endtime="20201112 09:56:18.062"></status>
</kw>
<msg timestamp="20201112 09:56:18.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:18.037" endtime="20201112 09:56:18.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:18.065" endtime="20201112 09:56:18.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:18.071" endtime="20201112 09:56:18.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.030" endtime="20201112 09:56:18.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.024" endtime="20201112 09:56:18.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:18.094" endtime="20201112 09:56:18.441"></status>
</kw>
<msg timestamp="20201112 09:56:18.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040607708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040722972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:18.091" endtime="20201112 09:56:18.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040607708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040722972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:18.450" endtime="20201112 09:56:18.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:18.468" endtime="20201112 09:56:18.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.084" endtime="20201112 09:56:18.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.079" endtime="20201112 09:56:18.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:18.486" level="INFO">${RESULT} = [{'time': 0.040722972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011526400000000381, 'source_diff': 0.00011526400000000381}, {'time': 0.040848306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:18.478" endtime="20201112 09:56:18.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:18.516" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:18.489" endtime="20201112 09:56:18.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.527" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 09:56:18.525" endtime="20201112 09:56:18.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.532" level="INFO">VALUE: [0.00011526400000000381, 0.00011620899999999906, 0.0001150420000000027, 0.00011519399999999902, 0.00011472199999999766, 0.00011473600000000417, 0.00011433300000000118, 0.00011511100000000107, 0.00011476399999999637, 0.00011422299999999663, 0.00011455600000000177, 0.00011602799999999719, 0.00011468099999999842, 0.00011547199999999841, 0.00011495900000000475, 0.0001148750000000004, 0.00011513900000000021, 0.00011513900000000021, 0.00011469399999999852, 0.00011469500000000493, 0.00011584800000000173, 0.00011499999999999705, 0.00011444399999999827, 0.00011455600000000177, 0.00011577699999999747, 0.00011562500000000114, 0.0001143749999999999, 0.0001144299999999987, 0.00011429100000000247, 0.00011563800000000124, 0.00011463899999999971, 0.00011427800000000238, 0.00011623599999999873, 0.00011447300000000382, 0.00011520899999999806, 0.00011579200000000345, 0.00011427800000000238, 0.00011538900000000046, 0.00011538800000000099, 0.00011472199999999766, 0.00011479100000000297, 0.00011606899999999643, 0.00011606900000000336, 0.00011495900000000475, 0.00011490299999999953, 0.00011497199999999791, 0.00011595899999999881, 0.00011482000000000159, 0.00011516699999999935, 0.00011449999999999655]</msg>
<status status="PASS" starttime="20201112 09:56:18.529" endtime="20201112 09:56:18.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.518" endtime="20201112 09:56:18.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:18.542" endtime="20201112 09:56:18.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:18.550" endtime="20201112 09:56:18.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.546" endtime="20201112 09:56:18.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.537" endtime="20201112 09:56:18.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.020" endtime="20201112 09:56:18.576"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.019" endtime="20201112 09:56:18.576"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:18.598" endtime="20201112 09:56:18.620"></status>
</kw>
<msg timestamp="20201112 09:56:18.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:18.595" endtime="20201112 09:56:18.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:18.623" endtime="20201112 09:56:18.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:18.629" endtime="20201112 09:56:18.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.588" endtime="20201112 09:56:18.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.582" endtime="20201112 09:56:18.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:18.652" endtime="20201112 09:56:18.998"></status>
</kw>
<msg timestamp="20201112 09:56:19.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040293819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040409181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:18.649" endtime="20201112 09:56:19.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:19.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040293819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040409181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:19.008" endtime="20201112 09:56:19.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:19.026" endtime="20201112 09:56:19.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.642" endtime="20201112 09:56:19.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.637" endtime="20201112 09:56:19.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:19.046" level="INFO">${RESULT} = [{'time': 0.040409181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001153620000000008, 'source_diff': 0.0001153620000000008}, {'time': 0.040529486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:56:19.037" endtime="20201112 09:56:19.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:19.075" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:19.048" endtime="20201112 09:56:19.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:19.086" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 09:56:19.084" endtime="20201112 09:56:19.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:19.092" level="INFO">VALUE: [0.0001153620000000008, 0.00011547200000000535, 0.0001163049999999971, 0.00011547199999999841, 0.00011588899999999402, 0.00011594499999999924, 0.0001154299999999997, 0.00011534700000000175, 0.00011663900000000171, 0.0001165420000000042, 0.00011602799999999719, 0.00011545799999999884, 0.0001154299999999997, 0.00011540300000000003, 0.00011536100000000132, 0.00011641600000000113, 0.00011661099999999563, 0.00011598599999999848, 0.00011698599999999948, 0.00011597199999999891, 0.00011595799999999934, 0.00011591600000000063, 0.0001164170000000006, 0.00011540300000000003, 0.00011713900000000221, 0.00011576399999999737, 0.00011712500000000264, 0.00011523599999999773, 0.0001167499999999988, 0.00011598600000000542, 0.00011566699999999985, 0.00011568099999999942, 0.0001152220000000051, 0.00011697199999999991, 0.00011551400000000406, 0.00011559800000000148, 0.00011595799999999934, 0.00011551399999999712, 0.00011601400000000456, 0.0001161249999999947, 0.00011702699999999872, 0.00011605599999999633, 0.00011605499999999686, 0.00011705599999999733, 0.00011531899999999567, 0.00011558400000000191, 0.00011612500000000164, 0.00011715300000000178, 0.00011544499999999874, 0.00011607000000000284]</msg>
<status status="PASS" starttime="20201112 09:56:19.089" endtime="20201112 09:56:19.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.077" endtime="20201112 09:56:19.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:19.101" endtime="20201112 09:56:19.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:19.109" endtime="20201112 09:56:19.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.105" endtime="20201112 09:56:19.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.096" endtime="20201112 09:56:19.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.578" endtime="20201112 09:56:19.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.577" endtime="20201112 09:56:19.135"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:19.158" endtime="20201112 09:56:19.179"></status>
</kw>
<msg timestamp="20201112 09:56:19.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:19.154" endtime="20201112 09:56:19.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:19.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:19.182" endtime="20201112 09:56:19.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:19.188" endtime="20201112 09:56:19.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.147" endtime="20201112 09:56:19.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.142" endtime="20201112 09:56:19.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:19.212" endtime="20201112 09:56:19.558"></status>
</kw>
<msg timestamp="20201112 09:56:19.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040244306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040362097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:19.208" endtime="20201112 09:56:19.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:19.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040244306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040362097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:19.567" endtime="20201112 09:56:19.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:19.585" endtime="20201112 09:56:19.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.201" endtime="20201112 09:56:19.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.196" endtime="20201112 09:56:19.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:19.604" level="INFO">${RESULT} = [{'time': 0.040362097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011779099999999904, 'source_diff': 0.00011779099999999904}, {'time': 0.040485431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:19.595" endtime="20201112 09:56:19.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:19.633" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:19.606" endtime="20201112 09:56:19.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:19.644" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 09:56:19.642" endtime="20201112 09:56:19.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:19.649" level="INFO">VALUE: [0.00011779099999999904, 0.00011702800000000513, 0.0001176249999999962, 0.00011813900000000321, 0.00011625000000000524, 0.00011745800000000084, 0.00011679199999999751, 0.00011766699999999491, 0.00011676399999999837, 0.00011651399999999812, 0.00011647199999999941, 0.00011626300000000533, 0.00011654199999999726, 0.00011819399999999508, 0.00011655600000000377, 0.00011766700000000185, 0.00011736099999999638, 0.0001164300000000007, 0.0001170699999999969, 0.00011716700000000135, 0.00011662500000000214, 0.00011654199999999726, 0.0001168049999999976, 0.00011783299999999775, 0.0001169170000000011, 0.00011677799999999794, 0.00011648699999999845, 0.00011711099999999613, 0.00011806900000000536, 0.00011636100000000232, 0.0001173049999999981, 0.00011681999999999665, 0.00011763899999999577, 0.00011695800000000034, 0.00011626400000000481, 0.00011638900000000146, 0.00011629199999999701, 0.00011666600000000138, 0.00011645799999999984, 0.00011683299999999675, 0.00011651299999999865, 0.00011642999999999376, 0.00011749999999999955, 0.00011649999999999855, 0.00011750000000000649, 0.00011798600000000048, 0.00011694500000000024, 0.0001165699999999964, 0.00011670800000000009, 0.00011808399999999747]</msg>
<status status="PASS" starttime="20201112 09:56:19.646" endtime="20201112 09:56:19.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.635" endtime="20201112 09:56:19.652"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:19.659" endtime="20201112 09:56:19.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:19.667" endtime="20201112 09:56:19.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.663" endtime="20201112 09:56:19.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.654" endtime="20201112 09:56:19.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.137" endtime="20201112 09:56:19.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.136" endtime="20201112 09:56:19.693"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:19.715" endtime="20201112 09:56:19.737"></status>
</kw>
<msg timestamp="20201112 09:56:19.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:19.712" endtime="20201112 09:56:19.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:19.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:19.740" endtime="20201112 09:56:19.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:19.746" endtime="20201112 09:56:19.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.705" endtime="20201112 09:56:19.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.699" endtime="20201112 09:56:19.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:19.769" endtime="20201112 09:56:20.115"></status>
</kw>
<msg timestamp="20201112 09:56:20.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040182667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040300708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:19.766" endtime="20201112 09:56:20.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:20.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040182667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040300708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:20.124" endtime="20201112 09:56:20.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:20.142" endtime="20201112 09:56:20.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.759" endtime="20201112 09:56:20.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.754" endtime="20201112 09:56:20.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:20.162" level="INFO">${RESULT} = [{'time': 0.040300708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011804099999999929, 'source_diff': 0.00011804099999999929}, {'time': 0.040427056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:20.154" endtime="20201112 09:56:20.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:20.192" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:20.164" endtime="20201112 09:56:20.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:20.202" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 09:56:20.200" endtime="20201112 09:56:20.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:20.208" level="INFO">VALUE: [0.00011804099999999929, 0.00011725000000000624, 0.00011809699999999757, 0.00011858399999999797, 0.00011841600000000313, 0.0001173750000000029, 0.00011877700000000047, 0.00011859699999999807, 0.00011766700000000185, 0.00011888899999999702, 0.00011772200000000066, 0.00011783299999999775, 0.00011762500000000314, 0.00011763900000000271, 0.00011766600000000238, 0.00011786100000000382, 0.00011744500000000074, 0.00011748599999999998, 0.0001186249999999972, 0.0001176379999999963, 0.00011780599999999808, 0.00011888800000000449, 0.00011801399999999962, 0.00011723599999999973, 0.00011757000000000434, 0.00011866700000000285, 0.00011784700000000425, 0.0001177499999999998, 0.00011834699999999782, 0.00011751399999999912, 0.0001182500000000003, 0.00011723599999999973, 0.00011834699999999782, 0.00011751400000000606, 0.00011801400000000656, 0.00011808399999999747, 0.00011766700000000185, 0.00011755600000000477, 0.00011879100000000004, 0.00011798600000000048, 0.00011797199999999397, 0.00011904199999999976, 0.0001173049999999981, 0.00011741599999999519, 0.00011754100000000572, 0.00011744500000000074, 0.00011836100000000432, 0.00011798600000000048, 0.00011895800000000234, 0.00011847199999999447]</msg>
<status status="PASS" starttime="20201112 09:56:20.205" endtime="20201112 09:56:20.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:20.194" endtime="20201112 09:56:20.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:20.217" endtime="20201112 09:56:20.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:20.225" endtime="20201112 09:56:20.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:20.221" endtime="20201112 09:56:20.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:20.213" endtime="20201112 09:56:20.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.695" endtime="20201112 09:56:20.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.694" endtime="20201112 09:56:20.251"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:20.273" endtime="20201112 09:56:20.293"></status>
</kw>
<msg timestamp="20201112 09:56:20.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:20.270" endtime="20201112 09:56:20.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:20.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:20.297" endtime="20201112 09:56:20.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:20.303" endtime="20201112 09:56:20.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:20.263" endtime="20201112 09:56:20.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:20.257" endtime="20201112 09:56:20.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:20.326" endtime="20201112 09:56:20.659"></status>
</kw>
<msg timestamp="20201112 09:56:20.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040027, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040147056, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:56:20.323" endtime="20201112 09:56:20.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:20.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040027, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040147056, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:56:20.668" endtime="20201112 09:56:20.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:20.686" endtime="20201112 09:56:20.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:20.315" endtime="20201112 09:56:20.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:20.311" endtime="20201112 09:56:20.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:20.705" level="INFO">${RESULT} = [{'time': 0.040147056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012005600000000033, 'source_diff': 0.00012005600000000033}, {'time': 0.040272417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:20.696" endtime="20201112 09:56:20.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:20.734" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:20.707" endtime="20201112 09:56:20.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:20.745" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 09:56:20.743" endtime="20201112 09:56:20.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:20.751" level="INFO">VALUE: [0.00012005600000000033, 0.0001194449999999958, 0.00011838900000000346, 0.0001193050000000001, 0.0001191950000000025, 0.00011837499999999695, 0.0001184170000000026, 0.00011868099999999548, 0.00011891600000000363, 0.00011969499999999605, 0.0001197630000000019, 0.00011870800000000209, 0.00011863900000000371, 0.0001185829999999985, 0.00011866700000000285, 0.00011838899999999652, 0.00011998600000000248, 0.00011862500000000414, 0.0001187500000000008, 0.00011969399999999658, 0.00011927800000000044, 0.00011861200000000405, 0.00012000000000000205, 0.00011952800000000069, 0.00011851400000000012, 0.00011963800000000524, 0.00011934699999999882, 0.00011944400000000327, 0.00011861099999999763, 0.00011915299999999684, 0.00011994400000000377, 0.00011866700000000285, 0.00011859699999999807, 0.00011861099999999763, 0.00011933399999999872, 0.00012015199999999837, 0.00012016699999999741, 0.00011963899999999777, 0.00011949999999999461, 0.00011894400000000277, 0.00011883299999999875, 0.00011897199999999497, 0.0001182370000000002, 0.00011998700000000195, 0.00011847200000000141, 0.000120083, 0.00011833299999999825, 0.00011833400000000466, 0.00011855599999999883, 0.00011952800000000069]</msg>
<status status="PASS" starttime="20201112 09:56:20.748" endtime="20201112 09:56:20.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:20.736" endtime="20201112 09:56:20.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:20.760" endtime="20201112 09:56:20.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:20.768" endtime="20201112 09:56:20.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:20.764" endtime="20201112 09:56:20.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:20.755" endtime="20201112 09:56:20.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:20.253" endtime="20201112 09:56:20.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:20.252" endtime="20201112 09:56:20.794"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:20.816" endtime="20201112 09:56:20.836"></status>
</kw>
<msg timestamp="20201112 09:56:20.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:20.813" endtime="20201112 09:56:20.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:20.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:20.840" endtime="20201112 09:56:20.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:20.846" endtime="20201112 09:56:20.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:20.806" endtime="20201112 09:56:20.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:20.800" endtime="20201112 09:56:20.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:20.869" endtime="20201112 09:56:21.202"></status>
</kw>
<msg timestamp="20201112 09:56:21.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03996475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040085236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:56:20.866" endtime="20201112 09:56:21.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03996475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040085236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:56:21.212" endtime="20201112 09:56:21.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:21.229" endtime="20201112 09:56:21.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:20.859" endtime="20201112 09:56:21.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:20.854" endtime="20201112 09:56:21.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:21.248" level="INFO">${RESULT} = [{'time': 0.040085236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012048600000000298, 'source_diff': 0.00012048600000000298}, {'time': 0.040210597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:21.239" endtime="20201112 09:56:21.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:21.278" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:21.250" endtime="20201112 09:56:21.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.288" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 09:56:21.286" endtime="20201112 09:56:21.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.294" level="INFO">VALUE: [0.00012048600000000298, 0.00012065299999999834, 0.00011990300000000453, 0.00011998700000000195, 0.00011959800000000548, 0.00012015299999999784, 0.00012013899999999827, 0.0001195699999999994, 0.00011954200000000026, 0.00012070900000000356, 0.0001199029999999976, 0.00012032000000000015, 0.00011933299999999925, 0.0001201379999999988, 0.00011972200000000266, 0.00011987499999999846, 0.00012084700000000032, 0.0001201249999999987, 0.0001206249999999992, 0.00011943099999999623, 0.0001208750000000064, 0.00012055500000000136, 0.00011926400000000087, 0.00012126399999999593, 0.00012033399999999972, 0.00012023599999999579, 0.00012030600000000058, 0.00011991699999999716, 0.0001202779999999945, 0.0001204449999999968, 0.00011938899999999752, 0.00011950000000000155, 0.00012049999999999561, 0.00011973600000000223, 0.00012045800000000384, 0.00012009699999999957, 0.00012001399999999468, 0.00012101400000000262, 0.0001209579999999974, 0.00012083300000000075, 0.0001201249999999987, 0.00011966600000000438, 0.000120083, 0.00011934799999999829, 0.00011930599999999958, 0.00012109800000000004, 0.0001197500000000018, 0.0001194579999999959, 0.0001204300000000047, 0.00012044399999999733]</msg>
<status status="PASS" starttime="20201112 09:56:21.291" endtime="20201112 09:56:21.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.279" endtime="20201112 09:56:21.297"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:21.303" endtime="20201112 09:56:21.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:21.311" endtime="20201112 09:56:21.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.307" endtime="20201112 09:56:21.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.299" endtime="20201112 09:56:21.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:20.796" endtime="20201112 09:56:21.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:20.795" endtime="20201112 09:56:21.337"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:21.359" endtime="20201112 09:56:21.379"></status>
</kw>
<msg timestamp="20201112 09:56:21.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:21.356" endtime="20201112 09:56:21.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:21.383" endtime="20201112 09:56:21.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:21.389" endtime="20201112 09:56:21.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.349" endtime="20201112 09:56:21.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.343" endtime="20201112 09:56:21.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:21.412" endtime="20201112 09:56:21.747"></status>
</kw>
<msg timestamp="20201112 09:56:21.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039943097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040063361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:21.409" endtime="20201112 09:56:21.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039943097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040063361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:21.756" endtime="20201112 09:56:21.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:21.774" endtime="20201112 09:56:21.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.402" endtime="20201112 09:56:21.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.397" endtime="20201112 09:56:21.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:21.793" level="INFO">${RESULT} = [{'time': 0.040063361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012026400000000187, 'source_diff': 0.00012026400000000187}, {'time': 0.040189708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:21.784" endtime="20201112 09:56:21.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:21.822" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:21.795" endtime="20201112 09:56:21.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.833" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 09:56:21.831" endtime="20201112 09:56:21.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.838" level="INFO">VALUE: [0.00012026400000000187, 0.00012088899999999903, 0.00012092999999999826, 0.00012027800000000144, 0.0001204029999999981, 0.00012138899999999953, 0.0001209029999999986, 0.00012030599999999364, 0.00012115299999999884, 0.00012229199999999607, 0.00012026400000000187, 0.00012093100000000467, 0.00012090300000000553, 0.0001215700000000014, 0.00012199999999999711, 0.00012030600000000058, 0.00012104100000000229, 0.00012142999999999876, 0.00012061099999999964, 0.00012104200000000176, 0.00012205499999999592, 0.00012170799999999815, 0.00012065300000000528, 0.00012154100000000279, 0.00012158400000000097, 0.00012066699999999791, 0.00012102799999999525, 0.00012198599999999754, 0.00012201399999999668, 0.00012216599999999994, 0.00012038899999999852, 0.00012074999999999586, 0.00012036099999999939, 0.00012148599999999704, 0.000121083000000001, 0.0001207229999999962, 0.00012055600000000083, 0.00012052800000000169, 0.00012036099999999939, 0.00012187500000000046, 0.00012077800000000194, 0.00012038899999999852, 0.00012097199999999697, 0.00012043099999999723, 0.00012113899999999928, 0.00012100000000000305, 0.00012120800000000459, 0.0001222080000000056, 0.0001204579999999969, 0.0001214449999999978]</msg>
<status status="PASS" starttime="20201112 09:56:21.835" endtime="20201112 09:56:21.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.824" endtime="20201112 09:56:21.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:21.848" endtime="20201112 09:56:21.850"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:21.856" endtime="20201112 09:56:21.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.852" endtime="20201112 09:56:21.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.843" endtime="20201112 09:56:21.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.339" endtime="20201112 09:56:21.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.338" endtime="20201112 09:56:21.882"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:21.904" endtime="20201112 09:56:21.924"></status>
</kw>
<msg timestamp="20201112 09:56:21.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:21.901" endtime="20201112 09:56:21.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:21.927" endtime="20201112 09:56:21.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:21.934" endtime="20201112 09:56:21.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.894" endtime="20201112 09:56:21.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.888" endtime="20201112 09:56:21.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:21.957" endtime="20201112 09:56:22.292"></status>
</kw>
<msg timestamp="20201112 09:56:22.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039903083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040024764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:21.953" endtime="20201112 09:56:22.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:22.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039903083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040024764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:22.301" endtime="20201112 09:56:22.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:22.318" endtime="20201112 09:56:22.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.946" endtime="20201112 09:56:22.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.942" endtime="20201112 09:56:22.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:22.339" level="INFO">${RESULT} = [{'time': 0.040024764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012168099999999848, 'source_diff': 0.00012168099999999848}, {'time': 0.040153139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:22.330" endtime="20201112 09:56:22.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:22.368" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:22.341" endtime="20201112 09:56:22.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:22.379" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 09:56:22.377" endtime="20201112 09:56:22.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:22.384" level="INFO">VALUE: [0.00012168099999999848, 0.0001214449999999978, 0.00012288900000000103, 0.00012208400000000147, 0.00012173600000000423, 0.00012247299999999794, 0.0001216250000000002, 0.00012311100000000214, 0.00012274999999999786, 0.000121695000000005, 0.00012277800000000394, 0.000122083000000002, 0.00012265300000000035, 0.0001224160000000002, 0.0001219449999999983, 0.00012233400000000172, 0.00012168099999999848, 0.00012213900000000028, 0.00012137499999999996, 0.00012148599999999704, 0.00012182000000000165, 0.00012215299999999985, 0.0001229160000000007, 0.00012155500000000236, 0.00012223699999999726, 0.00012197199999999797, 0.0001222359999999978, 0.0001219029999999996, 0.0001225559999999959, 0.00012166700000000585, 0.00012151400000000312, 0.00012215200000000037, 0.0001223050000000031, 0.00012242999999999976, 0.00012136199999999986, 0.0001224999999999976, 0.00012133400000000072, 0.00012230599999999564, 0.00012142999999999876, 0.00012204200000000276, 0.00012154200000000226, 0.00012201399999999668, 0.00012163899999999978, 0.00012227800000000344, 0.0001223329999999953, 0.00012213900000000028, 0.00012305600000000333, 0.0001225280000000037, 0.00012161100000000064, 0.00012143099999999823]</msg>
<status status="PASS" starttime="20201112 09:56:22.381" endtime="20201112 09:56:22.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.370" endtime="20201112 09:56:22.388"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:22.394" endtime="20201112 09:56:22.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:22.402" endtime="20201112 09:56:22.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.398" endtime="20201112 09:56:22.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.389" endtime="20201112 09:56:22.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.884" endtime="20201112 09:56:22.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.883" endtime="20201112 09:56:22.428"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:22.450" endtime="20201112 09:56:22.470"></status>
</kw>
<msg timestamp="20201112 09:56:22.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:22.447" endtime="20201112 09:56:22.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:22.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:22.473" endtime="20201112 09:56:22.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:22.480" endtime="20201112 09:56:22.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.440" endtime="20201112 09:56:22.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.434" endtime="20201112 09:56:22.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:22.503" endtime="20201112 09:56:22.837"></status>
</kw>
<msg timestamp="20201112 09:56:22.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039987194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040110833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:22.499" endtime="20201112 09:56:22.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:22.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039987194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040110833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:22.846" endtime="20201112 09:56:22.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:22.864" endtime="20201112 09:56:22.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.492" endtime="20201112 09:56:22.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.488" endtime="20201112 09:56:22.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:22.883" level="INFO">${RESULT} = [{'time': 0.040110833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012363900000000178, 'source_diff': 0.00012363900000000178}, {'time': 0.040241222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:22.874" endtime="20201112 09:56:22.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:22.912" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:22.885" endtime="20201112 09:56:22.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:22.923" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 09:56:22.921" endtime="20201112 09:56:22.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:22.928" level="INFO">VALUE: [0.00012363900000000178, 0.00012302799999999725, 0.00012286100000000189, 0.0001238329999999968, 0.00012297199999999897, 0.0001225700000000024, 0.00012356900000000393, 0.00012254100000000379, 0.0001231250000000017, 0.0001235700000000034, 0.00012311100000000214, 0.00012393100000000074, 0.00012338900000000153, 0.0001228050000000036, 0.00012247199999999847, 0.0001240559999999974, 0.00012401399999999868, 0.00012394400000000083, 0.00012269399999999958, 0.0001241250000000027, 0.0001225700000000024, 0.00012276299999999796, 0.00012408299999999706, 0.00012280600000000308, 0.0001239999999999991, 0.0001227359999999983, 0.00012270799999999915, 0.0001239580000000004, 0.0001232229999999987, 0.00012265200000000087, 0.00012315199999999443, 0.00012309700000000257, 0.00012288900000000103, 0.0001232909999999976, 0.00012391599999999475, 0.00012387500000000246, 0.00012295899999999887, 0.00012276299999999796, 0.00012270799999999915, 0.00012244399999999933, 0.00012300000000000505, 0.00012288900000000103, 0.00012259700000000207, 0.00012293099999999973, 0.0001234999999999986, 0.00012276400000000437, 0.0001230129999999982, 0.00012352799999999775, 0.00012381899999999724, 0.00012416700000000142]</msg>
<status status="PASS" starttime="20201112 09:56:22.925" endtime="20201112 09:56:22.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.914" endtime="20201112 09:56:22.931"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:22.938" endtime="20201112 09:56:22.940"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:22.946" endtime="20201112 09:56:22.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.941" endtime="20201112 09:56:22.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.933" endtime="20201112 09:56:22.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.430" endtime="20201112 09:56:22.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.429" endtime="20201112 09:56:22.971"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:22.994" endtime="20201112 09:56:23.014"></status>
</kw>
<msg timestamp="20201112 09:56:23.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:22.991" endtime="20201112 09:56:23.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:23.018" endtime="20201112 09:56:23.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:23.024" endtime="20201112 09:56:23.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.983" endtime="20201112 09:56:23.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.978" endtime="20201112 09:56:23.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:23.047" endtime="20201112 09:56:23.381"></status>
</kw>
<msg timestamp="20201112 09:56:23.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039898708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040023236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:23.043" endtime="20201112 09:56:23.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039898708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040023236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:23.390" endtime="20201112 09:56:23.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:23.408" endtime="20201112 09:56:23.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.036" endtime="20201112 09:56:23.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.032" endtime="20201112 09:56:23.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:23.426" level="INFO">${RESULT} = [{'time': 0.040023236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012452799999999875, 'source_diff': 0.00012452799999999875}, {'time': 0.040158681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:23.418" endtime="20201112 09:56:23.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:23.456" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:23.429" endtime="20201112 09:56:23.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.467" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 09:56:23.465" endtime="20201112 09:56:23.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.472" level="INFO">VALUE: [0.00012452799999999875, 0.00012474999999999986, 0.00012497200000000097, 0.00012448699999999951, 0.00012491700000000217, 0.00012424999999999936, 0.0001237229999999992, 0.0001233050000000041, 0.00012363899999999484, 0.00012494400000000183, 0.000125292000000006, 0.00012338900000000153, 0.00012447200000000047, 0.00012404099999999835, 0.0001245559999999979, 0.00012437499999999602, 0.0001248329999999978, 0.0001240979999999961, 0.00012413900000000228, 0.0001239030000000016, 0.000125083000000005, 0.00012530599999999864, 0.0001239999999999991, 0.00012419399999999414, 0.00012466699999999498, 0.00012347299999999894, 0.00012374999999999886, 0.0001252079999999947, 0.00012420800000000065, 0.00012455600000000483, 0.00012377699999999853, 0.0001240559999999974, 0.00012531899999999874, 0.00012522200000000122, 0.00012474999999999986, 0.00012397199999999997, 0.00012501399999999968, 0.00012362499999999527, 0.00012369399999999364, 0.0001250000000000001, 0.0001237500000000058, 0.00012351399999999818, 0.000124777999999999, 0.0001250689999999985, 0.00012330499999999717, 0.00012494400000000183, 0.00012392999999999432, 0.00012405600000000433, 0.00012363900000000178, 0.00012388900000000203]</msg>
<status status="PASS" starttime="20201112 09:56:23.469" endtime="20201112 09:56:23.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.458" endtime="20201112 09:56:23.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:23.482" endtime="20201112 09:56:23.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:23.490" endtime="20201112 09:56:23.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.485" endtime="20201112 09:56:23.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.477" endtime="20201112 09:56:23.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.974" endtime="20201112 09:56:23.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.972" endtime="20201112 09:56:23.516"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:23.538" endtime="20201112 09:56:23.558"></status>
</kw>
<msg timestamp="20201112 09:56:23.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:23.535" endtime="20201112 09:56:23.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:23.561" endtime="20201112 09:56:23.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:23.568" endtime="20201112 09:56:23.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.528" endtime="20201112 09:56:23.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.522" endtime="20201112 09:56:23.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:23.591" endtime="20201112 09:56:23.925"></status>
</kw>
<msg timestamp="20201112 09:56:23.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040113111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04023875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:56:23.587" endtime="20201112 09:56:23.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040113111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04023875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:56:23.934" endtime="20201112 09:56:23.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:23.952" endtime="20201112 09:56:23.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.580" endtime="20201112 09:56:23.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.576" endtime="20201112 09:56:23.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:23.970" level="INFO">${RESULT} = [{'time': 0.04023875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012563899999999684, 'source_diff': 0.00012563899999999684}, {'time': 0.040372125, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:56:23.961" endtime="20201112 09:56:23.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:24.000" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:23.972" endtime="20201112 09:56:24.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.011" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 09:56:24.008" endtime="20201112 09:56:24.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.016" level="INFO">VALUE: [0.00012563899999999684, 0.00012456900000000493, 0.00012448600000000004, 0.0001249580000000014, 0.00012591700000000317, 0.0001249309999999948, 0.0001255979999999976, 0.0001247360000000003, 0.0001250000000000001, 0.00012565300000000335, 0.000124568999999998, 0.00012561100000000464, 0.0001243329999999973, 0.00012584699999999838, 0.00012512499999999677, 0.00012516700000000242, 0.00012463899999999584, 0.00012556999999999846, 0.00012481899999999824, 0.000124777999999999, 0.00012437500000000296, 0.0001251250000000037, 0.0001254160000000032, 0.0001243480000000033, 0.00012592999999999632, 0.00012576400000000043, 0.0001257079999999952, 0.00012442999999999482, 0.00012573599999999435, 0.00012543100000000224, 0.0001252909999999996, 0.00012443100000000124, 0.0001251109999999972, 0.00012479199999999857, 0.0001244999999999996, 0.00012448600000000004, 0.00012513900000000328, 0.00012583399999999828, 0.000125472999999994, 0.00012438900000000253, 0.0001246250000000032, 0.00012619400000000308, 0.00012490299999999566, 0.00012474999999999986, 0.00012572199999999478, 0.0001260130000000012, 0.00012459700000000407, 0.00012534699999999788, 0.0001249030000000026, 0.00012506999999999796]</msg>
<status status="PASS" starttime="20201112 09:56:24.013" endtime="20201112 09:56:24.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.002" endtime="20201112 09:56:24.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:24.025" endtime="20201112 09:56:24.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:24.034" endtime="20201112 09:56:24.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.029" endtime="20201112 09:56:24.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.021" endtime="20201112 09:56:24.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.518" endtime="20201112 09:56:24.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.516" endtime="20201112 09:56:24.060"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:24.082" endtime="20201112 09:56:24.102"></status>
</kw>
<msg timestamp="20201112 09:56:24.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:24.079" endtime="20201112 09:56:24.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:24.106" endtime="20201112 09:56:24.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:24.112" endtime="20201112 09:56:24.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.072" endtime="20201112 09:56:24.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.066" endtime="20201112 09:56:24.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:24.135" endtime="20201112 09:56:24.467"></status>
</kw>
<msg timestamp="20201112 09:56:24.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040159389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040286472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:24.132" endtime="20201112 09:56:24.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040159389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040286472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:24.476" endtime="20201112 09:56:24.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:24.494" endtime="20201112 09:56:24.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.124" endtime="20201112 09:56:24.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.120" endtime="20201112 09:56:24.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:24.515" level="INFO">${RESULT} = [{'time': 0.040286472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012708300000000006, 'source_diff': 0.00012708300000000006}, {'time': 0.040421792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:24.506" endtime="20201112 09:56:24.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:24.544" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:24.517" endtime="20201112 09:56:24.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.555" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 09:56:24.553" endtime="20201112 09:56:24.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.560" level="INFO">VALUE: [0.00012708300000000006, 0.00012604199999999982, 0.00012652800000000075, 0.000126165999999997, 0.0001264309999999963, 0.00012642999999999682, 0.00012638900000000453, 0.00012698600000000254, 0.0001252779999999995, 0.00012643100000000324, 0.00012687499999999852, 0.00012536100000000439, 0.00012654200000000032, 0.00012634699999999888, 0.00012597200000000197, 0.00012675000000000186, 0.00012536099999999745, 0.0001263199999999992, 0.00012612499999999777, 0.00012693000000000426, 0.0001252909999999996, 0.0001270690000000005, 0.0001262780000000005, 0.00012722199999999628, 0.000125568999999999, 0.0001263889999999976, 0.00012577700000000053, 0.0001264450000000028, 0.00012645899999999544, 0.0001254030000000031, 0.00012679200000000057, 0.0001264580000000029, 0.00012529199999999907, 0.00012565300000000335, 0.00012645899999999544, 0.0001262910000000006, 0.00012704199999999388, 0.0001264439999999964, 0.00012681900000000024, 0.0001253329999999983, 0.00012590299999999666, 0.00012656999999999946, 0.0001270560000000004, 0.00012665300000000435, 0.00012659699999999913, 0.00012586100000000489, 0.0001265000000000016, 0.0001272910000000016, 0.00012556999999999846, 0.0001262360000000018]</msg>
<status status="PASS" starttime="20201112 09:56:24.558" endtime="20201112 09:56:24.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.546" endtime="20201112 09:56:24.564"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:24.570" endtime="20201112 09:56:24.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:24.578" endtime="20201112 09:56:24.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.574" endtime="20201112 09:56:24.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.565" endtime="20201112 09:56:24.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.062" endtime="20201112 09:56:24.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.061" endtime="20201112 09:56:24.604"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:24.626" endtime="20201112 09:56:24.646"></status>
</kw>
<msg timestamp="20201112 09:56:24.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:24.623" endtime="20201112 09:56:24.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:24.650" endtime="20201112 09:56:24.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:24.656" endtime="20201112 09:56:24.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.616" endtime="20201112 09:56:24.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.610" endtime="20201112 09:56:24.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:24.679" endtime="20201112 09:56:25.012"></status>
</kw>
<msg timestamp="20201112 09:56:25.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039963542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040090931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:24.676" endtime="20201112 09:56:25.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:25.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039963542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040090931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:25.021" endtime="20201112 09:56:25.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:25.039" endtime="20201112 09:56:25.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.669" endtime="20201112 09:56:25.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.664" endtime="20201112 09:56:25.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:25.057" level="INFO">${RESULT} = [{'time': 0.040090931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012738900000000553, 'source_diff': 0.00012738900000000553}, {'time': 0.040228319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:25.049" endtime="20201112 09:56:25.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:25.087" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:25.059" endtime="20201112 09:56:25.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:25.098" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 09:56:25.095" endtime="20201112 09:56:25.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:25.103" level="INFO">VALUE: [0.00012738900000000553, 0.00012699999999999517, 0.0001276109999999997, 0.0001263329999999993, 0.00012801399999999574, 0.0001264030000000041, 0.00012631899999999974, 0.00012715300000000485, 0.00012715300000000485, 0.0001277079999999972, 0.00012626400000000093, 0.00012786099999999995, 0.00012755500000000142, 0.00012808300000000106, 0.0001276109999999997, 0.00012720899999999619, 0.00012722200000000322, 0.00012709699999999963, 0.0001279439999999979, 0.0001265000000000016, 0.00012716700000000442, 0.0001269580000000034, 0.00012641699999999673, 0.00012651400000000118, 0.00012830600000000164, 0.0001278189999999943, 0.00012658299999999956, 0.00012731900000000074, 0.00012665199999999793, 0.00012747200000000347, 0.00012744400000000433, 0.0001266529999999974, 0.00012737499999999902, 0.00012709699999999963, 0.0001278889999999991, 0.00012726400000000193, 0.00012640199999999768, 0.00012702699999999484, 0.00012775000000000286, 0.00012745900000000338, 0.00012823700000000327, 0.00012786099999999995, 0.00012751400000000218, 0.00012787499999999952, 0.00012681900000000024, 0.00012812499999999977, 0.00012779200000000157, 0.00012819499999999762, 0.00012694499999999637, 0.00012752800000000175]</msg>
<status status="PASS" starttime="20201112 09:56:25.100" endtime="20201112 09:56:25.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:25.089" endtime="20201112 09:56:25.106"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:25.112" endtime="20201112 09:56:25.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:25.121" endtime="20201112 09:56:25.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:25.116" endtime="20201112 09:56:25.144"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:25.108" endtime="20201112 09:56:25.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.606" endtime="20201112 09:56:25.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.605" endtime="20201112 09:56:25.146"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:25.169" endtime="20201112 09:56:25.189"></status>
</kw>
<msg timestamp="20201112 09:56:25.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:25.165" endtime="20201112 09:56:25.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:25.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:25.192" endtime="20201112 09:56:25.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:25.199" endtime="20201112 09:56:25.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:25.158" endtime="20201112 09:56:25.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:25.153" endtime="20201112 09:56:25.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:25.223" endtime="20201112 09:56:25.557"></status>
</kw>
<msg timestamp="20201112 09:56:25.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039985972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040114778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:25.220" endtime="20201112 09:56:25.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:25.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039985972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040114778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:25.566" endtime="20201112 09:56:25.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:25.584" endtime="20201112 09:56:25.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:25.212" endtime="20201112 09:56:25.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:25.207" endtime="20201112 09:56:25.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:25.603" level="INFO">${RESULT} = [{'time': 0.040114778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001288059999999952, 'source_diff': 0.0001288059999999952}, {'time': 0.040254236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:56:25.594" endtime="20201112 09:56:25.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:25.633" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:25.605" endtime="20201112 09:56:25.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:25.644" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 09:56:25.641" endtime="20201112 09:56:25.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:25.649" level="INFO">VALUE: [0.0001288059999999952, 0.00012847199999999753, 0.0001277360000000033, 0.00012884700000000138, 0.00012763900000000578, 0.0001273889999999986, 0.00012794499999999737, 0.00012897199999999803, 0.00012751400000000218, 0.00012747300000000295, 0.0001275560000000009, 0.00012918100000000599, 0.0001274450000000038, 0.00012833299999999437, 0.00012787499999999952, 0.0001287360000000043, 0.00012847200000000447, 0.00012787499999999952, 0.00012925000000000436, 0.00012924999999999742, 0.00012842999999999882, 0.00012869399999999864, 0.00012780600000000114, 0.00012731900000000074, 0.00012905500000000292, 0.00012909700000000163, 0.0001283200000000012, 0.00012922199999999828, 0.00012819399999999814, 0.0001284450000000048, 0.00012757000000000046, 0.00012922199999999828, 0.00012901399999999674, 0.0001280279999999953, 0.00012891599999999975, 0.00012751400000000218, 0.00012813799999999986, 0.0001275000000000026, 0.0001278330000000008, 0.0001291110000000012, 0.0001273189999999938, 0.00012851399999999624, 0.0001290969999999947, 0.00012923599999999785, 0.0001285560000000019, 0.00012919399999999914, 0.00012787499999999952, 0.00012869399999999864, 0.0001289580000000054, 0.00012894400000000583]</msg>
<status status="PASS" starttime="20201112 09:56:25.646" endtime="20201112 09:56:25.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:25.634" endtime="20201112 09:56:25.652"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:25.658" endtime="20201112 09:56:25.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:25.666" endtime="20201112 09:56:25.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:25.662" endtime="20201112 09:56:25.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:25.654" endtime="20201112 09:56:25.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:25.148" endtime="20201112 09:56:25.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:25.147" endtime="20201112 09:56:25.692"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:25.715" endtime="20201112 09:56:25.735"></status>
</kw>
<msg timestamp="20201112 09:56:25.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:25.711" endtime="20201112 09:56:25.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:25.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:25.738" endtime="20201112 09:56:25.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:25.745" endtime="20201112 09:56:25.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:25.704" endtime="20201112 09:56:25.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:25.699" endtime="20201112 09:56:25.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:25.768" endtime="20201112 09:56:26.102"></status>
</kw>
<msg timestamp="20201112 09:56:26.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039967708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040097514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:25.764" endtime="20201112 09:56:26.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039967708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040097514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:26.111" endtime="20201112 09:56:26.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.129" endtime="20201112 09:56:26.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:25.757" endtime="20201112 09:56:26.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:25.753" endtime="20201112 09:56:26.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:26.148" level="INFO">${RESULT} = [{'time': 0.040097514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012980600000000314, 'source_diff': 0.00012980600000000314}, {'time': 0.040232917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:26.139" endtime="20201112 09:56:26.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:26.177" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:26.150" endtime="20201112 09:56:26.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.188" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 09:56:26.186" endtime="20201112 09:56:26.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.194" level="INFO">VALUE: [0.00012980600000000314, 0.000128472999999997, 0.0001294309999999993, 0.00013009700000000263, 0.00012977799999999706, 0.00012940300000000016, 0.00012834800000000035, 0.00013019499999999962, 0.00012858299999999462, 0.00012969399999999964, 0.00012919399999999914, 0.00012841699999999873, 0.00012949999999999767, 0.00012949999999999767, 0.00012940300000000016, 0.00013022199999999928, 0.00012877700000000353, 0.00013005500000000392, 0.00012891599999999975, 0.00012957000000000246, 0.0001293330000000023, 0.00012908299999999512, 0.00012855500000000242, 0.00012991700000000023, 0.00012942999999999982, 0.0001300969999999957, 0.00012958300000000256, 0.00012919499999999862, 0.0001286529999999994, 0.00012936100000000145, 0.0001288059999999952, 0.0001291529999999999, 0.00012929200000000307, 0.00012891699999999923, 0.00012862500000000027, 0.000130166000000001, 0.00012837500000000002, 0.0001287639999999965, 0.00012951399999999724, 0.00012869399999999864, 0.0001283889999999996, 0.00012947199999999853, 0.00012912500000000077, 0.00012841699999999873, 0.00012875000000000386, 0.00012972299999999826, 0.000130166000000001, 0.00013018000000000057, 0.00012830600000000164, 0.00012956899999999605]</msg>
<status status="PASS" starttime="20201112 09:56:26.191" endtime="20201112 09:56:26.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.179" endtime="20201112 09:56:26.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.203" endtime="20201112 09:56:26.206"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:26.211" endtime="20201112 09:56:26.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.207" endtime="20201112 09:56:26.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.199" endtime="20201112 09:56:26.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:25.694" endtime="20201112 09:56:26.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:25.693" endtime="20201112 09:56:26.238"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.261" endtime="20201112 09:56:26.282"></status>
</kw>
<msg timestamp="20201112 09:56:26.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:26.258" endtime="20201112 09:56:26.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:26.285" endtime="20201112 09:56:26.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.291" endtime="20201112 09:56:26.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.250" endtime="20201112 09:56:26.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.244" endtime="20201112 09:56:26.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.314" endtime="20201112 09:56:26.646"></status>
</kw>
<msg timestamp="20201112 09:56:26.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041758792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041889583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:26.311" endtime="20201112 09:56:26.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041758792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041889583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:26.655" endtime="20201112 09:56:26.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.674" endtime="20201112 09:56:26.681"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.304" endtime="20201112 09:56:26.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.299" endtime="20201112 09:56:26.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:26.694" level="INFO">${RESULT} = [{'time': 0.041889583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013079099999999816, 'source_diff': 0.00013079099999999816}, {'time': 0.042031014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:26.686" endtime="20201112 09:56:26.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:26.796" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:26.696" endtime="20201112 09:56:26.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.807" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 09:56:26.804" endtime="20201112 09:56:26.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.812" level="INFO">VALUE: [0.00013079099999999816, 0.0001304310000000003, 0.0001293330000000023, 0.0001295839999999951, 0.00013106899999999755, 0.00012936100000000145, 0.00013104199999999788, 0.00013072299999999926, 0.00013001399999999774, 0.00013084699999999644, 0.000129569000000003, 0.00013113900000000234, 0.00013115200000000243, 0.00012987500000000152, 0.0001313479999999964, 0.00013113900000000234, 0.0001310969999999967, 0.0001298200000000027, 0.00013066700000000098, 0.00013112500000000277, 0.00013101299999999927, 0.0001296110000000017, 0.00013091600000000175, 0.00012983399999999534, 0.0001307639999999985, 0.00013068100000000055, 0.000130263999999998, 0.00013041700000000073, 0.00013079200000000457, 0.0001307080000000002, 0.00013013900000000134, 0.00013023599999999885, 0.0001293890000000006, 0.00012979199999999663, 0.00013083399999999634, 0.00013091600000000175, 0.00012956899999999605, 0.00013123599999999985, 0.00012941600000000025, 0.00013069400000000064, 0.00013081900000000424, 0.00013059700000000313, 0.0001294439999999994, 0.000130860999999996, 0.00013002700000000478, 0.00013087499999999558, 0.00013081900000000424, 0.000130651999999995, 0.00013095800000000046, 0.00013079199999999763]</msg>
<status status="PASS" starttime="20201112 09:56:26.809" endtime="20201112 09:56:26.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.798" endtime="20201112 09:56:26.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.821" endtime="20201112 09:56:26.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:26.830" endtime="20201112 09:56:26.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.825" endtime="20201112 09:56:26.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.817" endtime="20201112 09:56:26.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.240" endtime="20201112 09:56:26.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.239" endtime="20201112 09:56:26.855"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.879" endtime="20201112 09:56:26.899"></status>
</kw>
<msg timestamp="20201112 09:56:26.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:26.875" endtime="20201112 09:56:26.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:26.903" endtime="20201112 09:56:26.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.909" endtime="20201112 09:56:26.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.867" endtime="20201112 09:56:26.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.862" endtime="20201112 09:56:26.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.932" endtime="20201112 09:56:27.264"></status>
</kw>
<msg timestamp="20201112 09:56:27.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041163514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041295472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:26.929" endtime="20201112 09:56:27.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:27.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041163514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041295472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:27.274" endtime="20201112 09:56:27.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:27.292" endtime="20201112 09:56:27.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.922" endtime="20201112 09:56:27.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.917" endtime="20201112 09:56:27.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:27.309" level="INFO">${RESULT} = [{'time': 0.041295472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013195800000000146, 'source_diff': 0.00013195800000000146}, {'time': 0.041434889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:27.301" endtime="20201112 09:56:27.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:27.339" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:27.311" endtime="20201112 09:56:27.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:27.350" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 09:56:27.348" endtime="20201112 09:56:27.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:27.355" level="INFO">VALUE: [0.00013195800000000146, 0.00013151399999999924, 0.00013157000000000446, 0.0001307080000000002, 0.00013190199999999624, 0.0001314440000000014, 0.00013183299999999787, 0.00013104200000000482, 0.00013158299999999762, 0.00013124999999999942, 0.00013144500000000087, 0.0001316530000000024, 0.00013049999999999867, 0.00013134700000000388, 0.00013218100000000205, 0.00013151299999999977, 0.00013158300000000456, 0.00013097200000000003, 0.00013145799999999402, 0.00013068100000000055, 0.00013151399999999924, 0.0001314440000000014, 0.00013112500000000277, 0.00013166700000000198, 0.00013190200000000318, 0.00013118100000000105, 0.0001315969999999972, 0.00013133299999999737, 0.00013173699999999983, 0.000131860999999997, 0.00013227799999999956, 0.0001308890000000021, 0.00013206899999999855, 0.00013187499999999658, 0.00013176300000000002, 0.00013137500000000302, 0.000131860999999997, 0.00013155500000000542, 0.000132264, 0.00013219400000000214, 0.00013190300000000266, 0.00013074999999999892, 0.00013104199999999788, 0.00013166700000000198, 0.0001306530000000014, 0.00013088899999999515, 0.0001307089999999997, 0.0001320980000000041, 0.0001315980000000036, 0.00013052699999999834]</msg>
<status status="PASS" starttime="20201112 09:56:27.352" endtime="20201112 09:56:27.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.341" endtime="20201112 09:56:27.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:27.365" endtime="20201112 09:56:27.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:27.373" endtime="20201112 09:56:27.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.369" endtime="20201112 09:56:27.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.360" endtime="20201112 09:56:27.398"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.857" endtime="20201112 09:56:27.398"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.856" endtime="20201112 09:56:27.399"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:27.421" endtime="20201112 09:56:27.443"></status>
</kw>
<msg timestamp="20201112 09:56:27.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:27.418" endtime="20201112 09:56:27.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:27.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:27.446" endtime="20201112 09:56:27.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:27.453" endtime="20201112 09:56:27.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.410" endtime="20201112 09:56:27.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.405" endtime="20201112 09:56:27.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:27.475" endtime="20201112 09:56:27.810"></status>
</kw>
<msg timestamp="20201112 09:56:27.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041387792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041520597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:27.472" endtime="20201112 09:56:27.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:27.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041387792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041520597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:27.819" endtime="20201112 09:56:27.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:27.837" endtime="20201112 09:56:27.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.465" endtime="20201112 09:56:27.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.461" endtime="20201112 09:56:27.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:27.854" level="INFO">${RESULT} = [{'time': 0.041520597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013280499999999973, 'source_diff': 0.00013280499999999973}, {'time': 0.041659986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:27.845" endtime="20201112 09:56:27.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:27.884" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:27.856" endtime="20201112 09:56:27.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:27.895" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 09:56:27.892" endtime="20201112 09:56:27.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:27.900" level="INFO">VALUE: [0.00013280499999999973, 0.00013162500000000327, 0.00013279199999999963, 0.00013272300000000126, 0.00013195900000000094, 0.00013261099999999776, 0.0001320279999999993, 0.0001332090000000022, 0.00013181999999999777, 0.00013141599999999531, 0.00013263900000000384, 0.00013162499999999633, 0.0001325279999999998, 0.00013261099999999776, 0.00013320899999999525, 0.00013316700000000348, 0.00013204199999999888, 0.00013143099999999436, 0.000131860999999997, 0.00013166700000000198, 0.00013243000000000282, 0.0001315409999999989, 0.00013254199999999938, 0.00013177799999999906, 0.0001325409999999999, 0.00013272200000000178, 0.0001319719999999941, 0.00013305499999999998, 0.00013237500000000402, 0.00013230499999999923, 0.00013322200000000228, 0.00013245799999999502, 0.00013266699999999604, 0.00013140299999999522, 0.00013250000000000067, 0.00013208300000000506, 0.0001324169999999958, 0.00013311099999999826, 0.00013298700000000108, 0.00013195900000000094, 0.00013241599999999631, 0.00013198700000000008, 0.00013255499999999948, 0.0001328059999999992, 0.00013252700000000034, 0.00013291700000000323, 0.0001331389999999974, 0.00013301400000000074, 0.00013134700000000388, 0.0001328059999999992]</msg>
<status status="PASS" starttime="20201112 09:56:27.897" endtime="20201112 09:56:27.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.886" endtime="20201112 09:56:27.903"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:27.909" endtime="20201112 09:56:27.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:27.917" endtime="20201112 09:56:27.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.913" endtime="20201112 09:56:27.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.905" endtime="20201112 09:56:27.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.401" endtime="20201112 09:56:27.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.399" endtime="20201112 09:56:27.943"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:27.965" endtime="20201112 09:56:27.986"></status>
</kw>
<msg timestamp="20201112 09:56:27.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:27.962" endtime="20201112 09:56:27.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:27.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:27.990" endtime="20201112 09:56:27.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:27.996" endtime="20201112 09:56:28.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.955" endtime="20201112 09:56:28.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.950" endtime="20201112 09:56:28.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:28.021" endtime="20201112 09:56:28.357"></status>
</kw>
<msg timestamp="20201112 09:56:28.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039922986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040057167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:28.018" endtime="20201112 09:56:28.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:28.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039922986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040057167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:28.366" endtime="20201112 09:56:28.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:28.387" endtime="20201112 09:56:28.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.009" endtime="20201112 09:56:28.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.004" endtime="20201112 09:56:28.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:28.406" level="INFO">${RESULT} = [{'time': 0.040057167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001341809999999971, 'source_diff': 0.0001341809999999971}, {'time': 0.040196514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:56:28.397" endtime="20201112 09:56:28.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:28.436" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:28.408" endtime="20201112 09:56:28.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:28.447" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 09:56:28.445" endtime="20201112 09:56:28.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:28.452" level="INFO">VALUE: [0.0001341809999999971, 0.00013395800000000346, 0.0001326389999999969, 0.0001340969999999997, 0.00013254200000000632, 0.0001326389999999969, 0.0001338060000000002, 0.0001337090000000027, 0.0001334719999999956, 0.00013404199999999394, 0.0001327770000000006, 0.00013399999999999523, 0.00013343000000000382, 0.00013393000000000432, 0.000133651999999998, 0.00013361099999999876, 0.00013333299999999937, 0.00013258299999999862, 0.00013338899999999765, 0.00013370799999999627, 0.00013372200000000278, 0.00013277800000000006, 0.00013354200000000038, 0.0001337090000000027, 0.00013343000000000382, 0.0001328890000000041, 0.00013373599999999541, 0.000132569000000006, 0.0001340280000000013, 0.00013412499999999883, 0.00013338899999999765, 0.00013354200000000038, 0.00013423700000000233, 0.00013286199999999748, 0.0001341809999999971, 0.00013255599999999895, 0.00013381999999999977, 0.00013381999999999977, 0.00013398599999999566, 0.00013384699999999944, 0.00013251400000000024, 0.00013263900000000384, 0.00013393099999999686, 0.00013397200000000303, 0.0001330969999999987, 0.0001335969999999992, 0.00013380500000000073, 0.00013406900000000055, 0.00013245800000000196, 0.0001336809999999966]</msg>
<status status="PASS" starttime="20201112 09:56:28.449" endtime="20201112 09:56:28.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.438" endtime="20201112 09:56:28.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:28.462" endtime="20201112 09:56:28.464"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:28.470" endtime="20201112 09:56:28.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.466" endtime="20201112 09:56:28.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.457" endtime="20201112 09:56:28.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.945" endtime="20201112 09:56:28.496"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.944" endtime="20201112 09:56:28.496"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:28.518" endtime="20201112 09:56:28.539"></status>
</kw>
<msg timestamp="20201112 09:56:28.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:28.515" endtime="20201112 09:56:28.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:28.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:28.542" endtime="20201112 09:56:28.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:28.549" endtime="20201112 09:56:28.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.508" endtime="20201112 09:56:28.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.502" endtime="20201112 09:56:28.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:28.571" endtime="20201112 09:56:28.911"></status>
</kw>
<msg timestamp="20201112 09:56:28.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040170181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040305069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:28.568" endtime="20201112 09:56:28.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:28.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040170181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040305069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:28.921" endtime="20201112 09:56:28.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:28.939" endtime="20201112 09:56:28.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.561" endtime="20201112 09:56:28.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.556" endtime="20201112 09:56:28.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:28.956" level="INFO">${RESULT} = [{'time': 0.040305069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013488799999999967, 'source_diff': 0.00013488799999999967}, {'time': 0.040446444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:28.947" endtime="20201112 09:56:28.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:28.987" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:28.958" endtime="20201112 09:56:28.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:28.998" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 09:56:28.996" endtime="20201112 09:56:28.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.003" level="INFO">VALUE: [0.00013488799999999967, 0.0001353049999999953, 0.00013448599999999616, 0.00013505599999999451, 0.00013366699999999704, 0.00013490199999999924, 0.00013327800000000056, 0.00013526399999999605, 0.00013484700000000044, 0.00013512499999999983, 0.00013377800000000106, 0.0001336530000000044, 0.00013429099999999472, 0.00013418000000000457, 0.00013513799999999992, 0.00013450000000000267, 0.00013477800000000206, 0.00013483400000000034, 0.00013445900000000344, 0.00013344499999999593, 0.00013484700000000044, 0.00013462499999999933, 0.0001341389999999984, 0.00013511100000000026, 0.00013369400000000364, 0.0001336389999999979, 0.00013333399999999884, 0.0001349719999999971, 0.00013444500000000387, 0.00013398599999999566, 0.00013441600000000525, 0.000135264000000003, 0.00013387500000000552, 0.00013444500000000387, 0.00013507000000000102, 0.00013529200000000213, 0.0001335280000000008, 0.00013462499999999933, 0.00013408300000000012, 0.00013411099999999926, 0.00013456900000000105, 0.00013441599999999831, 0.00013517999999999863, 0.00013423600000000285, 0.00013437499999999908, 0.000134861, 0.00013472200000000378, 0.0001341809999999971, 0.00013473599999999641, 0.00013342999999999688]</msg>
<status status="PASS" starttime="20201112 09:56:29.000" endtime="20201112 09:56:29.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.989" endtime="20201112 09:56:29.007"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:29.013" endtime="20201112 09:56:29.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:29.021" endtime="20201112 09:56:29.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.017" endtime="20201112 09:56:29.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.008" endtime="20201112 09:56:29.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.498" endtime="20201112 09:56:29.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.497" endtime="20201112 09:56:29.047"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:29.069" endtime="20201112 09:56:29.090"></status>
</kw>
<msg timestamp="20201112 09:56:29.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:29.066" endtime="20201112 09:56:29.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:29.093" endtime="20201112 09:56:29.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:29.099" endtime="20201112 09:56:29.103"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.059" endtime="20201112 09:56:29.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.053" endtime="20201112 09:56:29.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:29.122" endtime="20201112 09:56:29.455"></status>
</kw>
<msg timestamp="20201112 09:56:29.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039998694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040134917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:29.119" endtime="20201112 09:56:29.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039998694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040134917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:29.465" endtime="20201112 09:56:29.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:29.482" endtime="20201112 09:56:29.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.112" endtime="20201112 09:56:29.489"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.107" endtime="20201112 09:56:29.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:29.501" level="INFO">${RESULT} = [{'time': 0.040134917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013622299999999782, 'source_diff': 0.00013622299999999782}, {'time': 0.040278333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:29.492" endtime="20201112 09:56:29.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:29.531" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:29.503" endtime="20201112 09:56:29.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.541" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 09:56:29.539" endtime="20201112 09:56:29.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.547" level="INFO">VALUE: [0.00013622299999999782, 0.00013541599999999931, 0.00013526399999999605, 0.00013593099999999886, 0.0001360970000000017, 0.0001348190000000013, 0.0001354719999999976, 0.00013624999999999748, 0.00013588900000000015, 0.00013440300000000516, 0.0001353480000000004, 0.00013477800000000206, 0.00013602700000000384, 0.00013444399999999745, 0.00013604199999999594, 0.00013440299999999822, 0.00013577800000000306, 0.000135861000000001, 0.00013450000000000267, 0.00013442999999999788, 0.00013502799999999537, 0.00013574999999999698, 0.0001361390000000004, 0.0001356809999999986, 0.00013452700000000234, 0.00013572199999999784, 0.00013451400000000224, 0.00013543099999999836, 0.0001355840000000011, 0.00013604199999999594, 0.00013577800000000306, 0.00013556900000000205, 0.0001353610000000005, 0.00013598599999999766, 0.0001361390000000004, 0.00013600000000000417, 0.00013544499999999793, 0.00013499999999999623, 0.0001361390000000004, 0.00013558399999999415, 0.0001361390000000004, 0.00013624999999999748, 0.00013606900000000255, 0.00013584700000000144, 0.00013538899999999965, 0.00013582000000000177, 0.00013595799999999852, 0.00013540299999999922, 0.00013587500000000058, 0.00013495799999999752]</msg>
<status status="PASS" starttime="20201112 09:56:29.544" endtime="20201112 09:56:29.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.532" endtime="20201112 09:56:29.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:29.556" endtime="20201112 09:56:29.559"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:29.564" endtime="20201112 09:56:29.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.560" endtime="20201112 09:56:29.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.552" endtime="20201112 09:56:29.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.049" endtime="20201112 09:56:29.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.048" endtime="20201112 09:56:29.590"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:29.612" endtime="20201112 09:56:29.633"></status>
</kw>
<msg timestamp="20201112 09:56:29.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:29.609" endtime="20201112 09:56:29.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:29.636" endtime="20201112 09:56:29.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:29.643" endtime="20201112 09:56:29.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.602" endtime="20201112 09:56:29.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.596" endtime="20201112 09:56:29.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:29.666" endtime="20201112 09:56:30.001"></status>
</kw>
<msg timestamp="20201112 09:56:30.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039870722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040007458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:29.662" endtime="20201112 09:56:30.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:30.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039870722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040007458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:30.010" endtime="20201112 09:56:30.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:30.028" endtime="20201112 09:56:30.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.655" endtime="20201112 09:56:30.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.651" endtime="20201112 09:56:30.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:30.047" level="INFO">${RESULT} = [{'time': 0.040007458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013673600000000535, 'source_diff': 0.00013673600000000535}, {'time': 0.040148833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:30.038" endtime="20201112 09:56:30.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:30.076" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:30.049" endtime="20201112 09:56:30.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:30.087" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 09:56:30.085" endtime="20201112 09:56:30.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:30.092" level="INFO">VALUE: [0.00013673600000000535, 0.00013561100000000076, 0.00013632000000000227, 0.00013597200000000503, 0.00013699999999999823, 0.00013681899999999636, 0.00013676399999999755, 0.00013594499999999843, 0.000137264000000005, 0.00013561100000000076, 0.00013645799999999902, 0.00013658300000000262, 0.00013647299999999807, 0.0001373060000000037, 0.00013536199999999998, 0.00013569400000000564, 0.00013679200000000363, 0.00013706900000000355, 0.00013699999999999823, 0.00013677799999999712, 0.00013693099999999986, 0.0001364310000000063, 0.00013569400000000564, 0.00013705599999999651, 0.00013675000000000492, 0.0001364169999999998, 0.0001368889999999942, 0.0001372919999999972, 0.0001368060000000032, 0.00013704200000000388, 0.0001368469999999955, 0.00013701400000000474, 0.00013622199999999834, 0.00013715300000000097, 0.00013726399999999805, 0.0001373049999999973, 0.0001365689999999961, 0.00013590299999999972, 0.00013543099999999836, 0.00013695799999999952, 0.0001373610000000025, 0.00013616699999999954, 0.00013729099999999772, 0.00013566700000000598, 0.00013661100000000176, 0.00013666600000000056, 0.00013659800000000166, 0.00013537500000000008, 0.00013726399999999805, 0.00013661100000000176]</msg>
<status status="PASS" starttime="20201112 09:56:30.089" endtime="20201112 09:56:30.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:30.078" endtime="20201112 09:56:30.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:30.102" endtime="20201112 09:56:30.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:30.110" endtime="20201112 09:56:30.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:30.106" endtime="20201112 09:56:30.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:30.097" endtime="20201112 09:56:30.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.592" endtime="20201112 09:56:30.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.591" endtime="20201112 09:56:30.136"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:30.158" endtime="20201112 09:56:30.181"></status>
</kw>
<msg timestamp="20201112 09:56:30.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:30.155" endtime="20201112 09:56:30.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:30.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:30.184" endtime="20201112 09:56:30.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:30.190" endtime="20201112 09:56:30.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:30.148" endtime="20201112 09:56:30.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:30.142" endtime="20201112 09:56:30.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:30.214" endtime="20201112 09:56:30.558"></status>
</kw>
<msg timestamp="20201112 09:56:30.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040264875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040402611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:30.210" endtime="20201112 09:56:30.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:30.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040264875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040402611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:30.567" endtime="20201112 09:56:30.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:30.585" endtime="20201112 09:56:30.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:30.203" endtime="20201112 09:56:30.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:30.199" endtime="20201112 09:56:30.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:30.604" level="INFO">${RESULT} = [{'time': 0.040402611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013773599999999941, 'source_diff': 0.00013773599999999941}, {'time': 0.040551069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:30.595" endtime="20201112 09:56:30.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:30.634" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:30.606" endtime="20201112 09:56:30.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:30.645" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 09:56:30.642" endtime="20201112 09:56:30.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:30.650" level="INFO">VALUE: [0.00013773599999999941, 0.00013766600000000156, 0.0001373190000000038, 0.00013666600000000056, 0.0001369719999999991, 0.0001376390000000019, 0.00013745800000000002, 0.00013776399999999855, 0.0001378480000000029, 0.00013794400000000095, 0.00013683299999999593, 0.0001377640000000055, 0.00013681899999999636, 0.00013793100000000086, 0.0001363610000000015, 0.0001371940000000002, 0.0001374719999999996, 0.0001362919999999962, 0.00013632000000000227, 0.00013772199999999984, 0.00013823599999999991, 0.00013799999999999923, 0.000137346999999996, 0.00013765300000000147, 0.00013661100000000176, 0.00013740300000000122, 0.0001370269999999979, 0.00013749999999999873, 0.00013704199999999694, 0.00013773599999999941, 0.00013702799999999737, 0.00013811099999999632, 0.0001376249999999954, 0.00013723599999999891, 0.000136958999999999, 0.00013793100000000086, 0.00013659699999999525, 0.0001381390000000024, 0.00013776299999999908, 0.00013779200000000463, 0.00013674999999999798, 0.00013816700000000154, 0.0001375280000000048, 0.00013740200000000174, 0.00013802799999999837, 0.00013798599999999966, 0.00013808399999999665, 0.000137652000000002, 0.00013740300000000122, 0.0001375970000000032]</msg>
<status status="PASS" starttime="20201112 09:56:30.647" endtime="20201112 09:56:30.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:30.636" endtime="20201112 09:56:30.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:30.660" endtime="20201112 09:56:30.662"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:30.668" endtime="20201112 09:56:30.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:30.663" endtime="20201112 09:56:30.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:30.655" endtime="20201112 09:56:30.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:30.138" endtime="20201112 09:56:30.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:30.137" endtime="20201112 09:56:30.694"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:30.716" endtime="20201112 09:56:30.737"></status>
</kw>
<msg timestamp="20201112 09:56:30.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:30.713" endtime="20201112 09:56:30.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:30.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:30.740" endtime="20201112 09:56:30.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:30.746" endtime="20201112 09:56:30.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:30.706" endtime="20201112 09:56:30.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:30.700" endtime="20201112 09:56:30.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:30.769" endtime="20201112 09:56:31.102"></status>
</kw>
<msg timestamp="20201112 09:56:31.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040043708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040182375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:30.766" endtime="20201112 09:56:31.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040043708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040182375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:31.112" endtime="20201112 09:56:31.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:31.130" endtime="20201112 09:56:31.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:30.759" endtime="20201112 09:56:31.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:30.754" endtime="20201112 09:56:31.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:31.148" level="INFO">${RESULT} = [{'time': 0.040182375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013866700000000204, 'source_diff': 0.00013866700000000204}, {'time': 0.040331778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:31.140" endtime="20201112 09:56:31.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:31.180" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:31.150" endtime="20201112 09:56:31.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.191" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 09:56:31.189" endtime="20201112 09:56:31.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.196" level="INFO">VALUE: [0.00013866700000000204, 0.00013848600000000016, 0.00013820900000000025, 0.00013831899999999786, 0.00013872200000000084, 0.0001383339999999969, 0.00013902799999999937, 0.00013892999999999545, 0.00013859699999999725, 0.00013883300000000487, 0.0001379170000000013, 0.0001385689999999981, 0.00013845800000000102, 0.00013849999999999973, 0.00013776399999999855, 0.00013854199999999844, 0.00013862500000000333, 0.00013930599999999876, 0.0001389170000000023, 0.00013912500000000383, 0.00013811099999999632, 0.00013734700000000294, 0.00013844400000000145, 0.00013874999999999998, 0.0001386799999999952, 0.00013879200000000563, 0.00013876399999999955, 0.00013900000000000023, 0.00013874999999999998, 0.0001386390000000029, 0.0001393339999999979, 0.00013841600000000231, 0.0001380689999999976, 0.000137861000000003, 0.00013773599999999941, 0.00013783300000000387, 0.00013834799999999647, 0.00013755599999999701, 0.0001383190000000048, 0.00013773599999999941, 0.0001385689999999981, 0.00013920800000000177, 0.0001388889999999962, 0.00013732000000000327, 0.0001384720000000006, 0.0001377919999999977, 0.00013879099999999922, 0.00013861099999999682, 0.0001385139999999993, 0.00013827799999999862]</msg>
<status status="PASS" starttime="20201112 09:56:31.193" endtime="20201112 09:56:31.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.182" endtime="20201112 09:56:31.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:31.205" endtime="20201112 09:56:31.208"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:31.214" endtime="20201112 09:56:31.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.209" endtime="20201112 09:56:31.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.201" endtime="20201112 09:56:31.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:30.696" endtime="20201112 09:56:31.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:30.694" endtime="20201112 09:56:31.239"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:31.262" endtime="20201112 09:56:31.283"></status>
</kw>
<msg timestamp="20201112 09:56:31.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:31.258" endtime="20201112 09:56:31.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:31.286" endtime="20201112 09:56:31.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:31.292" endtime="20201112 09:56:31.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.251" endtime="20201112 09:56:31.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.246" endtime="20201112 09:56:31.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:31.315" endtime="20201112 09:56:31.650"></status>
</kw>
<msg timestamp="20201112 09:56:31.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039950944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040090639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:31.312" endtime="20201112 09:56:31.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039950944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040090639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:31.660" endtime="20201112 09:56:31.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:31.678" endtime="20201112 09:56:31.681"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.305" endtime="20201112 09:56:31.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.300" endtime="20201112 09:56:31.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:31.694" level="INFO">${RESULT} = [{'time': 0.040090639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013969499999999524, 'source_diff': 0.00013969499999999524}, {'time': 0.040237028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:31.686" endtime="20201112 09:56:31.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:31.726" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:31.697" endtime="20201112 09:56:31.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.736" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 09:56:31.734" endtime="20201112 09:56:31.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.742" level="INFO">VALUE: [0.00013969499999999524, 0.00013926400000000005, 0.00013950000000000073, 0.0001401669999999966, 0.00014005500000000004, 0.00014031899999999986, 0.00013970900000000175, 0.0001394019999999968, 0.00014006999999999908, 0.00013942999999999595, 0.0001389720000000011, 0.00013943000000000288, 0.00013943100000000236, 0.0001395689999999991, 0.00013970800000000227, 0.00013983299999999893, 0.00014015299999999703, 0.00013941699999999585, 0.00013954199999999944, 0.00013994500000000243, 0.0001395140000000003, 0.00013840299999999528, 0.00014002800000000037, 0.00014023600000000191, 0.00013991600000000382, 0.0001396249999999974, 0.0001395270000000004, 0.00014037500000000508, 0.00014004100000000047, 0.0001397919999999997, 0.0001400140000000008, 0.00014005500000000004, 0.00013966700000000304, 0.00013904099999999947, 0.00014001300000000133, 0.0001398049999999998, 0.00013955600000000595, 0.00013984700000000544, 0.0001389720000000011, 0.00013943100000000236, 0.00013972300000000132, 0.00013958299999999868, 0.00013972200000000184, 0.00013945799999999509, 0.00013947300000000107, 0.00013981899999999936, 0.00013955599999999901, 0.0001394720000000016, 0.00014030599999999976, 0.00014016700000000354]</msg>
<status status="PASS" starttime="20201112 09:56:31.739" endtime="20201112 09:56:31.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.728" endtime="20201112 09:56:31.745"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:31.751" endtime="20201112 09:56:31.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:31.759" endtime="20201112 09:56:31.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.755" endtime="20201112 09:56:31.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.747" endtime="20201112 09:56:31.784"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.241" endtime="20201112 09:56:31.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.240" endtime="20201112 09:56:31.785"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:31.808" endtime="20201112 09:56:31.829"></status>
</kw>
<msg timestamp="20201112 09:56:31.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:31.804" endtime="20201112 09:56:31.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:31.832" endtime="20201112 09:56:31.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:31.838" endtime="20201112 09:56:31.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.797" endtime="20201112 09:56:31.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.792" endtime="20201112 09:56:31.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:31.861" endtime="20201112 09:56:32.194"></status>
</kw>
<msg timestamp="20201112 09:56:32.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040069778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040210153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:31.858" endtime="20201112 09:56:32.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:32.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040069778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040210153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:32.203" endtime="20201112 09:56:32.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:32.221" endtime="20201112 09:56:32.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.851" endtime="20201112 09:56:32.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.846" endtime="20201112 09:56:32.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:32.238" level="INFO">${RESULT} = [{'time': 0.040210153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014037499999999814, 'source_diff': 0.00014037499999999814}, {'time': 0.040358542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:32.230" endtime="20201112 09:56:32.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:32.269" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:32.240" endtime="20201112 09:56:32.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:32.280" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 09:56:32.278" endtime="20201112 09:56:32.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:32.285" level="INFO">VALUE: [0.00014037499999999814, 0.00013987499999999764, 0.00014111099999999932, 0.0001404869999999947, 0.00014115299999999803, 0.00014002800000000037, 0.00014058299999999968, 0.00014040300000000422, 0.0001401249999999979, 0.0001409720000000031, 0.00014129099999999478, 0.00014048599999999523, 0.0001405140000000013, 0.00014083299999999993, 0.00014062500000000533, 0.00014037500000000508, 0.0001401390000000044, 0.00014119499999999674, 0.00013933299999999843, 0.00014054200000000044, 0.00013955499999999954, 0.0001407920000000007, 0.00014005500000000004, 0.00014058299999999968, 0.00014108399999999965, 0.00013973600000000141, 0.0001408889999999982, 0.00013977800000000012, 0.00014038799999999824, 0.0001406940000000037, 0.0001397919999999997, 0.00014122200000000334, 0.00014113899999999846, 0.0001403339999999989, 0.00013988900000000415, 0.0001401249999999979, 0.0001405140000000013, 0.00014061099999999882, 0.00014073599999999548, 0.00014065300000000447, 0.00014059699999999925, 0.00013931999999999833, 0.00014116599999999813, 0.00013992999999999645, 0.00014066600000000457, 0.00013969399999999577, 0.00014055600000000001, 0.00014059799999999872, 0.00014097199999999616, 0.00014101399999999487]</msg>
<status status="PASS" starttime="20201112 09:56:32.283" endtime="20201112 09:56:32.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.271" endtime="20201112 09:56:32.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:32.295" endtime="20201112 09:56:32.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:32.303" endtime="20201112 09:56:32.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.299" endtime="20201112 09:56:32.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.290" endtime="20201112 09:56:32.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.787" endtime="20201112 09:56:32.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.786" endtime="20201112 09:56:32.329"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:32.351" endtime="20201112 09:56:32.372"></status>
</kw>
<msg timestamp="20201112 09:56:32.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:32.348" endtime="20201112 09:56:32.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:32.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:32.375" endtime="20201112 09:56:32.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:32.382" endtime="20201112 09:56:32.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.341" endtime="20201112 09:56:32.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.335" endtime="20201112 09:56:32.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:32.405" endtime="20201112 09:56:32.738"></status>
</kw>
<msg timestamp="20201112 09:56:32.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039837292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039979014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:32.401" endtime="20201112 09:56:32.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:32.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039837292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039979014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:32.747" endtime="20201112 09:56:32.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:32.765" endtime="20201112 09:56:32.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.394" endtime="20201112 09:56:32.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.390" endtime="20201112 09:56:32.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:32.782" level="INFO">${RESULT} = [{'time': 0.039979014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001417219999999969, 'source_diff': 0.0001417219999999969}, {'time': 0.040126458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:56:32.774" endtime="20201112 09:56:32.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:32.813" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:32.784" endtime="20201112 09:56:32.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:32.824" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 09:56:32.822" endtime="20201112 09:56:32.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:32.830" level="INFO">VALUE: [0.0001417219999999969, 0.0001414019999999988, 0.0001419720000000041, 0.00014219399999999827, 0.00014236100000000057, 0.0001416379999999995, 0.00014172200000000384, 0.0001418050000000018, 0.00014173599999999648, 0.00014172300000000332, 0.00014066700000000404, 0.00014209700000000075, 0.0001416249999999994, 0.00014200000000000323, 0.00014098599999999573, 0.0001422089999999973, 0.00014226399999999612, 0.00014144399999999752, 0.000141444999999997, 0.00014211100000000032, 0.0001418340000000004, 0.00014144399999999752, 0.00014176400000000255, 0.00014152800000000187, 0.00014190299999999878, 0.00014029100000000072, 0.0001411940000000042, 0.0001420140000000028, 0.00014145800000000402, 0.00014124999999999555, 0.00014193099999999792, 0.00014150000000000273, 0.00014109699999999975, 0.0001416799999999982, 0.00014148600000000316, 0.00014048600000000216, 0.00014154200000000144, 0.0001406799999999972, 0.00014143000000000489, 0.00014157000000000058, 0.00014179100000000222, 0.00014190299999999878, 0.0001420140000000028, 0.00014177800000000212, 0.00014115300000000497, 0.00014148599999999623, 0.00014173599999999648, 0.0001420140000000028, 0.00014136099999999957, 0.00014065299999999753]</msg>
<status status="PASS" starttime="20201112 09:56:32.827" endtime="20201112 09:56:32.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.815" endtime="20201112 09:56:32.833"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:32.839" endtime="20201112 09:56:32.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:32.847" endtime="20201112 09:56:32.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.843" endtime="20201112 09:56:32.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.834" endtime="20201112 09:56:32.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.331" endtime="20201112 09:56:32.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.330" endtime="20201112 09:56:32.873"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:32.896" endtime="20201112 09:56:32.917"></status>
</kw>
<msg timestamp="20201112 09:56:32.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:32.893" endtime="20201112 09:56:32.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:32.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:32.920" endtime="20201112 09:56:32.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:32.926" endtime="20201112 09:56:32.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.885" endtime="20201112 09:56:32.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.880" endtime="20201112 09:56:32.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:32.949" endtime="20201112 09:56:33.286"></status>
</kw>
<msg timestamp="20201112 09:56:33.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040617222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040760153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:32.946" endtime="20201112 09:56:33.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:33.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040617222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040760153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:33.295" endtime="20201112 09:56:33.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:33.313" endtime="20201112 09:56:33.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.939" endtime="20201112 09:56:33.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.934" endtime="20201112 09:56:33.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:33.331" level="INFO">${RESULT} = [{'time': 0.040760153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014293099999999892, 'source_diff': 0.00014293099999999892}, {'time': 0.040910625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:33.322" endtime="20201112 09:56:33.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:33.363" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:33.333" endtime="20201112 09:56:33.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:33.374" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 09:56:33.372" endtime="20201112 09:56:33.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:33.379" level="INFO">VALUE: [0.00014293099999999892, 0.00014291699999999935, 0.00014269399999999877, 0.00014258300000000168, 0.0001417769999999957, 0.0001426250000000004, 0.00014252800000000287, 0.00014247299999999713, 0.00014316600000000013, 0.00014263899999999996, 0.00014202699999999596, 0.00014261100000000082, 0.00014333300000000243, 0.00014220799999999784, 0.0001426669999999991, 0.00014331899999999592, 0.00014261099999999388, 0.00014268099999999867, 0.00014315300000000003, 0.0001416669999999981, 0.0001417219999999969, 0.0001416249999999994, 0.0001418889999999992, 0.00014198600000000366, 0.00014323599999999798, 0.00014309700000000175, 0.00014204099999999553, 0.00014245799999999809, 0.00014241599999999938, 0.00014258400000000115, 0.00014243099999999842, 0.00014281899999999542, 0.00014150000000000273, 0.00014295799999999859, 0.0001430969999999948, 0.00014250000000000373, 0.00014204099999999553, 0.0001431250000000009, 0.00014327800000000362, 0.0001416669999999981, 0.00014324999999999755, 0.00014225000000000348, 0.00014225000000000348, 0.00014286100000000107, 0.00014241599999999938, 0.00014337500000000114, 0.00014222300000000382, 0.000143041999999996, 0.00014157000000000058, 0.0001429449999999985]</msg>
<status status="PASS" starttime="20201112 09:56:33.376" endtime="20201112 09:56:33.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:33.365" endtime="20201112 09:56:33.383"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:33.389" endtime="20201112 09:56:33.392"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:33.397" endtime="20201112 09:56:33.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:33.393" endtime="20201112 09:56:33.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:33.384" endtime="20201112 09:56:33.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.876" endtime="20201112 09:56:33.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.874" endtime="20201112 09:56:33.423"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:33.445" endtime="20201112 09:56:33.466"></status>
</kw>
<msg timestamp="20201112 09:56:33.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:33.442" endtime="20201112 09:56:33.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:33.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:33.470" endtime="20201112 09:56:33.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:33.476" endtime="20201112 09:56:33.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:33.435" endtime="20201112 09:56:33.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:33.429" endtime="20201112 09:56:33.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:33.500" endtime="20201112 09:56:33.834"></status>
</kw>
<msg timestamp="20201112 09:56:33.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039967056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040110486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:33.496" endtime="20201112 09:56:33.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:33.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039967056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040110486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:33.843" endtime="20201112 09:56:33.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:33.861" endtime="20201112 09:56:33.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:33.489" endtime="20201112 09:56:33.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:33.485" endtime="20201112 09:56:33.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:33.878" level="INFO">${RESULT} = [{'time': 0.040110486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014342999999999995, 'source_diff': 0.00014342999999999995}, {'time': 0.040261042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:33.870" endtime="20201112 09:56:33.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:33.909" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:33.881" endtime="20201112 09:56:33.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:33.921" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 09:56:33.917" endtime="20201112 09:56:33.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:33.926" level="INFO">VALUE: [0.00014342999999999995, 0.00014352799999999694, 0.0001439169999999934, 0.00014309700000000175, 0.00014361100000000182, 0.00014356999999999565, 0.0001423889999999997, 0.00014352799999999694, 0.00014358299999999574, 0.00014402800000000437, 0.00014348599999999823, 0.00014359700000000225, 0.00014308300000000218, 0.00014243000000000589, 0.00014400000000000523, 0.00014412499999999495, 0.0001436800000000002, 0.00014268099999999867, 0.00014258400000000115, 0.00014280599999999533, 0.00014374999999999805, 0.00014345800000000603, 0.00014358299999999574, 0.00014376299999999814, 0.00014404099999999753, 0.00014273599999999748, 0.00014413899999999452, 0.00014430499999999735, 0.00014411099999999538, 0.000144041999999997, 0.00014269399999999877, 0.00014415300000000103, 0.0001442219999999994, 0.00014374999999999805, 0.0001439999999999983, 0.0001438050000000038, 0.00014240299999999928, 0.00014422200000000635, 0.00014423599999999898, 0.00014383300000000293, 0.00014298599999999773, 0.00014273599999999748, 0.00014419400000000027, 0.00014393000000000045, 0.00014255600000000201, 0.00014340300000000028, 0.00014401399999999787, 0.00014393099999999992, 0.00014426399999999812, 0.00014313900000000046]</msg>
<status status="PASS" starttime="20201112 09:56:33.923" endtime="20201112 09:56:33.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:33.911" endtime="20201112 09:56:33.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:33.935" endtime="20201112 09:56:33.938"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:33.944" endtime="20201112 09:56:33.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:33.939" endtime="20201112 09:56:33.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:33.931" endtime="20201112 09:56:33.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:33.425" endtime="20201112 09:56:33.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:33.424" endtime="20201112 09:56:33.969"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:33.992" endtime="20201112 09:56:34.013"></status>
</kw>
<msg timestamp="20201112 09:56:34.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:33.988" endtime="20201112 09:56:34.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:34.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:34.016" endtime="20201112 09:56:34.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:34.022" endtime="20201112 09:56:34.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:33.981" endtime="20201112 09:56:34.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:33.976" endtime="20201112 09:56:34.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:34.046" endtime="20201112 09:56:34.380"></status>
</kw>
<msg timestamp="20201112 09:56:34.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039968611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040113333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:34.042" endtime="20201112 09:56:34.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:34.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039968611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040113333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:34.389" endtime="20201112 09:56:34.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:34.407" endtime="20201112 09:56:34.411"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.035" endtime="20201112 09:56:34.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.030" endtime="20201112 09:56:34.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:34.424" level="INFO">${RESULT} = [{'time': 0.040113333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001447219999999999, 'source_diff': 0.0001447219999999999}, {'time': 0.040267764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:56:34.415" endtime="20201112 09:56:34.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:34.454" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:34.426" endtime="20201112 09:56:34.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:34.465" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 09:56:34.463" endtime="20201112 09:56:34.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:34.470" level="INFO">VALUE: [0.0001447219999999999, 0.00014468100000000067, 0.00014461100000000282, 0.00014361099999999488, 0.00014484699999999656, 0.00014520800000000084, 0.00014486100000000307, 0.0001445129999999989, 0.00014445800000000009, 0.00014352800000000387, 0.00014344399999999952, 0.0001445549999999976, 0.00014411100000000232, 0.00014474999999999905, 0.0001452090000000003, 0.0001450549999999981, 0.0001443890000000017, 0.00014458400000000315, 0.00014458400000000315, 0.00014447299999999913, 0.00014470800000000034, 0.00014518100000000117, 0.0001443340000000029, 0.00014441700000000085, 0.000143347000000002, 0.00014493000000000145, 0.00014483399999999647, 0.00014461099999999588, 0.0001439449999999995, 0.00014491700000000135, 0.00014508300000000418, 0.00014458300000000368, 0.00014452799999999794, 0.00014437500000000214, 0.0001448470000000035, 0.00014461099999999588, 0.00014376399999999762, 0.0001450969999999968, 0.00014524999999999955, 0.00014377799999999719, 0.00014456899999999717, 0.00014474999999999905, 0.00014380599999999633, 0.000145041999999998, 0.00014377800000000412, 0.0001449169999999944, 0.0001435419999999965, 0.00014513900000000246, 0.00014373599999999848, 0.00014484799999999604]</msg>
<status status="PASS" starttime="20201112 09:56:34.467" endtime="20201112 09:56:34.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.456" endtime="20201112 09:56:34.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:34.481" endtime="20201112 09:56:34.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:34.490" endtime="20201112 09:56:34.512"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.485" endtime="20201112 09:56:34.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.476" endtime="20201112 09:56:34.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:33.971" endtime="20201112 09:56:34.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:33.970" endtime="20201112 09:56:34.516"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:34.538" endtime="20201112 09:56:34.559"></status>
</kw>
<msg timestamp="20201112 09:56:34.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:34.535" endtime="20201112 09:56:34.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:34.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:34.563" endtime="20201112 09:56:34.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:34.569" endtime="20201112 09:56:34.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.528" endtime="20201112 09:56:34.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.522" endtime="20201112 09:56:34.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:34.592" endtime="20201112 09:56:34.926"></status>
</kw>
<msg timestamp="20201112 09:56:34.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040108264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040253778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:34.589" endtime="20201112 09:56:34.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:34.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040108264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040253778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:34.936" endtime="20201112 09:56:34.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:34.954" endtime="20201112 09:56:34.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.582" endtime="20201112 09:56:34.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.577" endtime="20201112 09:56:34.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:34.971" level="INFO">${RESULT} = [{'time': 0.040253778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014551399999999937, 'source_diff': 0.00014551399999999937}, {'time': 0.040406306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:34.962" endtime="20201112 09:56:34.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:35.001" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:34.973" endtime="20201112 09:56:35.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:35.012" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 09:56:35.010" endtime="20201112 09:56:35.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:35.017" level="INFO">VALUE: [0.00014551399999999937, 0.00014518100000000117, 0.00014591700000000235, 0.00014541600000000238, 0.00014547200000000066, 0.0001462220000000014, 0.0001462090000000013, 0.00014545800000000109, 0.00014540199999999587, 0.00014511099999999638, 0.00014558299999999774, 0.00014541700000000185, 0.00014520800000000084, 0.00014544400000000152, 0.00014611099999999738, 0.00014555600000000501, 0.00014581899999999842, 0.0001458199999999979, 0.0001445549999999976, 0.00014534799999999654, 0.00014606999999999815, 0.00014606899999999867, 0.0001453619999999961, 0.00014572300000000038, 0.00014568100000000167, 0.00014629199999999926, 0.00014575000000000005, 0.00014587500000000364, 0.00014512499999999595, 0.00014590300000000278, 0.00014615300000000303, 0.00014544400000000152, 0.00014616600000000313, 0.00014545800000000109, 0.00014590300000000278, 0.0001463329999999985, 0.00014572299999999344, 0.00014569400000000177, 0.00014579199999999876, 0.00014536099999999663, 0.00014516600000000213, 0.00014527799999999869, 0.00014451399999999837, 0.0001452220000000004, 0.00014540299999999534, 0.00014601399999999987, 0.00014572300000000038, 0.00014581899999999842, 0.00014569399999999483, 0.00014541600000000238]</msg>
<status status="PASS" starttime="20201112 09:56:35.014" endtime="20201112 09:56:35.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.003" endtime="20201112 09:56:35.020"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:35.026" endtime="20201112 09:56:35.030"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:35.036" endtime="20201112 09:56:35.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.032" endtime="20201112 09:56:35.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.022" endtime="20201112 09:56:35.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.518" endtime="20201112 09:56:35.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.517" endtime="20201112 09:56:35.062"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:35.084" endtime="20201112 09:56:35.105"></status>
</kw>
<msg timestamp="20201112 09:56:35.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:35.081" endtime="20201112 09:56:35.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:35.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:35.109" endtime="20201112 09:56:35.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:35.115" endtime="20201112 09:56:35.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.074" endtime="20201112 09:56:35.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.068" endtime="20201112 09:56:35.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:35.138" endtime="20201112 09:56:35.471"></status>
</kw>
<msg timestamp="20201112 09:56:35.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039849917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039996792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:35.135" endtime="20201112 09:56:35.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:35.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039849917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039996792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:35.480" endtime="20201112 09:56:35.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:35.498" endtime="20201112 09:56:35.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.128" endtime="20201112 09:56:35.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.123" endtime="20201112 09:56:35.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:35.515" level="INFO">${RESULT} = [{'time': 0.039996792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014687500000000464, 'source_diff': 0.00014687500000000464}, {'time': 0.040149111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:35.506" endtime="20201112 09:56:35.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:35.548" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:35.517" endtime="20201112 09:56:35.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:35.559" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 09:56:35.556" endtime="20201112 09:56:35.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:35.564" level="INFO">VALUE: [0.00014687500000000464, 0.00014720800000000284, 0.00014715200000000456, 0.00014725000000000155, 0.00014729200000000026, 0.00014731899999999992, 0.00014602799999999944, 0.0001468470000000055, 0.0001471659999999972, 0.0001466670000000031, 0.00014558300000000468, 0.00014716699999999666, 0.00014637500000000414, 0.00014717999999999676, 0.00014634699999999806, 0.00014670800000000234, 0.00014676400000000062, 0.00014631899999999892, 0.00014683399999999847, 0.00014702700000000096, 0.00014616699999999566, 0.0001463749999999972, 0.0001463199999999984, 0.0001467499999999941, 0.00014713899999999752, 0.00014708299999999924, 0.0001470000000000013, 0.00014690299999999684, 0.00014676400000000062, 0.00014717999999999676, 0.00014666600000000363, 0.00014654200000000644, 0.0001463329999999985, 0.0001468749999999977, 0.0001463749999999972, 0.00014723600000000198, 0.00014661099999999788, 0.00014730599999999983, 0.00014579199999999876, 0.00014597199999999422, 0.00014626400000000012, 0.000146041999999999, 0.00014697199999999522, 0.00014663900000000396, 0.00014701399999999393, 0.00014656999999999865, 0.00014673599999999454, 0.00014648600000000123, 0.00014697200000000216, 0.00014686099999999813]</msg>
<status status="PASS" starttime="20201112 09:56:35.561" endtime="20201112 09:56:35.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.550" endtime="20201112 09:56:35.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:35.573" endtime="20201112 09:56:35.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:35.581" endtime="20201112 09:56:35.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.577" endtime="20201112 09:56:35.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.569" endtime="20201112 09:56:35.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.064" endtime="20201112 09:56:35.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.063" endtime="20201112 09:56:35.609"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:35.631" endtime="20201112 09:56:35.652"></status>
</kw>
<msg timestamp="20201112 09:56:35.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:35.627" endtime="20201112 09:56:35.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:35.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:35.655" endtime="20201112 09:56:35.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:35.661" endtime="20201112 09:56:35.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.620" endtime="20201112 09:56:35.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.615" endtime="20201112 09:56:35.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:35.684" endtime="20201112 09:56:36.018"></status>
</kw>
<msg timestamp="20201112 09:56:36.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041264167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041411597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:35.681" endtime="20201112 09:56:36.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:36.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041264167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041411597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:36.027" endtime="20201112 09:56:36.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:36.045" endtime="20201112 09:56:36.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.674" endtime="20201112 09:56:36.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.669" endtime="20201112 09:56:36.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:36.062" level="INFO">${RESULT} = [{'time': 0.041411597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014743000000000395, 'source_diff': 0.00014743000000000395}, {'time': 0.041567083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:36.054" endtime="20201112 09:56:36.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:36.092" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:36.064" endtime="20201112 09:56:36.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:36.103" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 09:56:36.101" endtime="20201112 09:56:36.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:36.109" level="INFO">VALUE: [0.00014743000000000395, 0.00014741599999999744, 0.00014788899999999827, 0.00014795899999999612, 0.0001470000000000013, 0.0001478749999999987, 0.00014758299999999974, 0.00014673600000000148, 0.0001482079999999969, 0.0001483330000000005, 0.00014788899999999827, 0.0001478199999999999, 0.0001480550000000011, 0.0001473890000000047, 0.00014684699999999856, 0.0001465000000000008, 0.00014768100000000367, 0.00014779099999999434, 0.0001476949999999963, 0.00014706999999999915, 0.0001478749999999987, 0.00014793100000000392, 0.00014776399999999468, 0.00014820899999999637, 0.0001476529999999976, 0.0001474580000000031, 0.0001474859999999953, 0.00014784699999999956, 0.00014636100000000457, 0.00014752800000000094, 0.00014827800000000169, 0.00014745799999999615, 0.00014831900000000092, 0.00014786099999999913, 0.00014751400000000137, 0.0001474859999999953, 0.00014729200000000026, 0.00014790299999999784, 0.00014677800000000019, 0.00014675000000000105, 0.00014723600000000198, 0.00014747200000000266, 0.0001475420000000005, 0.00014804100000000153, 0.00014744499999999605, 0.0001482220000000034, 0.00014693099999999598, 0.00014759799999999879, 0.00014811099999999938, 0.00014702700000000096]</msg>
<status status="PASS" starttime="20201112 09:56:36.105" endtime="20201112 09:56:36.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.094" endtime="20201112 09:56:36.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:36.118" endtime="20201112 09:56:36.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:36.126" endtime="20201112 09:56:36.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.122" endtime="20201112 09:56:36.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.114" endtime="20201112 09:56:36.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.611" endtime="20201112 09:56:36.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.609" endtime="20201112 09:56:36.152"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:36.176" endtime="20201112 09:56:36.197"></status>
</kw>
<msg timestamp="20201112 09:56:36.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:36.173" endtime="20201112 09:56:36.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:36.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:36.201" endtime="20201112 09:56:36.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:36.207" endtime="20201112 09:56:36.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.166" endtime="20201112 09:56:36.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.158" endtime="20201112 09:56:36.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:36.230" endtime="20201112 09:56:36.562"></status>
</kw>
<msg timestamp="20201112 09:56:36.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041534333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041683569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:36.226" endtime="20201112 09:56:36.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:36.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041534333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041683569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:36.572" endtime="20201112 09:56:36.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:36.590" endtime="20201112 09:56:36.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.220" endtime="20201112 09:56:36.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.215" endtime="20201112 09:56:36.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:36.607" level="INFO">${RESULT} = [{'time': 0.041683569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014923599999999704, 'source_diff': 0.00014923599999999704}, {'time': 0.041839056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:36.599" endtime="20201112 09:56:36.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:36.637" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:36.610" endtime="20201112 09:56:36.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:36.648" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 09:56:36.646" endtime="20201112 09:56:36.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:36.653" level="INFO">VALUE: [0.00014923599999999704, 0.00014876400000000262, 0.0001484169999999979, 0.00014862499999999945, 0.00014931899999999498, 0.0001488200000000009, 0.00014911100000000038, 0.00014804100000000153, 0.00014893099999999798, 0.00014834700000000006, 0.0001484729999999962, 0.00014875000000000305, 0.00014838899999999877, 0.00014863899999999902, 0.00014861099999999988, 0.0001483049999999944, 0.00014738899999999777, 0.00014879200000000176, 0.00014907000000000115, 0.00014923599999999704, 0.00014852800000000194, 0.0001491949999999978, 0.00014872300000000338, 0.00014861099999999988, 0.0001477770000000017, 0.0001484859999999963, 0.00014881900000000142, 0.00014868099999999773, 0.00014865300000000553, 0.00014773599999999554, 0.00014861099999999988, 0.00014906900000000167, 0.00014925000000000355, 0.0001487220000000039, 0.0001475420000000005, 0.00014770800000000334, 0.00014890299999999884, 0.00014780600000000033, 0.00014922299999999694, 0.0001484169999999979, 0.00014811199999999886, 0.00014863799999999955, 0.0001493620000000001, 0.00014786100000000607, 0.00014922299999999694, 0.0001484729999999962, 0.00014913899999999952, 0.00014747199999999572, 0.00014913899999999952, 0.00014867999999999826]</msg>
<status status="PASS" starttime="20201112 09:56:36.650" endtime="20201112 09:56:36.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.639" endtime="20201112 09:56:36.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:36.663" endtime="20201112 09:56:36.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:36.671" endtime="20201112 09:56:36.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.667" endtime="20201112 09:56:36.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.658" endtime="20201112 09:56:36.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.154" endtime="20201112 09:56:36.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.153" endtime="20201112 09:56:36.697"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:36.719" endtime="20201112 09:56:36.741"></status>
</kw>
<msg timestamp="20201112 09:56:36.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:36.716" endtime="20201112 09:56:36.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:36.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:36.744" endtime="20201112 09:56:36.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:36.750" endtime="20201112 09:56:36.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.709" endtime="20201112 09:56:36.757"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.703" endtime="20201112 09:56:36.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:36.775" endtime="20201112 09:56:37.109"></status>
</kw>
<msg timestamp="20201112 09:56:37.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039878194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040027708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:36.771" endtime="20201112 09:56:37.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:37.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039878194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040027708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:37.118" endtime="20201112 09:56:37.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:37.136" endtime="20201112 09:56:37.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.764" endtime="20201112 09:56:37.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.760" endtime="20201112 09:56:37.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:37.153" level="INFO">${RESULT} = [{'time': 0.040027708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014951400000000337, 'source_diff': 0.00014951400000000337}, {'time': 0.040183111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:37.145" endtime="20201112 09:56:37.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:37.183" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:37.155" endtime="20201112 09:56:37.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:37.194" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 09:56:37.192" endtime="20201112 09:56:37.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:37.199" level="INFO">VALUE: [0.00014951400000000337, 0.00015027800000000369, 0.00015002800000000344, 0.0001502499999999976, 0.00014969399999999883, 0.00014979199999999582, 0.00014849999999999586, 0.00014979200000000276, 0.00015005599999999564, 0.0001498750000000007, 0.0001495409999999961, 0.00014993099999999898, 0.0001499169999999994, 0.00015038900000000077, 0.00014990299999999984, 0.00014995799999999865, 0.00014940199999999987, 0.0001490000000000033, 0.00014990299999999984, 0.00014934800000000054, 0.00014862499999999945, 0.00014856900000000117, 0.00015023599999999804, 0.0001497079999999984, 0.00014988900000000027, 0.00014995799999999865, 0.00014990299999999984, 0.0001503330000000025, 0.00014945799999999815, 0.00014984699999999462, 0.00014966699999999916, 0.000149445000000005, 0.00014988900000000027, 0.000149429999999999, 0.00014944399999999858, 0.0001494580000000051, 0.00015036100000000163, 0.00015027800000000369, 0.00014997300000000463, 0.0001503609999999947, 0.000148833000000001, 0.0001495970000000013, 0.00014888899999999927, 0.0001494169999999989, 0.00014936100000000063, 0.0001499299999999995, 0.00015001400000000387, 0.00015009800000000129, 0.00014973599999999754, 0.00014976399999999668]</msg>
<status status="PASS" starttime="20201112 09:56:37.196" endtime="20201112 09:56:37.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.185" endtime="20201112 09:56:37.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:37.208" endtime="20201112 09:56:37.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:37.217" endtime="20201112 09:56:37.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.212" endtime="20201112 09:56:37.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.204" endtime="20201112 09:56:37.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.699" endtime="20201112 09:56:37.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.698" endtime="20201112 09:56:37.242"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:37.265" endtime="20201112 09:56:37.286"></status>
</kw>
<msg timestamp="20201112 09:56:37.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:37.262" endtime="20201112 09:56:37.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:37.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:37.290" endtime="20201112 09:56:37.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:37.296" endtime="20201112 09:56:37.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.254" endtime="20201112 09:56:37.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.249" endtime="20201112 09:56:37.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:37.321" endtime="20201112 09:56:37.655"></status>
</kw>
<msg timestamp="20201112 09:56:37.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039955944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040106556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:37.317" endtime="20201112 09:56:37.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:37.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039955944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040106556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:37.664" endtime="20201112 09:56:37.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:37.682" endtime="20201112 09:56:37.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.308" endtime="20201112 09:56:37.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.304" endtime="20201112 09:56:37.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:37.699" level="INFO">${RESULT} = [{'time': 0.040106556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015061200000000136, 'source_diff': 0.00015061200000000136}, {'time': 0.040264042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:37.691" endtime="20201112 09:56:37.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:37.731" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:37.701" endtime="20201112 09:56:37.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:37.742" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 09:56:37.740" endtime="20201112 09:56:37.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:37.747" level="INFO">VALUE: [0.00015061200000000136, 0.00015108400000000272, 0.00015063900000000102, 0.00014948600000000423, 0.0001509170000000004, 0.00015102699999999802, 0.00015123599999999904, 0.00015104199999999707, 0.00015113900000000152, 0.00015052699999999752, 0.00015045900000000556, 0.00015106900000000367, 0.00015059699999999537, 0.00015088900000000127, 0.00015134700000000306, 0.00015049999999999786, 0.00014984800000000104, 0.00015073700000000495, 0.00015068099999999973, 0.00015136100000000263, 0.00015106899999999673, 0.00015047199999999872, 0.0001512079999999999, 0.00015022199999999847, 0.0001508750000000017, 0.0001504859999999983, 0.00015112500000000195, 0.0001507090000000058, 0.0001507780000000042, 0.0001504169999999999, 0.00015113900000000152, 0.00015038900000000077, 0.00015063900000000102, 0.00015069399999999983, 0.00014948600000000423, 0.00015093099999999998, 0.0001508750000000017, 0.00015066700000000016, 0.0001499169999999994, 0.00015052800000000394, 0.00015131900000000392, 0.00015118100000000023, 0.00015116700000000066, 0.00015029199999999632, 0.00015052699999999752, 0.0001510550000000041, 0.00015129099999999784, 0.00015140300000000134, 0.00015062500000000145, 0.00015077799999999725]</msg>
<status status="PASS" starttime="20201112 09:56:37.744" endtime="20201112 09:56:37.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.733" endtime="20201112 09:56:37.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:37.756" endtime="20201112 09:56:37.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:37.765" endtime="20201112 09:56:37.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.760" endtime="20201112 09:56:37.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.752" endtime="20201112 09:56:37.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.245" endtime="20201112 09:56:37.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.243" endtime="20201112 09:56:37.790"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:37.813" endtime="20201112 09:56:37.834"></status>
</kw>
<msg timestamp="20201112 09:56:37.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:37.809" endtime="20201112 09:56:37.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:37.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:37.837" endtime="20201112 09:56:37.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:37.843" endtime="20201112 09:56:37.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.802" endtime="20201112 09:56:37.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.797" endtime="20201112 09:56:37.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:37.866" endtime="20201112 09:56:38.203"></status>
</kw>
<msg timestamp="20201112 09:56:38.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039801778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039953208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:37.863" endtime="20201112 09:56:38.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:38.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039801778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039953208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:38.212" endtime="20201112 09:56:38.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:38.231" endtime="20201112 09:56:38.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.856" endtime="20201112 09:56:38.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.852" endtime="20201112 09:56:38.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:38.247" level="INFO">${RESULT} = [{'time': 0.039953208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015142999999999407, 'source_diff': 0.00015142999999999407}, {'time': 0.040112722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:38.239" endtime="20201112 09:56:38.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:38.277" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:38.249" endtime="20201112 09:56:38.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:38.288" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 09:56:38.286" endtime="20201112 09:56:38.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:38.293" level="INFO">VALUE: [0.00015142999999999407, 0.00015197200000000022, 0.00015149999999999886, 0.00015197200000000022, 0.0001518750000000027, 0.00015173599999999954, 0.00015208400000000372, 0.00015186199999999567, 0.0001520970000000038, 0.00015184699999999662, 0.00015161100000000288, 0.00015163900000000202, 0.00015212500000000295, 0.00015211099999999644, 0.00015177799999999825, 0.0001515699999999967, 0.0001514170000000009, 0.00015194400000000108, 0.00015194400000000108, 0.00015231999999999746, 0.00015162500000000245, 0.00015231899999999798, 0.0001519859999999998, 0.0001523609999999967, 0.00015222200000000047, 0.0001521530000000021, 0.00015158300000000374, 0.000152042000000005, 0.00015155600000000408, 0.00015193099999999404, 0.00015223600000000004, 0.00015180499999999791, 0.00015187499999999576, 0.00015213900000000252, 0.00015152800000000494, 0.00015229099999999884, 0.0001519859999999998, 0.00015213899999999558, 0.00015208300000000424, 0.00015147199999999972, 0.00015131900000000392, 0.00015033299999999555, 0.00015226399999999918, 0.0001521530000000021, 0.0001518059999999974, 0.0001520000000000063, 0.00015222200000000047, 0.0001523059999999979, 0.00015176399999999868, 0.00015208400000000372]</msg>
<status status="PASS" starttime="20201112 09:56:38.290" endtime="20201112 09:56:38.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:38.279" endtime="20201112 09:56:38.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:38.303" endtime="20201112 09:56:38.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:38.311" endtime="20201112 09:56:38.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:38.306" endtime="20201112 09:56:38.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:38.298" endtime="20201112 09:56:38.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.792" endtime="20201112 09:56:38.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.791" endtime="20201112 09:56:38.336"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:38.359" endtime="20201112 09:56:38.381"></status>
</kw>
<msg timestamp="20201112 09:56:38.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:38.355" endtime="20201112 09:56:38.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:38.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:38.384" endtime="20201112 09:56:38.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:38.390" endtime="20201112 09:56:38.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:38.348" endtime="20201112 09:56:38.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:38.343" endtime="20201112 09:56:38.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:38.413" endtime="20201112 09:56:38.749"></status>
</kw>
<msg timestamp="20201112 09:56:38.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040283611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040436097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:38.410" endtime="20201112 09:56:38.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:38.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040283611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040436097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:38.758" endtime="20201112 09:56:38.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:38.777" endtime="20201112 09:56:38.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:38.403" endtime="20201112 09:56:38.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:38.398" endtime="20201112 09:56:38.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:38.794" level="INFO">${RESULT} = [{'time': 0.040436097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001524860000000003, 'source_diff': 0.0001524860000000003}, {'time': 0.040596569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:56:38.785" endtime="20201112 09:56:38.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:38.823" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:38.796" endtime="20201112 09:56:38.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:38.834" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 09:56:38.832" endtime="20201112 09:56:38.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:38.839" level="INFO">VALUE: [0.0001524860000000003, 0.00015249999999999986, 0.0001516249999999955, 0.00015318000000000276, 0.00015281899999999848, 0.0001525409999999991, 0.00015272200000000097, 0.00015302700000000002, 0.00015255600000000508, 0.0001528750000000037, 0.00015326400000000018, 0.0001528750000000037, 0.0001524170000000019, 0.00015343100000000248, 0.00015315200000000362, 0.00015279199999999882, 0.0001525420000000055, 0.00015301399999999993, 0.0001524860000000003, 0.000153430000000003, 0.00015318000000000276, 0.00015259699999999737, 0.00015272200000000097, 0.00015279199999999882, 0.00015227799999999875, 0.00015277799999999925, 0.00015240300000000234, 0.00015305499999999916, 0.00015244400000000158, 0.00015295900000000112, 0.0001516249999999955, 0.00015306899999999873, 0.00015300000000000036, 0.00015331999999999846, 0.00015243100000000148, 0.00015306899999999873, 0.0001515409999999981, 0.00015251399999999943, 0.00015331899999999898, 0.00015301399999999993, 0.00015311099999999744, 0.00015280600000000533, 0.00015288899999999633, 0.0001529029999999959, 0.0001519859999999998, 0.00015279199999999882, 0.00015309699999999787, 0.00015326400000000018, 0.00015279199999999882, 0.00015305499999999916]</msg>
<status status="PASS" starttime="20201112 09:56:38.836" endtime="20201112 09:56:38.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:38.825" endtime="20201112 09:56:38.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:38.849" endtime="20201112 09:56:38.852"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:38.857" endtime="20201112 09:56:38.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:38.853" endtime="20201112 09:56:38.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:38.844" endtime="20201112 09:56:38.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:38.339" endtime="20201112 09:56:38.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:38.337" endtime="20201112 09:56:38.883"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:38.905" endtime="20201112 09:56:38.927"></status>
</kw>
<msg timestamp="20201112 09:56:38.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:38.902" endtime="20201112 09:56:38.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:38.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:38.930" endtime="20201112 09:56:38.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:38.936" endtime="20201112 09:56:38.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:38.895" endtime="20201112 09:56:38.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:38.889" endtime="20201112 09:56:38.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:38.960" endtime="20201112 09:56:39.293"></status>
</kw>
<msg timestamp="20201112 09:56:39.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040049764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040203264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:38.956" endtime="20201112 09:56:39.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:39.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040049764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040203264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:39.302" endtime="20201112 09:56:39.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:39.320" endtime="20201112 09:56:39.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:38.949" endtime="20201112 09:56:39.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:38.945" endtime="20201112 09:56:39.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:39.339" level="INFO">${RESULT} = [{'time': 0.040203264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015350000000000086, 'source_diff': 0.00015350000000000086}, {'time': 0.040362875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:39.330" endtime="20201112 09:56:39.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:39.368" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:39.341" endtime="20201112 09:56:39.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:39.379" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 09:56:39.377" endtime="20201112 09:56:39.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:39.384" level="INFO">VALUE: [0.00015350000000000086, 0.00015373600000000154, 0.00015424999999999467, 0.00015437499999999826, 0.00015373600000000154, 0.00015401300000000145, 0.0001539449999999956, 0.00015355599999999914, 0.000153430000000003, 0.00015252699999999952, 0.00015405599999999964, 0.00015388900000000427, 0.00015337499999999726, 0.00015355599999999914, 0.00015388900000000427, 0.00015431999999999946, 0.00015401299999999452, 0.00015411099999999844, 0.00015355499999999966, 0.0001536379999999976, 0.00015431999999999946, 0.00015412499999999801, 0.00015444399999999664, 0.00015361100000000488, 0.0001539029999999969, 0.00015412500000000495, 0.00015377700000000077, 0.0001533609999999977, 0.00015405599999999964, 0.00015354199999999957, 0.00015387499999999776, 0.00015381899999999948, 0.00015356899999999923, 0.0001541530000000041, 0.00015361099999999794, 0.00015334800000000454, 0.0001535410000000001, 0.0001537080000000024, 0.00015359699999999837, 0.00015345800000000215, 0.00015309699999999787, 0.00015368100000000273, 0.0001539170000000034, 0.00015354199999999957, 0.00015390300000000384, 0.00015402700000000102, 0.0001540970000000058, 0.00015423600000000204, 0.00015342999999999607, 0.00015416700000000366]</msg>
<status status="PASS" starttime="20201112 09:56:39.381" endtime="20201112 09:56:39.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:39.370" endtime="20201112 09:56:39.387"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:39.394" endtime="20201112 09:56:39.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:39.402" endtime="20201112 09:56:39.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:39.398" endtime="20201112 09:56:39.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:39.389" endtime="20201112 09:56:39.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:38.885" endtime="20201112 09:56:39.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:38.884" endtime="20201112 09:56:39.428"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:39.450" endtime="20201112 09:56:39.472"></status>
</kw>
<msg timestamp="20201112 09:56:39.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:39.447" endtime="20201112 09:56:39.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:39.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:39.475" endtime="20201112 09:56:39.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:39.481" endtime="20201112 09:56:39.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:39.440" endtime="20201112 09:56:39.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:39.434" endtime="20201112 09:56:39.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:39.504" endtime="20201112 09:56:39.848"></status>
</kw>
<msg timestamp="20201112 09:56:39.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040006347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040160653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:39.501" endtime="20201112 09:56:39.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:39.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040006347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040160653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:39.857" endtime="20201112 09:56:39.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:39.875" endtime="20201112 09:56:39.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:39.494" endtime="20201112 09:56:39.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:39.489" endtime="20201112 09:56:39.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:39.895" level="INFO">${RESULT} = [{'time': 0.040160653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001543059999999999, 'source_diff': 0.0001543059999999999}, {'time': 0.04032025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:56:39.886" endtime="20201112 09:56:39.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:39.928" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:39.897" endtime="20201112 09:56:39.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:39.939" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 09:56:39.937" endtime="20201112 09:56:39.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:39.944" level="INFO">VALUE: [0.0001543059999999999, 0.00015477800000000125, 0.00015512499999999901, 0.00015512499999999901, 0.0001549170000000044, 0.00015500000000000236, 0.00015445899999999568, 0.00015517999999999782, 0.0001549730000000027, 0.00015500000000000236, 0.00015505600000000064, 0.00015473600000000254, 0.00015463900000000502, 0.00015451400000000143, 0.00015512499999999901, 0.00015450000000000186, 0.00015473600000000254, 0.0001543200000000064, 0.00015509699999999987, 0.0001546950000000033, 0.00015420900000000237, 0.00015454199999999363, 0.00015476399999999474, 0.00015504099999999466, 0.00015476399999999474, 0.00015484699999999962, 0.00015513899999999858, 0.00015463899999999808, 0.00015459699999999937, 0.00015495900000000312, 0.00015484699999999962, 0.0001550830000000003, 0.00015461100000000588, 0.00015463899999999808, 0.00015506900000000073, 0.00015500000000000236, 0.0001552500000000026, 0.00015438900000000477, 0.0001537080000000024, 0.00015531900000000098, 0.00015448699999999482, 0.00015500000000000236, 0.0001548060000000004, 0.00015497199999999628, 0.00015463899999999808, 0.00015527800000000175, 0.00015498599999999585, 0.00015502699999999509, 0.0001544029999999974, 0.0001546379999999986]</msg>
<status status="PASS" starttime="20201112 09:56:39.941" endtime="20201112 09:56:39.946"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:39.930" endtime="20201112 09:56:39.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:39.954" endtime="20201112 09:56:39.957"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:39.962" endtime="20201112 09:56:39.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:39.958" endtime="20201112 09:56:39.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:39.949" endtime="20201112 09:56:39.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:39.430" endtime="20201112 09:56:39.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:39.429" endtime="20201112 09:56:39.989"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:40.012" endtime="20201112 09:56:40.036"></status>
</kw>
<msg timestamp="20201112 09:56:40.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:40.009" endtime="20201112 09:56:40.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:40.040" endtime="20201112 09:56:40.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:40.046" endtime="20201112 09:56:40.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.001" endtime="20201112 09:56:40.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:39.995" endtime="20201112 09:56:40.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:40.070" endtime="20201112 09:56:40.417"></status>
</kw>
<msg timestamp="20201112 09:56:40.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041307431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041462833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:40.066" endtime="20201112 09:56:40.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041307431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041462833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:40.427" endtime="20201112 09:56:40.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:40.445" endtime="20201112 09:56:40.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.059" endtime="20201112 09:56:40.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.054" endtime="20201112 09:56:40.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:40.463" level="INFO">${RESULT} = [{'time': 0.041462833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015540199999999893, 'source_diff': 0.00015540199999999893}, {'time': 0.041624278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:40.454" endtime="20201112 09:56:40.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:40.495" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:40.465" endtime="20201112 09:56:40.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.506" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 09:56:40.504" endtime="20201112 09:56:40.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.512" level="INFO">VALUE: [0.00015540199999999893, 0.00015566699999999822, 0.00015600000000000336, 0.00015544399999999764, 0.00015477700000000177, 0.00015611100000000044, 0.0001559860000000038, 0.00015609699999999394, 0.0001554449999999971, 0.00015551400000000243, 0.00015605500000000216, 0.00015581900000000148, 0.000156013999999996, 0.00015572300000000344, 0.00015563899999999908, 0.0001560559999999947, 0.0001558610000000002, 0.00015569400000000483, 0.00015536199999999917, 0.00015581900000000148, 0.00015620799999999796, 0.00015634700000000112, 0.00015597200000000422, 0.00015562499999999951, 0.00015611100000000044, 0.00015634700000000112, 0.00015532000000000046, 0.00015534700000000012, 0.00015545800000000415, 0.0001559029999999989, 0.00015567999999999832, 0.00015555600000000114, 0.00015534700000000012, 0.00015588899999999933, 0.00015541699999999797, 0.00015634700000000112, 0.0001556809999999978, 0.00015615299999999915, 0.00015542999999999807, 0.00015606999999999427, 0.0001554170000000049, 0.00015562499999999951, 0.00015632000000000146, 0.0001559579999999977, 0.00015566599999999875, 0.00015633400000000103, 0.00015563899999999908, 0.0001560700000000012, 0.00015559700000000037, 0.00015630500000000241]</msg>
<status status="PASS" starttime="20201112 09:56:40.509" endtime="20201112 09:56:40.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.497" endtime="20201112 09:56:40.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:40.522" endtime="20201112 09:56:40.524"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:40.530" endtime="20201112 09:56:40.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.526" endtime="20201112 09:56:40.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.517" endtime="20201112 09:56:40.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:39.991" endtime="20201112 09:56:40.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:39.990" endtime="20201112 09:56:40.556"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:40.580" endtime="20201112 09:56:40.604"></status>
</kw>
<msg timestamp="20201112 09:56:40.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:40.576" endtime="20201112 09:56:40.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:40.607" endtime="20201112 09:56:40.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:40.614" endtime="20201112 09:56:40.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.569" endtime="20201112 09:56:40.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.563" endtime="20201112 09:56:40.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:40.637" endtime="20201112 09:56:40.975"></status>
</kw>
<msg timestamp="20201112 09:56:40.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041260417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04141725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:56:40.634" endtime="20201112 09:56:40.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:41.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041260417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04141725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:56:40.985" endtime="20201112 09:56:41.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:41.003" endtime="20201112 09:56:41.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.627" endtime="20201112 09:56:41.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.622" endtime="20201112 09:56:41.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:41.020" level="INFO">${RESULT} = [{'time': 0.04141725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015683300000000205, 'source_diff': 0.00015683300000000205}, {'time': 0.041580764, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:56:41.011" endtime="20201112 09:56:41.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:41.051" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:41.022" endtime="20201112 09:56:41.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:41.062" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 09:56:41.060" endtime="20201112 09:56:41.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:41.068" level="INFO">VALUE: [0.00015683300000000205, 0.00015720799999999896, 0.00015704199999999613, 0.00015662500000000051, 0.00015684700000000162, 0.0001572779999999968, 0.00015688900000000033, 0.0001564449999999981, 0.00015706999999999527, 0.00015676400000000368, 0.00015683300000000205, 0.0001564029999999994, 0.00015644500000000505, 0.00015633300000000155, 0.00015672199999999803, 0.00015683300000000205, 0.00015649999999999692, 0.00015641699999999897, 0.00015720900000000537, 0.0001565139999999965, 0.00015654200000000257, 0.00015674999999999717, 0.0001569029999999999, 0.00015665299999999965, 0.00015694399999999914, 0.00015734699999999519, 0.00015712500000000101, 0.00015733400000000203, 0.00015697199999999828, 0.00015638899999999983, 0.00015712499999999407, 0.00015676400000000368, 0.00015702799999999656, 0.00015650000000000386, 0.00015699999999999742, 0.00015715300000000015, 0.00015704199999999613, 0.00015649999999999692, 0.00015697199999999828, 0.00015727800000000375, 0.00015654200000000257, 0.00015712499999999407, 0.000157013999999997, 0.00015681900000000248, 0.00015661200000000042, 0.0001568480000000011, 0.00015683299999999512, 0.00015709700000000187, 0.00015720799999999896, 0.00015648599999999735]</msg>
<status status="PASS" starttime="20201112 09:56:41.065" endtime="20201112 09:56:41.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:41.053" endtime="20201112 09:56:41.071"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:41.077" endtime="20201112 09:56:41.080"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:41.085" endtime="20201112 09:56:41.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:41.081" endtime="20201112 09:56:41.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:41.073" endtime="20201112 09:56:41.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.559" endtime="20201112 09:56:41.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.557" endtime="20201112 09:56:41.111"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:41.133" endtime="20201112 09:56:41.155"></status>
</kw>
<msg timestamp="20201112 09:56:41.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:41.130" endtime="20201112 09:56:41.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:41.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:41.158" endtime="20201112 09:56:41.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:41.165" endtime="20201112 09:56:41.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:41.123" endtime="20201112 09:56:41.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:41.117" endtime="20201112 09:56:41.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:41.188" endtime="20201112 09:56:41.522"></status>
</kw>
<msg timestamp="20201112 09:56:41.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039934681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040093, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:56:41.185" endtime="20201112 09:56:41.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:41.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039934681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040093, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:56:41.532" endtime="20201112 09:56:41.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:41.550" endtime="20201112 09:56:41.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:41.178" endtime="20201112 09:56:41.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:41.173" endtime="20201112 09:56:41.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:41.566" level="INFO">${RESULT} = [{'time': 0.040093, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015831899999999705, 'source_diff': 0.00015831899999999705}, {'time': 0.040261514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:56:41.558" endtime="20201112 09:56:41.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:41.598" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:41.569" endtime="20201112 09:56:41.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:41.608" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 09:56:41.606" endtime="20201112 09:56:41.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:41.614" level="INFO">VALUE: [0.00015831899999999705, 0.00015752799999999706, 0.00015780499999999698, 0.0001583060000000039, 0.00015744399999999964, 0.00015774999999999817, 0.00015819499999999986, 0.0001575139999999975, 0.00015820799999999996, 0.00015818000000000082, 0.00015818000000000082, 0.0001582909999999979, 0.0001579579999999997, 0.00015766700000000022, 0.0001579030000000009, 0.0001583889999999949, 0.00015799999999999842, 0.00015741699999999997, 0.00015733300000000255, 0.00015798599999999885, 0.0001578610000000022, 0.00015791700000000047, 0.00015777700000000477, 0.0001578610000000022, 0.00015768000000000032, 0.00015761100000000194, 0.00015779199999999688, 0.00015733299999999562, 0.00015755600000000314, 0.00015802799999999756, 0.0001578060000000034, 0.00015790200000000143, 0.0001575830000000028, 0.0001582359999999991, 0.00015812499999999508, 0.00015729200000000332, 0.00015815299999999421, 0.00015743099999999954, 0.0001579579999999997, 0.00015784700000000262, 0.00015768000000000032, 0.0001582359999999991, 0.00015765300000000065, 0.00015765300000000065, 0.0001579449999999996, 0.0001574449999999991, 0.00015770799999999946, 0.0001581810000000003, 0.00015786099999999526, 0.00015779100000000434]</msg>
<status status="PASS" starttime="20201112 09:56:41.611" endtime="20201112 09:56:41.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:41.600" endtime="20201112 09:56:41.617"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:41.623" endtime="20201112 09:56:41.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:41.631" endtime="20201112 09:56:41.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:41.627" endtime="20201112 09:56:41.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:41.619" endtime="20201112 09:56:41.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:41.113" endtime="20201112 09:56:41.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:41.112" endtime="20201112 09:56:41.657"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:41.680" endtime="20201112 09:56:41.702"></status>
</kw>
<msg timestamp="20201112 09:56:41.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:41.676" endtime="20201112 09:56:41.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:41.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:41.708" endtime="20201112 09:56:41.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:41.715" endtime="20201112 09:56:41.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:41.669" endtime="20201112 09:56:41.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:41.664" endtime="20201112 09:56:41.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:41.740" endtime="20201112 09:56:42.079"></status>
</kw>
<msg timestamp="20201112 09:56:42.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040208431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040367667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:41.737" endtime="20201112 09:56:42.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:42.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040208431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040367667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:42.088" endtime="20201112 09:56:42.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:42.106" endtime="20201112 09:56:42.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:41.729" endtime="20201112 09:56:42.112"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:41.724" endtime="20201112 09:56:42.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:42.124" level="INFO">${RESULT} = [{'time': 0.040367667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001592360000000001, 'source_diff': 0.0001592360000000001}, {'time': 0.040535069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:56:42.115" endtime="20201112 09:56:42.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:42.157" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:42.126" endtime="20201112 09:56:42.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:42.168" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 09:56:42.166" endtime="20201112 09:56:42.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:42.173" level="INFO">VALUE: [0.0001592360000000001, 0.0001589580000000007, 0.00015926399999999924, 0.00015877800000000525, 0.00015909700000000387, 0.0001583889999999949, 0.00015891700000000147, 0.0001587229999999995, 0.00015920799999999402, 0.00015852799999999806, 0.00015859700000000337, 0.0001586940000000009, 0.0001586940000000009, 0.0001587359999999996, 0.00015916600000000225, 0.00015880499999999798, 0.00015876299999999927, 0.00015847199999999978, 0.00015858400000000328, 0.0001590700000000042, 0.00015783400000000253, 0.00015886099999999626, 0.00015869500000000036, 0.00015904099999999866, 0.00015874999999999917, 0.00015868000000000132, 0.00015911100000000344, 0.00015879100000000534, 0.00015880599999999745, 0.0001585139999999985, 0.00015859800000000285, 0.0001586810000000008, 0.00015927700000000627, 0.00015916600000000225, 0.00015912499999999608, 0.00015876299999999927, 0.00015897200000000028, 0.00015855600000000414, 0.00015905600000000464, 0.00015909800000000335, 0.00015909699999999694, 0.00015843100000000054, 0.0001592360000000001, 0.00015859700000000337, 0.00015863899999999515, 0.00015908299999999737, 0.00015898599999999985, 0.00015766700000000022, 0.0001587779999999983, 0.00015904099999999866]</msg>
<status status="PASS" starttime="20201112 09:56:42.170" endtime="20201112 09:56:42.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:42.159" endtime="20201112 09:56:42.177"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:42.183" endtime="20201112 09:56:42.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:42.191" endtime="20201112 09:56:42.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:42.187" endtime="20201112 09:56:42.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:42.178" endtime="20201112 09:56:42.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:41.659" endtime="20201112 09:56:42.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:41.658" endtime="20201112 09:56:42.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.333" endtime="20201112 09:56:42.218"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:42.229" endtime="20201112 09:56:42.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:42.224" endtime="20201112 09:56:42.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:42.221" endtime="20201112 09:56:42.253"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 09:55:47.205" endtime="20201112 09:56:42.254" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:54:48.612" endtime="20201112 09:56:42.266"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:56:42.410" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:56:42.425" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:56:44.355" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:56:42.406" endtime="20201112 09:56:44.356"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:56:44.362" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:56:44.359" endtime="20201112 09:56:44.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:42.403" endtime="20201112 09:56:44.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:44.369" endtime="20201112 09:56:44.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.366" endtime="20201112 09:56:44.709"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:44.739" endtime="20201112 09:56:44.760"></status>
</kw>
<msg timestamp="20201112 09:56:44.761" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:44.735" endtime="20201112 09:56:44.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:44.767" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:44.763" endtime="20201112 09:56:44.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:56:44.774" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:56:44.770" endtime="20201112 09:56:44.775"></status>
</kw>
<status status="FAIL" starttime="20201112 09:56:44.729" endtime="20201112 09:56:44.777"></status>
</kw>
<status status="FAIL" starttime="20201112 09:56:44.723" endtime="20201112 09:56:44.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.720" endtime="20201112 09:56:44.779"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:56:44.787" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:56:44.786" endtime="20201112 09:56:44.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.781" endtime="20201112 09:56:44.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.719" endtime="20201112 09:56:44.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.717" endtime="20201112 09:56:44.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:44.793" endtime="20201112 09:56:44.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.714" endtime="20201112 09:56:44.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:44.800" endtime="20201112 09:56:44.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.710" endtime="20201112 09:56:44.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:42.400" endtime="20201112 09:56:44.806"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:44.822" endtime="20201112 09:56:44.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.818" endtime="20201112 09:56:44.846"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:44.880" endtime="20201112 09:56:44.901"></status>
</kw>
<msg timestamp="20201112 09:56:44.902" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:44.876" endtime="20201112 09:56:44.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:44.909" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:44.905" endtime="20201112 09:56:44.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:56:44.915" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:56:44.911" endtime="20201112 09:56:44.916"></status>
</kw>
<status status="FAIL" starttime="20201112 09:56:44.869" endtime="20201112 09:56:44.918"></status>
</kw>
<status status="FAIL" starttime="20201112 09:56:44.863" endtime="20201112 09:56:44.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.860" endtime="20201112 09:56:44.920"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:56:44.928" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:56:44.927" endtime="20201112 09:56:44.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.922" endtime="20201112 09:56:44.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.858" endtime="20201112 09:56:44.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.857" endtime="20201112 09:56:44.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:44.932" endtime="20201112 09:56:44.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.853" endtime="20201112 09:56:44.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.848" endtime="20201112 09:56:44.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.815" endtime="20201112 09:56:44.939"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:56:44.948" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:44.971" endtime="20201112 09:56:47.106"></status>
</kw>
<msg timestamp="20201112 09:56:47.108" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 685153, 'wakeups': [695191, 705191, 715191, 725191, 735191, 745191, 75...</msg>
<status status="PASS" starttime="20201112 09:56:44.968" endtime="20201112 09:56:47.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:47.114" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 685153, 'wakeups': [695191, 705191, 715191, 725191, 735191, 745191, 75...</msg>
<status status="PASS" starttime="20201112 09:56:47.110" endtime="20201112 09:56:47.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:47.117" endtime="20201112 09:56:47.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.958" endtime="20201112 09:56:47.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.953" endtime="20201112 09:56:47.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:47.131" level="INFO">${RESULT} = {'wakeups': [695191, 705191, 715191, 725191, 735191, 745191, 755191, 765191, 775191, 785191, 795191, 805191, 815191, 825191, 835191, 845191, 855191, 865191, 875191, 885191, 895191, 905191, 915191, 925...</msg>
<status status="PASS" starttime="20201112 09:56:47.126" endtime="20201112 09:56:47.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:47.141" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:47.139" endtime="20201112 09:56:47.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:47.145" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:47.143" endtime="20201112 09:56:47.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:47.132" endtime="20201112 09:56:47.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:47.158" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:56:47.155" endtime="20201112 09:56:47.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:47.162" level="INFO">VALUE: 685153</msg>
<status status="PASS" starttime="20201112 09:56:47.160" endtime="20201112 09:56:47.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:47.149" endtime="20201112 09:56:47.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:47.174" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:47.172" endtime="20201112 09:56:47.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:47.179" level="INFO">VALUE: [695191, 705191, 715191, 725191, 735191, 745191, 755191, 765191, 775191, 785191, 795191, 805191, 815191, 825191, 835191, 845191, 855191, 865191, 875191, 885191, 895191, 905191, 915191, 925191, 935191, 945191, 955191, 965191, 975191, 985191, 995191, 1005191, 1015191, 1025191, 1035191, 1045191, 1055191, 1065191, 1075191, 1085191, 1095191, 1105191, 1115191, 1125191, 1135191, 1145191, 1155191, 1165191, 1175191, 1185191, 1195191, 1205191, 1215191, 1225191, 1235191, 1245191, 1255191, 1265191, 1275191, 1285191, 1295191, 1305191, 1315191, 1325191, 1335191, 1345191, 1355191, 1365191, 1375191, 1385191, 1395191, 1405191, 1415191, 1425191, 1435191, 1445191, 1455191, 1465191, 1475191, 1485191, 1495191, 1505191, 1515191, 1525191, 1535191, 1545191, 1555191, 1565191, 1575191, 1585191, 1595191, 1605191, 1615191, 1625191, 1635191, 1645191, 1655191, 1665191, 1675191, 1685191]</msg>
<status status="PASS" starttime="20201112 09:56:47.177" endtime="20201112 09:56:47.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:47.166" endtime="20201112 09:56:47.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:47.199" endtime="20201112 09:56:47.564"></status>
</kw>
<msg timestamp="20201112 09:56:47.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.139301194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.149370681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:47.195" endtime="20201112 09:56:47.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:47.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.139301194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.149370681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:47.573" endtime="20201112 09:56:47.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:47.590" endtime="20201112 09:56:47.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:47.188" endtime="20201112 09:56:47.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:47.183" endtime="20201112 09:56:47.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:47.653" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:47.598" endtime="20201112 09:56:47.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:47.664" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:56:47.661" endtime="20201112 09:56:47.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:47.669" level="INFO">VALUE: 0.139301194</msg>
<status status="PASS" starttime="20201112 09:56:47.667" endtime="20201112 09:56:47.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:47.655" endtime="20201112 09:56:47.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:47.682" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:47.680" endtime="20201112 09:56:47.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:47.687" level="INFO">VALUE: [0.149370681, 0.159404125, 0.169438042, 0.179471972, 0.189505514, 0.199538722, 0.20957175, 0.219602208, 0.229633903, 0.239664819, 0.249695639, 0.259725931, 0.269756806, 0.279786736, 0.289816236, 0.299845778, 0.309876875, 0.319908472, 0.32994025, 0.339971528, 0.350003319, 0.360034778, 0.370065972, 0.380097389, 0.390128903, 0.400160014, 0.41019275, 0.420225431, 0.430258167, 0.440289764, 0.450322931, 0.460355292, 0.470387722, 0.480419556, 0.490451986, 0.500484472, 0.510517111, 0.520549417, 0.530580806, 0.540612181, 0.550644597, 0.560676681, 0.570709611, 0.580741458, 0.590772667, 0.600803861, 0.610835958, 0.620867431, 0.630898486, 0.640930306, 0.650962083, 0.660994069, 0.671026153, 0.681056903, 0.691089444, 0.701122139, 0.711155639, 0.721188181, 0.731220792, 0.741252264, 0.751283542, 0.761314, 0.771345944, 0.781376764, 0.791407361, 0.801437431, 0.811468042, 0.821498194, 0.831529875, 0.841560208, 0.851591069, 0.861622556, 0.871653333, 0.881683764, 0.891714111, 0.901745306, 0.911775208, 0.921806792, 0.931838611, 0.941870639, 0.951902528, 0.961934542, 0.971967194, 0.981998917, 0.992032111, 1.002065583, 1.0120985, 1.022130639, 1.032162111, 1.04219225, 1.052222069, 1.062251292, 1.072282667, 1.0823135, 1.092344167, 1.102375444, 1.112406625, 1.122436222, 1.132467486, 1.14249725] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:47.685" endtime="20201112 09:56:47.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:47.673" endtime="20201112 09:56:47.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:47.696" endtime="20201112 09:56:47.699"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:47.704" endtime="20201112 09:56:47.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:47.700" endtime="20201112 09:56:47.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:47.691" endtime="20201112 09:56:47.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.949" endtime="20201112 09:56:47.730"></status>
</kw>
<msg timestamp="20201112 09:56:47.731" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:47.752" endtime="20201112 09:56:49.870"></status>
</kw>
<msg timestamp="20201112 09:56:49.871" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3457418, 'wakeups': [3467456, 3477456, 3487456, 3497456, 3507456, 3517...</msg>
<status status="PASS" starttime="20201112 09:56:47.749" endtime="20201112 09:56:49.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:49.878" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3457418, 'wakeups': [3467456, 3477456, 3487456, 3497456, 3507456, 3517...</msg>
<status status="PASS" starttime="20201112 09:56:49.873" endtime="20201112 09:56:49.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:49.880" endtime="20201112 09:56:49.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:47.741" endtime="20201112 09:56:49.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:47.736" endtime="20201112 09:56:49.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:49.894" level="INFO">${RESULT} = {'wakeups': [3467456, 3477456, 3487456, 3497456, 3507456, 3517456, 3527456, 3537456, 3547456, 3557456, 3567456, 3577456, 3587456, 3597456, 3607456, 3617456, 3627456, 3637456, 3647456, 3657456, 3667456...</msg>
<status status="PASS" starttime="20201112 09:56:49.889" endtime="20201112 09:56:49.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:49.904" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:49.901" endtime="20201112 09:56:49.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:49.908" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:49.906" endtime="20201112 09:56:49.909"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:49.895" endtime="20201112 09:56:49.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:49.926" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:56:49.918" endtime="20201112 09:56:49.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:49.931" level="INFO">VALUE: 3457418</msg>
<status status="PASS" starttime="20201112 09:56:49.928" endtime="20201112 09:56:49.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:49.912" endtime="20201112 09:56:49.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:49.945" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:49.941" endtime="20201112 09:56:49.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:49.950" level="INFO">VALUE: [3467456, 3477456, 3487456, 3497456, 3507456, 3517456, 3527456, 3537456, 3547456, 3557456, 3567456, 3577456, 3587456, 3597456, 3607456, 3617456, 3627456, 3637456, 3647456, 3657456, 3667456, 3677456, 3687456, 3697456, 3707456, 3717456, 3727456, 3737456, 3747456, 3757456, 3767456, 3777456, 3787456, 3797456, 3807456, 3817456, 3827456, 3837456, 3847456, 3857456, 3867456, 3877456, 3887456, 3897456, 3907456, 3917456, 3927456, 3937456, 3947456, 3957456, 3967456, 3977456, 3987456, 3997456, 4007456, 4017456, 4027456, 4037456, 4047456, 4057456, 4067456, 4077456, 4087456, 4097456, 4107456, 4117456, 4127456, 4137456, 4147456, 4157456, 4167456, 4177456, 4187456, 4197456, 4207456, 4217456, 4227456, 4237456, 4247456, 4257456, 4267456, 4277456, 4287456, 4297456, 4307456, 4317456, 4327456, 4337456, 4347456, 4357456, 4367456, 4377456, 4387456, 4397456, 4407456, 4417456, 4427456, 4437456, 4447456, 4457456]</msg>
<status status="PASS" starttime="20201112 09:56:49.948" endtime="20201112 09:56:49.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:49.934" endtime="20201112 09:56:49.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:49.970" endtime="20201112 09:56:50.314"></status>
</kw>
<msg timestamp="20201112 09:56:50.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038370667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048441361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:49.966" endtime="20201112 09:56:50.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:50.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038370667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048441361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:50.323" endtime="20201112 09:56:50.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:50.340" endtime="20201112 09:56:50.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:49.958" endtime="20201112 09:56:50.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:49.954" endtime="20201112 09:56:50.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:50.404" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:50.349" endtime="20201112 09:56:50.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:50.415" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:56:50.413" endtime="20201112 09:56:50.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:50.419" level="INFO">VALUE: 0.038370667</msg>
<status status="PASS" starttime="20201112 09:56:50.417" endtime="20201112 09:56:50.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:50.406" endtime="20201112 09:56:50.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:50.433" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:50.430" endtime="20201112 09:56:50.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:50.437" level="INFO">VALUE: [0.048441361, 0.058473542, 0.068505639, 0.078537167, 0.088569403, 0.098600611, 0.108631708, 0.118662083, 0.128693722, 0.138725208, 0.148757014, 0.158789764, 0.168821583, 0.178853194, 0.188884014, 0.198916278, 0.208948667, 0.218981556, 0.229012708, 0.239045653, 0.249078375, 0.259109389, 0.269141514, 0.279174875, 0.289209792, 0.299242153, 0.309273736, 0.319305431, 0.329337847, 0.339369611, 0.349400583, 0.359431125, 0.369462181, 0.379492944, 0.389524514, 0.399555681, 0.409586181, 0.419616694, 0.429647361, 0.439677042, 0.449708181, 0.459737653, 0.469768875, 0.479799444, 0.489831056, 0.499862153, 0.509895722, 0.519929806, 0.529964264, 0.539997167, 0.550029625, 0.560061278, 0.570092056, 0.580123653, 0.590155681, 0.600186819, 0.610218347, 0.620249806, 0.630281931, 0.640313972, 0.650346806, 0.660380208, 0.670412264, 0.680443472, 0.690475806, 0.700507653, 0.710540389, 0.720572917, 0.730605431, 0.740636694, 0.750667431, 0.760698181, 0.770731778, 0.780764236, 0.790795306, 0.800826569, 0.810857861, 0.820889, 0.830920236, 0.840951833, 0.850983944, 0.86101575, 0.871048028, 0.881081222, 0.891113722, 0.901145694, 0.911178681, 0.921211875, 0.931245056, 0.941276903, 0.951309694, 0.961341194, 0.971372903, 0.981404042, 0.991436486, 1.001467778, 1.011499, 1.021530694, 1.031563361, 1.041594375] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:50.435" endtime="20201112 09:56:50.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:50.423" endtime="20201112 09:56:50.440"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:50.447" endtime="20201112 09:56:50.450"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:50.455" endtime="20201112 09:56:50.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:50.451" endtime="20201112 09:56:50.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:50.442" endtime="20201112 09:56:50.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:47.732" endtime="20201112 09:56:50.481"></status>
</kw>
<msg timestamp="20201112 09:56:50.481" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:50.504" endtime="20201112 09:56:52.623"></status>
</kw>
<msg timestamp="20201112 09:56:52.624" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6201547, 'wakeups': [6211585, 6221585, 6231585, 6241585, 6251585, 6261...</msg>
<status status="PASS" starttime="20201112 09:56:50.501" endtime="20201112 09:56:52.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:52.631" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6201547, 'wakeups': [6211585, 6221585, 6231585, 6241585, 6251585, 6261...</msg>
<status status="PASS" starttime="20201112 09:56:52.626" endtime="20201112 09:56:52.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:52.633" endtime="20201112 09:56:52.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:50.493" endtime="20201112 09:56:52.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:50.486" endtime="20201112 09:56:52.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:52.646" level="INFO">${RESULT} = {'wakeups': [6211585, 6221585, 6231585, 6241585, 6251585, 6261585, 6271585, 6281585, 6291585, 6301585, 6311585, 6321585, 6331585, 6341585, 6351585, 6361585, 6371585, 6381585, 6391585, 6401585, 6411585...</msg>
<status status="PASS" starttime="20201112 09:56:52.642" endtime="20201112 09:56:52.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:52.657" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:52.654" endtime="20201112 09:56:52.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:52.661" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:52.659" endtime="20201112 09:56:52.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:52.648" endtime="20201112 09:56:52.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:52.673" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:56:52.671" endtime="20201112 09:56:52.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:52.678" level="INFO">VALUE: 6201547</msg>
<status status="PASS" starttime="20201112 09:56:52.676" endtime="20201112 09:56:52.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:52.665" endtime="20201112 09:56:52.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:52.690" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:52.688" endtime="20201112 09:56:52.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:52.695" level="INFO">VALUE: [6211585, 6221585, 6231585, 6241585, 6251585, 6261585, 6271585, 6281585, 6291585, 6301585, 6311585, 6321585, 6331585, 6341585, 6351585, 6361585, 6371585, 6381585, 6391585, 6401585, 6411585, 6421585, 6431585, 6441585, 6451585, 6461585, 6471585, 6481585, 6491585, 6501585, 6511585, 6521585, 6531585, 6541585, 6551585, 6561585, 6571585, 6581585, 6591585, 6601585, 6611585, 6621585, 6631585, 6641585, 6651585, 6661585, 6671585, 6681585, 6691585, 6701585, 6711585, 6721585, 6731585, 6741585, 6751585, 6761585, 6771585, 6781585, 6791585, 6801585, 6811585, 6821585, 6831585, 6841585, 6851585, 6861585, 6871585, 6881585, 6891585, 6901585, 6911585, 6921585, 6931585, 6941585, 6951585, 6961585, 6971585, 6981585, 6991585, 7001585, 7011585, 7021585, 7031585, 7041585, 7051585, 7061585, 7071585, 7081585, 7091585, 7101585, 7111585, 7121585, 7131585, 7141585, 7151585, 7161585, 7171585, 7181585, 7191585, 7201585]</msg>
<status status="PASS" starttime="20201112 09:56:52.693" endtime="20201112 09:56:52.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:52.681" endtime="20201112 09:56:52.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:52.715" endtime="20201112 09:56:53.062"></status>
</kw>
<msg timestamp="20201112 09:56:53.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039658417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049728222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:52.712" endtime="20201112 09:56:53.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:53.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039658417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049728222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:53.071" endtime="20201112 09:56:53.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:53.088" endtime="20201112 09:56:53.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:52.704" endtime="20201112 09:56:53.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:52.699" endtime="20201112 09:56:53.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:53.152" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:53.097" endtime="20201112 09:56:53.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:53.163" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:56:53.160" endtime="20201112 09:56:53.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:53.167" level="INFO">VALUE: 0.039658417</msg>
<status status="PASS" starttime="20201112 09:56:53.165" endtime="20201112 09:56:53.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:53.154" endtime="20201112 09:56:53.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:53.181" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:53.178" endtime="20201112 09:56:53.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:53.185" level="INFO">VALUE: [0.049728222, 0.05975875, 0.0697905, 0.079822569, 0.089854014, 0.099884792, 0.109915431, 0.119946236, 0.129977167, 0.140007819, 0.150038597, 0.160068361, 0.170099222, 0.180131181, 0.190162319, 0.200192833, 0.210224, 0.220254736, 0.230285528, 0.240315903, 0.250345764, 0.260375986, 0.270406472, 0.280436389, 0.290467056, 0.300497917, 0.310528681, 0.320559083, 0.330591278, 0.340621903, 0.350652736, 0.360683083, 0.370713556, 0.380744153, 0.390774361, 0.400804778, 0.410835292, 0.420866694, 0.430897458, 0.440928236, 0.45095775, 0.460987139, 0.471017375, 0.481047417, 0.491078222, 0.501108125, 0.511137792, 0.521167931, 0.531197903, 0.541228167, 0.551258778, 0.561289028, 0.571320333, 0.581351764, 0.591383667, 0.601414847, 0.611446319, 0.621479, 0.631511208, 0.641541819, 0.651573042, 0.661603542, 0.671634986, 0.681665847, 0.691696917, 0.701727819, 0.711759139, 0.721790389, 0.731822278, 0.741853292, 0.751883944, 0.761914931, 0.771947139, 0.781978375, 0.792010319, 0.802042083, 0.812073917, 0.822104931, 0.832135903, 0.842167056, 0.852197958, 0.862229417, 0.872260736, 0.8822925, 0.892325639, 0.902357653, 0.912389708, 0.922421792, 0.932454194, 0.942485014, 0.952516236, 0.962546194, 0.972578014, 0.982610736, 0.992643444, 1.002675028, 1.012707486, 1.022740278, 1.032772431, 1.042803667] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:53.183" endtime="20201112 09:56:53.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:53.171" endtime="20201112 09:56:53.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:53.194" endtime="20201112 09:56:53.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:53.202" endtime="20201112 09:56:53.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:53.198" endtime="20201112 09:56:53.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:53.189" endtime="20201112 09:56:53.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:50.483" endtime="20201112 09:56:53.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.945" endtime="20201112 09:56:53.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.943" endtime="20201112 09:56:53.229"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:56:53.235" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:53.256" endtime="20201112 09:56:55.395"></status>
</kw>
<msg timestamp="20201112 09:56:55.397" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8945581, 'wakeups': [8955651, 8965650, 8975650, 8985650, 8995650, 9005...</msg>
<status status="PASS" starttime="20201112 09:56:53.252" endtime="20201112 09:56:55.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:55.403" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8945581, 'wakeups': [8955651, 8965650, 8975650, 8985650, 8995650, 9005...</msg>
<status status="PASS" starttime="20201112 09:56:55.399" endtime="20201112 09:56:55.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:55.406" endtime="20201112 09:56:55.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:53.245" endtime="20201112 09:56:55.411"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:53.240" endtime="20201112 09:56:55.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:55.419" level="INFO">${RESULT} = {'wakeups': [8955651, 8965650, 8975650, 8985650, 8995650, 9005651, 9015651, 9025650, 9035650, 9045651, 9055650, 9065650, 9075651, 9085651, 9095650, 9105651, 9115650, 9125650, 9135650, 9145650, 9155650...</msg>
<status status="PASS" starttime="20201112 09:56:55.415" endtime="20201112 09:56:55.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:55.429" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:55.427" endtime="20201112 09:56:55.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:55.434" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:55.432" endtime="20201112 09:56:55.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:55.421" endtime="20201112 09:56:55.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:55.446" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:56:55.444" endtime="20201112 09:56:55.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:55.451" level="INFO">VALUE: 8945581</msg>
<status status="PASS" starttime="20201112 09:56:55.449" endtime="20201112 09:56:55.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:55.437" endtime="20201112 09:56:55.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:55.464" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:55.461" endtime="20201112 09:56:55.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:55.469" level="INFO">VALUE: [8955651, 8965650, 8975650, 8985650, 8995650, 9005651, 9015651, 9025650, 9035650, 9045651, 9055650, 9065650, 9075651, 9085651, 9095650, 9105651, 9115650, 9125650, 9135650, 9145650, 9155650, 9165650, 9175650, 9185650, 9195650, 9205651, 9215650, 9225651, 9235650, 9245650, 9255650, 9265650, 9275651, 9285651, 9295650, 9305650, 9315650, 9325650, 9335650, 9345650, 9355650, 9365650, 9375650, 9385650, 9395650, 9405650, 9415650, 9425650, 9435650, 9445650, 9455650, 9465650, 9475651, 9485650, 9495650, 9505650, 9515650, 9525650, 9535650, 9545650, 9555650, 9565650, 9575650, 9585650, 9595650, 9605650, 9615650, 9625650, 9635650, 9645650, 9655651, 9665650, 9675650, 9685650, 9695651, 9705650, 9715650, 9725650, 9735651, 9745650, 9755650, 9765650, 9775650, 9785650, 9795650, 9805650, 9815650, 9825651, 9835650, 9845650, 9855650, 9865650, 9875650, 9885650, 9895650, 9905651, 9915650, 9925650, 9935650, 9945650]</msg>
<status status="PASS" starttime="20201112 09:56:55.466" endtime="20201112 09:56:55.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:55.455" endtime="20201112 09:56:55.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:55.490" endtime="20201112 09:56:55.848"></status>
</kw>
<msg timestamp="20201112 09:56:55.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044961417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055061819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:55.486" endtime="20201112 09:56:55.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:55.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044961417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055061819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:55.857" endtime="20201112 09:56:55.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:55.874" endtime="20201112 09:56:55.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:55.479" endtime="20201112 09:56:55.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:55.474" endtime="20201112 09:56:55.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:55.942" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:55.888" endtime="20201112 09:56:55.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:55.953" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:56:55.951" endtime="20201112 09:56:55.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:55.958" level="INFO">VALUE: 0.044961417</msg>
<status status="PASS" starttime="20201112 09:56:55.955" endtime="20201112 09:56:55.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:55.944" endtime="20201112 09:56:55.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:55.971" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:55.969" endtime="20201112 09:56:55.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:55.976" level="INFO">VALUE: [0.055061819, 0.065090458, 0.075120333, 0.085150528, 0.095179431, 0.105208792, 0.115237847, 0.125266694, 0.13529625, 0.145325639, 0.155354097, 0.165383306, 0.175414514, 0.185443069, 0.195472153, 0.205503153, 0.215531556, 0.225560958, 0.235591222, 0.2456215, 0.255650778, 0.265680889, 0.27571125, 0.285740903, 0.295771361, 0.305803069, 0.315834069, 0.325865667, 0.335896458, 0.345926667, 0.355957556, 0.365988639, 0.376019319, 0.386049014, 0.396078611, 0.40611, 0.416140653, 0.426171014, 0.436201056, 0.446231167, 0.456261653, 0.466292278, 0.476323083, 0.486353264, 0.496383778, 0.506414014, 0.516443944, 0.526473472, 0.536504306, 0.546534, 0.556564306, 0.566594694, 0.576625819, 0.586655486, 0.596686611, 0.606717375, 0.616749306, 0.626780486, 0.636811722, 0.646842889, 0.656874347, 0.666905139, 0.676935875, 0.686966458, 0.696997681, 0.707029306, 0.717061167, 0.727091792, 0.7371235, 0.747154597, 0.757187181, 0.767216236, 0.777245861, 0.787276778, 0.797309083, 0.807340153, 0.817371042, 0.827401861, 0.837433264, 0.847462847, 0.857493319, 0.867524806, 0.877555556, 0.887586611, 0.897617264, 0.907647361, 0.917678125, 0.927709014, 0.937738181, 0.947767458, 0.957797875, 0.967829264, 0.977861653, 0.987894014, 0.997926278, 1.007959042, 1.017989778, 1.028020292, 1.038050708, 1.04808125] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:55.973" endtime="20201112 09:56:55.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:55.961" endtime="20201112 09:56:55.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:55.984" endtime="20201112 09:56:55.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:55.993" endtime="20201112 09:56:56.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:55.988" endtime="20201112 09:56:56.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:55.980" endtime="20201112 09:56:56.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:53.236" endtime="20201112 09:56:56.019"></status>
</kw>
<msg timestamp="20201112 09:56:56.019" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:56.042" endtime="20201112 09:56:58.194"></status>
</kw>
<msg timestamp="20201112 09:56:58.195" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11722013, 'wakeups': [11732083, 11742082, 11752082, 11762083, 11772082...</msg>
<status status="PASS" starttime="20201112 09:56:56.038" endtime="20201112 09:56:58.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.202" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11722013, 'wakeups': [11732083, 11742082, 11752082, 11762083, 11772082...</msg>
<status status="PASS" starttime="20201112 09:56:58.197" endtime="20201112 09:56:58.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:58.204" endtime="20201112 09:56:58.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:56.031" endtime="20201112 09:56:58.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:56.024" endtime="20201112 09:56:58.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:58.218" level="INFO">${RESULT} = {'wakeups': [11732083, 11742082, 11752082, 11762083, 11772082, 11782083, 11792083, 11802082, 11812082, 11822082, 11832082, 11842082, 11852082, 11862082, 11872082, 11882082, 11892082, 11902082, 1191208...</msg>
<status status="PASS" starttime="20201112 09:56:58.213" endtime="20201112 09:56:58.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.229" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:58.227" endtime="20201112 09:56:58.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.234" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:58.232" endtime="20201112 09:56:58.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.220" endtime="20201112 09:56:58.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.247" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:56:58.244" endtime="20201112 09:56:58.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.252" level="INFO">VALUE: 11722013</msg>
<status status="PASS" starttime="20201112 09:56:58.250" endtime="20201112 09:56:58.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.238" endtime="20201112 09:56:58.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.264" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:58.262" endtime="20201112 09:56:58.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.269" level="INFO">VALUE: [11732083, 11742082, 11752082, 11762083, 11772082, 11782083, 11792083, 11802082, 11812082, 11822082, 11832082, 11842082, 11852082, 11862082, 11872082, 11882082, 11892082, 11902082, 11912082, 11922082, 11932083, 11942082, 11952082, 11962082, 11972082, 11982082, 11992082, 12002082, 12012082, 12022082, 12032082, 12042082, 12052083, 12062082, 12072082, 12082082, 12092082, 12102082, 12112082, 12122082, 12132082, 12142082, 12152082, 12162082, 12172082, 12182082, 12192082, 12202082, 12212082, 12222082, 12232082, 12242082, 12252083, 12262082, 12272082, 12282082, 12292083, 12302082, 12312082, 12322082, 12332082, 12342083, 12352083, 12362082, 12372082, 12382082, 12392083, 12402082, 12412083, 12422082, 12432082, 12442082, 12452082, 12462082, 12472082, 12482082, 12492082, 12502082, 12512082, 12522082, 12532082, 12542082, 12552082, 12562082, 12572083, 12582082, 12592083, 12602082, 12612082, 12622082, 12632083, 12642082, 12652082, 12662082, 12672083, 12682082, 12692083, 12702082, 12712082, 12722082]</msg>
<status status="PASS" starttime="20201112 09:56:58.267" endtime="20201112 09:56:58.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.255" endtime="20201112 09:56:58.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:58.288" endtime="20201112 09:56:58.647"></status>
</kw>
<msg timestamp="20201112 09:56:58.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039688111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049792528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:58.285" endtime="20201112 09:56:58.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039688111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049792528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:58.656" endtime="20201112 09:56:58.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:58.674" endtime="20201112 09:56:58.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.278" endtime="20201112 09:56:58.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.273" endtime="20201112 09:56:58.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:58.738" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:56:58.682" endtime="20201112 09:56:58.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.749" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:56:58.747" endtime="20201112 09:56:58.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.753" level="INFO">VALUE: 0.039688111</msg>
<status status="PASS" starttime="20201112 09:56:58.751" endtime="20201112 09:56:58.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.740" endtime="20201112 09:56:58.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.767" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:58.765" endtime="20201112 09:56:58.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.773" level="INFO">VALUE: [0.049792528, 0.059823514, 0.069855875, 0.079889389, 0.089922361, 0.099958472, 0.109992056, 0.120024875, 0.130060569, 0.140095861, 0.150130833, 0.160166583, 0.170202889, 0.180237208, 0.190270875, 0.200304931, 0.210339389, 0.220372389, 0.230405833, 0.240437917, 0.250471167, 0.260502903, 0.270537625, 0.280573597, 0.290610069, 0.300646264, 0.310681778, 0.320717736, 0.330754278, 0.340790917, 0.350828417, 0.360863375, 0.37089975, 0.380933667, 0.390968528, 0.40100275, 0.411038181, 0.421073917, 0.431108847, 0.441143611, 0.451178431, 0.461213681, 0.471248806, 0.481283944, 0.491318583, 0.501351736, 0.511386569, 0.521420653, 0.531455431, 0.541490194, 0.551524306, 0.561558417, 0.571593319, 0.581625222, 0.591658681, 0.601692083, 0.611726569, 0.621759472, 0.631793069, 0.641827014, 0.651861333, 0.66189675, 0.671931375, 0.681965069, 0.691999542, 0.702033292, 0.712067764, 0.722099917, 0.732134486, 0.742167083, 0.752201181, 0.762235667, 0.772269931, 0.782301875, 0.792333847, 0.802365806, 0.812397708, 0.822429694, 0.832462958, 0.842495569, 0.852530014, 0.862564514, 0.872598694, 0.882632819, 0.892669153, 0.902703236, 0.912738417, 0.922771458, 0.932805403, 0.942839389, 0.952875111, 0.962908097, 0.972942681, 0.982976403, 0.993010236, 1.003042889, 1.013076722, 1.023108806, 1.033141875, 1.043175792] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:58.770" endtime="20201112 09:56:58.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.757" endtime="20201112 09:56:58.775"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:58.782" endtime="20201112 09:56:58.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:58.790" endtime="20201112 09:56:58.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.786" endtime="20201112 09:56:58.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.777" endtime="20201112 09:56:58.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:56.021" endtime="20201112 09:56:58.816"></status>
</kw>
<msg timestamp="20201112 09:56:58.816" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:58.838" endtime="20201112 09:57:00.995"></status>
</kw>
<msg timestamp="20201112 09:57:00.997" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14509517, 'wakeups': [14519587, 14529586, 14539586, 14549586, 14559586...</msg>
<status status="PASS" starttime="20201112 09:56:58.834" endtime="20201112 09:57:00.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:01.004" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14509517, 'wakeups': [14519587, 14529586, 14539586, 14549586, 14559586...</msg>
<status status="PASS" starttime="20201112 09:57:00.999" endtime="20201112 09:57:01.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:01.006" endtime="20201112 09:57:01.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.827" endtime="20201112 09:57:01.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.822" endtime="20201112 09:57:01.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:01.020" level="INFO">${RESULT} = {'wakeups': [14519587, 14529586, 14539586, 14549586, 14559586, 14569586, 14579586, 14589586, 14599586, 14609586, 14619586, 14629586, 14639586, 14649586, 14659586, 14669586, 14679586, 14689586, 1469958...</msg>
<status status="PASS" starttime="20201112 09:57:01.015" endtime="20201112 09:57:01.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:01.030" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:01.028" endtime="20201112 09:57:01.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:01.035" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:01.032" endtime="20201112 09:57:01.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.022" endtime="20201112 09:57:01.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:01.047" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:57:01.045" endtime="20201112 09:57:01.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:01.052" level="INFO">VALUE: 14509517</msg>
<status status="PASS" starttime="20201112 09:57:01.050" endtime="20201112 09:57:01.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.038" endtime="20201112 09:57:01.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:01.064" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:01.062" endtime="20201112 09:57:01.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:01.086" level="INFO">VALUE: [14519587, 14529586, 14539586, 14549586, 14559586, 14569586, 14579586, 14589586, 14599586, 14609586, 14619586, 14629586, 14639586, 14649586, 14659586, 14669586, 14679586, 14689586, 14699587, 14709586, 14719586, 14729586, 14739587, 14749587, 14759587, 14769586, 14779586, 14789586, 14799586, 14809587, 14819586, 14829587, 14839586, 14849587, 14859586, 14869586, 14879586, 14889586, 14899586, 14909586, 14919586, 14929586, 14939586, 14949586, 14959586, 14969586, 14979586, 14989586, 14999586, 15009586, 15019587, 15029586, 15039586, 15049586, 15059586, 15069586, 15079586, 15089586, 15099586, 15109586, 15119586, 15129586, 15139586, 15149586, 15159586, 15169586, 15179586, 15189586, 15199586, 15209586, 15219586, 15229586, 15239587, 15249587, 15259586, 15269586, 15279586, 15289586, 15299586, 15309587, 15319586, 15329586, 15339586, 15349586, 15359587, 15369586, 15379586, 15389586, 15399586, 15409586, 15419586, 15429586, 15439586, 15449586, 15459586, 15469586, 15479586, 15489586, 15499586, 15509586]</msg>
<status status="PASS" starttime="20201112 09:57:01.081" endtime="20201112 09:57:01.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.055" endtime="20201112 09:57:01.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:01.105" endtime="20201112 09:57:01.475"></status>
</kw>
<msg timestamp="20201112 09:57:01.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038631528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048733236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:01.102" endtime="20201112 09:57:01.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:01.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038631528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048733236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:01.484" endtime="20201112 09:57:01.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:01.501" endtime="20201112 09:57:01.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.094" endtime="20201112 09:57:01.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.090" endtime="20201112 09:57:01.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:01.565" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:57:01.510" endtime="20201112 09:57:01.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:01.576" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:57:01.573" endtime="20201112 09:57:01.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:01.580" level="INFO">VALUE: 0.038631528</msg>
<status status="PASS" starttime="20201112 09:57:01.578" endtime="20201112 09:57:01.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.567" endtime="20201112 09:57:01.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:01.594" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:01.592" endtime="20201112 09:57:01.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:01.599" level="INFO">VALUE: [0.048733236, 0.058764514, 0.068797403, 0.078829417, 0.088861403, 0.098893778, 0.108926264, 0.118959056, 0.128991458, 0.139024597, 0.149058528, 0.159091, 0.169124583, 0.179156917, 0.189188819, 0.199219986, 0.209251139, 0.219282069, 0.22931375, 0.239342625, 0.249372681, 0.259402861, 0.269435653, 0.279466472, 0.289497847, 0.299528639, 0.309560333, 0.319590722, 0.329620972, 0.339651764, 0.349680889, 0.359712458, 0.369742667, 0.379775778, 0.389807181, 0.399839708, 0.409871958, 0.419903569, 0.429935931, 0.439967694, 0.450000361, 0.460032819, 0.470065431, 0.480098903, 0.490131056, 0.500164444, 0.510197278, 0.520230208, 0.530262347, 0.540293264, 0.550325264, 0.560356972, 0.570389972, 0.580421889, 0.590454486, 0.600486014, 0.610518972, 0.620550403, 0.630583611, 0.640616208, 0.650649625, 0.6606825, 0.670715153, 0.680748806, 0.690782861, 0.70081575, 0.710849181, 0.720881625, 0.730914917, 0.740948278, 0.750980875, 0.761014083, 0.771048819, 0.781081167, 0.791113347, 0.801146375, 0.811179819, 0.821212778, 0.831246111, 0.841279889, 0.851311903, 0.861343792, 0.871375875, 0.881409014, 0.891441681, 0.901472528, 0.911504889, 0.921536181, 0.931568597, 0.941600139, 0.951632347, 0.961665069, 0.971698458, 0.981730347, 0.991763542, 1.001797069, 1.011829722, 1.021863, 1.031896625, 1.041928139] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:01.596" endtime="20201112 09:57:01.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.584" endtime="20201112 09:57:01.601"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:01.608" endtime="20201112 09:57:01.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:01.616" endtime="20201112 09:57:01.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.611" endtime="20201112 09:57:01.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.603" endtime="20201112 09:57:01.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.818" endtime="20201112 09:57:01.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:53.232" endtime="20201112 09:57:01.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:53.230" endtime="20201112 09:57:01.643"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:57:01.649" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:01.672" endtime="20201112 09:57:03.831"></status>
</kw>
<msg timestamp="20201112 09:57:03.832" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 17335034, 'wakeups': [17345136, 17355135, 17365135, 17375135, 17385135...</msg>
<status status="PASS" starttime="20201112 09:57:01.669" endtime="20201112 09:57:03.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:03.839" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 17335034, 'wakeups': [17345136, 17355135, 17365135, 17375135, 17385135...</msg>
<status status="PASS" starttime="20201112 09:57:03.834" endtime="20201112 09:57:03.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:03.842" endtime="20201112 09:57:03.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.661" endtime="20201112 09:57:03.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.654" endtime="20201112 09:57:03.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:03.855" level="INFO">${RESULT} = {'wakeups': [17345136, 17355135, 17365135, 17375135, 17385135, 17395135, 17405135, 17415135, 17425135, 17435135, 17445135, 17455136, 17465135, 17475135, 17485135, 17495136, 17505135, 17515135, 1752513...</msg>
<status status="PASS" starttime="20201112 09:57:03.850" endtime="20201112 09:57:03.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:03.865" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:03.863" endtime="20201112 09:57:03.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:03.870" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:03.867" endtime="20201112 09:57:03.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:03.857" endtime="20201112 09:57:03.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:03.882" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:57:03.880" endtime="20201112 09:57:03.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:03.887" level="INFO">VALUE: 17335034</msg>
<status status="PASS" starttime="20201112 09:57:03.885" endtime="20201112 09:57:03.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:03.873" endtime="20201112 09:57:03.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:03.899" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:03.897" endtime="20201112 09:57:03.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:03.904" level="INFO">VALUE: [17345136, 17355135, 17365135, 17375135, 17385135, 17395135, 17405135, 17415135, 17425135, 17435135, 17445135, 17455136, 17465135, 17475135, 17485135, 17495136, 17505135, 17515135, 17525135, 17535136, 17545135, 17555135, 17565135, 17575135, 17585135, 17595135, 17605135, 17615135, 17625135, 17635136, 17645136, 17655136, 17665135, 17675136, 17685136, 17695136, 17705135, 17715136, 17725135, 17735135, 17745135, 17755135, 17765135, 17775135, 17785135, 17795136, 17805135, 17815135, 17825135, 17835135, 17845136, 17855135, 17865135, 17875135, 17885135, 17895135, 17905135, 17915135, 17925136, 17935136, 17945135, 17955135, 17965135, 17975135, 17985135, 17995135, 18005135, 18015136, 18025135, 18035136, 18045135, 18055135, 18065135, 18075136, 18085136, 18095136, 18105135, 18115136, 18125135, 18135136, 18145135, 18155135, 18165136, 18175135, 18185135, 18195135, 18205135, 18215135, 18225135, 18235135, 18245135, 18255135, 18265135, 18275136, 18285135, 18295135, 18305135, 18315135, 18325135, 18335135]</msg>
<status status="PASS" starttime="20201112 09:57:03.902" endtime="20201112 09:57:03.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:03.891" endtime="20201112 09:57:03.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:03.924" endtime="20201112 09:57:04.280"></status>
</kw>
<msg timestamp="20201112 09:57:04.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047077153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057211222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:03.920" endtime="20201112 09:57:04.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:04.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047077153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057211222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:04.288" endtime="20201112 09:57:04.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:04.305" endtime="20201112 09:57:04.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:03.913" endtime="20201112 09:57:04.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:03.908" endtime="20201112 09:57:04.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:04.369" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:57:04.314" endtime="20201112 09:57:04.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:04.380" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:57:04.378" endtime="20201112 09:57:04.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:04.385" level="INFO">VALUE: 0.047077153</msg>
<status status="PASS" starttime="20201112 09:57:04.383" endtime="20201112 09:57:04.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:04.371" endtime="20201112 09:57:04.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:04.398" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:04.396" endtime="20201112 09:57:04.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:04.403" level="INFO">VALUE: [0.057211222, 0.067241264, 0.077272764, 0.087304722, 0.097336444, 0.107367792, 0.117399222, 0.127431097, 0.137462139, 0.147492236, 0.157522125, 0.167553639, 0.177583667, 0.187615375, 0.197646597, 0.207677125, 0.217706194, 0.227736306, 0.237767167, 0.247798542, 0.257828056, 0.267857667, 0.277888542, 0.287919264, 0.297950167, 0.307979722, 0.318010375, 0.328041556, 0.338072569, 0.348104611, 0.358135694, 0.36816625, 0.378196667, 0.388227653, 0.398258431, 0.408287667, 0.418316458, 0.428346042, 0.438374889, 0.448404694, 0.458434819, 0.468464431, 0.478494903, 0.488524958, 0.498555778, 0.508586486, 0.518615778, 0.528647833, 0.538680556, 0.548711639, 0.558744306, 0.568774472, 0.578805736, 0.588836583, 0.598868236, 0.608900083, 0.618932472, 0.62896375, 0.638995778, 0.649026181, 0.659056167, 0.669087681, 0.679118944, 0.689148639, 0.699179681, 0.709209889, 0.719240764, 0.7292725, 0.739301917, 0.749332292, 0.759362681, 0.769393208, 0.779423431, 0.789454306, 0.799485972, 0.809517236, 0.819547986, 0.829580431, 0.839611319, 0.849643792, 0.859675319, 0.869706736, 0.879740472, 0.889772139, 0.899804847, 0.909835972, 0.919867542, 0.929899014, 0.939930319, 0.949961514, 0.959993972, 0.970025389, 0.980056833, 0.990088792, 1.000119125, 1.010150667, 1.020183153, 1.030216236, 1.040248944, 1.050280333] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:04.401" endtime="20201112 09:57:04.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:04.388" endtime="20201112 09:57:04.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:04.413" endtime="20201112 09:57:04.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:04.422" endtime="20201112 09:57:04.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:04.417" endtime="20201112 09:57:04.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:04.408" endtime="20201112 09:57:04.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.651" endtime="20201112 09:57:04.448"></status>
</kw>
<msg timestamp="20201112 09:57:04.449" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:04.470" endtime="20201112 09:57:06.628"></status>
</kw>
<msg timestamp="20201112 09:57:06.629" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20124114, 'wakeups': [20134216, 20144215, 20154215, 20164215, 20174215...</msg>
<status status="PASS" starttime="20201112 09:57:04.466" endtime="20201112 09:57:06.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:06.643" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20124114, 'wakeups': [20134216, 20144215, 20154215, 20164215, 20174215...</msg>
<status status="PASS" starttime="20201112 09:57:06.632" endtime="20201112 09:57:06.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:06.646" endtime="20201112 09:57:06.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:04.459" endtime="20201112 09:57:06.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:04.454" endtime="20201112 09:57:06.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:06.659" level="INFO">${RESULT} = {'wakeups': [20134216, 20144215, 20154215, 20164215, 20174215, 20184215, 20194215, 20204215, 20214215, 20224215, 20234215, 20244215, 20254215, 20264215, 20274215, 20284215, 20294215, 20304215, 2031421...</msg>
<status status="PASS" starttime="20201112 09:57:06.655" endtime="20201112 09:57:06.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:06.670" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:06.667" endtime="20201112 09:57:06.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:06.674" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:06.672" endtime="20201112 09:57:06.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:06.661" endtime="20201112 09:57:06.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:06.687" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:57:06.685" endtime="20201112 09:57:06.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:06.691" level="INFO">VALUE: 20124114</msg>
<status status="PASS" starttime="20201112 09:57:06.689" endtime="20201112 09:57:06.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:06.678" endtime="20201112 09:57:06.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:06.704" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:06.702" endtime="20201112 09:57:06.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:06.711" level="INFO">VALUE: [20134216, 20144215, 20154215, 20164215, 20174215, 20184215, 20194215, 20204215, 20214215, 20224215, 20234215, 20244215, 20254215, 20264215, 20274215, 20284215, 20294215, 20304215, 20314215, 20324215, 20334215, 20344215, 20354215, 20364215, 20374215, 20384215, 20394215, 20404215, 20414215, 20424215, 20434215, 20444215, 20454215, 20464215, 20474215, 20484215, 20494215, 20504215, 20514215, 20524215, 20534215, 20544215, 20554215, 20564215, 20574215, 20584216, 20594215, 20604216, 20614215, 20624215, 20634215, 20644215, 20654215, 20664215, 20674215, 20684216, 20694215, 20704215, 20714216, 20724215, 20734215, 20744215, 20754215, 20764215, 20774215, 20784215, 20794215, 20804215, 20814215, 20824215, 20834215, 20844215, 20854215, 20864215, 20874215, 20884215, 20894216, 20904215, 20914215, 20924216, 20934215, 20944215, 20954215, 20964215, 20974215, 20984215, 20994215, 21004216, 21014215, 21024215, 21034215, 21044216, 21054215, 21064216, 21074215, 21084215, 21094215, 21104215, 21114215, 21124215]</msg>
<status status="PASS" starttime="20201112 09:57:06.706" endtime="20201112 09:57:06.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:06.695" endtime="20201112 09:57:06.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:06.730" endtime="20201112 09:57:07.085"></status>
</kw>
<msg timestamp="20201112 09:57:07.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038772792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048906917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:06.727" endtime="20201112 09:57:07.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:07.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038772792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048906917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:07.094" endtime="20201112 09:57:07.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:07.111" endtime="20201112 09:57:07.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:06.720" endtime="20201112 09:57:07.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:06.715" endtime="20201112 09:57:07.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:07.174" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:57:07.120" endtime="20201112 09:57:07.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:07.186" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:57:07.183" endtime="20201112 09:57:07.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:07.190" level="INFO">VALUE: 0.038772792</msg>
<status status="PASS" starttime="20201112 09:57:07.188" endtime="20201112 09:57:07.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:07.177" endtime="20201112 09:57:07.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:07.204" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:07.202" endtime="20201112 09:57:07.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:07.209" level="INFO">VALUE: [0.048906917, 0.058937333, 0.068970486, 0.079002458, 0.089034903, 0.099067, 0.109098611, 0.119129792, 0.129162597, 0.139195083, 0.149227222, 0.159258319, 0.169290181, 0.179321306, 0.189352222, 0.199382028, 0.209412181, 0.219442278, 0.229472972, 0.2395045, 0.249537, 0.259569111, 0.269600833, 0.279632944, 0.289665111, 0.299697264, 0.309729292, 0.319761056, 0.329792597, 0.339824181, 0.349856083, 0.359888069, 0.369919986, 0.379950667, 0.38998175, 0.400013097, 0.410044583, 0.420076236, 0.430108097, 0.440139514, 0.450171194, 0.460203569, 0.470236333, 0.480268139, 0.490299125, 0.500331, 0.510361847, 0.520393583, 0.530424181, 0.540456042, 0.550486722, 0.560517736, 0.570548778, 0.580579722, 0.590610361, 0.600642292, 0.6106725, 0.620703611, 0.630735694, 0.640764764, 0.650795917, 0.660826556, 0.670856653, 0.680887569, 0.690918583, 0.700949847, 0.710980972, 0.721012361, 0.731043528, 0.741074375, 0.751105681, 0.761137111, 0.771167958, 0.781197986, 0.791228847, 0.80125925, 0.811292, 0.821322083, 0.831353153, 0.841384389, 0.851414292, 0.861446083, 0.871478153, 0.881509097, 0.891542708, 0.901576611, 0.911611542, 0.921646917, 0.931681556, 0.941715292, 0.951748208, 0.961782014, 0.971813194, 0.981845375, 0.991875097, 1.001905875, 1.011935819, 1.021967139, 1.031999917, 1.042031958] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:07.206" endtime="20201112 09:57:07.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:07.194" endtime="20201112 09:57:07.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:07.217" endtime="20201112 09:57:07.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:07.226" endtime="20201112 09:57:07.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:07.221" endtime="20201112 09:57:07.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:07.213" endtime="20201112 09:57:07.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:04.450" endtime="20201112 09:57:07.254"></status>
</kw>
<msg timestamp="20201112 09:57:07.255" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:07.276" endtime="20201112 09:57:09.454"></status>
</kw>
<msg timestamp="20201112 09:57:09.455" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22921764, 'wakeups': [22931866, 22941865, 22951865, 22961865, 22971865...</msg>
<status status="PASS" starttime="20201112 09:57:07.273" endtime="20201112 09:57:09.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:09.462" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22921764, 'wakeups': [22931866, 22941865, 22951865, 22961865, 22971865...</msg>
<status status="PASS" starttime="20201112 09:57:09.458" endtime="20201112 09:57:09.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:09.465" endtime="20201112 09:57:09.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:07.265" endtime="20201112 09:57:09.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:07.260" endtime="20201112 09:57:09.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:09.478" level="INFO">${RESULT} = {'wakeups': [22931866, 22941865, 22951865, 22961865, 22971865, 22981865, 22991865, 23001865, 23011865, 23021866, 23031865, 23041865, 23051865, 23061866, 23071865, 23081866, 23091865, 23101865, 2311186...</msg>
<status status="PASS" starttime="20201112 09:57:09.473" endtime="20201112 09:57:09.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:09.488" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:09.486" endtime="20201112 09:57:09.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:09.493" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:09.490" endtime="20201112 09:57:09.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:09.480" endtime="20201112 09:57:09.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:09.506" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:57:09.504" endtime="20201112 09:57:09.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:09.511" level="INFO">VALUE: 22921764</msg>
<status status="PASS" starttime="20201112 09:57:09.508" endtime="20201112 09:57:09.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:09.497" endtime="20201112 09:57:09.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:09.523" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:09.521" endtime="20201112 09:57:09.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:09.528" level="INFO">VALUE: [22931866, 22941865, 22951865, 22961865, 22971865, 22981865, 22991865, 23001865, 23011865, 23021866, 23031865, 23041865, 23051865, 23061866, 23071865, 23081866, 23091865, 23101865, 23111865, 23121865, 23131865, 23141865, 23151865, 23161865, 23171865, 23181865, 23191865, 23201865, 23211865, 23221865, 23231865, 23241865, 23251865, 23261865, 23271865, 23281866, 23291865, 23301865, 23311865, 23321865, 23331865, 23341865, 23351865, 23361865, 23371865, 23381865, 23391865, 23401865, 23411865, 23421865, 23431865, 23441865, 23451865, 23461866, 23471865, 23481865, 23491865, 23501865, 23511865, 23521865, 23531865, 23541865, 23551866, 23561865, 23571865, 23581865, 23591865, 23601865, 23611865, 23621865, 23631865, 23641865, 23651865, 23661866, 23671865, 23681865, 23691865, 23701865, 23711865, 23721865, 23731865, 23741866, 23751865, 23761865, 23771865, 23781866, 23791865, 23801865, 23811865, 23821866, 23831865, 23841866, 23851865, 23861866, 23871865, 23881865, 23891865, 23901865, 23911865, 23921865]</msg>
<status status="PASS" starttime="20201112 09:57:09.525" endtime="20201112 09:57:09.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:09.514" endtime="20201112 09:57:09.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:09.547" endtime="20201112 09:57:09.905"></status>
</kw>
<msg timestamp="20201112 09:57:09.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038538625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048674222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:09.544" endtime="20201112 09:57:09.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:09.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038538625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048674222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:09.914" endtime="20201112 09:57:09.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:09.931" endtime="20201112 09:57:09.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:09.536" endtime="20201112 09:57:09.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:09.532" endtime="20201112 09:57:09.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:09.995" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:57:09.942" endtime="20201112 09:57:09.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:10.006" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:57:10.004" endtime="20201112 09:57:10.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:10.011" level="INFO">VALUE: 0.038538625</msg>
<status status="PASS" starttime="20201112 09:57:10.009" endtime="20201112 09:57:10.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:09.997" endtime="20201112 09:57:10.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:10.024" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:10.022" endtime="20201112 09:57:10.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:10.029" level="INFO">VALUE: [0.048674222, 0.058706097, 0.068739472, 0.078772847, 0.088806514, 0.098839403, 0.108873042, 0.118906917, 0.12894, 0.138972208, 0.149002639, 0.159033111, 0.169064375, 0.179097167, 0.189128319, 0.199161042, 0.209191667, 0.219223167, 0.229256458, 0.239289056, 0.249322181, 0.259354986, 0.269387986, 0.27942075, 0.289453333, 0.299485583, 0.309518444, 0.319550403, 0.329583111, 0.339615611, 0.349649014, 0.3596815, 0.369715639, 0.379748722, 0.389781847, 0.399816194, 0.409849153, 0.419882139, 0.429916403, 0.439950236, 0.449984333, 0.460018708, 0.470052514, 0.480085389, 0.490118028, 0.500150319, 0.510183264, 0.520215667, 0.530249903, 0.540284361, 0.550319542, 0.560354069, 0.570389139, 0.580422847, 0.590454597, 0.600487889, 0.610523625, 0.620558764, 0.630591708, 0.640623889, 0.650655444, 0.660687736, 0.670720556, 0.680750514, 0.690783153, 0.700815514, 0.710848736, 0.720883181, 0.730917597, 0.740951889, 0.750986042, 0.761019667, 0.771052625, 0.781086042, 0.791119319, 0.801153264, 0.811186306, 0.821220569, 0.831253653, 0.841286417, 0.851319611, 0.861352583, 0.871384458, 0.881416292, 0.891448292, 0.901480778, 0.911511681, 0.921543569, 0.931575694, 0.941609514, 0.951641903, 0.961675069, 0.971706556, 0.981740653, 0.991773083, 1.001806167, 1.011839111, 1.021872014, 1.031905028, 1.041936194] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:10.027" endtime="20201112 09:57:10.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:10.014" endtime="20201112 09:57:10.032"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:10.039" endtime="20201112 09:57:10.042"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:10.047" endtime="20201112 09:57:10.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:10.043" endtime="20201112 09:57:10.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:10.034" endtime="20201112 09:57:10.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:07.256" endtime="20201112 09:57:10.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.646" endtime="20201112 09:57:10.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.644" endtime="20201112 09:57:10.074"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:57:10.080" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:10.101" endtime="20201112 09:57:12.260"></status>
</kw>
<msg timestamp="20201112 09:57:12.261" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25738258, 'wakeups': [25748395, 25758396, 25768394, 25778396, 25788395...</msg>
<status status="PASS" starttime="20201112 09:57:10.098" endtime="20201112 09:57:12.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.268" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25738258, 'wakeups': [25748395, 25758396, 25768394, 25778396, 25788395...</msg>
<status status="PASS" starttime="20201112 09:57:12.264" endtime="20201112 09:57:12.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:12.271" endtime="20201112 09:57:12.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:10.091" endtime="20201112 09:57:12.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:10.085" endtime="20201112 09:57:12.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:12.284" level="INFO">${RESULT} = {'wakeups': [25748395, 25758396, 25768394, 25778396, 25788395, 25798394, 25808395, 25818394, 25828394, 25838396, 25848394, 25858396, 25868394, 25878395, 25888395, 25898394, 25908395, 25918394, 2592839...</msg>
<status status="PASS" starttime="20201112 09:57:12.279" endtime="20201112 09:57:12.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.294" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:12.292" endtime="20201112 09:57:12.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.299" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:12.296" endtime="20201112 09:57:12.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.285" endtime="20201112 09:57:12.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.311" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:57:12.309" endtime="20201112 09:57:12.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.316" level="INFO">VALUE: 25738258</msg>
<status status="PASS" starttime="20201112 09:57:12.314" endtime="20201112 09:57:12.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.302" endtime="20201112 09:57:12.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.328" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:12.326" endtime="20201112 09:57:12.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.333" level="INFO">VALUE: [25748395, 25758396, 25768394, 25778396, 25788395, 25798394, 25808395, 25818394, 25828394, 25838396, 25848394, 25858396, 25868394, 25878395, 25888395, 25898394, 25908395, 25918394, 25928395, 25938394, 25948394, 25958395, 25968395, 25978395, 25988394, 25998395, 26008394, 26018395, 26028394, 26038396, 26048394, 26058396, 26068395, 26078394, 26088395, 26098396, 26108395, 26118395, 26128395, 26138395, 26148394, 26158395, 26168395, 26178394, 26188394, 26198396, 26208395, 26218395, 26228394, 26238396, 26248394, 26258395, 26268394, 26278396, 26288394, 26298394, 26308395, 26318394, 26328395, 26338394, 26348395, 26358395, 26368395, 26378395, 26388394, 26398396, 26408394, 26418395, 26428394, 26438396, 26448395, 26458394, 26468395, 26478395, 26488394, 26498394, 26508394, 26518394, 26528394, 26538395, 26548395, 26558395, 26568395, 26578395, 26588395, 26598394, 26608395, 26618395, 26628394, 26638395, 26648395, 26658395, 26668395, 26678395, 26688394, 26698396, 26708395, 26718394, 26728395, 26738395]</msg>
<status status="PASS" starttime="20201112 09:57:12.331" endtime="20201112 09:57:12.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.319" endtime="20201112 09:57:12.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:12.353" endtime="20201112 09:57:12.710"></status>
</kw>
<msg timestamp="20201112 09:57:12.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044915306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055086375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:12.350" endtime="20201112 09:57:12.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044915306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055086375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:12.719" endtime="20201112 09:57:12.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:12.738" endtime="20201112 09:57:12.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.343" endtime="20201112 09:57:12.744"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.338" endtime="20201112 09:57:12.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:12.803" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:57:12.747" endtime="20201112 09:57:12.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.814" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:57:12.811" endtime="20201112 09:57:12.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.818" level="INFO">VALUE: 0.044915306</msg>
<status status="PASS" starttime="20201112 09:57:12.816" endtime="20201112 09:57:12.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.805" endtime="20201112 09:57:12.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.832" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:12.830" endtime="20201112 09:57:12.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.836" level="INFO">VALUE: [0.055086375, 0.065121069, 0.075152306, 0.085185861, 0.0952175, 0.105249611, 0.115282958, 0.125312736, 0.135343861, 0.14537875, 0.155409806, 0.165443875, 0.175474875, 0.185507819, 0.195540083, 0.205570583, 0.215605194, 0.2256375, 0.235671125, 0.245702375, 0.255737333, 0.265772167, 0.275805653, 0.285838208, 0.295871819, 0.305905708, 0.315936597, 0.325970181, 0.336001458, 0.346035819, 0.356067597, 0.366103056, 0.376135736, 0.386167611, 0.396200444, 0.406232903, 0.416264583, 0.426297014, 0.43632925, 0.446362097, 0.456394806, 0.466429417, 0.476464722, 0.486497194, 0.496531194, 0.506566569, 0.516599139, 0.526631208, 0.536662764, 0.546697236, 0.556728444, 0.566762347, 0.576796181, 0.586832875, 0.596866181, 0.606901819, 0.616937792, 0.626971667, 0.637005417, 0.647036722, 0.657071264, 0.667104792, 0.677137819, 0.687171181, 0.697203764, 0.707238667, 0.717269639, 0.727304208, 0.737336, 0.747370611, 0.757401778, 0.767433125, 0.777467597, 0.787499736, 0.797531931, 0.807567472, 0.817603792, 0.827639944, 0.837675861, 0.847710611, 0.857744875, 0.867778292, 0.877812639, 0.887847, 0.897880694, 0.907913875, 0.917948486, 0.927982875, 0.938015361, 0.948049236, 0.958082333, 0.968115917, 0.978150222, 0.988184208, 0.998217944, 1.008254931, 1.018288944, 1.028321708, 1.038356833, 1.048391361] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:12.834" endtime="20201112 09:57:12.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.822" endtime="20201112 09:57:12.839"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:12.846" endtime="20201112 09:57:12.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:12.854" endtime="20201112 09:57:12.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.850" endtime="20201112 09:57:12.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.841" endtime="20201112 09:57:12.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:10.081" endtime="20201112 09:57:12.880"></status>
</kw>
<msg timestamp="20201112 09:57:12.881" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:12.902" endtime="20201112 09:57:15.079"></status>
</kw>
<msg timestamp="20201112 09:57:15.081" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28530790, 'wakeups': [28540927, 28550927, 28560927, 28570927, 28580927...</msg>
<status status="PASS" starttime="20201112 09:57:12.899" endtime="20201112 09:57:15.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:15.088" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28530790, 'wakeups': [28540927, 28550927, 28560927, 28570927, 28580927...</msg>
<status status="PASS" starttime="20201112 09:57:15.083" endtime="20201112 09:57:15.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:15.090" endtime="20201112 09:57:15.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.891" endtime="20201112 09:57:15.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.886" endtime="20201112 09:57:15.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:15.103" level="INFO">${RESULT} = {'wakeups': [28540927, 28550927, 28560927, 28570927, 28580927, 28590926, 28600927, 28610926, 28620927, 28630926, 28640926, 28650927, 28660926, 28670928, 28680926, 28690927, 28700927, 28710927, 2872092...</msg>
<status status="PASS" starttime="20201112 09:57:15.099" endtime="20201112 09:57:15.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:15.114" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:15.111" endtime="20201112 09:57:15.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:15.118" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:15.116" endtime="20201112 09:57:15.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:15.105" endtime="20201112 09:57:15.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:15.131" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:57:15.128" endtime="20201112 09:57:15.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:15.135" level="INFO">VALUE: 28530790</msg>
<status status="PASS" starttime="20201112 09:57:15.133" endtime="20201112 09:57:15.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:15.122" endtime="20201112 09:57:15.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:15.148" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:15.146" endtime="20201112 09:57:15.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:15.156" level="INFO">VALUE: [28540927, 28550927, 28560927, 28570927, 28580927, 28590926, 28600927, 28610926, 28620927, 28630926, 28640926, 28650927, 28660926, 28670928, 28680926, 28690927, 28700927, 28710927, 28720926, 28730927, 28740926, 28750928, 28760926, 28770926, 28780926, 28790928, 28800927, 28810927, 28820927, 28830927, 28840927, 28850927, 28860927, 28870926, 28880926, 28890926, 28900927, 28910926, 28920927, 28930926, 28940927, 28950928, 28960927, 28970927, 28980927, 28990927, 29000927, 29010928, 29020927, 29030928, 29040927, 29050927, 29060927, 29070927, 29080927, 29090927, 29100927, 29110927, 29120926, 29130927, 29140927, 29150927, 29160926, 29170927, 29180927, 29190927, 29200926, 29210927, 29220926, 29230927, 29240927, 29250927, 29260927, 29270926, 29280927, 29290926, 29300927, 29310927, 29320927, 29330927, 29340926, 29350926, 29360927, 29370928, 29380927, 29390927, 29400927, 29410927, 29420927, 29430927, 29440927, 29450926, 29460926, 29470926, 29480927, 29490927, 29500927, 29510927, 29520926, 29530927]</msg>
<status status="PASS" starttime="20201112 09:57:15.150" endtime="20201112 09:57:15.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:15.139" endtime="20201112 09:57:15.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:15.176" endtime="20201112 09:57:15.544"></status>
</kw>
<msg timestamp="20201112 09:57:15.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039330139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049500722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:15.172" endtime="20201112 09:57:15.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:15.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039330139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049500722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:15.552" endtime="20201112 09:57:15.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:15.570" endtime="20201112 09:57:15.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:15.165" endtime="20201112 09:57:15.576"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:15.160" endtime="20201112 09:57:15.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:15.633" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:57:15.579" endtime="20201112 09:57:15.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:15.644" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:57:15.642" endtime="20201112 09:57:15.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:15.649" level="INFO">VALUE: 0.039330139</msg>
<status status="PASS" starttime="20201112 09:57:15.646" endtime="20201112 09:57:15.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:15.635" endtime="20201112 09:57:15.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:15.662" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:15.660" endtime="20201112 09:57:15.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:15.667" level="INFO">VALUE: [0.049500722, 0.059533319, 0.069565292, 0.079597278, 0.089629681, 0.099661028, 0.109694306, 0.119725292, 0.129758306, 0.139790264, 0.149823153, 0.159856611, 0.169888306, 0.1799225, 0.189952181, 0.199985111, 0.210017569, 0.220050542, 0.230083667, 0.240118153, 0.250151722, 0.260187458, 0.270219875, 0.280252861, 0.290288389, 0.300325819, 0.310359931, 0.320394014, 0.330429347, 0.340463097, 0.350497486, 0.360531708, 0.370566083, 0.38059975, 0.390635056, 0.400669472, 0.410705028, 0.420738458, 0.430774069, 0.440806472, 0.450840222, 0.460873278, 0.470904847, 0.480937139, 0.490970042, 0.501002069, 0.511035153, 0.521068167, 0.531100014, 0.541134181, 0.551166347, 0.561199153, 0.571230958, 0.581263986, 0.591297472, 0.601330444, 0.611363458, 0.621396014, 0.631427889, 0.641461264, 0.651494819, 0.661526861, 0.671558417, 0.681593, 0.691626153, 0.701658333, 0.711690583, 0.72172375, 0.731757, 0.741791792, 0.751825014, 0.761858, 0.771892486, 0.781924083, 0.791958306, 0.801990069, 0.812024319, 0.822056181, 0.832088319, 0.842120486, 0.852153181, 0.862186556, 0.872220528, 0.882253486, 0.892284611, 0.902316806, 0.9123505, 0.922385708, 0.932421319, 0.942455819, 0.952490764, 0.962524847, 0.972560736, 0.982596042, 0.992631542, 1.002664347, 1.012697125, 1.022729944, 1.032761722, 1.042794375] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:15.665" endtime="20201112 09:57:15.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:15.652" endtime="20201112 09:57:15.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:15.676" endtime="20201112 09:57:15.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:15.684" endtime="20201112 09:57:15.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:15.680" endtime="20201112 09:57:15.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:15.671" endtime="20201112 09:57:15.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.882" endtime="20201112 09:57:15.712"></status>
</kw>
<msg timestamp="20201112 09:57:15.712" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:15.733" endtime="20201112 09:57:17.902"></status>
</kw>
<msg timestamp="20201112 09:57:17.904" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 31352364, 'wakeups': [31362502, 31372501, 31382500, 31392501, 31402501...</msg>
<status status="PASS" starttime="20201112 09:57:15.730" endtime="20201112 09:57:17.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:17.910" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 31352364, 'wakeups': [31362502, 31372501, 31382500, 31392501, 31402501...</msg>
<status status="PASS" starttime="20201112 09:57:17.906" endtime="20201112 09:57:17.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:17.913" endtime="20201112 09:57:17.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:15.723" endtime="20201112 09:57:17.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:15.717" endtime="20201112 09:57:17.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:17.926" level="INFO">${RESULT} = {'wakeups': [31362502, 31372501, 31382500, 31392501, 31402501, 31412501, 31422501, 31432500, 31442501, 31452501, 31462501, 31472500, 31482500, 31492502, 31502501, 31512501, 31522501, 31532501, 3154250...</msg>
<status status="PASS" starttime="20201112 09:57:17.921" endtime="20201112 09:57:17.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:17.971" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:17.969" endtime="20201112 09:57:17.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:17.975" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:17.973" endtime="20201112 09:57:17.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:17.928" endtime="20201112 09:57:17.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:17.988" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:57:17.986" endtime="20201112 09:57:17.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:17.993" level="INFO">VALUE: 31352364</msg>
<status status="PASS" starttime="20201112 09:57:17.990" endtime="20201112 09:57:17.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:17.979" endtime="20201112 09:57:17.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:18.005" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:18.003" endtime="20201112 09:57:18.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:18.010" level="INFO">VALUE: [31362502, 31372501, 31382500, 31392501, 31402501, 31412501, 31422501, 31432500, 31442501, 31452501, 31462501, 31472500, 31482500, 31492502, 31502501, 31512501, 31522501, 31532501, 31542501, 31552501, 31562501, 31572501, 31582500, 31592501, 31602501, 31612501, 31622500, 31632501, 31642501, 31652500, 31662501, 31672501, 31682500, 31692500, 31702501, 31712501, 31722502, 31732501, 31742501, 31752501, 31762501, 31772500, 31782501, 31792501, 31802500, 31812501, 31822501, 31832502, 31842500, 31852501, 31862500, 31872501, 31882501, 31892501, 31902501, 31912502, 31922500, 31932500, 31942501, 31952501, 31962501, 31972500, 31982501, 31992501, 32002500, 32012501, 32022500, 32032502, 32042502, 32052501, 32062501, 32072500, 32082501, 32092500, 32102501, 32112501, 32122500, 32132502, 32142500, 32152502, 32162501, 32172501, 32182501, 32192501, 32202501, 32212501, 32222500, 32232501, 32242501, 32252500, 32262501, 32272501, 32282501, 32292502, 32302500, 32312502, 32322501, 32332500, 32342501, 32352501]</msg>
<status status="PASS" starttime="20201112 09:57:18.008" endtime="20201112 09:57:18.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:17.996" endtime="20201112 09:57:18.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:18.029" endtime="20201112 09:57:18.383"></status>
</kw>
<msg timestamp="20201112 09:57:18.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038437444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048609778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:18.026" endtime="20201112 09:57:18.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:18.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038437444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048609778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:18.392" endtime="20201112 09:57:18.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:18.409" endtime="20201112 09:57:18.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:18.019" endtime="20201112 09:57:18.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:18.014" endtime="20201112 09:57:18.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:18.474" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:57:18.420" endtime="20201112 09:57:18.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:18.485" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:57:18.483" endtime="20201112 09:57:18.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:18.489" level="INFO">VALUE: 0.038437444</msg>
<status status="PASS" starttime="20201112 09:57:18.487" endtime="20201112 09:57:18.490"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:18.476" endtime="20201112 09:57:18.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:18.503" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:18.501" endtime="20201112 09:57:18.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:18.509" level="INFO">VALUE: [0.048609778, 0.058642319, 0.068674278, 0.078707486, 0.088740139, 0.098773236, 0.108807764, 0.118840361, 0.128874792, 0.138908444, 0.148943, 0.158975625, 0.169009319, 0.179044542, 0.189077097, 0.199109944, 0.209142153, 0.219174306, 0.229207222, 0.23923975, 0.249272694, 0.259307167, 0.269341306, 0.279377611, 0.289411722, 0.299445764, 0.309478319, 0.319512722, 0.329545903, 0.339578611, 0.349612681, 0.359646375, 0.369679486, 0.379713167, 0.389747556, 0.399781417, 0.409815611, 0.419848153, 0.429881931, 0.439915875, 0.449950778, 0.459982944, 0.470017708, 0.480050958, 0.490083931, 0.500118, 0.510151792, 0.520186125, 0.530216236, 0.540249833, 0.550281736, 0.560315667, 0.570348847, 0.580382181, 0.590414986, 0.600448708, 0.610479403, 0.620512431, 0.630546611, 0.640579375, 0.650612583, 0.660643917, 0.670677639, 0.680709736, 0.690742347, 0.700776333, 0.710809181, 0.720844722, 0.730877833, 0.740909819, 0.7509435, 0.760976222, 0.771010167, 0.781042153, 0.791076625, 0.80111025, 0.811142153, 0.821176667, 0.831207597, 0.841241083, 0.851272139, 0.861305153, 0.8713375, 0.881368806, 0.891401444, 0.901434833, 0.911467681, 0.921502778, 0.931536958, 0.941570264, 0.951606208, 0.961639083, 0.971672069, 0.98170525, 0.991736986, 1.001771736, 1.011804361, 1.021835681, 1.031869639, 1.041903319] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:18.505" endtime="20201112 09:57:18.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:18.493" endtime="20201112 09:57:18.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:18.518" endtime="20201112 09:57:18.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:18.526" endtime="20201112 09:57:18.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:18.522" endtime="20201112 09:57:18.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:18.513" endtime="20201112 09:57:18.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:15.714" endtime="20201112 09:57:18.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:10.077" endtime="20201112 09:57:18.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:10.075" endtime="20201112 09:57:18.553"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:57:18.559" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:18.580" endtime="20201112 09:57:20.738"></status>
</kw>
<msg timestamp="20201112 09:57:20.739" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 34189588, 'wakeups': [34199764, 34209763, 34219763, 34229763, 34239763...</msg>
<status status="PASS" starttime="20201112 09:57:18.576" endtime="20201112 09:57:20.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:20.746" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 34189588, 'wakeups': [34199764, 34209763, 34219763, 34229763, 34239763...</msg>
<status status="PASS" starttime="20201112 09:57:20.742" endtime="20201112 09:57:20.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:20.749" endtime="20201112 09:57:20.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:18.569" endtime="20201112 09:57:20.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:18.564" endtime="20201112 09:57:20.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:20.764" level="INFO">${RESULT} = {'wakeups': [34199764, 34209763, 34219763, 34229763, 34239763, 34249763, 34259763, 34269763, 34279763, 34289763, 34299763, 34309763, 34319763, 34329764, 34339763, 34349763, 34359763, 34369763, 3437976...</msg>
<status status="PASS" starttime="20201112 09:57:20.759" endtime="20201112 09:57:20.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:20.774" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:20.772" endtime="20201112 09:57:20.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:20.779" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:20.776" endtime="20201112 09:57:20.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:20.765" endtime="20201112 09:57:20.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:20.791" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:57:20.789" endtime="20201112 09:57:20.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:20.796" level="INFO">VALUE: 34189588</msg>
<status status="PASS" starttime="20201112 09:57:20.793" endtime="20201112 09:57:20.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:20.782" endtime="20201112 09:57:20.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:20.809" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:20.807" endtime="20201112 09:57:20.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:20.814" level="INFO">VALUE: [34199764, 34209763, 34219763, 34229763, 34239763, 34249763, 34259763, 34269763, 34279763, 34289763, 34299763, 34309763, 34319763, 34329764, 34339763, 34349763, 34359763, 34369763, 34379763, 34389763, 34399763, 34409763, 34419763, 34429763, 34439763, 34449763, 34459763, 34469764, 34479763, 34489764, 34499763, 34509764, 34519764, 34529763, 34539763, 34549764, 34559763, 34569763, 34579763, 34589763, 34599763, 34609763, 34619763, 34629764, 34639763, 34649763, 34659764, 34669763, 34679763, 34689763, 34699763, 34709764, 34719764, 34729764, 34739763, 34749763, 34759763, 34769763, 34779764, 34789764, 34799764, 34809764, 34819763, 34829763, 34839763, 34849763, 34859763, 34869763, 34879763, 34889763, 34899763, 34909764, 34919763, 34929763, 34939763, 34949763, 34959763, 34969763, 34979763, 34989764, 34999763, 35009763, 35019763, 35029763, 35039763, 35049763, 35059763, 35069763, 35079763, 35089763, 35099763, 35109763, 35119763, 35129764, 35139763, 35149763, 35159763, 35169764, 35179763, 35189763]</msg>
<status status="PASS" starttime="20201112 09:57:20.811" endtime="20201112 09:57:20.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:20.799" endtime="20201112 09:57:20.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:20.833" endtime="20201112 09:57:21.188"></status>
</kw>
<msg timestamp="20201112 09:57:21.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044626236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054838792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:20.830" endtime="20201112 09:57:21.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:21.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044626236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054838792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:21.197" endtime="20201112 09:57:21.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:21.214" endtime="20201112 09:57:21.218"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:20.822" endtime="20201112 09:57:21.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:20.818" endtime="20201112 09:57:21.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:21.279" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:57:21.223" endtime="20201112 09:57:21.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:21.290" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:57:21.288" endtime="20201112 09:57:21.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:21.295" level="INFO">VALUE: 0.044626236</msg>
<status status="PASS" starttime="20201112 09:57:21.293" endtime="20201112 09:57:21.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:21.281" endtime="20201112 09:57:21.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:21.309" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:21.306" endtime="20201112 09:57:21.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:21.313" level="INFO">VALUE: [0.054838792, 0.064872931, 0.074908375, 0.084941611, 0.094976125, 0.105009125, 0.115042278, 0.125074486, 0.135107833, 0.145139403, 0.155171653, 0.165204847, 0.175239042, 0.185274778, 0.195308417, 0.205342847, 0.215376417, 0.225408139, 0.23544175, 0.24547425, 0.255507306, 0.265538764, 0.275571, 0.285603347, 0.295636306, 0.305667833, 0.315700472, 0.325733028, 0.335763722, 0.345795792, 0.355827292, 0.365861958, 0.375896208, 0.385927958, 0.395960889, 0.405992958, 0.416023847, 0.426054958, 0.436088181, 0.446121167, 0.456154694, 0.466187097, 0.476220319, 0.486253458, 0.496285556, 0.506319222, 0.516353903, 0.526385389, 0.536417958, 0.546451181, 0.556483847, 0.566518125, 0.576551625, 0.586584319, 0.596615847, 0.606647778, 0.616680083, 0.626713403, 0.636745778, 0.646777597, 0.656809764, 0.6668425, 0.676874403, 0.686905875, 0.696939306, 0.706972694, 0.717005944, 0.727038542, 0.737071264, 0.747103958, 0.757139125, 0.76717275, 0.777204694, 0.787236028, 0.797268514, 0.807300694, 0.817333458, 0.827366542, 0.837399736, 0.847432917, 0.857465014, 0.867496986, 0.877529736, 0.887561903, 0.897594806, 0.907627958, 0.917660778, 0.927694458, 0.937728125, 0.947760681, 0.957793569, 0.967826722, 0.977860597, 0.987895514, 0.997927986, 1.007961319, 1.017995306, 1.028028875, 1.038059875, 1.048091806] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:21.311" endtime="20201112 09:57:21.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:21.299" endtime="20201112 09:57:21.316"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:21.322" endtime="20201112 09:57:21.326"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:21.331" endtime="20201112 09:57:21.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:21.327" endtime="20201112 09:57:21.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:21.318" endtime="20201112 09:57:21.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:18.560" endtime="20201112 09:57:21.357"></status>
</kw>
<msg timestamp="20201112 09:57:21.358" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:21.379" endtime="20201112 09:57:23.538"></status>
</kw>
<msg timestamp="20201112 09:57:23.539" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36979993, 'wakeups': [36990169, 37000168, 37010168, 37020168, 37030168...</msg>
<status status="PASS" starttime="20201112 09:57:21.376" endtime="20201112 09:57:23.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:23.546" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36979993, 'wakeups': [36990169, 37000168, 37010168, 37020168, 37030168...</msg>
<status status="PASS" starttime="20201112 09:57:23.541" endtime="20201112 09:57:23.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:23.548" endtime="20201112 09:57:23.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:21.368" endtime="20201112 09:57:23.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:21.363" endtime="20201112 09:57:23.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:23.561" level="INFO">${RESULT} = {'wakeups': [36990169, 37000168, 37010168, 37020168, 37030168, 37040168, 37050168, 37060168, 37070168, 37080168, 37090168, 37100168, 37110168, 37120168, 37130168, 37140168, 37150168, 37160168, 3717016...</msg>
<status status="PASS" starttime="20201112 09:57:23.557" endtime="20201112 09:57:23.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:23.572" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:23.570" endtime="20201112 09:57:23.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:23.576" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:23.574" endtime="20201112 09:57:23.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:23.563" endtime="20201112 09:57:23.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:23.589" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:57:23.587" endtime="20201112 09:57:23.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:23.593" level="INFO">VALUE: 36979993</msg>
<status status="PASS" starttime="20201112 09:57:23.591" endtime="20201112 09:57:23.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:23.580" endtime="20201112 09:57:23.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:23.606" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:23.604" endtime="20201112 09:57:23.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:23.611" level="INFO">VALUE: [36990169, 37000168, 37010168, 37020168, 37030168, 37040168, 37050168, 37060168, 37070168, 37080168, 37090168, 37100168, 37110168, 37120168, 37130168, 37140168, 37150168, 37160168, 37170168, 37180168, 37190168, 37200168, 37210168, 37220168, 37230168, 37240168, 37250168, 37260168, 37270168, 37280168, 37290168, 37300168, 37310168, 37320168, 37330168, 37340169, 37350168, 37360169, 37370169, 37380169, 37390168, 37400168, 37410168, 37420168, 37430168, 37440168, 37450168, 37460168, 37470168, 37480168, 37490168, 37500168, 37510168, 37520168, 37530168, 37540168, 37550169, 37560168, 37570168, 37580168, 37590168, 37600169, 37610168, 37620168, 37630168, 37640168, 37650169, 37660168, 37670168, 37680168, 37690168, 37700168, 37710168, 37720169, 37730168, 37740168, 37750168, 37760168, 37770168, 37780168, 37790169, 37800168, 37810169, 37820169, 37830169, 37840168, 37850168, 37860169, 37870168, 37880168, 37890168, 37900169, 37910168, 37920168, 37930168, 37940168, 37950168, 37960169, 37970168, 37980168]</msg>
<status status="PASS" starttime="20201112 09:57:23.608" endtime="20201112 09:57:23.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:23.597" endtime="20201112 09:57:23.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:23.638" endtime="20201112 09:57:23.996"></status>
</kw>
<msg timestamp="20201112 09:57:24.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038451944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048659417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:23.629" endtime="20201112 09:57:24.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:24.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038451944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048659417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:24.005" endtime="20201112 09:57:24.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:24.022" endtime="20201112 09:57:24.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:23.621" endtime="20201112 09:57:24.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:23.615" endtime="20201112 09:57:24.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:24.086" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:57:24.032" endtime="20201112 09:57:24.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:24.097" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:57:24.095" endtime="20201112 09:57:24.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:24.102" level="INFO">VALUE: 0.038451944</msg>
<status status="PASS" starttime="20201112 09:57:24.100" endtime="20201112 09:57:24.103"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:24.088" endtime="20201112 09:57:24.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:24.115" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:24.113" endtime="20201112 09:57:24.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:24.120" level="INFO">VALUE: [0.048659417, 0.058690264, 0.068723375, 0.078757486, 0.088788958, 0.098820736, 0.108851583, 0.118882958, 0.128914403, 0.138946181, 0.148978389, 0.159009986, 0.169041958, 0.179071028, 0.189101125, 0.199130944, 0.209161958, 0.219192861, 0.229224875, 0.239255653, 0.249287875, 0.259318917, 0.269351542, 0.279383431, 0.289415181, 0.299447764, 0.309480375, 0.319512542, 0.329545444, 0.33957825, 0.34961125, 0.359644208, 0.369677111, 0.379709292, 0.389741431, 0.399774042, 0.409806194, 0.419838486, 0.429870792, 0.439903194, 0.449933931, 0.459966028, 0.469998458, 0.480030528, 0.490063306, 0.500097056, 0.510130403, 0.520163472, 0.530196542, 0.540229889, 0.550261069, 0.560291806, 0.570324153, 0.580355903, 0.590387458, 0.60041925, 0.610452028, 0.620483153, 0.630515917, 0.640548681, 0.650583069, 0.660617972, 0.670651333, 0.680685083, 0.690717431, 0.700749042, 0.710782042, 0.720812944, 0.730845444, 0.740877347, 0.750909944, 0.760941958, 0.770975, 0.781008194, 0.791039403, 0.801071486, 0.811103125, 0.821135472, 0.831168875, 0.841201083, 0.851235625, 0.861265653, 0.871297542, 0.8813265, 0.891357889, 0.901388722, 0.911421819, 0.921455986, 0.931487764, 0.941520306, 0.951551417, 0.961582389, 0.971611278, 0.981639458, 0.991670542, 1.001700361, 1.011731097, 1.021762153, 1.031792014, 1.041821111] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:24.118" endtime="20201112 09:57:24.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:24.105" endtime="20201112 09:57:24.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:24.129" endtime="20201112 09:57:24.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:24.137" endtime="20201112 09:57:24.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:24.133" endtime="20201112 09:57:24.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:24.124" endtime="20201112 09:57:24.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:21.359" endtime="20201112 09:57:24.163"></status>
</kw>
<msg timestamp="20201112 09:57:24.164" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:24.187" endtime="20201112 09:57:26.345"></status>
</kw>
<msg timestamp="20201112 09:57:26.347" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39779041, 'wakeups': [39789216, 39799216, 39809216, 39819216, 39829216...</msg>
<status status="PASS" starttime="20201112 09:57:24.183" endtime="20201112 09:57:26.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:26.354" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39779041, 'wakeups': [39789216, 39799216, 39809216, 39819216, 39829216...</msg>
<status status="PASS" starttime="20201112 09:57:26.349" endtime="20201112 09:57:26.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:26.357" endtime="20201112 09:57:26.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:24.174" endtime="20201112 09:57:26.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:24.169" endtime="20201112 09:57:26.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:26.370" level="INFO">${RESULT} = {'wakeups': [39789216, 39799216, 39809216, 39819216, 39829216, 39839217, 39849216, 39859217, 39869216, 39879217, 39889216, 39899216, 39909216, 39919216, 39929216, 39939216, 39949216, 39959216, 3996921...</msg>
<status status="PASS" starttime="20201112 09:57:26.365" endtime="20201112 09:57:26.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:26.380" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:26.378" endtime="20201112 09:57:26.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:26.385" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:26.382" endtime="20201112 09:57:26.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:26.372" endtime="20201112 09:57:26.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:26.397" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:57:26.395" endtime="20201112 09:57:26.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:26.402" level="INFO">VALUE: 39779041</msg>
<status status="PASS" starttime="20201112 09:57:26.399" endtime="20201112 09:57:26.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:26.388" endtime="20201112 09:57:26.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:26.414" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:26.412" endtime="20201112 09:57:26.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:26.419" level="INFO">VALUE: [39789216, 39799216, 39809216, 39819216, 39829216, 39839217, 39849216, 39859217, 39869216, 39879217, 39889216, 39899216, 39909216, 39919216, 39929216, 39939216, 39949216, 39959216, 39969216, 39979216, 39989216, 39999217, 40009216, 40019216, 40029217, 40039216, 40049216, 40059216, 40069216, 40079217, 40089216, 40099216, 40109216, 40119216, 40129216, 40139216, 40149216, 40159216, 40169216, 40179216, 40189216, 40199216, 40209217, 40219216, 40229216, 40239216, 40249216, 40259216, 40269216, 40279216, 40289216, 40299216, 40309216, 40319216, 40329216, 40339216, 40349216, 40359216, 40369216, 40379216, 40389216, 40399216, 40409216, 40419217, 40429216, 40439216, 40449216, 40459216, 40469216, 40479216, 40489216, 40499216, 40509216, 40519216, 40529216, 40539216, 40549216, 40559217, 40569217, 40579216, 40589217, 40599216, 40609216, 40619216, 40629216, 40639216, 40649216, 40659216, 40669216, 40679216, 40689216, 40699216, 40709216, 40719216, 40729216, 40739216, 40749216, 40759216, 40769216, 40779216]</msg>
<status status="PASS" starttime="20201112 09:57:26.416" endtime="20201112 09:57:26.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:26.405" endtime="20201112 09:57:26.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:26.438" endtime="20201112 09:57:26.793"></status>
</kw>
<msg timestamp="20201112 09:57:26.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039973486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050181014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:26.435" endtime="20201112 09:57:26.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:26.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039973486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050181014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:26.801" endtime="20201112 09:57:26.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:26.819" endtime="20201112 09:57:26.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:26.428" endtime="20201112 09:57:26.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:26.423" endtime="20201112 09:57:26.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:26.884" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:57:26.827" endtime="20201112 09:57:26.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:26.896" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:57:26.893" endtime="20201112 09:57:26.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:26.900" level="INFO">VALUE: 0.039973486</msg>
<status status="PASS" starttime="20201112 09:57:26.898" endtime="20201112 09:57:26.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:26.887" endtime="20201112 09:57:26.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:26.914" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:26.912" endtime="20201112 09:57:26.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:26.919" level="INFO">VALUE: [0.050181014, 0.060212236, 0.070245, 0.080278208, 0.0903115, 0.100344889, 0.110376583, 0.120409681, 0.130441306, 0.14047475, 0.150506389, 0.160538556, 0.170571569, 0.180603583, 0.190636306, 0.200669, 0.210702861, 0.220736597, 0.230771625, 0.240805139, 0.250838889, 0.260873319, 0.270905639, 0.280937653, 0.290971264, 0.301002681, 0.311035083, 0.321067111, 0.331099556, 0.341134208, 0.351167917, 0.361201514, 0.371236417, 0.381270736, 0.391304375, 0.401336972, 0.411370083, 0.42140425, 0.431437569, 0.441470139, 0.451503944, 0.461536597, 0.471571042, 0.481603208, 0.491634028, 0.501664694, 0.511696083, 0.521728194, 0.531760972, 0.541792361, 0.551824278, 0.561856431, 0.571889458, 0.581921667, 0.591954875, 0.601987778, 0.612021653, 0.622055111, 0.632089847, 0.642124903, 0.652160431, 0.662194264, 0.672229917, 0.682263722, 0.692295458, 0.702328389, 0.712361306, 0.722394847, 0.732428861, 0.742461333, 0.752493583, 0.762526403, 0.772560208, 0.782593833, 0.792627417, 0.802660986, 0.812695306, 0.822730806, 0.832765181, 0.84279725, 0.852831681, 0.862864194, 0.872899, 0.882933347, 0.892965986, 0.902997278, 0.913029319, 0.923061056, 0.933094736, 0.943127264, 0.953159806, 0.963191903, 0.973224819, 0.983258028, 0.993291528, 1.003323653, 1.013355194, 1.023388069, 1.033422611, 1.043456208] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:26.916" endtime="20201112 09:57:26.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:26.904" endtime="20201112 09:57:26.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:26.928" endtime="20201112 09:57:26.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:26.936" endtime="20201112 09:57:26.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:26.932" endtime="20201112 09:57:26.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:26.923" endtime="20201112 09:57:26.961"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:24.165" endtime="20201112 09:57:26.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:18.555" endtime="20201112 09:57:26.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:18.554" endtime="20201112 09:57:26.963"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:57:26.969" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:26.990" endtime="20201112 09:57:29.149"></status>
</kw>
<msg timestamp="20201112 09:57:29.150" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 42573510, 'wakeups': [42583724, 42593722, 42603722, 42613722, 42623722...</msg>
<status status="PASS" starttime="20201112 09:57:26.986" endtime="20201112 09:57:29.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:29.157" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 42573510, 'wakeups': [42583724, 42593722, 42603722, 42613722, 42623722...</msg>
<status status="PASS" starttime="20201112 09:57:29.153" endtime="20201112 09:57:29.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:29.160" endtime="20201112 09:57:29.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:26.979" endtime="20201112 09:57:29.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:26.974" endtime="20201112 09:57:29.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:29.173" level="INFO">${RESULT} = {'wakeups': [42583724, 42593722, 42603722, 42613722, 42623722, 42633722, 42643722, 42653722, 42663722, 42673722, 42683722, 42693722, 42703723, 42713722, 42723722, 42733722, 42743722, 42753722, 4276372...</msg>
<status status="PASS" starttime="20201112 09:57:29.168" endtime="20201112 09:57:29.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:29.190" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:29.181" endtime="20201112 09:57:29.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:29.195" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:29.192" endtime="20201112 09:57:29.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:29.175" endtime="20201112 09:57:29.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:29.208" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:57:29.205" endtime="20201112 09:57:29.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:29.213" level="INFO">VALUE: 42573510</msg>
<status status="PASS" starttime="20201112 09:57:29.210" endtime="20201112 09:57:29.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:29.199" endtime="20201112 09:57:29.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:29.227" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:29.225" endtime="20201112 09:57:29.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:29.232" level="INFO">VALUE: [42583724, 42593722, 42603722, 42613722, 42623722, 42633722, 42643722, 42653722, 42663722, 42673722, 42683722, 42693722, 42703723, 42713722, 42723722, 42733722, 42743722, 42753722, 42763722, 42773722, 42783722, 42793722, 42803722, 42813722, 42823722, 42833723, 42843722, 42853722, 42863722, 42873722, 42883722, 42893722, 42903722, 42913722, 42923722, 42933722, 42943722, 42953723, 42963722, 42973722, 42983722, 42993722, 43003722, 43013722, 43023722, 43033722, 43043722, 43053723, 43063723, 43073722, 43083723, 43093722, 43103722, 43113722, 43123722, 43133723, 43143722, 43153722, 43163722, 43173722, 43183723, 43193722, 43203722, 43213722, 43223722, 43233723, 43243722, 43253722, 43263722, 43273722, 43283722, 43293723, 43303722, 43313722, 43323722, 43333722, 43343722, 43353722, 43363722, 43373722, 43383722, 43393722, 43403722, 43413723, 43423722, 43433722, 43443723, 43453722, 43463722, 43473723, 43483722, 43493722, 43503722, 43513722, 43523722, 43533722, 43543722, 43553722, 43563722, 43573722]</msg>
<status status="PASS" starttime="20201112 09:57:29.230" endtime="20201112 09:57:29.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:29.216" endtime="20201112 09:57:29.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:29.251" endtime="20201112 09:57:29.606"></status>
</kw>
<msg timestamp="20201112 09:57:29.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044783625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055031875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:29.248" endtime="20201112 09:57:29.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:29.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044783625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055031875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:29.615" endtime="20201112 09:57:29.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:29.632" endtime="20201112 09:57:29.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:29.241" endtime="20201112 09:57:29.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:29.236" endtime="20201112 09:57:29.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:29.695" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:57:29.641" endtime="20201112 09:57:29.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:29.706" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:57:29.704" endtime="20201112 09:57:29.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:29.711" level="INFO">VALUE: 0.044783625</msg>
<status status="PASS" starttime="20201112 09:57:29.708" endtime="20201112 09:57:29.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:29.697" endtime="20201112 09:57:29.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:29.724" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:29.722" endtime="20201112 09:57:29.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:29.729" level="INFO">VALUE: [0.055031875, 0.065062306, 0.075095514, 0.085127403, 0.095158403, 0.105188667, 0.115220389, 0.125252347, 0.135283167, 0.145312986, 0.155343278, 0.165374, 0.175406597, 0.185436236, 0.195467139, 0.205499764, 0.215532389, 0.225564931, 0.235597792, 0.245629667, 0.255661556, 0.265693319, 0.275725403, 0.285758028, 0.295789944, 0.305822917, 0.315854194, 0.325886944, 0.335919611, 0.345951306, 0.355982653, 0.366014181, 0.376046639, 0.386077903, 0.396109861, 0.406141986, 0.416173875, 0.426206819, 0.43623875, 0.446270472, 0.456302597, 0.466333639, 0.476366847, 0.486398931, 0.496431514, 0.506463222, 0.516495903, 0.526528778, 0.536560208, 0.546590125, 0.556623181, 0.566653083, 0.576683861, 0.586715333, 0.596747583, 0.606780319, 0.616810708, 0.626842528, 0.636874181, 0.646906292, 0.656938222, 0.666967847, 0.676999139, 0.687029875, 0.697061306, 0.707094708, 0.717125014, 0.727155875, 0.737187694, 0.747218931, 0.757251556, 0.767285028, 0.777316361, 0.787348417, 0.797381569, 0.807414347, 0.817446375, 0.827478806, 0.837510833, 0.847544, 0.857577569, 0.867610514, 0.877642917, 0.887676028, 0.897707208, 0.907738236, 0.917771639, 0.927802139, 0.937832986, 0.947865764, 0.957897028, 0.967929042, 0.977960875, 0.987992833, 0.998024389, 1.008054819, 1.018085944, 1.028116444, 1.038147444, 1.048178875] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:29.727" endtime="20201112 09:57:29.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:29.714" endtime="20201112 09:57:29.732"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:29.739" endtime="20201112 09:57:29.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:29.749" endtime="20201112 09:57:29.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:29.743" endtime="20201112 09:57:29.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:29.734" endtime="20201112 09:57:29.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:26.970" endtime="20201112 09:57:29.775"></status>
</kw>
<msg timestamp="20201112 09:57:29.775" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:29.797" endtime="20201112 09:57:31.955"></status>
</kw>
<msg timestamp="20201112 09:57:31.957" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 45371639, 'wakeups': [45381856, 45391851, 45401851, 45411852, 45421851...</msg>
<status status="PASS" starttime="20201112 09:57:29.793" endtime="20201112 09:57:31.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:31.964" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 45371639, 'wakeups': [45381856, 45391851, 45401851, 45411852, 45421851...</msg>
<status status="PASS" starttime="20201112 09:57:31.959" endtime="20201112 09:57:31.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:31.966" endtime="20201112 09:57:31.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:29.786" endtime="20201112 09:57:31.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:29.781" endtime="20201112 09:57:31.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:31.979" level="INFO">${RESULT} = {'wakeups': [45381856, 45391851, 45401851, 45411852, 45421851, 45431851, 45441851, 45451852, 45461851, 45471852, 45481851, 45491851, 45501851, 45511851, 45521851, 45531851, 45541851, 45551852, 4556185...</msg>
<status status="PASS" starttime="20201112 09:57:31.975" endtime="20201112 09:57:31.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:31.990" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:31.987" endtime="20201112 09:57:31.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:31.994" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:31.992" endtime="20201112 09:57:31.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:31.981" endtime="20201112 09:57:31.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:32.007" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:57:32.004" endtime="20201112 09:57:32.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:32.011" level="INFO">VALUE: 45371639</msg>
<status status="PASS" starttime="20201112 09:57:32.009" endtime="20201112 09:57:32.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:31.998" endtime="20201112 09:57:32.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:32.024" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:32.021" endtime="20201112 09:57:32.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:32.029" level="INFO">VALUE: [45381856, 45391851, 45401851, 45411852, 45421851, 45431851, 45441851, 45451852, 45461851, 45471852, 45481851, 45491851, 45501851, 45511851, 45521851, 45531851, 45541851, 45551852, 45561851, 45571851, 45581851, 45591851, 45601851, 45611852, 45621851, 45631852, 45641851, 45651851, 45661851, 45671851, 45681851, 45691851, 45701851, 45711851, 45721851, 45731851, 45741851, 45751851, 45761851, 45771851, 45781851, 45791851, 45801851, 45811851, 45821851, 45831851, 45841852, 45851851, 45861852, 45871851, 45881851, 45891851, 45901851, 45911851, 45921851, 45931851, 45941851, 45951851, 45961851, 45971851, 45981851, 45991851, 46001851, 46011851, 46021851, 46031851, 46041851, 46051851, 46061851, 46071851, 46081851, 46091851, 46101851, 46111851, 46121852, 46131851, 46141851, 46151851, 46161851, 46171851, 46181851, 46191851, 46201851, 46211851, 46221851, 46231851, 46241851, 46251851, 46261851, 46271851, 46281851, 46291852, 46301851, 46311851, 46321851, 46331852, 46341851, 46351851, 46361851, 46371851]</msg>
<status status="PASS" starttime="20201112 09:57:32.026" endtime="20201112 09:57:32.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:32.015" endtime="20201112 09:57:32.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:32.049" endtime="20201112 09:57:32.405"></status>
</kw>
<msg timestamp="20201112 09:57:32.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038494264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048741847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:32.045" endtime="20201112 09:57:32.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:32.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038494264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048741847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:32.414" endtime="20201112 09:57:32.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:32.431" endtime="20201112 09:57:32.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:32.038" endtime="20201112 09:57:32.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:32.033" endtime="20201112 09:57:32.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:32.497" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:57:32.441" endtime="20201112 09:57:32.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:32.508" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:57:32.505" endtime="20201112 09:57:32.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:32.512" level="INFO">VALUE: 0.038494264</msg>
<status status="PASS" starttime="20201112 09:57:32.510" endtime="20201112 09:57:32.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:32.499" endtime="20201112 09:57:32.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:32.525" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:32.523" endtime="20201112 09:57:32.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:32.530" level="INFO">VALUE: [0.048741847, 0.058765917, 0.068795903, 0.078826722, 0.088856542, 0.098886278, 0.108917347, 0.118949542, 0.12897825, 0.139009333, 0.149037875, 0.159069236, 0.16910075, 0.179133347, 0.189165, 0.199196917, 0.209228722, 0.219260069, 0.229290389, 0.2393205, 0.249351139, 0.259381833, 0.269413278, 0.2794455, 0.289476333, 0.299507764, 0.309537236, 0.319567458, 0.329598819, 0.339629611, 0.349661625, 0.359693736, 0.369725681, 0.379756583, 0.389789597, 0.399822181, 0.409855722, 0.419890986, 0.429925708, 0.439960597, 0.449995361, 0.460028569, 0.47006225, 0.480095694, 0.490128847, 0.500162444, 0.510196431, 0.520229306, 0.530263847, 0.540295125, 0.550326639, 0.560359583, 0.570391597, 0.580424778, 0.590457736, 0.600491153, 0.610525042, 0.620557764, 0.630589472, 0.640621875, 0.650654028, 0.660686486, 0.670718583, 0.680749694, 0.690781694, 0.700814153, 0.710848139, 0.720880972, 0.730914278, 0.740947069, 0.750981181, 0.761014861, 0.771048486, 0.781082361, 0.791116139, 0.801147111, 0.811180069, 0.821212472, 0.831245292, 0.841277014, 0.851309889, 0.861343292, 0.871375931, 0.881408417, 0.891441583, 0.901473556, 0.911506028, 0.921537903, 0.931569292, 0.941599583, 0.951632917, 0.961666514, 0.971697278, 0.981729181, 0.991760208, 1.001790431, 1.011821792, 1.021853111, 1.031884528, 1.041916569] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:32.528" endtime="20201112 09:57:32.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:32.516" endtime="20201112 09:57:32.533"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:32.539" endtime="20201112 09:57:32.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:32.548" endtime="20201112 09:57:32.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:32.543" endtime="20201112 09:57:32.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:32.534" endtime="20201112 09:57:32.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:29.777" endtime="20201112 09:57:32.574"></status>
</kw>
<msg timestamp="20201112 09:57:32.574" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:32.595" endtime="20201112 09:57:34.754"></status>
</kw>
<msg timestamp="20201112 09:57:34.755" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 48161778, 'wakeups': [48171995, 48181990, 48191990, 48201990, 48211990...</msg>
<status status="PASS" starttime="20201112 09:57:32.592" endtime="20201112 09:57:34.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:34.770" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 48161778, 'wakeups': [48171995, 48181990, 48191990, 48201990, 48211990...</msg>
<status status="PASS" starttime="20201112 09:57:34.765" endtime="20201112 09:57:34.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:34.772" endtime="20201112 09:57:34.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:32.585" endtime="20201112 09:57:34.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:32.579" endtime="20201112 09:57:34.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:34.787" level="INFO">${RESULT} = {'wakeups': [48171995, 48181990, 48191990, 48201990, 48211990, 48221990, 48231990, 48241990, 48251990, 48261990, 48271990, 48281990, 48291990, 48301990, 48311990, 48321990, 48331990, 48341990, 4835199...</msg>
<status status="PASS" starttime="20201112 09:57:34.781" endtime="20201112 09:57:34.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:34.798" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:34.795" endtime="20201112 09:57:34.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:34.802" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:34.800" endtime="20201112 09:57:34.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:34.789" endtime="20201112 09:57:34.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:34.815" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:57:34.812" endtime="20201112 09:57:34.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:34.819" level="INFO">VALUE: 48161778</msg>
<status status="PASS" starttime="20201112 09:57:34.817" endtime="20201112 09:57:34.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:34.806" endtime="20201112 09:57:34.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:34.832" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:34.829" endtime="20201112 09:57:34.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:34.836" level="INFO">VALUE: [48171995, 48181990, 48191990, 48201990, 48211990, 48221990, 48231990, 48241990, 48251990, 48261990, 48271990, 48281990, 48291990, 48301990, 48311990, 48321990, 48331990, 48341990, 48351990, 48361990, 48371990, 48381990, 48391990, 48401990, 48411990, 48421990, 48431990, 48441990, 48451990, 48461990, 48471990, 48481990, 48491990, 48501990, 48511990, 48521990, 48531990, 48541990, 48551991, 48561990, 48571990, 48581990, 48591990, 48601990, 48611990, 48621990, 48631990, 48641990, 48651990, 48661990, 48671990, 48681990, 48691991, 48701990, 48711990, 48721990, 48731990, 48741991, 48751990, 48761991, 48771990, 48781990, 48791990, 48801991, 48811990, 48821990, 48831990, 48841990, 48851990, 48861990, 48871990, 48881990, 48891990, 48901990, 48911990, 48921990, 48931990, 48941990, 48951990, 48961990, 48971990, 48981991, 48991990, 49001990, 49011990, 49021990, 49031990, 49041991, 49051990, 49061990, 49071990, 49081990, 49091990, 49101990, 49111991, 49121990, 49131990, 49141990, 49151990, 49161990]</msg>
<status status="PASS" starttime="20201112 09:57:34.834" endtime="20201112 09:57:34.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:34.823" endtime="20201112 09:57:34.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:34.856" endtime="20201112 09:57:35.213"></status>
</kw>
<msg timestamp="20201112 09:57:35.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038738069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048987931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:34.853" endtime="20201112 09:57:35.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:35.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038738069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048987931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:35.222" endtime="20201112 09:57:35.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:35.239" endtime="20201112 09:57:35.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:34.845" endtime="20201112 09:57:35.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:34.840" endtime="20201112 09:57:35.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:35.304" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:57:35.248" endtime="20201112 09:57:35.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:35.315" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:57:35.312" endtime="20201112 09:57:35.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:35.319" level="INFO">VALUE: 0.038738069</msg>
<status status="PASS" starttime="20201112 09:57:35.317" endtime="20201112 09:57:35.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:35.306" endtime="20201112 09:57:35.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:35.333" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:35.330" endtime="20201112 09:57:35.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:35.338" level="INFO">VALUE: [0.048987931, 0.059015153, 0.069046722, 0.079078167, 0.089109847, 0.099141667, 0.109173931, 0.119206583, 0.129239, 0.139271083, 0.149303347, 0.159334917, 0.169366806, 0.179398847, 0.189430722, 0.199463319, 0.209496278, 0.219528333, 0.229560625, 0.239592583, 0.249625486, 0.259657694, 0.269689861, 0.279721625, 0.289753958, 0.299786264, 0.309819083, 0.319850292, 0.329882542, 0.339915097, 0.349947903, 0.359980389, 0.37001325, 0.380045597, 0.390077847, 0.400109958, 0.410142444, 0.420173556, 0.430205792, 0.440236375, 0.450267069, 0.460296597, 0.470327264, 0.480357736, 0.490388917, 0.500419028, 0.510448708, 0.520478764, 0.53051075, 0.540541931, 0.550573778, 0.560605667, 0.570638917, 0.580669958, 0.590702347, 0.600734542, 0.610766583, 0.620799431, 0.6308295, 0.640861028, 0.650892056, 0.660923472, 0.670955875, 0.680988792, 0.691020153, 0.701053083, 0.711085667, 0.721119, 0.731152569, 0.741184333, 0.751216431, 0.761247389, 0.771278514, 0.781310194, 0.791342292, 0.801374236, 0.811407389, 0.821439333, 0.831470528, 0.841500833, 0.851531403, 0.861563819, 0.871595236, 0.881625722, 0.891656306, 0.901687181, 0.911719889, 0.921753472, 0.931784139, 0.941814694, 0.951846139, 0.96187875, 0.971910472, 0.981942875, 0.991977, 1.002008444, 1.012042972, 1.022077, 1.032111361, 1.042144458] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:35.335" endtime="20201112 09:57:35.338"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:35.323" endtime="20201112 09:57:35.340"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:35.346" endtime="20201112 09:57:35.349"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:35.355" endtime="20201112 09:57:35.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:35.351" endtime="20201112 09:57:35.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:35.342" endtime="20201112 09:57:35.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:32.575" endtime="20201112 09:57:35.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:26.965" endtime="20201112 09:57:35.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:26.964" endtime="20201112 09:57:35.388"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:57:35.394" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:35.416" endtime="20201112 09:57:37.575"></status>
</kw>
<msg timestamp="20201112 09:57:37.576" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 50973915, 'wakeups': [50984171, 50994166, 51004165, 51014167, 51024166...</msg>
<status status="PASS" starttime="20201112 09:57:35.413" endtime="20201112 09:57:37.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:37.583" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 50973915, 'wakeups': [50984171, 50994166, 51004165, 51014167, 51024166...</msg>
<status status="PASS" starttime="20201112 09:57:37.579" endtime="20201112 09:57:37.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:37.585" endtime="20201112 09:57:37.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:35.405" endtime="20201112 09:57:37.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:35.400" endtime="20201112 09:57:37.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:37.599" level="INFO">${RESULT} = {'wakeups': [50984171, 50994166, 51004165, 51014167, 51024166, 51034166, 51044165, 51054166, 51064166, 51074167, 51084165, 51094166, 51104166, 51114167, 51124166, 51134166, 51144166, 51154166, 5116416...</msg>
<status status="PASS" starttime="20201112 09:57:37.594" endtime="20201112 09:57:37.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:37.610" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:37.608" endtime="20201112 09:57:37.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:37.614" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:37.612" endtime="20201112 09:57:37.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:37.601" endtime="20201112 09:57:37.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:37.627" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:57:37.625" endtime="20201112 09:57:37.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:37.631" level="INFO">VALUE: 50973915</msg>
<status status="PASS" starttime="20201112 09:57:37.629" endtime="20201112 09:57:37.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:37.618" endtime="20201112 09:57:37.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:37.644" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:37.642" endtime="20201112 09:57:37.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:37.649" level="INFO">VALUE: [50984171, 50994166, 51004165, 51014167, 51024166, 51034166, 51044165, 51054166, 51064166, 51074167, 51084165, 51094166, 51104166, 51114167, 51124166, 51134166, 51144166, 51154166, 51164165, 51174167, 51184165, 51194166, 51204165, 51214166, 51224165, 51234167, 51244166, 51254166, 51264166, 51274166, 51284165, 51294166, 51304165, 51314165, 51324165, 51334166, 51344166, 51354166, 51364166, 51374165, 51384166, 51394166, 51404166, 51414166, 51424165, 51434167, 51444165, 51454166, 51464165, 51474166, 51484166, 51494166, 51504166, 51514166, 51524165, 51534166, 51544165, 51554166, 51564165, 51574166, 51584166, 51594165, 51604166, 51614165, 51624165, 51634166, 51644166, 51654166, 51664166, 51674166, 51684165, 51694166, 51704166, 51714167, 51724166, 51734166, 51744165, 51754167, 51764165, 51774166, 51784166, 51794167, 51804166, 51814165, 51824165, 51834167, 51844166, 51854165, 51864165, 51874166, 51884165, 51894166, 51904166, 51914167, 51924165, 51934165, 51944166, 51954166, 51964166, 51974166]</msg>
<status status="PASS" starttime="20201112 09:57:37.646" endtime="20201112 09:57:37.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:37.635" endtime="20201112 09:57:37.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:37.670" endtime="20201112 09:57:38.027"></status>
</kw>
<msg timestamp="20201112 09:57:38.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052205778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062494056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:37.667" endtime="20201112 09:57:38.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:38.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052205778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062494056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:38.035" endtime="20201112 09:57:38.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:38.053" endtime="20201112 09:57:38.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:37.658" endtime="20201112 09:57:38.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:37.653" endtime="20201112 09:57:38.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:38.116" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:57:38.062" endtime="20201112 09:57:38.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:38.127" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:57:38.125" endtime="20201112 09:57:38.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:38.132" level="INFO">VALUE: 0.052205778</msg>
<status status="PASS" starttime="20201112 09:57:38.130" endtime="20201112 09:57:38.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:38.118" endtime="20201112 09:57:38.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:38.145" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:38.143" endtime="20201112 09:57:38.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:38.151" level="INFO">VALUE: [0.062494056, 0.072519875, 0.082549014, 0.092580986, 0.102609611, 0.112638597, 0.122668389, 0.132699347, 0.142729042, 0.152759236, 0.162787486, 0.172818708, 0.182848931, 0.192880167, 0.202909944, 0.212939861, 0.222970431, 0.233000681, 0.243030556, 0.253062694, 0.263091181, 0.273122639, 0.283152597, 0.293183986, 0.303213097, 0.313244236, 0.323271958, 0.333301528, 0.343331083, 0.353359764, 0.363388528, 0.373420264, 0.383451403, 0.39348275, 0.403515056, 0.413547472, 0.423578528, 0.433609333, 0.443640931, 0.453671333, 0.463703375, 0.473735736, 0.483769667, 0.493802292, 0.503833403, 0.51386675, 0.523896139, 0.533926806, 0.543956389, 0.553988389, 0.564018625, 0.574047833, 0.58407825, 0.594108611, 0.604137597, 0.614169069, 0.624198778, 0.634229861, 0.64425925, 0.654291833, 0.664323375, 0.674353181, 0.684385819, 0.694415917, 0.704446875, 0.714479347, 0.724511083, 0.7345425, 0.744573625, 0.754604153, 0.764634972, 0.774667208, 0.784697958, 0.794728653, 0.804757861, 0.814789069, 0.824819042, 0.834851375, 0.844879528, 0.854911125, 0.864942653, 0.874975069, 0.885005319, 0.895036139, 0.905068569, 0.915103375, 0.925135625, 0.935167667, 0.945201042, 0.955234542, 0.965266806, 0.975299625, 0.985331056, 0.995364597, 1.005393986, 1.015424806, 1.025457319, 1.035488153, 1.045519611, 1.055550417] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:38.148" endtime="20201112 09:57:38.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:38.136" endtime="20201112 09:57:38.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:38.160" endtime="20201112 09:57:38.163"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:38.168" endtime="20201112 09:57:38.190"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:38.164" endtime="20201112 09:57:38.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:38.155" endtime="20201112 09:57:38.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:35.396" endtime="20201112 09:57:38.194"></status>
</kw>
<msg timestamp="20201112 09:57:38.195" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:38.218" endtime="20201112 09:57:40.344"></status>
</kw>
<msg timestamp="20201112 09:57:40.346" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 53767090, 'wakeups': [53777346, 53787340, 53797341, 53807340, 53817340...</msg>
<status status="PASS" starttime="20201112 09:57:38.214" endtime="20201112 09:57:40.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:40.353" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 53767090, 'wakeups': [53777346, 53787340, 53797341, 53807340, 53817340...</msg>
<status status="PASS" starttime="20201112 09:57:40.348" endtime="20201112 09:57:40.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:40.355" endtime="20201112 09:57:40.359"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:38.205" endtime="20201112 09:57:40.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:38.200" endtime="20201112 09:57:40.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:40.368" level="INFO">${RESULT} = {'wakeups': [53777346, 53787340, 53797341, 53807340, 53817340, 53827341, 53837342, 53847341, 53857341, 53867340, 53877341, 53887340, 53897341, 53907341, 53917341, 53927340, 53937340, 53947342, 5395734...</msg>
<status status="PASS" starttime="20201112 09:57:40.363" endtime="20201112 09:57:40.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:40.378" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:40.376" endtime="20201112 09:57:40.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:40.382" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:40.380" endtime="20201112 09:57:40.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:40.370" endtime="20201112 09:57:40.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:40.394" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:57:40.392" endtime="20201112 09:57:40.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:40.399" level="INFO">VALUE: 53767090</msg>
<status status="PASS" starttime="20201112 09:57:40.396" endtime="20201112 09:57:40.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:40.386" endtime="20201112 09:57:40.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:40.411" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:40.409" endtime="20201112 09:57:40.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:40.416" level="INFO">VALUE: [53777346, 53787340, 53797341, 53807340, 53817340, 53827341, 53837342, 53847341, 53857341, 53867340, 53877341, 53887340, 53897341, 53907341, 53917341, 53927340, 53937340, 53947342, 53957340, 53967342, 53977340, 53987341, 53997341, 54007340, 54017341, 54027341, 54037340, 54047342, 54057341, 54067341, 54077341, 54087341, 54097341, 54107340, 54117341, 54127341, 54137341, 54147340, 54157341, 54167340, 54177342, 54187340, 54197341, 54207340, 54217341, 54227340, 54237341, 54247341, 54257342, 54267340, 54277342, 54287341, 54297342, 54307341, 54317340, 54327341, 54337340, 54347341, 54357340, 54367341, 54377341, 54387342, 54397340, 54407341, 54417340, 54427341, 54437340, 54447340, 54457341, 54467341, 54477341, 54487341, 54497340, 54507341, 54517340, 54527341, 54537341, 54547341, 54557341, 54567340, 54577341, 54587340, 54597341, 54607340, 54617341, 54627341, 54637341, 54647340, 54657341, 54667340, 54677341, 54687340, 54697342, 54707341, 54717341, 54727341, 54737341, 54747341, 54757342, 54767340]</msg>
<status status="PASS" starttime="20201112 09:57:40.414" endtime="20201112 09:57:40.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:40.402" endtime="20201112 09:57:40.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:40.435" endtime="20201112 09:57:40.793"></status>
</kw>
<msg timestamp="20201112 09:57:40.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040348875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050636819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:40.432" endtime="20201112 09:57:40.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:40.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040348875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050636819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:40.802" endtime="20201112 09:57:40.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:40.819" endtime="20201112 09:57:40.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:40.425" endtime="20201112 09:57:40.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:40.420" endtime="20201112 09:57:40.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:40.883" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:57:40.828" endtime="20201112 09:57:40.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:40.894" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:57:40.892" endtime="20201112 09:57:40.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:40.899" level="INFO">VALUE: 0.040348875</msg>
<status status="PASS" starttime="20201112 09:57:40.896" endtime="20201112 09:57:40.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:40.885" endtime="20201112 09:57:40.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:40.912" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:40.910" endtime="20201112 09:57:40.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:40.917" level="INFO">VALUE: [0.050636819, 0.060661681, 0.070695639, 0.080727722, 0.090760903, 0.100795111, 0.110829264, 0.120859111, 0.130890569, 0.140920847, 0.150953986, 0.160985125, 0.171018542, 0.181051583, 0.191085, 0.201116486, 0.211149569, 0.22118375, 0.231214569, 0.2412485, 0.251278681, 0.261312167, 0.271344208, 0.281373819, 0.291406153, 0.301436833, 0.311468528, 0.321501639, 0.331532264, 0.3415625, 0.351592944, 0.361623097, 0.371654403, 0.381684583, 0.391717708, 0.401749403, 0.411782056, 0.421813403, 0.431847236, 0.441878236, 0.451912181, 0.461942347, 0.471975958, 0.482005986, 0.492038, 0.502067181, 0.512099236, 0.522130986, 0.532163708, 0.542193097, 0.552227903, 0.562257833, 0.572290389, 0.582320069, 0.592350486, 0.602383306, 0.612414833, 0.622448056, 0.632478278, 0.642510194, 0.652541569, 0.662573806, 0.672603681, 0.682636292, 0.692666736, 0.702699431, 0.712730972, 0.722762694, 0.732794972, 0.742825319, 0.752856764, 0.762887972, 0.772918681, 0.782950236, 0.792980319, 0.803012278, 0.813044111, 0.823075028, 0.833105764, 0.843135097, 0.853167042, 0.863196306, 0.873227819, 0.883258347, 0.893290514, 0.903321778, 0.913353764, 0.923384444, 0.933417153, 0.943447042, 0.953478694, 0.963508528, 0.973542542, 0.983572139, 0.993603403, 1.003633722, 1.013663653, 1.023694972, 1.033727875, 1.043757028] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:40.915" endtime="20201112 09:57:40.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:40.902" endtime="20201112 09:57:40.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:40.926" endtime="20201112 09:57:40.929"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:40.934" endtime="20201112 09:57:40.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:40.930" endtime="20201112 09:57:40.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:40.921" endtime="20201112 09:57:40.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:38.196" endtime="20201112 09:57:40.961"></status>
</kw>
<msg timestamp="20201112 09:57:40.961" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:40.983" endtime="20201112 09:57:43.141"></status>
</kw>
<msg timestamp="20201112 09:57:43.143" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 56523202, 'wakeups': [56533458, 56543454, 56553453, 56563453, 56573453...</msg>
<status status="PASS" starttime="20201112 09:57:40.979" endtime="20201112 09:57:43.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:43.149" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 56523202, 'wakeups': [56533458, 56543454, 56553453, 56563453, 56573453...</msg>
<status status="PASS" starttime="20201112 09:57:43.145" endtime="20201112 09:57:43.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:43.152" endtime="20201112 09:57:43.155"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:40.972" endtime="20201112 09:57:43.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:40.966" endtime="20201112 09:57:43.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:43.165" level="INFO">${RESULT} = {'wakeups': [56533458, 56543454, 56553453, 56563453, 56573453, 56583453, 56593453, 56603452, 56613452, 56623452, 56633453, 56643454, 56653453, 56663454, 56673453, 56683454, 56693452, 56703452, 5671345...</msg>
<status status="PASS" starttime="20201112 09:57:43.160" endtime="20201112 09:57:43.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:43.175" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:43.173" endtime="20201112 09:57:43.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:43.180" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:43.178" endtime="20201112 09:57:43.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:43.167" endtime="20201112 09:57:43.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:43.192" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:57:43.190" endtime="20201112 09:57:43.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:43.197" level="INFO">VALUE: 56523202</msg>
<status status="PASS" starttime="20201112 09:57:43.195" endtime="20201112 09:57:43.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:43.183" endtime="20201112 09:57:43.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:43.209" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:43.207" endtime="20201112 09:57:43.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:43.214" level="INFO">VALUE: [56533458, 56543454, 56553453, 56563453, 56573453, 56583453, 56593453, 56603452, 56613452, 56623452, 56633453, 56643454, 56653453, 56663454, 56673453, 56683454, 56693452, 56703452, 56713452, 56723454, 56733452, 56743452, 56753454, 56763453, 56773452, 56783453, 56793453, 56803453, 56813453, 56823452, 56833453, 56843453, 56853452, 56863452, 56873452, 56883453, 56893452, 56903453, 56913453, 56923453, 56933453, 56943453, 56953453, 56963453, 56973452, 56983453, 56993454, 57003453, 57013453, 57023453, 57033452, 57043452, 57053452, 57063454, 57073453, 57083452, 57093453, 57103452, 57113453, 57123453, 57133453, 57143453, 57153454, 57163453, 57173453, 57183454, 57193452, 57203453, 57213452, 57223452, 57233452, 57243453, 57253453, 57263453, 57273452, 57283454, 57293452, 57303453, 57313452, 57323454, 57333452, 57343454, 57353453, 57363453, 57373452, 57383452, 57393454, 57403452, 57413452, 57423453, 57433453, 57443452, 57453453, 57463453, 57473453, 57483453, 57493453, 57503453, 57513453, 57523454]</msg>
<status status="PASS" starttime="20201112 09:57:43.212" endtime="20201112 09:57:43.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:43.200" endtime="20201112 09:57:43.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:43.236" endtime="20201112 09:57:43.590"></status>
</kw>
<msg timestamp="20201112 09:57:43.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038995264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049284361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:43.232" endtime="20201112 09:57:43.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:43.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038995264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049284361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:43.600" endtime="20201112 09:57:43.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:43.618" endtime="20201112 09:57:43.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:43.225" endtime="20201112 09:57:43.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:43.218" endtime="20201112 09:57:43.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:43.682" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:57:43.626" endtime="20201112 09:57:43.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:43.693" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:57:43.691" endtime="20201112 09:57:43.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:43.698" level="INFO">VALUE: 0.038995264</msg>
<status status="PASS" starttime="20201112 09:57:43.696" endtime="20201112 09:57:43.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:43.684" endtime="20201112 09:57:43.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:43.711" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:43.709" endtime="20201112 09:57:43.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:43.716" level="INFO">VALUE: [0.049284361, 0.059310167, 0.069339931, 0.079370667, 0.089401667, 0.099433083, 0.10946425, 0.119493972, 0.129525417, 0.139556667, 0.149589333, 0.159621597, 0.16965225, 0.179684306, 0.189715556, 0.199748667, 0.209780292, 0.219813167, 0.229846319, 0.239880847, 0.249911014, 0.259944153, 0.269978917, 0.280011347, 0.290042972, 0.300076083, 0.310108042, 0.320139028, 0.330169319, 0.340199236, 0.350231611, 0.360263833, 0.370296569, 0.380328833, 0.390361819, 0.400394139, 0.410427306, 0.420461639, 0.430495375, 0.440528222, 0.450558792, 0.460589236, 0.470621653, 0.480654181, 0.490685111, 0.500717972, 0.510753653, 0.520786264, 0.530818917, 0.540853056, 0.550885681, 0.560918403, 0.57095175, 0.580986181, 0.591016778, 0.601046528, 0.611079569, 0.621111708, 0.631146611, 0.641178528, 0.651211097, 0.661243069, 0.671276125, 0.681306, 0.691336778, 0.701368458, 0.711397389, 0.721428611, 0.731458319, 0.74148875, 0.751519708, 0.761552639, 0.771584819, 0.781615681, 0.791645861, 0.801679222, 0.811708764, 0.821740986, 0.831772472, 0.841806264, 0.851836736, 0.861871181, 0.871900931, 0.881933083, 0.891963528, 0.90199475, 0.912028486, 0.922057681, 0.932089514, 0.942122042, 0.952153181, 0.962182806, 0.972214194, 0.982244153, 0.992273472, 1.002301417, 1.012330375, 1.022359069, 1.032389514, 1.042420069] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:43.714" endtime="20201112 09:57:43.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:43.701" endtime="20201112 09:57:43.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:43.725" endtime="20201112 09:57:43.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:43.733" endtime="20201112 09:57:43.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:43.729" endtime="20201112 09:57:43.757"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:43.720" endtime="20201112 09:57:43.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:40.963" endtime="20201112 09:57:43.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:35.391" endtime="20201112 09:57:43.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:35.389" endtime="20201112 09:57:43.760"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:57:43.766" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:43.789" endtime="20201112 09:57:45.947"></status>
</kw>
<msg timestamp="20201112 09:57:45.949" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59321186, 'wakeups': [59331478, 59341476, 59351476, 59361476, 59371476...</msg>
<status status="PASS" starttime="20201112 09:57:43.786" endtime="20201112 09:57:45.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:45.956" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59321186, 'wakeups': [59331478, 59341476, 59351476, 59361476, 59371476...</msg>
<status status="PASS" starttime="20201112 09:57:45.951" endtime="20201112 09:57:45.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:45.959" endtime="20201112 09:57:45.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:43.777" endtime="20201112 09:57:45.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:43.771" endtime="20201112 09:57:45.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:45.972" level="INFO">${RESULT} = {'wakeups': [59331478, 59341476, 59351476, 59361476, 59371476, 59381476, 59391476, 59401476, 59411476, 59421477, 59431476, 59441476, 59451476, 59461477, 59471476, 59481476, 59491477, 59501476, 5951147...</msg>
<status status="PASS" starttime="20201112 09:57:45.968" endtime="20201112 09:57:45.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:45.982" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:45.980" endtime="20201112 09:57:45.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:45.987" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:45.985" endtime="20201112 09:57:45.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:45.974" endtime="20201112 09:57:45.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:46.000" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:57:45.997" endtime="20201112 09:57:46.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:46.004" level="INFO">VALUE: 59321186</msg>
<status status="PASS" starttime="20201112 09:57:46.002" endtime="20201112 09:57:46.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:45.991" endtime="20201112 09:57:46.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:46.017" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:46.015" endtime="20201112 09:57:46.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:46.022" level="INFO">VALUE: [59331478, 59341476, 59351476, 59361476, 59371476, 59381476, 59391476, 59401476, 59411476, 59421477, 59431476, 59441476, 59451476, 59461477, 59471476, 59481476, 59491477, 59501476, 59511476, 59521476, 59531476, 59541476, 59551476, 59561477, 59571476, 59581476, 59591476, 59601476, 59611476, 59621476, 59631476, 59641477, 59651476, 59661477, 59671476, 59681476, 59691476, 59701476, 59711476, 59721476, 59731476, 59741476, 59751476, 59761476, 59771476, 59781476, 59791476, 59801476, 59811476, 59821476, 59831476, 59841476, 59851476, 59861476, 59871476, 59881476, 59891476, 59901476, 59911477, 59921476, 59931476, 59941476, 59951476, 59961477, 59971476, 59981477, 59991476, 60001476, 60011477, 60021476, 60031476, 60041476, 60051476, 60061476, 60071476, 60081476, 60091476, 60101477, 60111476, 60121476, 60131476, 60141477, 60151476, 60161476, 60171476, 60181476, 60191476, 60201476, 60211476, 60221477, 60231476, 60241477, 60251476, 60261476, 60271476, 60281476, 60291476, 60301476, 60311476, 60321477]</msg>
<status status="PASS" starttime="20201112 09:57:46.019" endtime="20201112 09:57:46.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:46.008" endtime="20201112 09:57:46.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:46.041" endtime="20201112 09:57:46.397"></status>
</kw>
<msg timestamp="20201112 09:57:46.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046520903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056846472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:46.038" endtime="20201112 09:57:46.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:46.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046520903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056846472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:46.406" endtime="20201112 09:57:46.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:46.424" endtime="20201112 09:57:46.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:46.030" endtime="20201112 09:57:46.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:46.026" endtime="20201112 09:57:46.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:46.487" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:57:46.432" endtime="20201112 09:57:46.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:46.499" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:57:46.497" endtime="20201112 09:57:46.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:46.503" level="INFO">VALUE: 0.046520903</msg>
<status status="PASS" starttime="20201112 09:57:46.501" endtime="20201112 09:57:46.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:46.490" endtime="20201112 09:57:46.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:46.517" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:46.515" endtime="20201112 09:57:46.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:46.522" level="INFO">VALUE: [0.056846472, 0.066875875, 0.076907903, 0.086940236, 0.096973778, 0.107005292, 0.117037611, 0.12707, 0.137102583, 0.147133986, 0.157164111, 0.167195153, 0.177227333, 0.187260472, 0.197293083, 0.207325, 0.217357375, 0.22738775, 0.237418958, 0.247449528, 0.257480486, 0.267511722, 0.277543667, 0.287574917, 0.297604194, 0.307634597, 0.317666028, 0.327697514, 0.337729097, 0.347762083, 0.357795056, 0.367827042, 0.377857139, 0.387888875, 0.397919611, 0.407951806, 0.417984056, 0.42801625, 0.438048194, 0.448079514, 0.458111514, 0.468143306, 0.478175403, 0.488207417, 0.498240056, 0.508271958, 0.518303681, 0.528336069, 0.538368861, 0.548400389, 0.558433319, 0.568465611, 0.578497778, 0.588528458, 0.598559694, 0.60859175, 0.618623917, 0.628656806, 0.638689556, 0.648719861, 0.658750597, 0.668780542, 0.678809569, 0.688840486, 0.698870431, 0.708901444, 0.718932167, 0.728964028, 0.738997444, 0.749028889, 0.759060708, 0.769091694, 0.779122639, 0.789154375, 0.799184667, 0.809214139, 0.819245083, 0.829276222, 0.839307, 0.849339458, 0.859372472, 0.869405583, 0.879436125, 0.889467819, 0.899499153, 0.909529972, 0.919560708, 0.929591139, 0.939622347, 0.949655111, 0.9596855, 0.969717542, 0.979747556, 0.989776875, 0.999807458, 1.009839153, 1.019871833, 1.029903264, 1.039933556, 1.049965208] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:46.519" endtime="20201112 09:57:46.523"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:46.507" endtime="20201112 09:57:46.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:46.531" endtime="20201112 09:57:46.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:46.539" endtime="20201112 09:57:46.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:46.535" endtime="20201112 09:57:46.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:46.526" endtime="20201112 09:57:46.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:43.768" endtime="20201112 09:57:46.565"></status>
</kw>
<msg timestamp="20201112 09:57:46.565" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:46.587" endtime="20201112 09:57:48.747"></status>
</kw>
<msg timestamp="20201112 09:57:48.748" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 62110300, 'wakeups': [62120592, 62130591, 62140590, 62150591, 62160590...</msg>
<status status="PASS" starttime="20201112 09:57:46.583" endtime="20201112 09:57:48.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:48.756" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 62110300, 'wakeups': [62120592, 62130591, 62140590, 62150591, 62160590...</msg>
<status status="PASS" starttime="20201112 09:57:48.750" endtime="20201112 09:57:48.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:48.758" endtime="20201112 09:57:48.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:46.576" endtime="20201112 09:57:48.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:46.571" endtime="20201112 09:57:48.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:48.772" level="INFO">${RESULT} = {'wakeups': [62120592, 62130591, 62140590, 62150591, 62160590, 62170590, 62180590, 62190590, 62200590, 62210591, 62220590, 62230590, 62240590, 62250590, 62260590, 62270590, 62280590, 62290590, 6230059...</msg>
<status status="PASS" starttime="20201112 09:57:48.767" endtime="20201112 09:57:48.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:48.782" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:48.780" endtime="20201112 09:57:48.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:48.787" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:48.785" endtime="20201112 09:57:48.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:48.774" endtime="20201112 09:57:48.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:48.801" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:57:48.799" endtime="20201112 09:57:48.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:48.806" level="INFO">VALUE: 62110300</msg>
<status status="PASS" starttime="20201112 09:57:48.804" endtime="20201112 09:57:48.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:48.792" endtime="20201112 09:57:48.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:48.819" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:48.817" endtime="20201112 09:57:48.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:48.824" level="INFO">VALUE: [62120592, 62130591, 62140590, 62150591, 62160590, 62170590, 62180590, 62190590, 62200590, 62210591, 62220590, 62230590, 62240590, 62250590, 62260590, 62270590, 62280590, 62290590, 62300590, 62310591, 62320590, 62330590, 62340591, 62350591, 62360590, 62370590, 62380590, 62390590, 62400590, 62410590, 62420590, 62430590, 62440590, 62450590, 62460590, 62470591, 62480591, 62490590, 62500591, 62510590, 62520590, 62530591, 62540590, 62550590, 62560590, 62570590, 62580590, 62590590, 62600590, 62610590, 62620590, 62630591, 62640590, 62650591, 62660590, 62670590, 62680590, 62690590, 62700590, 62710590, 62720590, 62730591, 62740590, 62750590, 62760590, 62770590, 62780590, 62790590, 62800590, 62810590, 62820590, 62830591, 62840590, 62850591, 62860590, 62870591, 62880590, 62890590, 62900590, 62910590, 62920590, 62930590, 62940590, 62950590, 62960590, 62970590, 62980591, 62990590, 63000590, 63010591, 63020590, 63030591, 63040590, 63050590, 63060590, 63070591, 63080590, 63090590, 63100590, 63110590]</msg>
<status status="PASS" starttime="20201112 09:57:48.822" endtime="20201112 09:57:48.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:48.810" endtime="20201112 09:57:48.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:48.846" endtime="20201112 09:57:49.203"></status>
</kw>
<msg timestamp="20201112 09:57:49.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038442361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048766708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:48.843" endtime="20201112 09:57:49.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:49.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038442361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048766708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:49.211" endtime="20201112 09:57:49.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:49.229" endtime="20201112 09:57:49.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:48.835" endtime="20201112 09:57:49.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:48.828" endtime="20201112 09:57:49.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:49.291" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:57:49.237" endtime="20201112 09:57:49.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:49.302" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:57:49.300" endtime="20201112 09:57:49.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:49.307" level="INFO">VALUE: 0.038442361</msg>
<status status="PASS" starttime="20201112 09:57:49.305" endtime="20201112 09:57:49.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:49.293" endtime="20201112 09:57:49.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:49.320" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:49.318" endtime="20201112 09:57:49.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:49.325" level="INFO">VALUE: [0.048766708, 0.058797958, 0.068828792, 0.078861361, 0.088892139, 0.098923083, 0.108953972, 0.118984597, 0.129014861, 0.139045708, 0.149074986, 0.15910525, 0.169134833, 0.179163958, 0.189194194, 0.199224153, 0.209255208, 0.219285875, 0.229316264, 0.239347389, 0.249377556, 0.259408444, 0.269439542, 0.279469764, 0.289497833, 0.299526847, 0.309556347, 0.319585792, 0.329616847, 0.33964775, 0.349680347, 0.359712667, 0.369746569, 0.379779639, 0.389811903, 0.399843986, 0.409875319, 0.419905125, 0.429936903, 0.439967042, 0.449997653, 0.46002875, 0.47005825, 0.480090583, 0.490122708, 0.500154056, 0.510184181, 0.520214083, 0.530244806, 0.540275056, 0.550305722, 0.56033775, 0.570367708, 0.580398486, 0.590426347, 0.600456917, 0.610487722, 0.620517403, 0.630547667, 0.640577403, 0.650607444, 0.660638903, 0.670669819, 0.680699778, 0.690730625, 0.700760125, 0.710790819, 0.720821028, 0.730851542, 0.740880931, 0.750910944, 0.760942375, 0.770972181, 0.781003389, 0.7910315, 0.801062306, 0.811090153, 0.821120292, 0.831150847, 0.841180597, 0.851211653, 0.861241583, 0.871272528, 0.881301417, 0.891330667, 0.901361431, 0.911393778, 0.92142275, 0.93145325, 0.941484847, 0.951515569, 0.961546403, 0.971576292, 0.981607125, 0.991638194, 1.001669181, 1.011699319, 1.021729333, 1.031760069, 1.041790847] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:49.323" endtime="20201112 09:57:49.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:49.310" endtime="20201112 09:57:49.328"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:49.335" endtime="20201112 09:57:49.338"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:49.343" endtime="20201112 09:57:49.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:49.339" endtime="20201112 09:57:49.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:49.330" endtime="20201112 09:57:49.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:46.567" endtime="20201112 09:57:49.369"></status>
</kw>
<msg timestamp="20201112 09:57:49.370" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:49.394" endtime="20201112 09:57:51.553"></status>
</kw>
<msg timestamp="20201112 09:57:51.554" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 64909018, 'wakeups': [64919310, 64929308, 64939308, 64949308, 64959308...</msg>
<status status="PASS" starttime="20201112 09:57:49.391" endtime="20201112 09:57:51.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:51.561" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 64909018, 'wakeups': [64919310, 64929308, 64939308, 64949308, 64959308...</msg>
<status status="PASS" starttime="20201112 09:57:51.556" endtime="20201112 09:57:51.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:51.564" endtime="20201112 09:57:51.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:49.381" endtime="20201112 09:57:51.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:49.375" endtime="20201112 09:57:51.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:51.577" level="INFO">${RESULT} = {'wakeups': [64919310, 64929308, 64939308, 64949308, 64959308, 64969308, 64979308, 64989308, 64999309, 65009308, 65019308, 65029308, 65039308, 65049308, 65059308, 65069309, 65079308, 65089308, 6509930...</msg>
<status status="PASS" starttime="20201112 09:57:51.572" endtime="20201112 09:57:51.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:51.587" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:51.585" endtime="20201112 09:57:51.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:51.592" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:51.589" endtime="20201112 09:57:51.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:51.579" endtime="20201112 09:57:51.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:51.604" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:57:51.602" endtime="20201112 09:57:51.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:51.609" level="INFO">VALUE: 64909018</msg>
<status status="PASS" starttime="20201112 09:57:51.607" endtime="20201112 09:57:51.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:51.595" endtime="20201112 09:57:51.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:51.621" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:51.619" endtime="20201112 09:57:51.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:51.626" level="INFO">VALUE: [64919310, 64929308, 64939308, 64949308, 64959308, 64969308, 64979308, 64989308, 64999309, 65009308, 65019308, 65029308, 65039308, 65049308, 65059308, 65069309, 65079308, 65089308, 65099308, 65109308, 65119308, 65129308, 65139308, 65149308, 65159308, 65169308, 65179308, 65189308, 65199308, 65209309, 65219308, 65229309, 65239308, 65249308, 65259308, 65269308, 65279308, 65289308, 65299308, 65309308, 65319309, 65329312, 65339308, 65349309, 65359308, 65369308, 65379308, 65389308, 65399308, 65409308, 65419308, 65429308, 65439308, 65449308, 65459308, 65469308, 65479308, 65489308, 65499308, 65509308, 65519308, 65529308, 65539308, 65549308, 65559308, 65569308, 65579308, 65589308, 65599309, 65609308, 65619308, 65629308, 65639308, 65649308, 65659309, 65669309, 65679308, 65689308, 65699309, 65709308, 65719308, 65729308, 65739309, 65749308, 65759308, 65769308, 65779308, 65789308, 65799308, 65809309, 65819308, 65829308, 65839308, 65849308, 65859309, 65869308, 65879308, 65889308, 65899309, 65909308]</msg>
<status status="PASS" starttime="20201112 09:57:51.624" endtime="20201112 09:57:51.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:51.612" endtime="20201112 09:57:51.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:51.646" endtime="20201112 09:57:52.003"></status>
</kw>
<msg timestamp="20201112 09:57:52.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041584833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051909958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:51.643" endtime="20201112 09:57:52.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:52.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041584833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051909958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:52.012" endtime="20201112 09:57:52.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:52.029" endtime="20201112 09:57:52.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:51.635" endtime="20201112 09:57:52.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:51.630" endtime="20201112 09:57:52.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:52.093" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:57:52.038" endtime="20201112 09:57:52.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:52.104" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:57:52.102" endtime="20201112 09:57:52.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:52.108" level="INFO">VALUE: 0.041584833</msg>
<status status="PASS" starttime="20201112 09:57:52.106" endtime="20201112 09:57:52.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:52.095" endtime="20201112 09:57:52.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:52.122" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:52.120" endtime="20201112 09:57:52.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:52.126" level="INFO">VALUE: [0.051909958, 0.061940819, 0.071974306, 0.082007014, 0.092039069, 0.102070986, 0.112103417, 0.122135347, 0.132168403, 0.142199028, 0.152231375, 0.162263681, 0.172295236, 0.182326194, 0.192358403, 0.202391361, 0.212423569, 0.222455792, 0.232487778, 0.242519819, 0.252551528, 0.262582861, 0.272614458, 0.282646931, 0.292678806, 0.302710611, 0.3127415, 0.322770681, 0.3328, 0.3428295, 0.352857681, 0.362886806, 0.372913903, 0.382942667, 0.392972264, 0.403000514, 0.413029708, 0.423059458, 0.433089792, 0.443121097, 0.453153514, 0.463187681, 0.473215042, 0.483247931, 0.493278375, 0.503308972, 0.513339736, 0.523370903, 0.533402819, 0.543434139, 0.553464778, 0.563495319, 0.573526042, 0.583556417, 0.593587556, 0.603619903, 0.613652153, 0.6236845, 0.633716333, 0.643747875, 0.653778875, 0.663810653, 0.673841986, 0.683873833, 0.69390375, 0.703933208, 0.713963292, 0.723992347, 0.734023306, 0.744051472, 0.754080778, 0.764109667, 0.774139111, 0.784170069, 0.794203722, 0.804235611, 0.814266111, 0.824297889, 0.834331778, 0.844363764, 0.854396347, 0.864428417, 0.874463069, 0.884496236, 0.894530403, 0.904563764, 0.914595625, 0.924627042, 0.934658778, 0.94469125, 0.954721458, 0.964752597, 0.974784389, 0.984814764, 0.994846819, 1.004876431, 1.014908597, 1.024941083, 1.034973736, 1.045003569] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:52.124" endtime="20201112 09:57:52.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:52.112" endtime="20201112 09:57:52.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:52.136" endtime="20201112 09:57:52.138"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:52.144" endtime="20201112 09:57:52.166"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:52.140" endtime="20201112 09:57:52.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:52.131" endtime="20201112 09:57:52.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:49.371" endtime="20201112 09:57:52.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:43.763" endtime="20201112 09:57:52.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:43.761" endtime="20201112 09:57:52.171"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:57:52.176" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:52.199" endtime="20201112 09:57:54.357"></status>
</kw>
<msg timestamp="20201112 09:57:54.358" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67705191, 'wakeups': [67715526, 67725522, 67735522, 67745522, 67755525...</msg>
<status status="PASS" starttime="20201112 09:57:52.194" endtime="20201112 09:57:54.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:54.365" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67705191, 'wakeups': [67715526, 67725522, 67735522, 67745522, 67755525...</msg>
<status status="PASS" starttime="20201112 09:57:54.361" endtime="20201112 09:57:54.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:54.368" endtime="20201112 09:57:54.371"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:52.187" endtime="20201112 09:57:54.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:52.182" endtime="20201112 09:57:54.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:54.381" level="INFO">${RESULT} = {'wakeups': [67715526, 67725522, 67735522, 67745522, 67755525, 67765525, 67775522, 67785522, 67795523, 67805522, 67815525, 67825522, 67835522, 67845522, 67855525, 67865523, 67875522, 67885522, 6789552...</msg>
<status status="PASS" starttime="20201112 09:57:54.376" endtime="20201112 09:57:54.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:54.391" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:54.389" endtime="20201112 09:57:54.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:54.396" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:54.393" endtime="20201112 09:57:54.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:54.383" endtime="20201112 09:57:54.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:54.408" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:57:54.406" endtime="20201112 09:57:54.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:54.413" level="INFO">VALUE: 67705191</msg>
<status status="PASS" starttime="20201112 09:57:54.411" endtime="20201112 09:57:54.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:54.399" endtime="20201112 09:57:54.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:54.425" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:54.423" endtime="20201112 09:57:54.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:54.430" level="INFO">VALUE: [67715526, 67725522, 67735522, 67745522, 67755525, 67765525, 67775522, 67785522, 67795523, 67805522, 67815525, 67825522, 67835522, 67845522, 67855525, 67865523, 67875522, 67885522, 67895525, 67905522, 67915522, 67925525, 67935522, 67945522, 67955522, 67965522, 67975522, 67985522, 67995522, 68005522, 68015525, 68025522, 68035522, 68045525, 68055522, 68065522, 68075522, 68085522, 68095522, 68105522, 68115522, 68125525, 68135522, 68145522, 68155522, 68165523, 68175525, 68185522, 68195522, 68205525, 68215522, 68225522, 68235522, 68245522, 68255522, 68265522, 68275525, 68285522, 68295522, 68305523, 68315525, 68325523, 68335522, 68345523, 68355522, 68365525, 68375522, 68385525, 68395525, 68405523, 68415525, 68425523, 68435522, 68445522, 68455523, 68465522, 68475522, 68485525, 68495523, 68505522, 68515522, 68525525, 68535523, 68545522, 68555522, 68565525, 68575525, 68585525, 68595525, 68605522, 68615525, 68625523, 68635522, 68645522, 68655522, 68665525, 68675523, 68685522, 68695525, 68705522]</msg>
<status status="PASS" starttime="20201112 09:57:54.428" endtime="20201112 09:57:54.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:54.416" endtime="20201112 09:57:54.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:54.452" endtime="20201112 09:57:54.807"></status>
</kw>
<msg timestamp="20201112 09:57:54.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045577431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055945083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:54.448" endtime="20201112 09:57:54.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:54.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045577431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055945083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:54.816" endtime="20201112 09:57:54.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:54.833" endtime="20201112 09:57:54.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:54.441" endtime="20201112 09:57:54.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:54.436" endtime="20201112 09:57:54.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:54.897" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:57:54.843" endtime="20201112 09:57:54.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:54.908" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:57:54.905" endtime="20201112 09:57:54.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:54.912" level="INFO">VALUE: 0.045577431</msg>
<status status="PASS" starttime="20201112 09:57:54.910" endtime="20201112 09:57:54.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:54.899" endtime="20201112 09:57:54.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:54.926" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:54.923" endtime="20201112 09:57:54.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:54.930" level="INFO">VALUE: [0.055945083, 0.065972097, 0.076002792, 0.086032847, 0.096067097, 0.106097972, 0.116125819, 0.126156278, 0.136188347, 0.146218528, 0.156254208, 0.166282472, 0.17631325, 0.186344694, 0.196378139, 0.206406806, 0.216435875, 0.226466056, 0.236500125, 0.246527681, 0.256559139, 0.266593486, 0.276621833, 0.286652, 0.296682181, 0.306712736, 0.316743347, 0.326774, 0.336804819, 0.346834736, 0.356868847, 0.366896264, 0.376927444, 0.386960694, 0.39698925, 0.407020833, 0.417051222, 0.427082056, 0.437112292, 0.447143264, 0.457173958, 0.467209, 0.477237625, 0.487268333, 0.497298819, 0.507330014, 0.5173625, 0.527390375, 0.537420861, 0.547453125, 0.557480472, 0.567510167, 0.577540944, 0.587571875, 0.597603514, 0.607632792, 0.617665903, 0.627692917, 0.637724569, 0.647757556, 0.657792236, 0.667822736, 0.677853667, 0.687884611, 0.697914194, 0.707947375, 0.717976486, 0.728010181, 0.738040556, 0.748068167, 0.758100375, 0.768128472, 0.778158569, 0.788189056, 0.798220611, 0.808249819, 0.818281222, 0.828315514, 0.838343792, 0.848373236, 0.858403153, 0.868436667, 0.878465472, 0.888493847, 0.898524833, 0.908557083, 0.918586917, 0.928618583, 0.938650597, 0.948678903, 0.958714292, 0.968743056, 0.978772639, 0.988802681, 0.99883325, 1.008866903, 1.01889575, 1.028925, 1.038958667, 1.048986319] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:54.928" endtime="20201112 09:57:54.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:54.916" endtime="20201112 09:57:54.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:54.940" endtime="20201112 09:57:54.942"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:54.948" endtime="20201112 09:57:54.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:54.943" endtime="20201112 09:57:54.973"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:54.935" endtime="20201112 09:57:54.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:52.178" endtime="20201112 09:57:54.975"></status>
</kw>
<msg timestamp="20201112 09:57:54.976" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:54.999" endtime="20201112 09:57:57.158"></status>
</kw>
<msg timestamp="20201112 09:57:57.159" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 70497527, 'wakeups': [70507865, 70517859, 70527861, 70537858, 70547858...</msg>
<status status="PASS" starttime="20201112 09:57:54.995" endtime="20201112 09:57:57.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:57.166" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 70497527, 'wakeups': [70507865, 70517859, 70527861, 70537858, 70547858...</msg>
<status status="PASS" starttime="20201112 09:57:57.162" endtime="20201112 09:57:57.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:57.169" endtime="20201112 09:57:57.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:54.987" endtime="20201112 09:57:57.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:54.981" endtime="20201112 09:57:57.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:57.182" level="INFO">${RESULT} = {'wakeups': [70507865, 70517859, 70527861, 70537858, 70547858, 70557858, 70567861, 70577859, 70587861, 70597861, 70607859, 70617858, 70627859, 70637858, 70647861, 70657858, 70667859, 70677858, 7068786...</msg>
<status status="PASS" starttime="20201112 09:57:57.177" endtime="20201112 09:57:57.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:57.193" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:57.190" endtime="20201112 09:57:57.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:57.197" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:57.195" endtime="20201112 09:57:57.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:57.184" endtime="20201112 09:57:57.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:57.210" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:57:57.207" endtime="20201112 09:57:57.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:57.214" level="INFO">VALUE: 70497527</msg>
<status status="PASS" starttime="20201112 09:57:57.212" endtime="20201112 09:57:57.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:57.201" endtime="20201112 09:57:57.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:57.227" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:57.224" endtime="20201112 09:57:57.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:57.232" level="INFO">VALUE: [70507865, 70517859, 70527861, 70537858, 70547858, 70557858, 70567861, 70577859, 70587861, 70597861, 70607859, 70617858, 70627859, 70637858, 70647861, 70657858, 70667859, 70677858, 70687861, 70697861, 70707858, 70717861, 70727861, 70737858, 70747858, 70757858, 70767861, 70777859, 70787858, 70797859, 70807861, 70817859, 70827861, 70837859, 70847861, 70857861, 70867858, 70877858, 70887859, 70897858, 70907858, 70917858, 70927859, 70937861, 70947858, 70957858, 70967858, 70977861, 70987861, 70997858, 71007858, 71017858, 71027861, 71037858, 71047858, 71057858, 71067859, 71077861, 71087858, 71097858, 71107861, 71117858, 71127858, 71137858, 71147858, 71157858, 71167859, 71177858, 71187861, 71197859, 71207859, 71217861, 71227861, 71237858, 71247861, 71257858, 71267858, 71277858, 71287858, 71297861, 71307858, 71317858, 71327861, 71337858, 71347861, 71357858, 71367858, 71377858, 71387861, 71397858, 71407858, 71417858, 71427858, 71437859, 71447861, 71457859, 71467858, 71477861, 71487861, 71497858]</msg>
<status status="PASS" starttime="20201112 09:57:57.229" endtime="20201112 09:57:57.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:57.218" endtime="20201112 09:57:57.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:57.251" endtime="20201112 09:57:57.606"></status>
</kw>
<msg timestamp="20201112 09:57:57.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040789667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051158, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:57:57.248" endtime="20201112 09:57:57.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:57.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040789667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051158, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:57:57.614" endtime="20201112 09:57:57.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:57.631" endtime="20201112 09:57:57.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:57.240" endtime="20201112 09:57:57.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:57.235" endtime="20201112 09:57:57.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:57.696" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:57:57.643" endtime="20201112 09:57:57.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:57.707" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:57:57.705" endtime="20201112 09:57:57.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:57.712" level="INFO">VALUE: 0.040789667</msg>
<status status="PASS" starttime="20201112 09:57:57.710" endtime="20201112 09:57:57.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:57.698" endtime="20201112 09:57:57.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:57.725" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:57.723" endtime="20201112 09:57:57.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:57.731" level="INFO">VALUE: [0.051158, 0.061182556, 0.071215819, 0.081242917, 0.0912735, 0.101303278, 0.111335764, 0.121362625, 0.131396056, 0.141427181, 0.151457361, 0.161487431, 0.171519597, 0.181549264, 0.191584667, 0.201612903, 0.211645889, 0.221675833, 0.231709931, 0.241741708, 0.25177025, 0.261804639, 0.27183625, 0.281863833, 0.291895653, 0.301926847, 0.311961056, 0.321989556, 0.332019, 0.342050167, 0.352082833, 0.362111403, 0.372143611, 0.382172167, 0.392204472, 0.402234333, 0.412261486, 0.422292306, 0.432324083, 0.442353611, 0.452385458, 0.462415931, 0.472448, 0.482480847, 0.492509486, 0.502540667, 0.512571806, 0.522605167, 0.532636292, 0.542663403, 0.552694194, 0.562725139, 0.572760472, 0.582787931, 0.592819042, 0.602849319, 0.612880972, 0.622912792, 0.632939458, 0.642968528, 0.653001681, 0.663028486, 0.67305825, 0.683087056, 0.693116847, 0.70314675, 0.713179097, 0.723210278, 0.733244972, 0.743273181, 0.753303028, 0.763334486, 0.773364153, 0.783391111, 0.793425181, 0.803452972, 0.813483097, 0.823512611, 0.833541014, 0.843573153, 0.853600361, 0.863630681, 0.873663903, 0.88369175, 0.893724569, 0.903750653, 0.913780028, 0.923809736, 0.933843, 0.943869319, 0.953899792, 0.963929861, 0.973960431, 0.983993069, 0.994027681, 1.004056292, 1.014085931, 1.024118708, 1.034149653, 1.044176264] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:57.728" endtime="20201112 09:57:57.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:57.715" endtime="20201112 09:57:57.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:57.740" endtime="20201112 09:57:57.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:57.749" endtime="20201112 09:57:57.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:57.744" endtime="20201112 09:57:57.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:57.735" endtime="20201112 09:57:57.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:54.978" endtime="20201112 09:57:57.775"></status>
</kw>
<msg timestamp="20201112 09:57:57.775" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:57.796" endtime="20201112 09:57:59.955"></status>
</kw>
<msg timestamp="20201112 09:57:59.956" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 73286325, 'wakeups': [73296668, 73306656, 73316656, 73326659, 73336656...</msg>
<status status="PASS" starttime="20201112 09:57:57.793" endtime="20201112 09:57:59.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:59.963" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 73286325, 'wakeups': [73296668, 73306656, 73316656, 73326659, 73336656...</msg>
<status status="PASS" starttime="20201112 09:57:59.959" endtime="20201112 09:57:59.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:59.965" endtime="20201112 09:57:59.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:57.786" endtime="20201112 09:57:59.973"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:57.780" endtime="20201112 09:57:59.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:59.980" level="INFO">${RESULT} = {'wakeups': [73296668, 73306656, 73316656, 73326659, 73336656, 73346657, 73356656, 73366656, 73376656, 73386657, 73396656, 73406656, 73416659, 73426657, 73436656, 73446659, 73456656, 73466656, 7347665...</msg>
<status status="PASS" starttime="20201112 09:57:59.976" endtime="20201112 09:57:59.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:59.991" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:59.988" endtime="20201112 09:57:59.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:59.995" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:59.993" endtime="20201112 09:57:59.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:59.982" endtime="20201112 09:57:59.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:58:00.008" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:58:00.005" endtime="20201112 09:58:00.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:58:00.012" level="INFO">VALUE: 73286325</msg>
<status status="PASS" starttime="20201112 09:58:00.010" endtime="20201112 09:58:00.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:59.999" endtime="20201112 09:58:00.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:58:00.025" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:58:00.023" endtime="20201112 09:58:00.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:58:00.030" level="INFO">VALUE: [73296668, 73306656, 73316656, 73326659, 73336656, 73346657, 73356656, 73366656, 73376656, 73386657, 73396656, 73406656, 73416659, 73426657, 73436656, 73446659, 73456656, 73466656, 73476657, 73486657, 73496659, 73506656, 73516657, 73526656, 73536656, 73546656, 73556656, 73566656, 73576657, 73586659, 73596656, 73606656, 73616656, 73626656, 73636656, 73646656, 73656657, 73666656, 73676656, 73686657, 73696656, 73706656, 73716657, 73726656, 73736657, 73746657, 73756659, 73766657, 73776656, 73786656, 73796659, 73806656, 73816656, 73826656, 73836656, 73846659, 73856656, 73866656, 73876659, 73886657, 73896656, 73906656, 73916659, 73926656, 73936659, 73946657, 73956656, 73966659, 73976659, 73986656, 73996657, 74006656, 74016656, 74026656, 74036656, 74046659, 74056656, 74066656, 74076659, 74086656, 74096656, 74106657, 74116656, 74126656, 74136657, 74146656, 74156656, 74166659, 74176656, 74186657, 74196659, 74206657, 74216659, 74226657, 74236659, 74246656, 74256656, 74266656, 74276659, 74286659]</msg>
<status status="PASS" starttime="20201112 09:58:00.028" endtime="20201112 09:58:00.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:00.016" endtime="20201112 09:58:00.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:58:00.050" endtime="20201112 09:58:00.405"></status>
</kw>
<msg timestamp="20201112 09:58:00.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038413944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048788319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:58:00.046" endtime="20201112 09:58:00.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:58:00.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038413944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048788319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:58:00.414" endtime="20201112 09:58:00.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:58:00.431" endtime="20201112 09:58:00.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:00.039" endtime="20201112 09:58:00.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:00.034" endtime="20201112 09:58:00.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:58:00.494" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:58:00.439" endtime="20201112 09:58:00.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:58:00.505" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:58:00.503" endtime="20201112 09:58:00.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:58:00.510" level="INFO">VALUE: 0.038413944</msg>
<status status="PASS" starttime="20201112 09:58:00.508" endtime="20201112 09:58:00.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:00.496" endtime="20201112 09:58:00.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:58:00.523" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:58:00.521" endtime="20201112 09:58:00.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:58:00.528" level="INFO">VALUE: [0.048788319, 0.058806931, 0.068836722, 0.078869361, 0.088895875, 0.098926514, 0.1089555, 0.118987, 0.129018694, 0.139051139, 0.149081153, 0.159111569, 0.169146111, 0.179174222, 0.189204347, 0.199237694, 0.209265917, 0.219296611, 0.229329347, 0.239359194, 0.249390806, 0.259418208, 0.269449375, 0.279477694, 0.289508042, 0.299538167, 0.309568597, 0.319598167, 0.329629111, 0.339659889, 0.349685819, 0.359714472, 0.369743736, 0.379772403, 0.389801278, 0.399830694, 0.409863222, 0.419893514, 0.429924847, 0.439956639, 0.449985972, 0.460016139, 0.470047889, 0.480078403, 0.490110528, 0.500141639, 0.510174139, 0.520203417, 0.530233194, 0.540263667, 0.550298417, 0.560326722, 0.570359431, 0.580391264, 0.59042175, 0.600455722, 0.610483764, 0.620514028, 0.630547167, 0.640576042, 0.650605153, 0.66063625, 0.670670653, 0.680699306, 0.690733847, 0.700763083, 0.710793153, 0.7208275, 0.730857861, 0.740885833, 0.750918222, 0.760948569, 0.770980125, 0.781010875, 0.791041958, 0.801075306, 0.811102403, 0.821132444, 0.831165639, 0.841193236, 0.851223625, 0.861254389, 0.871284903, 0.881315431, 0.891347028, 0.901376431, 0.911407472, 0.921441319, 0.931468278, 0.941499347, 0.951533111, 0.961561264, 0.971594347, 0.981624181, 0.991657931, 1.001685694, 1.011716583, 1.021746542, 1.031779889, 1.041808597] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:58:00.526" endtime="20201112 09:58:00.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:00.513" endtime="20201112 09:58:00.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:58:00.537" endtime="20201112 09:58:00.540"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:58:00.545" endtime="20201112 09:58:00.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:00.541" endtime="20201112 09:58:00.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:00.532" endtime="20201112 09:58:00.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:57.777" endtime="20201112 09:58:00.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:52.173" endtime="20201112 09:58:00.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:52.172" endtime="20201112 09:58:00.573"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:58:00.579" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:58:00.600" endtime="20201112 09:58:02.758"></status>
</kw>
<msg timestamp="20201112 09:58:02.760" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 76081676, 'wakeups': [76092063, 76102058, 76112058, 76122060, 761320...</msg>
<status status="PASS" starttime="20201112 09:58:00.596" endtime="20201112 09:58:02.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:58:02.767" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 76081676, 'wakeups': [76092063, 76102058, 76112058, 76122060, 761320...</msg>
<status status="PASS" starttime="20201112 09:58:02.762" endtime="20201112 09:58:02.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:58:02.769" endtime="20201112 09:58:02.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:00.589" endtime="20201112 09:58:02.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:00.584" endtime="20201112 09:58:02.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:58:02.782" level="INFO">${RESULT} = {'wakeups': [76092063, 76102058, 76112058, 76122060, 76132058, 76142058, 76152058, 76162058, 76172058, 76182058, 76192058, 76202058, 76212058, 76222059, 76232058, 76242060, 76252061, 76262060, 7627205...</msg>
<status status="PASS" starttime="20201112 09:58:02.778" endtime="20201112 09:58:02.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:58:02.792" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:58:02.790" endtime="20201112 09:58:02.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:58:02.797" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:58:02.795" endtime="20201112 09:58:02.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:02.784" endtime="20201112 09:58:02.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:58:02.810" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:58:02.807" endtime="20201112 09:58:02.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:58:02.814" level="INFO">VALUE: 76081676</msg>
<status status="PASS" starttime="20201112 09:58:02.812" endtime="20201112 09:58:02.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:02.801" endtime="20201112 09:58:02.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:58:02.827" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:58:02.824" endtime="20201112 09:58:02.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:58:02.834" level="INFO">VALUE: [76092063, 76102058, 76112058, 76122060, 76132058, 76142058, 76152058, 76162058, 76172058, 76182058, 76192058, 76202058, 76212058, 76222059, 76232058, 76242060, 76252061, 76262060, 76272058, 76282058, 76292060, 76302058, 76312058, 76322058, 76332058, 76342058, 76352058, 76362058, 76372058, 76382058, 76392060, 76402058, 76412058, 76422058, 76432058, 76442058, 76452058, 76462058, 76472058, 76482058, 76492058, 76502060, 76512058, 76522058, 76532058, 76542058, 76552058, 76562060, 76572058, 76582058, 76592058, 76602058, 76612058, 76622058, 76632060, 76642060, 76652058, 76662058, 76672060, 76682058, 76692058, 76702058, 76712058, 76722058, 76732061, 76742060, 76752058, 76762058, 76772058, 76782060, 76792058, 76802058, 76812058, 76822058, 76832058, 76842058, 76852058, 76862058, 76872058, 76882058, 76892058, 76902060, 76912058, 76922058, 76932058, 76942058, 76952058, 76962058, 76972058, 76982058, 76992058, 77002060, 77012060, 77022058, 77032058, 77042058, 77052058, 77062058, 77072060, 77082060]</msg>
<status status="PASS" starttime="20201112 09:58:02.829" endtime="20201112 09:58:02.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:02.818" endtime="20201112 09:58:02.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:58:02.861" endtime="20201112 09:58:03.206"></status>
</kw>
<msg timestamp="20201112 09:58:03.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045350056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055768833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:58:02.850" endtime="20201112 09:58:03.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:58:03.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045350056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055768833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:58:03.215" endtime="20201112 09:58:03.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:58:03.232" endtime="20201112 09:58:03.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:02.843" endtime="20201112 09:58:03.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:02.838" endtime="20201112 09:58:03.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:58:03.296" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:58:03.241" endtime="20201112 09:58:03.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:58:03.307" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:58:03.305" endtime="20201112 09:58:03.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:58:03.312" level="INFO">VALUE: 0.045350056</msg>
<status status="PASS" starttime="20201112 09:58:03.310" endtime="20201112 09:58:03.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:03.298" endtime="20201112 09:58:03.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:58:03.325" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:58:03.323" endtime="20201112 09:58:03.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:58:03.330" level="INFO">VALUE: [0.055768833, 0.065793986, 0.075823708, 0.085855375, 0.095885306, 0.105917931, 0.115949819, 0.125979347, 0.136008722, 0.146039597, 0.156071167, 0.166102556, 0.176135639, 0.186168986, 0.196199458, 0.206232264, 0.216263125, 0.226291278, 0.236319403, 0.246349431, 0.256382264, 0.266409764, 0.276440361, 0.286470792, 0.296501486, 0.30653075, 0.316561514, 0.326590278, 0.336619319, 0.346648319, 0.356679694, 0.366705986, 0.376736097, 0.386764764, 0.396793611, 0.406823556, 0.416852889, 0.426882028, 0.436912069, 0.446942653, 0.456972556, 0.467004472, 0.477033125, 0.487064222, 0.497095056, 0.507124861, 0.517154, 0.527185778, 0.537214042, 0.547244042, 0.55727375, 0.567302764, 0.577332528, 0.587362125, 0.597394125, 0.6074225, 0.617449861, 0.627479306, 0.637511653, 0.647538694, 0.657567972, 0.667597333, 0.677626819, 0.687656, 0.697688889, 0.707717417, 0.717744181, 0.727772917, 0.737803347, 0.747834958, 0.757863444, 0.767892736, 0.777922417, 0.787952208, 0.797982375, 0.808012778, 0.818042181, 0.828071847, 0.838100736, 0.848129556, 0.858159444, 0.86819075, 0.878217847, 0.888246778, 0.898277486, 0.908305556, 0.918334389, 0.928363444, 0.938393222, 0.948422361, 0.958450764, 0.968482111, 0.978512125, 0.988537583, 0.998565236, 1.008593083, 1.018621014, 1.028648653, 1.038678903, 1.04870775] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:58:03.328" endtime="20201112 09:58:03.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:03.315" endtime="20201112 09:58:03.332"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:58:03.339" endtime="20201112 09:58:03.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:58:03.347" endtime="20201112 09:58:03.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:03.343" endtime="20201112 09:58:03.370"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:03.334" endtime="20201112 09:58:03.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:00.580" endtime="20201112 09:58:03.373"></status>
</kw>
<msg timestamp="20201112 09:58:03.373" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:58:03.394" endtime="20201112 09:58:05.523"></status>
</kw>
<msg timestamp="20201112 09:58:05.525" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 78867433, 'wakeups': [78877820, 78887815, 78897817, 78907817, 789178...</msg>
<status status="PASS" starttime="20201112 09:58:03.391" endtime="20201112 09:58:05.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:58:05.532" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 78867433, 'wakeups': [78877820, 78887815, 78897817, 78907817, 789178...</msg>
<status status="PASS" starttime="20201112 09:58:05.527" endtime="20201112 09:58:05.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:58:05.535" endtime="20201112 09:58:05.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:03.383" endtime="20201112 09:58:05.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:03.378" endtime="20201112 09:58:05.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:58:05.548" level="INFO">${RESULT} = {'wakeups': [78877820, 78887815, 78897817, 78907817, 78917817, 78927815, 78937815, 78947815, 78957815, 78967815, 78977815, 78987815, 78997815, 79007815, 79017815, 79027815, 79037815, 79047815, 7905781...</msg>
<status status="PASS" starttime="20201112 09:58:05.543" endtime="20201112 09:58:05.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:58:05.558" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:58:05.555" endtime="20201112 09:58:05.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:58:05.562" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:58:05.560" endtime="20201112 09:58:05.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:05.549" endtime="20201112 09:58:05.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:58:05.575" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:58:05.572" endtime="20201112 09:58:05.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:58:05.579" level="INFO">VALUE: 78867433</msg>
<status status="PASS" starttime="20201112 09:58:05.577" endtime="20201112 09:58:05.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:05.566" endtime="20201112 09:58:05.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:58:05.591" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:58:05.589" endtime="20201112 09:58:05.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:58:05.596" level="INFO">VALUE: [78877820, 78887815, 78897817, 78907817, 78917817, 78927815, 78937815, 78947815, 78957815, 78967815, 78977815, 78987815, 78997815, 79007815, 79017815, 79027815, 79037815, 79047815, 79057815, 79067815, 79077818, 79087817, 79097815, 79107817, 79117817, 79127815, 79137815, 79147815, 79157815, 79167817, 79177815, 79187817, 79197815, 79207817, 79217815, 79227817, 79237815, 79247815, 79257815, 79267817, 79277815, 79287815, 79297815, 79307815, 79317815, 79327815, 79337815, 79347815, 79357817, 79367815, 79377815, 79387815, 79397815, 79407817, 79417818, 79427815, 79437815, 79447815, 79457815, 79467815, 79477817, 79487815, 79497815, 79507815, 79517815, 79527815, 79537815, 79547819, 79557815, 79567815, 79577817, 79587815, 79597815, 79607815, 79617817, 79627815, 79637815, 79647815, 79657815, 79667815, 79677815, 79687815, 79697817, 79707815, 79717817, 79727815, 79737815, 79747817, 79757815, 79767815, 79777815, 79787817, 79797815, 79807815, 79817815, 79827815, 79837815, 79847817, 79857815, 79867817]</msg>
<status status="PASS" starttime="20201112 09:58:05.594" endtime="20201112 09:58:05.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:05.583" endtime="20201112 09:58:05.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:58:05.615" endtime="20201112 09:58:05.962"></status>
</kw>
<msg timestamp="20201112 09:58:05.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037765417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048183944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:58:05.612" endtime="20201112 09:58:05.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:58:05.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037765417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048183944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:58:05.970" endtime="20201112 09:58:05.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:58:05.987" endtime="20201112 09:58:05.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:05.605" endtime="20201112 09:58:05.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:05.600" endtime="20201112 09:58:05.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:58:06.050" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:58:05.997" endtime="20201112 09:58:06.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:58:06.062" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:58:06.059" endtime="20201112 09:58:06.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:58:06.066" level="INFO">VALUE: 0.037765417</msg>
<status status="PASS" starttime="20201112 09:58:06.064" endtime="20201112 09:58:06.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:06.053" endtime="20201112 09:58:06.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:58:06.080" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:58:06.077" endtime="20201112 09:58:06.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:58:06.084" level="INFO">VALUE: [0.048183944, 0.05820875, 0.068239694, 0.078269333, 0.088299486, 0.098326833, 0.108355056, 0.118383819, 0.128412736, 0.138441431, 0.148470458, 0.158499722, 0.168529514, 0.178559389, 0.188591306, 0.198622083, 0.208655639, 0.218685792, 0.228714944, 0.238744306, 0.248777542, 0.258807583, 0.268835347, 0.278867764, 0.288898806, 0.298926778, 0.308956903, 0.318985792, 0.329014694, 0.339046431, 0.349074347, 0.359105681, 0.369132569, 0.379162944, 0.38918925, 0.399219736, 0.409247514, 0.419277056, 0.429306347, 0.439337694, 0.449364764, 0.459392986, 0.469422417, 0.479451972, 0.489481556, 0.499511278, 0.509540375, 0.519569556, 0.52960225, 0.539630639, 0.549660764, 0.559690653, 0.569720361, 0.579752222, 0.589782139, 0.599808806, 0.609839569, 0.619870042, 0.629900278, 0.639929972, 0.649961361, 0.659988847, 0.670018667, 0.680047833, 0.690077611, 0.700108431, 0.710140417, 0.720173958, 0.730199125, 0.740227194, 0.750258778, 0.760286528, 0.770316958, 0.780347264, 0.790379681, 0.800407, 0.810435861, 0.820465222, 0.830494625, 0.840524625, 0.850556125, 0.860586653, 0.870620153, 0.880649639, 0.890683611, 0.900712917, 0.910744597, 0.920775861, 0.930804306, 0.940833514, 0.950863583, 0.960893528, 0.970920417, 0.980949778, 0.990979597, 1.001008722, 1.011038319, 1.02107025, 1.031097889, 1.041129306] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:58:06.082" endtime="20201112 09:58:06.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:06.070" endtime="20201112 09:58:06.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:58:06.093" endtime="20201112 09:58:06.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:58:06.101" endtime="20201112 09:58:06.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:06.097" endtime="20201112 09:58:06.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:06.088" endtime="20201112 09:58:06.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:03.374" endtime="20201112 09:58:06.127"></status>
</kw>
<msg timestamp="20201112 09:58:06.128" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:58:06.148" endtime="20201112 09:58:08.276"></status>
</kw>
<msg timestamp="20201112 09:58:08.278" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 81614087, 'wakeups': [81624474, 81634469, 81644469, 81654469, 816644...</msg>
<status status="PASS" starttime="20201112 09:58:06.145" endtime="20201112 09:58:08.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:58:08.284" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 81614087, 'wakeups': [81624474, 81634469, 81644469, 81654469, 816644...</msg>
<status status="PASS" starttime="20201112 09:58:08.280" endtime="20201112 09:58:08.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:58:08.287" endtime="20201112 09:58:08.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:06.138" endtime="20201112 09:58:08.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:06.133" endtime="20201112 09:58:08.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:58:08.301" level="INFO">${RESULT} = {'wakeups': [81624474, 81634469, 81644469, 81654469, 81664469, 81674469, 81684469, 81694469, 81704469, 81714469, 81724469, 81734471, 81744469, 81754471, 81764470, 81774471, 81784469, 81794471, 8180446...</msg>
<status status="PASS" starttime="20201112 09:58:08.297" endtime="20201112 09:58:08.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:58:08.311" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:58:08.309" endtime="20201112 09:58:08.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:58:08.315" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:58:08.313" endtime="20201112 09:58:08.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:08.303" endtime="20201112 09:58:08.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:58:08.333" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:58:08.331" endtime="20201112 09:58:08.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:58:08.338" level="INFO">VALUE: 81614087</msg>
<status status="PASS" starttime="20201112 09:58:08.336" endtime="20201112 09:58:08.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:08.325" endtime="20201112 09:58:08.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:58:08.350" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:58:08.348" endtime="20201112 09:58:08.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:58:08.355" level="INFO">VALUE: [81624474, 81634469, 81644469, 81654469, 81664469, 81674469, 81684469, 81694469, 81704469, 81714469, 81724469, 81734471, 81744469, 81754471, 81764470, 81774471, 81784469, 81794471, 81804469, 81814469, 81824469, 81834469, 81844469, 81854469, 81864469, 81874471, 81884469, 81894469, 81904471, 81914471, 81924471, 81934471, 81944469, 81954471, 81964469, 81974469, 81984469, 81994471, 82004469, 82014469, 82024469, 82034469, 82044469, 82054469, 82064469, 82074469, 82084469, 82094471, 82104469, 82114471, 82124469, 82134469, 82144469, 82154469, 82164471, 82174471, 82184469, 82194469, 82204469, 82214469, 82224469, 82234469, 82244469, 82254469, 82264469, 82274469, 82284471, 82294469, 82304469, 82314469, 82324469, 82334469, 82344471, 82354469, 82364469, 82374469, 82384469, 82394471, 82404469, 82414471, 82424469, 82434471, 82444469, 82454471, 82464471, 82474469, 82484469, 82494469, 82504469, 82514469, 82524469, 82534469, 82544469, 82554469, 82564469, 82574469, 82584469, 82594469, 82604469, 82614471]</msg>
<status status="PASS" starttime="20201112 09:58:08.352" endtime="20201112 09:58:08.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:08.341" endtime="20201112 09:58:08.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:58:08.373" endtime="20201112 09:58:08.724"></status>
</kw>
<msg timestamp="20201112 09:58:08.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038120611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048540333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:58:08.370" endtime="20201112 09:58:08.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:58:08.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038120611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048540333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:58:08.732" endtime="20201112 09:58:08.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:58:08.749" endtime="20201112 09:58:08.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:08.363" endtime="20201112 09:58:08.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:08.358" endtime="20201112 09:58:08.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:58:08.813" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 09:58:08.758" endtime="20201112 09:58:08.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:58:08.824" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:58:08.821" endtime="20201112 09:58:08.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:58:08.829" level="INFO">VALUE: 0.038120611</msg>
<status status="PASS" starttime="20201112 09:58:08.826" endtime="20201112 09:58:08.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:08.814" endtime="20201112 09:58:08.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:58:08.843" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:58:08.841" endtime="20201112 09:58:08.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:58:08.848" level="INFO">VALUE: [0.048540333, 0.058565042, 0.068594792, 0.078624556, 0.088655056, 0.098684583, 0.108715403, 0.1187455, 0.128776569, 0.138806833, 0.148837986, 0.158869958, 0.168897889, 0.178930722, 0.188959819, 0.198989514, 0.209015625, 0.219045708, 0.229073472, 0.239103083, 0.24913525, 0.259164986, 0.269195264, 0.279225597, 0.289255528, 0.299287708, 0.309316653, 0.319346472, 0.329378958, 0.339409875, 0.349440083, 0.359469194, 0.369496819, 0.379529319, 0.389559764, 0.399592417, 0.409625264, 0.419659125, 0.429687597, 0.439717125, 0.449747292, 0.459777069, 0.469808028, 0.479838972, 0.489869847, 0.499900792, 0.509932819, 0.519965792, 0.529994931, 0.540027389, 0.550056806, 0.560086514, 0.57011625, 0.580146292, 0.590178611, 0.600209167, 0.610237917, 0.620268181, 0.630298667, 0.640328861, 0.650360306, 0.660390875, 0.670422, 0.680452472, 0.690483514, 0.700513542, 0.710544222, 0.720571389, 0.730601889, 0.740631931, 0.750661194, 0.760690097, 0.770721472, 0.780749528, 0.790780292, 0.800810194, 0.810840222, 0.820872444, 0.830900639, 0.840933417, 0.850962042, 0.860993986, 0.871021694, 0.881053361, 0.891083458, 0.90111075, 0.911140819, 0.921170889, 0.931201194, 0.941230431, 0.951259958, 0.961288569, 0.971318194, 0.981347125, 0.991377778, 1.001407569, 1.011436736, 1.021467111, 1.031498056, 1.041530556] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:58:08.845" endtime="20201112 09:58:08.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:08.833" endtime="20201112 09:58:08.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:58:08.857" endtime="20201112 09:58:08.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:58:08.865" endtime="20201112 09:58:08.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:08.861" endtime="20201112 09:58:08.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:08.853" endtime="20201112 09:58:08.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:06.129" endtime="20201112 09:58:08.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:00.576" endtime="20201112 09:58:08.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:58:00.574" endtime="20201112 09:58:08.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.941" endtime="20201112 09:58:08.892"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 09:56:44.808" endtime="20201112 09:58:08.894" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:56:42.292" endtime="20201112 09:58:08.904"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.10-devel-1583-gbfb8f-HEAD</item>
</metadata>
<status status="PASS" starttime="20201112 09:54:12.203" endtime="20201112 09:58:08.947"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_samr21-xpro</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
