<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201112 09:53:26.438" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:53:26.997" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:53:27.005" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:53:28.111" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:53:26.996" endtime="20201112 09:53:28.112"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:53:28.114" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:53:28.113" endtime="20201112 09:53:28.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.994" endtime="20201112 09:53:28.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:28.117" endtime="20201112 09:53:28.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.116" endtime="20201112 09:53:28.300"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:28.314" endtime="20201112 09:53:28.330"></status>
</kw>
<msg timestamp="20201112 09:53:28.330" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:28.312" endtime="20201112 09:53:28.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:28.333" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:28.331" endtime="20201112 09:53:28.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:28.336" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:28.334" endtime="20201112 09:53:28.337"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:28.310" endtime="20201112 09:53:28.338"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:28.307" endtime="20201112 09:53:28.338"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.306" endtime="20201112 09:53:28.339"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:28.342" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:28.342" endtime="20201112 09:53:28.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.340" endtime="20201112 09:53:28.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.305" endtime="20201112 09:53:28.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.304" endtime="20201112 09:53:28.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:28.344" endtime="20201112 09:53:28.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.303" endtime="20201112 09:53:28.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:28.347" endtime="20201112 09:53:28.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.301" endtime="20201112 09:53:28.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.992" endtime="20201112 09:53:28.349"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:28.355" endtime="20201112 09:53:28.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.354" endtime="20201112 09:53:28.376"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:28.390" endtime="20201112 09:53:28.406"></status>
</kw>
<msg timestamp="20201112 09:53:28.407" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:28.388" endtime="20201112 09:53:28.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:28.409" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:28.408" endtime="20201112 09:53:28.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:28.412" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:28.410" endtime="20201112 09:53:28.412"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:28.386" endtime="20201112 09:53:28.413"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:28.383" endtime="20201112 09:53:28.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.382" endtime="20201112 09:53:28.414"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:28.418" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:28.417" endtime="20201112 09:53:28.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.415" endtime="20201112 09:53:28.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.381" endtime="20201112 09:53:28.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.380" endtime="20201112 09:53:28.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:28.419" endtime="20201112 09:53:28.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.378" endtime="20201112 09:53:28.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.376" endtime="20201112 09:53:28.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.353" endtime="20201112 09:53:28.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:28.429" endtime="20201112 09:53:28.439"></status>
</kw>
<msg timestamp="20201112 09:53:28.440" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:28.428" endtime="20201112 09:53:28.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:28.442" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:28.441" endtime="20201112 09:53:28.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:28.443" endtime="20201112 09:53:28.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.425" endtime="20201112 09:53:28.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.423" endtime="20201112 09:53:28.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:28.450" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 09:53:28.449" endtime="20201112 09:53:28.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:28.452" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 09:53:28.451" endtime="20201112 09:53:28.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.446" endtime="20201112 09:53:28.453"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:28.350" endtime="20201112 09:53:28.454" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:53:26.548" endtime="20201112 09:53:28.457"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:53:28.509" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:53:28.517" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:53:29.733" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:53:28.508" endtime="20201112 09:53:29.734"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:53:29.737" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:53:29.735" endtime="20201112 09:53:29.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.507" endtime="20201112 09:53:29.738"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:29.740" endtime="20201112 09:53:29.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.739" endtime="20201112 09:53:29.960"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:29.972" endtime="20201112 09:53:29.989"></status>
</kw>
<msg timestamp="20201112 09:53:29.989" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:29.971" endtime="20201112 09:53:29.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:29.992" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:29.990" endtime="20201112 09:53:29.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:29.995" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:29.993" endtime="20201112 09:53:29.995"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:29.968" endtime="20201112 09:53:29.996"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:29.966" endtime="20201112 09:53:29.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.965" endtime="20201112 09:53:29.997"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:30.000" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:30.000" endtime="20201112 09:53:30.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.997" endtime="20201112 09:53:30.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.964" endtime="20201112 09:53:30.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.963" endtime="20201112 09:53:30.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.002" endtime="20201112 09:53:30.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.962" endtime="20201112 09:53:30.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.005" endtime="20201112 09:53:30.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.961" endtime="20201112 09:53:30.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.505" endtime="20201112 09:53:30.007"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:30.013" endtime="20201112 09:53:30.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.011" endtime="20201112 09:53:30.033"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.046" endtime="20201112 09:53:30.062"></status>
</kw>
<msg timestamp="20201112 09:53:30.063" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:30.044" endtime="20201112 09:53:30.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.065" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:30.064" endtime="20201112 09:53:30.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.068" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:30.066" endtime="20201112 09:53:30.069"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:30.042" endtime="20201112 09:53:30.069"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:30.039" endtime="20201112 09:53:30.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.038" endtime="20201112 09:53:30.070"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:30.074" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:30.073" endtime="20201112 09:53:30.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.071" endtime="20201112 09:53:30.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.037" endtime="20201112 09:53:30.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.037" endtime="20201112 09:53:30.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.076" endtime="20201112 09:53:30.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.035" endtime="20201112 09:53:30.078"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.034" endtime="20201112 09:53:30.078"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.010" endtime="20201112 09:53:30.078"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 09:53:30.081" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.088" endtime="20201112 09:53:30.098"></status>
</kw>
<msg timestamp="20201112 09:53:30.098" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:30.087" endtime="20201112 09:53:30.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.101" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:30.099" endtime="20201112 09:53:30.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.102" endtime="20201112 09:53:30.103"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.084" endtime="20201112 09:53:30.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.082" endtime="20201112 09:53:30.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.111" endtime="20201112 09:53:30.385"></status>
</kw>
<msg timestamp="20201112 09:53:30.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065221306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065223208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:30.110" endtime="20201112 09:53:30.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065221306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065223208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:30.387" endtime="20201112 09:53:30.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.393" endtime="20201112 09:53:30.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.107" endtime="20201112 09:53:30.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.105" endtime="20201112 09:53:30.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.399" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:30.398" endtime="20201112 09:53:30.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.403" level="INFO">VALUE: [{'time': 0.065221306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065223208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.901999999998072e-06, 'source_diff': 1.901999999998072e-06}, {'time': 0.065224917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7089999999886363e-06, 'source_diff': 1.7089999999886363e-06}, {'time': 0.065226611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6940000000104094e-06, 'source_diff': 1.6940000000104094e-06}, {'time': 0.065228222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.065229806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.065231778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.065233653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.065235111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4579999999958515e-06, 'source_diff': 1.4579999999958515e-06}, {'time': 0.065237139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.065238944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8049999999936173e-06, 'source_diff': 1.8049999999936173e-06}, {'time': 0.065240792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8480000000126173e-06, 'source_diff': 1.8480000000126173e-06}, {'time': 0.065242764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9719999999889826e-06, 'source_diff': 1.9719999999889826e-06}, {'time': 0.065244333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.569000000006815e-06, 'source_diff': 1.569000000006815e-06}, {'time': 0.065246014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6810000000033742e-06, 'source_diff': 1.6810000000033742e-06}, {'time': 0.065248056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.041999999993771e-06, 'source_diff': 2.041999999993771e-06}, {'time': 0.065249944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8880000000054409e-06, 'source_diff': 1.8880000000054409e-06}, {'time': 0.065251444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.065253028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.065255, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9719999999889826e-06, 'source_diff': 1.9719999999889826e-06}, {'time': 0.065256722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7220000000095492e-06, 'source_diff': 1.7220000000095492e-06}, {'time': 0.065258528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.805999999993091e-06, 'source_diff': 1.805999999993091e-06}, {'time': 0.065259986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4580000000097293e-06, 'source_diff': 1.4580000000097293e-06}, {'time': 0.065261833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.065263639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.805999999993091e-06, 'source_diff': 1.805999999993091e-06}, {'time': 0.065265153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.514000000008009e-06, 'source_diff': 1.514000000008009e-06}, {'time': 0.065266611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4579999999958515e-06, 'source_diff': 1.4579999999958515e-06}, {'time': 0.065268306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999960053e-06, 'source_diff': 1.6949999999960053e-06}, {'time': 0.065270056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.750000000008689e-06, 'source_diff': 1.750000000008689e-06}, {'time': 0.065272069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0129999999951576e-06, 'source_diff': 2.0129999999951576e-06}, {'time': 0.065273944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.065275458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5139999999941312e-06, 'source_diff': 1.5139999999941312e-06}, {'time': 0.065277444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.986000000009369e-06, 'source_diff': 1.986000000009369e-06}, {'time': 0.065278903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4589999999953251e-06, 'source_diff': 1.4589999999953251e-06}, {'time': 0.065280861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9579999999963515e-06, 'source_diff': 1.9579999999963515e-06}, {'time': 0.065282764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.065284764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.065286403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6390000000116034e-06, 'source_diff': 1.6390000000116034e-06}, {'time': 0.065288347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9439999999898427e-06, 'source_diff': 1.9439999999898427e-06}, {'time': 0.065289889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000071488e-06, 'source_diff': 1.5420000000071488e-06}, {'time': 0.065291792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.065293486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6939999999965316e-06, 'source_diff': 1.6939999999965316e-06}, {'time': 0.065295097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.065296917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.065298931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.014000000008509e-06, 'source_diff': 2.014000000008509e-06}, {'time': 0.065300944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0129999999951576e-06, 'source_diff': 2.0129999999951576e-06}, {'time': 0.065302667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.722999999995145e-06, 'source_diff': 1.722999999995145e-06}, {'time': 0.065304333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6660000000112696e-06, 'source_diff': 1.6660000000112696e-06}, {'time': 0.065306056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.722999999995145e-06, 'source_diff': 1.722999999995145e-06}, {'time': 0.065307778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999956714e-06, 'source_diff': 1.7219999999956714e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:30.401" endtime="20201112 09:53:30.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.396" endtime="20201112 09:53:30.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:30.418" level="INFO">${debug-compressed} = {'time': [0.065221306, 0.065223208, 0.065224917, 0.065226611, 0.065228222, 0.065229806, 0.065231778, 0.065233653, 0.065235111, 0.065237139, 0.065238944, 0.065240792, 0.065242764, 0.065244333, 0.065246...</msg>
<status status="PASS" starttime="20201112 09:53:30.405" endtime="20201112 09:53:30.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.422" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:30.421" endtime="20201112 09:53:30.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.426" level="INFO">VALUE: {'time': [0.065221306, 0.065223208, 0.065224917, 0.065226611, 0.065228222, 0.065229806, 0.065231778, 0.065233653, 0.065235111, 0.065237139, 0.065238944, 0.065240792, 0.065242764, 0.065244333, 0.065246014, 0.065248056, 0.065249944, 0.065251444, 0.065253028, 0.065255, 0.065256722, 0.065258528, 0.065259986, 0.065261833, 0.065263639, 0.065265153, 0.065266611, 0.065268306, 0.065270056, 0.065272069, 0.065273944, 0.065275458, 0.065277444, 0.065278903, 0.065280861, 0.065282764, 0.065284764, 0.065286403, 0.065288347, 0.065289889, 0.065291792, 0.065293486, 0.065295097, 0.065296917, 0.065298931, 0.065300944, 0.065302667, 0.065304333, 0.065306056, 0.065307778], 'eventsource_diff': [0, 1.901999999998072e-06, 1.7089999999886363e-06, 1.6940000000104094e-06, 1.6109999999985858e-06, 1.5839999999989196e-06, 1.9720000000028604e-06, 1.8749999999984057e-06, 1.4579999999958515e-06, 2.02800000000114e-06, 1.8049999999936173e-06, 1.8480000000126173e-06, 1.9719999999889826e-06, 1.569000000006815e-06, 1.6810000000033742e-06, 2.041999999993771e-06, 1.8880000000054409e-06, 1.5000000000015001e-06, 1.5839999999989196e-06, 1.9719999999889826e-06, 1.7220000000095492e-06, 1.805999999993091e-06, 1.4580000000097293e-06, 1.846999999999266e-06, 1.805999999993091e-06, 1.514000000008009e-06, 1.4579999999958515e-06, 1.6949999999960053e-06, 1.750000000008689e-06, 2.0129999999951576e-06, 1.8749999999984057e-06, 1.5139999999941312e-06, 1.986000000009369e-06, 1.4589999999953251e-06, 1.9579999999963515e-06, 1.9029999999975455e-06, 2.000000000002e-06, 1.6390000000116034e-06, 1.9439999999898427e-06, 1.5420000000071488e-06, 1.9029999999975455e-06, 1.6939999999965316e-06, 1.6109999999985858e-06, 1.8199999999995997e-06, 2.014000000008509e-06, 2.0129999999951576e-06, 1.722999999995145e-06, 1.6660000000112696e-06, 1.722999999995145e-06, 1.7219999999956714e-06], 'sourcediff': [0, 1.901999999998072e-06, 1.7089999999886363e-06, 1.6940000000104094e-06, 1.6109999999985858e-06, 1.5839999999989196e-06, 1.9720000000028604e-06, 1.8749999999984057e-06, 1.4579999999958515e-06, 2.02800000000114e-06, 1.8049999999936173e-06, 1.8480000000126173e-06, 1.9719999999889826e-06, 1.569000000006815e-06, 1.6810000000033742e-06, 2.041999999993771e-06, 1.8880000000054409e-06, 1.5000000000015001e-06, 1.5839999999989196e-06, 1.9719999999889826e-06, 1.7220000000095492e-06, 1.805999999993091e-06, 1.4580000000097293e-06, 1.846999999999266e-06, 1.805999999993091e-06, 1.514000000008009e-06, 1.4579999999958515e-06, 1.6949999999960053e-06, 1.750000000008689e-06, 2.0129999999951576e-06, 1.8749999999984057e-06, 1.5139999999941312e-06, 1.986000000009369e-06, 1.4589999999953251e-06, 1.9579999999963515e-06, 1.9029999999975455e-06, 2.000000000002e-06, 1.6390000000116034e-06, 1.9439999999898427e-06, 1.5420000000071488e-06, 1.9029999999975455e-06, 1.6939999999965316e-06, 1.6109999999985858e-06, 1.8199999999995997e-06, 2.014000000008509e-06, 2.0129999999951576e-06, 1.722999999995145e-06, 1.6660000000112696e-06, 1.722999999995145e-06, 1.7219999999956714e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:30.424" endtime="20201112 09:53:30.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.419" endtime="20201112 09:53:30.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:30.430" level="INFO">${RESULT} = [{'time': 0.065223208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.901999999998072e-06, 'source_diff': 1.901999999998072e-06}, {'time': 0.065226611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:30.428" endtime="20201112 09:53:30.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:30.438" level="INFO">${GPIO_OVERHEAD} = {'time': [0.065223208, 0.065226611, 0.065229806, 0.065233653, 0.065237139, 0.065240792, 0.065244333, 0.065248056, 0.065251444, 0.065255, 0.065258528, 0.065261833, 0.065265153, 0.065268306, 0.065272069...</msg>
<status status="PASS" starttime="20201112 09:53:30.431" endtime="20201112 09:53:30.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.442" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:30.441" endtime="20201112 09:53:30.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.444" level="INFO">VALUE: [1.901999999998072e-06, 1.6940000000104094e-06, 1.5839999999989196e-06, 1.8749999999984057e-06, 2.02800000000114e-06, 1.8480000000126173e-06, 1.569000000006815e-06, 2.041999999993771e-06, 1.5000000000015001e-06, 1.9719999999889826e-06, 1.805999999993091e-06, 1.846999999999266e-06, 1.514000000008009e-06, 1.6949999999960053e-06, 2.0129999999951576e-06, 1.5139999999941312e-06, 1.4589999999953251e-06, 1.9029999999975455e-06, 1.6390000000116034e-06, 1.5420000000071488e-06, 1.6939999999965316e-06, 1.8199999999995997e-06, 2.0129999999951576e-06, 1.6660000000112696e-06, 1.7219999999956714e-06]</msg>
<status status="PASS" starttime="20201112 09:53:30.443" endtime="20201112 09:53:30.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.439" endtime="20201112 09:53:30.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.447" endtime="20201112 09:53:30.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:30.451" endtime="20201112 09:53:30.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.449" endtime="20201112 09:53:30.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.446" endtime="20201112 09:53:30.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.081" endtime="20201112 09:53:30.471"></status>
</kw>
<msg timestamp="20201112 09:53:30.472" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.480" endtime="20201112 09:53:30.489"></status>
</kw>
<msg timestamp="20201112 09:53:30.490" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:30.478" endtime="20201112 09:53:30.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.492" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:30.491" endtime="20201112 09:53:30.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.493" endtime="20201112 09:53:30.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.476" endtime="20201112 09:53:30.496"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.474" endtime="20201112 09:53:30.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.502" endtime="20201112 09:53:30.772"></status>
</kw>
<msg timestamp="20201112 09:53:30.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018658333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018660208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:30.501" endtime="20201112 09:53:30.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018658333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018660208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:30.775" endtime="20201112 09:53:30.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.780" endtime="20201112 09:53:30.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.498" endtime="20201112 09:53:30.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.497" endtime="20201112 09:53:30.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.787" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:30.786" endtime="20201112 09:53:30.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.790" level="INFO">VALUE: [{'time': 0.018658333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018660208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018662153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018663625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018665542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018667139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018668611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.018670264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.018671778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018673417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018675417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018676972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018678764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018680625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018682597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018684528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018686069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}, {'time': 0.018687944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018689611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6669999999968654e-06, 'source_diff': 1.6669999999968654e-06}, {'time': 0.018691181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5700000000028191e-06, 'source_diff': 1.5700000000028191e-06}, {'time': 0.018692958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7769999999979469e-06, 'source_diff': 1.7769999999979469e-06}, {'time': 0.018694861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018696361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018698306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018699778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018701833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.055000000000806e-06, 'source_diff': 2.055000000000806e-06}, {'time': 0.018703694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018705194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018706681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4869999999979344e-06, 'source_diff': 1.4869999999979344e-06}, {'time': 0.018708708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0270000000016664e-06, 'source_diff': 2.0270000000016664e-06}, {'time': 0.018710194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018711806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6120000000015289e-06, 'source_diff': 1.6120000000015289e-06}, {'time': 0.018713736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018715514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.018716958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018719167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2089999999995447e-06, 'source_diff': 2.2089999999995447e-06}, {'time': 0.018720694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5270000000011663e-06, 'source_diff': 1.5270000000011663e-06}, {'time': 0.018722542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8479999999987395e-06, 'source_diff': 1.8479999999987395e-06}, {'time': 0.018724569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0270000000016664e-06, 'source_diff': 2.0270000000016664e-06}, {'time': 0.018726556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9869999999984345e-06, 'source_diff': 1.9869999999984345e-06}, {'time': 0.018728389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8330000000031654e-06, 'source_diff': 1.8330000000031654e-06}, {'time': 0.018730069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6799999999969617e-06, 'source_diff': 1.6799999999969617e-06}, {'time': 0.018731569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018733417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8479999999987395e-06, 'source_diff': 1.8479999999987395e-06}, {'time': 0.018735236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018737125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018738625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018740625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018742125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018744111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:30.788" endtime="20201112 09:53:30.791"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.784" endtime="20201112 09:53:30.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:30.805" level="INFO">${debug-compressed} = {'time': [0.018658333, 0.018660208, 0.018662153, 0.018663625, 0.018665542, 0.018667139, 0.018668611, 0.018670264, 0.018671778, 0.018673417, 0.018675417, 0.018676972, 0.018678764, 0.018680625, 0.018682...</msg>
<status status="PASS" starttime="20201112 09:53:30.793" endtime="20201112 09:53:30.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.809" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:30.808" endtime="20201112 09:53:30.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.812" level="INFO">VALUE: {'time': [0.018658333, 0.018660208, 0.018662153, 0.018663625, 0.018665542, 0.018667139, 0.018668611, 0.018670264, 0.018671778, 0.018673417, 0.018675417, 0.018676972, 0.018678764, 0.018680625, 0.018682597, 0.018684528, 0.018686069, 0.018687944, 0.018689611, 0.018691181, 0.018692958, 0.018694861, 0.018696361, 0.018698306, 0.018699778, 0.018701833, 0.018703694, 0.018705194, 0.018706681, 0.018708708, 0.018710194, 0.018711806, 0.018713736, 0.018715514, 0.018716958, 0.018719167, 0.018720694, 0.018722542, 0.018724569, 0.018726556, 0.018728389, 0.018730069, 0.018731569, 0.018733417, 0.018735236, 0.018737125, 0.018738625, 0.018740625, 0.018742125, 0.018744111], 'eventsource_diff': [0, 1.8750000000018752e-06, 1.9449999999997247e-06, 1.4719999999988909e-06, 1.917000000000585e-06, 1.5969999999990159e-06, 1.4720000000023603e-06, 1.6529999999972955e-06, 1.51400000000107e-06, 1.639000000001195e-06, 1.9999999999985307e-06, 1.5550000000003061e-06, 1.7920000000004599e-06, 1.8609999999988358e-06, 1.971999999999391e-06, 1.931000000000155e-06, 1.5410000000007362e-06, 1.8750000000018752e-06, 1.6669999999968654e-06, 1.5700000000028191e-06, 1.7769999999979469e-06, 1.903000000001015e-06, 1.5000000000015001e-06, 1.9449999999997247e-06, 1.4719999999988909e-06, 2.055000000000806e-06, 1.8609999999988358e-06, 1.5000000000015001e-06, 1.4869999999979344e-06, 2.0270000000016664e-06, 1.4859999999984608e-06, 1.6120000000015289e-06, 1.930000000000681e-06, 1.7779999999974205e-06, 1.443999999999751e-06, 2.2089999999995447e-06, 1.5270000000011663e-06, 1.8479999999987395e-06, 2.0270000000016664e-06, 1.9869999999984345e-06, 1.8330000000031654e-06, 1.6799999999969617e-06, 1.5000000000015001e-06, 1.8479999999987395e-06, 1.819000000000126e-06, 1.889000000001445e-06, 1.4999999999980307e-06, 2.000000000002e-06, 1.4999999999980307e-06, 1.9860000000024303e-06], 'sourcediff': [0, 1.8750000000018752e-06, 1.9449999999997247e-06, 1.4719999999988909e-06, 1.917000000000585e-06, 1.5969999999990159e-06, 1.4720000000023603e-06, 1.6529999999972955e-06, 1.51400000000107e-06, 1.639000000001195e-06, 1.9999999999985307e-06, 1.5550000000003061e-06, 1.7920000000004599e-06, 1.8609999999988358e-06, 1.971999999999391e-06, 1.931000000000155e-06, 1.5410000000007362e-06, 1.8750000000018752e-06, 1.6669999999968654e-06, 1.5700000000028191e-06, 1.7769999999979469e-06, 1.903000000001015e-06, 1.5000000000015001e-06, 1.9449999999997247e-06, 1.4719999999988909e-06, 2.055000000000806e-06, 1.8609999999988358e-06, 1.5000000000015001e-06, 1.4869999999979344e-06, 2.0270000000016664e-06, 1.4859999999984608e-06, 1.6120000000015289e-06, 1.930000000000681e-06, 1.7779999999974205e-06, 1.443999999999751e-06, 2.2089999999995447e-06, 1.5270000000011663e-06, 1.8479999999987395e-06, 2.0270000000016664e-06, 1.9869999999984345e-06, 1.8330000000031654e-06, 1.6799999999969617e-06, 1.5000000000015001e-06, 1.8479999999987395e-06, 1.819000000000126e-06, 1.889000000001445e-06, 1.4999999999980307e-06, 2.000000000002e-06, 1.4999999999980307e-06, 1.9860000000024303e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:30.810" endtime="20201112 09:53:30.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.806" endtime="20201112 09:53:30.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:30.817" level="INFO">${RESULT} = [{'time': 0.018660208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018663625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:30.814" endtime="20201112 09:53:30.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:30.826" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018660208, 0.018663625, 0.018667139, 0.018670264, 0.018673417, 0.018676972, 0.018680625, 0.018684528, 0.018687944, 0.018691181, 0.018694861, 0.018698306, 0.018701833, 0.018705194, 0.018708...</msg>
<status status="PASS" starttime="20201112 09:53:30.817" endtime="20201112 09:53:30.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.831" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:30.830" endtime="20201112 09:53:30.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.833" level="INFO">VALUE: [1.8750000000018752e-06, 1.4719999999988909e-06, 1.5969999999990159e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.5550000000003061e-06, 1.8609999999988358e-06, 1.931000000000155e-06, 1.8750000000018752e-06, 1.5700000000028191e-06, 1.903000000001015e-06, 1.9449999999997247e-06, 2.055000000000806e-06, 1.5000000000015001e-06, 2.0270000000016664e-06, 1.6120000000015289e-06, 1.7779999999974205e-06, 2.2089999999995447e-06, 1.8479999999987395e-06, 1.9869999999984345e-06, 1.6799999999969617e-06, 1.8479999999987395e-06, 1.889000000001445e-06, 2.000000000002e-06, 1.9860000000024303e-06]</msg>
<status status="PASS" starttime="20201112 09:53:30.832" endtime="20201112 09:53:30.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.827" endtime="20201112 09:53:30.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.837" endtime="20201112 09:53:30.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:30.840" endtime="20201112 09:53:30.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.839" endtime="20201112 09:53:30.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.835" endtime="20201112 09:53:30.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.472" endtime="20201112 09:53:30.861"></status>
</kw>
<msg timestamp="20201112 09:53:30.861" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.869" endtime="20201112 09:53:30.879"></status>
</kw>
<msg timestamp="20201112 09:53:30.879" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:30.867" endtime="20201112 09:53:30.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.882" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:30.880" endtime="20201112 09:53:30.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.883" endtime="20201112 09:53:30.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.865" endtime="20201112 09:53:30.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.863" endtime="20201112 09:53:30.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.892" endtime="20201112 09:53:31.157"></status>
</kw>
<msg timestamp="20201112 09:53:31.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018163361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018165472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:30.891" endtime="20201112 09:53:31.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018163361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018165472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:31.160" endtime="20201112 09:53:31.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.165" endtime="20201112 09:53:31.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.887" endtime="20201112 09:53:31.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.886" endtime="20201112 09:53:31.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.172" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:31.171" endtime="20201112 09:53:31.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.175" level="INFO">VALUE: [{'time': 0.018163361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018165472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.110999999999086e-06, 'source_diff': 2.110999999999086e-06}, {'time': 0.018167167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6950000000029442e-06, 'source_diff': 1.6950000000029442e-06}, {'time': 0.018168889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018170694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018172597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.018174222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018176125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018177569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018179875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.30600000000053e-06, 'source_diff': 2.30600000000053e-06}, {'time': 0.018181444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018183139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018185125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018186833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018188417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.018190292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018191875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018193708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.01819525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018197083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018198958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018200792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.018202528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018204417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018206347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018208347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018210111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018212097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018213764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018215556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018217208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6519999999978219e-06, 'source_diff': 1.6519999999978219e-06}, {'time': 0.018219194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.018220986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018222472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018223903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.018225528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018227319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7909999999975168e-06, 'source_diff': 1.7909999999975168e-06}, {'time': 0.018229333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.01823125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018232958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.01823475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018236556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018238278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018240222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018241958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018243528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018245153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018246639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018248653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.018250361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:31.173" endtime="20201112 09:53:31.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.168" endtime="20201112 09:53:31.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:31.190" level="INFO">${debug-compressed} = {'time': [0.018163361, 0.018165472, 0.018167167, 0.018168889, 0.018170694, 0.018172597, 0.018174222, 0.018176125, 0.018177569, 0.018179875, 0.018181444, 0.018183139, 0.018185125, 0.018186833, 0.018188...</msg>
<status status="PASS" starttime="20201112 09:53:31.178" endtime="20201112 09:53:31.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.194" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:31.193" endtime="20201112 09:53:31.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.197" level="INFO">VALUE: {'time': [0.018163361, 0.018165472, 0.018167167, 0.018168889, 0.018170694, 0.018172597, 0.018174222, 0.018176125, 0.018177569, 0.018179875, 0.018181444, 0.018183139, 0.018185125, 0.018186833, 0.018188417, 0.018190292, 0.018191875, 0.018193708, 0.01819525, 0.018197083, 0.018198958, 0.018200792, 0.018202528, 0.018204417, 0.018206347, 0.018208347, 0.018210111, 0.018212097, 0.018213764, 0.018215556, 0.018217208, 0.018219194, 0.018220986, 0.018222472, 0.018223903, 0.018225528, 0.018227319, 0.018229333, 0.01823125, 0.018232958, 0.01823475, 0.018236556, 0.018238278, 0.018240222, 0.018241958, 0.018243528, 0.018245153, 0.018246639, 0.018248653, 0.018250361], 'eventsource_diff': [0, 2.110999999999086e-06, 1.6950000000029442e-06, 1.7219999999991409e-06, 1.8050000000005562e-06, 1.9029999999975455e-06, 1.6250000000016251e-06, 1.903000000001015e-06, 1.443999999999751e-06, 2.30600000000053e-06, 1.568999999999876e-06, 1.6949999999994747e-06, 1.985999999998961e-06, 1.707999999999571e-06, 1.5839999999989196e-06, 1.8750000000018752e-06, 1.582999999999446e-06, 1.832999999999696e-06, 1.5420000000002099e-06, 1.832999999999696e-06, 1.8750000000018752e-06, 1.8339999999991696e-06, 1.7359999999987108e-06, 1.889000000001445e-06, 1.930000000000681e-06, 1.9999999999985307e-06, 1.76400000000132e-06, 1.985999999998961e-06, 1.6670000000003349e-06, 1.7920000000004599e-06, 1.6519999999978219e-06, 1.9860000000024303e-06, 1.7920000000004599e-06, 1.4859999999984608e-06, 1.4309999999996548e-06, 1.6250000000016251e-06, 1.7909999999975168e-06, 2.01400000000157e-06, 1.917000000000585e-06, 1.707999999999571e-06, 1.7920000000004599e-06, 1.8060000000000298e-06, 1.7219999999991409e-06, 1.944000000000251e-06, 1.7359999999987108e-06, 1.5699999999993497e-06, 1.6250000000016251e-06, 1.4859999999984608e-06, 2.01400000000157e-06, 1.707999999999571e-06], 'sourcediff': [0, 2.110999999999086e-06, 1.6950000000029442e-06, 1.7219999999991409e-06, 1.8050000000005562e-06, 1.9029999999975455e-06, 1.6250000000016251e-06, 1.903000000001015e-06, 1.443999999999751e-06, 2.30600000000053e-06, 1.568999999999876e-06, 1.6949999999994747e-06, 1.985999999998961e-06, 1.707999999999571e-06, 1.5839999999989196e-06, 1.8750000000018752e-06, 1.582999999999446e-06, 1.832999999999696e-06, 1.5420000000002099e-06, 1.832999999999696e-06, 1.8750000000018752e-06, 1.8339999999991696e-06, 1.7359999999987108e-06, 1.889000000001445e-06, 1.930000000000681e-06, 1.9999999999985307e-06, 1.76400000000132e-06, 1.985999999998961e-06, 1.6670000000003349e-06, 1.7920000000004599e-06, 1.6519999999978219e-06, 1.9860000000024303e-06, 1.7920000000004599e-06, 1.4859999999984608e-06, 1.4309999999996548e-06, 1.6250000000016251e-06, 1.7909999999975168e-06, 2.01400000000157e-06, 1.917000000000585e-06, 1.707999999999571e-06, 1.7920000000004599e-06, 1.8060000000000298e-06, 1.7219999999991409e-06, 1.944000000000251e-06, 1.7359999999987108e-06, 1.5699999999993497e-06, 1.6250000000016251e-06, 1.4859999999984608e-06, 2.01400000000157e-06, 1.707999999999571e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:31.195" endtime="20201112 09:53:31.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.191" endtime="20201112 09:53:31.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:31.202" level="INFO">${RESULT} = [{'time': 0.018165472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.110999999999086e-06, 'source_diff': 2.110999999999086e-06}, {'time': 0.018168889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:31.199" endtime="20201112 09:53:31.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:31.210" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018165472, 0.018168889, 0.018172597, 0.018176125, 0.018179875, 0.018183139, 0.018186833, 0.018190292, 0.018193708, 0.018197083, 0.018200792, 0.018204417, 0.018208347, 0.018212097, 0.018215...</msg>
<status status="PASS" starttime="20201112 09:53:31.203" endtime="20201112 09:53:31.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.214" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:31.213" endtime="20201112 09:53:31.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.216" level="INFO">VALUE: [2.110999999999086e-06, 1.7219999999991409e-06, 1.9029999999975455e-06, 1.903000000001015e-06, 2.30600000000053e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.8750000000018752e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.8339999999991696e-06, 1.889000000001445e-06, 1.9999999999985307e-06, 1.985999999998961e-06, 1.7920000000004599e-06, 1.9860000000024303e-06, 1.4859999999984608e-06, 1.6250000000016251e-06, 2.01400000000157e-06, 1.707999999999571e-06, 1.8060000000000298e-06, 1.944000000000251e-06, 1.5699999999993497e-06, 1.4859999999984608e-06, 1.707999999999571e-06]</msg>
<status status="PASS" starttime="20201112 09:53:31.215" endtime="20201112 09:53:31.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.210" endtime="20201112 09:53:31.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.219" endtime="20201112 09:53:31.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:31.223" endtime="20201112 09:53:31.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.221" endtime="20201112 09:53:31.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.218" endtime="20201112 09:53:31.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.862" endtime="20201112 09:53:31.243"></status>
</kw>
<msg timestamp="20201112 09:53:31.244" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.251" endtime="20201112 09:53:31.261"></status>
</kw>
<msg timestamp="20201112 09:53:31.261" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:31.250" endtime="20201112 09:53:31.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.264" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:31.262" endtime="20201112 09:53:31.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.265" endtime="20201112 09:53:31.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.247" endtime="20201112 09:53:31.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.245" endtime="20201112 09:53:31.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.274" endtime="20201112 09:53:31.540"></status>
</kw>
<msg timestamp="20201112 09:53:31.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019047958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019049722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:31.272" endtime="20201112 09:53:31.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019047958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019049722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:31.543" endtime="20201112 09:53:31.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.548" endtime="20201112 09:53:31.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.270" endtime="20201112 09:53:31.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.268" endtime="20201112 09:53:31.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.554" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:31.553" endtime="20201112 09:53:31.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.558" level="INFO">VALUE: [{'time': 0.019047958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019049722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.019051306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.019053333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.026999999998197e-06, 'source_diff': 2.026999999998197e-06}, {'time': 0.019054917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.584000000002389e-06, 'source_diff': 1.584000000002389e-06}, {'time': 0.019056847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9299999999972117e-06, 'source_diff': 1.9299999999972117e-06}, {'time': 0.019058833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.019060569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.019062583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.019064167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.019065917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.019067431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.019069486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.055000000000806e-06, 'source_diff': 2.055000000000806e-06}, {'time': 0.019071306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.019072792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.019074639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019076167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.019078083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.915999999997642e-06, 'source_diff': 1.915999999997642e-06}, {'time': 0.019080111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.019081917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.019083458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}, {'time': 0.019085444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.019087292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8479999999987395e-06, 'source_diff': 1.8479999999987395e-06}, {'time': 0.019089278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.019091153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.019092875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.019094375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.019095847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.019097542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.019099181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.019100806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.019102806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.019104639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.019106097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.019107653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.019109208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.019111153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.019113125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.019114861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.019116403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.01911825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019120042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.019121986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.019123514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.019125208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.019127139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.019128667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5279999999971705e-06, 'source_diff': 1.5279999999971705e-06}, {'time': 0.019130583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.019132361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.019133833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:31.556" endtime="20201112 09:53:31.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.551" endtime="20201112 09:53:31.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:31.573" level="INFO">${debug-compressed} = {'time': [0.019047958, 0.019049722, 0.019051306, 0.019053333, 0.019054917, 0.019056847, 0.019058833, 0.019060569, 0.019062583, 0.019064167, 0.019065917, 0.019067431, 0.019069486, 0.019071306, 0.019072...</msg>
<status status="PASS" starttime="20201112 09:53:31.560" endtime="20201112 09:53:31.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.577" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:31.576" endtime="20201112 09:53:31.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.580" level="INFO">VALUE: {'time': [0.019047958, 0.019049722, 0.019051306, 0.019053333, 0.019054917, 0.019056847, 0.019058833, 0.019060569, 0.019062583, 0.019064167, 0.019065917, 0.019067431, 0.019069486, 0.019071306, 0.019072792, 0.019074639, 0.019076167, 0.019078083, 0.019080111, 0.019081917, 0.019083458, 0.019085444, 0.019087292, 0.019089278, 0.019091153, 0.019092875, 0.019094375, 0.019095847, 0.019097542, 0.019099181, 0.019100806, 0.019102806, 0.019104639, 0.019106097, 0.019107653, 0.019109208, 0.019111153, 0.019113125, 0.019114861, 0.019116403, 0.01911825, 0.019120042, 0.019121986, 0.019123514, 0.019125208, 0.019127139, 0.019128667, 0.019130583, 0.019132361, 0.019133833], 'eventsource_diff': [0, 1.76400000000132e-06, 1.5839999999989196e-06, 2.026999999998197e-06, 1.584000000002389e-06, 1.9299999999972117e-06, 1.9860000000024303e-06, 1.7359999999987108e-06, 2.01400000000157e-06, 1.5839999999989196e-06, 1.7500000000017502e-06, 1.5139999999976006e-06, 2.055000000000806e-06, 1.8199999999995997e-06, 1.4860000000019302e-06, 1.846999999999266e-06, 1.52800000000064e-06, 1.915999999997642e-06, 2.02800000000114e-06, 1.8060000000000298e-06, 1.5410000000007362e-06, 1.985999999998961e-06, 1.8479999999987395e-06, 1.9860000000024303e-06, 1.8749999999984057e-06, 1.7219999999991409e-06, 1.5000000000015001e-06, 1.4719999999988909e-06, 1.6949999999994747e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.9999999999985307e-06, 1.832999999999696e-06, 1.457999999999321e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.9449999999997247e-06, 1.9720000000028604e-06, 1.7359999999987108e-06, 1.5420000000002099e-06, 1.846999999999266e-06, 1.7920000000004599e-06, 1.944000000000251e-06, 1.52800000000064e-06, 1.694000000000001e-06, 1.931000000000155e-06, 1.5279999999971705e-06, 1.9160000000011113e-06, 1.77800000000089e-06, 1.4719999999988909e-06], 'sourcediff': [0, 1.76400000000132e-06, 1.5839999999989196e-06, 2.026999999998197e-06, 1.584000000002389e-06, 1.9299999999972117e-06, 1.9860000000024303e-06, 1.7359999999987108e-06, 2.01400000000157e-06, 1.5839999999989196e-06, 1.7500000000017502e-06, 1.5139999999976006e-06, 2.055000000000806e-06, 1.8199999999995997e-06, 1.4860000000019302e-06, 1.846999999999266e-06, 1.52800000000064e-06, 1.915999999997642e-06, 2.02800000000114e-06, 1.8060000000000298e-06, 1.5410000000007362e-06, 1.985999999998961e-06, 1.8479999999987395e-06, 1.9860000000024303e-06, 1.8749999999984057e-06, 1.7219999999991409e-06, 1.5000000000015001e-06, 1.4719999999988909e-06, 1.6949999999994747e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.9999999999985307e-06, 1.832999999999696e-06, 1.457999999999321e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.9449999999997247e-06, 1.9720000000028604e-06, 1.7359999999987108e-06, 1.5420000000002099e-06, 1.846999999999266e-06, 1.7920000000004599e-06, 1.944000000000251e-06, 1.52800000000064e-06, 1.694000000000001e-06, 1.931000000000155e-06, 1.5279999999971705e-06, 1.9160000000011113e-06, 1.77800000000089e-06, 1.4719999999988909e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:31.578" endtime="20201112 09:53:31.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.574" endtime="20201112 09:53:31.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:31.584" level="INFO">${RESULT} = [{'time': 0.019049722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.019053333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:53:31.582" endtime="20201112 09:53:31.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:31.592" level="INFO">${GPIO_OVERHEAD} = {'time': [0.019049722, 0.019053333, 0.019056847, 0.019060569, 0.019064167, 0.019067431, 0.019071306, 0.019074639, 0.019078083, 0.019081917, 0.019085444, 0.019089278, 0.019092875, 0.019095847, 0.019099...</msg>
<status status="PASS" starttime="20201112 09:53:31.585" endtime="20201112 09:53:31.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.597" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:31.596" endtime="20201112 09:53:31.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.599" level="INFO">VALUE: [1.76400000000132e-06, 2.026999999998197e-06, 1.9299999999972117e-06, 1.7359999999987108e-06, 1.5839999999989196e-06, 1.5139999999976006e-06, 1.8199999999995997e-06, 1.846999999999266e-06, 1.915999999997642e-06, 1.8060000000000298e-06, 1.985999999998961e-06, 1.9860000000024303e-06, 1.7219999999991409e-06, 1.4719999999988909e-06, 1.639000000001195e-06, 1.9999999999985307e-06, 1.457999999999321e-06, 1.5550000000003061e-06, 1.9720000000028604e-06, 1.5420000000002099e-06, 1.7920000000004599e-06, 1.52800000000064e-06, 1.931000000000155e-06, 1.9160000000011113e-06, 1.4719999999988909e-06]</msg>
<status status="PASS" starttime="20201112 09:53:31.598" endtime="20201112 09:53:31.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.593" endtime="20201112 09:53:31.600"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.602" endtime="20201112 09:53:31.603"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:31.606" endtime="20201112 09:53:31.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.604" endtime="20201112 09:53:31.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.601" endtime="20201112 09:53:31.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.244" endtime="20201112 09:53:31.626"></status>
</kw>
<msg timestamp="20201112 09:53:31.627" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.635" endtime="20201112 09:53:31.645"></status>
</kw>
<msg timestamp="20201112 09:53:31.646" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:31.633" endtime="20201112 09:53:31.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.648" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:31.647" endtime="20201112 09:53:31.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.649" endtime="20201112 09:53:31.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.630" endtime="20201112 09:53:31.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.628" endtime="20201112 09:53:31.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.658" endtime="20201112 09:53:31.923"></status>
</kw>
<msg timestamp="20201112 09:53:31.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019261111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019262736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:31.657" endtime="20201112 09:53:31.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019261111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019262736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:31.926" endtime="20201112 09:53:31.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.931" endtime="20201112 09:53:31.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.654" endtime="20201112 09:53:31.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.652" endtime="20201112 09:53:31.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.937" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:31.936" endtime="20201112 09:53:31.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.941" level="INFO">VALUE: [{'time': 0.019261111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019262736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.019264472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.01926625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.019267958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7080000000030404e-06, 'source_diff': 1.7080000000030404e-06}, {'time': 0.019269944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.019271764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.019273319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.019274819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.019276694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.019278194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.019280097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.019281944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019283861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.0192855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.019287153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.019288778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.019290583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.019292347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.019294306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9589999999992946e-06, 'source_diff': 1.9589999999992946e-06}, {'time': 0.019295847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}, {'time': 0.019297694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019299292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.019300944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6520000000012913e-06, 'source_diff': 1.6520000000012913e-06}, {'time': 0.019302528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.019304028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.019305958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.019307694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.019309389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.019311319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.019312889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.019314833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.019316583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.019318181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.01932, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.019321958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.019323972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.019325611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.019327458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019328903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4450000000026941e-06, 'source_diff': 1.4450000000026941e-06}, {'time': 0.019330528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.019332, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.019333694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.019335667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.973000000002334e-06, 'source_diff': 1.973000000002334e-06}, {'time': 0.019337292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.01933925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.019341083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.019342569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.019344347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.019346125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:31.939" endtime="20201112 09:53:31.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.934" endtime="20201112 09:53:31.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:31.956" level="INFO">${debug-compressed} = {'time': [0.019261111, 0.019262736, 0.019264472, 0.01926625, 0.019267958, 0.019269944, 0.019271764, 0.019273319, 0.019274819, 0.019276694, 0.019278194, 0.019280097, 0.019281944, 0.019283861, 0.0192855...</msg>
<status status="PASS" starttime="20201112 09:53:31.943" endtime="20201112 09:53:31.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.960" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:31.959" endtime="20201112 09:53:31.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.963" level="INFO">VALUE: {'time': [0.019261111, 0.019262736, 0.019264472, 0.01926625, 0.019267958, 0.019269944, 0.019271764, 0.019273319, 0.019274819, 0.019276694, 0.019278194, 0.019280097, 0.019281944, 0.019283861, 0.0192855, 0.019287153, 0.019288778, 0.019290583, 0.019292347, 0.019294306, 0.019295847, 0.019297694, 0.019299292, 0.019300944, 0.019302528, 0.019304028, 0.019305958, 0.019307694, 0.019309389, 0.019311319, 0.019312889, 0.019314833, 0.019316583, 0.019318181, 0.01932, 0.019321958, 0.019323972, 0.019325611, 0.019327458, 0.019328903, 0.019330528, 0.019332, 0.019333694, 0.019335667, 0.019337292, 0.01933925, 0.019341083, 0.019342569, 0.019344347, 0.019346125], 'eventsource_diff': [0, 1.6249999999981557e-06, 1.7360000000021802e-06, 1.7779999999974205e-06, 1.7080000000030404e-06, 1.985999999998961e-06, 1.8199999999995997e-06, 1.5550000000003061e-06, 1.4999999999980307e-06, 1.8750000000018752e-06, 1.4999999999980307e-06, 1.903000000001015e-06, 1.846999999999266e-06, 1.917000000000585e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6249999999981557e-06, 1.8050000000005562e-06, 1.76400000000132e-06, 1.9589999999992946e-06, 1.5410000000007362e-06, 1.846999999999266e-06, 1.5979999999984895e-06, 1.6520000000012913e-06, 1.5839999999989196e-06, 1.5000000000015001e-06, 1.930000000000681e-06, 1.7359999999987108e-06, 1.6949999999994747e-06, 1.930000000000681e-06, 1.5699999999993497e-06, 1.944000000000251e-06, 1.7499999999982807e-06, 1.598000000001959e-06, 1.819000000000126e-06, 1.957999999999821e-06, 2.0139999999981006e-06, 1.639000000001195e-06, 1.846999999999266e-06, 1.4450000000026941e-06, 1.6249999999981557e-06, 1.4719999999988909e-06, 1.694000000000001e-06, 1.973000000002334e-06, 1.6249999999981557e-06, 1.957999999999821e-06, 1.832999999999696e-06, 1.4860000000019302e-06, 1.77800000000089e-06, 1.7779999999974205e-06], 'sourcediff': [0, 1.6249999999981557e-06, 1.7360000000021802e-06, 1.7779999999974205e-06, 1.7080000000030404e-06, 1.985999999998961e-06, 1.8199999999995997e-06, 1.5550000000003061e-06, 1.4999999999980307e-06, 1.8750000000018752e-06, 1.4999999999980307e-06, 1.903000000001015e-06, 1.846999999999266e-06, 1.917000000000585e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6249999999981557e-06, 1.8050000000005562e-06, 1.76400000000132e-06, 1.9589999999992946e-06, 1.5410000000007362e-06, 1.846999999999266e-06, 1.5979999999984895e-06, 1.6520000000012913e-06, 1.5839999999989196e-06, 1.5000000000015001e-06, 1.930000000000681e-06, 1.7359999999987108e-06, 1.6949999999994747e-06, 1.930000000000681e-06, 1.5699999999993497e-06, 1.944000000000251e-06, 1.7499999999982807e-06, 1.598000000001959e-06, 1.819000000000126e-06, 1.957999999999821e-06, 2.0139999999981006e-06, 1.639000000001195e-06, 1.846999999999266e-06, 1.4450000000026941e-06, 1.6249999999981557e-06, 1.4719999999988909e-06, 1.694000000000001e-06, 1.973000000002334e-06, 1.6249999999981557e-06, 1.957999999999821e-06, 1.832999999999696e-06, 1.4860000000019302e-06, 1.77800000000089e-06, 1.7779999999974205e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:31.961" endtime="20201112 09:53:31.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.957" endtime="20201112 09:53:31.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:31.967" level="INFO">${RESULT} = [{'time': 0.019262736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.01926625, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:53:31.965" endtime="20201112 09:53:31.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:31.976" level="INFO">${GPIO_OVERHEAD} = {'time': [0.019262736, 0.01926625, 0.019269944, 0.019273319, 0.019276694, 0.019280097, 0.019283861, 0.019287153, 0.019290583, 0.019294306, 0.019297694, 0.019300944, 0.019304028, 0.019307694, 0.0193113...</msg>
<status status="PASS" starttime="20201112 09:53:31.968" endtime="20201112 09:53:31.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.980" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:31.979" endtime="20201112 09:53:31.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.983" level="INFO">VALUE: [1.6249999999981557e-06, 1.7779999999974205e-06, 1.985999999998961e-06, 1.5550000000003061e-06, 1.8750000000018752e-06, 1.903000000001015e-06, 1.917000000000585e-06, 1.653000000000765e-06, 1.8050000000005562e-06, 1.9589999999992946e-06, 1.846999999999266e-06, 1.6520000000012913e-06, 1.5000000000015001e-06, 1.7359999999987108e-06, 1.930000000000681e-06, 1.944000000000251e-06, 1.598000000001959e-06, 1.957999999999821e-06, 1.639000000001195e-06, 1.4450000000026941e-06, 1.4719999999988909e-06, 1.973000000002334e-06, 1.957999999999821e-06, 1.4860000000019302e-06, 1.7779999999974205e-06]</msg>
<status status="PASS" starttime="20201112 09:53:31.981" endtime="20201112 09:53:31.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.977" endtime="20201112 09:53:31.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.986" endtime="20201112 09:53:31.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:31.989" endtime="20201112 09:53:32.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.988" endtime="20201112 09:53:32.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.985" endtime="20201112 09:53:32.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.627" endtime="20201112 09:53:32.010"></status>
</kw>
<msg timestamp="20201112 09:53:32.010" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:32.019" endtime="20201112 09:53:32.028"></status>
</kw>
<msg timestamp="20201112 09:53:32.028" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:32.017" endtime="20201112 09:53:32.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.031" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:32.029" endtime="20201112 09:53:32.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:32.032" endtime="20201112 09:53:32.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.015" endtime="20201112 09:53:32.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.012" endtime="20201112 09:53:32.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:32.041" endtime="20201112 09:53:32.304"></status>
</kw>
<msg timestamp="20201112 09:53:32.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019099306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019100833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:32.039" endtime="20201112 09:53:32.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019099306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019100833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:32.307" endtime="20201112 09:53:32.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:32.312" endtime="20201112 09:53:32.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.037" endtime="20201112 09:53:32.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.035" endtime="20201112 09:53:32.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.319" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:32.318" endtime="20201112 09:53:32.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.322" level="INFO">VALUE: [{'time': 0.019099306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019100833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5270000000011663e-06, 'source_diff': 1.5270000000011663e-06}, {'time': 0.019102444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.01910425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.019105819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.019107583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.019109153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.019110597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.019112111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.019113847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.019115681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.019117181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.019118889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.019120736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019122597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.019124389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7919999999969904e-06, 'source_diff': 1.7919999999969904e-06}, {'time': 0.019126139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.019127986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019129958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.019131583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.019133194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.019135153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9589999999992946e-06, 'source_diff': 1.9589999999992946e-06}, {'time': 0.019137125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.019139111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.019141125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.019142861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.019144347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.019146083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.019147972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.019149458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.019151319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.019153028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.019154917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.019156917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.019158514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.019160111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.019161792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.019163764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.019165542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.019167153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.019169125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.019170583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4580000000027904e-06, 'source_diff': 1.4580000000027904e-06}, {'time': 0.019172222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.019173958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.019175431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.019176944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5130000000015964e-06, 'source_diff': 1.5130000000015964e-06}, {'time': 0.019178708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.019180514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.019182028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.019183611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:32.320" endtime="20201112 09:53:32.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.315" endtime="20201112 09:53:32.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:32.338" level="INFO">${debug-compressed} = {'time': [0.019099306, 0.019100833, 0.019102444, 0.01910425, 0.019105819, 0.019107583, 0.019109153, 0.019110597, 0.019112111, 0.019113847, 0.019115681, 0.019117181, 0.019118889, 0.019120736, 0.0191225...</msg>
<status status="PASS" starttime="20201112 09:53:32.325" endtime="20201112 09:53:32.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.342" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:32.341" endtime="20201112 09:53:32.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.345" level="INFO">VALUE: {'time': [0.019099306, 0.019100833, 0.019102444, 0.01910425, 0.019105819, 0.019107583, 0.019109153, 0.019110597, 0.019112111, 0.019113847, 0.019115681, 0.019117181, 0.019118889, 0.019120736, 0.019122597, 0.019124389, 0.019126139, 0.019127986, 0.019129958, 0.019131583, 0.019133194, 0.019135153, 0.019137125, 0.019139111, 0.019141125, 0.019142861, 0.019144347, 0.019146083, 0.019147972, 0.019149458, 0.019151319, 0.019153028, 0.019154917, 0.019156917, 0.019158514, 0.019160111, 0.019161792, 0.019163764, 0.019165542, 0.019167153, 0.019169125, 0.019170583, 0.019172222, 0.019173958, 0.019175431, 0.019176944, 0.019178708, 0.019180514, 0.019182028, 0.019183611], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 1.5270000000011663e-06, 1.6109999999985858e-06, 1.8060000000000298e-06, 1.568999999999876e-06, 1.76400000000132e-06, 1.5699999999993497e-06, 1.443999999999751e-06, 1.51400000000107e-06, 1.7359999999987108e-06, 1.8339999999991696e-06, 1.5000000000015001e-06, 1.707999999999571e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.7919999999969904e-06, 1.7500000000017502e-06, 1.846999999999266e-06, 1.971999999999391e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.9589999999992946e-06, 1.9720000000028604e-06, 1.985999999998961e-06, 2.0139999999981006e-06, 1.7360000000021802e-06, 1.4859999999984608e-06, 1.7360000000021802e-06, 1.8889999999979756e-06, 1.4860000000019302e-06, 1.8609999999988358e-06, 1.7089999999990446e-06, 1.889000000001445e-06, 1.9999999999985307e-06, 1.5970000000024853e-06, 1.5969999999990159e-06, 1.6809999999999048e-06, 1.971999999999391e-06, 1.77800000000089e-06, 1.6109999999985858e-06, 1.971999999999391e-06, 1.4580000000027904e-06, 1.6389999999977256e-06, 1.7360000000021802e-06, 1.4729999999983645e-06, 1.5130000000015964e-06, 1.7639999999978506e-06, 1.8060000000000298e-06, 1.51400000000107e-06, 1.582999999999446e-06], 'sourcediff': [0, 1.5270000000011663e-06, 1.6109999999985858e-06, 1.8060000000000298e-06, 1.568999999999876e-06, 1.76400000000132e-06, 1.5699999999993497e-06, 1.443999999999751e-06, 1.51400000000107e-06, 1.7359999999987108e-06, 1.8339999999991696e-06, 1.5000000000015001e-06, 1.707999999999571e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.7919999999969904e-06, 1.7500000000017502e-06, 1.846999999999266e-06, 1.971999999999391e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.9589999999992946e-06, 1.9720000000028604e-06, 1.985999999998961e-06, 2.0139999999981006e-06, 1.7360000000021802e-06, 1.4859999999984608e-06, 1.7360000000021802e-06, 1.8889999999979756e-06, 1.4860000000019302e-06, 1.8609999999988358e-06, 1.7089999999990446e-06, 1.889000000001445e-06, 1.9999999999985307e-06, 1.5970000000024853e-06, 1.5969999999990159e-06, 1.6809999999999048e-06, 1.971999999999391e-06, 1.77800000000089e-06, 1.6109999999985858e-06, 1.971999999999391e-06, 1.4580000000027904e-06, 1.6389999999977256e-06, 1.7360000000021802e-06, 1.4729999999983645e-06, 1.5130000000015964e-06, 1.7639999999978506e-06, 1.8060000000000298e-06, 1.51400000000107e-06, 1.582999999999446e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:32.343" endtime="20201112 09:53:32.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.339" endtime="20201112 09:53:32.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:32.349" level="INFO">${RESULT} = [{'time': 0.019100833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5270000000011663e-06, 'source_diff': 1.5270000000011663e-06}, {'time': 0.01910425, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:53:32.347" endtime="20201112 09:53:32.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:32.357" level="INFO">${GPIO_OVERHEAD} = {'time': [0.019100833, 0.01910425, 0.019107583, 0.019110597, 0.019113847, 0.019117181, 0.019120736, 0.019124389, 0.019127986, 0.019131583, 0.019135153, 0.019139111, 0.019142861, 0.019146083, 0.0191494...</msg>
<status status="PASS" starttime="20201112 09:53:32.350" endtime="20201112 09:53:32.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.361" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:32.360" endtime="20201112 09:53:32.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.363" level="INFO">VALUE: [1.5270000000011663e-06, 1.8060000000000298e-06, 1.76400000000132e-06, 1.443999999999751e-06, 1.7359999999987108e-06, 1.5000000000015001e-06, 1.846999999999266e-06, 1.7919999999969904e-06, 1.846999999999266e-06, 1.6250000000016251e-06, 1.9589999999992946e-06, 1.985999999998961e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.4860000000019302e-06, 1.7089999999990446e-06, 1.9999999999985307e-06, 1.5969999999990159e-06, 1.971999999999391e-06, 1.6109999999985858e-06, 1.4580000000027904e-06, 1.7360000000021802e-06, 1.5130000000015964e-06, 1.8060000000000298e-06, 1.582999999999446e-06]</msg>
<status status="PASS" starttime="20201112 09:53:32.362" endtime="20201112 09:53:32.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.358" endtime="20201112 09:53:32.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:32.367" endtime="20201112 09:53:32.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:32.371" endtime="20201112 09:53:32.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.369" endtime="20201112 09:53:32.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.365" endtime="20201112 09:53:32.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.011" endtime="20201112 09:53:32.392"></status>
</kw>
<msg timestamp="20201112 09:53:32.392" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:32.400" endtime="20201112 09:53:32.410"></status>
</kw>
<msg timestamp="20201112 09:53:32.410" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:32.398" endtime="20201112 09:53:32.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.413" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:32.411" endtime="20201112 09:53:32.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:32.414" endtime="20201112 09:53:32.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.396" endtime="20201112 09:53:32.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.394" endtime="20201112 09:53:32.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:32.422" endtime="20201112 09:53:32.691"></status>
</kw>
<msg timestamp="20201112 09:53:32.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018562833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018564875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:32.421" endtime="20201112 09:53:32.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018562833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018564875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:32.694" endtime="20201112 09:53:32.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:32.699" endtime="20201112 09:53:32.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.418" endtime="20201112 09:53:32.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.417" endtime="20201112 09:53:32.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.705" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:32.704" endtime="20201112 09:53:32.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.709" level="INFO">VALUE: [{'time': 0.018562833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018564875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.04200000000071e-06, 'source_diff': 2.04200000000071e-06}, {'time': 0.018566569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018568278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018570097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018571528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.018573403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018575181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018577056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018578819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.762999999998377e-06, 'source_diff': 1.762999999998377e-06}, {'time': 0.018580444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018581917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.018583486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018585139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018586931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018588667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018590167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018592056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.018593944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8880000000019714e-06, 'source_diff': 1.8880000000019714e-06}, {'time': 0.018595528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.018597556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018599583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.026999999998197e-06, 'source_diff': 2.026999999998197e-06}, {'time': 0.018601333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018603278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018605056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.018606889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8330000000031654e-06, 'source_diff': 1.8330000000031654e-06}, {'time': 0.018608875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018610597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018612375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018613903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018615667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018617444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7770000000014163e-06, 'source_diff': 1.7770000000014163e-06}, {'time': 0.018619278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.018620764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.01862225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018624264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.018625917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.018627611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018629292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018631153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018632889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018634778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018636486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018638236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018640042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.0186415, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018643222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.018645236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018647, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018648903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:32.707" endtime="20201112 09:53:32.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.702" endtime="20201112 09:53:32.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:32.724" level="INFO">${debug-compressed} = {'time': [0.018562833, 0.018564875, 0.018566569, 0.018568278, 0.018570097, 0.018571528, 0.018573403, 0.018575181, 0.018577056, 0.018578819, 0.018580444, 0.018581917, 0.018583486, 0.018585139, 0.018586...</msg>
<status status="PASS" starttime="20201112 09:53:32.711" endtime="20201112 09:53:32.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.728" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:32.727" endtime="20201112 09:53:32.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.731" level="INFO">VALUE: {'time': [0.018562833, 0.018564875, 0.018566569, 0.018568278, 0.018570097, 0.018571528, 0.018573403, 0.018575181, 0.018577056, 0.018578819, 0.018580444, 0.018581917, 0.018583486, 0.018585139, 0.018586931, 0.018588667, 0.018590167, 0.018592056, 0.018593944, 0.018595528, 0.018597556, 0.018599583, 0.018601333, 0.018603278, 0.018605056, 0.018606889, 0.018608875, 0.018610597, 0.018612375, 0.018613903, 0.018615667, 0.018617444, 0.018619278, 0.018620764, 0.01862225, 0.018624264, 0.018625917, 0.018627611, 0.018629292, 0.018631153, 0.018632889, 0.018634778, 0.018636486, 0.018638236, 0.018640042, 0.0186415, 0.018643222, 0.018645236, 0.018647, 0.018648903], 'eventsource_diff': [0, 2.04200000000071e-06, 1.694000000000001e-06, 1.7089999999990446e-06, 1.819000000000126e-06, 1.4309999999996548e-06, 1.8749999999984057e-06, 1.77800000000089e-06, 1.8750000000018752e-06, 1.762999999998377e-06, 1.6250000000016251e-06, 1.4729999999983645e-06, 1.568999999999876e-06, 1.653000000000765e-06, 1.7920000000004599e-06, 1.7359999999987108e-06, 1.5000000000015001e-06, 1.8889999999979756e-06, 1.8880000000019714e-06, 1.5839999999989196e-06, 2.02800000000114e-06, 2.026999999998197e-06, 1.7500000000017502e-06, 1.9449999999997247e-06, 1.7779999999974205e-06, 1.8330000000031654e-06, 1.985999999998961e-06, 1.7219999999991409e-06, 1.77800000000089e-06, 1.52800000000064e-06, 1.7639999999978506e-06, 1.7770000000014163e-06, 1.8339999999991696e-06, 1.4860000000019302e-06, 1.4859999999984608e-06, 2.01400000000157e-06, 1.6529999999972955e-06, 1.694000000000001e-06, 1.6809999999999048e-06, 1.8610000000023053e-06, 1.7359999999987108e-06, 1.889000000001445e-06, 1.707999999999571e-06, 1.7499999999982807e-06, 1.8060000000000298e-06, 1.457999999999321e-06, 1.7220000000026103e-06, 2.0139999999981006e-06, 1.76400000000132e-06, 1.903000000001015e-06], 'sourcediff': [0, 2.04200000000071e-06, 1.694000000000001e-06, 1.7089999999990446e-06, 1.819000000000126e-06, 1.4309999999996548e-06, 1.8749999999984057e-06, 1.77800000000089e-06, 1.8750000000018752e-06, 1.762999999998377e-06, 1.6250000000016251e-06, 1.4729999999983645e-06, 1.568999999999876e-06, 1.653000000000765e-06, 1.7920000000004599e-06, 1.7359999999987108e-06, 1.5000000000015001e-06, 1.8889999999979756e-06, 1.8880000000019714e-06, 1.5839999999989196e-06, 2.02800000000114e-06, 2.026999999998197e-06, 1.7500000000017502e-06, 1.9449999999997247e-06, 1.7779999999974205e-06, 1.8330000000031654e-06, 1.985999999998961e-06, 1.7219999999991409e-06, 1.77800000000089e-06, 1.52800000000064e-06, 1.7639999999978506e-06, 1.7770000000014163e-06, 1.8339999999991696e-06, 1.4860000000019302e-06, 1.4859999999984608e-06, 2.01400000000157e-06, 1.6529999999972955e-06, 1.694000000000001e-06, 1.6809999999999048e-06, 1.8610000000023053e-06, 1.7359999999987108e-06, 1.889000000001445e-06, 1.707999999999571e-06, 1.7499999999982807e-06, 1.8060000000000298e-06, 1.457999999999321e-06, 1.7220000000026103e-06, 2.0139999999981006e-06, 1.76400000000132e-06, 1.903000000001015e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:32.729" endtime="20201112 09:53:32.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.725" endtime="20201112 09:53:32.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:32.736" level="INFO">${RESULT} = [{'time': 0.018564875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.04200000000071e-06, 'source_diff': 2.04200000000071e-06}, {'time': 0.018568278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:53:32.733" endtime="20201112 09:53:32.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:32.744" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018564875, 0.018568278, 0.018571528, 0.018575181, 0.018578819, 0.018581917, 0.018585139, 0.018588667, 0.018592056, 0.018595528, 0.018599583, 0.018603278, 0.018606889, 0.018610597, 0.018613...</msg>
<status status="PASS" starttime="20201112 09:53:32.737" endtime="20201112 09:53:32.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.748" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:32.747" endtime="20201112 09:53:32.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.750" level="INFO">VALUE: [2.04200000000071e-06, 1.7089999999990446e-06, 1.4309999999996548e-06, 1.77800000000089e-06, 1.762999999998377e-06, 1.4729999999983645e-06, 1.653000000000765e-06, 1.7359999999987108e-06, 1.8889999999979756e-06, 1.5839999999989196e-06, 2.026999999998197e-06, 1.9449999999997247e-06, 1.8330000000031654e-06, 1.7219999999991409e-06, 1.52800000000064e-06, 1.7770000000014163e-06, 1.4860000000019302e-06, 2.01400000000157e-06, 1.694000000000001e-06, 1.8610000000023053e-06, 1.889000000001445e-06, 1.7499999999982807e-06, 1.457999999999321e-06, 2.0139999999981006e-06, 1.903000000001015e-06]</msg>
<status status="PASS" starttime="20201112 09:53:32.749" endtime="20201112 09:53:32.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.745" endtime="20201112 09:53:32.752"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:32.754" endtime="20201112 09:53:32.755"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:32.757" endtime="20201112 09:53:32.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.756" endtime="20201112 09:53:32.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.752" endtime="20201112 09:53:32.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.393" endtime="20201112 09:53:32.778"></status>
</kw>
<msg timestamp="20201112 09:53:32.778" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:32.786" endtime="20201112 09:53:32.795"></status>
</kw>
<msg timestamp="20201112 09:53:32.796" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:32.784" endtime="20201112 09:53:32.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.798" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:32.797" endtime="20201112 09:53:32.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:32.799" endtime="20201112 09:53:32.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.782" endtime="20201112 09:53:32.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.780" endtime="20201112 09:53:32.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:32.808" endtime="20201112 09:53:33.074"></status>
</kw>
<msg timestamp="20201112 09:53:33.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018508958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018510639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:32.807" endtime="20201112 09:53:33.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018508958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018510639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:33.077" endtime="20201112 09:53:33.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.082" endtime="20201112 09:53:33.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.804" endtime="20201112 09:53:33.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.803" endtime="20201112 09:53:33.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.089" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:33.088" endtime="20201112 09:53:33.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.092" level="INFO">VALUE: [{'time': 0.018508958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018510639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018512361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.018514403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0419999999972405e-06, 'source_diff': 2.0419999999972405e-06}, {'time': 0.018516056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018517764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018519222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018521028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018523069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0410000000012363e-06, 'source_diff': 2.0410000000012363e-06}, {'time': 0.018524889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018526611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018528486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018530125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018532153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0279999999976706e-06, 'source_diff': 2.0279999999976706e-06}, {'time': 0.018533708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018535208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018536736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018538333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018539875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.0185415, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018543194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018545194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018546667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.018548347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018550333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018552222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018554069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018555708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018557181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.018559181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018561181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018562958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7770000000014163e-06, 'source_diff': 1.7770000000014163e-06}, {'time': 0.018564569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018566111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018567639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018569444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018571403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9589999999992946e-06, 'source_diff': 1.9589999999992946e-06}, {'time': 0.018572931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018574847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.915999999997642e-06, 'source_diff': 1.915999999997642e-06}, {'time': 0.018576819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.01857875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018580542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7919999999969904e-06, 'source_diff': 1.7919999999969904e-06}, {'time': 0.018582403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018583986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018585736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018587736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018589417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.01859125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018592736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018594722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:33.090" endtime="20201112 09:53:33.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.086" endtime="20201112 09:53:33.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:33.109" level="INFO">${debug-compressed} = {'time': [0.018508958, 0.018510639, 0.018512361, 0.018514403, 0.018516056, 0.018517764, 0.018519222, 0.018521028, 0.018523069, 0.018524889, 0.018526611, 0.018528486, 0.018530125, 0.018532153, 0.018533...</msg>
<status status="PASS" starttime="20201112 09:53:33.095" endtime="20201112 09:53:33.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.112" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:33.111" endtime="20201112 09:53:33.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.115" level="INFO">VALUE: {'time': [0.018508958, 0.018510639, 0.018512361, 0.018514403, 0.018516056, 0.018517764, 0.018519222, 0.018521028, 0.018523069, 0.018524889, 0.018526611, 0.018528486, 0.018530125, 0.018532153, 0.018533708, 0.018535208, 0.018536736, 0.018538333, 0.018539875, 0.0185415, 0.018543194, 0.018545194, 0.018546667, 0.018548347, 0.018550333, 0.018552222, 0.018554069, 0.018555708, 0.018557181, 0.018559181, 0.018561181, 0.018562958, 0.018564569, 0.018566111, 0.018567639, 0.018569444, 0.018571403, 0.018572931, 0.018574847, 0.018576819, 0.01857875, 0.018580542, 0.018582403, 0.018583986, 0.018585736, 0.018587736, 0.018589417, 0.01859125, 0.018592736, 0.018594722], 'eventsource_diff': [0, 1.6809999999999048e-06, 1.7220000000026103e-06, 2.0419999999972405e-06, 1.653000000000765e-06, 1.707999999999571e-06, 1.457999999999321e-06, 1.8060000000000298e-06, 2.0410000000012363e-06, 1.8199999999995997e-06, 1.7219999999991409e-06, 1.8750000000018752e-06, 1.639000000001195e-06, 2.0279999999976706e-06, 1.5550000000003061e-06, 1.5000000000015001e-06, 1.52800000000064e-06, 1.5969999999990159e-06, 1.5420000000002099e-06, 1.6249999999981557e-06, 1.694000000000001e-06, 2.000000000002e-06, 1.4729999999983645e-06, 1.6800000000004311e-06, 1.985999999998961e-06, 1.889000000001445e-06, 1.846999999999266e-06, 1.639000000001195e-06, 1.4729999999983645e-06, 2.000000000002e-06, 1.9999999999985307e-06, 1.7770000000014163e-06, 1.6109999999985858e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.8050000000005562e-06, 1.9589999999992946e-06, 1.52800000000064e-06, 1.915999999997642e-06, 1.9720000000028604e-06, 1.931000000000155e-06, 1.7919999999969904e-06, 1.8610000000023053e-06, 1.582999999999446e-06, 1.7499999999982807e-06, 2.000000000002e-06, 1.6809999999999048e-06, 1.832999999999696e-06, 1.4859999999984608e-06, 1.9860000000024303e-06], 'sourcediff': [0, 1.6809999999999048e-06, 1.7220000000026103e-06, 2.0419999999972405e-06, 1.653000000000765e-06, 1.707999999999571e-06, 1.457999999999321e-06, 1.8060000000000298e-06, 2.0410000000012363e-06, 1.8199999999995997e-06, 1.7219999999991409e-06, 1.8750000000018752e-06, 1.639000000001195e-06, 2.0279999999976706e-06, 1.5550000000003061e-06, 1.5000000000015001e-06, 1.52800000000064e-06, 1.5969999999990159e-06, 1.5420000000002099e-06, 1.6249999999981557e-06, 1.694000000000001e-06, 2.000000000002e-06, 1.4729999999983645e-06, 1.6800000000004311e-06, 1.985999999998961e-06, 1.889000000001445e-06, 1.846999999999266e-06, 1.639000000001195e-06, 1.4729999999983645e-06, 2.000000000002e-06, 1.9999999999985307e-06, 1.7770000000014163e-06, 1.6109999999985858e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.8050000000005562e-06, 1.9589999999992946e-06, 1.52800000000064e-06, 1.915999999997642e-06, 1.9720000000028604e-06, 1.931000000000155e-06, 1.7919999999969904e-06, 1.8610000000023053e-06, 1.582999999999446e-06, 1.7499999999982807e-06, 2.000000000002e-06, 1.6809999999999048e-06, 1.832999999999696e-06, 1.4859999999984608e-06, 1.9860000000024303e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:33.113" endtime="20201112 09:53:33.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.109" endtime="20201112 09:53:33.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:33.120" level="INFO">${RESULT} = [{'time': 0.018510639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018514403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:33.117" endtime="20201112 09:53:33.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:33.128" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018510639, 0.018514403, 0.018517764, 0.018521028, 0.018524889, 0.018528486, 0.018532153, 0.018535208, 0.018538333, 0.0185415, 0.018545194, 0.018548347, 0.018552222, 0.018555708, 0.01855918...</msg>
<status status="PASS" starttime="20201112 09:53:33.121" endtime="20201112 09:53:33.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.132" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:33.131" endtime="20201112 09:53:33.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.134" level="INFO">VALUE: [1.6809999999999048e-06, 2.0419999999972405e-06, 1.707999999999571e-06, 1.8060000000000298e-06, 1.8199999999995997e-06, 1.8750000000018752e-06, 2.0279999999976706e-06, 1.5000000000015001e-06, 1.5969999999990159e-06, 1.6249999999981557e-06, 2.000000000002e-06, 1.6800000000004311e-06, 1.889000000001445e-06, 1.639000000001195e-06, 2.000000000002e-06, 1.7770000000014163e-06, 1.5420000000002099e-06, 1.8050000000005562e-06, 1.52800000000064e-06, 1.9720000000028604e-06, 1.7919999999969904e-06, 1.582999999999446e-06, 2.000000000002e-06, 1.832999999999696e-06, 1.9860000000024303e-06]</msg>
<status status="PASS" starttime="20201112 09:53:33.133" endtime="20201112 09:53:33.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.129" endtime="20201112 09:53:33.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.138" endtime="20201112 09:53:33.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:33.141" endtime="20201112 09:53:33.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.139" endtime="20201112 09:53:33.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.136" endtime="20201112 09:53:33.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.779" endtime="20201112 09:53:33.162"></status>
</kw>
<msg timestamp="20201112 09:53:33.162" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.169" endtime="20201112 09:53:33.179"></status>
</kw>
<msg timestamp="20201112 09:53:33.179" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:33.168" endtime="20201112 09:53:33.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.182" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:33.181" endtime="20201112 09:53:33.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.183" endtime="20201112 09:53:33.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.165" endtime="20201112 09:53:33.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.164" endtime="20201112 09:53:33.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.192" endtime="20201112 09:53:33.455"></status>
</kw>
<msg timestamp="20201112 09:53:33.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018218431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018219889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:33.190" endtime="20201112 09:53:33.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018218431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018219889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:33.458" endtime="20201112 09:53:33.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.463" endtime="20201112 09:53:33.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.188" endtime="20201112 09:53:33.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.186" endtime="20201112 09:53:33.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.471" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:33.470" endtime="20201112 09:53:33.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.474" level="INFO">VALUE: [{'time': 0.018218431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018219889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018222194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.305000000001056e-06, 'source_diff': 2.305000000001056e-06}, {'time': 0.018223792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.018225667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018227444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7769999999979469e-06, 'source_diff': 1.7769999999979469e-06}, {'time': 0.018229139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018231097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9580000000032904e-06, 'source_diff': 1.9580000000032904e-06}, {'time': 0.018233083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018235042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9589999999992946e-06, 'source_diff': 1.9589999999992946e-06}, {'time': 0.018236556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018238125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018239917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018241417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018243306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018244931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018246806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018248708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.901999999998072e-06, 'source_diff': 1.901999999998072e-06}, {'time': 0.018250167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.459000000002264e-06, 'source_diff': 1.459000000002264e-06}, {'time': 0.018252, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018253847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018255375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018256903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018258431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5279999999971705e-06, 'source_diff': 1.5279999999971705e-06}, {'time': 0.018260097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018261792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018263375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018264833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4580000000027904e-06, 'source_diff': 1.4580000000027904e-06}, {'time': 0.018267042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2089999999995447e-06, 'source_diff': 2.2089999999995447e-06}, {'time': 0.018268556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.018270528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.018272458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9299999999972117e-06, 'source_diff': 1.9299999999972117e-06}, {'time': 0.018274486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018276431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018278431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018279958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5269999999976969e-06, 'source_diff': 1.5269999999976969e-06}, {'time': 0.018281458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.01828325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018284764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.01828625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018287819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018289556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7369999999981844e-06, 'source_diff': 1.7369999999981844e-06}, {'time': 0.018291514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018293208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018294722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018296458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018298069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018299889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018301653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018303278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:33.472" endtime="20201112 09:53:33.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.467" endtime="20201112 09:53:33.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:33.489" level="INFO">${debug-compressed} = {'time': [0.018218431, 0.018219889, 0.018222194, 0.018223792, 0.018225667, 0.018227444, 0.018229139, 0.018231097, 0.018233083, 0.018235042, 0.018236556, 0.018238125, 0.018239917, 0.018241417, 0.018243...</msg>
<status status="PASS" starttime="20201112 09:53:33.477" endtime="20201112 09:53:33.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.493" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:33.492" endtime="20201112 09:53:33.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.496" level="INFO">VALUE: {'time': [0.018218431, 0.018219889, 0.018222194, 0.018223792, 0.018225667, 0.018227444, 0.018229139, 0.018231097, 0.018233083, 0.018235042, 0.018236556, 0.018238125, 0.018239917, 0.018241417, 0.018243306, 0.018244931, 0.018246806, 0.018248708, 0.018250167, 0.018252, 0.018253847, 0.018255375, 0.018256903, 0.018258431, 0.018260097, 0.018261792, 0.018263375, 0.018264833, 0.018267042, 0.018268556, 0.018270528, 0.018272458, 0.018274486, 0.018276431, 0.018278431, 0.018279958, 0.018281458, 0.01828325, 0.018284764, 0.01828625, 0.018287819, 0.018289556, 0.018291514, 0.018293208, 0.018294722, 0.018296458, 0.018298069, 0.018299889, 0.018301653, 0.018303278], 'eventsource_diff': [0, 1.457999999999321e-06, 2.305000000001056e-06, 1.5979999999984895e-06, 1.8750000000018752e-06, 1.7769999999979469e-06, 1.6949999999994747e-06, 1.9580000000032904e-06, 1.985999999998961e-06, 1.9589999999992946e-06, 1.51400000000107e-06, 1.568999999999876e-06, 1.7920000000004599e-06, 1.4999999999980307e-06, 1.889000000001445e-06, 1.6249999999981557e-06, 1.8750000000018752e-06, 1.901999999998072e-06, 1.459000000002264e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5279999999971705e-06, 1.6660000000008612e-06, 1.6949999999994747e-06, 1.582999999999446e-06, 1.4580000000027904e-06, 2.2089999999995447e-06, 1.5139999999976006e-06, 1.9720000000028604e-06, 1.9299999999972117e-06, 2.02800000000114e-06, 1.9449999999997247e-06, 2.000000000002e-06, 1.5269999999976969e-06, 1.5000000000015001e-06, 1.7920000000004599e-06, 1.5139999999976006e-06, 1.4860000000019302e-06, 1.568999999999876e-06, 1.7369999999981844e-06, 1.957999999999821e-06, 1.694000000000001e-06, 1.51400000000107e-06, 1.7360000000021802e-06, 1.6109999999985858e-06, 1.8199999999995997e-06, 1.76400000000132e-06, 1.6249999999981557e-06], 'sourcediff': [0, 1.457999999999321e-06, 2.305000000001056e-06, 1.5979999999984895e-06, 1.8750000000018752e-06, 1.7769999999979469e-06, 1.6949999999994747e-06, 1.9580000000032904e-06, 1.985999999998961e-06, 1.9589999999992946e-06, 1.51400000000107e-06, 1.568999999999876e-06, 1.7920000000004599e-06, 1.4999999999980307e-06, 1.889000000001445e-06, 1.6249999999981557e-06, 1.8750000000018752e-06, 1.901999999998072e-06, 1.459000000002264e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5279999999971705e-06, 1.6660000000008612e-06, 1.6949999999994747e-06, 1.582999999999446e-06, 1.4580000000027904e-06, 2.2089999999995447e-06, 1.5139999999976006e-06, 1.9720000000028604e-06, 1.9299999999972117e-06, 2.02800000000114e-06, 1.9449999999997247e-06, 2.000000000002e-06, 1.5269999999976969e-06, 1.5000000000015001e-06, 1.7920000000004599e-06, 1.5139999999976006e-06, 1.4860000000019302e-06, 1.568999999999876e-06, 1.7369999999981844e-06, 1.957999999999821e-06, 1.694000000000001e-06, 1.51400000000107e-06, 1.7360000000021802e-06, 1.6109999999985858e-06, 1.8199999999995997e-06, 1.76400000000132e-06, 1.6249999999981557e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:33.494" endtime="20201112 09:53:33.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.490" endtime="20201112 09:53:33.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:33.500" level="INFO">${RESULT} = [{'time': 0.018219889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018223792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:33.498" endtime="20201112 09:53:33.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:33.508" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018219889, 0.018223792, 0.018227444, 0.018231097, 0.018235042, 0.018238125, 0.018241417, 0.018244931, 0.018248708, 0.018252, 0.018255375, 0.018258431, 0.018261792, 0.018264833, 0.018268556...</msg>
<status status="PASS" starttime="20201112 09:53:33.501" endtime="20201112 09:53:33.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.512" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:33.511" endtime="20201112 09:53:33.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.515" level="INFO">VALUE: [1.457999999999321e-06, 1.5979999999984895e-06, 1.7769999999979469e-06, 1.9580000000032904e-06, 1.9589999999992946e-06, 1.568999999999876e-06, 1.4999999999980307e-06, 1.6249999999981557e-06, 1.901999999998072e-06, 1.832999999999696e-06, 1.52800000000064e-06, 1.5279999999971705e-06, 1.6949999999994747e-06, 1.4580000000027904e-06, 1.5139999999976006e-06, 1.9299999999972117e-06, 1.9449999999997247e-06, 1.5269999999976969e-06, 1.7920000000004599e-06, 1.4860000000019302e-06, 1.7369999999981844e-06, 1.694000000000001e-06, 1.7360000000021802e-06, 1.8199999999995997e-06, 1.6249999999981557e-06]</msg>
<status status="PASS" starttime="20201112 09:53:33.513" endtime="20201112 09:53:33.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.509" endtime="20201112 09:53:33.516"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.518" endtime="20201112 09:53:33.519"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:33.522" endtime="20201112 09:53:33.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.520" endtime="20201112 09:53:33.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.517" endtime="20201112 09:53:33.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.162" endtime="20201112 09:53:33.542"></status>
</kw>
<msg timestamp="20201112 09:53:33.542" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.550" endtime="20201112 09:53:33.559"></status>
</kw>
<msg timestamp="20201112 09:53:33.560" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:33.548" endtime="20201112 09:53:33.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.562" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:33.561" endtime="20201112 09:53:33.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.563" endtime="20201112 09:53:33.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.546" endtime="20201112 09:53:33.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.544" endtime="20201112 09:53:33.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.573" endtime="20201112 09:53:33.836"></status>
</kw>
<msg timestamp="20201112 09:53:33.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0181945, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018196028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:53:33.572" endtime="20201112 09:53:33.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0181945, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018196028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:53:33.839" endtime="20201112 09:53:33.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.844" endtime="20201112 09:53:33.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.568" endtime="20201112 09:53:33.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.567" endtime="20201112 09:53:33.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.851" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:33.850" endtime="20201112 09:53:33.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.854" level="INFO">VALUE: [{'time': 0.0181945, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018196028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018197722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018199389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018201083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018202597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018204444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018206083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018207847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018209597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018211639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.04200000000071e-06, 'source_diff': 2.04200000000071e-06}, {'time': 0.018213194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5549999999968367e-06, 'source_diff': 1.5549999999968367e-06}, {'time': 0.018214931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7370000000016539e-06, 'source_diff': 1.7370000000016539e-06}, {'time': 0.018216431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018218194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.762999999998377e-06, 'source_diff': 1.762999999998377e-06}, {'time': 0.018219639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.018221556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018223125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018224806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018226556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018228431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018230403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018231889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018233819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9299999999972117e-06, 'source_diff': 1.9299999999972117e-06}, {'time': 0.018235625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018237556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018239069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5130000000015964e-06, 'source_diff': 1.5130000000015964e-06}, {'time': 0.018240667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.018242264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.018243694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4300000000001811e-06, 'source_diff': 1.4300000000001811e-06}, {'time': 0.018245389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018247389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018248986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018250556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5700000000028191e-06, 'source_diff': 1.5700000000028191e-06}, {'time': 0.018252417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018254319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9020000000015413e-06, 'source_diff': 1.9020000000015413e-06}, {'time': 0.018255931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6119999999980594e-06, 'source_diff': 1.6119999999980594e-06}, {'time': 0.018257583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6520000000012913e-06, 'source_diff': 1.6520000000012913e-06}, {'time': 0.018259208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018261222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.018263153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018265, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018266444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018267875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.01827, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.125000000002125e-06, 'source_diff': 2.125000000002125e-06}, {'time': 0.018271958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018273903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018275722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018277292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018279069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7769999999979469e-06, 'source_diff': 1.7769999999979469e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:33.852" endtime="20201112 09:53:33.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.848" endtime="20201112 09:53:33.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:33.869" level="INFO">${debug-compressed} = {'time': [0.0181945, 0.018196028, 0.018197722, 0.018199389, 0.018201083, 0.018202597, 0.018204444, 0.018206083, 0.018207847, 0.018209597, 0.018211639, 0.018213194, 0.018214931, 0.018216431, 0.01821819...</msg>
<status status="PASS" starttime="20201112 09:53:33.857" endtime="20201112 09:53:33.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.873" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:33.872" endtime="20201112 09:53:33.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.877" level="INFO">VALUE: {'time': [0.0181945, 0.018196028, 0.018197722, 0.018199389, 0.018201083, 0.018202597, 0.018204444, 0.018206083, 0.018207847, 0.018209597, 0.018211639, 0.018213194, 0.018214931, 0.018216431, 0.018218194, 0.018219639, 0.018221556, 0.018223125, 0.018224806, 0.018226556, 0.018228431, 0.018230403, 0.018231889, 0.018233819, 0.018235625, 0.018237556, 0.018239069, 0.018240667, 0.018242264, 0.018243694, 0.018245389, 0.018247389, 0.018248986, 0.018250556, 0.018252417, 0.018254319, 0.018255931, 0.018257583, 0.018259208, 0.018261222, 0.018263153, 0.018265, 0.018266444, 0.018267875, 0.01827, 0.018271958, 0.018273903, 0.018275722, 0.018277292, 0.018279069], 'eventsource_diff': [0, 1.52800000000064e-06, 1.694000000000001e-06, 1.6670000000003349e-06, 1.694000000000001e-06, 1.51400000000107e-06, 1.846999999999266e-06, 1.639000000001195e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 2.04200000000071e-06, 1.5549999999968367e-06, 1.7370000000016539e-06, 1.5000000000015001e-06, 1.762999999998377e-06, 1.4449999999992247e-06, 1.917000000000585e-06, 1.568999999999876e-06, 1.6809999999999048e-06, 1.7500000000017502e-06, 1.8749999999984057e-06, 1.971999999999391e-06, 1.4860000000019302e-06, 1.9299999999972117e-06, 1.8060000000000298e-06, 1.931000000000155e-06, 1.5130000000015964e-06, 1.5979999999984895e-06, 1.5970000000024853e-06, 1.4300000000001811e-06, 1.6949999999994747e-06, 1.9999999999985307e-06, 1.5969999999990159e-06, 1.5700000000028191e-06, 1.8609999999988358e-06, 1.9020000000015413e-06, 1.6119999999980594e-06, 1.6520000000012913e-06, 1.6249999999981557e-06, 2.01400000000157e-06, 1.931000000000155e-06, 1.846999999999266e-06, 1.443999999999751e-06, 1.4309999999996548e-06, 2.125000000002125e-06, 1.957999999999821e-06, 1.9449999999997247e-06, 1.819000000000126e-06, 1.5699999999993497e-06, 1.7769999999979469e-06], 'sourcediff': [0, 1.52800000000064e-06, 1.694000000000001e-06, 1.6670000000003349e-06, 1.694000000000001e-06, 1.51400000000107e-06, 1.846999999999266e-06, 1.639000000001195e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 2.04200000000071e-06, 1.5549999999968367e-06, 1.7370000000016539e-06, 1.5000000000015001e-06, 1.762999999998377e-06, 1.4449999999992247e-06, 1.917000000000585e-06, 1.568999999999876e-06, 1.6809999999999048e-06, 1.7500000000017502e-06, 1.8749999999984057e-06, 1.971999999999391e-06, 1.4860000000019302e-06, 1.9299999999972117e-06, 1.8060000000000298e-06, 1.931000000000155e-06, 1.5130000000015964e-06, 1.5979999999984895e-06, 1.5970000000024853e-06, 1.4300000000001811e-06, 1.6949999999994747e-06, 1.9999999999985307e-06, 1.5969999999990159e-06, 1.5700000000028191e-06, 1.8609999999988358e-06, 1.9020000000015413e-06, 1.6119999999980594e-06, 1.6520000000012913e-06, 1.6249999999981557e-06, 2.01400000000157e-06, 1.931000000000155e-06, 1.846999999999266e-06, 1.443999999999751e-06, 1.4309999999996548e-06, 2.125000000002125e-06, 1.957999999999821e-06, 1.9449999999997247e-06, 1.819000000000126e-06, 1.5699999999993497e-06, 1.7769999999979469e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:33.875" endtime="20201112 09:53:33.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.870" endtime="20201112 09:53:33.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:33.882" level="INFO">${RESULT} = [{'time': 0.018196028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018199389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:53:33.879" endtime="20201112 09:53:33.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:33.890" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018196028, 0.018199389, 0.018202597, 0.018206083, 0.018209597, 0.018213194, 0.018216431, 0.018219639, 0.018223125, 0.018226556, 0.018230403, 0.018233819, 0.018237556, 0.018240667, 0.018243...</msg>
<status status="PASS" starttime="20201112 09:53:33.883" endtime="20201112 09:53:33.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.894" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:33.893" endtime="20201112 09:53:33.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.896" level="INFO">VALUE: [1.52800000000064e-06, 1.6670000000003349e-06, 1.51400000000107e-06, 1.639000000001195e-06, 1.7500000000017502e-06, 1.5549999999968367e-06, 1.5000000000015001e-06, 1.4449999999992247e-06, 1.568999999999876e-06, 1.7500000000017502e-06, 1.971999999999391e-06, 1.9299999999972117e-06, 1.931000000000155e-06, 1.5979999999984895e-06, 1.4300000000001811e-06, 1.9999999999985307e-06, 1.5700000000028191e-06, 1.9020000000015413e-06, 1.6520000000012913e-06, 2.01400000000157e-06, 1.846999999999266e-06, 1.4309999999996548e-06, 1.957999999999821e-06, 1.819000000000126e-06, 1.7769999999979469e-06]</msg>
<status status="PASS" starttime="20201112 09:53:33.895" endtime="20201112 09:53:33.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.891" endtime="20201112 09:53:33.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.900" endtime="20201112 09:53:33.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:33.903" endtime="20201112 09:53:33.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.902" endtime="20201112 09:53:33.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.898" endtime="20201112 09:53:33.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.543" endtime="20201112 09:53:33.924"></status>
</kw>
<msg timestamp="20201112 09:53:33.924" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.932" endtime="20201112 09:53:33.941"></status>
</kw>
<msg timestamp="20201112 09:53:33.942" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:33.930" endtime="20201112 09:53:33.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.944" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:33.943" endtime="20201112 09:53:33.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.945" endtime="20201112 09:53:33.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.927" endtime="20201112 09:53:33.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.926" endtime="20201112 09:53:33.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.955" endtime="20201112 09:53:34.219"></status>
</kw>
<msg timestamp="20201112 09:53:34.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018411542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0184135, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:53:33.954" endtime="20201112 09:53:34.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018411542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0184135, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:53:34.222" endtime="20201112 09:53:34.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.227" endtime="20201112 09:53:34.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.951" endtime="20201112 09:53:34.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.949" endtime="20201112 09:53:34.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.234" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:34.233" endtime="20201112 09:53:34.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.238" level="INFO">VALUE: [{'time': 0.018411542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0184135, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018415319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018416889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018418417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018420097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018421722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018423681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9589999999992946e-06, 'source_diff': 1.9589999999992946e-06}, {'time': 0.018425653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018427167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018428806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018430583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7770000000014163e-06, 'source_diff': 1.7770000000014163e-06}, {'time': 0.018432292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018433917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018435417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018436917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018438542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018440431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018442361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018444278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018445833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5549999999968367e-06, 'source_diff': 1.5549999999968367e-06}, {'time': 0.018447472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018449014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018450653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018452458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018454139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018456083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018457597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.018459653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.05600000000028e-06, 'source_diff': 2.05600000000028e-06}, {'time': 0.018461597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.01846325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018464931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018466833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.901999999998072e-06, 'source_diff': 1.901999999998072e-06}, {'time': 0.018468292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.459000000002264e-06, 'source_diff': 1.459000000002264e-06}, {'time': 0.018469931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018471597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018473056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.459000000002264e-06, 'source_diff': 1.459000000002264e-06}, {'time': 0.01847525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1939999999970317e-06, 'source_diff': 2.1939999999970317e-06}, {'time': 0.018477153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018478625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018480528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018482458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018484278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018485764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018487569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018489403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.834000000002639e-06, 'source_diff': 1.834000000002639e-06}, {'time': 0.018491431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0279999999976706e-06, 'source_diff': 2.0279999999976706e-06}, {'time': 0.018493125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018494778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018496514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:34.235" endtime="20201112 09:53:34.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.231" endtime="20201112 09:53:34.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:34.253" level="INFO">${debug-compressed} = {'time': [0.018411542, 0.0184135, 0.018415319, 0.018416889, 0.018418417, 0.018420097, 0.018421722, 0.018423681, 0.018425653, 0.018427167, 0.018428806, 0.018430583, 0.018432292, 0.018433917, 0.01843541...</msg>
<status status="PASS" starttime="20201112 09:53:34.240" endtime="20201112 09:53:34.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.257" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:34.256" endtime="20201112 09:53:34.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.260" level="INFO">VALUE: {'time': [0.018411542, 0.0184135, 0.018415319, 0.018416889, 0.018418417, 0.018420097, 0.018421722, 0.018423681, 0.018425653, 0.018427167, 0.018428806, 0.018430583, 0.018432292, 0.018433917, 0.018435417, 0.018436917, 0.018438542, 0.018440431, 0.018442361, 0.018444278, 0.018445833, 0.018447472, 0.018449014, 0.018450653, 0.018452458, 0.018454139, 0.018456083, 0.018457597, 0.018459653, 0.018461597, 0.01846325, 0.018464931, 0.018466833, 0.018468292, 0.018469931, 0.018471597, 0.018473056, 0.01847525, 0.018477153, 0.018478625, 0.018480528, 0.018482458, 0.018484278, 0.018485764, 0.018487569, 0.018489403, 0.018491431, 0.018493125, 0.018494778, 0.018496514], 'eventsource_diff': [0, 1.957999999999821e-06, 1.819000000000126e-06, 1.5699999999993497e-06, 1.52800000000064e-06, 1.6800000000004311e-06, 1.6250000000016251e-06, 1.9589999999992946e-06, 1.971999999999391e-06, 1.51400000000107e-06, 1.6389999999977256e-06, 1.7770000000014163e-06, 1.7089999999990446e-06, 1.6250000000016251e-06, 1.4999999999980307e-06, 1.5000000000015001e-06, 1.6249999999981557e-06, 1.889000000001445e-06, 1.930000000000681e-06, 1.917000000000585e-06, 1.5549999999968367e-06, 1.639000000001195e-06, 1.5420000000002099e-06, 1.639000000001195e-06, 1.8050000000005562e-06, 1.6809999999999048e-06, 1.944000000000251e-06, 1.5139999999976006e-06, 2.05600000000028e-06, 1.944000000000251e-06, 1.653000000000765e-06, 1.6809999999999048e-06, 1.901999999998072e-06, 1.459000000002264e-06, 1.6389999999977256e-06, 1.6660000000008612e-06, 1.459000000002264e-06, 2.1939999999970317e-06, 1.903000000001015e-06, 1.4719999999988909e-06, 1.903000000001015e-06, 1.930000000000681e-06, 1.8199999999995997e-06, 1.4859999999984608e-06, 1.8050000000005562e-06, 1.834000000002639e-06, 2.0279999999976706e-06, 1.694000000000001e-06, 1.653000000000765e-06, 1.7359999999987108e-06], 'sourcediff': [0, 1.957999999999821e-06, 1.819000000000126e-06, 1.5699999999993497e-06, 1.52800000000064e-06, 1.6800000000004311e-06, 1.6250000000016251e-06, 1.9589999999992946e-06, 1.971999999999391e-06, 1.51400000000107e-06, 1.6389999999977256e-06, 1.7770000000014163e-06, 1.7089999999990446e-06, 1.6250000000016251e-06, 1.4999999999980307e-06, 1.5000000000015001e-06, 1.6249999999981557e-06, 1.889000000001445e-06, 1.930000000000681e-06, 1.917000000000585e-06, 1.5549999999968367e-06, 1.639000000001195e-06, 1.5420000000002099e-06, 1.639000000001195e-06, 1.8050000000005562e-06, 1.6809999999999048e-06, 1.944000000000251e-06, 1.5139999999976006e-06, 2.05600000000028e-06, 1.944000000000251e-06, 1.653000000000765e-06, 1.6809999999999048e-06, 1.901999999998072e-06, 1.459000000002264e-06, 1.6389999999977256e-06, 1.6660000000008612e-06, 1.459000000002264e-06, 2.1939999999970317e-06, 1.903000000001015e-06, 1.4719999999988909e-06, 1.903000000001015e-06, 1.930000000000681e-06, 1.8199999999995997e-06, 1.4859999999984608e-06, 1.8050000000005562e-06, 1.834000000002639e-06, 2.0279999999976706e-06, 1.694000000000001e-06, 1.653000000000765e-06, 1.7359999999987108e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:34.258" endtime="20201112 09:53:34.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.254" endtime="20201112 09:53:34.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:34.265" level="INFO">${RESULT} = [{'time': 0.0184135, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018416889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:53:34.262" endtime="20201112 09:53:34.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:34.272" level="INFO">${GPIO_OVERHEAD} = {'time': [0.0184135, 0.018416889, 0.018420097, 0.018423681, 0.018427167, 0.018430583, 0.018433917, 0.018436917, 0.018440431, 0.018444278, 0.018447472, 0.018450653, 0.018454139, 0.018457597, 0.01846159...</msg>
<status status="PASS" starttime="20201112 09:53:34.266" endtime="20201112 09:53:34.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.277" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:34.276" endtime="20201112 09:53:34.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.279" level="INFO">VALUE: [1.957999999999821e-06, 1.5699999999993497e-06, 1.6800000000004311e-06, 1.9589999999992946e-06, 1.51400000000107e-06, 1.7770000000014163e-06, 1.6250000000016251e-06, 1.5000000000015001e-06, 1.889000000001445e-06, 1.917000000000585e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6809999999999048e-06, 1.5139999999976006e-06, 1.944000000000251e-06, 1.6809999999999048e-06, 1.459000000002264e-06, 1.6660000000008612e-06, 2.1939999999970317e-06, 1.4719999999988909e-06, 1.930000000000681e-06, 1.4859999999984608e-06, 1.834000000002639e-06, 1.694000000000001e-06, 1.7359999999987108e-06]</msg>
<status status="PASS" starttime="20201112 09:53:34.278" endtime="20201112 09:53:34.280"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.273" endtime="20201112 09:53:34.280"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.282" endtime="20201112 09:53:34.284"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:34.286" endtime="20201112 09:53:34.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.284" endtime="20201112 09:53:34.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.281" endtime="20201112 09:53:34.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.925" endtime="20201112 09:53:34.307"></status>
</kw>
<msg timestamp="20201112 09:53:34.307" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.315" endtime="20201112 09:53:34.324"></status>
</kw>
<msg timestamp="20201112 09:53:34.325" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:34.313" endtime="20201112 09:53:34.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.327" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:34.326" endtime="20201112 09:53:34.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.328" endtime="20201112 09:53:34.330"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.310" endtime="20201112 09:53:34.330"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.309" endtime="20201112 09:53:34.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.337" endtime="20201112 09:53:34.605"></status>
</kw>
<msg timestamp="20201112 09:53:34.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019027722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019029569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:34.336" endtime="20201112 09:53:34.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019027722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019029569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:34.608" endtime="20201112 09:53:34.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.614" endtime="20201112 09:53:34.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.333" endtime="20201112 09:53:34.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.331" endtime="20201112 09:53:34.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.620" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:34.619" endtime="20201112 09:53:34.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.624" level="INFO">VALUE: [{'time': 0.019027722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019029569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019031431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.862000000001779e-06, 'source_diff': 1.862000000001779e-06}, {'time': 0.019033306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.019035181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.019036792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.019038861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.069000000000376e-06, 'source_diff': 2.069000000000376e-06}, {'time': 0.019040556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.019042194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.637999999998252e-06, 'source_diff': 1.637999999998252e-06}, {'time': 0.019044069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.019045806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7369999999981844e-06, 'source_diff': 1.7369999999981844e-06}, {'time': 0.019047569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7630000000018464e-06, 'source_diff': 1.7630000000018464e-06}, {'time': 0.019049194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.019051194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.019053181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9869999999984345e-06, 'source_diff': 1.9869999999984345e-06}, {'time': 0.019055111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.019056736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.019058458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.019059958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.019061472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.019063167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.019065153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.019066694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5409999999972668e-06, 'source_diff': 1.5409999999972668e-06}, {'time': 0.019068514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8200000000030692e-06, 'source_diff': 1.8200000000030692e-06}, {'time': 0.019070139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.01907175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.019073556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.019075361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.019077, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.019078667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.019080389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.019082069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.019083667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.019085194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5270000000011663e-06, 'source_diff': 1.5270000000011663e-06}, {'time': 0.019086806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6120000000015289e-06, 'source_diff': 1.6120000000015289e-06}, {'time': 0.019088681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.019090514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.019092278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.019093931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.019095903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.019097639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.019099306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.019101042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.019102667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.019104667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.019106694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0270000000016664e-06, 'source_diff': 2.0270000000016664e-06}, {'time': 0.019108333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.019110194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.019111639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.019113167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:34.621" endtime="20201112 09:53:34.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.617" endtime="20201112 09:53:34.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:34.639" level="INFO">${debug-compressed} = {'time': [0.019027722, 0.019029569, 0.019031431, 0.019033306, 0.019035181, 0.019036792, 0.019038861, 0.019040556, 0.019042194, 0.019044069, 0.019045806, 0.019047569, 0.019049194, 0.019051194, 0.019053...</msg>
<status status="PASS" starttime="20201112 09:53:34.626" endtime="20201112 09:53:34.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.643" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:34.642" endtime="20201112 09:53:34.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.646" level="INFO">VALUE: {'time': [0.019027722, 0.019029569, 0.019031431, 0.019033306, 0.019035181, 0.019036792, 0.019038861, 0.019040556, 0.019042194, 0.019044069, 0.019045806, 0.019047569, 0.019049194, 0.019051194, 0.019053181, 0.019055111, 0.019056736, 0.019058458, 0.019059958, 0.019061472, 0.019063167, 0.019065153, 0.019066694, 0.019068514, 0.019070139, 0.01907175, 0.019073556, 0.019075361, 0.019077, 0.019078667, 0.019080389, 0.019082069, 0.019083667, 0.019085194, 0.019086806, 0.019088681, 0.019090514, 0.019092278, 0.019093931, 0.019095903, 0.019097639, 0.019099306, 0.019101042, 0.019102667, 0.019104667, 0.019106694, 0.019108333, 0.019110194, 0.019111639, 0.019113167], 'eventsource_diff': [0, 1.846999999999266e-06, 1.862000000001779e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.6109999999985858e-06, 2.069000000000376e-06, 1.6949999999994747e-06, 1.637999999998252e-06, 1.8750000000018752e-06, 1.7369999999981844e-06, 1.7630000000018464e-06, 1.6249999999981557e-06, 2.000000000002e-06, 1.9869999999984345e-06, 1.930000000000681e-06, 1.6250000000016251e-06, 1.7219999999991409e-06, 1.4999999999980307e-06, 1.51400000000107e-06, 1.6949999999994747e-06, 1.9860000000024303e-06, 1.5409999999972668e-06, 1.8200000000030692e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.8060000000000298e-06, 1.8050000000005562e-06, 1.639000000001195e-06, 1.6670000000003349e-06, 1.7219999999991409e-06, 1.6800000000004311e-06, 1.5979999999984895e-06, 1.5270000000011663e-06, 1.6120000000015289e-06, 1.8749999999984057e-06, 1.832999999999696e-06, 1.76400000000132e-06, 1.653000000000765e-06, 1.971999999999391e-06, 1.7359999999987108e-06, 1.6670000000003349e-06, 1.7359999999987108e-06, 1.6250000000016251e-06, 1.9999999999985307e-06, 2.0270000000016664e-06, 1.639000000001195e-06, 1.8609999999988358e-06, 1.4449999999992247e-06, 1.52800000000064e-06], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 1.846999999999266e-06, 1.862000000001779e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.6109999999985858e-06, 2.069000000000376e-06, 1.6949999999994747e-06, 1.637999999998252e-06, 1.8750000000018752e-06, 1.7369999999981844e-06, 1.7630000000018464e-06, 1.6249999999981557e-06, 2.000000000002e-06, 1.9869999999984345e-06, 1.930000000000681e-06, 1.6250000000016251e-06, 1.7219999999991409e-06, 1.4999999999980307e-06, 1.51400000000107e-06, 1.6949999999994747e-06, 1.9860000000024303e-06, 1.5409999999972668e-06, 1.8200000000030692e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.8060000000000298e-06, 1.8050000000005562e-06, 1.639000000001195e-06, 1.6670000000003349e-06, 1.7219999999991409e-06, 1.6800000000004311e-06, 1.5979999999984895e-06, 1.5270000000011663e-06, 1.6120000000015289e-06, 1.8749999999984057e-06, 1.832999999999696e-06, 1.76400000000132e-06, 1.653000000000765e-06, 1.971999999999391e-06, 1.7359999999987108e-06, 1.6670000000003349e-06, 1.7359999999987108e-06, 1.6250000000016251e-06, 1.9999999999985307e-06, 2.0270000000016664e-06, 1.639000000001195e-06, 1.8609999999988358e-06, 1.4449999999992247e-06, 1.52800000000064e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:34.644" endtime="20201112 09:53:34.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.640" endtime="20201112 09:53:34.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:34.650" level="INFO">${RESULT} = [{'time': 0.019029569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019033306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:34.648" endtime="20201112 09:53:34.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:34.658" level="INFO">${GPIO_OVERHEAD} = {'time': [0.019029569, 0.019033306, 0.019036792, 0.019040556, 0.019044069, 0.019047569, 0.019051194, 0.019055111, 0.019058458, 0.019061472, 0.019065153, 0.019068514, 0.01907175, 0.019075361, 0.0190786...</msg>
<status status="PASS" starttime="20201112 09:53:34.651" endtime="20201112 09:53:34.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.662" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:34.661" endtime="20201112 09:53:34.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.664" level="INFO">VALUE: [1.846999999999266e-06, 1.8749999999984057e-06, 1.6109999999985858e-06, 1.6949999999994747e-06, 1.8750000000018752e-06, 1.7630000000018464e-06, 2.000000000002e-06, 1.930000000000681e-06, 1.7219999999991409e-06, 1.51400000000107e-06, 1.9860000000024303e-06, 1.8200000000030692e-06, 1.6109999999985858e-06, 1.8050000000005562e-06, 1.6670000000003349e-06, 1.6800000000004311e-06, 1.5270000000011663e-06, 1.8749999999984057e-06, 1.76400000000132e-06, 1.971999999999391e-06, 1.6670000000003349e-06, 1.6250000000016251e-06, 2.0270000000016664e-06, 1.8609999999988358e-06, 1.52800000000064e-06]</msg>
<status status="PASS" starttime="20201112 09:53:34.663" endtime="20201112 09:53:34.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.659" endtime="20201112 09:53:34.666"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.668" endtime="20201112 09:53:34.669"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:34.671" endtime="20201112 09:53:34.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.670" endtime="20201112 09:53:34.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.666" endtime="20201112 09:53:34.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.307" endtime="20201112 09:53:34.693"></status>
</kw>
<msg timestamp="20201112 09:53:34.693" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.701" endtime="20201112 09:53:34.711"></status>
</kw>
<msg timestamp="20201112 09:53:34.711" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:34.699" endtime="20201112 09:53:34.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.714" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:34.712" endtime="20201112 09:53:34.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.715" endtime="20201112 09:53:34.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.696" endtime="20201112 09:53:34.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.695" endtime="20201112 09:53:34.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.724" endtime="20201112 09:53:34.989"></status>
</kw>
<msg timestamp="20201112 09:53:34.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019266014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019267542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:34.722" endtime="20201112 09:53:34.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019266014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019267542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:34.992" endtime="20201112 09:53:34.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.997" endtime="20201112 09:53:34.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.720" endtime="20201112 09:53:34.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.718" endtime="20201112 09:53:35.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.003" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:35.002" endtime="20201112 09:53:35.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.007" level="INFO">VALUE: [{'time': 0.019266014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019267542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5279999999971705e-06, 'source_diff': 1.5279999999971705e-06}, {'time': 0.019269306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.019270833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5270000000011663e-06, 'source_diff': 1.5270000000011663e-06}, {'time': 0.019272611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.019274597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.019276222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.019277736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.019279264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.019280944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.019282736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.01928475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.019286514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.019288028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.019289903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.019291806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.019293514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.019295472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.019297319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019299125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.019300736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.019302472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.019304111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.019305903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.019307611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.019309097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.019310861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.019312403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.019313958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.019315667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.709000000002514e-06, 'source_diff': 1.709000000002514e-06}, {'time': 0.019317222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5549999999968367e-06, 'source_diff': 1.5549999999968367e-06}, {'time': 0.019319042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8200000000030692e-06, 'source_diff': 1.8200000000030692e-06}, {'time': 0.019320778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.019322347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.019324333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.01932625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.019327972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.019329944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.019331708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.019333597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.019335583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.019337278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.019339222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.019340792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.019342639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019344542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.019346056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.019347917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.019349889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.019351556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:35.005" endtime="20201112 09:53:35.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.000" endtime="20201112 09:53:35.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:35.022" level="INFO">${debug-compressed} = {'time': [0.019266014, 0.019267542, 0.019269306, 0.019270833, 0.019272611, 0.019274597, 0.019276222, 0.019277736, 0.019279264, 0.019280944, 0.019282736, 0.01928475, 0.019286514, 0.019288028, 0.0192899...</msg>
<status status="PASS" starttime="20201112 09:53:35.009" endtime="20201112 09:53:35.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.026" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:35.025" endtime="20201112 09:53:35.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.029" level="INFO">VALUE: {'time': [0.019266014, 0.019267542, 0.019269306, 0.019270833, 0.019272611, 0.019274597, 0.019276222, 0.019277736, 0.019279264, 0.019280944, 0.019282736, 0.01928475, 0.019286514, 0.019288028, 0.019289903, 0.019291806, 0.019293514, 0.019295472, 0.019297319, 0.019299125, 0.019300736, 0.019302472, 0.019304111, 0.019305903, 0.019307611, 0.019309097, 0.019310861, 0.019312403, 0.019313958, 0.019315667, 0.019317222, 0.019319042, 0.019320778, 0.019322347, 0.019324333, 0.01932625, 0.019327972, 0.019329944, 0.019331708, 0.019333597, 0.019335583, 0.019337278, 0.019339222, 0.019340792, 0.019342639, 0.019344542, 0.019346056, 0.019347917, 0.019349889, 0.019351556], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 1.5279999999971705e-06, 1.76400000000132e-06, 1.5270000000011663e-06, 1.7779999999974205e-06, 1.9860000000024303e-06, 1.6249999999981557e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.6800000000004311e-06, 1.7920000000004599e-06, 2.0139999999981006e-06, 1.76400000000132e-06, 1.5139999999976006e-06, 1.8750000000018752e-06, 1.903000000001015e-06, 1.707999999999571e-06, 1.957999999999821e-06, 1.846999999999266e-06, 1.8060000000000298e-06, 1.6109999999985858e-06, 1.7360000000021802e-06, 1.6389999999977256e-06, 1.7920000000004599e-06, 1.707999999999571e-06, 1.4860000000019302e-06, 1.7639999999978506e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.709000000002514e-06, 1.5549999999968367e-06, 1.8200000000030692e-06, 1.7359999999987108e-06, 1.568999999999876e-06, 1.985999999998961e-06, 1.917000000000585e-06, 1.7219999999991409e-06, 1.9720000000028604e-06, 1.7639999999978506e-06, 1.889000000001445e-06, 1.985999999998961e-06, 1.6949999999994747e-06, 1.944000000000251e-06, 1.5699999999993497e-06, 1.846999999999266e-06, 1.903000000001015e-06, 1.51400000000107e-06, 1.8609999999988358e-06, 1.971999999999391e-06, 1.6670000000003349e-06], 'sourcediff': [0, 1.5279999999971705e-06, 1.76400000000132e-06, 1.5270000000011663e-06, 1.7779999999974205e-06, 1.9860000000024303e-06, 1.6249999999981557e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.6800000000004311e-06, 1.7920000000004599e-06, 2.0139999999981006e-06, 1.76400000000132e-06, 1.5139999999976006e-06, 1.8750000000018752e-06, 1.903000000001015e-06, 1.707999999999571e-06, 1.957999999999821e-06, 1.846999999999266e-06, 1.8060000000000298e-06, 1.6109999999985858e-06, 1.7360000000021802e-06, 1.6389999999977256e-06, 1.7920000000004599e-06, 1.707999999999571e-06, 1.4860000000019302e-06, 1.7639999999978506e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.709000000002514e-06, 1.5549999999968367e-06, 1.8200000000030692e-06, 1.7359999999987108e-06, 1.568999999999876e-06, 1.985999999998961e-06, 1.917000000000585e-06, 1.7219999999991409e-06, 1.9720000000028604e-06, 1.7639999999978506e-06, 1.889000000001445e-06, 1.985999999998961e-06, 1.6949999999994747e-06, 1.944000000000251e-06, 1.5699999999993497e-06, 1.846999999999266e-06, 1.903000000001015e-06, 1.51400000000107e-06, 1.8609999999988358e-06, 1.971999999999391e-06, 1.6670000000003349e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:35.027" endtime="20201112 09:53:35.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.023" endtime="20201112 09:53:35.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:35.033" level="INFO">${RESULT} = [{'time': 0.019267542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5279999999971705e-06, 'source_diff': 1.5279999999971705e-06}, {'time': 0.019270833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:35.031" endtime="20201112 09:53:35.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:35.042" level="INFO">${GPIO_OVERHEAD} = {'time': [0.019267542, 0.019270833, 0.019274597, 0.019277736, 0.019280944, 0.01928475, 0.019288028, 0.019291806, 0.019295472, 0.019299125, 0.019302472, 0.019305903, 0.019309097, 0.019312403, 0.0193156...</msg>
<status status="PASS" starttime="20201112 09:53:35.034" endtime="20201112 09:53:35.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.046" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:35.045" endtime="20201112 09:53:35.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.048" level="INFO">VALUE: [1.5279999999971705e-06, 1.5270000000011663e-06, 1.9860000000024303e-06, 1.51400000000107e-06, 1.6800000000004311e-06, 2.0139999999981006e-06, 1.5139999999976006e-06, 1.903000000001015e-06, 1.957999999999821e-06, 1.8060000000000298e-06, 1.7360000000021802e-06, 1.7920000000004599e-06, 1.4860000000019302e-06, 1.5420000000002099e-06, 1.709000000002514e-06, 1.8200000000030692e-06, 1.568999999999876e-06, 1.917000000000585e-06, 1.9720000000028604e-06, 1.889000000001445e-06, 1.6949999999994747e-06, 1.5699999999993497e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.6670000000003349e-06]</msg>
<status status="PASS" starttime="20201112 09:53:35.047" endtime="20201112 09:53:35.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.043" endtime="20201112 09:53:35.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.052" endtime="20201112 09:53:35.053"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:35.055" endtime="20201112 09:53:35.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.054" endtime="20201112 09:53:35.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.050" endtime="20201112 09:53:35.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.693" endtime="20201112 09:53:35.076"></status>
</kw>
<msg timestamp="20201112 09:53:35.076" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.084" endtime="20201112 09:53:35.093"></status>
</kw>
<msg timestamp="20201112 09:53:35.094" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:35.082" endtime="20201112 09:53:35.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.096" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:35.095" endtime="20201112 09:53:35.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.098" endtime="20201112 09:53:35.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.079" endtime="20201112 09:53:35.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.078" endtime="20201112 09:53:35.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.106" endtime="20201112 09:53:35.371"></status>
</kw>
<msg timestamp="20201112 09:53:35.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018449972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018451889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:35.105" endtime="20201112 09:53:35.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018449972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018451889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:35.374" endtime="20201112 09:53:35.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.379" endtime="20201112 09:53:35.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.102" endtime="20201112 09:53:35.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.101" endtime="20201112 09:53:35.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.386" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:35.385" endtime="20201112 09:53:35.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.389" level="INFO">VALUE: [{'time': 0.018449972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018451889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018453556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018455347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.018456958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018458958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018460792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.018462667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018464208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}, {'time': 0.018465833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.01846775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018469333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018470792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4589999999987946e-06, 'source_diff': 1.4589999999987946e-06}, {'time': 0.018472833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0410000000012363e-06, 'source_diff': 2.0410000000012363e-06}, {'time': 0.018474375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018476403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0279999999976706e-06, 'source_diff': 2.0279999999976706e-06}, {'time': 0.018478431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018480306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018482014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7080000000030404e-06, 'source_diff': 1.7080000000030404e-06}, {'time': 0.018484028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018487639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018489181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018490806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018492236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4300000000001811e-06, 'source_diff': 1.4300000000001811e-06}, {'time': 0.018494208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.018495694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018497486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018499264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018501111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018503097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018504833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018506458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.01850825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018510222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018511875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.01851375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018515556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018517472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.018519153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018520972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018522931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9589999999992946e-06, 'source_diff': 1.9589999999992946e-06}, {'time': 0.018524972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0410000000012363e-06, 'source_diff': 2.0410000000012363e-06}, {'time': 0.018526611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018528278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018530319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0410000000012363e-06, 'source_diff': 2.0410000000012363e-06}, {'time': 0.018532222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018533847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018535542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.0185375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:35.387" endtime="20201112 09:53:35.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.382" endtime="20201112 09:53:35.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:35.405" level="INFO">${debug-compressed} = {'time': [0.018449972, 0.018451889, 0.018453556, 0.018455347, 0.018456958, 0.018458958, 0.018460792, 0.018462667, 0.018464208, 0.018465833, 0.01846775, 0.018469333, 0.018470792, 0.018472833, 0.0184743...</msg>
<status status="PASS" starttime="20201112 09:53:35.391" endtime="20201112 09:53:35.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.409" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:35.408" endtime="20201112 09:53:35.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.412" level="INFO">VALUE: {'time': [0.018449972, 0.018451889, 0.018453556, 0.018455347, 0.018456958, 0.018458958, 0.018460792, 0.018462667, 0.018464208, 0.018465833, 0.01846775, 0.018469333, 0.018470792, 0.018472833, 0.018474375, 0.018476403, 0.018478431, 0.018480306, 0.018482014, 0.018484028, 0.018486, 0.018487639, 0.018489181, 0.018490806, 0.018492236, 0.018494208, 0.018495694, 0.018497486, 0.018499264, 0.018501111, 0.018503097, 0.018504833, 0.018506458, 0.01850825, 0.018510222, 0.018511875, 0.01851375, 0.018515556, 0.018517472, 0.018519153, 0.018520972, 0.018522931, 0.018524972, 0.018526611, 0.018528278, 0.018530319, 0.018532222, 0.018533847, 0.018535542, 0.0185375], 'eventsource_diff': [0, 1.917000000000585e-06, 1.6670000000003349e-06, 1.7910000000009862e-06, 1.6109999999985858e-06, 2.000000000002e-06, 1.8339999999991696e-06, 1.8749999999984057e-06, 1.5410000000007362e-06, 1.6250000000016251e-06, 1.917000000000585e-06, 1.582999999999446e-06, 1.4589999999987946e-06, 2.0410000000012363e-06, 1.5420000000002099e-06, 2.0279999999976706e-06, 2.02800000000114e-06, 1.8749999999984057e-06, 1.7080000000030404e-06, 2.0139999999981006e-06, 1.971999999999391e-06, 1.639000000001195e-06, 1.5420000000002099e-06, 1.6249999999981557e-06, 1.4300000000001811e-06, 1.9720000000028604e-06, 1.4859999999984608e-06, 1.7920000000004599e-06, 1.77800000000089e-06, 1.846999999999266e-06, 1.985999999998961e-06, 1.7359999999987108e-06, 1.6250000000016251e-06, 1.7920000000004599e-06, 1.971999999999391e-06, 1.653000000000765e-06, 1.8749999999984057e-06, 1.8060000000000298e-06, 1.9160000000011113e-06, 1.6809999999999048e-06, 1.819000000000126e-06, 1.9589999999992946e-06, 2.0410000000012363e-06, 1.6389999999977256e-06, 1.6670000000003349e-06, 2.0410000000012363e-06, 1.903000000001015e-06, 1.6249999999981557e-06, 1.6949999999994747e-06, 1.957999999999821e-06], 'sourcediff': [0, 1.917000000000585e-06, 1.6670000000003349e-06, 1.7910000000009862e-06, 1.6109999999985858e-06, 2.000000000002e-06, 1.8339999999991696e-06, 1.8749999999984057e-06, 1.5410000000007362e-06, 1.6250000000016251e-06, 1.917000000000585e-06, 1.582999999999446e-06, 1.4589999999987946e-06, 2.0410000000012363e-06, 1.5420000000002099e-06, 2.0279999999976706e-06, 2.02800000000114e-06, 1.8749999999984057e-06, 1.7080000000030404e-06, 2.0139999999981006e-06, 1.971999999999391e-06, 1.639000000001195e-06, 1.5420000000002099e-06, 1.6249999999981557e-06, 1.4300000000001811e-06, 1.9720000000028604e-06, 1.4859999999984608e-06, 1.7920000000004599e-06, 1.77800000000089e-06, 1.846999999999266e-06, 1.985999999998961e-06, 1.7359999999987108e-06, 1.6250000000016251e-06, 1.7920000000004599e-06, 1.971999999999391e-06, 1.653000000000765e-06, 1.8749999999984057e-06, 1.8060000000000298e-06, 1.9160000000011113e-06, 1.6809999999999048e-06, 1.819000000000126e-06, 1.9589999999992946e-06, 2.0410000000012363e-06, 1.6389999999977256e-06, 1.6670000000003349e-06, 2.0410000000012363e-06, 1.903000000001015e-06, 1.6249999999981557e-06, 1.6949999999994747e-06, 1.957999999999821e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:35.410" endtime="20201112 09:53:35.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.406" endtime="20201112 09:53:35.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:35.417" level="INFO">${RESULT} = [{'time': 0.018451889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018455347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:35.414" endtime="20201112 09:53:35.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:35.425" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018451889, 0.018455347, 0.018458958, 0.018462667, 0.018465833, 0.018469333, 0.018472833, 0.018476403, 0.018480306, 0.018484028, 0.018487639, 0.018490806, 0.018494208, 0.018497486, 0.018501...</msg>
<status status="PASS" starttime="20201112 09:53:35.418" endtime="20201112 09:53:35.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.429" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:35.428" endtime="20201112 09:53:35.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.431" level="INFO">VALUE: [1.917000000000585e-06, 1.7910000000009862e-06, 2.000000000002e-06, 1.8749999999984057e-06, 1.6250000000016251e-06, 1.582999999999446e-06, 2.0410000000012363e-06, 2.0279999999976706e-06, 1.8749999999984057e-06, 2.0139999999981006e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.9720000000028604e-06, 1.7920000000004599e-06, 1.846999999999266e-06, 1.7359999999987108e-06, 1.7920000000004599e-06, 1.653000000000765e-06, 1.8060000000000298e-06, 1.6809999999999048e-06, 1.9589999999992946e-06, 1.6389999999977256e-06, 2.0410000000012363e-06, 1.6249999999981557e-06, 1.957999999999821e-06]</msg>
<status status="PASS" starttime="20201112 09:53:35.430" endtime="20201112 09:53:35.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.425" endtime="20201112 09:53:35.432"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.435" endtime="20201112 09:53:35.436"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:35.438" endtime="20201112 09:53:35.457"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.436" endtime="20201112 09:53:35.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.433" endtime="20201112 09:53:35.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.077" endtime="20201112 09:53:35.459"></status>
</kw>
<msg timestamp="20201112 09:53:35.459" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.466" endtime="20201112 09:53:35.476"></status>
</kw>
<msg timestamp="20201112 09:53:35.476" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:35.465" endtime="20201112 09:53:35.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.478" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:35.477" endtime="20201112 09:53:35.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.479" endtime="20201112 09:53:35.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.462" endtime="20201112 09:53:35.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.461" endtime="20201112 09:53:35.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.489" endtime="20201112 09:53:35.752"></status>
</kw>
<msg timestamp="20201112 09:53:35.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018260389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018262083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:35.487" endtime="20201112 09:53:35.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018260389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018262083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:35.755" endtime="20201112 09:53:35.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.761" endtime="20201112 09:53:35.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.485" endtime="20201112 09:53:35.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.483" endtime="20201112 09:53:35.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.768" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:35.767" endtime="20201112 09:53:35.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.772" level="INFO">VALUE: [{'time': 0.018260389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018262083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018263806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.723000000002084e-06, 'source_diff': 1.723000000002084e-06}, {'time': 0.0182655, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018267014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018268556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5419999999967404e-06, 'source_diff': 1.5419999999967404e-06}, {'time': 0.018270194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6380000000017214e-06, 'source_diff': 1.6380000000017214e-06}, {'time': 0.018271958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018273972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018275542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018277556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.018279347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.018281139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7919999999969904e-06, 'source_diff': 1.7919999999969904e-06}, {'time': 0.018282903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018284708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018286417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018288153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018290139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018291986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018293806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018295778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018297458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018299, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018301, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.0183025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018304458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018306194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018307708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.018309222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018311153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018312806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018314639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018316611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018318611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018320583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.018322042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4589999999987946e-06, 'source_diff': 1.4589999999987946e-06}, {'time': 0.018323736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018325486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018327153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018328931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018330861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018332833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018334833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018336431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.018338014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018339806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018341625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018343111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018344833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.018346736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:35.769" endtime="20201112 09:53:35.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.765" endtime="20201112 09:53:35.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:35.786" level="INFO">${debug-compressed} = {'time': [0.018260389, 0.018262083, 0.018263806, 0.0182655, 0.018267014, 0.018268556, 0.018270194, 0.018271958, 0.018273972, 0.018275542, 0.018277556, 0.018279347, 0.018281139, 0.018282903, 0.01828470...</msg>
<status status="PASS" starttime="20201112 09:53:35.774" endtime="20201112 09:53:35.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.790" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:35.789" endtime="20201112 09:53:35.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.793" level="INFO">VALUE: {'time': [0.018260389, 0.018262083, 0.018263806, 0.0182655, 0.018267014, 0.018268556, 0.018270194, 0.018271958, 0.018273972, 0.018275542, 0.018277556, 0.018279347, 0.018281139, 0.018282903, 0.018284708, 0.018286417, 0.018288153, 0.018290139, 0.018291986, 0.018293806, 0.018295778, 0.018297458, 0.018299, 0.018301, 0.0183025, 0.018304458, 0.018306194, 0.018307708, 0.018309222, 0.018311153, 0.018312806, 0.018314639, 0.018316611, 0.018318611, 0.018320583, 0.018322042, 0.018323736, 0.018325486, 0.018327153, 0.018328931, 0.018330861, 0.018332833, 0.018334833, 0.018336431, 0.018338014, 0.018339806, 0.018341625, 0.018343111, 0.018344833, 0.018346736], 'eventsource_diff': [0, 1.694000000000001e-06, 1.723000000002084e-06, 1.694000000000001e-06, 1.51400000000107e-06, 1.5419999999967404e-06, 1.6380000000017214e-06, 1.76400000000132e-06, 2.0139999999981006e-06, 1.5699999999993497e-06, 2.01400000000157e-06, 1.7910000000009862e-06, 1.7919999999969904e-06, 1.76400000000132e-06, 1.8050000000005562e-06, 1.7089999999990446e-06, 1.7360000000021802e-06, 1.985999999998961e-06, 1.846999999999266e-06, 1.8199999999995997e-06, 1.971999999999391e-06, 1.6800000000004311e-06, 1.5420000000002099e-06, 2.000000000002e-06, 1.4999999999980307e-06, 1.957999999999821e-06, 1.7360000000021802e-06, 1.5139999999976006e-06, 1.51400000000107e-06, 1.931000000000155e-06, 1.653000000000765e-06, 1.832999999999696e-06, 1.971999999999391e-06, 1.9999999999985307e-06, 1.9720000000028604e-06, 1.4589999999987946e-06, 1.694000000000001e-06, 1.7499999999982807e-06, 1.6670000000003349e-06, 1.77800000000089e-06, 1.930000000000681e-06, 1.971999999999391e-06, 1.9999999999985307e-06, 1.598000000001959e-06, 1.582999999999446e-06, 1.7920000000004599e-06, 1.819000000000126e-06, 1.4859999999984608e-06, 1.7220000000026103e-06, 1.9029999999975455e-06], 'sourcediff': [0, 1.694000000000001e-06, 1.723000000002084e-06, 1.694000000000001e-06, 1.51400000000107e-06, 1.5419999999967404e-06, 1.6380000000017214e-06, 1.76400000000132e-06, 2.0139999999981006e-06, 1.5699999999993497e-06, 2.01400000000157e-06, 1.7910000000009862e-06, 1.7919999999969904e-06, 1.76400000000132e-06, 1.8050000000005562e-06, 1.7089999999990446e-06, 1.7360000000021802e-06, 1.985999999998961e-06, 1.846999999999266e-06, 1.8199999999995997e-06, 1.971999999999391e-06, 1.6800000000004311e-06, 1.5420000000002099e-06, 2.000000000002e-06, 1.4999999999980307e-06, 1.957999999999821e-06, 1.7360000000021802e-06, 1.5139999999976006e-06, 1.51400000000107e-06, 1.931000000000155e-06, 1.653000000000765e-06, 1.832999999999696e-06, 1.971999999999391e-06, 1.9999999999985307e-06, 1.9720000000028604e-06, 1.4589999999987946e-06, 1.694000000000001e-06, 1.7499999999982807e-06, 1.6670000000003349e-06, 1.77800000000089e-06, 1.930000000000681e-06, 1.971999999999391e-06, 1.9999999999985307e-06, 1.598000000001959e-06, 1.582999999999446e-06, 1.7920000000004599e-06, 1.819000000000126e-06, 1.4859999999984608e-06, 1.7220000000026103e-06, 1.9029999999975455e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:35.791" endtime="20201112 09:53:35.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.787" endtime="20201112 09:53:35.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:35.798" level="INFO">${RESULT} = [{'time': 0.018262083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.0182655, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:53:35.795" endtime="20201112 09:53:35.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:35.806" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018262083, 0.0182655, 0.018268556, 0.018271958, 0.018275542, 0.018279347, 0.018282903, 0.018286417, 0.018290139, 0.018293806, 0.018297458, 0.018301, 0.018304458, 0.018307708, 0.018311153, ...</msg>
<status status="PASS" starttime="20201112 09:53:35.799" endtime="20201112 09:53:35.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.810" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:35.809" endtime="20201112 09:53:35.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.812" level="INFO">VALUE: [1.694000000000001e-06, 1.694000000000001e-06, 1.5419999999967404e-06, 1.76400000000132e-06, 1.5699999999993497e-06, 1.7910000000009862e-06, 1.76400000000132e-06, 1.7089999999990446e-06, 1.985999999998961e-06, 1.8199999999995997e-06, 1.6800000000004311e-06, 2.000000000002e-06, 1.957999999999821e-06, 1.5139999999976006e-06, 1.931000000000155e-06, 1.832999999999696e-06, 1.9999999999985307e-06, 1.4589999999987946e-06, 1.7499999999982807e-06, 1.77800000000089e-06, 1.971999999999391e-06, 1.598000000001959e-06, 1.7920000000004599e-06, 1.4859999999984608e-06, 1.9029999999975455e-06]</msg>
<status status="PASS" starttime="20201112 09:53:35.811" endtime="20201112 09:53:35.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.806" endtime="20201112 09:53:35.813"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.815" endtime="20201112 09:53:35.817"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:35.819" endtime="20201112 09:53:35.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.817" endtime="20201112 09:53:35.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.814" endtime="20201112 09:53:35.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.459" endtime="20201112 09:53:35.839"></status>
</kw>
<msg timestamp="20201112 09:53:35.840" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.847" endtime="20201112 09:53:35.856"></status>
</kw>
<msg timestamp="20201112 09:53:35.857" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:35.846" endtime="20201112 09:53:35.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.859" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:35.858" endtime="20201112 09:53:35.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.860" endtime="20201112 09:53:35.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.843" endtime="20201112 09:53:35.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.841" endtime="20201112 09:53:35.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.870" endtime="20201112 09:53:36.135"></status>
</kw>
<msg timestamp="20201112 09:53:36.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018265125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018266597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:35.869" endtime="20201112 09:53:36.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018265125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018266597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:36.138" endtime="20201112 09:53:36.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.143" endtime="20201112 09:53:36.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.865" endtime="20201112 09:53:36.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.863" endtime="20201112 09:53:36.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.149" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:36.148" endtime="20201112 09:53:36.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.153" level="INFO">VALUE: [{'time': 0.018265125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018266597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018268361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018270292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018272194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.901999999998072e-06, 'source_diff': 1.901999999998072e-06}, {'time': 0.018273889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6950000000029442e-06, 'source_diff': 1.6950000000029442e-06}, {'time': 0.018275722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.0182775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.018279319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018281306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.987000000001904e-06, 'source_diff': 1.987000000001904e-06}, {'time': 0.018282917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018284681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018286222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}, {'time': 0.018287792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018289514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018291042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.0182925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018294097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018295736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018297389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018299056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018300764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018302375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018304403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018305861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018307958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.096999999999516e-06, 'source_diff': 2.096999999999516e-06}, {'time': 0.018309889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018311708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018313639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018315333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018316944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018318444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018320431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.987000000001904e-06, 'source_diff': 1.987000000001904e-06}, {'time': 0.018322042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018323861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018325653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018327375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018329083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018330931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.848000000002209e-06, 'source_diff': 1.848000000002209e-06}, {'time': 0.018332792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018334444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6519999999978219e-06, 'source_diff': 1.6519999999978219e-06}, {'time': 0.018336111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018337792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018339361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018341361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018343194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018345153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9589999999992946e-06, 'source_diff': 1.9589999999992946e-06}, {'time': 0.018346833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018348486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018350333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:36.150" endtime="20201112 09:53:36.154"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.146" endtime="20201112 09:53:36.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:36.168" level="INFO">${debug-compressed} = {'time': [0.018265125, 0.018266597, 0.018268361, 0.018270292, 0.018272194, 0.018273889, 0.018275722, 0.0182775, 0.018279319, 0.018281306, 0.018282917, 0.018284681, 0.018286222, 0.018287792, 0.01828951...</msg>
<status status="PASS" starttime="20201112 09:53:36.155" endtime="20201112 09:53:36.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.172" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:36.171" endtime="20201112 09:53:36.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.175" level="INFO">VALUE: {'time': [0.018265125, 0.018266597, 0.018268361, 0.018270292, 0.018272194, 0.018273889, 0.018275722, 0.0182775, 0.018279319, 0.018281306, 0.018282917, 0.018284681, 0.018286222, 0.018287792, 0.018289514, 0.018291042, 0.0182925, 0.018294097, 0.018295736, 0.018297389, 0.018299056, 0.018300764, 0.018302375, 0.018304403, 0.018305861, 0.018307958, 0.018309889, 0.018311708, 0.018313639, 0.018315333, 0.018316944, 0.018318444, 0.018320431, 0.018322042, 0.018323861, 0.018325653, 0.018327375, 0.018329083, 0.018330931, 0.018332792, 0.018334444, 0.018336111, 0.018337792, 0.018339361, 0.018341361, 0.018343194, 0.018345153, 0.018346833, 0.018348486, 0.018350333], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 1.4719999999988909e-06, 1.76400000000132e-06, 1.931000000000155e-06, 1.901999999998072e-06, 1.6950000000029442e-06, 1.832999999999696e-06, 1.7779999999974205e-06, 1.819000000000126e-06, 1.987000000001904e-06, 1.6109999999985858e-06, 1.76400000000132e-06, 1.5410000000007362e-06, 1.5699999999993497e-06, 1.7219999999991409e-06, 1.52800000000064e-06, 1.457999999999321e-06, 1.5969999999990159e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6670000000003349e-06, 1.707999999999571e-06, 1.6109999999985858e-06, 2.02800000000114e-06, 1.457999999999321e-06, 2.096999999999516e-06, 1.931000000000155e-06, 1.819000000000126e-06, 1.931000000000155e-06, 1.694000000000001e-06, 1.6110000000020552e-06, 1.4999999999980307e-06, 1.987000000001904e-06, 1.6109999999985858e-06, 1.819000000000126e-06, 1.7920000000004599e-06, 1.7219999999991409e-06, 1.707999999999571e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.6519999999978219e-06, 1.6670000000003349e-06, 1.6809999999999048e-06, 1.568999999999876e-06, 2.000000000002e-06, 1.832999999999696e-06, 1.9589999999992946e-06, 1.6800000000004311e-06, 1.653000000000765e-06, 1.846999999999266e-06], 'sourcediff': [0, 1.4719999999988909e-06, 1.76400000000132e-06, 1.931000000000155e-06, 1.901999999998072e-06, 1.6950000000029442e-06, 1.832999999999696e-06, 1.7779999999974205e-06, 1.819000000000126e-06, 1.987000000001904e-06, 1.6109999999985858e-06, 1.76400000000132e-06, 1.5410000000007362e-06, 1.5699999999993497e-06, 1.7219999999991409e-06, 1.52800000000064e-06, 1.457999999999321e-06, 1.5969999999990159e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6670000000003349e-06, 1.707999999999571e-06, 1.6109999999985858e-06, 2.02800000000114e-06, 1.457999999999321e-06, 2.096999999999516e-06, 1.931000000000155e-06, 1.819000000000126e-06, 1.931000000000155e-06, 1.694000000000001e-06, 1.6110000000020552e-06, 1.4999999999980307e-06, 1.987000000001904e-06, 1.6109999999985858e-06, 1.819000000000126e-06, 1.7920000000004599e-06, 1.7219999999991409e-06, 1.707999999999571e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.6519999999978219e-06, 1.6670000000003349e-06, 1.6809999999999048e-06, 1.568999999999876e-06, 2.000000000002e-06, 1.832999999999696e-06, 1.9589999999992946e-06, 1.6800000000004311e-06, 1.653000000000765e-06, 1.846999999999266e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:36.173" endtime="20201112 09:53:36.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.169" endtime="20201112 09:53:36.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:36.179" level="INFO">${RESULT} = [{'time': 0.018266597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018270292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:36.176" endtime="20201112 09:53:36.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:36.187" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018266597, 0.018270292, 0.018273889, 0.0182775, 0.018281306, 0.018284681, 0.018287792, 0.018291042, 0.018294097, 0.018297389, 0.018300764, 0.018304403, 0.018307958, 0.018311708, 0.01831533...</msg>
<status status="PASS" starttime="20201112 09:53:36.180" endtime="20201112 09:53:36.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.191" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:36.190" endtime="20201112 09:53:36.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.193" level="INFO">VALUE: [1.4719999999988909e-06, 1.931000000000155e-06, 1.6950000000029442e-06, 1.7779999999974205e-06, 1.987000000001904e-06, 1.76400000000132e-06, 1.5699999999993497e-06, 1.52800000000064e-06, 1.5969999999990159e-06, 1.653000000000765e-06, 1.707999999999571e-06, 2.02800000000114e-06, 2.096999999999516e-06, 1.819000000000126e-06, 1.694000000000001e-06, 1.4999999999980307e-06, 1.6109999999985858e-06, 1.7920000000004599e-06, 1.707999999999571e-06, 1.8609999999988358e-06, 1.6670000000003349e-06, 1.568999999999876e-06, 1.832999999999696e-06, 1.6800000000004311e-06, 1.846999999999266e-06]</msg>
<status status="PASS" starttime="20201112 09:53:36.192" endtime="20201112 09:53:36.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.188" endtime="20201112 09:53:36.195"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.197" endtime="20201112 09:53:36.198"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:36.200" endtime="20201112 09:53:36.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.199" endtime="20201112 09:53:36.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.195" endtime="20201112 09:53:36.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.840" endtime="20201112 09:53:36.221"></status>
</kw>
<msg timestamp="20201112 09:53:36.221" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.229" endtime="20201112 09:53:36.238"></status>
</kw>
<msg timestamp="20201112 09:53:36.239" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:36.227" endtime="20201112 09:53:36.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.241" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:36.240" endtime="20201112 09:53:36.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.242" endtime="20201112 09:53:36.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.225" endtime="20201112 09:53:36.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.223" endtime="20201112 09:53:36.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.252" endtime="20201112 09:53:36.520"></status>
</kw>
<msg timestamp="20201112 09:53:36.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018109056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018110778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:36.250" endtime="20201112 09:53:36.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018109056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018110778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:36.523" endtime="20201112 09:53:36.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.528" endtime="20201112 09:53:36.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.248" endtime="20201112 09:53:36.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.246" endtime="20201112 09:53:36.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.535" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:36.534" endtime="20201112 09:53:36.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.538" level="INFO">VALUE: [{'time': 0.018109056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018110778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.018112778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018114514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018116236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018118139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.018119708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5690000000033455e-06, 'source_diff': 1.5690000000033455e-06}, {'time': 0.018121528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018123181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.018124681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018126417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018128319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9020000000015413e-06, 'source_diff': 1.9020000000015413e-06}, {'time': 0.018130139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018131833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.0181335, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018135181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018137181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018138889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018140889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018142681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.0181445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018146458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018148, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018149639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018151611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.018153208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018154681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.018156514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018158347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018160083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018161875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018163514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018165389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018167014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018168486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.018170333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018172208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018174042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.834000000002639e-06, 'source_diff': 1.834000000002639e-06}, {'time': 0.018175833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7909999999975168e-06, 'source_diff': 1.7909999999975168e-06}, {'time': 0.0181775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018179056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018180528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.018182444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.915999999997642e-06, 'source_diff': 1.915999999997642e-06}, {'time': 0.018184236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018185819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018187514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018189014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018191, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018192861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018194403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:36.536" endtime="20201112 09:53:36.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.532" endtime="20201112 09:53:36.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:36.554" level="INFO">${debug-compressed} = {'time': [0.018109056, 0.018110778, 0.018112778, 0.018114514, 0.018116236, 0.018118139, 0.018119708, 0.018121528, 0.018123181, 0.018124681, 0.018126417, 0.018128319, 0.018130139, 0.018131833, 0.018133...</msg>
<status status="PASS" starttime="20201112 09:53:36.541" endtime="20201112 09:53:36.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.558" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:36.557" endtime="20201112 09:53:36.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.561" level="INFO">VALUE: {'time': [0.018109056, 0.018110778, 0.018112778, 0.018114514, 0.018116236, 0.018118139, 0.018119708, 0.018121528, 0.018123181, 0.018124681, 0.018126417, 0.018128319, 0.018130139, 0.018131833, 0.0181335, 0.018135181, 0.018137181, 0.018138889, 0.018140889, 0.018142681, 0.0181445, 0.018146458, 0.018148, 0.018149639, 0.018151611, 0.018153208, 0.018154681, 0.018156514, 0.018158347, 0.018160083, 0.018161875, 0.018163514, 0.018165389, 0.018167014, 0.018168486, 0.018170333, 0.018172208, 0.018174042, 0.018175833, 0.0181775, 0.018179056, 0.018180528, 0.018182444, 0.018184236, 0.018185819, 0.018187514, 0.018189014, 0.018191, 0.018192861, 0.018194403], 'eventsource_diff': [0, 1.7220000000026103e-06, 1.9999999999985307e-06, 1.7360000000021802e-06, 1.7219999999991409e-06, 1.9029999999975455e-06, 1.5690000000033455e-06, 1.8199999999995997e-06, 1.6529999999972955e-06, 1.5000000000015001e-06, 1.7359999999987108e-06, 1.9020000000015413e-06, 1.8199999999995997e-06, 1.694000000000001e-06, 1.6670000000003349e-06, 1.6809999999999048e-06, 1.9999999999985307e-06, 1.707999999999571e-06, 2.000000000002e-06, 1.7920000000004599e-06, 1.819000000000126e-06, 1.957999999999821e-06, 1.5420000000002099e-06, 1.6389999999977256e-06, 1.9720000000028604e-06, 1.5969999999990159e-06, 1.4729999999983645e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.7360000000021802e-06, 1.7920000000004599e-06, 1.6389999999977256e-06, 1.8750000000018752e-06, 1.6249999999981557e-06, 1.4720000000023603e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.834000000002639e-06, 1.7909999999975168e-06, 1.6670000000003349e-06, 1.5559999999997798e-06, 1.4720000000023603e-06, 1.915999999997642e-06, 1.7920000000004599e-06, 1.582999999999446e-06, 1.6949999999994747e-06, 1.5000000000015001e-06, 1.985999999998961e-06, 1.8610000000023053e-06, 1.5420000000002099e-06], 'sourcediff': [0, 1.7220000000026103e-06, 1.9999999999985307e-06, 1.7360000000021802e-06, 1.7219999999991409e-06, 1.9029999999975455e-06, 1.5690000000033455e-06, 1.8199999999995997e-06, 1.6529999999972955e-06, 1.5000000000015001e-06, 1.7359999999987108e-06, 1.9020000000015413e-06, 1.8199999999995997e-06, 1.694000000000001e-06, 1.6670000000003349e-06, 1.6809999999999048e-06, 1.9999999999985307e-06, 1.707999999999571e-06, 2.000000000002e-06, 1.7920000000004599e-06, 1.819000000000126e-06, 1.957999999999821e-06, 1.5420000000002099e-06, 1.6389999999977256e-06, 1.9720000000028604e-06, 1.5969999999990159e-06, 1.4729999999983645e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.7360000000021802e-06, 1.7920000000004599e-06, 1.6389999999977256e-06, 1.8750000000018752e-06, 1.6249999999981557e-06, 1.4720000000023603e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.834000000002639e-06, 1.7909999999975168e-06, 1.6670000000003349e-06, 1.5559999999997798e-06, 1.4720000000023603e-06, 1.915999999997642e-06, 1.7920000000004599e-06, 1.582999999999446e-06, 1.6949999999994747e-06, 1.5000000000015001e-06, 1.985999999998961e-06, 1.8610000000023053e-06, 1.5420000000002099e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:36.559" endtime="20201112 09:53:36.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.555" endtime="20201112 09:53:36.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:36.565" level="INFO">${RESULT} = [{'time': 0.018110778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.018114514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:36.563" endtime="20201112 09:53:36.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:36.573" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018110778, 0.018114514, 0.018118139, 0.018121528, 0.018124681, 0.018128319, 0.018131833, 0.018135181, 0.018138889, 0.018142681, 0.018146458, 0.018149639, 0.018153208, 0.018156514, 0.018160...</msg>
<status status="PASS" starttime="20201112 09:53:36.566" endtime="20201112 09:53:36.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.577" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:36.576" endtime="20201112 09:53:36.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.580" level="INFO">VALUE: [1.7220000000026103e-06, 1.7360000000021802e-06, 1.9029999999975455e-06, 1.8199999999995997e-06, 1.5000000000015001e-06, 1.9020000000015413e-06, 1.694000000000001e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.7920000000004599e-06, 1.957999999999821e-06, 1.6389999999977256e-06, 1.5969999999990159e-06, 1.832999999999696e-06, 1.7360000000021802e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.846999999999266e-06, 1.834000000002639e-06, 1.6670000000003349e-06, 1.4720000000023603e-06, 1.7920000000004599e-06, 1.6949999999994747e-06, 1.985999999998961e-06, 1.5420000000002099e-06]</msg>
<status status="PASS" starttime="20201112 09:53:36.579" endtime="20201112 09:53:36.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.574" endtime="20201112 09:53:36.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.583" endtime="20201112 09:53:36.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:36.587" endtime="20201112 09:53:36.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.585" endtime="20201112 09:53:36.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.582" endtime="20201112 09:53:36.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.222" endtime="20201112 09:53:36.607"></status>
</kw>
<msg timestamp="20201112 09:53:36.608" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.616" endtime="20201112 09:53:36.625"></status>
</kw>
<msg timestamp="20201112 09:53:36.626" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:36.614" endtime="20201112 09:53:36.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.628" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:36.627" endtime="20201112 09:53:36.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.629" endtime="20201112 09:53:36.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.611" endtime="20201112 09:53:36.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.609" endtime="20201112 09:53:36.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.638" endtime="20201112 09:53:36.907"></status>
</kw>
<msg timestamp="20201112 09:53:36.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018967917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018969583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:36.637" endtime="20201112 09:53:36.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018967917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018969583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:36.910" endtime="20201112 09:53:36.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.915" endtime="20201112 09:53:36.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.634" endtime="20201112 09:53:36.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.633" endtime="20201112 09:53:36.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.922" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:36.921" endtime="20201112 09:53:36.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.926" level="INFO">VALUE: [{'time': 0.018967917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018969583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018971347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018973306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9589999999992946e-06, 'source_diff': 1.9589999999992946e-06}, {'time': 0.018975042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018976972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018978722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018980486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018982014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5279999999971705e-06, 'source_diff': 1.5279999999971705e-06}, {'time': 0.018983722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7080000000030404e-06, 'source_diff': 1.7080000000030404e-06}, {'time': 0.018985542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018987111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018988889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.018990625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018992194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018994, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.0189955, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018997292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018999139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.019001042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.019002917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.019004694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7769999999979469e-06, 'source_diff': 1.7769999999979469e-06}, {'time': 0.019006583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.019008306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7229999999986145e-06, 'source_diff': 1.7229999999986145e-06}, {'time': 0.019009903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.019011556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.019013139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.019015014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.019016694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.01901825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.019019708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.019021569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.019023319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.01902525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.019027125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.019028847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.019030375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5279999999971705e-06, 'source_diff': 1.5279999999971705e-06}, {'time': 0.019032028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.019034042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.019035639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.019037167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.019038583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.019040556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9729999999988646e-06, 'source_diff': 1.9729999999988646e-06}, {'time': 0.019042417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.019044208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.019045653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.019047139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.019049069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9299999999972117e-06, 'source_diff': 1.9299999999972117e-06}, {'time': 0.019050583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.0190525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:36.923" endtime="20201112 09:53:36.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.919" endtime="20201112 09:53:36.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:36.941" level="INFO">${debug-compressed} = {'time': [0.018967917, 0.018969583, 0.018971347, 0.018973306, 0.018975042, 0.018976972, 0.018978722, 0.018980486, 0.018982014, 0.018983722, 0.018985542, 0.018987111, 0.018988889, 0.018990625, 0.018992...</msg>
<status status="PASS" starttime="20201112 09:53:36.929" endtime="20201112 09:53:36.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.945" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:36.944" endtime="20201112 09:53:36.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.948" level="INFO">VALUE: {'time': [0.018967917, 0.018969583, 0.018971347, 0.018973306, 0.018975042, 0.018976972, 0.018978722, 0.018980486, 0.018982014, 0.018983722, 0.018985542, 0.018987111, 0.018988889, 0.018990625, 0.018992194, 0.018994, 0.0189955, 0.018997292, 0.018999139, 0.019001042, 0.019002917, 0.019004694, 0.019006583, 0.019008306, 0.019009903, 0.019011556, 0.019013139, 0.019015014, 0.019016694, 0.01901825, 0.019019708, 0.019021569, 0.019023319, 0.01902525, 0.019027125, 0.019028847, 0.019030375, 0.019032028, 0.019034042, 0.019035639, 0.019037167, 0.019038583, 0.019040556, 0.019042417, 0.019044208, 0.019045653, 0.019047139, 0.019049069, 0.019050583, 0.0190525], 'eventsource_diff': [0, 1.6660000000008612e-06, 1.7639999999978506e-06, 1.9589999999992946e-06, 1.7360000000021802e-06, 1.930000000000681e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.5279999999971705e-06, 1.7080000000030404e-06, 1.8199999999995997e-06, 1.568999999999876e-06, 1.7779999999974205e-06, 1.7360000000021802e-06, 1.568999999999876e-06, 1.8060000000000298e-06, 1.4999999999980307e-06, 1.7920000000004599e-06, 1.8470000000027353e-06, 1.9029999999975455e-06, 1.8750000000018752e-06, 1.7769999999979469e-06, 1.889000000001445e-06, 1.7229999999986145e-06, 1.5970000000024853e-06, 1.6529999999972955e-06, 1.582999999999446e-06, 1.8750000000018752e-06, 1.6800000000004311e-06, 1.5559999999997798e-06, 1.457999999999321e-06, 1.8609999999988358e-06, 1.7500000000017502e-06, 1.931000000000155e-06, 1.8749999999984057e-06, 1.7220000000026103e-06, 1.5279999999971705e-06, 1.653000000000765e-06, 2.01400000000157e-06, 1.5969999999990159e-06, 1.52800000000064e-06, 1.4160000000006112e-06, 1.9729999999988646e-06, 1.8609999999988358e-06, 1.7910000000009862e-06, 1.4449999999992247e-06, 1.4860000000019302e-06, 1.9299999999972117e-06, 1.51400000000107e-06, 1.917000000000585e-06], 'sourcediff': [0, 1.6660000000008612e-06, 1.7639999999978506e-06, 1.9589999999992946e-06, 1.7360000000021802e-06, 1.930000000000681e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.5279999999971705e-06, 1.7080000000030404e-06, 1.8199999999995997e-06, 1.568999999999876e-06, 1.7779999999974205e-06, 1.7360000000021802e-06, 1.568999999999876e-06, 1.8060000000000298e-06, 1.4999999999980307e-06, 1.7920000000004599e-06, 1.8470000000027353e-06, 1.9029999999975455e-06, 1.8750000000018752e-06, 1.7769999999979469e-06, 1.889000000001445e-06, 1.7229999999986145e-06, 1.5970000000024853e-06, 1.6529999999972955e-06, 1.582999999999446e-06, 1.8750000000018752e-06, 1.6800000000004311e-06, 1.5559999999997798e-06, 1.457999999999321e-06, 1.8609999999988358e-06, 1.7500000000017502e-06, 1.931000000000155e-06, 1.8749999999984057e-06, 1.7220000000026103e-06, 1.5279999999971705e-06, 1.653000000000765e-06, 2.01400000000157e-06, 1.5969999999990159e-06, 1.52800000000064e-06, 1.4160000000006112e-06, 1.9729999999988646e-06, 1.8609999999988358e-06, 1.7910000000009862e-06, 1.4449999999992247e-06, 1.4860000000019302e-06, 1.9299999999972117e-06, 1.51400000000107e-06, 1.917000000000585e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:36.946" endtime="20201112 09:53:36.949"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.942" endtime="20201112 09:53:36.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:36.953" level="INFO">${RESULT} = [{'time': 0.018969583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018973306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:36.950" endtime="20201112 09:53:36.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:36.961" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018969583, 0.018973306, 0.018976972, 0.018980486, 0.018983722, 0.018987111, 0.018990625, 0.018994, 0.018997292, 0.019001042, 0.019004694, 0.019008306, 0.019011556, 0.019015014, 0.01901825,...</msg>
<status status="PASS" starttime="20201112 09:53:36.954" endtime="20201112 09:53:36.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.965" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:36.964" endtime="20201112 09:53:36.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.967" level="INFO">VALUE: [1.6660000000008612e-06, 1.9589999999992946e-06, 1.930000000000681e-06, 1.76400000000132e-06, 1.7080000000030404e-06, 1.568999999999876e-06, 1.7360000000021802e-06, 1.8060000000000298e-06, 1.7920000000004599e-06, 1.9029999999975455e-06, 1.7769999999979469e-06, 1.7229999999986145e-06, 1.6529999999972955e-06, 1.8750000000018752e-06, 1.5559999999997798e-06, 1.8609999999988358e-06, 1.931000000000155e-06, 1.7220000000026103e-06, 1.653000000000765e-06, 1.5969999999990159e-06, 1.4160000000006112e-06, 1.8609999999988358e-06, 1.4449999999992247e-06, 1.9299999999972117e-06, 1.917000000000585e-06]</msg>
<status status="PASS" starttime="20201112 09:53:36.966" endtime="20201112 09:53:36.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.961" endtime="20201112 09:53:36.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.971" endtime="20201112 09:53:36.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:36.974" endtime="20201112 09:53:36.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.972" endtime="20201112 09:53:36.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.969" endtime="20201112 09:53:36.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.608" endtime="20201112 09:53:36.995"></status>
</kw>
<msg timestamp="20201112 09:53:36.996" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.003" endtime="20201112 09:53:37.013"></status>
</kw>
<msg timestamp="20201112 09:53:37.013" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:37.002" endtime="20201112 09:53:37.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.016" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:37.014" endtime="20201112 09:53:37.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.017" endtime="20201112 09:53:37.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.999" endtime="20201112 09:53:37.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.998" endtime="20201112 09:53:37.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.026" endtime="20201112 09:53:37.290"></status>
</kw>
<msg timestamp="20201112 09:53:37.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018401722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018403722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:37.024" endtime="20201112 09:53:37.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018401722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018403722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:37.293" endtime="20201112 09:53:37.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.298" endtime="20201112 09:53:37.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.022" endtime="20201112 09:53:37.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.020" endtime="20201112 09:53:37.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.304" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:37.303" endtime="20201112 09:53:37.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.308" level="INFO">VALUE: [{'time': 0.018401722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018403722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018405583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018407611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018409375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018411125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018413139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018414903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.0184165, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018417958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4580000000027904e-06, 'source_diff': 1.4580000000027904e-06}, {'time': 0.018419694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018421431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7369999999981844e-06, 'source_diff': 1.7369999999981844e-06}, {'time': 0.018422986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018424819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018426736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018428278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018430069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.018431764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018433722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.01843575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018437778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0279999999976706e-06, 'source_diff': 2.0279999999976706e-06}, {'time': 0.018439819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0410000000012363e-06, 'source_diff': 2.0410000000012363e-06}, {'time': 0.018441764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018443486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018445153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018447111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018449, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018450875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018452806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018454569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7630000000018464e-06, 'source_diff': 1.7630000000018464e-06}, {'time': 0.018456222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018457847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018459694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018461431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7370000000016539e-06, 'source_diff': 1.7370000000016539e-06}, {'time': 0.018463181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018464625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018466389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018467875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018469417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5419999999967404e-06, 'source_diff': 1.5419999999967404e-06}, {'time': 0.018471417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018473069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6520000000012913e-06, 'source_diff': 1.6520000000012913e-06}, {'time': 0.018474514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.018476472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018478278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018479708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4300000000001811e-06, 'source_diff': 1.4300000000001811e-06}, {'time': 0.018481167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4589999999987946e-06, 'source_diff': 1.4589999999987946e-06}, {'time': 0.018483417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2499999999987808e-06, 'source_diff': 2.2499999999987808e-06}, {'time': 0.018485361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018487097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018488764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:37.305" endtime="20201112 09:53:37.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.301" endtime="20201112 09:53:37.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:37.323" level="INFO">${debug-compressed} = {'time': [0.018401722, 0.018403722, 0.018405583, 0.018407611, 0.018409375, 0.018411125, 0.018413139, 0.018414903, 0.0184165, 0.018417958, 0.018419694, 0.018421431, 0.018422986, 0.018424819, 0.01842673...</msg>
<status status="PASS" starttime="20201112 09:53:37.310" endtime="20201112 09:53:37.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.327" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:37.326" endtime="20201112 09:53:37.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.330" level="INFO">VALUE: {'time': [0.018401722, 0.018403722, 0.018405583, 0.018407611, 0.018409375, 0.018411125, 0.018413139, 0.018414903, 0.0184165, 0.018417958, 0.018419694, 0.018421431, 0.018422986, 0.018424819, 0.018426736, 0.018428278, 0.018430069, 0.018431764, 0.018433722, 0.01843575, 0.018437778, 0.018439819, 0.018441764, 0.018443486, 0.018445153, 0.018447111, 0.018449, 0.018450875, 0.018452806, 0.018454569, 0.018456222, 0.018457847, 0.018459694, 0.018461431, 0.018463181, 0.018464625, 0.018466389, 0.018467875, 0.018469417, 0.018471417, 0.018473069, 0.018474514, 0.018476472, 0.018478278, 0.018479708, 0.018481167, 0.018483417, 0.018485361, 0.018487097, 0.018488764], 'eventsource_diff': [0, 2.000000000002e-06, 1.8609999999988358e-06, 2.02800000000114e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 2.0139999999981006e-06, 1.76400000000132e-06, 1.5969999999990159e-06, 1.4580000000027904e-06, 1.7359999999987108e-06, 1.7369999999981844e-06, 1.5550000000003061e-06, 1.832999999999696e-06, 1.917000000000585e-06, 1.5420000000002099e-06, 1.7910000000009862e-06, 1.6949999999994747e-06, 1.957999999999821e-06, 2.02800000000114e-06, 2.0279999999976706e-06, 2.0410000000012363e-06, 1.9449999999997247e-06, 1.7219999999991409e-06, 1.6670000000003349e-06, 1.957999999999821e-06, 1.889000000001445e-06, 1.8749999999984057e-06, 1.931000000000155e-06, 1.7630000000018464e-06, 1.653000000000765e-06, 1.6249999999981557e-06, 1.846999999999266e-06, 1.7370000000016539e-06, 1.7499999999982807e-06, 1.443999999999751e-06, 1.76400000000132e-06, 1.4860000000019302e-06, 1.5419999999967404e-06, 2.000000000002e-06, 1.6520000000012913e-06, 1.4449999999992247e-06, 1.957999999999821e-06, 1.8060000000000298e-06, 1.4300000000001811e-06, 1.4589999999987946e-06, 2.2499999999987808e-06, 1.944000000000251e-06, 1.7360000000021802e-06, 1.6670000000003349e-06], 'sourcediff': [0, 2.000000000002e-06, 1.8609999999988358e-06, 2.02800000000114e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 2.0139999999981006e-06, 1.76400000000132e-06, 1.5969999999990159e-06, 1.4580000000027904e-06, 1.7359999999987108e-06, 1.7369999999981844e-06, 1.5550000000003061e-06, 1.832999999999696e-06, 1.917000000000585e-06, 1.5420000000002099e-06, 1.7910000000009862e-06, 1.6949999999994747e-06, 1.957999999999821e-06, 2.02800000000114e-06, 2.0279999999976706e-06, 2.0410000000012363e-06, 1.9449999999997247e-06, 1.7219999999991409e-06, 1.6670000000003349e-06, 1.957999999999821e-06, 1.889000000001445e-06, 1.8749999999984057e-06, 1.931000000000155e-06, 1.7630000000018464e-06, 1.653000000000765e-06, 1.6249999999981557e-06, 1.846999999999266e-06, 1.7370000000016539e-06, 1.7499999999982807e-06, 1.443999999999751e-06, 1.76400000000132e-06, 1.4860000000019302e-06, 1.5419999999967404e-06, 2.000000000002e-06, 1.6520000000012913e-06, 1.4449999999992247e-06, 1.957999999999821e-06, 1.8060000000000298e-06, 1.4300000000001811e-06, 1.4589999999987946e-06, 2.2499999999987808e-06, 1.944000000000251e-06, 1.7360000000021802e-06, 1.6670000000003349e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:37.328" endtime="20201112 09:53:37.330"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.324" endtime="20201112 09:53:37.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:37.334" level="INFO">${RESULT} = [{'time': 0.018403722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018407611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0...</msg>
<status status="PASS" starttime="20201112 09:53:37.332" endtime="20201112 09:53:37.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:37.343" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018403722, 0.018407611, 0.018411125, 0.018414903, 0.018417958, 0.018421431, 0.018424819, 0.018428278, 0.018431764, 0.01843575, 0.018439819, 0.018443486, 0.018447111, 0.018450875, 0.0184545...</msg>
<status status="PASS" starttime="20201112 09:53:37.335" endtime="20201112 09:53:37.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.347" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:37.346" endtime="20201112 09:53:37.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.349" level="INFO">VALUE: [2.000000000002e-06, 2.02800000000114e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.4580000000027904e-06, 1.7369999999981844e-06, 1.832999999999696e-06, 1.5420000000002099e-06, 1.6949999999994747e-06, 2.02800000000114e-06, 2.0410000000012363e-06, 1.7219999999991409e-06, 1.957999999999821e-06, 1.8749999999984057e-06, 1.7630000000018464e-06, 1.6249999999981557e-06, 1.7370000000016539e-06, 1.443999999999751e-06, 1.4860000000019302e-06, 2.000000000002e-06, 1.4449999999992247e-06, 1.8060000000000298e-06, 1.4589999999987946e-06, 1.944000000000251e-06, 1.6670000000003349e-06]</msg>
<status status="PASS" starttime="20201112 09:53:37.348" endtime="20201112 09:53:37.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.344" endtime="20201112 09:53:37.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.359" endtime="20201112 09:53:37.360"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:37.362" endtime="20201112 09:53:37.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.360" endtime="20201112 09:53:37.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.357" endtime="20201112 09:53:37.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.996" endtime="20201112 09:53:37.383"></status>
</kw>
<msg timestamp="20201112 09:53:37.383" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.391" endtime="20201112 09:53:37.400"></status>
</kw>
<msg timestamp="20201112 09:53:37.400" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:37.389" endtime="20201112 09:53:37.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.403" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:37.401" endtime="20201112 09:53:37.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.404" endtime="20201112 09:53:37.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.386" endtime="20201112 09:53:37.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.385" endtime="20201112 09:53:37.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.413" endtime="20201112 09:53:37.678"></status>
</kw>
<msg timestamp="20201112 09:53:37.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018406764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018408583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:37.411" endtime="20201112 09:53:37.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018406764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018408583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:37.680" endtime="20201112 09:53:37.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.686" endtime="20201112 09:53:37.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.409" endtime="20201112 09:53:37.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.407" endtime="20201112 09:53:37.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.692" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:37.691" endtime="20201112 09:53:37.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.696" level="INFO">VALUE: [{'time': 0.018406764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018408583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018410556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.973000000002334e-06, 'source_diff': 1.973000000002334e-06}, {'time': 0.018412403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018414139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.01841575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018417722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018419736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018421306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018422792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018424333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}, {'time': 0.018426375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0419999999972405e-06, 'source_diff': 2.0419999999972405e-06}, {'time': 0.018427931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5560000000032492e-06, 'source_diff': 1.5560000000032492e-06}, {'time': 0.018429847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.915999999997642e-06, 'source_diff': 1.915999999997642e-06}, {'time': 0.018431556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.709000000002514e-06, 'source_diff': 1.709000000002514e-06}, {'time': 0.018433139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018434694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018436153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4589999999987946e-06, 'source_diff': 1.4589999999987946e-06}, {'time': 0.018437833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018439556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7229999999986145e-06, 'source_diff': 1.7229999999986145e-06}, {'time': 0.018441194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6380000000017214e-06, 'source_diff': 1.6380000000017214e-06}, {'time': 0.018443208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018444667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.459000000002264e-06, 'source_diff': 1.459000000002264e-06}, {'time': 0.018446778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.110999999999086e-06, 'source_diff': 2.110999999999086e-06}, {'time': 0.01844825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018450208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018451694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018453569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018455153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.018456625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.018458611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018460111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018461833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018463667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.018465153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018466653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018468597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018470153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018471875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018473889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.018475458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018477236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018478931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018480583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6519999999978219e-06, 'source_diff': 1.6519999999978219e-06}, {'time': 0.018482236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018483944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018485625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018487528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018489194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018490806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6119999999980594e-06, 'source_diff': 1.6119999999980594e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:37.693" endtime="20201112 09:53:37.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.689" endtime="20201112 09:53:37.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:37.712" level="INFO">${debug-compressed} = {'time': [0.018406764, 0.018408583, 0.018410556, 0.018412403, 0.018414139, 0.01841575, 0.018417722, 0.018419736, 0.018421306, 0.018422792, 0.018424333, 0.018426375, 0.018427931, 0.018429847, 0.0184315...</msg>
<status status="PASS" starttime="20201112 09:53:37.698" endtime="20201112 09:53:37.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.716" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:37.715" endtime="20201112 09:53:37.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.719" level="INFO">VALUE: {'time': [0.018406764, 0.018408583, 0.018410556, 0.018412403, 0.018414139, 0.01841575, 0.018417722, 0.018419736, 0.018421306, 0.018422792, 0.018424333, 0.018426375, 0.018427931, 0.018429847, 0.018431556, 0.018433139, 0.018434694, 0.018436153, 0.018437833, 0.018439556, 0.018441194, 0.018443208, 0.018444667, 0.018446778, 0.01844825, 0.018450208, 0.018451694, 0.018453569, 0.018455153, 0.018456625, 0.018458611, 0.018460111, 0.018461833, 0.018463667, 0.018465153, 0.018466653, 0.018468597, 0.018470153, 0.018471875, 0.018473889, 0.018475458, 0.018477236, 0.018478931, 0.018480583, 0.018482236, 0.018483944, 0.018485625, 0.018487528, 0.018489194, 0.018490806], 'eventsource_diff': [0, 1.819000000000126e-06, 1.973000000002334e-06, 1.846999999999266e-06, 1.7359999999987108e-06, 1.6110000000020552e-06, 1.971999999999391e-06, 2.0139999999981006e-06, 1.5699999999993497e-06, 1.4860000000019302e-06, 1.5410000000007362e-06, 2.0419999999972405e-06, 1.5560000000032492e-06, 1.915999999997642e-06, 1.709000000002514e-06, 1.582999999999446e-06, 1.5550000000003061e-06, 1.4589999999987946e-06, 1.6800000000004311e-06, 1.7229999999986145e-06, 1.6380000000017214e-06, 2.0139999999981006e-06, 1.459000000002264e-06, 2.110999999999086e-06, 1.4719999999988909e-06, 1.957999999999821e-06, 1.4860000000019302e-06, 1.8749999999984057e-06, 1.5839999999989196e-06, 1.4720000000023603e-06, 1.985999999998961e-06, 1.5000000000015001e-06, 1.7219999999991409e-06, 1.8339999999991696e-06, 1.4860000000019302e-06, 1.4999999999980307e-06, 1.944000000000251e-06, 1.5559999999997798e-06, 1.7219999999991409e-06, 2.01400000000157e-06, 1.568999999999876e-06, 1.77800000000089e-06, 1.6949999999994747e-06, 1.6519999999978219e-06, 1.653000000000765e-06, 1.707999999999571e-06, 1.6809999999999048e-06, 1.903000000001015e-06, 1.6660000000008612e-06, 1.6119999999980594e-06], 'sourcediff': [0, 1.819000000000126e-06, 1.973000000002334e-06, 1.846999999999266e-06, 1.7359999999987108e-06, 1.6110000000020552e-06, 1.971999999999391e-06, 2.0139999999981006e-06, 1.5699999999993497e-06, 1.4860000000019302e-06, 1.5410000000007362e-06, 2.0419999999972405e-06, 1.5560000000032492e-06, 1.915999999997642e-06, 1.709000000002514e-06, 1.582999999999446e-06, 1.5550000000003061e-06, 1.4589999999987946e-06, 1.6800000000004311e-06, 1.7229999999986145e-06, 1.6380000000017214e-06, 2.0139999999981006e-06, 1.459000000002264e-06, 2.110999999999086e-06, 1.4719999999988909e-06, 1.957999999999821e-06, 1.4860000000019302e-06, 1.8749999999984057e-06, 1.5839999999989196e-06, 1.4720000000023603e-06, 1.985999999998961e-06, 1.5000000000015001e-06, 1.7219999999991409e-06, 1.8339999999991696e-06, 1.4860000000019302e-06, 1.4999999999980307e-06, 1.944000000000251e-06, 1.5559999999997798e-06, 1.7219999999991409e-06, 2.01400000000157e-06, 1.568999999999876e-06, 1.77800000000089e-06, 1.6949999999994747e-06, 1.6519999999978219e-06, 1.653000000000765e-06, 1.707999999999571e-06, 1.6809999999999048e-06, 1.903000000001015e-06, 1.6660000000008612e-06, 1.6119999999980594e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:37.717" endtime="20201112 09:53:37.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.713" endtime="20201112 09:53:37.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:37.723" level="INFO">${RESULT} = [{'time': 0.018408583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018412403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:37.721" endtime="20201112 09:53:37.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:37.731" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018408583, 0.018412403, 0.01841575, 0.018419736, 0.018422792, 0.018426375, 0.018429847, 0.018433139, 0.018436153, 0.018439556, 0.018443208, 0.018446778, 0.018450208, 0.018453569, 0.0184566...</msg>
<status status="PASS" starttime="20201112 09:53:37.724" endtime="20201112 09:53:37.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.735" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:37.734" endtime="20201112 09:53:37.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.738" level="INFO">VALUE: [1.819000000000126e-06, 1.846999999999266e-06, 1.6110000000020552e-06, 2.0139999999981006e-06, 1.4860000000019302e-06, 2.0419999999972405e-06, 1.915999999997642e-06, 1.582999999999446e-06, 1.4589999999987946e-06, 1.7229999999986145e-06, 2.0139999999981006e-06, 2.110999999999086e-06, 1.957999999999821e-06, 1.8749999999984057e-06, 1.4720000000023603e-06, 1.5000000000015001e-06, 1.8339999999991696e-06, 1.4999999999980307e-06, 1.5559999999997798e-06, 2.01400000000157e-06, 1.77800000000089e-06, 1.6519999999978219e-06, 1.707999999999571e-06, 1.903000000001015e-06, 1.6119999999980594e-06]</msg>
<status status="PASS" starttime="20201112 09:53:37.736" endtime="20201112 09:53:37.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.732" endtime="20201112 09:53:37.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.741" endtime="20201112 09:53:37.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:37.744" endtime="20201112 09:53:37.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.743" endtime="20201112 09:53:37.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.739" endtime="20201112 09:53:37.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.383" endtime="20201112 09:53:37.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.079" endtime="20201112 09:53:37.765"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:37.770" endtime="20201112 09:53:37.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.768" endtime="20201112 09:53:37.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.767" endtime="20201112 09:53:37.790"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:30.007" endtime="20201112 09:53:37.791" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:37.798" endtime="20201112 09:53:37.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.797" endtime="20201112 09:53:37.818"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.832" endtime="20201112 09:53:37.848"></status>
</kw>
<msg timestamp="20201112 09:53:37.849" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:37.830" endtime="20201112 09:53:37.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.851" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:37.850" endtime="20201112 09:53:37.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.854" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:37.852" endtime="20201112 09:53:37.855"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:37.827" endtime="20201112 09:53:37.855"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:37.825" endtime="20201112 09:53:37.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.823" endtime="20201112 09:53:37.856"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:37.860" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:37.859" endtime="20201112 09:53:37.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.857" endtime="20201112 09:53:37.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.823" endtime="20201112 09:53:37.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.822" endtime="20201112 09:53:37.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.861" endtime="20201112 09:53:37.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.821" endtime="20201112 09:53:37.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.819" endtime="20201112 09:53:37.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.796" endtime="20201112 09:53:37.864"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 09:53:37.866" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.874" endtime="20201112 09:53:37.885"></status>
</kw>
<msg timestamp="20201112 09:53:37.886" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:37.872" endtime="20201112 09:53:37.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.888" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:37.887" endtime="20201112 09:53:37.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.889" endtime="20201112 09:53:37.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.870" endtime="20201112 09:53:37.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.868" endtime="20201112 09:53:37.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.898" endtime="20201112 09:53:38.188"></status>
</kw>
<msg timestamp="20201112 09:53:38.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066971806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066973194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:37.897" endtime="20201112 09:53:38.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066971806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066973194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:38.192" endtime="20201112 09:53:38.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:38.200" endtime="20201112 09:53:38.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.894" endtime="20201112 09:53:38.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.892" endtime="20201112 09:53:38.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:38.207" level="INFO">${RESULT} = [{'time': 0.066973194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3880000000049408e-06, 'source_diff': 1.3880000000049408e-06}, {'time': 0.066975458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:38.203" endtime="20201112 09:53:38.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:38.221" level="INFO">${OVERHEAD} = {'time': [0.066973194, 0.066975458, 0.066977667, 0.066979986, 0.066982167, 0.066984597, 0.066986736, 0.066989389, 0.066991917, 0.066994556, 0.066997014, 0.066999333, 0.067001958, 0.067004208, 0.067006...</msg>
<status status="PASS" starttime="20201112 09:53:38.208" endtime="20201112 09:53:38.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.225" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:38.224" endtime="20201112 09:53:38.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.227" level="INFO">VALUE: [1.3880000000049408e-06, 9.720000000018603e-07, 1.000000000001e-06, 9.720000000018603e-07, 9.73000000001334e-07, 9.580000000092292e-07, 9.580000000092292e-07, 9.859999999944913e-07, 9.859999999944913e-07, 9.58999999994825e-07, 9.859999999944913e-07, 9.719999999879825e-07, 1.0139999999936311e-06, 9.859999999944913e-07, 9.86000000008369e-07, 9.720000000018603e-07, 9.86000000008369e-07, 9.720000000018603e-07, 9.58999999994825e-07, 9.86000000008369e-07, 9.720000000018603e-07, 9.859999999944913e-07, 9.720000000018603e-07, 9.73000000001334e-07, 9.579999999953515e-07, 9.859999999944913e-07, 9.440000000027204e-07, 9.86000000008369e-07, 1.0139999999936311e-06, 9.720000000018603e-07, 9.720000000018603e-07, 9.86000000008369e-07, 9.73000000001334e-07, 9.859999999944913e-07, 1.000000000001e-06, 9.719999999879825e-07, 9.859999999944913e-07, 9.579999999953515e-07, 9.720000000018603e-07, 9.86000000008369e-07, 9.720000000018603e-07, 9.859999999944913e-07, 9.719999999879825e-07, 9.86999999993965e-07, 9.720000000018603e-07, 9.720000000018603e-07, 9.720000000018603e-07, 1.000000000001e-06, 9.870000000078427e-07, 9.580000000092292e-07]</msg>
<status status="PASS" starttime="20201112 09:53:38.226" endtime="20201112 09:53:38.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.221" endtime="20201112 09:53:38.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:38.230" endtime="20201112 09:53:38.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:38.234" endtime="20201112 09:53:38.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.232" endtime="20201112 09:53:38.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.229" endtime="20201112 09:53:38.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.867" endtime="20201112 09:53:38.254"></status>
</kw>
<msg timestamp="20201112 09:53:38.255" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:38.263" endtime="20201112 09:53:38.274"></status>
</kw>
<msg timestamp="20201112 09:53:38.274" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:38.261" endtime="20201112 09:53:38.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.277" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:38.275" endtime="20201112 09:53:38.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:38.278" endtime="20201112 09:53:38.279"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.258" endtime="20201112 09:53:38.280"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.257" endtime="20201112 09:53:38.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:38.286" endtime="20201112 09:53:38.567"></status>
</kw>
<msg timestamp="20201112 09:53:38.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020126458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020127847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:38.285" endtime="20201112 09:53:38.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020126458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020127847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:38.571" endtime="20201112 09:53:38.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:38.580" endtime="20201112 09:53:38.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.282" endtime="20201112 09:53:38.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.281" endtime="20201112 09:53:38.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:38.586" level="INFO">${RESULT} = [{'time': 0.020127847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.020130542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:38.583" endtime="20201112 09:53:38.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:38.600" level="INFO">${OVERHEAD} = {'time': [0.020127847, 0.020130542, 0.020132722, 0.020134792, 0.020137347, 0.020139833, 0.020142389, 0.020144917, 0.020147097, 0.020149167, 0.020151847, 0.020154236, 0.020156681, 0.020159139, 0.020161...</msg>
<status status="PASS" starttime="20201112 09:53:38.587" endtime="20201112 09:53:38.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.605" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:38.603" endtime="20201112 09:53:38.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.607" level="INFO">VALUE: [1.389000000000945e-06, 1.000000000001e-06, 1.02800000000014e-06, 9.729999999978645e-07, 1.000000000001e-06, 9.859999999979607e-07, 9.860000000014302e-07, 9.859999999979607e-07, 1.02800000000014e-06, 9.859999999979607e-07, 9.160000000001112e-07, 9.999999999975306e-07, 9.309999999991547e-07, 9.719999999983908e-07, 9.860000000014302e-07, 9.999999999975306e-07, 9.859999999979607e-07, 9.859999999979607e-07, 9.860000000014302e-07, 9.999999999975306e-07, 9.720000000018603e-07, 9.59000000001764e-07, 9.860000000014302e-07, 9.73000000001334e-07, 9.73000000001334e-07, 9.719999999983908e-07, 1.000000000001e-06, 9.720000000018603e-07, 9.309999999991547e-07, 9.720000000018603e-07, 1.000000000001e-06, 9.999999999975306e-07, 9.859999999979607e-07, 1.000000000001e-06, 1.01400000000057e-06, 9.860000000014302e-07, 9.860000000014302e-07, 9.719999999983908e-07, 9.859999999979607e-07, 1.000000000001e-06, 9.57999999998821e-07, 9.719999999983908e-07, 9.720000000018603e-07, 1.0410000000002362e-06, 9.309999999991547e-07, 9.020000000005413e-07, 9.73000000001334e-07, 9.870000000009038e-07, 9.720000000018603e-07, 9.719999999983908e-07]</msg>
<status status="PASS" starttime="20201112 09:53:38.606" endtime="20201112 09:53:38.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.601" endtime="20201112 09:53:38.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:38.610" endtime="20201112 09:53:38.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:38.614" endtime="20201112 09:53:38.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.612" endtime="20201112 09:53:38.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.608" endtime="20201112 09:53:38.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.255" endtime="20201112 09:53:38.635"></status>
</kw>
<msg timestamp="20201112 09:53:38.635" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:38.643" endtime="20201112 09:53:38.654"></status>
</kw>
<msg timestamp="20201112 09:53:38.654" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:38.641" endtime="20201112 09:53:38.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.657" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:38.655" endtime="20201112 09:53:38.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:38.658" endtime="20201112 09:53:38.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.638" endtime="20201112 09:53:38.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.637" endtime="20201112 09:53:38.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:38.667" endtime="20201112 09:53:38.954"></status>
</kw>
<msg timestamp="20201112 09:53:38.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019440653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019442042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:38.665" endtime="20201112 09:53:38.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019440653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019442042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:38.959" endtime="20201112 09:53:38.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:38.967" endtime="20201112 09:53:38.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.662" endtime="20201112 09:53:38.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.661" endtime="20201112 09:53:38.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:38.973" level="INFO">${RESULT} = [{'time': 0.019442042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.019444847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:38.970" endtime="20201112 09:53:38.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:38.988" level="INFO">${OVERHEAD} = {'time': [0.019442042, 0.019444847, 0.0194475, 0.019449847, 0.019452, 0.019454194, 0.01945675, 0.019459361, 0.019461889, 0.019464014, 0.019466431, 0.019468625, 0.019470958, 0.019473431, 0.019475819, 0...</msg>
<status status="PASS" starttime="20201112 09:53:38.974" endtime="20201112 09:53:38.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.993" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:38.992" endtime="20201112 09:53:38.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.995" level="INFO">VALUE: [1.389000000000945e-06, 1.000000000001e-06, 9.57999999998821e-07, 9.719999999983908e-07, 9.720000000018603e-07, 9.720000000018603e-07, 9.999999999975306e-07, 9.860000000014302e-07, 9.859999999979607e-07, 9.720000000018603e-07, 9.870000000009038e-07, 9.719999999983908e-07, 9.860000000014302e-07, 9.729999999978645e-07, 9.719999999983908e-07, 9.719999999983908e-07, 9.719999999983908e-07, 1.000000000001e-06, 1.01400000000057e-06, 1.01400000000057e-06, 1.000000000001e-06, 9.719999999983908e-07, 9.859999999979607e-07, 9.720000000018603e-07, 9.57999999998821e-07, 1.0419999999997098e-06, 9.860000000014302e-07, 9.860000000014302e-07, 9.719999999983908e-07, 9.729999999978645e-07, 1.000000000001e-06, 9.859999999979607e-07, 9.720000000018603e-07, 9.999999999975306e-07, 9.720000000018603e-07, 9.860000000014302e-07, 9.859999999979607e-07, 9.720000000018603e-07, 9.859999999979607e-07, 9.580000000022904e-07, 9.859999999979607e-07, 9.859999999979607e-07, 9.720000000018603e-07, 9.719999999983908e-07, 9.860000000014302e-07, 9.73000000001334e-07, 9.860000000014302e-07, 9.57999999998821e-07, 9.859999999979607e-07, 1.02800000000014e-06]</msg>
<status status="PASS" starttime="20201112 09:53:38.994" endtime="20201112 09:53:38.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.989" endtime="20201112 09:53:38.996"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:38.999" endtime="20201112 09:53:39.000"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:39.002" endtime="20201112 09:53:39.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.001" endtime="20201112 09:53:39.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.997" endtime="20201112 09:53:39.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.635" endtime="20201112 09:53:39.023"></status>
</kw>
<msg timestamp="20201112 09:53:39.023" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.031" endtime="20201112 09:53:39.042"></status>
</kw>
<msg timestamp="20201112 09:53:39.042" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:39.029" endtime="20201112 09:53:39.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.045" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:39.043" endtime="20201112 09:53:39.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.046" endtime="20201112 09:53:39.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.027" endtime="20201112 09:53:39.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.025" endtime="20201112 09:53:39.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.055" endtime="20201112 09:53:39.336"></status>
</kw>
<msg timestamp="20201112 09:53:39.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019223278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019224667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:39.053" endtime="20201112 09:53:39.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019223278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019224667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:39.340" endtime="20201112 09:53:39.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.348" endtime="20201112 09:53:39.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.051" endtime="20201112 09:53:39.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.049" endtime="20201112 09:53:39.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:39.355" level="INFO">${RESULT} = [{'time': 0.019224667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.019226917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:39.351" endtime="20201112 09:53:39.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:39.369" level="INFO">${OVERHEAD} = {'time': [0.019224667, 0.019226917, 0.019229042, 0.019231514, 0.019233931, 0.019236389, 0.019238639, 0.019241167, 0.019243556, 0.019246139, 0.019248694, 0.019251083, 0.019253542, 0.019255708, 0.019258...</msg>
<status status="PASS" starttime="20201112 09:53:39.356" endtime="20201112 09:53:39.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.373" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:39.372" endtime="20201112 09:53:39.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.375" level="INFO">VALUE: [1.389000000000945e-06, 9.859999999979607e-07, 9.859999999979607e-07, 9.720000000018603e-07, 1.0419999999997098e-06, 1.000000000001e-06, 1.0559999999992797e-06, 9.860000000014302e-07, 9.589999999982945e-07, 9.859999999979607e-07, 9.860000000014302e-07, 9.43999999999251e-07, 9.729999999978645e-07, 9.860000000014302e-07, 9.860000000014302e-07, 9.999999999975306e-07, 9.999999999975306e-07, 9.859999999979607e-07, 9.859999999979607e-07, 9.719999999983908e-07, 9.719999999983908e-07, 9.719999999983908e-07, 9.860000000014302e-07, 9.73000000001334e-07, 9.300000000031505e-07, 9.580000000022904e-07, 9.870000000009038e-07, 9.860000000014302e-07, 1.000000000001e-06, 9.589999999982945e-07, 9.860000000014302e-07, 9.589999999982945e-07, 1.01400000000057e-06, 9.449999999987246e-07, 9.729999999978645e-07, 9.860000000014302e-07, 9.73000000001334e-07, 9.73000000001334e-07, 9.869999999974344e-07, 9.860000000014302e-07, 9.870000000009038e-07, 9.860000000014302e-07, 9.859999999979607e-07, 9.719999999983908e-07, 9.720000000018603e-07, 9.589999999982945e-07, 1.000000000001e-06, 9.720000000018603e-07, 9.729999999978645e-07, 9.870000000009038e-07]</msg>
<status status="PASS" starttime="20201112 09:53:39.374" endtime="20201112 09:53:39.376"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.370" endtime="20201112 09:53:39.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.379" endtime="20201112 09:53:39.380"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:39.382" endtime="20201112 09:53:39.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.381" endtime="20201112 09:53:39.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.377" endtime="20201112 09:53:39.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.024" endtime="20201112 09:53:39.403"></status>
</kw>
<msg timestamp="20201112 09:53:39.403" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.411" endtime="20201112 09:53:39.421"></status>
</kw>
<msg timestamp="20201112 09:53:39.422" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:39.409" endtime="20201112 09:53:39.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.424" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:39.423" endtime="20201112 09:53:39.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.425" endtime="20201112 09:53:39.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.407" endtime="20201112 09:53:39.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.405" endtime="20201112 09:53:39.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.434" endtime="20201112 09:53:39.716"></status>
</kw>
<msg timestamp="20201112 09:53:39.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019306306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019307667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:39.433" endtime="20201112 09:53:39.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019306306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019307667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:39.720" endtime="20201112 09:53:39.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.728" endtime="20201112 09:53:39.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.430" endtime="20201112 09:53:39.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.429" endtime="20201112 09:53:39.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:39.735" level="INFO">${RESULT} = [{'time': 0.019307667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3610000000018052e-06, 'source_diff': 1.3610000000018052e-06}, {'time': 0.019310111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:39.731" endtime="20201112 09:53:39.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:39.749" level="INFO">${OVERHEAD} = {'time': [0.019307667, 0.019310111, 0.019312764, 0.019315333, 0.019318, 0.019320653, 0.019322958, 0.019325056, 0.019327653, 0.01933025, 0.01933275, 0.019335431, 0.019337931, 0.019340306, 0.019342569, ...</msg>
<status status="PASS" starttime="20201112 09:53:39.736" endtime="20201112 09:53:39.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.753" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:39.752" endtime="20201112 09:53:39.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.755" level="INFO">VALUE: [1.3610000000018052e-06, 1.000000000001e-06, 9.719999999983908e-07, 9.860000000014302e-07, 9.169999999995848e-07, 9.720000000018603e-07, 9.860000000014302e-07, 9.59000000001764e-07, 9.720000000018603e-07, 9.860000000014302e-07, 9.719999999983908e-07, 9.73000000001334e-07, 9.870000000009038e-07, 9.870000000009038e-07, 1.0270000000006663e-06, 9.859999999979607e-07, 9.719999999983908e-07, 9.999999999975306e-07, 9.860000000014302e-07, 9.859999999979607e-07, 9.860000000014302e-07, 1.0410000000002362e-06, 9.859999999979607e-07, 9.870000000009038e-07, 9.73000000001334e-07, 9.729999999978645e-07, 9.729999999978645e-07, 1.000000000001e-06, 9.870000000009038e-07, 9.869999999974344e-07, 9.720000000018603e-07, 9.719999999983908e-07, 9.720000000018603e-07, 9.73000000001334e-07, 9.870000000009038e-07, 9.999999999975306e-07, 9.869999999974344e-07, 9.719999999983908e-07, 9.450000000021941e-07, 9.860000000014302e-07, 9.030000000000149e-07, 9.720000000018603e-07, 9.57999999998821e-07, 9.860000000014302e-07, 9.999999999975306e-07, 9.719999999983908e-07, 9.860000000014302e-07, 9.59000000001764e-07, 1.000000000001e-06, 9.720000000018603e-07]</msg>
<status status="PASS" starttime="20201112 09:53:39.754" endtime="20201112 09:53:39.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.750" endtime="20201112 09:53:39.757"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.759" endtime="20201112 09:53:39.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:39.762" endtime="20201112 09:53:39.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.761" endtime="20201112 09:53:39.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.757" endtime="20201112 09:53:39.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.404" endtime="20201112 09:53:39.783"></status>
</kw>
<msg timestamp="20201112 09:53:39.783" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.791" endtime="20201112 09:53:39.802"></status>
</kw>
<msg timestamp="20201112 09:53:39.802" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:39.789" endtime="20201112 09:53:39.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.805" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:39.803" endtime="20201112 09:53:39.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.806" endtime="20201112 09:53:39.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.787" endtime="20201112 09:53:39.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.785" endtime="20201112 09:53:39.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.815" endtime="20201112 09:53:40.104"></status>
</kw>
<msg timestamp="20201112 09:53:40.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019549556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019550958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:39.813" endtime="20201112 09:53:40.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019549556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019550958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:40.109" endtime="20201112 09:53:40.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.117" endtime="20201112 09:53:40.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.811" endtime="20201112 09:53:40.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.809" endtime="20201112 09:53:40.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:40.123" level="INFO">${RESULT} = [{'time': 0.019550958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4020000000010413e-06, 'source_diff': 1.4020000000010413e-06}, {'time': 0.019553653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:40.120" endtime="20201112 09:53:40.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:40.137" level="INFO">${OVERHEAD} = {'time': [0.019550958, 0.019553653, 0.019556264, 0.019558667, 0.019560889, 0.019563292, 0.019565806, 0.019568486, 0.019570917, 0.019573444, 0.019575889, 0.019578431, 0.019581056, 0.019583403, 0.019585...</msg>
<status status="PASS" starttime="20201112 09:53:40.124" endtime="20201112 09:53:40.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.141" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:40.140" endtime="20201112 09:53:40.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.144" level="INFO">VALUE: [1.4020000000010413e-06, 9.720000000018603e-07, 9.309999999991547e-07, 9.729999999978645e-07, 9.860000000014302e-07, 9.729999999978645e-07, 9.870000000009038e-07, 1.000000000001e-06, 1.01400000000057e-06, 9.719999999983908e-07, 9.859999999979607e-07, 9.73000000001334e-07, 9.729999999978645e-07, 9.999999999975306e-07, 9.719999999983908e-07, 9.869999999974344e-07, 1.054999999999806e-06, 9.860000000014302e-07, 9.859999999979607e-07, 9.860000000014302e-07, 9.860000000014302e-07, 9.719999999983908e-07, 9.449999999987246e-07, 9.73000000001334e-07, 9.73000000001334e-07, 9.720000000018603e-07, 9.859999999979607e-07, 9.859999999979607e-07, 9.57999999998821e-07, 9.859999999979607e-07, 9.859999999979607e-07, 9.719999999983908e-07, 9.859999999979607e-07, 9.720000000018603e-07, 9.859999999979607e-07, 9.720000000018603e-07, 1.01400000000057e-06, 9.719999999983908e-07, 9.729999999978645e-07, 9.589999999982945e-07, 9.860000000014302e-07, 9.720000000018603e-07, 1.01400000000057e-06, 9.720000000018603e-07, 9.860000000014302e-07, 9.999999999975306e-07, 9.870000000009038e-07, 9.860000000014302e-07, 9.859999999979607e-07, 1.0419999999997098e-06]</msg>
<status status="PASS" starttime="20201112 09:53:40.143" endtime="20201112 09:53:40.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.138" endtime="20201112 09:53:40.145"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.148" endtime="20201112 09:53:40.149"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:40.151" endtime="20201112 09:53:40.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.150" endtime="20201112 09:53:40.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.146" endtime="20201112 09:53:40.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.784" endtime="20201112 09:53:40.172"></status>
</kw>
<msg timestamp="20201112 09:53:40.172" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.180" endtime="20201112 09:53:40.190"></status>
</kw>
<msg timestamp="20201112 09:53:40.190" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:40.178" endtime="20201112 09:53:40.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.193" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:40.192" endtime="20201112 09:53:40.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.194" endtime="20201112 09:53:40.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.176" endtime="20201112 09:53:40.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.174" endtime="20201112 09:53:40.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.203" endtime="20201112 09:53:40.485"></status>
</kw>
<msg timestamp="20201112 09:53:40.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019376444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019377833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:40.202" endtime="20201112 09:53:40.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019376444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019377833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:40.490" endtime="20201112 09:53:40.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.498" endtime="20201112 09:53:40.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.199" endtime="20201112 09:53:40.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.197" endtime="20201112 09:53:40.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:40.505" level="INFO">${RESULT} = [{'time': 0.019377833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.019380083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:40.501" endtime="20201112 09:53:40.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:40.519" level="INFO">${OVERHEAD} = {'time': [0.019377833, 0.019380083, 0.019382764, 0.019385236, 0.019387389, 0.019389681, 0.019392292, 0.019394514, 0.019396681, 0.019399333, 0.019402, 0.019404472, 0.019406889, 0.019409042, 0.019411167...</msg>
<status status="PASS" starttime="20201112 09:53:40.506" endtime="20201112 09:53:40.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.523" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:40.522" endtime="20201112 09:53:40.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.526" level="INFO">VALUE: [1.389000000000945e-06, 9.719999999983908e-07, 9.860000000014302e-07, 9.860000000014302e-07, 9.720000000018603e-07, 9.589999999982945e-07, 9.729999999978645e-07, 9.720000000018603e-07, 9.309999999991547e-07, 9.580000000022904e-07, 9.719999999983908e-07, 9.859999999979607e-07, 9.860000000014302e-07, 9.860000000014302e-07, 1.000000000001e-06, 9.859999999979607e-07, 9.860000000014302e-07, 9.719999999983908e-07, 9.869999999974344e-07, 1.000000000001e-06, 9.450000000021941e-07, 1.01400000000057e-06, 9.720000000018603e-07, 9.719999999983908e-07, 9.720000000018603e-07, 9.860000000014302e-07, 9.860000000014302e-07, 9.73000000001334e-07, 9.860000000014302e-07, 9.859999999979607e-07, 9.860000000014302e-07, 9.720000000018603e-07, 1.000000000001e-06, 9.860000000014302e-07, 9.719999999983908e-07, 9.869999999974344e-07, 9.719999999983908e-07, 9.859999999979607e-07, 9.859999999979607e-07, 9.860000000014302e-07, 9.859999999979607e-07, 9.870000000009038e-07, 1.000000000001e-06, 9.860000000014302e-07, 9.859999999979607e-07, 9.860000000014302e-07, 9.860000000014302e-07, 9.720000000018603e-07, 9.729999999978645e-07, 9.860000000014302e-07]</msg>
<status status="PASS" starttime="20201112 09:53:40.524" endtime="20201112 09:53:40.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.520" endtime="20201112 09:53:40.527"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.529" endtime="20201112 09:53:40.531"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:40.533" endtime="20201112 09:53:40.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.531" endtime="20201112 09:53:40.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.528" endtime="20201112 09:53:40.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.173" endtime="20201112 09:53:40.553"></status>
</kw>
<msg timestamp="20201112 09:53:40.554" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.561" endtime="20201112 09:53:40.571"></status>
</kw>
<msg timestamp="20201112 09:53:40.572" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:40.560" endtime="20201112 09:53:40.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.574" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:40.573" endtime="20201112 09:53:40.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.575" endtime="20201112 09:53:40.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.557" endtime="20201112 09:53:40.578"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.555" endtime="20201112 09:53:40.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.584" endtime="20201112 09:53:40.864"></status>
</kw>
<msg timestamp="20201112 09:53:40.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019219889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019221278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:40.583" endtime="20201112 09:53:40.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019219889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019221278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:40.868" endtime="20201112 09:53:40.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.877" endtime="20201112 09:53:40.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.580" endtime="20201112 09:53:40.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.579" endtime="20201112 09:53:40.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:40.883" level="INFO">${RESULT} = [{'time': 0.019221278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.019223556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:40.880" endtime="20201112 09:53:40.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:40.897" level="INFO">${OVERHEAD} = {'time': [0.019221278, 0.019223556, 0.019225972, 0.019228514, 0.019231181, 0.019233625, 0.019236056, 0.019238278, 0.019240681, 0.019242889, 0.019245153, 0.019247431, 0.019249625, 0.019252194, 0.019254...</msg>
<status status="PASS" starttime="20201112 09:53:40.884" endtime="20201112 09:53:40.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.901" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:40.900" endtime="20201112 09:53:40.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.904" level="INFO">VALUE: [1.389000000000945e-06, 9.870000000009038e-07, 9.860000000014302e-07, 9.859999999979607e-07, 9.589999999982945e-07, 9.43999999999251e-07, 9.870000000009038e-07, 9.59000000001764e-07, 9.309999999991547e-07, 9.859999999979607e-07, 9.720000000018603e-07, 9.869999999974344e-07, 1.000000000001e-06, 9.860000000014302e-07, 9.719999999983908e-07, 9.860000000014302e-07, 9.859999999979607e-07, 1.000000000001e-06, 1.000000000001e-06, 9.860000000014302e-07, 9.719999999983908e-07, 9.860000000014302e-07, 1.0419999999997098e-06, 9.73000000001334e-07, 9.869999999974344e-07, 9.57999999998821e-07, 9.720000000018603e-07, 1.0419999999997098e-06, 9.719999999983908e-07, 9.57999999998821e-07, 9.859999999979607e-07, 9.860000000014302e-07, 9.860000000014302e-07, 9.860000000014302e-07, 9.720000000018603e-07, 9.720000000018603e-07, 1.0410000000002362e-06, 9.869999999974344e-07, 9.860000000014302e-07, 1.000000000001e-06, 9.719999999983908e-07, 9.860000000014302e-07, 1.000000000001e-06, 9.719999999983908e-07, 9.720000000018603e-07, 9.859999999979607e-07, 9.719999999983908e-07, 9.859999999979607e-07, 9.719999999983908e-07, 9.719999999983908e-07]</msg>
<status status="PASS" starttime="20201112 09:53:40.902" endtime="20201112 09:53:40.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.898" endtime="20201112 09:53:40.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.907" endtime="20201112 09:53:40.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:40.911" endtime="20201112 09:53:40.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.909" endtime="20201112 09:53:40.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.906" endtime="20201112 09:53:40.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.554" endtime="20201112 09:53:40.931"></status>
</kw>
<msg timestamp="20201112 09:53:40.932" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.939" endtime="20201112 09:53:40.950"></status>
</kw>
<msg timestamp="20201112 09:53:40.951" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:40.938" endtime="20201112 09:53:40.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.953" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:40.952" endtime="20201112 09:53:40.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.954" endtime="20201112 09:53:40.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.935" endtime="20201112 09:53:40.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.933" endtime="20201112 09:53:40.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.963" endtime="20201112 09:53:41.253"></status>
</kw>
<msg timestamp="20201112 09:53:41.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019474542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019475931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:40.962" endtime="20201112 09:53:41.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019474542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019475931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:41.257" endtime="20201112 09:53:41.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.266" endtime="20201112 09:53:41.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.959" endtime="20201112 09:53:41.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.957" endtime="20201112 09:53:41.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:41.272" level="INFO">${RESULT} = [{'time': 0.019475931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3889999999974756e-06, 'source_diff': 1.3889999999974756e-06}, {'time': 0.019478347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:41.269" endtime="20201112 09:53:41.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:41.286" level="INFO">${OVERHEAD} = {'time': [0.019475931, 0.019478347, 0.019480667, 0.019483, 0.019485333, 0.0194875, 0.019489944, 0.019492319, 0.019494722, 0.019497097, 0.019499556, 0.019502056, 0.019504181, 0.019506431, 0.019508833, ...</msg>
<status status="PASS" starttime="20201112 09:53:41.273" endtime="20201112 09:53:41.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.290" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:41.289" endtime="20201112 09:53:41.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.293" level="INFO">VALUE: [1.3889999999974756e-06, 9.860000000014302e-07, 9.59000000001764e-07, 9.720000000018603e-07, 9.860000000014302e-07, 9.720000000018603e-07, 1.012999999997627e-06, 9.860000000014302e-07, 9.859999999979607e-07, 9.720000000018603e-07, 9.73000000001334e-07, 9.870000000009038e-07, 9.869999999974344e-07, 1.01400000000057e-06, 9.299999999996811e-07, 1.0419999999997098e-06, 9.860000000014302e-07, 9.57999999998821e-07, 9.860000000014302e-07, 9.580000000022904e-07, 9.57999999998821e-07, 9.859999999979607e-07, 9.720000000018603e-07, 9.860000000014302e-07, 1.01400000000057e-06, 9.57999999998821e-07, 9.720000000018603e-07, 9.589999999982945e-07, 9.720000000018603e-07, 9.719999999983908e-07, 9.720000000018603e-07, 9.859999999979607e-07, 9.720000000018603e-07, 9.860000000014302e-07, 9.860000000014302e-07, 9.859999999979607e-07, 9.999999999975306e-07, 1.000000000001e-06, 9.729999999978645e-07, 9.860000000014302e-07, 9.720000000018603e-07, 9.859999999979607e-07, 9.720000000018603e-07, 9.720000000018603e-07, 9.440000000027204e-07, 9.859999999979607e-07, 9.859999999979607e-07, 9.719999999983908e-07, 9.719999999983908e-07, 9.859999999979607e-07]</msg>
<status status="PASS" starttime="20201112 09:53:41.291" endtime="20201112 09:53:41.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.287" endtime="20201112 09:53:41.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.296" endtime="20201112 09:53:41.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:41.300" endtime="20201112 09:53:41.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.298" endtime="20201112 09:53:41.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.295" endtime="20201112 09:53:41.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.932" endtime="20201112 09:53:41.320"></status>
</kw>
<msg timestamp="20201112 09:53:41.321" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.328" endtime="20201112 09:53:41.339"></status>
</kw>
<msg timestamp="20201112 09:53:41.339" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:41.327" endtime="20201112 09:53:41.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.342" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:41.340" endtime="20201112 09:53:41.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.343" endtime="20201112 09:53:41.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.324" endtime="20201112 09:53:41.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.323" endtime="20201112 09:53:41.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.352" endtime="20201112 09:53:41.636"></status>
</kw>
<msg timestamp="20201112 09:53:41.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019399417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019400833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:41.350" endtime="20201112 09:53:41.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019399417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019400833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:41.640" endtime="20201112 09:53:41.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.648" endtime="20201112 09:53:41.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.348" endtime="20201112 09:53:41.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.346" endtime="20201112 09:53:41.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:41.655" level="INFO">${RESULT} = [{'time': 0.019400833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.019403111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:41.652" endtime="20201112 09:53:41.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:41.669" level="INFO">${OVERHEAD} = {'time': [0.019400833, 0.019403111, 0.019405569, 0.019407972, 0.019410181, 0.019412778, 0.019415333, 0.019417556, 0.019419722, 0.019422181, 0.019424778, 0.019427264, 0.019429792, 0.019432333, 0.019434...</msg>
<status status="PASS" starttime="20201112 09:53:41.656" endtime="20201112 09:53:41.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.673" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:41.672" endtime="20201112 09:53:41.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.675" level="INFO">VALUE: [1.4160000000006112e-06, 1.000000000001e-06, 9.720000000018603e-07, 9.859999999979607e-07, 9.869999999974344e-07, 9.719999999983908e-07, 9.860000000014302e-07, 9.869999999974344e-07, 9.860000000014302e-07, 1.000000000001e-06, 9.59000000001764e-07, 9.859999999979607e-07, 9.59000000001764e-07, 9.859999999979607e-07, 9.589999999982945e-07, 9.720000000018603e-07, 9.859999999979607e-07, 9.580000000022904e-07, 1.000000000001e-06, 9.73000000001334e-07, 9.859999999979607e-07, 9.859999999979607e-07, 9.870000000009038e-07, 9.999999999975306e-07, 9.860000000014302e-07, 9.73000000001334e-07, 9.860000000014302e-07, 9.870000000009038e-07, 9.73000000001334e-07, 9.73000000001334e-07, 9.859999999979607e-07, 1.000000000001e-06, 9.860000000014302e-07, 9.720000000018603e-07, 1.0139999999971006e-06, 9.719999999983908e-07, 9.860000000014302e-07, 9.859999999979607e-07, 9.860000000014302e-07, 9.859999999979607e-07, 1.000000000001e-06, 9.719999999983908e-07, 1.000000000001e-06, 9.720000000018603e-07, 9.589999999982945e-07, 9.860000000014302e-07, 9.719999999983908e-07, 9.870000000009038e-07, 9.719999999983908e-07, 1.000000000001e-06]</msg>
<status status="PASS" starttime="20201112 09:53:41.674" endtime="20201112 09:53:41.676"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.670" endtime="20201112 09:53:41.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.679" endtime="20201112 09:53:41.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:41.682" endtime="20201112 09:53:41.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.681" endtime="20201112 09:53:41.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.677" endtime="20201112 09:53:41.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.321" endtime="20201112 09:53:41.703"></status>
</kw>
<msg timestamp="20201112 09:53:41.703" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.711" endtime="20201112 09:53:41.722"></status>
</kw>
<msg timestamp="20201112 09:53:41.723" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:41.709" endtime="20201112 09:53:41.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.725" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:41.724" endtime="20201112 09:53:41.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.726" endtime="20201112 09:53:41.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.707" endtime="20201112 09:53:41.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.705" endtime="20201112 09:53:41.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.735" endtime="20201112 09:53:42.025"></status>
</kw>
<msg timestamp="20201112 09:53:42.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01969725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019698625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:53:41.734" endtime="20201112 09:53:42.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01969725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019698625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:53:42.029" endtime="20201112 09:53:42.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.038" endtime="20201112 09:53:42.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.731" endtime="20201112 09:53:42.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.729" endtime="20201112 09:53:42.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:42.044" level="INFO">${RESULT} = [{'time': 0.019698625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3750000000013751e-06, 'source_diff': 1.3750000000013751e-06}, {'time': 0.019701056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:42.041" endtime="20201112 09:53:42.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:42.059" level="INFO">${OVERHEAD} = {'time': [0.019698625, 0.019701056, 0.019703681, 0.019706306, 0.019708708, 0.019710819, 0.019713181, 0.019715681, 0.019718208, 0.019720778, 0.019722944, 0.0197255, 0.019728028, 0.019730681, 0.01973306...</msg>
<status status="PASS" starttime="20201112 09:53:42.045" endtime="20201112 09:53:42.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.063" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:42.062" endtime="20201112 09:53:42.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.066" level="INFO">VALUE: [1.3750000000013751e-06, 9.870000000009038e-07, 9.59000000001764e-07, 1.000000000001e-06, 9.859999999979607e-07, 9.720000000018603e-07, 9.870000000009038e-07, 9.869999999974344e-07, 9.860000000014302e-07, 9.720000000018603e-07, 9.719999999983908e-07, 9.860000000014302e-07, 9.720000000018603e-07, 9.73000000001334e-07, 9.719999999983908e-07, 9.720000000018603e-07, 9.860000000014302e-07, 1.01400000000057e-06, 9.719999999983908e-07, 9.73000000001334e-07, 9.719999999983908e-07, 9.719999999983908e-07, 9.859999999979607e-07, 9.860000000014302e-07, 9.859999999979607e-07, 9.720000000018603e-07, 9.859999999979607e-07, 1.01400000000057e-06, 1.01400000000057e-06, 9.719999999983908e-07, 9.860000000014302e-07, 1.000000000001e-06, 9.720000000018603e-07, 1.000000000001e-06, 9.729999999978645e-07, 9.860000000014302e-07, 9.73000000001334e-07, 9.860000000014302e-07, 9.720000000018603e-07, 9.720000000018603e-07, 9.729999999978645e-07, 9.860000000014302e-07, 1.000000000001e-06, 9.720000000018603e-07, 9.859999999979607e-07, 9.59000000001764e-07, 9.169999999995848e-07, 1.000000000001e-06, 9.299999999996811e-07, 9.720000000018603e-07]</msg>
<status status="PASS" starttime="20201112 09:53:42.064" endtime="20201112 09:53:42.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.060" endtime="20201112 09:53:42.067"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.069" endtime="20201112 09:53:42.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:42.073" endtime="20201112 09:53:42.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.071" endtime="20201112 09:53:42.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.068" endtime="20201112 09:53:42.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.704" endtime="20201112 09:53:42.093"></status>
</kw>
<msg timestamp="20201112 09:53:42.093" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.101" endtime="20201112 09:53:42.112"></status>
</kw>
<msg timestamp="20201112 09:53:42.113" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:42.100" endtime="20201112 09:53:42.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.115" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:42.114" endtime="20201112 09:53:42.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.116" endtime="20201112 09:53:42.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.097" endtime="20201112 09:53:42.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.095" endtime="20201112 09:53:42.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.125" endtime="20201112 09:53:42.414"></status>
</kw>
<msg timestamp="20201112 09:53:42.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019498153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019499528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:42.124" endtime="20201112 09:53:42.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019498153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019499528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:42.418" endtime="20201112 09:53:42.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.426" endtime="20201112 09:53:42.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.121" endtime="20201112 09:53:42.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.119" endtime="20201112 09:53:42.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:42.433" level="INFO">${RESULT} = [{'time': 0.019499528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999979057e-06, 'source_diff': 1.3749999999979057e-06}, {'time': 0.019502181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:42.429" endtime="20201112 09:53:42.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:42.446" level="INFO">${OVERHEAD} = {'time': [0.019499528, 0.019502181, 0.019504681, 0.019507083, 0.019509611, 0.019511806, 0.019514417, 0.019516792, 0.019519333, 0.019521569, 0.019524181, 0.019526389, 0.019528944, 0.019531264, 0.019533...</msg>
<status status="PASS" starttime="20201112 09:53:42.434" endtime="20201112 09:53:42.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.451" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:42.450" endtime="20201112 09:53:42.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.453" level="INFO">VALUE: [1.3749999999979057e-06, 9.59000000001764e-07, 9.870000000009038e-07, 1.01400000000057e-06, 9.859999999979607e-07, 9.729999999978645e-07, 9.859999999979607e-07, 1.000000000001e-06, 9.719999999983908e-07, 9.859999999979607e-07, 9.870000000009038e-07, 9.860000000014302e-07, 9.57999999998821e-07, 9.719999999983908e-07, 9.859999999979607e-07, 9.860000000014302e-07, 9.860000000014302e-07, 1.000000000001e-06, 9.859999999979607e-07, 9.720000000018603e-07, 9.719999999983908e-07, 1.0419999999997098e-06, 9.720000000018603e-07, 9.869999999974344e-07, 9.860000000014302e-07, 9.720000000018603e-07, 9.860000000014302e-07, 9.719999999983908e-07, 1.01400000000057e-06, 9.720000000018603e-07, 9.719999999983908e-07, 9.860000000014302e-07, 9.720000000018603e-07, 1.01400000000057e-06, 9.859999999979607e-07, 9.720000000018603e-07, 9.720000000018603e-07, 9.720000000018603e-07, 9.59000000001764e-07, 9.720000000018603e-07, 9.860000000014302e-07, 9.860000000014302e-07, 9.859999999979607e-07, 1.000000000001e-06, 9.999999999975306e-07, 9.43999999999251e-07, 1.0139999999971006e-06, 9.720000000018603e-07, 1.0409999999967667e-06, 9.73000000001334e-07]</msg>
<status status="PASS" starttime="20201112 09:53:42.452" endtime="20201112 09:53:42.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.448" endtime="20201112 09:53:42.469"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.471" endtime="20201112 09:53:42.473"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:42.475" endtime="20201112 09:53:42.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.473" endtime="20201112 09:53:42.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.469" endtime="20201112 09:53:42.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.094" endtime="20201112 09:53:42.496"></status>
</kw>
<msg timestamp="20201112 09:53:42.496" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.504" endtime="20201112 09:53:42.515"></status>
</kw>
<msg timestamp="20201112 09:53:42.516" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:42.502" endtime="20201112 09:53:42.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.518" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:42.517" endtime="20201112 09:53:42.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.519" endtime="20201112 09:53:42.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.500" endtime="20201112 09:53:42.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.498" endtime="20201112 09:53:42.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.528" endtime="20201112 09:53:42.809"></status>
</kw>
<msg timestamp="20201112 09:53:42.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019991917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019993278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:42.526" endtime="20201112 09:53:42.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019991917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019993278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:42.813" endtime="20201112 09:53:42.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.821" endtime="20201112 09:53:42.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.524" endtime="20201112 09:53:42.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.522" endtime="20201112 09:53:42.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:42.828" level="INFO">${RESULT} = [{'time': 0.019993278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.019995611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:42.824" endtime="20201112 09:53:42.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:42.841" level="INFO">${OVERHEAD} = {'time': [0.019993278, 0.019995611, 0.019997958, 0.020000389, 0.020002542, 0.020004681, 0.020007111, 0.020009556, 0.020012181, 0.020014375, 0.020016833, 0.020019319, 0.020021931, 0.020024611, 0.020027...</msg>
<status status="PASS" starttime="20201112 09:53:42.828" endtime="20201112 09:53:42.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.846" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:42.845" endtime="20201112 09:53:42.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.848" level="INFO">VALUE: [1.3609999999983358e-06, 9.860000000014302e-07, 9.860000000014302e-07, 1.000000000001e-06, 9.170000000030543e-07, 1.000000000001e-06, 9.860000000014302e-07, 1.000000000001e-06, 9.870000000009038e-07, 9.860000000014302e-07, 9.720000000018603e-07, 9.860000000014302e-07, 9.870000000009038e-07, 9.860000000014302e-07, 9.57999999998821e-07, 9.59000000001764e-07, 9.860000000014302e-07, 9.859999999979607e-07, 9.860000000014302e-07, 9.729999999978645e-07, 9.73000000001334e-07, 9.860000000014302e-07, 1.0419999999997098e-06, 1.02800000000014e-06, 9.860000000014302e-07, 9.73000000001334e-07, 9.999999999975306e-07, 9.440000000027204e-07, 9.859999999979607e-07, 9.720000000018603e-07, 9.73000000001334e-07, 9.860000000014302e-07, 9.729999999978645e-07, 9.729999999978645e-07, 9.859999999979607e-07, 9.719999999983908e-07, 9.859999999979607e-07, 9.860000000014302e-07, 9.859999999979607e-07, 1.000000000001e-06, 9.720000000018603e-07, 9.719999999983908e-07, 9.729999999978645e-07, 9.729999999978645e-07, 1.000000000001e-06, 9.719999999983908e-07, 9.860000000014302e-07, 1.000000000001e-06, 9.73000000001334e-07, 9.859999999979607e-07]</msg>
<status status="PASS" starttime="20201112 09:53:42.847" endtime="20201112 09:53:42.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.842" endtime="20201112 09:53:42.849"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.852" endtime="20201112 09:53:42.853"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:42.855" endtime="20201112 09:53:42.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.854" endtime="20201112 09:53:42.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.850" endtime="20201112 09:53:42.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.496" endtime="20201112 09:53:42.876"></status>
</kw>
<msg timestamp="20201112 09:53:42.876" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.883" endtime="20201112 09:53:42.895"></status>
</kw>
<msg timestamp="20201112 09:53:42.895" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:42.882" endtime="20201112 09:53:42.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.898" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:42.896" endtime="20201112 09:53:42.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.899" endtime="20201112 09:53:42.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.879" endtime="20201112 09:53:42.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.878" endtime="20201112 09:53:42.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.908" endtime="20201112 09:53:43.188"></status>
</kw>
<msg timestamp="20201112 09:53:43.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019237792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019239167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:42.906" endtime="20201112 09:53:43.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019237792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019239167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:43.192" endtime="20201112 09:53:43.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.200" endtime="20201112 09:53:43.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.904" endtime="20201112 09:53:43.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.902" endtime="20201112 09:53:43.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:43.207" level="INFO">${RESULT} = [{'time': 0.019239167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3750000000013751e-06, 'source_diff': 1.3750000000013751e-06}, {'time': 0.019241417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:43.204" endtime="20201112 09:53:43.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:43.221" level="INFO">${OVERHEAD} = {'time': [0.019239167, 0.019241417, 0.019243681, 0.019246264, 0.019248903, 0.019251347, 0.019253653, 0.019255792, 0.019258125, 0.019260319, 0.019262528, 0.019265028, 0.019267597, 0.019270181, 0.019272...</msg>
<status status="PASS" starttime="20201112 09:53:43.208" endtime="20201112 09:53:43.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.225" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:43.224" endtime="20201112 09:53:43.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.228" level="INFO">VALUE: [1.3750000000013751e-06, 9.860000000014302e-07, 9.999999999975306e-07, 9.719999999983908e-07, 9.860000000014302e-07, 1.0410000000002362e-06, 9.719999999983908e-07, 9.860000000014302e-07, 9.720000000018603e-07, 9.720000000018603e-07, 9.720000000018603e-07, 9.719999999983908e-07, 9.860000000014302e-07, 9.870000000009038e-07, 9.729999999978645e-07, 9.859999999979607e-07, 9.57999999998821e-07, 9.860000000014302e-07, 9.719999999983908e-07, 9.859999999979607e-07, 9.43999999999251e-07, 9.309999999991547e-07, 9.859999999979607e-07, 1.0419999999997098e-06, 9.860000000014302e-07, 9.57999999998821e-07, 9.859999999979607e-07, 9.449999999987246e-07, 1.012999999997627e-06, 9.870000000009038e-07, 9.720000000018603e-07, 9.860000000014302e-07, 9.73000000001334e-07, 9.720000000018603e-07, 9.720000000018603e-07, 9.720000000018603e-07, 9.73000000001334e-07, 9.720000000018603e-07, 9.860000000014302e-07, 9.719999999983908e-07, 9.870000000009038e-07, 9.720000000018603e-07, 1.000000000001e-06, 9.73000000001334e-07, 9.719999999983908e-07, 9.719999999983908e-07, 9.860000000014302e-07, 9.859999999979607e-07, 9.999999999975306e-07, 9.860000000014302e-07]</msg>
<status status="PASS" starttime="20201112 09:53:43.226" endtime="20201112 09:53:43.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.222" endtime="20201112 09:53:43.229"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.231" endtime="20201112 09:53:43.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:43.235" endtime="20201112 09:53:43.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.233" endtime="20201112 09:53:43.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.230" endtime="20201112 09:53:43.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.877" endtime="20201112 09:53:43.255"></status>
</kw>
<msg timestamp="20201112 09:53:43.256" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.263" endtime="20201112 09:53:43.274"></status>
</kw>
<msg timestamp="20201112 09:53:43.275" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:43.262" endtime="20201112 09:53:43.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.277" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:43.276" endtime="20201112 09:53:43.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.278" endtime="20201112 09:53:43.280"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.259" endtime="20201112 09:53:43.280"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.257" endtime="20201112 09:53:43.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.287" endtime="20201112 09:53:43.569"></status>
</kw>
<msg timestamp="20201112 09:53:43.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019376222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019377611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:43.286" endtime="20201112 09:53:43.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019376222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019377611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:43.574" endtime="20201112 09:53:43.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.582" endtime="20201112 09:53:43.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.283" endtime="20201112 09:53:43.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.281" endtime="20201112 09:53:43.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:43.588" level="INFO">${RESULT} = [{'time': 0.019377611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.019380278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:43.585" endtime="20201112 09:53:43.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:43.603" level="INFO">${OVERHEAD} = {'time': [0.019377611, 0.019380278, 0.019382528, 0.019384931, 0.019387528, 0.019389792, 0.019392333, 0.019394681, 0.019397347, 0.019399944, 0.019402486, 0.019404722, 0.019407319, 0.019409833, 0.019412...</msg>
<status status="PASS" starttime="20201112 09:53:43.589" endtime="20201112 09:53:43.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.607" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:43.606" endtime="20201112 09:53:43.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.610" level="INFO">VALUE: [1.389000000000945e-06, 9.860000000014302e-07, 9.859999999979607e-07, 9.870000000009038e-07, 9.860000000014302e-07, 9.589999999982945e-07, 9.860000000014302e-07, 9.449999999987246e-07, 9.719999999983908e-07, 9.719999999983908e-07, 9.860000000014302e-07, 9.859999999979607e-07, 1.012999999997627e-06, 9.720000000018603e-07, 9.860000000014302e-07, 9.719999999983908e-07, 9.859999999979607e-07, 9.859999999979607e-07, 9.860000000014302e-07, 9.859999999979607e-07, 9.860000000014302e-07, 9.719999999983908e-07, 9.720000000018603e-07, 9.169999999995848e-07, 9.73000000001334e-07, 9.859999999979607e-07, 9.57999999998821e-07, 9.860000000014302e-07, 1.01400000000057e-06, 9.719999999983908e-07, 9.870000000009038e-07, 9.589999999982945e-07, 1.000000000001e-06, 9.860000000014302e-07, 1.01400000000057e-06, 9.719999999983908e-07, 9.719999999983908e-07, 9.860000000014302e-07, 9.860000000014302e-07, 9.719999999983908e-07, 9.870000000009038e-07, 1.000000000001e-06, 9.299999999996811e-07, 9.860000000014302e-07, 9.719999999983908e-07, 9.859999999979607e-07, 1.0419999999997098e-06, 9.719999999983908e-07, 9.859999999979607e-07, 9.860000000014302e-07]</msg>
<status status="PASS" starttime="20201112 09:53:43.608" endtime="20201112 09:53:43.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.604" endtime="20201112 09:53:43.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.613" endtime="20201112 09:53:43.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:43.617" endtime="20201112 09:53:43.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.615" endtime="20201112 09:53:43.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.612" endtime="20201112 09:53:43.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.256" endtime="20201112 09:53:43.637"></status>
</kw>
<msg timestamp="20201112 09:53:43.637" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.645" endtime="20201112 09:53:43.657"></status>
</kw>
<msg timestamp="20201112 09:53:43.657" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:43.643" endtime="20201112 09:53:43.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.660" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:43.658" endtime="20201112 09:53:43.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.661" endtime="20201112 09:53:43.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.641" endtime="20201112 09:53:43.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.639" endtime="20201112 09:53:43.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.670" endtime="20201112 09:53:43.959"></status>
</kw>
<msg timestamp="20201112 09:53:43.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01950775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019509139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:53:43.668" endtime="20201112 09:53:43.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01950775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019509139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:53:43.963" endtime="20201112 09:53:43.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.972" endtime="20201112 09:53:43.973"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.666" endtime="20201112 09:53:43.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.664" endtime="20201112 09:53:43.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:43.978" level="INFO">${RESULT} = [{'time': 0.019509139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.019511611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:43.975" endtime="20201112 09:53:43.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:43.992" level="INFO">${OVERHEAD} = {'time': [0.019509139, 0.019511611, 0.019514083, 0.01951625, 0.019518389, 0.01952075, 0.019523417, 0.019526042, 0.019528375, 0.0195305, 0.01953275, 0.019535, 0.019537542, 0.019539778, 0.019541944, 0.0...</msg>
<status status="PASS" starttime="20201112 09:53:43.979" endtime="20201112 09:53:43.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.997" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:43.996" endtime="20201112 09:53:43.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.999" level="INFO">VALUE: [1.389000000000945e-06, 9.720000000018603e-07, 9.860000000014302e-07, 9.859999999979607e-07, 1.000000000001e-06, 9.860000000014302e-07, 1.01400000000057e-06, 1.0559999999992797e-06, 9.720000000018603e-07, 9.859999999979607e-07, 9.720000000018603e-07, 1.000000000001e-06, 9.860000000014302e-07, 9.860000000014302e-07, 9.859999999979607e-07, 9.859999999979607e-07, 1.000000000001e-06, 9.859999999979607e-07, 9.860000000014302e-07, 9.309999999991547e-07, 9.719999999983908e-07, 9.859999999979607e-07, 9.73000000001334e-07, 1.000000000001e-06, 9.719999999983908e-07, 9.870000000009038e-07, 9.43999999999251e-07, 9.729999999978645e-07, 9.860000000014302e-07, 1.000000000001e-06, 9.030000000000149e-07, 9.719999999983908e-07, 9.860000000014302e-07, 9.720000000018603e-07, 1.000000000001e-06, 9.860000000014302e-07, 9.859999999979607e-07, 9.309999999991547e-07, 1.000000000001e-06, 9.720000000018603e-07, 9.719999999983908e-07, 9.73000000001334e-07, 9.57999999998821e-07, 1.01400000000057e-06, 9.860000000014302e-07, 9.860000000014302e-07, 9.859999999979607e-07, 9.449999999987246e-07, 9.720000000018603e-07, 1.000000000001e-06]</msg>
<status status="PASS" starttime="20201112 09:53:43.998" endtime="20201112 09:53:44.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.993" endtime="20201112 09:53:44.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.003" endtime="20201112 09:53:44.004"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:44.006" endtime="20201112 09:53:44.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.005" endtime="20201112 09:53:44.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.001" endtime="20201112 09:53:44.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.638" endtime="20201112 09:53:44.027"></status>
</kw>
<msg timestamp="20201112 09:53:44.027" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.035" endtime="20201112 09:53:44.047"></status>
</kw>
<msg timestamp="20201112 09:53:44.047" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:44.034" endtime="20201112 09:53:44.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.049" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:44.048" endtime="20201112 09:53:44.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.051" endtime="20201112 09:53:44.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.031" endtime="20201112 09:53:44.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.029" endtime="20201112 09:53:44.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.060" endtime="20201112 09:53:44.340"></status>
</kw>
<msg timestamp="20201112 09:53:44.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019979833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019981236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:44.058" endtime="20201112 09:53:44.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019979833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019981236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:44.345" endtime="20201112 09:53:44.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.353" endtime="20201112 09:53:44.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.056" endtime="20201112 09:53:44.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.054" endtime="20201112 09:53:44.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:44.360" level="INFO">${RESULT} = [{'time': 0.019981236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.019983569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:44.357" endtime="20201112 09:53:44.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:44.374" level="INFO">${OVERHEAD} = {'time': [0.019981236, 0.019983569, 0.019985792, 0.019987958, 0.0199905, 0.019993069, 0.019995556, 0.019997986, 0.020000333, 0.020002986, 0.020005542, 0.020008111, 0.020010431, 0.020012931, 0.02001518...</msg>
<status status="PASS" starttime="20201112 09:53:44.361" endtime="20201112 09:53:44.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.378" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:44.377" endtime="20201112 09:53:44.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.381" level="INFO">VALUE: [1.403000000000515e-06, 9.160000000001112e-07, 9.999999999975306e-07, 1.000000000001e-06, 9.860000000014302e-07, 9.719999999983908e-07, 9.870000000009038e-07, 9.859999999979607e-07, 9.719999999983908e-07, 9.57999999998821e-07, 9.860000000014302e-07, 9.999999999975306e-07, 9.589999999982945e-07, 9.450000000021941e-07, 9.870000000009038e-07, 9.860000000014302e-07, 9.860000000014302e-07, 9.720000000018603e-07, 9.859999999979607e-07, 9.859999999979607e-07, 9.719999999983908e-07, 1.01400000000057e-06, 9.57999999998821e-07, 1.000000000001e-06, 9.73000000001334e-07, 9.449999999987246e-07, 9.73000000001334e-07, 1.000000000001e-06, 9.859999999979607e-07, 9.870000000009038e-07, 1.0130000000010964e-06, 9.729999999978645e-07, 1.000000000001e-06, 1.000000000001e-06, 9.860000000014302e-07, 1.01400000000057e-06, 9.73000000001334e-07, 9.719999999983908e-07, 9.860000000014302e-07, 9.73000000001334e-07, 9.57999999998821e-07, 9.719999999983908e-07, 9.860000000014302e-07, 9.73000000001334e-07, 9.859999999979607e-07, 9.870000000009038e-07, 9.720000000018603e-07, 9.860000000014302e-07, 9.720000000018603e-07, 9.719999999983908e-07]</msg>
<status status="PASS" starttime="20201112 09:53:44.379" endtime="20201112 09:53:44.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.375" endtime="20201112 09:53:44.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.384" endtime="20201112 09:53:44.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:44.387" endtime="20201112 09:53:44.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.386" endtime="20201112 09:53:44.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.382" endtime="20201112 09:53:44.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.028" endtime="20201112 09:53:44.408"></status>
</kw>
<msg timestamp="20201112 09:53:44.408" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.416" endtime="20201112 09:53:44.427"></status>
</kw>
<msg timestamp="20201112 09:53:44.427" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:44.414" endtime="20201112 09:53:44.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.430" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:44.428" endtime="20201112 09:53:44.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.431" endtime="20201112 09:53:44.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.412" endtime="20201112 09:53:44.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.410" endtime="20201112 09:53:44.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.440" endtime="20201112 09:53:44.726"></status>
</kw>
<msg timestamp="20201112 09:53:44.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019435542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019436931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:44.438" endtime="20201112 09:53:44.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019435542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019436931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:44.730" endtime="20201112 09:53:44.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.738" endtime="20201112 09:53:44.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.436" endtime="20201112 09:53:44.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.434" endtime="20201112 09:53:44.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:44.746" level="INFO">${RESULT} = [{'time': 0.019436931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.019439403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:44.743" endtime="20201112 09:53:44.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:44.759" level="INFO">${OVERHEAD} = {'time': [0.019436931, 0.019439403, 0.019441861, 0.019444486, 0.01944675, 0.019449403, 0.019451889, 0.019454486, 0.019456667, 0.019459347, 0.019461528, 0.019464083, 0.019466403, 0.019469056, 0.0194712...</msg>
<status status="PASS" starttime="20201112 09:53:44.747" endtime="20201112 09:53:44.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.764" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:44.763" endtime="20201112 09:53:44.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.766" level="INFO">VALUE: [1.389000000000945e-06, 9.720000000018603e-07, 9.720000000018603e-07, 9.860000000014302e-07, 9.719999999983908e-07, 9.450000000021941e-07, 9.449999999987246e-07, 9.169999999995848e-07, 9.860000000014302e-07, 9.57999999998821e-07, 9.719999999983908e-07, 9.860000000014302e-07, 9.59000000001764e-07, 9.869999999974344e-07, 1.000000000001e-06, 9.720000000018603e-07, 9.729999999978645e-07, 9.860000000014302e-07, 9.720000000018603e-07, 9.860000000014302e-07, 9.859999999979607e-07, 9.720000000018603e-07, 9.859999999979607e-07, 9.859999999979607e-07, 9.859999999979607e-07, 9.720000000018603e-07, 9.169999999995848e-07, 9.57999999998821e-07, 9.450000000021941e-07, 1.02800000000014e-06, 9.57999999998821e-07, 9.720000000018603e-07, 9.859999999979607e-07, 9.999999999975306e-07, 9.860000000014302e-07, 1.0139999999971006e-06, 9.860000000014302e-07, 9.719999999983908e-07, 9.73000000001334e-07, 9.859999999979607e-07, 9.860000000014302e-07, 9.719999999983908e-07, 9.860000000014302e-07, 9.859999999979607e-07, 9.860000000014302e-07, 9.310000000026242e-07, 9.859999999979607e-07, 9.860000000014302e-07, 9.999999999975306e-07, 9.860000000014302e-07]</msg>
<status status="PASS" starttime="20201112 09:53:44.765" endtime="20201112 09:53:44.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.760" endtime="20201112 09:53:44.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.770" endtime="20201112 09:53:44.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:44.773" endtime="20201112 09:53:44.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.771" endtime="20201112 09:53:44.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.768" endtime="20201112 09:53:44.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.409" endtime="20201112 09:53:44.794"></status>
</kw>
<msg timestamp="20201112 09:53:44.794" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.801" endtime="20201112 09:53:44.813"></status>
</kw>
<msg timestamp="20201112 09:53:44.813" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:44.800" endtime="20201112 09:53:44.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.816" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:44.814" endtime="20201112 09:53:44.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.817" endtime="20201112 09:53:44.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.797" endtime="20201112 09:53:44.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.796" endtime="20201112 09:53:44.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.825" endtime="20201112 09:53:45.108"></status>
</kw>
<msg timestamp="20201112 09:53:45.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019368694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019370056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:44.824" endtime="20201112 09:53:45.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019368694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019370056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:45.113" endtime="20201112 09:53:45.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.121" endtime="20201112 09:53:45.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.821" endtime="20201112 09:53:45.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.820" endtime="20201112 09:53:45.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:45.127" level="INFO">${RESULT} = [{'time': 0.019370056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3620000000012789e-06, 'source_diff': 1.3620000000012789e-06}, {'time': 0.019372569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:45.124" endtime="20201112 09:53:45.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:45.141" level="INFO">${OVERHEAD} = {'time': [0.019370056, 0.019372569, 0.019374778, 0.019377194, 0.019379611, 0.019381958, 0.019384653, 0.019387278, 0.019389722, 0.019392056, 0.019394292, 0.019396653, 0.019399042, 0.019401542, 0.019403...</msg>
<status status="PASS" starttime="20201112 09:53:45.128" endtime="20201112 09:53:45.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.146" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:45.145" endtime="20201112 09:53:45.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.148" level="INFO">VALUE: [1.3620000000012789e-06, 9.859999999979607e-07, 9.859999999979607e-07, 1.054999999999806e-06, 9.580000000022904e-07, 9.860000000014302e-07, 9.59000000001764e-07, 9.860000000014302e-07, 9.720000000018603e-07, 1.01400000000057e-06, 1.000000000001e-06, 9.719999999983908e-07, 9.449999999987246e-07, 9.73000000001334e-07, 9.720000000018603e-07, 9.729999999978645e-07, 9.999999999975306e-07, 9.860000000014302e-07, 9.870000000009038e-07, 9.859999999979607e-07, 1.000000000001e-06, 9.860000000014302e-07, 9.73000000001334e-07, 9.860000000014302e-07, 9.859999999979607e-07, 9.859999999979607e-07, 9.860000000014302e-07, 1.02800000000014e-06, 9.859999999979607e-07, 1.000000000001e-06, 9.43999999999251e-07, 9.719999999983908e-07, 9.860000000014302e-07, 9.719999999983908e-07, 1.000000000001e-06, 9.720000000018603e-07, 9.859999999979607e-07, 9.859999999979607e-07, 9.860000000014302e-07, 9.73000000001334e-07, 9.719999999983908e-07, 9.999999999975306e-07, 9.720000000018603e-07, 1.000000000001e-06, 9.73000000001334e-07, 1.000000000001e-06, 9.860000000014302e-07, 1.0420000000031793e-06, 9.719999999983908e-07, 9.860000000014302e-07]</msg>
<status status="PASS" starttime="20201112 09:53:45.147" endtime="20201112 09:53:45.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.142" endtime="20201112 09:53:45.149"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.152" endtime="20201112 09:53:45.153"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:45.155" endtime="20201112 09:53:45.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.154" endtime="20201112 09:53:45.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.150" endtime="20201112 09:53:45.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.794" endtime="20201112 09:53:45.176"></status>
</kw>
<msg timestamp="20201112 09:53:45.176" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.184" endtime="20201112 09:53:45.195"></status>
</kw>
<msg timestamp="20201112 09:53:45.195" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:45.182" endtime="20201112 09:53:45.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.198" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:45.196" endtime="20201112 09:53:45.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.199" endtime="20201112 09:53:45.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.180" endtime="20201112 09:53:45.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.178" endtime="20201112 09:53:45.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.208" endtime="20201112 09:53:45.490"></status>
</kw>
<msg timestamp="20201112 09:53:45.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019286625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019288014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:45.206" endtime="20201112 09:53:45.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019286625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019288014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:45.494" endtime="20201112 09:53:45.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.502" endtime="20201112 09:53:45.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.204" endtime="20201112 09:53:45.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.202" endtime="20201112 09:53:45.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:45.509" level="INFO">${RESULT} = [{'time': 0.019288014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3889999999974756e-06, 'source_diff': 1.3889999999974756e-06}, {'time': 0.019290583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:45.506" endtime="20201112 09:53:45.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:45.522" level="INFO">${OVERHEAD} = {'time': [0.019288014, 0.019290583, 0.019292861, 0.019295097, 0.019297653, 0.019300028, 0.019302681, 0.019304861, 0.019307083, 0.019309389, 0.019311639, 0.019313806, 0.0193165, 0.019319111, 0.01932134...</msg>
<status status="PASS" starttime="20201112 09:53:45.510" endtime="20201112 09:53:45.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.526" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:45.525" endtime="20201112 09:53:45.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.529" level="INFO">VALUE: [1.3889999999974756e-06, 9.299999999996811e-07, 9.860000000014302e-07, 9.299999999996811e-07, 9.860000000014302e-07, 9.720000000018603e-07, 9.999999999975306e-07, 9.719999999983908e-07, 9.999999999975306e-07, 9.860000000014302e-07, 9.719999999983908e-07, 9.729999999978645e-07, 9.860000000014302e-07, 9.860000000014302e-07, 9.719999999983908e-07, 9.729999999978645e-07, 9.719999999983908e-07, 9.859999999979607e-07, 9.860000000014302e-07, 9.860000000014302e-07, 9.43999999999251e-07, 9.860000000014302e-07, 9.860000000014302e-07, 9.719999999983908e-07, 9.720000000018603e-07, 9.57999999998821e-07, 9.859999999979607e-07, 9.859999999979607e-07, 9.720000000018603e-07, 9.859999999979607e-07, 1.000000000001e-06, 9.860000000014302e-07, 9.860000000014302e-07, 9.859999999979607e-07, 1.000000000001e-06, 9.999999999975306e-07, 9.73000000001334e-07, 9.719999999983908e-07, 9.859999999979607e-07, 9.719999999983908e-07, 9.450000000021941e-07, 1.000000000001e-06, 9.580000000022904e-07, 1.000000000001e-06, 9.589999999982945e-07, 9.869999999974344e-07, 9.720000000018603e-07, 9.859999999979607e-07, 9.859999999979607e-07, 9.860000000014302e-07]</msg>
<status status="PASS" starttime="20201112 09:53:45.527" endtime="20201112 09:53:45.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.523" endtime="20201112 09:53:45.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.532" endtime="20201112 09:53:45.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:45.536" endtime="20201112 09:53:45.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.534" endtime="20201112 09:53:45.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.531" endtime="20201112 09:53:45.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.177" endtime="20201112 09:53:45.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.865" endtime="20201112 09:53:45.557"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:45.561" endtime="20201112 09:53:45.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.559" endtime="20201112 09:53:45.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.558" endtime="20201112 09:53:45.581"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:37.793" endtime="20201112 09:53:45.582" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:45.590" endtime="20201112 09:53:45.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.588" endtime="20201112 09:53:45.610"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.622" endtime="20201112 09:53:45.639"></status>
</kw>
<msg timestamp="20201112 09:53:45.640" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:45.621" endtime="20201112 09:53:45.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.642" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:45.641" endtime="20201112 09:53:45.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.645" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:45.643" endtime="20201112 09:53:45.645"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:45.618" endtime="20201112 09:53:45.646"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:45.616" endtime="20201112 09:53:45.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.615" endtime="20201112 09:53:45.647"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:45.651" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:45.650" endtime="20201112 09:53:45.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.648" endtime="20201112 09:53:45.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.614" endtime="20201112 09:53:45.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.613" endtime="20201112 09:53:45.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.652" endtime="20201112 09:53:45.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.612" endtime="20201112 09:53:45.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.610" endtime="20201112 09:53:45.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.587" endtime="20201112 09:53:45.655"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.664" endtime="20201112 09:53:45.684"></status>
</kw>
<msg timestamp="20201112 09:53:45.684" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:45.662" endtime="20201112 09:53:45.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.687" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:45.685" endtime="20201112 09:53:45.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.688" endtime="20201112 09:53:45.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.660" endtime="20201112 09:53:45.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.658" endtime="20201112 09:53:45.690"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.692" endtime="20201112 09:53:45.694"></status>
</kw>
<msg timestamp="20201112 09:53:45.694" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:53:45.691" endtime="20201112 09:53:45.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.698" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:53:45.697" endtime="20201112 09:53:45.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.700" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:53:45.699" endtime="20201112 09:53:45.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.695" endtime="20201112 09:53:45.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.705" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:53:45.704" endtime="20201112 09:53:45.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.707" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:53:45.706" endtime="20201112 09:53:45.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.702" endtime="20201112 09:53:45.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.714" endtime="20201112 09:53:45.996"></status>
</kw>
<msg timestamp="20201112 09:53:45.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067460361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067463889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:45.713" endtime="20201112 09:53:45.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067460361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067463889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:46.000" endtime="20201112 09:53:46.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.008" endtime="20201112 09:53:46.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.710" endtime="20201112 09:53:46.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.709" endtime="20201112 09:53:46.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:46.015" level="INFO">${RESULT} = [{'time': 0.067463889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.067468667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:53:46.012" endtime="20201112 09:53:46.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:46.028" level="INFO">${OVERHEAD} = {'time': [0.067463889, 0.067468667, 0.067473028, 0.067477139, 0.067481639, 0.06748625, 0.067490542, 0.067494611, 0.06749925, 0.067503889, 0.067508139, 0.067512778, 0.067516819, 0.067521472, 0.06752576...</msg>
<status status="PASS" starttime="20201112 09:53:46.016" endtime="20201112 09:53:46.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.033" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 09:53:46.032" endtime="20201112 09:53:46.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.036" level="INFO">VALUE: [3.52800000000264e-06, 2.9169999999911767e-06, 2.861000000006775e-06, 2.833000000007635e-06, 2.832999999993757e-06, 2.860999999992897e-06, 2.874999999999406e-06, 2.847000000000266e-06, 2.860999999992897e-06, 2.847000000000266e-06, 2.860999999992897e-06, 2.874999999999406e-06, 2.861000000006775e-06, 2.819000000001126e-06, 2.847000000000266e-06, 2.8479999999997396e-06, 2.832999999993757e-06, 2.860999999992897e-06, 2.861000000006775e-06, 2.861000000006775e-06, 2.860999999992897e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.833000000007635e-06, 2.861000000006775e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.832999999993757e-06, 2.860999999992897e-06, 2.8479999999997396e-06, 2.847000000000266e-06, 2.901999999999072e-06, 2.916000000005581e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.874999999999406e-06, 2.819000000001126e-06, 2.847000000000266e-06, 2.860999999992897e-06, 2.8479999999997396e-06, 2.861000000006775e-06, 2.874999999999406e-06, 2.8890000000059146e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.860999999992897e-06]</msg>
<status status="PASS" starttime="20201112 09:53:46.034" endtime="20201112 09:53:46.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.029" endtime="20201112 09:53:46.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.039" endtime="20201112 09:53:46.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:46.042" endtime="20201112 09:53:46.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.041" endtime="20201112 09:53:46.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.037" endtime="20201112 09:53:46.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.656" endtime="20201112 09:53:46.063"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:45.584" endtime="20201112 09:53:46.064" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:46.072" endtime="20201112 09:53:46.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.071" endtime="20201112 09:53:46.092"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.106" endtime="20201112 09:53:46.122"></status>
</kw>
<msg timestamp="20201112 09:53:46.122" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:46.104" endtime="20201112 09:53:46.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.125" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:46.124" endtime="20201112 09:53:46.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.128" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:46.126" endtime="20201112 09:53:46.128"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:46.101" endtime="20201112 09:53:46.129"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:46.099" endtime="20201112 09:53:46.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.097" endtime="20201112 09:53:46.130"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:46.133" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:46.133" endtime="20201112 09:53:46.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.131" endtime="20201112 09:53:46.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.097" endtime="20201112 09:53:46.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.096" endtime="20201112 09:53:46.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.135" endtime="20201112 09:53:46.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.095" endtime="20201112 09:53:46.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.093" endtime="20201112 09:53:46.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.069" endtime="20201112 09:53:46.138"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.148" endtime="20201112 09:53:46.189"></status>
</kw>
<msg timestamp="20201112 09:53:46.189" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:46.146" endtime="20201112 09:53:46.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.192" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:46.190" endtime="20201112 09:53:46.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.193" endtime="20201112 09:53:46.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.143" endtime="20201112 09:53:46.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.141" endtime="20201112 09:53:46.195"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.197" endtime="20201112 09:53:46.199"></status>
</kw>
<msg timestamp="20201112 09:53:46.199" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:53:46.196" endtime="20201112 09:53:46.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.203" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:53:46.202" endtime="20201112 09:53:46.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.206" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:53:46.205" endtime="20201112 09:53:46.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.200" endtime="20201112 09:53:46.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.210" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:53:46.209" endtime="20201112 09:53:46.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.212" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:53:46.211" endtime="20201112 09:53:46.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.207" endtime="20201112 09:53:46.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.221" endtime="20201112 09:53:46.507"></status>
</kw>
<msg timestamp="20201112 09:53:46.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068125347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068142014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:46.218" endtime="20201112 09:53:46.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068125347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068142014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:46.511" endtime="20201112 09:53:46.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.519" endtime="20201112 09:53:46.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.216" endtime="20201112 09:53:46.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.214" endtime="20201112 09:53:46.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:46.525" level="INFO">${RESULT} = [{'time': 0.068142014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.666699999999799e-05, 'source_diff': 1.666699999999799e-05}, {'time': 0.068606181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:46.522" endtime="20201112 09:53:46.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:46.540" level="INFO">${OVERHEAD} = {'time': [0.068142014, 0.068606181, 0.069069542, 0.069532792, 0.06999625, 0.070459889, 0.070923167, 0.071386819, 0.071850569, 0.072314056, 0.072777625, 0.073241069, 0.073704597, 0.074168236, 0.0746316...</msg>
<status status="PASS" starttime="20201112 09:53:46.526" endtime="20201112 09:53:46.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.545" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 09:53:46.544" endtime="20201112 09:53:46.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.548" level="INFO">VALUE: [1.666699999999799e-05, 1.6181000000003998e-05, 1.6181000000003998e-05, 1.6236000000002804e-05, 1.6193999999997155e-05, 1.6181000000003998e-05, 1.618099999999012e-05, 1.6180000000004524e-05, 1.6165999999998015e-05, 1.619499999999663e-05, 1.6181000000003998e-05, 1.6208000000003664e-05, 1.6179999999990646e-05, 1.6193999999997155e-05, 1.618099999999012e-05, 1.6166000000011893e-05, 1.6208000000003664e-05, 1.6180000000004524e-05, 1.612499999999184e-05, 1.6208000000003664e-05, 1.6167000000011367e-05, 1.618099999999012e-05, 1.615299999999098e-05, 1.6179999999990646e-05, 1.6181000000003998e-05, 1.6152000000005384e-05, 1.6181000000003998e-05, 1.6165999999998015e-05, 1.6193999999997155e-05, 1.616699999999749e-05, 1.6181000000003998e-05, 1.6180000000004524e-05, 1.6180000000004524e-05, 1.616699999999749e-05, 1.6167000000011367e-05, 1.6165999999998015e-05, 1.6179999999990646e-05, 1.6181000000003998e-05, 1.618099999999012e-05, 1.616699999999749e-05, 1.616699999999749e-05, 1.6195000000010507e-05, 1.6180000000004524e-05, 1.6221999999996295e-05, 1.6165999999998015e-05, 1.6193999999997155e-05, 1.6193999999997155e-05, 1.6167000000011367e-05, 1.6181000000003998e-05, 1.6180000000004524e-05]</msg>
<status status="PASS" starttime="20201112 09:53:46.547" endtime="20201112 09:53:46.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.542" endtime="20201112 09:53:46.549"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.551" endtime="20201112 09:53:46.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:46.554" endtime="20201112 09:53:46.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.553" endtime="20201112 09:53:46.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.549" endtime="20201112 09:53:46.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.139" endtime="20201112 09:53:46.575"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:46.066" endtime="20201112 09:53:46.576" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:46.584" endtime="20201112 09:53:46.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.582" endtime="20201112 09:53:46.604"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.618" endtime="20201112 09:53:46.633"></status>
</kw>
<msg timestamp="20201112 09:53:46.634" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:46.615" endtime="20201112 09:53:46.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.636" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:46.635" endtime="20201112 09:53:46.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.639" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:46.637" endtime="20201112 09:53:46.639"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:46.613" endtime="20201112 09:53:46.640"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:46.610" endtime="20201112 09:53:46.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.609" endtime="20201112 09:53:46.641"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:46.645" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:46.644" endtime="20201112 09:53:46.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.642" endtime="20201112 09:53:46.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.608" endtime="20201112 09:53:46.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.608" endtime="20201112 09:53:46.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.646" endtime="20201112 09:53:46.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.606" endtime="20201112 09:53:46.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.605" endtime="20201112 09:53:46.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.581" endtime="20201112 09:53:46.649"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.658" endtime="20201112 09:53:46.758"></status>
</kw>
<msg timestamp="20201112 09:53:46.759" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:46.657" endtime="20201112 09:53:46.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.761" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:46.760" endtime="20201112 09:53:46.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.762" endtime="20201112 09:53:46.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.654" endtime="20201112 09:53:46.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.652" endtime="20201112 09:53:46.765"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.767" endtime="20201112 09:53:46.768"></status>
</kw>
<msg timestamp="20201112 09:53:46.769" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:53:46.766" endtime="20201112 09:53:46.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.773" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:53:46.772" endtime="20201112 09:53:46.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.775" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:53:46.774" endtime="20201112 09:53:46.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.770" endtime="20201112 09:53:46.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.780" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:53:46.779" endtime="20201112 09:53:46.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.782" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:53:46.781" endtime="20201112 09:53:46.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.776" endtime="20201112 09:53:46.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.789" endtime="20201112 09:53:47.082"></status>
</kw>
<msg timestamp="20201112 09:53:47.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067706222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067737167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:46.787" endtime="20201112 09:53:47.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067706222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067737167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:47.086" endtime="20201112 09:53:47.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.094" endtime="20201112 09:53:47.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.785" endtime="20201112 09:53:47.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.783" endtime="20201112 09:53:47.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:47.101" level="INFO">${RESULT} = [{'time': 0.067737167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.094500000000444e-05, 'source_diff': 3.094500000000444e-05}, {'time': 0.069379556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:47.097" endtime="20201112 09:53:47.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:47.114" level="INFO">${OVERHEAD} = {'time': [0.067737167, 0.069379556, 0.071021514, 0.072663486, 0.074305653, 0.075947736, 0.077589903, 0.079232306, 0.080874208, 0.082516528, 0.0841585, 0.085800514, 0.087442514, 0.089084431, 0.09072629...</msg>
<status status="PASS" starttime="20201112 09:53:47.102" endtime="20201112 09:53:47.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.119" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 09:53:47.118" endtime="20201112 09:53:47.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.121" level="INFO">VALUE: [3.094500000000444e-05, 3.0388999999991784e-05, 3.0388999999991784e-05, 3.0402999999998293e-05, 3.0402999999998293e-05, 3.0402999999998293e-05, 3.038900000000566e-05, 3.038900000000566e-05, 3.0347000000000013e-05, 3.0374999999999153e-05, 3.0416999999990924e-05, 3.0388999999991784e-05, 3.038900000000566e-05, 3.038900000000566e-05, 3.038900000000566e-05, 3.0374999999999153e-05, 3.0374999999999153e-05, 3.042999999999796e-05, 3.0388999999991784e-05, 3.04170000000048e-05, 3.0444000000004467e-05, 3.038799999999231e-05, 3.0388999999991784e-05, 3.0430999999997432e-05, 3.0388999999991784e-05, 3.038900000000566e-05, 3.036100000000652e-05, 3.0416999999990924e-05, 3.0430999999997432e-05, 3.0388999999991784e-05, 3.0402999999998293e-05, 3.038799999999231e-05, 3.0402999999998293e-05, 3.038799999999231e-05, 3.036100000000652e-05, 3.0388999999991784e-05, 3.0402999999984415e-05, 3.0374999999999153e-05, 3.04170000000048e-05, 3.0402999999984415e-05, 3.0416999999977046e-05, 3.0402999999984415e-05, 3.040300000001217e-05, 3.0388999999991784e-05, 3.0402999999984415e-05, 3.042999999999796e-05, 3.04170000000048e-05, 3.040300000001217e-05, 3.0402999999984415e-05, 3.04170000000048e-05]</msg>
<status status="PASS" starttime="20201112 09:53:47.120" endtime="20201112 09:53:47.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.115" endtime="20201112 09:53:47.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.124" endtime="20201112 09:53:47.126"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:47.128" endtime="20201112 09:53:47.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.126" endtime="20201112 09:53:47.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.123" endtime="20201112 09:53:47.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.650" endtime="20201112 09:53:47.148"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:46.578" endtime="20201112 09:53:47.149" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:47.158" endtime="20201112 09:53:47.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.156" endtime="20201112 09:53:47.178"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.191" endtime="20201112 09:53:47.207"></status>
</kw>
<msg timestamp="20201112 09:53:47.207" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:47.189" endtime="20201112 09:53:47.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.210" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:47.208" endtime="20201112 09:53:47.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.213" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:47.211" endtime="20201112 09:53:47.213"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:47.187" endtime="20201112 09:53:47.214"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:47.184" endtime="20201112 09:53:47.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.183" endtime="20201112 09:53:47.215"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:47.218" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:47.218" endtime="20201112 09:53:47.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.216" endtime="20201112 09:53:47.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.182" endtime="20201112 09:53:47.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.182" endtime="20201112 09:53:47.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.220" endtime="20201112 09:53:47.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.180" endtime="20201112 09:53:47.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.179" endtime="20201112 09:53:47.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.155" endtime="20201112 09:53:47.223"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.232" endtime="20201112 09:53:47.251"></status>
</kw>
<msg timestamp="20201112 09:53:47.252" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:47.231" endtime="20201112 09:53:47.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.254" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:47.253" endtime="20201112 09:53:47.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.255" endtime="20201112 09:53:47.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.228" endtime="20201112 09:53:47.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.226" endtime="20201112 09:53:47.258"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.260" endtime="20201112 09:53:47.262"></status>
</kw>
<msg timestamp="20201112 09:53:47.262" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:53:47.259" endtime="20201112 09:53:47.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.266" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:53:47.265" endtime="20201112 09:53:47.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.268" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:53:47.267" endtime="20201112 09:53:47.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.263" endtime="20201112 09:53:47.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.273" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:53:47.272" endtime="20201112 09:53:47.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.275" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:53:47.274" endtime="20201112 09:53:47.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.270" endtime="20201112 09:53:47.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.282" endtime="20201112 09:53:47.573"></status>
</kw>
<msg timestamp="20201112 09:53:47.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066815458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066816597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:47.281" endtime="20201112 09:53:47.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066815458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066816597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:47.577" endtime="20201112 09:53:47.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.585" endtime="20201112 09:53:47.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.278" endtime="20201112 09:53:47.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.276" endtime="20201112 09:53:47.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:47.592" level="INFO">${RESULT} = [{'time': 0.066816597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1390000000111034e-06, 'source_diff': 1.1390000000111034e-06}, {'time': 0.066821583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:47.589" endtime="20201112 09:53:47.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:47.606" level="INFO">${OVERHEAD} = {'time': [0.066816597, 0.066821583, 0.066826611, 0.066831472, 0.066836556, 0.066841569, 0.066846764, 0.066851819, 0.066856819, 0.066861972, 0.066867042, 0.066872333, 0.066877069, 0.066882347, 0.066887...</msg>
<status status="PASS" starttime="20201112 09:53:47.594" endtime="20201112 09:53:47.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.611" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 09:53:47.610" endtime="20201112 09:53:47.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.613" level="INFO">VALUE: [1.1390000000111034e-06, 1.0270000000006663e-06, 1.02800000000014e-06, 1.041000000007175e-06, 1.014000000007509e-06, 1.0270000000006663e-06, 1.02800000000014e-06, 1.0130000000080353e-06, 1.0270000000006663e-06, 1.02800000000014e-06, 1.0559999999992797e-06, 1.0270000000006663e-06, 1.0270000000006663e-06, 1.02800000000014e-06, 1.02800000000014e-06, 9.590000000087029e-07, 1.041999999992771e-06, 1.0270000000006663e-06, 1.02800000000014e-06, 1.02800000000014e-06, 1.02800000000014e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0270000000006663e-06, 1.041999999992771e-06, 1.0270000000006663e-06, 1.041000000007175e-06, 1.02800000000014e-06, 1.02800000000014e-06, 1.02800000000014e-06, 1.0420000000066487e-06, 1.0270000000006663e-06, 1.0139999999936311e-06, 1.0270000000006663e-06, 9.73000000001334e-07, 1.0420000000066487e-06, 1.02800000000014e-06, 1.02800000000014e-06, 1.014000000007509e-06, 9.720000000018603e-07, 1.02800000000014e-06, 1.0409999999932973e-06, 1.02800000000014e-06, 1.014000000007509e-06, 1.014000000007509e-06, 1.02800000000014e-06, 1.000000000001e-06, 1.041000000007175e-06, 1.054999999999806e-06]</msg>
<status status="PASS" starttime="20201112 09:53:47.612" endtime="20201112 09:53:47.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.607" endtime="20201112 09:53:47.614"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.617" endtime="20201112 09:53:47.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:47.620" endtime="20201112 09:53:47.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.618" endtime="20201112 09:53:47.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.615" endtime="20201112 09:53:47.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.224" endtime="20201112 09:53:47.641"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:47.152" endtime="20201112 09:53:47.641" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:47.650" endtime="20201112 09:53:47.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.649" endtime="20201112 09:53:47.670"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.684" endtime="20201112 09:53:47.700"></status>
</kw>
<msg timestamp="20201112 09:53:47.700" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:47.681" endtime="20201112 09:53:47.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.703" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:47.701" endtime="20201112 09:53:47.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.706" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:47.704" endtime="20201112 09:53:47.706"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:47.679" endtime="20201112 09:53:47.706"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:47.677" endtime="20201112 09:53:47.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.675" endtime="20201112 09:53:47.708"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:47.712" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:47.711" endtime="20201112 09:53:47.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.709" endtime="20201112 09:53:47.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.675" endtime="20201112 09:53:47.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.674" endtime="20201112 09:53:47.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.713" endtime="20201112 09:53:47.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.672" endtime="20201112 09:53:47.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.671" endtime="20201112 09:53:47.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.647" endtime="20201112 09:53:47.716"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.725" endtime="20201112 09:53:47.768"></status>
</kw>
<msg timestamp="20201112 09:53:47.768" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:47.724" endtime="20201112 09:53:47.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.771" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:47.770" endtime="20201112 09:53:47.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.772" endtime="20201112 09:53:47.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.721" endtime="20201112 09:53:47.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.719" endtime="20201112 09:53:47.775"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.777" endtime="20201112 09:53:47.778"></status>
</kw>
<msg timestamp="20201112 09:53:47.779" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:53:47.776" endtime="20201112 09:53:47.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.783" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:53:47.782" endtime="20201112 09:53:47.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.785" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:53:47.784" endtime="20201112 09:53:47.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.780" endtime="20201112 09:53:47.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.789" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:53:47.788" endtime="20201112 09:53:47.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.791" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:53:47.791" endtime="20201112 09:53:47.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.786" endtime="20201112 09:53:47.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.800" endtime="20201112 09:53:48.087"></status>
</kw>
<msg timestamp="20201112 09:53:48.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068345375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068353653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:47.797" endtime="20201112 09:53:48.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068345375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068353653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:48.091" endtime="20201112 09:53:48.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.099" endtime="20201112 09:53:48.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.795" endtime="20201112 09:53:48.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.793" endtime="20201112 09:53:48.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:48.106" level="INFO">${RESULT} = [{'time': 0.068353653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.068825903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:48.103" endtime="20201112 09:53:48.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:48.122" level="INFO">${OVERHEAD} = {'time': [0.068353653, 0.068825903, 0.069298597, 0.069770708, 0.070243097, 0.070715556, 0.07118775, 0.071660181, 0.072132486, 0.072605125, 0.073077292, 0.073549944, 0.074022458, 0.074494972, 0.0749676...</msg>
<status status="PASS" starttime="20201112 09:53:48.107" endtime="20201112 09:53:48.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.126" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 09:53:48.125" endtime="20201112 09:53:48.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.129" level="INFO">VALUE: [8.278000000000452e-06, 8.138999999990348e-06, 8.194000000003032e-06, 8.151999999997384e-06, 8.222000000002172e-06, 8.152999999996857e-06, 8.152999999996857e-06, 8.152999999996857e-06, 8.110999999991209e-06, 8.139000000004226e-06, 8.152999999996857e-06, 8.138000000004753e-06, 8.166000000003892e-06, 8.153000000010735e-06, 8.222000000002172e-06, 8.167000000003366e-06, 8.139000000004226e-06, 8.166000000003892e-06, 8.139000000004226e-06, 8.152999999996857e-06, 8.152999999996857e-06, 8.152999999996857e-06, 8.139000000004226e-06, 8.139000000004226e-06, 8.151999999997384e-06, 8.152999999996857e-06, 8.180999999995997e-06, 8.139000000004226e-06, 8.111000000005086e-06, 8.139000000004226e-06, 8.151999999997384e-06, 8.167000000003366e-06, 8.138999999990348e-06, 8.139000000004226e-06, 8.194000000003032e-06, 8.152999999996857e-06, 8.153000000010735e-06, 8.153000000010735e-06, 8.139000000004226e-06, 8.151999999997384e-06, 8.153000000010735e-06, 8.152999999996857e-06, 8.152999999996857e-06, 8.151999999997384e-06, 8.153000000010735e-06, 8.139000000004226e-06, 8.152000000011261e-06, 8.165999999990015e-06, 8.151999999997384e-06, 8.096999999998578e-06]</msg>
<status status="PASS" starttime="20201112 09:53:48.127" endtime="20201112 09:53:48.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.122" endtime="20201112 09:53:48.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.132" endtime="20201112 09:53:48.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:48.135" endtime="20201112 09:53:48.154"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.134" endtime="20201112 09:53:48.155"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.130" endtime="20201112 09:53:48.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.717" endtime="20201112 09:53:48.156"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:47.644" endtime="20201112 09:53:48.157" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:48.165" endtime="20201112 09:53:48.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.163" endtime="20201112 09:53:48.185"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.199" endtime="20201112 09:53:48.214"></status>
</kw>
<msg timestamp="20201112 09:53:48.215" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:48.196" endtime="20201112 09:53:48.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.217" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:48.216" endtime="20201112 09:53:48.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.221" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:48.219" endtime="20201112 09:53:48.221"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:48.194" endtime="20201112 09:53:48.222"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:48.191" endtime="20201112 09:53:48.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.190" endtime="20201112 09:53:48.223"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:48.227" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:48.227" endtime="20201112 09:53:48.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.224" endtime="20201112 09:53:48.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.189" endtime="20201112 09:53:48.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.189" endtime="20201112 09:53:48.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.229" endtime="20201112 09:53:48.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.188" endtime="20201112 09:53:48.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.186" endtime="20201112 09:53:48.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.162" endtime="20201112 09:53:48.232"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.241" endtime="20201112 09:53:48.342"></status>
</kw>
<msg timestamp="20201112 09:53:48.343" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:48.240" endtime="20201112 09:53:48.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.345" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:48.344" endtime="20201112 09:53:48.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.347" endtime="20201112 09:53:48.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.237" endtime="20201112 09:53:48.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.235" endtime="20201112 09:53:48.349"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.351" endtime="20201112 09:53:48.353"></status>
</kw>
<msg timestamp="20201112 09:53:48.353" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:53:48.350" endtime="20201112 09:53:48.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.357" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:53:48.356" endtime="20201112 09:53:48.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.359" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:53:48.358" endtime="20201112 09:53:48.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.354" endtime="20201112 09:53:48.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.364" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:53:48.363" endtime="20201112 09:53:48.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.366" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:53:48.365" endtime="20201112 09:53:48.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.361" endtime="20201112 09:53:48.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.373" endtime="20201112 09:53:48.683"></status>
</kw>
<msg timestamp="20201112 09:53:48.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069796986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069812208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:48.372" endtime="20201112 09:53:48.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069796986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069812208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:48.692" endtime="20201112 09:53:48.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.708" endtime="20201112 09:53:48.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.369" endtime="20201112 09:53:48.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.367" endtime="20201112 09:53:48.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:48.715" level="INFO">${RESULT} = [{'time': 0.069812208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5221999999995295e-05, 'source_diff': 1.5221999999995295e-05}, {'time': 0.071471042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:48.712" endtime="20201112 09:53:48.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:48.728" level="INFO">${OVERHEAD} = {'time': [0.069812208, 0.071471042, 0.073129917, 0.074788792, 0.076447639, 0.078106306, 0.079765375, 0.081424208, 0.083082917, 0.084741889, 0.086400792, 0.0880595, 0.089718153, 0.09137725, 0.093036389...</msg>
<status status="PASS" starttime="20201112 09:53:48.716" endtime="20201112 09:53:48.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.733" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 09:53:48.732" endtime="20201112 09:53:48.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.735" level="INFO">VALUE: [1.5221999999995295e-05, 1.5083999999998543e-05, 1.5098000000005052e-05, 1.5111000000012087e-05, 1.50969999999917e-05, 1.5070000000005912e-05, 1.5097000000005578e-05, 1.508299999999907e-05, 1.5098000000005052e-05, 1.5070000000005912e-05, 1.511099999999821e-05, 1.5097000000005578e-05, 1.5083999999998543e-05, 1.50969999999917e-05, 1.50969999999917e-05, 1.50969999999917e-05, 1.5138999999997349e-05, 1.50969999999917e-05, 1.511099999999821e-05, 1.5137999999997875e-05, 1.5069000000006438e-05, 1.5083999999998543e-05, 1.5098000000005052e-05, 1.508299999999907e-05, 1.5098000000005052e-05, 1.5111000000012087e-05, 1.50969999999917e-05, 1.5070000000005912e-05, 1.50969999999917e-05, 1.5055999999999403e-05, 1.5097000000005578e-05, 1.508299999999907e-05, 1.5097000000005578e-05, 1.505499999999993e-05, 1.5097000000019456e-05, 1.5110999999984331e-05, 1.5111999999983805e-05, 1.5125000000004718e-05, 1.50969999999917e-05, 1.50969999999917e-05, 1.50969999999917e-05, 1.5153000000017736e-05, 1.5056000000013281e-05, 1.5110999999984331e-05, 1.50969999999917e-05, 1.508299999999907e-05, 1.511200000001156e-05, 1.5083999999998543e-05, 1.5110999999984331e-05, 1.50969999999917e-05]</msg>
<status status="PASS" starttime="20201112 09:53:48.734" endtime="20201112 09:53:48.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.729" endtime="20201112 09:53:48.736"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.739" endtime="20201112 09:53:48.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:48.742" endtime="20201112 09:53:48.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.740" endtime="20201112 09:53:48.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.737" endtime="20201112 09:53:48.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.233" endtime="20201112 09:53:48.763"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:48.159" endtime="20201112 09:53:48.764" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:53:28.462" endtime="20201112 09:53:48.772"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.840" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:53:48.848" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:53:50.046" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:53:48.839" endtime="20201112 09:53:50.046"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.049" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:53:50.047" endtime="20201112 09:53:50.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.838" endtime="20201112 09:53:50.050"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:50.052" endtime="20201112 09:53:50.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.050" endtime="20201112 09:53:50.250"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.263" endtime="20201112 09:53:50.279"></status>
</kw>
<msg timestamp="20201112 09:53:50.280" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:50.261" endtime="20201112 09:53:50.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.282" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:50.281" endtime="20201112 09:53:50.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.285" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:50.283" endtime="20201112 09:53:50.286"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:50.259" endtime="20201112 09:53:50.286"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:50.257" endtime="20201112 09:53:50.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.255" endtime="20201112 09:53:50.287"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:50.292" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:50.290" endtime="20201112 09:53:50.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.288" endtime="20201112 09:53:50.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.254" endtime="20201112 09:53:50.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.254" endtime="20201112 09:53:50.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.294" endtime="20201112 09:53:50.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.252" endtime="20201112 09:53:50.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.297" endtime="20201112 09:53:50.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.251" endtime="20201112 09:53:50.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.836" endtime="20201112 09:53:50.299"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:50.305" endtime="20201112 09:53:50.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.304" endtime="20201112 09:53:50.327"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.354" endtime="20201112 09:53:50.375"></status>
</kw>
<msg timestamp="20201112 09:53:50.376" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:50.351" endtime="20201112 09:53:50.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.381" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:50.378" endtime="20201112 09:53:50.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.387" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:50.383" endtime="20201112 09:53:50.388"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:50.346" endtime="20201112 09:53:50.389"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:50.341" endtime="20201112 09:53:50.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.338" endtime="20201112 09:53:50.391"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:50.399" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:50.397" endtime="20201112 09:53:50.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.392" endtime="20201112 09:53:50.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.336" endtime="20201112 09:53:50.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.335" endtime="20201112 09:53:50.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.402" endtime="20201112 09:53:50.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.332" endtime="20201112 09:53:50.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.329" endtime="20201112 09:53:50.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.302" endtime="20201112 09:53:50.408"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.429" endtime="20201112 09:53:50.443"></status>
</kw>
<msg timestamp="20201112 09:53:50.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:50.427" endtime="20201112 09:53:50.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:50.445" endtime="20201112 09:53:50.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.447" endtime="20201112 09:53:50.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.420" endtime="20201112 09:53:50.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.416" endtime="20201112 09:53:50.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.456" endtime="20201112 09:53:50.759"></status>
</kw>
<msg timestamp="20201112 09:53:50.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.116233972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.116236278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:50.455" endtime="20201112 09:53:50.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.116233972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.116236278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:50.764" endtime="20201112 09:53:50.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.772" endtime="20201112 09:53:50.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.452" endtime="20201112 09:53:50.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.451" endtime="20201112 09:53:50.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:50.779" level="INFO">${RESULT} = [{'time': 0.116236278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.305999999993591e-06, 'source_diff': 2.305999999993591e-06}, {'time': 0.1162405, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:53:50.775" endtime="20201112 09:53:50.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:50.792" level="INFO">${ACCURACY} = {'time': [0.116236278, 0.1162405, 0.116244278, 0.116248292, 0.116252208, 0.11625625, 0.116260083, 0.116264222, 0.116268083, 0.116272236, 0.116276292, 0.116280181, 0.116284222, 0.116288292, 0.116292181...</msg>
<status status="PASS" starttime="20201112 09:53:50.780" endtime="20201112 09:53:50.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.797" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 09:53:50.796" endtime="20201112 09:53:50.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.799" level="INFO">VALUE: [2.305999999993591e-06, 2.4439999999903428e-06, 2.5000000000025002e-06, 2.3060000000074687e-06, 2.5270000000021664e-06, 2.3060000000074687e-06, 2.5139999999951312e-06, 2.3049999999941173e-06, 2.5269999999882886e-06, 2.52800000000164e-06, 2.29200000000096e-06, 2.5139999999951312e-06, 2.750000000009689e-06, 2.52800000000164e-06, 2.305999999993591e-06, 2.305000000007995e-06, 2.3200000000000998e-06, 2.55600000000078e-06, 2.52800000000164e-06, 2.3049999999941173e-06, 2.02800000000114e-06, 2.305999999993591e-06, 2.319000000000626e-06, 2.2629999999884687e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.874999999999406e-06, 2.000000000002e-06, 2.3200000000000998e-06, 2.333000000007135e-06, 2.887999999992563e-06, 2.29200000000096e-06, 2.013999999994631e-06, 2.861000000006775e-06, 2.013999999994631e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 1.8890000000049145e-06, 2.861000000006775e-06, 2.014000000008509e-06, 2.305000000007995e-06, 1.9580000000102293e-06, 2.319000000000626e-06, 2.29200000000096e-06, 2.874999999999406e-06, 2.305000000007995e-06, 2.52800000000164e-06, 2.52800000000164e-06, 2.3049999999941173e-06, 2.52800000000164e-06]</msg>
<status status="PASS" starttime="20201112 09:53:50.798" endtime="20201112 09:53:50.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.793" endtime="20201112 09:53:50.800"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.803" endtime="20201112 09:53:50.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:50.806" endtime="20201112 09:53:50.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.804" endtime="20201112 09:53:50.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.801" endtime="20201112 09:53:50.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.413" endtime="20201112 09:53:50.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.411" endtime="20201112 09:53:50.827"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.835" endtime="20201112 09:53:50.850"></status>
</kw>
<msg timestamp="20201112 09:53:50.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:50.834" endtime="20201112 09:53:50.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:50.851" endtime="20201112 09:53:50.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.854" endtime="20201112 09:53:50.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.831" endtime="20201112 09:53:50.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.829" endtime="20201112 09:53:50.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.863" endtime="20201112 09:53:51.152"></status>
</kw>
<msg timestamp="20201112 09:53:51.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022489083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022492181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:50.861" endtime="20201112 09:53:51.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022489083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022492181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:51.157" endtime="20201112 09:53:51.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.166" endtime="20201112 09:53:51.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.859" endtime="20201112 09:53:51.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.857" endtime="20201112 09:53:51.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:51.174" level="INFO">${RESULT} = [{'time': 0.022492181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0979999999999897e-06, 'source_diff': 3.0979999999999897e-06}, {'time': 0.022496958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:51.170" endtime="20201112 09:53:51.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:51.188" level="INFO">${ACCURACY} = {'time': [0.022492181, 0.022496958, 0.022502083, 0.022507139, 0.022512139, 0.022517042, 0.022521931, 0.022527125, 0.022532056, 0.022537097, 0.022541986, 0.022547139, 0.022552042, 0.022557, 0.022562, 0...</msg>
<status status="PASS" starttime="20201112 09:53:51.175" endtime="20201112 09:53:51.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.193" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 09:53:51.192" endtime="20201112 09:53:51.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.196" level="INFO">VALUE: [3.0979999999999897e-06, 2.76400000000232e-06, 3.415999999999142e-06, 3.486000000000461e-06, 3.6529999999992957e-06, 3.124999999999656e-06, 3.2089999999970753e-06, 3.8609999999973665e-06, 3.417000000002085e-06, 3.6389999999997258e-06, 3.208000000001071e-06, 3.417000000002085e-06, 3.195000000000975e-06, 3.625000000000156e-06, 3.4169999999986156e-06, 3.6389999999997258e-06, 3.5840000000009198e-06, 3.4029999999990457e-06, 3.429999999998712e-06, 3.417000000002085e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.417000000002085e-06, 3.4029999999990457e-06, 3.6660000000028614e-06, 3.445000000001225e-06, 3.4309999999981855e-06, 3.415999999999142e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.2090000000005448e-06, 3.486000000000461e-06, 3.195000000000975e-06, 3.4029999999990457e-06, 3.861000000000836e-06, 3.4169999999986156e-06, 3.194000000001501e-06, 3.195000000000975e-06, 2.7360000000031803e-06, 3.415999999999142e-06, 3.6389999999997258e-06, 3.249999999999781e-06, 3.4029999999990457e-06, 3.4169999999986156e-06, 3.1939999999980317e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.401999999999572e-06, 3.1939999999980317e-06, 3.6389999999997258e-06]</msg>
<status status="PASS" starttime="20201112 09:53:51.194" endtime="20201112 09:53:51.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.189" endtime="20201112 09:53:51.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.199" endtime="20201112 09:53:51.201"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:51.203" endtime="20201112 09:53:51.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.201" endtime="20201112 09:53:51.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.198" endtime="20201112 09:53:51.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.828" endtime="20201112 09:53:51.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.827" endtime="20201112 09:53:51.224"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.233" endtime="20201112 09:53:51.247"></status>
</kw>
<msg timestamp="20201112 09:53:51.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:51.231" endtime="20201112 09:53:51.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:51.248" endtime="20201112 09:53:51.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.251" endtime="20201112 09:53:51.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.229" endtime="20201112 09:53:51.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.226" endtime="20201112 09:53:51.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.261" endtime="20201112 09:53:51.549"></status>
</kw>
<msg timestamp="20201112 09:53:51.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022074639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022078833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:51.260" endtime="20201112 09:53:51.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022074639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022078833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:51.553" endtime="20201112 09:53:51.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.561" endtime="20201112 09:53:51.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.257" endtime="20201112 09:53:51.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.255" endtime="20201112 09:53:51.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:51.569" level="INFO">${RESULT} = [{'time': 0.022078833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.022084611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:51.565" endtime="20201112 09:53:51.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:51.583" level="INFO">${ACCURACY} = {'time': [0.022078833, 0.022084611, 0.022089764, 0.022095597, 0.022101778, 0.022107639, 0.02211375, 0.022119583, 0.022125722, 0.022131625, 0.022137653, 0.022143583, 0.022149708, 0.022155778, 0.0221617...</msg>
<status status="PASS" starttime="20201112 09:53:51.571" endtime="20201112 09:53:51.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.588" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 09:53:51.587" endtime="20201112 09:53:51.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.591" level="INFO">VALUE: [4.193999999999032e-06, 3.833000000001696e-06, 3.861000000000836e-06, 4.291000000000017e-06, 4.541999999999741e-06, 4.291999999999491e-06, 4.444000000002751e-06, 4.305000000003056e-06, 4.764000000000851e-06, 4.318999999999157e-06, 4.6949999999990055e-06, 4.514000000000601e-06, 4.304999999999587e-06, 4.514000000000601e-06, 4.528000000000171e-06, 4.3199999999986305e-06, 4.304999999999587e-06, 4.3339999999982e-06, 4.528000000000171e-06, 4.30600000000253e-06, 4.096999999998047e-06, 4.304999999999587e-06, 4.7639999999973814e-06, 4.528000000000171e-06, 4.304999999999587e-06, 4.111000000001086e-06, 4.528000000000171e-06, 4.304999999999587e-06, 4.291999999999491e-06, 4.305999999999061e-06, 4.528000000000171e-06, 4.513999999997131e-06, 4.541000000000267e-06, 4.305000000003056e-06, 4.750000000001281e-06, 4.291999999999491e-06, 4.346999999998297e-06, 4.304999999999587e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.318999999999157e-06, 4.764000000000851e-06, 4.514000000000601e-06, 4.528000000000171e-06, 4.318999999999157e-06, 4.332999999998727e-06, 4.277999999999921e-06, 4.528000000000171e-06, 4.750000000001281e-06]</msg>
<status status="PASS" starttime="20201112 09:53:51.589" endtime="20201112 09:53:51.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.584" endtime="20201112 09:53:51.592"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.594" endtime="20201112 09:53:51.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:51.598" endtime="20201112 09:53:51.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.596" endtime="20201112 09:53:51.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.593" endtime="20201112 09:53:51.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.225" endtime="20201112 09:53:51.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.224" endtime="20201112 09:53:51.619"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.628" endtime="20201112 09:53:51.642"></status>
</kw>
<msg timestamp="20201112 09:53:51.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:51.626" endtime="20201112 09:53:51.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:51.643" endtime="20201112 09:53:51.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.646" endtime="20201112 09:53:51.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.624" endtime="20201112 09:53:51.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.622" endtime="20201112 09:53:51.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.656" endtime="20201112 09:53:51.945"></status>
</kw>
<msg timestamp="20201112 09:53:51.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022145181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022150278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:51.655" endtime="20201112 09:53:51.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022145181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022150278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:51.949" endtime="20201112 09:53:51.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.958" endtime="20201112 09:53:51.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.652" endtime="20201112 09:53:51.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.650" endtime="20201112 09:53:51.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:51.965" level="INFO">${RESULT} = [{'time': 0.022150278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.022157097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:51.961" endtime="20201112 09:53:51.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:51.980" level="INFO">${ACCURACY} = {'time': [0.022150278, 0.022157097, 0.022164083, 0.022171056, 0.022178222, 0.022185153, 0.022192236, 0.022199222, 0.022206125, 0.022213056, 0.022220097, 0.022227069, 0.022234125, 0.022241083, 0.022248...</msg>
<status status="PASS" starttime="20201112 09:53:51.966" endtime="20201112 09:53:51.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.984" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 09:53:51.983" endtime="20201112 09:53:51.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.987" level="INFO">VALUE: [5.096999999999047e-06, 4.707999999999102e-06, 5.389000000001476e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.431000000000186e-06, 5.625000000002156e-06, 5.653000000001296e-06, 5.207999999999602e-06, 5.6389999999982565e-06, 5.666000000001392e-06, 5.194000000000032e-06, 5.417000000000616e-06, 5.194000000000032e-06, 5.6389999999982565e-06, 5.180999999999936e-06, 5.416000000001142e-06, 5.430000000000712e-06, 5.221999999999172e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.6389999999982565e-06, 5.417000000000616e-06, 5.430000000000712e-06, 5.403000000001046e-06, 5.415999999997673e-06, 5.415999999997673e-06, 5.431000000000186e-06, 5.403000000001046e-06, 5.375000000001906e-06, 5.6389999999982565e-06, 5.417000000000616e-06, 5.1949999999995056e-06, 5.653000000001296e-06, 5.431000000000186e-06, 5.651999999998353e-06, 5.195000000002975e-06, 5.472000000002891e-06, 5.417000000000616e-06, 5.416000000001142e-06, 5.3889999999980065e-06, 5.444000000000282e-06, 5.416000000001142e-06, 4.7499999999978115e-06, 5.415999999997673e-06, 5.431000000000186e-06, 5.1949999999995056e-06, 5.180999999999936e-06, 5.624999999998687e-06, 5.389000000001476e-06]</msg>
<status status="PASS" starttime="20201112 09:53:51.985" endtime="20201112 09:53:51.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.980" endtime="20201112 09:53:51.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.991" endtime="20201112 09:53:51.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:51.994" endtime="20201112 09:53:52.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.993" endtime="20201112 09:53:52.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.989" endtime="20201112 09:53:52.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.620" endtime="20201112 09:53:52.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.619" endtime="20201112 09:53:52.015"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.025" endtime="20201112 09:53:52.038"></status>
</kw>
<msg timestamp="20201112 09:53:52.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.023" endtime="20201112 09:53:52.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.040" endtime="20201112 09:53:52.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.043" endtime="20201112 09:53:52.045"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.020" endtime="20201112 09:53:52.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.018" endtime="20201112 09:53:52.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.053" endtime="20201112 09:53:52.338"></status>
</kw>
<msg timestamp="20201112 09:53:52.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022866958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022873847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:52.052" endtime="20201112 09:53:52.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022866958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022873847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:52.342" endtime="20201112 09:53:52.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.351" endtime="20201112 09:53:52.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.049" endtime="20201112 09:53:52.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.047" endtime="20201112 09:53:52.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:52.358" level="INFO">${RESULT} = [{'time': 0.022873847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.022881792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:52.354" endtime="20201112 09:53:52.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:52.372" level="INFO">${ACCURACY} = {'time': [0.022873847, 0.022881792, 0.022889917, 0.022897847, 0.022905917, 0.022913889, 0.022921778, 0.022929958, 0.022937986, 0.022945875, 0.022953958, 0.022961819, 0.022969806, 0.022977917, 0.022985...</msg>
<status status="PASS" starttime="20201112 09:53:52.359" endtime="20201112 09:53:52.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.377" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 09:53:52.376" endtime="20201112 09:53:52.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.380" level="INFO">VALUE: [6.888999999999507e-06, 5.861000000002836e-06, 6.513999999999132e-06, 6.290999999998548e-06, 6.320000000000631e-06, 6.513999999999132e-06, 6.0839999999999506e-06, 6.749999999999812e-06, 6.305000000001587e-06, 6.306000000001061e-06, 6.526999999999228e-06, 6.527000000002697e-06, 6.5279999999987015e-06, 6.763999999999382e-06, 6.0839999999999506e-06, 5.931000000000686e-06, 6.291999999998021e-06, 6.083000000000477e-06, 6.749999999999812e-06, 6.319000000001157e-06, 6.306000000001061e-06, 6.526999999999228e-06, 6.527000000002697e-06, 6.5980000000000205e-06, 6.528000000002171e-06, 6.7369999999997154e-06, 6.306000000001061e-06, 6.304999999998118e-06, 6.500000000003031e-06, 6.304999999998118e-06, 6.513999999999132e-06, 6.306000000001061e-06, 6.0839999999999506e-06, 6.290999999998548e-06, 6.5279999999987015e-06, 6.736000000000242e-06, 6.097000000000047e-06, 6.541999999998271e-06, 6.305000000001587e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.528000000002171e-06, 6.306000000001061e-06, 6.291999999998021e-06, 6.083000000000477e-06, 6.5279999999987015e-06, 6.5279999999987015e-06, 6.375000000002906e-06, 6.749999999999812e-06, 6.304999999998118e-06]</msg>
<status status="PASS" starttime="20201112 09:53:52.378" endtime="20201112 09:53:52.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.373" endtime="20201112 09:53:52.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.383" endtime="20201112 09:53:52.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:52.387" endtime="20201112 09:53:52.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.386" endtime="20201112 09:53:52.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.382" endtime="20201112 09:53:52.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.016" endtime="20201112 09:53:52.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.016" endtime="20201112 09:53:52.408"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.417" endtime="20201112 09:53:52.431"></status>
</kw>
<msg timestamp="20201112 09:53:52.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.416" endtime="20201112 09:53:52.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.433" endtime="20201112 09:53:52.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.436" endtime="20201112 09:53:52.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.413" endtime="20201112 09:53:52.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.411" endtime="20201112 09:53:52.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.446" endtime="20201112 09:53:52.735"></status>
</kw>
<msg timestamp="20201112 09:53:52.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022418042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022425153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:52.444" endtime="20201112 09:53:52.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022418042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022425153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:52.740" endtime="20201112 09:53:52.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.748" endtime="20201112 09:53:52.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.442" endtime="20201112 09:53:52.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.440" endtime="20201112 09:53:52.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:52.755" level="INFO">${RESULT} = [{'time': 0.022425153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.022434903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:52.751" endtime="20201112 09:53:52.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:52.770" level="INFO">${ACCURACY} = {'time': [0.022425153, 0.022434903, 0.022444069, 0.022453056, 0.022462, 0.022471097, 0.022480028, 0.022489069, 0.022498028, 0.022507125, 0.022516028, 0.022525111, 0.022534111, 0.022542917, 0.022552042...</msg>
<status status="PASS" starttime="20201112 09:53:52.756" endtime="20201112 09:53:52.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.775" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 09:53:52.774" endtime="20201112 09:53:52.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.777" level="INFO">VALUE: [7.111000000000617e-06, 7.639000000000257e-06, 7.638000000000783e-06, 7.208999999997606e-06, 7.639000000000257e-06, 7.429999999999243e-06, 7.375000000000437e-06, 7.625000000000687e-06, 7.195000000001506e-06, 7.263999999999882e-06, 7.4169999999991465e-06, 7.429999999999243e-06, 7.639000000000257e-06, 6.9730000000003955e-06, 7.667000000002866e-06, 7.639000000000257e-06, 7.415999999999673e-06, 7.625000000000687e-06, 7.652000000000353e-06, 7.195000000001506e-06, 7.2219999999977025e-06, 7.417000000002616e-06, 7.4719999999979525e-06, 7.403000000003046e-06, 7.429999999999243e-06, 7.2079999999981326e-06, 7.4870000000004655e-06, 7.4169999999991465e-06, 7.1379999999968136e-06, 6.749999999999812e-06, 7.403000000003046e-06, 7.208000000001602e-06, 6.749999999999812e-06, 7.415999999999673e-06, 7.472000000001422e-06, 6.750000000003281e-06, 7.652999999999827e-06, 7.429999999999243e-06, 7.639000000000257e-06, 7.652999999999827e-06, 7.666999999999397e-06, 7.402999999999577e-06, 7.639000000000257e-06, 7.194000000002032e-06, 7.4719999999979525e-06, 7.193999999998563e-06, 7.639000000000257e-06, 7.639000000000257e-06, 7.4169999999991465e-06, 7.652999999999827e-06]</msg>
<status status="PASS" starttime="20201112 09:53:52.776" endtime="20201112 09:53:52.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.771" endtime="20201112 09:53:52.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.781" endtime="20201112 09:53:52.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:52.785" endtime="20201112 09:53:52.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.783" endtime="20201112 09:53:52.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.779" endtime="20201112 09:53:52.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.409" endtime="20201112 09:53:52.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.408" endtime="20201112 09:53:52.806"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.815" endtime="20201112 09:53:52.828"></status>
</kw>
<msg timestamp="20201112 09:53:52.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.813" endtime="20201112 09:53:52.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.830" endtime="20201112 09:53:52.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.833" endtime="20201112 09:53:52.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.810" endtime="20201112 09:53:52.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.808" endtime="20201112 09:53:52.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.843" endtime="20201112 09:53:53.133"></status>
</kw>
<msg timestamp="20201112 09:53:53.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022200764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022209431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:52.842" endtime="20201112 09:53:53.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022200764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022209431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:53.138" endtime="20201112 09:53:53.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.146" endtime="20201112 09:53:53.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.839" endtime="20201112 09:53:53.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.837" endtime="20201112 09:53:53.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:53.153" level="INFO">${RESULT} = [{'time': 0.022209431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.022219625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:53.150" endtime="20201112 09:53:53.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:53.167" level="INFO">${ACCURACY} = {'time': [0.022209431, 0.022219625, 0.022229542, 0.022239472, 0.022249528, 0.0222595, 0.022269472, 0.022279403, 0.022288528, 0.022298556, 0.022308486, 0.022318403, 0.022328569, 0.022338403, 0.02234848...</msg>
<status status="PASS" starttime="20201112 09:53:53.154" endtime="20201112 09:53:53.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.172" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 09:53:53.171" endtime="20201112 09:53:53.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.175" level="INFO">VALUE: [8.667000000000397e-06, 8.568999999999938e-06, 8.306000000003061e-06, 8.250000000001312e-06, 8.32000000000263e-06, 8.292000000000022e-06, 8.513999999997662e-06, 8.305999999999591e-06, 7.860999999997897e-06, 8.292000000000022e-06, 8.318999999999688e-06, 8.486000000001992e-06, 8.541000000000798e-06, 8.083999999998481e-06, 8.736000000002242e-06, 8.764000000001382e-06, 8.292000000000022e-06, 8.735999999998773e-06, 8.59800000000202e-06, 8.32000000000263e-06, 8.736000000002242e-06, 8.526999999997759e-06, 8.263999999997412e-06, 8.528000000000702e-06, 8.527999999997232e-06, 8.736000000002242e-06, 8.07000000000238e-06, 8.528000000000702e-06, 8.528000000000702e-06, 8.555999999999842e-06, 8.542000000000272e-06, 8.347999999998301e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.306000000003061e-06, 8.542000000000272e-06, 8.541000000000798e-06, 8.776999999998009e-06, 8.319999999999161e-06, 8.527999999997232e-06, 8.554999999996898e-06, 8.541000000000798e-06, 8.528000000000702e-06, 8.568999999999938e-06, 8.555999999999842e-06, 8.319999999999161e-06, 7.860999999997897e-06, 8.513000000001658e-06, 8.542000000000272e-06, 8.32000000000263e-06]</msg>
<status status="PASS" starttime="20201112 09:53:53.174" endtime="20201112 09:53:53.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.169" endtime="20201112 09:53:53.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.179" endtime="20201112 09:53:53.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:53.182" endtime="20201112 09:53:53.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.181" endtime="20201112 09:53:53.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.177" endtime="20201112 09:53:53.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.807" endtime="20201112 09:53:53.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.806" endtime="20201112 09:53:53.203"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.212" endtime="20201112 09:53:53.226"></status>
</kw>
<msg timestamp="20201112 09:53:53.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:53.211" endtime="20201112 09:53:53.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:53.228" endtime="20201112 09:53:53.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.231" endtime="20201112 09:53:53.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.208" endtime="20201112 09:53:53.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.206" endtime="20201112 09:53:53.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.241" endtime="20201112 09:53:53.531"></status>
</kw>
<msg timestamp="20201112 09:53:53.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022211708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022221486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:53.240" endtime="20201112 09:53:53.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022211708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022221486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:53.535" endtime="20201112 09:53:53.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.543" endtime="20201112 09:53:53.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.237" endtime="20201112 09:53:53.546"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.235" endtime="20201112 09:53:53.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:53.550" level="INFO">${RESULT} = [{'time': 0.022221486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.777999999998482e-06, 'source_diff': 9.777999999998482e-06}, {'time': 0.022232375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:53.547" endtime="20201112 09:53:53.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:53.564" level="INFO">${ACCURACY} = {'time': [0.022221486, 0.022232375, 0.022243389, 0.022254375, 0.022264403, 0.022275431, 0.022286375, 0.022297514, 0.022308514, 0.022319583, 0.0223305, 0.022341458, 0.022352444, 0.022363458, 0.02237443...</msg>
<status status="PASS" starttime="20201112 09:53:53.551" endtime="20201112 09:53:53.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.569" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 09:53:53.568" endtime="20201112 09:53:53.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.571" level="INFO">VALUE: [9.777999999998482e-06, 8.957999999999883e-06, 9.181000000000467e-06, 9.194000000000563e-06, 8.735999999998773e-06, 9.458999999999856e-06, 9.167000000000897e-06, 9.639000000002257e-06, 9.639000000002257e-06, 9.444000000000813e-06, 9.181000000000467e-06, 9.194000000000563e-06, 9.637999999999314e-06, 9.444000000000813e-06, 9.667000000001397e-06, 9.583000000000508e-06, 9.416999999997677e-06, 9.445000000000286e-06, 9.638999999998787e-06, 9.597000000000078e-06, 9.416999999997677e-06, 9.402999999998107e-06, 9.416000000001673e-06, 9.195000000000036e-06, 9.651999999998884e-06, 9.417000000001147e-06, 9.415999999998204e-06, 9.180000000000993e-06, 9.639000000002257e-06, 9.431000000000717e-06, 9.416999999997677e-06, 9.417000000001147e-06, 9.195000000000036e-06, 9.416000000001673e-06, 9.472999999999426e-06, 9.416999999997677e-06, 9.417000000001147e-06, 9.638999999998787e-06, 9.194000000000563e-06, 8.973000000002396e-06, 9.847000000000328e-06, 9.222999999999176e-06, 9.403000000001577e-06, 9.554999999997899e-06, 9.181000000000467e-06, 9.416000000001673e-06, 9.417000000001147e-06, 9.638999999998787e-06, 9.401999999998634e-06, 9.208000000000133e-06]</msg>
<status status="PASS" starttime="20201112 09:53:53.570" endtime="20201112 09:53:53.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.565" endtime="20201112 09:53:53.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.575" endtime="20201112 09:53:53.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:53.579" endtime="20201112 09:53:53.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.577" endtime="20201112 09:53:53.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.574" endtime="20201112 09:53:53.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.204" endtime="20201112 09:53:53.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.204" endtime="20201112 09:53:53.600"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.609" endtime="20201112 09:53:53.623"></status>
</kw>
<msg timestamp="20201112 09:53:53.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:53.607" endtime="20201112 09:53:53.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:53.624" endtime="20201112 09:53:53.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.627" endtime="20201112 09:53:53.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.605" endtime="20201112 09:53:53.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.602" endtime="20201112 09:53:53.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.637" endtime="20201112 09:53:53.926"></status>
</kw>
<msg timestamp="20201112 09:53:53.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022195028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022205917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:53.636" endtime="20201112 09:53:53.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022195028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022205917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:53.930" endtime="20201112 09:53:53.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.939" endtime="20201112 09:53:53.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.633" endtime="20201112 09:53:53.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.631" endtime="20201112 09:53:53.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:53.946" level="INFO">${RESULT} = [{'time': 0.022205917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0889000000000038e-05, 'source_diff': 1.0889000000000038e-05}, {'time': 0.022217958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:53.942" endtime="20201112 09:53:53.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:53.960" level="INFO">${ACCURACY} = {'time': [0.022205917, 0.022217958, 0.022229972, 0.022241889, 0.022253972, 0.022265861, 0.022277861, 0.02229, 0.022302056, 0.022313847, 0.022325861, 0.022337931, 0.022349972, 0.022361972, 0.022373917,...</msg>
<status status="PASS" starttime="20201112 09:53:53.947" endtime="20201112 09:53:53.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.964" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 09:53:53.963" endtime="20201112 09:53:53.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.967" level="INFO">VALUE: [1.0889000000000038e-05, 1.0083000000001008e-05, 1.0540999999999329e-05, 1.0527999999999232e-05, 1.0750000000000343e-05, 1.0083000000001008e-05, 1.0527999999999232e-05, 1.0569000000001938e-05, 1.0361999999999871e-05, 1.0305000000002118e-05, 1.0304999999998649e-05, 1.0736999999996777e-05, 1.0513999999999663e-05, 1.0750000000000343e-05, 1.0291999999998552e-05, 1.0527999999999232e-05, 1.0070000000000912e-05, 1.0542000000002272e-05, 1.0319000000001688e-05, 1.0526999999999759e-05, 1.0763999999999913e-05, 1.0374999999999968e-05, 1.0541999999998802e-05, 1.0527999999999232e-05, 1.0737000000000246e-05, 1.0500000000000093e-05, 1.0069000000001438e-05, 1.0750000000000343e-05, 1.0542000000002272e-05, 1.0291999999998552e-05, 1.0304999999998649e-05, 1.0527999999999232e-05, 1.0542000000002272e-05, 1.0750000000000343e-05, 1.0736000000000773e-05, 1.0097000000000578e-05, 1.0304999999998649e-05, 1.0374999999999968e-05, 1.0388999999999537e-05, 1.0097000000000578e-05, 1.0263999999999412e-05, 1.0500000000000093e-05, 1.0750000000000343e-05, 1.0527999999999232e-05, 1.0306000000001592e-05, 1.0348000000000301e-05, 1.0304999999998649e-05, 1.0291999999998552e-05, 1.0305999999998122e-05, 1.0306000000001592e-05]</msg>
<status status="PASS" starttime="20201112 09:53:53.965" endtime="20201112 09:53:53.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.960" endtime="20201112 09:53:53.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.971" endtime="20201112 09:53:53.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:53.974" endtime="20201112 09:53:53.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.973" endtime="20201112 09:53:53.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.969" endtime="20201112 09:53:53.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.601" endtime="20201112 09:53:53.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.600" endtime="20201112 09:53:53.995"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.004" endtime="20201112 09:53:54.019"></status>
</kw>
<msg timestamp="20201112 09:53:54.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.003" endtime="20201112 09:53:54.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.020" endtime="20201112 09:53:54.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.023" endtime="20201112 09:53:54.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.000" endtime="20201112 09:53:54.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.998" endtime="20201112 09:53:54.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.033" endtime="20201112 09:53:54.318"></status>
</kw>
<msg timestamp="20201112 09:53:54.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022528444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022539778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:54.032" endtime="20201112 09:53:54.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022528444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022539778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:54.322" endtime="20201112 09:53:54.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.331" endtime="20201112 09:53:54.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.029" endtime="20201112 09:53:54.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.027" endtime="20201112 09:53:54.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:54.338" level="INFO">${RESULT} = [{'time': 0.022539778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1333999999998262e-05, 'source_diff': 1.1333999999998262e-05}, {'time': 0.022552625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:54.334" endtime="20201112 09:53:54.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:54.352" level="INFO">${ACCURACY} = {'time': [0.022539778, 0.022552625, 0.022565722, 0.022578819, 0.022591736, 0.022604625, 0.022617833, 0.022630639, 0.022643819, 0.022656792, 0.022669764, 0.022682778, 0.022695681, 0.022708639, 0.022720...</msg>
<status status="PASS" starttime="20201112 09:53:54.339" endtime="20201112 09:53:54.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.357" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 09:53:54.356" endtime="20201112 09:53:54.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.360" level="INFO">VALUE: [1.1333999999998262e-05, 1.0972000000001453e-05, 1.1429999999999774e-05, 1.1416000000000204e-05, 1.1639000000000788e-05, 1.1346999999998358e-05, 1.1625000000001218e-05, 1.1416999999999677e-05, 1.1637999999997845e-05, 1.1416999999999677e-05, 1.1207999999998663e-05, 1.1625000000001218e-05, 1.1194999999998567e-05, 1.1194999999998567e-05, 1.0709000000001107e-05, 1.1458999999998387e-05, 1.1194999999998567e-05, 1.1416000000000204e-05, 1.1193999999999094e-05, 1.1624999999997748e-05, 1.1639000000000788e-05, 1.1639000000000788e-05, 1.1193999999999094e-05, 1.1194999999998567e-05, 1.1638999999997318e-05, 1.1639000000000788e-05, 1.1416000000000204e-05, 1.1208999999998137e-05, 1.1611000000001648e-05, 1.1417000000003147e-05, 1.1195000000002037e-05, 1.1625000000001218e-05, 1.1111000000001148e-05, 1.1625000000001218e-05, 1.1666999999999927e-05, 1.0985999999997553e-05, 1.1639000000000788e-05, 1.1416999999999677e-05, 1.1416000000000204e-05, 1.1416000000000204e-05, 1.1208000000002133e-05, 1.1429999999999774e-05, 1.1611000000001648e-05, 1.1416999999999677e-05, 1.1653000000000358e-05, 1.1625000000001218e-05, 1.1416000000000204e-05, 1.1472000000001953e-05, 1.1402000000000634e-05, 1.1459000000001857e-05]</msg>
<status status="PASS" starttime="20201112 09:53:54.358" endtime="20201112 09:53:54.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.353" endtime="20201112 09:53:54.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.363" endtime="20201112 09:53:54.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:54.367" endtime="20201112 09:53:54.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.366" endtime="20201112 09:53:54.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.362" endtime="20201112 09:53:54.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.996" endtime="20201112 09:53:54.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.996" endtime="20201112 09:53:54.388"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.397" endtime="20201112 09:53:54.412"></status>
</kw>
<msg timestamp="20201112 09:53:54.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.395" endtime="20201112 09:53:54.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.413" endtime="20201112 09:53:54.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.416" endtime="20201112 09:53:54.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.393" endtime="20201112 09:53:54.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.391" endtime="20201112 09:53:54.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.426" endtime="20201112 09:53:54.713"></status>
</kw>
<msg timestamp="20201112 09:53:54.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022292458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022305278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:54.425" endtime="20201112 09:53:54.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022292458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022305278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:54.718" endtime="20201112 09:53:54.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.726" endtime="20201112 09:53:54.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.422" endtime="20201112 09:53:54.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.420" endtime="20201112 09:53:54.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:54.733" level="INFO">${RESULT} = [{'time': 0.022305278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2820000000000192e-05, 'source_diff': 1.2820000000000192e-05}, {'time': 0.022319264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:54.730" endtime="20201112 09:53:54.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:54.747" level="INFO">${ACCURACY} = {'time': [0.022305278, 0.022319264, 0.022333417, 0.022347389, 0.022361375, 0.022375347, 0.022389264, 0.022403403, 0.022417333, 0.022431389, 0.022445278, 0.022459375, 0.022473417, 0.022487361, 0.022501...</msg>
<status status="PASS" starttime="20201112 09:53:54.735" endtime="20201112 09:53:54.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.752" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 09:53:54.751" endtime="20201112 09:53:54.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.755" level="INFO">VALUE: [1.2820000000000192e-05, 1.1874999999997998e-05, 1.2750000000002343e-05, 1.2569999999999942e-05, 1.2306000000000122e-05, 1.2305000000000649e-05, 1.2527999999997763e-05, 1.2277999999997513e-05, 1.2041000000000829e-05, 1.2749999999998873e-05, 1.2513999999998193e-05, 1.2292000000000552e-05, 1.2527999999997763e-05, 1.2528000000001233e-05, 1.2319999999999692e-05, 1.2527999999997763e-05, 1.2542000000000803e-05, 1.229099999999761e-05, 1.2292000000000552e-05, 1.2306000000000122e-05, 1.2139000000001288e-05, 1.2722999999999207e-05, 1.2124999999998248e-05, 1.2319000000000219e-05, 1.2347999999998832e-05, 1.2291000000001079e-05, 1.2319999999999692e-05, 1.2528000000001233e-05, 1.2750000000002343e-05, 1.2306000000000122e-05, 1.2096999999999108e-05, 1.2749999999998873e-05, 1.2541000000001329e-05, 1.2306000000000122e-05, 1.2487000000001997e-05, 1.2306000000000122e-05, 1.2513999999998193e-05, 1.1874999999997998e-05, 1.2528000000001233e-05, 1.2082999999999539e-05, 1.2306000000000122e-05, 1.2082999999999539e-05, 1.2749999999998873e-05, 1.2319999999999692e-05, 1.2306000000000122e-05, 1.252699999999829e-05, 1.2527999999997763e-05, 1.2763999999998443e-05, 1.2068999999999969e-05, 1.2805000000001149e-05]</msg>
<status status="PASS" starttime="20201112 09:53:54.753" endtime="20201112 09:53:54.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.748" endtime="20201112 09:53:54.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.758" endtime="20201112 09:53:54.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:54.762" endtime="20201112 09:53:54.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.760" endtime="20201112 09:53:54.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.757" endtime="20201112 09:53:54.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.389" endtime="20201112 09:53:54.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.388" endtime="20201112 09:53:54.783"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.792" endtime="20201112 09:53:54.806"></status>
</kw>
<msg timestamp="20201112 09:53:54.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.790" endtime="20201112 09:53:54.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.808" endtime="20201112 09:53:54.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.811" endtime="20201112 09:53:54.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.788" endtime="20201112 09:53:54.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.785" endtime="20201112 09:53:54.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.821" endtime="20201112 09:53:55.106"></status>
</kw>
<msg timestamp="20201112 09:53:55.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022638222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022651556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:54.819" endtime="20201112 09:53:55.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022638222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022651556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:55.111" endtime="20201112 09:53:55.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.119" endtime="20201112 09:53:55.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.817" endtime="20201112 09:53:55.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.815" endtime="20201112 09:53:55.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:55.126" level="INFO">${RESULT} = [{'time': 0.022651556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3334000000000262e-05, 'source_diff': 1.3334000000000262e-05}, {'time': 0.022666542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:55.123" endtime="20201112 09:53:55.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:55.140" level="INFO">${ACCURACY} = {'time': [0.022651556, 0.022666542, 0.022681458, 0.022696472, 0.022711417, 0.022726431, 0.022741542, 0.022756625, 0.022771569, 0.022786569, 0.022801444, 0.022816458, 0.022831569, 0.022846597, 0.022861...</msg>
<status status="PASS" starttime="20201112 09:53:55.127" endtime="20201112 09:53:55.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.145" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 09:53:55.144" endtime="20201112 09:53:55.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.147" level="INFO">VALUE: [1.3334000000000262e-05, 1.3000000000002593e-05, 1.3639000000002788e-05, 1.3429999999998304e-05, 1.3431000000001247e-05, 1.3416999999998208e-05, 1.3459000000000387e-05, 1.3861000000000429e-05, 1.3624999999999748e-05, 1.3179999999998054e-05, 1.3374999999999498e-05, 1.3666000000002454e-05, 1.3429999999998304e-05, 1.3208000000000664e-05, 1.3486000000000054e-05, 1.3639000000002788e-05, 1.3181000000000997e-05, 1.3653000000002358e-05, 1.3638999999999318e-05, 1.3638999999999318e-05, 1.3195000000000567e-05, 1.3681000000001498e-05, 1.3194000000001094e-05, 1.3402999999998638e-05, 1.3195000000000567e-05, 1.2749999999998873e-05, 1.3235999999999803e-05, 1.3417000000001678e-05, 1.3415999999998734e-05, 1.3624999999999748e-05, 1.3638999999999318e-05, 1.3666999999998458e-05, 1.3402999999998638e-05, 1.3416000000002204e-05, 1.3416999999998208e-05, 1.3209000000000137e-05, 1.3638999999999318e-05, 1.3181000000000997e-05, 1.3429999999998304e-05, 1.3430999999997778e-05, 1.3430000000001774e-05, 1.3417000000001678e-05, 1.3611000000000179e-05, 1.3416999999998208e-05, 1.3431000000001247e-05, 1.3653000000002358e-05, 1.3152999999998388e-05, 1.2749999999998873e-05, 1.3195000000000567e-05, 1.3417000000001678e-05]</msg>
<status status="PASS" starttime="20201112 09:53:55.146" endtime="20201112 09:53:55.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.141" endtime="20201112 09:53:55.149"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.151" endtime="20201112 09:53:55.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:55.155" endtime="20201112 09:53:55.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.153" endtime="20201112 09:53:55.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.149" endtime="20201112 09:53:55.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.784" endtime="20201112 09:53:55.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.783" endtime="20201112 09:53:55.176"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.185" endtime="20201112 09:53:55.200"></status>
</kw>
<msg timestamp="20201112 09:53:55.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.183" endtime="20201112 09:53:55.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.201" endtime="20201112 09:53:55.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.204" endtime="20201112 09:53:55.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.180" endtime="20201112 09:53:55.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.178" endtime="20201112 09:53:55.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.214" endtime="20201112 09:53:55.501"></status>
</kw>
<msg timestamp="20201112 09:53:55.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022903278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022917292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:55.213" endtime="20201112 09:53:55.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022903278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022917292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:55.505" endtime="20201112 09:53:55.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.514" endtime="20201112 09:53:55.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.210" endtime="20201112 09:53:55.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.208" endtime="20201112 09:53:55.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:55.520" level="INFO">${RESULT} = [{'time': 0.022917292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4013999999999693e-05, 'source_diff': 1.4013999999999693e-05}, {'time': 0.022933306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:55.517" endtime="20201112 09:53:55.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:55.534" level="INFO">${ACCURACY} = {'time': [0.022917292, 0.022933306, 0.022949347, 0.022965292, 0.022981333, 0.022997208, 0.023012375, 0.023028236, 0.023044306, 0.023060361, 0.023076222, 0.023092264, 0.023108292, 0.023124194, 0.023140...</msg>
<status status="PASS" starttime="20201112 09:53:55.522" endtime="20201112 09:53:55.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.539" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 09:53:55.538" endtime="20201112 09:53:55.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.542" level="INFO">VALUE: [1.4013999999999693e-05, 1.4250000000000373e-05, 1.429099999999961e-05, 1.4278000000002983e-05, 1.427700000000004e-05, 1.4305000000002649e-05, 1.3917000000002178e-05, 1.4333000000001789e-05, 1.4487000000000527e-05, 1.4750000000000874e-05, 1.404099999999936e-05, 1.4764000000000443e-05, 1.4514000000000193e-05, 1.4083000000001539e-05, 1.4514000000000193e-05, 1.4736000000001304e-05, 1.430499999999918e-05, 1.4764000000000443e-05, 1.4236000000000804e-05, 1.4305999999998653e-05, 1.4749999999997404e-05, 1.4320000000001692e-05, 1.430499999999918e-05, 1.4277999999999513e-05, 1.4750000000000874e-05, 1.4305000000002649e-05, 1.4750000000000874e-05, 1.4541999999999333e-05, 1.4764000000000443e-05, 1.4084000000001012e-05, 1.4319000000002219e-05, 1.4693999999999124e-05, 1.430499999999918e-05, 1.4305999999998653e-05, 1.430499999999918e-05, 1.4319999999998223e-05, 1.430499999999918e-05, 1.4541999999999333e-05, 1.4555999999998903e-05, 1.4722000000001734e-05, 1.4514000000000193e-05, 1.4305999999998653e-05, 1.4084000000001012e-05, 1.4514000000000193e-05, 1.431899999999875e-05, 1.4735999999997834e-05, 1.4305000000002649e-05, 1.431899999999875e-05, 1.4527999999999763e-05, 1.3916999999998708e-05]</msg>
<status status="PASS" starttime="20201112 09:53:55.540" endtime="20201112 09:53:55.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.535" endtime="20201112 09:53:55.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.545" endtime="20201112 09:53:55.547"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:55.549" endtime="20201112 09:53:55.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.547" endtime="20201112 09:53:55.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.544" endtime="20201112 09:53:55.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.177" endtime="20201112 09:53:55.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.176" endtime="20201112 09:53:55.570"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.579" endtime="20201112 09:53:55.594"></status>
</kw>
<msg timestamp="20201112 09:53:55.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.577" endtime="20201112 09:53:55.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.595" endtime="20201112 09:53:55.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.598" endtime="20201112 09:53:55.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.575" endtime="20201112 09:53:55.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.573" endtime="20201112 09:53:55.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.608" endtime="20201112 09:53:55.894"></status>
</kw>
<msg timestamp="20201112 09:53:55.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022428042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022443597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:55.607" endtime="20201112 09:53:55.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022428042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022443597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:55.898" endtime="20201112 09:53:55.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.907" endtime="20201112 09:53:55.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.604" endtime="20201112 09:53:55.909"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.602" endtime="20201112 09:53:55.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:55.914" level="INFO">${RESULT} = [{'time': 0.022443597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.555500000000043e-05, 'source_diff': 1.555500000000043e-05}, {'time': 0.022460694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:55.910" endtime="20201112 09:53:55.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:55.929" level="INFO">${ACCURACY} = {'time': [0.022443597, 0.022460694, 0.022477722, 0.022494736, 0.022511694, 0.022528653, 0.022545611, 0.022562528, 0.022578597, 0.022595611, 0.022612694, 0.022629583, 0.022646667, 0.022663583, 0.022680...</msg>
<status status="PASS" starttime="20201112 09:53:55.915" endtime="20201112 09:53:55.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.933" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 09:53:55.932" endtime="20201112 09:53:55.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.936" level="INFO">VALUE: [1.555500000000043e-05, 1.5416000000000735e-05, 1.5221999999998764e-05, 1.566700000000046e-05, 1.5235999999998334e-05, 1.562499999999828e-05, 1.5193999999999624e-05, 1.5180999999999528e-05, 1.4778000000000013e-05, 1.5458000000002914e-05, 1.5401999999997695e-05, 1.563900000000132e-05, 1.537499999999803e-05, 1.5402000000001165e-05, 1.5416000000000735e-05, 1.565300000000089e-05, 1.5139000000000818e-05, 1.561099999999871e-05, 1.5416000000000735e-05, 1.559699999999914e-05, 1.563900000000132e-05, 1.5401999999997695e-05, 1.540300000000064e-05, 1.565300000000089e-05, 1.563899999999785e-05, 1.563900000000132e-05, 1.5193999999999624e-05, 1.5652000000001415e-05, 1.5124999999997779e-05, 1.541700000000021e-05, 1.5139000000000818e-05, 1.5637999999998375e-05, 1.5637999999998375e-05, 1.5195000000002568e-05, 1.4750000000000874e-05, 1.5707999999999694e-05, 1.5430000000000305e-05, 1.5430000000000305e-05, 1.5194999999999098e-05, 1.584699999999939e-05, 1.5416000000000735e-05, 1.541700000000021e-05, 1.5209000000002137e-05, 1.5207999999999194e-05, 1.538900000000107e-05, 1.565300000000089e-05, 1.5222999999998238e-05, 1.5193999999999624e-05, 1.541700000000021e-05, 1.566700000000046e-05]</msg>
<status status="PASS" starttime="20201112 09:53:55.934" endtime="20201112 09:53:55.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.929" endtime="20201112 09:53:55.937"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.940" endtime="20201112 09:53:55.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:55.943" endtime="20201112 09:53:55.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.942" endtime="20201112 09:53:55.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.938" endtime="20201112 09:53:55.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.571" endtime="20201112 09:53:55.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.570" endtime="20201112 09:53:55.964"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.973" endtime="20201112 09:53:55.989"></status>
</kw>
<msg timestamp="20201112 09:53:55.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.972" endtime="20201112 09:53:55.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.990" endtime="20201112 09:53:55.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.993" endtime="20201112 09:53:55.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.969" endtime="20201112 09:53:55.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.967" endtime="20201112 09:53:55.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.004" endtime="20201112 09:53:56.289"></status>
</kw>
<msg timestamp="20201112 09:53:56.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022469139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022485597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:56.002" endtime="20201112 09:53:56.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022469139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022485597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:56.294" endtime="20201112 09:53:56.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.302" endtime="20201112 09:53:56.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.999" endtime="20201112 09:53:56.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.997" endtime="20201112 09:53:56.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:56.309" level="INFO">${RESULT} = [{'time': 0.022485597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6458000000000444e-05, 'source_diff': 1.6458000000000444e-05}, {'time': 0.0225035, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:56.306" endtime="20201112 09:53:56.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:56.323" level="INFO">${ACCURACY} = {'time': [0.022485597, 0.0225035, 0.022521528, 0.022539389, 0.022557486, 0.022575542, 0.022593375, 0.022611361, 0.022629542, 0.022647458, 0.022665444, 0.0226835, 0.022701569, 0.022719389, 0.022737528,...</msg>
<status status="PASS" starttime="20201112 09:53:56.310" endtime="20201112 09:53:56.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.328" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 09:53:56.327" endtime="20201112 09:53:56.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.330" level="INFO">VALUE: [1.6458000000000444e-05, 1.6306000000000653e-05, 1.6513999999998724e-05, 1.6292000000001083e-05, 1.630500000000118e-05, 1.6749999999999404e-05, 1.631899999999728e-05, 1.6513999999998724e-05, 1.6347999999999363e-05, 1.655499999999796e-05, 1.630500000000118e-05, 1.6263999999998474e-05, 1.654100000000186e-05, 1.608300000000007e-05, 1.6306000000000653e-05, 1.636099999999946e-05, 1.630500000000118e-05, 1.609699999999964e-05, 1.6735999999999834e-05, 1.6569000000001e-05, 1.6514000000002194e-05, 1.6513999999998724e-05, 1.611099999999921e-05, 1.6541999999997864e-05, 1.6749999999999404e-05, 1.6306000000000653e-05, 1.6528000000001764e-05, 1.6528000000001764e-05, 1.654100000000186e-05, 1.6305999999997184e-05, 1.6320000000000223e-05, 1.6458000000000444e-05, 1.6320000000000223e-05, 1.6306000000000653e-05, 1.6527999999998294e-05, 1.6735999999999834e-05, 1.6763999999998974e-05, 1.608300000000007e-05, 1.6306000000000653e-05, 1.676300000000297e-05, 1.608300000000007e-05, 1.6528000000001764e-05, 1.6777999999998544e-05, 1.6306000000000653e-05, 1.6749999999999404e-05, 1.6485999999999584e-05, 1.6749999999999404e-05, 1.6542000000001333e-05, 1.656899999999753e-05, 1.6750000000002874e-05]</msg>
<status status="PASS" starttime="20201112 09:53:56.329" endtime="20201112 09:53:56.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.324" endtime="20201112 09:53:56.332"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.334" endtime="20201112 09:53:56.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:56.338" endtime="20201112 09:53:56.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.336" endtime="20201112 09:53:56.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.332" endtime="20201112 09:53:56.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.965" endtime="20201112 09:53:56.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.964" endtime="20201112 09:53:56.359"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.368" endtime="20201112 09:53:56.382"></status>
</kw>
<msg timestamp="20201112 09:53:56.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:56.366" endtime="20201112 09:53:56.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:56.384" endtime="20201112 09:53:56.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.387" endtime="20201112 09:53:56.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.363" endtime="20201112 09:53:56.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.361" endtime="20201112 09:53:56.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.397" endtime="20201112 09:53:56.683"></status>
</kw>
<msg timestamp="20201112 09:53:56.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022494958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022512708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:56.395" endtime="20201112 09:53:56.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022494958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022512708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:56.688" endtime="20201112 09:53:56.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.696" endtime="20201112 09:53:56.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.393" endtime="20201112 09:53:56.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.391" endtime="20201112 09:53:56.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:56.703" level="INFO">${RESULT} = [{'time': 0.022512708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7750000000000404e-05, 'source_diff': 1.7750000000000404e-05}, {'time': 0.022531819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:56.700" endtime="20201112 09:53:56.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:56.717" level="INFO">${ACCURACY} = {'time': [0.022512708, 0.022531819, 0.022550694, 0.022569625, 0.022588694, 0.022607806, 0.022626792, 0.022645722, 0.022664806, 0.022683819, 0.022702667, 0.022720667, 0.022739681, 0.022758667, 0.022777...</msg>
<status status="PASS" starttime="20201112 09:53:56.704" endtime="20201112 09:53:56.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.722" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 09:53:56.721" endtime="20201112 09:53:56.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.724" level="INFO">VALUE: [1.7750000000000404e-05, 1.7180000000002055e-05, 1.7193999999998155e-05, 1.718099999999806e-05, 1.7388000000000126e-05, 1.737500000000003e-05, 1.718099999999806e-05, 1.7429999999998835e-05, 1.741699999999874e-05, 1.7638000000000376e-05, 1.741699999999874e-05, 1.6735999999999834e-05, 1.6972999999999988e-05, 1.7195000000001098e-05, 1.763899999999985e-05, 1.741699999999874e-05, 1.762500000000028e-05, 1.7179999999998585e-05, 1.7194000000001625e-05, 1.7194000000001625e-05, 1.7165999999999015e-05, 1.783300000000182e-05, 1.740299999999917e-05, 1.7195000000001098e-05, 1.7194000000001625e-05, 1.7193999999998155e-05, 1.763899999999985e-05, 1.7637999999996906e-05, 1.7195000000001098e-05, 1.765299999999942e-05, 1.718099999999806e-05, 1.763899999999985e-05, 1.763899999999985e-05, 1.719499999999763e-05, 1.718099999999806e-05, 1.73889999999996e-05, 1.7459000000000918e-05, 1.7569000000002e-05, 1.7638000000000376e-05, 1.740300000000264e-05, 1.763899999999985e-05, 1.7180000000002055e-05, 1.7208000000001195e-05, 1.763899999999985e-05, 1.7429999999998835e-05, 1.765300000000289e-05, 1.741699999999874e-05, 1.743099999999831e-05, 1.6749999999999404e-05, 1.763899999999985e-05]</msg>
<status status="PASS" starttime="20201112 09:53:56.723" endtime="20201112 09:53:56.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.718" endtime="20201112 09:53:56.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.728" endtime="20201112 09:53:56.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:56.732" endtime="20201112 09:53:56.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.730" endtime="20201112 09:53:56.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.726" endtime="20201112 09:53:56.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.360" endtime="20201112 09:53:56.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.359" endtime="20201112 09:53:56.753"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.762" endtime="20201112 09:53:56.776"></status>
</kw>
<msg timestamp="20201112 09:53:56.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:56.760" endtime="20201112 09:53:56.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:56.778" endtime="20201112 09:53:56.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.780" endtime="20201112 09:53:56.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.757" endtime="20201112 09:53:56.784"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.755" endtime="20201112 09:53:56.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.791" endtime="20201112 09:53:57.077"></status>
</kw>
<msg timestamp="20201112 09:53:57.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022485208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022503653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:56.789" endtime="20201112 09:53:57.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022485208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022503653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:57.081" endtime="20201112 09:53:57.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.089" endtime="20201112 09:53:57.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.787" endtime="20201112 09:53:57.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.785" endtime="20201112 09:53:57.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:57.096" level="INFO">${RESULT} = [{'time': 0.022503653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.844499999999888e-05, 'source_diff': 1.844499999999888e-05}, {'time': 0.022523764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:57.093" endtime="20201112 09:53:57.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:57.110" level="INFO">${ACCURACY} = {'time': [0.022503653, 0.022523764, 0.022543667, 0.022563583, 0.022582764, 0.022602597, 0.022622778, 0.022642764, 0.02266275, 0.02268275, 0.022702722, 0.022722625, 0.022742764, 0.022762792, 0.02278280...</msg>
<status status="PASS" starttime="20201112 09:53:57.097" endtime="20201112 09:53:57.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.115" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 09:53:57.113" endtime="20201112 09:53:57.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.117" level="INFO">VALUE: [1.844499999999888e-05, 1.8528000000000294e-05, 1.8528000000000294e-05, 1.808300000000207e-05, 1.787500000000053e-05, 1.829100000000014e-05, 1.8541999999999864e-05, 1.8278000000000044e-05, 1.8528000000000294e-05, 1.8306000000002653e-05, 1.833300000000232e-05, 1.809699999999817e-05, 1.8707999999999225e-05, 1.8750000000001404e-05, 1.8305999999999184e-05, 1.8305999999999184e-05, 1.8513999999997255e-05, 1.806899999999903e-05, 1.8305999999999184e-05, 1.831900000000275e-05, 1.852700000000082e-05, 1.8736000000001835e-05, 1.8750000000001404e-05, 1.8069999999998504e-05, 1.8764000000000974e-05, 1.8291999999999614e-05, 1.8305999999999184e-05, 1.808300000000207e-05, 1.854099999999692e-05, 1.8528000000000294e-05, 1.806899999999903e-05, 1.8333999999998324e-05, 1.8305999999999184e-05, 1.8737000000001308e-05, 1.8305999999999184e-05, 1.833299999999885e-05, 1.8528000000000294e-05, 1.8528000000000294e-05, 1.8527999999996825e-05, 1.8820000000002723e-05, 1.852699999999735e-05, 1.862499999999781e-05, 1.8320000000002223e-05, 1.8500000000001154e-05, 1.7862000000000433e-05, 1.837500000000103e-05, 1.870900000000217e-05, 1.880500000000021e-05, 1.8305999999999184e-05, 1.8291999999999614e-05]</msg>
<status status="PASS" starttime="20201112 09:53:57.116" endtime="20201112 09:53:57.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.111" endtime="20201112 09:53:57.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.121" endtime="20201112 09:53:57.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:57.125" endtime="20201112 09:53:57.144"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.123" endtime="20201112 09:53:57.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.119" endtime="20201112 09:53:57.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.754" endtime="20201112 09:53:57.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.753" endtime="20201112 09:53:57.146"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.154" endtime="20201112 09:53:57.170"></status>
</kw>
<msg timestamp="20201112 09:53:57.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.153" endtime="20201112 09:53:57.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.171" endtime="20201112 09:53:57.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.174" endtime="20201112 09:53:57.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.150" endtime="20201112 09:53:57.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.148" endtime="20201112 09:53:57.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.184" endtime="20201112 09:53:57.470"></status>
</kw>
<msg timestamp="20201112 09:53:57.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226895, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022709264, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:53:57.183" endtime="20201112 09:53:57.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226895, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022709264, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:53:57.475" endtime="20201112 09:53:57.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.483" endtime="20201112 09:53:57.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.180" endtime="20201112 09:53:57.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.178" endtime="20201112 09:53:57.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:57.490" level="INFO">${RESULT} = [{'time': 0.022709264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9763999999998505e-05, 'source_diff': 1.9763999999998505e-05}, {'time': 0.022730319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:57.487" endtime="20201112 09:53:57.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:57.505" level="INFO">${ACCURACY} = {'time': [0.022709264, 0.022730319, 0.022751167, 0.022772333, 0.022793264, 0.022814306, 0.02283525, 0.022856236, 0.022877292, 0.02289825, 0.022919264, 0.022940292, 0.022961389, 0.022982319, 0.02300325...</msg>
<status status="PASS" starttime="20201112 09:53:57.491" endtime="20201112 09:53:57.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.510" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 09:53:57.509" endtime="20201112 09:53:57.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.512" level="INFO">VALUE: [1.9763999999998505e-05, 1.9415999999997796e-05, 1.919499999999963e-05, 1.934699999999942e-05, 1.941700000000074e-05, 1.963899999999838e-05, 1.963900000000185e-05, 1.963899999999838e-05, 1.943100000000031e-05, 1.941699999999727e-05, 1.963900000000185e-05, 1.920900000000267e-05, 1.9556000000000434e-05, 1.9180000000000585e-05, 1.9471999999999545e-05, 1.9402000000001696e-05, 1.937499999999856e-05, 1.9207999999999725e-05, 1.963899999999838e-05, 1.94029999999977e-05, 1.9429999999997366e-05, 1.92089999999992e-05, 1.984699999999992e-05, 1.961099999999924e-05, 1.891700000000024e-05, 1.963900000000185e-05, 1.92089999999992e-05, 1.919499999999963e-05, 1.941699999999727e-05, 1.9416000000001266e-05, 1.9194000000000155e-05, 1.8693999999999655e-05, 1.9887999999999156e-05, 1.9194000000000155e-05, 1.93890000000016e-05, 1.943100000000031e-05, 1.941700000000074e-05, 1.913899999999788e-05, 1.963899999999838e-05, 1.9207999999999725e-05, 1.941699999999727e-05, 1.9179999999997116e-05, 1.963899999999838e-05, 1.963899999999838e-05, 1.9207999999999725e-05, 1.941700000000074e-05, 1.9651999999998476e-05, 1.919499999999963e-05, 1.987499999999906e-05, 1.937499999999856e-05]</msg>
<status status="PASS" starttime="20201112 09:53:57.511" endtime="20201112 09:53:57.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.506" endtime="20201112 09:53:57.514"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.516" endtime="20201112 09:53:57.518"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:57.520" endtime="20201112 09:53:57.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.518" endtime="20201112 09:53:57.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.514" endtime="20201112 09:53:57.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.146" endtime="20201112 09:53:57.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.146" endtime="20201112 09:53:57.541"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.550" endtime="20201112 09:53:57.565"></status>
</kw>
<msg timestamp="20201112 09:53:57.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.548" endtime="20201112 09:53:57.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.566" endtime="20201112 09:53:57.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.569" endtime="20201112 09:53:57.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.545" endtime="20201112 09:53:57.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.543" endtime="20201112 09:53:57.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.580" endtime="20201112 09:53:57.867"></status>
</kw>
<msg timestamp="20201112 09:53:57.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022225972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022246194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:57.578" endtime="20201112 09:53:57.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022225972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022246194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:57.871" endtime="20201112 09:53:57.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.880" endtime="20201112 09:53:57.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.575" endtime="20201112 09:53:57.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.573" endtime="20201112 09:53:57.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:57.887" level="INFO">${RESULT} = [{'time': 0.022246194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0222000000000295e-05, 'source_diff': 2.0222000000000295e-05}, {'time': 0.022268139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:57.883" endtime="20201112 09:53:57.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:57.901" level="INFO">${ACCURACY} = {'time': [0.022246194, 0.022268139, 0.022289986, 0.022312014, 0.022333986, 0.022355944, 0.022378097, 0.022399986, 0.022422139, 0.022443986, 0.022466125, 0.022488, 0.022509972, 0.022531986, 0.022554056...</msg>
<status status="PASS" starttime="20201112 09:53:57.888" endtime="20201112 09:53:57.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.906" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 09:53:57.905" endtime="20201112 09:53:57.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.908" level="INFO">VALUE: [2.0222000000000295e-05, 2.0070000000000504e-05, 2.0528000000002294e-05, 2.0542000000001864e-05, 2.030500000000171e-05, 2.052699999999935e-05, 2.055499999999849e-05, 2.009700000000017e-05, 2.0749999999999935e-05, 2.0513999999999255e-05, 2.0749999999999935e-05, 2.0514000000002724e-05, 2.0527999999998825e-05, 2.0527999999998825e-05, 2.0527999999998825e-05, 2.0334000000000324e-05, 2.030500000000171e-05, 2.030499999999824e-05, 2.031899999999781e-05, 2.0319999999997285e-05, 2.008299999999713e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0527999999998825e-05, 2.0541999999998395e-05, 2.045900000000045e-05, 2.0749999999999935e-05, 2.0291999999998145e-05, 2.0527999999998825e-05, 2.0528000000002294e-05, 2.0306000000001184e-05, 2.061100000000024e-05, 2.051299999999978e-05, 2.0334000000000324e-05, 2.07769999999996e-05, 2.0042000000001364e-05, 2.0486000000000115e-05, 2.0528000000002294e-05, 2.0319999999997285e-05, 2.076300000000003e-05, 2.0513999999999255e-05, 2.0320000000000754e-05, 2.080500000000221e-05, 2.0499999999999685e-05, 2.029100000000214e-05, 2.030500000000171e-05, 2.052699999999935e-05, 2.030500000000171e-05, 2.0084000000000074e-05]</msg>
<status status="PASS" starttime="20201112 09:53:57.907" endtime="20201112 09:53:57.909"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.902" endtime="20201112 09:53:57.910"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.912" endtime="20201112 09:53:57.913"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:57.916" endtime="20201112 09:53:57.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.914" endtime="20201112 09:53:57.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.910" endtime="20201112 09:53:57.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.542" endtime="20201112 09:53:57.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.541" endtime="20201112 09:53:57.937"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.946" endtime="20201112 09:53:57.961"></status>
</kw>
<msg timestamp="20201112 09:53:57.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.944" endtime="20201112 09:53:57.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.962" endtime="20201112 09:53:57.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.965" endtime="20201112 09:53:57.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.941" endtime="20201112 09:53:57.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.939" endtime="20201112 09:53:57.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.975" endtime="20201112 09:53:58.263"></status>
</kw>
<msg timestamp="20201112 09:53:58.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022318125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022339903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:57.974" endtime="20201112 09:53:58.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022318125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022339903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:58.267" endtime="20201112 09:53:58.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.276" endtime="20201112 09:53:58.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.971" endtime="20201112 09:53:58.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.969" endtime="20201112 09:53:58.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:58.283" level="INFO">${RESULT} = [{'time': 0.022339903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1778000000000075e-05, 'source_diff': 2.1778000000000075e-05}, {'time': 0.022362972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:58.279" endtime="20201112 09:53:58.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:58.297" level="INFO">${ACCURACY} = {'time': [0.022339903, 0.022362972, 0.022385986, 0.022408875, 0.022431889, 0.022454972, 0.022477986, 0.022500861, 0.022524056, 0.022546917, 0.022569861, 0.022592889, 0.022615917, 0.022638944, 0.022662...</msg>
<status status="PASS" starttime="20201112 09:53:58.284" endtime="20201112 09:53:58.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.301" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 09:53:58.300" endtime="20201112 09:53:58.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.304" level="INFO">VALUE: [2.1778000000000075e-05, 2.1415999999999796e-05, 2.115299999999945e-05, 2.141700000000274e-05, 2.163900000000038e-05, 2.1415999999999796e-05, 2.113899999999988e-05, 2.141699999999927e-05, 2.168099999999909e-05, 2.143099999999884e-05, 2.141699999999927e-05, 2.163900000000038e-05, 2.14029999999997e-05, 2.1458000000001975e-05, 2.163900000000038e-05, 2.163900000000038e-05, 2.1415999999999796e-05, 2.141699999999927e-05, 2.141700000000274e-05, 2.1638000000000907e-05, 2.163900000000038e-05, 2.143100000000231e-05, 2.1415999999999796e-05, 2.1458000000001975e-05, 2.141699999999927e-05, 2.1429999999999366e-05, 2.1637999999997437e-05, 2.12090000000012e-05, 2.1180000000002586e-05, 2.1415999999999796e-05, 2.119500000000163e-05, 2.1250000000000435e-05, 2.162500000000081e-05, 2.134700000000142e-05, 2.0958000000001475e-05, 2.141699999999927e-05, 2.162500000000081e-05, 2.1500000000000685e-05, 2.1471999999998076e-05, 2.1402000000000226e-05, 2.163900000000038e-05, 2.115299999999945e-05, 2.165299999999995e-05, 2.1443999999998936e-05, 2.163900000000038e-05, 2.141699999999927e-05, 2.163900000000038e-05, 2.1415999999999796e-05, 2.1179999999999116e-05, 2.1429999999999366e-05]</msg>
<status status="PASS" starttime="20201112 09:53:58.302" endtime="20201112 09:53:58.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.297" endtime="20201112 09:53:58.305"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.308" endtime="20201112 09:53:58.309"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:58.311" endtime="20201112 09:53:58.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.310" endtime="20201112 09:53:58.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.306" endtime="20201112 09:53:58.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.937" endtime="20201112 09:53:58.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.937" endtime="20201112 09:53:58.332"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.341" endtime="20201112 09:53:58.355"></status>
</kw>
<msg timestamp="20201112 09:53:58.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:58.339" endtime="20201112 09:53:58.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:58.357" endtime="20201112 09:53:58.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.359" endtime="20201112 09:53:58.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.337" endtime="20201112 09:53:58.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.335" endtime="20201112 09:53:58.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.370" endtime="20201112 09:53:58.658"></status>
</kw>
<msg timestamp="20201112 09:53:58.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022342056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022364278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:58.368" endtime="20201112 09:53:58.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022342056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022364278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:58.662" endtime="20201112 09:53:58.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.671" endtime="20201112 09:53:58.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.365" endtime="20201112 09:53:58.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.364" endtime="20201112 09:53:58.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:58.678" level="INFO">${RESULT} = [{'time': 0.022364278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2222000000002295e-05, 'source_diff': 2.2222000000002295e-05}, {'time': 0.022389139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:58.674" endtime="20201112 09:53:58.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:58.691" level="INFO">${ACCURACY} = {'time': [0.022364278, 0.022389139, 0.022413181, 0.022437111, 0.022461097, 0.022485236, 0.022509056, 0.022533139, 0.022557069, 0.022581083, 0.022604208, 0.022628139, 0.022652069, 0.022676194, 0.022700...</msg>
<status status="PASS" starttime="20201112 09:53:58.679" endtime="20201112 09:53:58.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.696" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 09:53:58.695" endtime="20201112 09:53:58.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.698" level="INFO">VALUE: [2.2222000000002295e-05, 2.2763999999998036e-05, 2.2528000000000825e-05, 2.230500000000024e-05, 2.230500000000024e-05, 2.2527999999997356e-05, 2.2112000000001214e-05, 2.2750000000001935e-05, 2.230500000000024e-05, 2.231899999999981e-05, 2.187500000000106e-05, 2.2527999999997356e-05, 2.252700000000135e-05, 2.252700000000135e-05, 2.2306000000003184e-05, 2.209700000000217e-05, 2.2778000000001075e-05, 2.2528000000000825e-05, 2.2292000000000145e-05, 2.2764000000001505e-05, 2.2014000000000755e-05, 2.230500000000024e-05, 2.230500000000024e-05, 2.2527999999997356e-05, 2.2485999999998646e-05, 2.2527999999997356e-05, 2.2528000000000825e-05, 2.2527999999997356e-05, 2.2764000000001505e-05, 2.193099999999934e-05, 2.2528000000000825e-05, 2.208299999999913e-05, 2.223700000000134e-05, 2.254100000000092e-05, 2.2528000000000825e-05, 2.2499999999998216e-05, 2.2112000000001214e-05, 2.2471999999999076e-05, 2.2333999999998855e-05, 2.2528000000000825e-05, 2.2528000000000825e-05, 2.2528000000000825e-05, 2.2278000000000575e-05, 2.2528000000000825e-05, 2.2527999999997356e-05, 2.230500000000024e-05, 2.2514000000001255e-05, 2.2528000000000825e-05, 2.206899999999956e-05, 2.231899999999981e-05]</msg>
<status status="PASS" starttime="20201112 09:53:58.697" endtime="20201112 09:53:58.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.692" endtime="20201112 09:53:58.700"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.702" endtime="20201112 09:53:58.704"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:58.706" endtime="20201112 09:53:58.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.704" endtime="20201112 09:53:58.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.701" endtime="20201112 09:53:58.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.333" endtime="20201112 09:53:58.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.332" endtime="20201112 09:53:58.727"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.736" endtime="20201112 09:53:58.751"></status>
</kw>
<msg timestamp="20201112 09:53:58.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:58.734" endtime="20201112 09:53:58.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:58.752" endtime="20201112 09:53:58.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.755" endtime="20201112 09:53:58.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.732" endtime="20201112 09:53:58.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.729" endtime="20201112 09:53:58.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.765" endtime="20201112 09:53:59.052"></status>
</kw>
<msg timestamp="20201112 09:53:59.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022335958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022359736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:58.764" endtime="20201112 09:53:59.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022335958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022359736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:59.056" endtime="20201112 09:53:59.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.065" endtime="20201112 09:53:59.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.761" endtime="20201112 09:53:59.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.759" endtime="20201112 09:53:59.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:59.071" level="INFO">${RESULT} = [{'time': 0.022359736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3778000000002075e-05, 'source_diff': 2.3778000000002075e-05}, {'time': 0.022384764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:59.068" endtime="20201112 09:53:59.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:59.086" level="INFO">${ACCURACY} = {'time': [0.022359736, 0.022384764, 0.022409694, 0.022434722, 0.022459708, 0.022484722, 0.022509625, 0.022534708, 0.022559847, 0.022584736, 0.022609708, 0.022634681, 0.022659819, 0.022684722, 0.022709...</msg>
<status status="PASS" starttime="20201112 09:53:59.072" endtime="20201112 09:53:59.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.091" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 09:53:59.090" endtime="20201112 09:53:59.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.093" level="INFO">VALUE: [2.3778000000002075e-05, 2.291700000000077e-05, 2.361099999999977e-05, 2.365300000000195e-05, 2.3651999999999007e-05, 2.3443999999997467e-05, 2.340299999999823e-05, 2.363899999999891e-05, 2.388900000000263e-05, 2.341700000000127e-05, 2.3651999999999007e-05, 2.363899999999891e-05, 2.35970000000002e-05, 2.3194000000000686e-05, 2.319500000000016e-05, 2.3415999999998327e-05, 2.3180000000001116e-05, 2.3402000000002227e-05, 2.319500000000016e-05, 2.363899999999891e-05, 2.363899999999891e-05, 2.3194000000000686e-05, 2.34169999999978e-05, 2.27770000000016e-05, 2.343099999999737e-05, 2.320899999999973e-05, 2.3651999999999007e-05, 2.337499999999909e-05, 2.3416000000001796e-05, 2.336099999999952e-05, 2.3415999999998327e-05, 2.362499999999934e-05, 2.34169999999978e-05, 2.340299999999823e-05, 2.3430000000001366e-05, 2.361099999999977e-05, 2.318100000000059e-05, 2.3430000000001366e-05, 2.34030000000017e-05, 2.3430000000001366e-05, 2.3194000000000686e-05, 2.365300000000195e-05, 2.340299999999823e-05, 2.3166000000001546e-05, 2.341700000000127e-05, 2.3387999999999187e-05, 2.341700000000127e-05, 2.363899999999891e-05, 2.3333999999999855e-05, 2.318100000000059e-05]</msg>
<status status="PASS" starttime="20201112 09:53:59.092" endtime="20201112 09:53:59.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.087" endtime="20201112 09:53:59.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.097" endtime="20201112 09:53:59.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:59.101" endtime="20201112 09:53:59.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.099" endtime="20201112 09:53:59.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.096" endtime="20201112 09:53:59.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.728" endtime="20201112 09:53:59.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.727" endtime="20201112 09:53:59.122"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.131" endtime="20201112 09:53:59.146"></status>
</kw>
<msg timestamp="20201112 09:53:59.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.129" endtime="20201112 09:53:59.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.147" endtime="20201112 09:53:59.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.150" endtime="20201112 09:53:59.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.127" endtime="20201112 09:53:59.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.124" endtime="20201112 09:53:59.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.160" endtime="20201112 09:53:59.447"></status>
</kw>
<msg timestamp="20201112 09:53:59.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022498375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022522819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:59.159" endtime="20201112 09:53:59.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022498375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022522819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:59.452" endtime="20201112 09:53:59.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.460" endtime="20201112 09:53:59.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.156" endtime="20201112 09:53:59.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.154" endtime="20201112 09:53:59.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:59.467" level="INFO">${RESULT} = [{'time': 0.022522819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4443999999998467e-05, 'source_diff': 2.4443999999998467e-05}, {'time': 0.022548625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:59.464" endtime="20201112 09:53:59.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:59.481" level="INFO">${ACCURACY} = {'time': [0.022522819, 0.022548625, 0.022574694, 0.022600667, 0.022626847, 0.022652681, 0.022678694, 0.022704681, 0.022730819, 0.022756736, 0.022782653, 0.02280875, 0.022834903, 0.022860667, 0.0228867...</msg>
<status status="PASS" starttime="20201112 09:53:59.468" endtime="20201112 09:53:59.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.486" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 09:53:59.485" endtime="20201112 09:53:59.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.488" level="INFO">VALUE: [2.4443999999998467e-05, 2.386100000000002e-05, 2.4513000000000312e-05, 2.4528000000002825e-05, 2.4582999999998162e-05, 2.4056000000001465e-05, 2.4526999999999882e-05, 2.4513999999999786e-05, 2.4318999999998342e-05, 2.4513999999999786e-05, 2.4527999999999356e-05, 2.4305999999998246e-05, 2.438899999999966e-05, 2.4320000000001285e-05, 2.4750000000000466e-05, 2.4791999999999176e-05, 2.4554999999999022e-05, 2.4750000000000466e-05, 2.4305999999998246e-05, 2.4555999999998496e-05, 2.437500000000009e-05, 2.4527999999999356e-05, 2.4263999999999536e-05, 2.4749999999996997e-05, 2.4292000000002145e-05, 2.4542000000002395e-05, 2.4527999999999356e-05, 2.4540999999999452e-05, 2.431900000000181e-05, 2.4513999999999786e-05, 2.430500000000224e-05, 2.4304999999998772e-05, 2.4096999999997232e-05, 2.431900000000181e-05, 2.4304999999998772e-05, 2.4291999999998676e-05, 2.4306000000001715e-05, 2.4290999999999202e-05, 2.429100000000267e-05, 2.4736000000000896e-05, 2.437500000000009e-05, 2.4084000000000605e-05, 2.4305999999998246e-05, 2.4318999999998342e-05, 2.430500000000224e-05, 2.4764000000000036e-05, 2.4764000000000036e-05, 2.40970000000007e-05, 2.4334000000000855e-05, 2.4570000000001535e-05]</msg>
<status status="PASS" starttime="20201112 09:53:59.487" endtime="20201112 09:53:59.489"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.482" endtime="20201112 09:53:59.490"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.492" endtime="20201112 09:53:59.493"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:59.496" endtime="20201112 09:53:59.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.494" endtime="20201112 09:53:59.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.490" endtime="20201112 09:53:59.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.123" endtime="20201112 09:53:59.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.122" endtime="20201112 09:53:59.517"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.526" endtime="20201112 09:53:59.541"></status>
</kw>
<msg timestamp="20201112 09:53:59.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.524" endtime="20201112 09:53:59.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.542" endtime="20201112 09:53:59.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.545" endtime="20201112 09:53:59.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.521" endtime="20201112 09:53:59.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.519" endtime="20201112 09:53:59.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.556" endtime="20201112 09:53:59.843"></status>
</kw>
<msg timestamp="20201112 09:53:59.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022348583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022373694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:59.554" endtime="20201112 09:53:59.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022348583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022373694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:59.847" endtime="20201112 09:53:59.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.856" endtime="20201112 09:53:59.857"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.551" endtime="20201112 09:53:59.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.549" endtime="20201112 09:53:59.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:59.863" level="INFO">${RESULT} = [{'time': 0.022373694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5110999999997802e-05, 'source_diff': 2.5110999999997802e-05}, {'time': 0.022400722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:59.859" endtime="20201112 09:53:59.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:59.876" level="INFO">${ACCURACY} = {'time': [0.022373694, 0.022400722, 0.022427819, 0.022454833, 0.022481806, 0.022508736, 0.022535792, 0.022562736, 0.02258975, 0.022616847, 0.022643792, 0.022670806, 0.022697792, 0.022724847, 0.0227518...</msg>
<status status="PASS" starttime="20201112 09:53:59.864" endtime="20201112 09:53:59.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.881" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 09:53:59.880" endtime="20201112 09:53:59.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.884" level="INFO">VALUE: [2.5110999999997802e-05, 2.515299999999998e-05, 2.5429999999999897e-05, 2.563900000000091e-05, 2.5362000000000995e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.54169999999998e-05, 2.563899999999744e-05, 2.540300000000023e-05, 2.563900000000091e-05, 2.563900000000091e-05, 2.565300000000048e-05, 2.5221999999998357e-05, 2.537500000000109e-05, 2.519499999999869e-05, 2.5555000000000022e-05, 2.519500000000216e-05, 2.534700000000195e-05, 2.5665999999997108e-05, 2.5207999999998787e-05, 2.563900000000091e-05, 2.565300000000048e-05, 2.519499999999869e-05, 2.54169999999998e-05, 2.563899999999744e-05, 2.536100000000152e-05, 2.4736000000000896e-05, 2.5637999999997968e-05, 2.5179999999999647e-05, 2.565300000000048e-05, 2.540300000000023e-05, 2.54169999999998e-05, 2.5472000000002076e-05, 2.5208000000002256e-05, 2.5596999999998732e-05, 2.5568999999999592e-05, 2.519499999999869e-05, 2.563900000000091e-05, 2.5416000000000327e-05, 2.543100000000284e-05, 2.5443999999999467e-05, 2.5207999999998787e-05, 2.540300000000023e-05, 2.5638000000001437e-05, 2.540300000000023e-05, 2.5193999999999217e-05, 2.537500000000109e-05, 2.562500000000134e-05, 2.563900000000091e-05]</msg>
<status status="PASS" starttime="20201112 09:53:59.882" endtime="20201112 09:53:59.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.877" endtime="20201112 09:53:59.885"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.887" endtime="20201112 09:53:59.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:59.891" endtime="20201112 09:53:59.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.889" endtime="20201112 09:53:59.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.886" endtime="20201112 09:53:59.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.518" endtime="20201112 09:53:59.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.517" endtime="20201112 09:53:59.912"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.921" endtime="20201112 09:53:59.937"></status>
</kw>
<msg timestamp="20201112 09:53:59.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.919" endtime="20201112 09:53:59.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.938" endtime="20201112 09:53:59.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.941" endtime="20201112 09:53:59.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.917" endtime="20201112 09:53:59.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.915" endtime="20201112 09:53:59.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.951" endtime="20201112 09:54:00.236"></status>
</kw>
<msg timestamp="20201112 09:54:00.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022829097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022855542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:59.950" endtime="20201112 09:54:00.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022829097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022855542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:00.240" endtime="20201112 09:54:00.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.249" endtime="20201112 09:54:00.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.947" endtime="20201112 09:54:00.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.945" endtime="20201112 09:54:00.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:00.256" level="INFO">${RESULT} = [{'time': 0.022855542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.644499999999994e-05, 'source_diff': 2.644499999999994e-05}, {'time': 0.022883653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:00.252" endtime="20201112 09:54:00.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:00.270" level="INFO">${ACCURACY} = {'time': [0.022855542, 0.022883653, 0.022911486, 0.022939486, 0.022967597, 0.022995569, 0.023023653, 0.023051458, 0.023079639, 0.023107611, 0.023135653, 0.023163639, 0.023191611, 0.023219722, 0.023247...</msg>
<status status="PASS" starttime="20201112 09:54:00.257" endtime="20201112 09:54:00.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.275" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 09:54:00.274" endtime="20201112 09:54:00.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.277" level="INFO">VALUE: [2.644499999999994e-05, 2.6083999999999136e-05, 2.6082999999999662e-05, 2.6304999999997303e-05, 2.6804999999997803e-05, 2.6749999999998997e-05, 2.6736000000002896e-05, 2.6027000000001382e-05, 2.6791999999997707e-05, 2.6305000000000772e-05, 2.6735999999999427e-05, 2.6306000000000246e-05, 2.6305000000000772e-05, 2.634700000000295e-05, 2.6306000000000246e-05, 2.6555000000001022e-05, 2.6540999999997983e-05, 2.6749999999998997e-05, 2.60970000000027e-05, 2.6749999999998997e-05, 2.6096999999999232e-05, 2.6306000000000246e-05, 2.6528000000001356e-05, 2.6096999999999232e-05, 2.586100000000202e-05, 2.6528000000001356e-05, 2.6749999999998997e-05, 2.6500000000002216e-05, 2.6542000000000926e-05, 2.6541000000001452e-05, 2.6527999999997887e-05, 2.6527999999997887e-05, 2.6304999999997303e-05, 2.6555000000001022e-05, 2.6263999999998067e-05, 2.6556000000000496e-05, 2.6028000000000856e-05, 2.6791999999997707e-05, 2.6292000000000676e-05, 2.6332999999999912e-05, 2.6528000000001356e-05, 2.6528000000001356e-05, 2.6347999999998956e-05, 2.6444000000000467e-05, 2.6721999999999857e-05, 2.6514000000001786e-05, 2.6513999999998317e-05, 2.6292000000000676e-05, 2.6083999999999136e-05, 2.6749999999998997e-05]</msg>
<status status="PASS" starttime="20201112 09:54:00.276" endtime="20201112 09:54:00.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.271" endtime="20201112 09:54:00.279"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.281" endtime="20201112 09:54:00.283"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:00.285" endtime="20201112 09:54:00.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.283" endtime="20201112 09:54:00.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.279" endtime="20201112 09:54:00.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.913" endtime="20201112 09:54:00.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.912" endtime="20201112 09:54:00.306"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.315" endtime="20201112 09:54:00.331"></status>
</kw>
<msg timestamp="20201112 09:54:00.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:00.313" endtime="20201112 09:54:00.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:00.333" endtime="20201112 09:54:00.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.335" endtime="20201112 09:54:00.338"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.311" endtime="20201112 09:54:00.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.308" endtime="20201112 09:54:00.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.346" endtime="20201112 09:54:00.632"></status>
</kw>
<msg timestamp="20201112 09:54:00.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022308542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022335653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:00.344" endtime="20201112 09:54:00.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022308542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022335653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:00.637" endtime="20201112 09:54:00.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.645" endtime="20201112 09:54:00.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.341" endtime="20201112 09:54:00.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.340" endtime="20201112 09:54:00.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:00.652" level="INFO">${RESULT} = [{'time': 0.022335653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7110999999999802e-05, 'source_diff': 2.7110999999999802e-05}, {'time': 0.022364653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:00.649" endtime="20201112 09:54:00.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:00.667" level="INFO">${ACCURACY} = {'time': [0.022335653, 0.022364653, 0.022393653, 0.022422597, 0.022451556, 0.022480597, 0.022509611, 0.022538472, 0.022567528, 0.022596556, 0.022625556, 0.022654583, 0.022683583, 0.022712667, 0.022741...</msg>
<status status="PASS" starttime="20201112 09:54:00.653" endtime="20201112 09:54:00.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.672" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 09:54:00.671" endtime="20201112 09:54:00.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.674" level="INFO">VALUE: [2.7110999999999802e-05, 2.6972000000000107e-05, 2.741699999999833e-05, 2.7165999999998608e-05, 2.743100000000137e-05, 2.7444000000001467e-05, 2.7429999999998428e-05, 2.7166000000002077e-05, 2.7584000000000636e-05, 2.772300000000033e-05, 2.763900000000291e-05, 2.7638999999999442e-05, 2.7415999999998858e-05, 2.741699999999833e-05, 2.740299999999876e-05, 2.763900000000291e-05, 2.7638999999999442e-05, 2.7624999999999872e-05, 2.7486000000000177e-05, 2.7652999999999012e-05, 2.7208000000000787e-05, 2.741699999999833e-05, 2.719500000000069e-05, 2.7401999999999288e-05, 2.74309999999979e-05, 2.6750000000002466e-05, 2.7624999999999872e-05, 2.741699999999833e-05, 2.74170000000018e-05, 2.7638999999999442e-05, 2.741699999999833e-05, 2.74170000000018e-05, 2.7624999999999872e-05, 2.7624999999999872e-05, 2.719500000000069e-05, 2.7415999999998858e-05, 2.716700000000155e-05, 2.7194000000001217e-05, 2.7652999999999012e-05, 2.7193999999997748e-05, 2.745900000000051e-05, 2.7208000000000787e-05, 2.7598000000000206e-05, 2.748699999999965e-05, 2.763900000000291e-05, 2.763900000000291e-05, 2.74170000000018e-05, 2.768099999999815e-05, 2.7207999999997318e-05, 2.766700000000205e-05]</msg>
<status status="PASS" starttime="20201112 09:54:00.673" endtime="20201112 09:54:00.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.668" endtime="20201112 09:54:00.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.678" endtime="20201112 09:54:00.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:00.682" endtime="20201112 09:54:00.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.680" endtime="20201112 09:54:00.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.676" endtime="20201112 09:54:00.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.307" endtime="20201112 09:54:00.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.306" endtime="20201112 09:54:00.703"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.712" endtime="20201112 09:54:00.727"></status>
</kw>
<msg timestamp="20201112 09:54:00.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:00.710" endtime="20201112 09:54:00.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:00.728" endtime="20201112 09:54:00.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.731" endtime="20201112 09:54:00.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.707" endtime="20201112 09:54:00.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.705" endtime="20201112 09:54:00.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.741" endtime="20201112 09:54:01.027"></status>
</kw>
<msg timestamp="20201112 09:54:01.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022520431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022548639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:00.740" endtime="20201112 09:54:01.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022520431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022548639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:01.032" endtime="20201112 09:54:01.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.040" endtime="20201112 09:54:01.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.737" endtime="20201112 09:54:01.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.735" endtime="20201112 09:54:01.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:01.047" level="INFO">${RESULT} = [{'time': 0.022548639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8207999999998318e-05, 'source_diff': 2.8207999999998318e-05}, {'time': 0.022578458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:01.044" endtime="20201112 09:54:01.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:01.061" level="INFO">${ACCURACY} = {'time': [0.022548639, 0.022578458, 0.022608431, 0.022638542, 0.022668514, 0.022698569, 0.022728583, 0.022758486, 0.022788528, 0.022818597, 0.022848486, 0.022878458, 0.022908569, 0.022938653, 0.022968...</msg>
<status status="PASS" starttime="20201112 09:54:01.048" endtime="20201112 09:54:01.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.066" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 09:54:01.065" endtime="20201112 09:54:01.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.068" level="INFO">VALUE: [2.8207999999998318e-05, 2.8096999999997763e-05, 2.8541999999999457e-05, 2.8750000000000997e-05, 2.8320000000001816e-05, 2.8304999999999303e-05, 2.8527000000000413e-05, 2.8319000000002342e-05, 2.8277999999999637e-05, 2.8527999999999887e-05, 2.8514000000000317e-05, 2.8290999999999733e-05, 2.8513000000000843e-05, 2.8527999999999887e-05, 2.8291999999999207e-05, 2.8750000000000997e-05, 2.8514000000000317e-05, 2.8096999999997763e-05, 2.8513999999996847e-05, 2.7875000000000122e-05, 2.8334000000001386e-05, 2.8291999999999207e-05, 2.8764000000000567e-05, 2.870900000000176e-05, 2.8305000000002772e-05, 2.8319000000002342e-05, 2.8318999999998873e-05, 2.8291999999999207e-05, 2.8527999999999887e-05, 2.8291999999999207e-05, 2.8514000000000317e-05, 2.8318999999998873e-05, 2.8764000000000567e-05, 2.8527000000000413e-05, 2.8541999999999457e-05, 2.8749999999997528e-05, 2.8540999999999983e-05, 2.8098000000000706e-05, 2.8512999999997374e-05, 2.8249999999997027e-05, 2.8750000000000997e-05, 2.8026999999999913e-05, 2.8318999999998873e-05, 2.8722000000001857e-05, 2.8319999999998346e-05, 2.8068999999998623e-05, 2.7888999999999692e-05, 2.8541999999999457e-05, 2.7860999999997083e-05, 2.8333000000001912e-05]</msg>
<status status="PASS" starttime="20201112 09:54:01.067" endtime="20201112 09:54:01.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.062" endtime="20201112 09:54:01.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.072" endtime="20201112 09:54:01.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:01.076" endtime="20201112 09:54:01.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.074" endtime="20201112 09:54:01.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.070" endtime="20201112 09:54:01.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.704" endtime="20201112 09:54:01.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.703" endtime="20201112 09:54:01.097"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.106" endtime="20201112 09:54:01.121"></status>
</kw>
<msg timestamp="20201112 09:54:01.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:01.104" endtime="20201112 09:54:01.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:01.122" endtime="20201112 09:54:01.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.125" endtime="20201112 09:54:01.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.101" endtime="20201112 09:54:01.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.099" endtime="20201112 09:54:01.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.135" endtime="20201112 09:54:01.423"></status>
</kw>
<msg timestamp="20201112 09:54:01.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022189319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022218444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:01.134" endtime="20201112 09:54:01.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022189319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022218444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:01.427" endtime="20201112 09:54:01.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.436" endtime="20201112 09:54:01.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.131" endtime="20201112 09:54:01.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.129" endtime="20201112 09:54:01.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:01.443" level="INFO">${RESULT} = [{'time': 0.022218444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9125000000001372e-05, 'source_diff': 2.9125000000001372e-05}, {'time': 0.022249514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:01.439" endtime="20201112 09:54:01.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:01.457" level="INFO">${ACCURACY} = {'time': [0.022218444, 0.022249514, 0.022280514, 0.022311389, 0.022342431, 0.022372444, 0.022403514, 0.022434486, 0.022465444, 0.022495458, 0.022526486, 0.022557528, 0.022588458, 0.022619417, 0.022650...</msg>
<status status="PASS" starttime="20201112 09:54:01.444" endtime="20201112 09:54:01.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.461" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 09:54:01.460" endtime="20201112 09:54:01.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.464" level="INFO">VALUE: [2.9125000000001372e-05, 2.8972000000002107e-05, 2.9625000000001872e-05, 2.919499999999922e-05, 2.9667000000000582e-05, 2.8762999999997624e-05, 2.9249999999998028e-05, 2.9430000000000428e-05, 2.9180000000000178e-05, 2.8750000000000997e-05, 2.8957999999999068e-05, 2.9375000000001622e-05, 2.940199999999782e-05, 2.9638999999997973e-05, 2.9860999999999083e-05, 2.9402000000001288e-05, 2.919499999999922e-05, 2.919500000000269e-05, 2.9638999999997973e-05, 2.9625000000001872e-05, 2.9652999999997542e-05, 2.9207999999999318e-05, 2.9680000000000678e-05, 2.9457999999999568e-05, 2.945899999999904e-05, 2.944499999999947e-05, 2.9638999999997973e-05, 2.9638999999997973e-05, 2.941599999999739e-05, 2.94309999999999e-05, 2.9639000000001442e-05, 2.94309999999999e-05, 2.9430000000000428e-05, 2.8764000000000567e-05, 2.963800000000197e-05, 2.9638999999997973e-05, 2.9625000000001872e-05, 2.9389000000001192e-05, 2.9624999999998403e-05, 2.966599999999764e-05, 2.945899999999904e-05, 2.9624999999998403e-05, 2.944499999999947e-05, 2.9624999999998403e-05, 2.9416000000000858e-05, 2.9638999999997973e-05, 2.9430000000000428e-05, 2.9403000000000762e-05, 2.9652000000001538e-05, 2.918099999999965e-05]</msg>
<status status="PASS" starttime="20201112 09:54:01.462" endtime="20201112 09:54:01.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.458" endtime="20201112 09:54:01.465"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.468" endtime="20201112 09:54:01.469"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:01.471" endtime="20201112 09:54:01.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.470" endtime="20201112 09:54:01.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.466" endtime="20201112 09:54:01.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.098" endtime="20201112 09:54:01.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.097" endtime="20201112 09:54:01.493"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.505" endtime="20201112 09:54:01.522"></status>
</kw>
<msg timestamp="20201112 09:54:01.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:01.503" endtime="20201112 09:54:01.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:01.524" endtime="20201112 09:54:01.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.528" endtime="20201112 09:54:01.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.499" endtime="20201112 09:54:01.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.497" endtime="20201112 09:54:01.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.542" endtime="20201112 09:54:01.850"></status>
</kw>
<msg timestamp="20201112 09:54:01.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026742861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02677375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:01.540" endtime="20201112 09:54:01.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026742861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02677375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:01.854" endtime="20201112 09:54:01.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.863" endtime="20201112 09:54:01.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.537" endtime="20201112 09:54:01.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.533" endtime="20201112 09:54:01.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:01.869" level="INFO">${RESULT} = [{'time': 0.02677375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.088899999999922e-05, 'source_diff': 3.088899999999922e-05}, {'time': 0.026805542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:01.866" endtime="20201112 09:54:01.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:01.883" level="INFO">${ACCURACY} = {'time': [0.02677375, 0.026805542, 0.026837639, 0.026869556, 0.026901611, 0.026933639, 0.026965722, 0.02699775, 0.027029583, 0.027061667, 0.027093708, 0.027125653, 0.02715775, 0.02718975, 0.027221681,...</msg>
<status status="PASS" starttime="20201112 09:54:01.870" endtime="20201112 09:54:01.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.887" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 09:54:01.886" endtime="20201112 09:54:01.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.890" level="INFO">VALUE: [3.088899999999922e-05, 3.0084000000003136e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.0554999999998084e-05, 3.074999999999953e-05, 3.0333000000000443e-05, 3.076400000000257e-05, 3.0138999999998473e-05, 3.052800000000189e-05, 3.052700000000241e-05, 3.0263999999998598e-05, 3.073599999999996e-05, 3.0513999999998848e-05, 3.0292000000001207e-05, 3.0513999999998848e-05, 3.0083000000000193e-05, 3.054199999999799e-05, 3.054199999999799e-05, 3.054199999999799e-05, 3.0083999999999667e-05, 3.073599999999996e-05, 3.0526999999998944e-05, 3.0306000000000777e-05, 3.0458000000000568e-05, 3.073599999999996e-05, 3.0582999999997224e-05, 3.052799999999842e-05, 3.0096999999999763e-05, 2.9860999999999083e-05, 3.055600000000103e-05, 3.0304999999997834e-05, 3.058300000000069e-05, 3.074999999999953e-05, 3.052799999999842e-05, 2.9860999999999083e-05, 3.0096999999999763e-05, 3.0526999999998944e-05, 3.074999999999953e-05, 3.076400000000257e-05, 3.0320000000000347e-05, 3.0069000000000623e-05, 3.0306000000000777e-05, 3.0291999999997737e-05, 3.0305999999997307e-05, 2.9846999999999513e-05, 2.9874999999998653e-05, 3.0526999999998944e-05, 3.0304999999997834e-05, 3.0139000000001942e-05]</msg>
<status status="PASS" starttime="20201112 09:54:01.889" endtime="20201112 09:54:01.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.884" endtime="20201112 09:54:01.891"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.894" endtime="20201112 09:54:01.895"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:01.897" endtime="20201112 09:54:01.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.895" endtime="20201112 09:54:01.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.892" endtime="20201112 09:54:01.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.494" endtime="20201112 09:54:01.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.493" endtime="20201112 09:54:01.918"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.927" endtime="20201112 09:54:01.943"></status>
</kw>
<msg timestamp="20201112 09:54:01.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:01.925" endtime="20201112 09:54:01.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:01.944" endtime="20201112 09:54:01.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.947" endtime="20201112 09:54:01.949"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.922" endtime="20201112 09:54:01.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.920" endtime="20201112 09:54:01.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.957" endtime="20201112 09:54:02.242"></status>
</kw>
<msg timestamp="20201112 09:54:02.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022012639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022046375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:01.955" endtime="20201112 09:54:02.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022012639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022046375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:02.247" endtime="20201112 09:54:02.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.255" endtime="20201112 09:54:02.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.953" endtime="20201112 09:54:02.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.951" endtime="20201112 09:54:02.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:02.262" level="INFO">${RESULT} = [{'time': 0.022046375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.373599999999949e-05, 'source_diff': 3.373599999999949e-05}, {'time': 0.022085306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:02.258" endtime="20201112 09:54:02.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:02.276" level="INFO">${ACCURACY} = {'time': [0.022046375, 0.022085306, 0.022123306, 0.022162361, 0.022201319, 0.022239306, 0.022277319, 0.022315333, 0.022354319, 0.022393389, 0.022431319, 0.022469347, 0.022507333, 0.022545347, 0.022583...</msg>
<status status="PASS" starttime="20201112 09:54:02.263" endtime="20201112 09:54:02.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.281" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 09:54:02.280" endtime="20201112 09:54:02.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.283" level="INFO">VALUE: [3.373599999999949e-05, 3.379199999999777e-05, 3.323699999999846e-05, 3.4110999999999864e-05, 3.399999999999931e-05, 3.331999999999988e-05, 3.34580000000001e-05, 3.3360999999999114e-05, 3.4055000000001584e-05, 3.4083000000000724e-05, 3.343000000000096e-05, 3.347199999999967e-05, 3.322199999999942e-05, 3.3360999999999114e-05, 3.31250000000019e-05, 3.3332999999999974e-05, 3.4069000000001154e-05, 3.3555000000001084e-05, 3.316600000000114e-05, 3.3332999999999974e-05, 3.354200000000099e-05, 3.344400000000053e-05, 3.3124999999998433e-05, 3.399999999999931e-05, 3.318000000000071e-05, 3.4097000000000294e-05, 3.405600000000106e-05, 3.401399999999888e-05, 3.4069000000001154e-05, 3.407000000000063e-05, 3.398599999999974e-05, 3.323599999999899e-05, 3.343100000000043e-05, 3.349999999999881e-05, 3.341700000000086e-05, 3.323599999999899e-05, 3.405600000000106e-05, 3.3569000000000654e-05, 3.313900000000147e-05, 3.319499999999975e-05, 3.330600000000031e-05, 3.349999999999881e-05, 3.325000000000203e-05, 3.402799999999845e-05, 3.330600000000031e-05, 3.3374999999998683e-05, 3.319400000000028e-05, 3.4083000000000724e-05, 3.402800000000192e-05, 3.3360999999999114e-05]</msg>
<status status="PASS" starttime="20201112 09:54:02.282" endtime="20201112 09:54:02.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.277" endtime="20201112 09:54:02.284"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.287" endtime="20201112 09:54:02.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:02.291" endtime="20201112 09:54:02.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.289" endtime="20201112 09:54:02.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.285" endtime="20201112 09:54:02.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.919" endtime="20201112 09:54:02.312"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.918" endtime="20201112 09:54:02.312"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.320" endtime="20201112 09:54:02.336"></status>
</kw>
<msg timestamp="20201112 09:54:02.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:02.319" endtime="20201112 09:54:02.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:02.337" endtime="20201112 09:54:02.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.340" endtime="20201112 09:54:02.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.316" endtime="20201112 09:54:02.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.314" endtime="20201112 09:54:02.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.350" endtime="20201112 09:54:02.635"></status>
</kw>
<msg timestamp="20201112 09:54:02.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021956028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021991097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:02.349" endtime="20201112 09:54:02.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021956028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021991097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:02.640" endtime="20201112 09:54:02.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.648" endtime="20201112 09:54:02.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.346" endtime="20201112 09:54:02.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.344" endtime="20201112 09:54:02.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:02.655" level="INFO">${RESULT} = [{'time': 0.021991097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5069000000002154e-05, 'source_diff': 3.5069000000002154e-05}, {'time': 0.022031028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:02.651" endtime="20201112 09:54:02.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:02.668" level="INFO">${ACCURACY} = {'time': [0.021991097, 0.022031028, 0.022070014, 0.022109014, 0.022148028, 0.022187028, 0.022226028, 0.022265111, 0.022305028, 0.022345042, 0.022384042, 0.022423042, 0.022462056, 0.022501042, 0.022541...</msg>
<status status="PASS" starttime="20201112 09:54:02.656" endtime="20201112 09:54:02.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.672" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 09:54:02.671" endtime="20201112 09:54:02.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.675" level="INFO">VALUE: [3.5069000000002154e-05, 3.4624999999999934e-05, 3.4402999999998823e-05, 3.4402999999998823e-05, 3.447200000000067e-05, 3.416700000000161e-05, 3.4110999999999864e-05, 3.429200000000174e-05, 3.502799999999945e-05, 3.501399999999988e-05, 3.409799999999977e-05, 3.420900000000032e-05, 3.413900000000247e-05, 3.434800000000002e-05, 3.5013000000000405e-05, 3.430600000000131e-05, 3.449999999999981e-05, 3.422299999999989e-05, 3.4540999999999045e-05, 3.449999999999981e-05, 3.500000000000031e-05, 3.451399999999938e-05, 3.423599999999999e-05, 3.447200000000067e-05, 3.4152999999998573e-05, 3.4540999999999045e-05, 3.5083000000001724e-05, 3.4110999999999864e-05, 3.4526999999999475e-05, 3.4568999999998185e-05, 3.5054999999999115e-05, 3.423599999999999e-05, 3.4110999999999864e-05, 3.423599999999999e-05, 3.443100000000143e-05, 3.4347000000000544e-05, 3.447200000000067e-05, 3.429200000000174e-05, 3.441700000000186e-05, 3.423599999999999e-05, 3.5068999999998685e-05, 3.443100000000143e-05, 3.4402999999998823e-05, 3.454199999999852e-05, 3.4152999999998573e-05, 3.432000000000088e-05, 3.426399999999913e-05, 3.4110999999999864e-05, 3.44589999999971e-05, 3.434800000000002e-05]</msg>
<status status="PASS" starttime="20201112 09:54:02.673" endtime="20201112 09:54:02.704"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.669" endtime="20201112 09:54:02.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.707" endtime="20201112 09:54:02.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:02.710" endtime="20201112 09:54:02.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.709" endtime="20201112 09:54:02.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.705" endtime="20201112 09:54:02.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.313" endtime="20201112 09:54:02.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.312" endtime="20201112 09:54:02.731"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.740" endtime="20201112 09:54:02.756"></status>
</kw>
<msg timestamp="20201112 09:54:02.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:02.739" endtime="20201112 09:54:02.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:02.758" endtime="20201112 09:54:02.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.760" endtime="20201112 09:54:02.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.736" endtime="20201112 09:54:02.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.734" endtime="20201112 09:54:02.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.771" endtime="20201112 09:54:03.057"></status>
</kw>
<msg timestamp="20201112 09:54:03.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022241514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022277347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:02.770" endtime="20201112 09:54:03.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022241514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022277347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:03.062" endtime="20201112 09:54:03.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.070" endtime="20201112 09:54:03.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.766" endtime="20201112 09:54:03.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.764" endtime="20201112 09:54:03.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:03.077" level="INFO">${RESULT} = [{'time': 0.022277347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5832999999999005e-05, 'source_diff': 3.5832999999999005e-05}, {'time': 0.022318236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:03.073" endtime="20201112 09:54:03.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:03.090" level="INFO">${ACCURACY} = {'time': [0.022277347, 0.022318236, 0.022358236, 0.02239925, 0.022439319, 0.022480264, 0.02252025, 0.02256125, 0.02260125, 0.022641319, 0.022681333, 0.022722264, 0.022762264, 0.022802264, 0.022842264,...</msg>
<status status="PASS" starttime="20201112 09:54:03.078" endtime="20201112 09:54:03.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.095" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 09:54:03.094" endtime="20201112 09:54:03.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.097" level="INFO">VALUE: [3.5832999999999005e-05, 3.5555000000003084e-05, 3.545799999999863e-05, 3.602800000000045e-05, 3.5332999999998504e-05, 3.6096999999998824e-05, 3.5124999999996964e-05, 3.598600000000174e-05, 3.5125000000000434e-05, 3.517999999999924e-05, 3.5305000000002834e-05, 3.605599999999959e-05, 3.523600000000099e-05, 3.525000000000056e-05, 3.52779999999997e-05, 3.5638999999997034e-05, 3.598599999999827e-05, 3.5402999999999823e-05, 3.529199999999927e-05, 3.602800000000045e-05, 3.551400000000038e-05, 3.5152999999999573e-05, 3.520899999999785e-05, 3.552799999999995e-05, 3.525000000000056e-05, 3.6026999999997505e-05, 3.532000000000188e-05, 3.529199999999927e-05, 3.601400000000088e-05, 3.5554999999999615e-05, 3.598599999999827e-05, 3.6082999999999255e-05, 3.5139000000000004e-05, 3.5152999999999573e-05, 3.5125000000000434e-05, 3.5388999999996784e-05, 3.5333000000001974e-05, 3.523599999999752e-05, 3.5139000000000004e-05, 3.599999999999784e-05, 3.5639000000000504e-05, 3.516599999999967e-05, 3.601399999999741e-05, 3.522200000000142e-05, 3.5139000000000004e-05, 3.550000000000081e-05, 3.5082999999998254e-05, 3.523600000000099e-05, 3.598600000000174e-05, 3.554200000000299e-05]</msg>
<status status="PASS" starttime="20201112 09:54:03.096" endtime="20201112 09:54:03.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.091" endtime="20201112 09:54:03.098"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.101" endtime="20201112 09:54:03.102"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:03.104" endtime="20201112 09:54:03.124"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.103" endtime="20201112 09:54:03.124"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.099" endtime="20201112 09:54:03.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.733" endtime="20201112 09:54:03.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.732" endtime="20201112 09:54:03.125"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.134" endtime="20201112 09:54:03.150"></status>
</kw>
<msg timestamp="20201112 09:54:03.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.132" endtime="20201112 09:54:03.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.152" endtime="20201112 09:54:03.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.154" endtime="20201112 09:54:03.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.130" endtime="20201112 09:54:03.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.128" endtime="20201112 09:54:03.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.164" endtime="20201112 09:54:03.450"></status>
</kw>
<msg timestamp="20201112 09:54:03.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022155653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022192444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:03.163" endtime="20201112 09:54:03.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022155653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022192444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:03.454" endtime="20201112 09:54:03.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.462" endtime="20201112 09:54:03.464"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.160" endtime="20201112 09:54:03.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.158" endtime="20201112 09:54:03.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:03.469" level="INFO">${RESULT} = [{'time': 0.022192444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6790999999997825e-05, 'source_diff': 3.6790999999997825e-05}, {'time': 0.022234375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:03.466" endtime="20201112 09:54:03.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:03.483" level="INFO">${ACCURACY} = {'time': [0.022192444, 0.022234375, 0.022275389, 0.022316417, 0.022358431, 0.022399389, 0.022440389, 0.022481417, 0.022522417, 0.022563389, 0.022604431, 0.022645417, 0.022686417, 0.022727403, 0.022768...</msg>
<status status="PASS" starttime="20201112 09:54:03.470" endtime="20201112 09:54:03.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.487" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 09:54:03.486" endtime="20201112 09:54:03.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.490" level="INFO">VALUE: [3.6790999999997825e-05, 3.67780000000012e-05, 3.6389000000001254e-05, 3.62780000000007e-05, 3.707000000000016e-05, 3.651399999999791e-05, 3.647200000000267e-05, 3.629200000000027e-05, 3.620899999999885e-05, 3.644499999999953e-05, 3.632000000000288e-05, 3.6430999999999963e-05, 3.6417000000000394e-05, 3.6430999999999963e-05, 3.6388999999997784e-05, 3.624999999999809e-05, 3.702799999999798e-05, 3.619500000000275e-05, 3.6555000000000615e-05, 3.641600000000092e-05, 3.624999999999809e-05, 3.6360999999998644e-05, 3.622300000000189e-05, 3.647200000000267e-05, 3.649999999999834e-05, 3.6262999999998186e-05, 3.638799999999831e-05, 3.6124999999997964e-05, 3.6555000000000615e-05, 3.625000000000156e-05, 3.6305000000000365e-05, 3.6402999999997354e-05, 3.648600000000224e-05, 3.6361000000002114e-05, 3.651400000000138e-05, 3.6291000000000795e-05, 3.652799999999748e-05, 3.6347000000002544e-05, 3.6180999999999713e-05, 3.698600000000274e-05, 3.652800000000095e-05, 3.7055000000001115e-05, 3.6125000000001434e-05, 3.702800000000145e-05, 3.6346999999999074e-05, 3.627799999999723e-05, 3.656999999999966e-05, 3.6082999999999255e-05, 3.6403000000000824e-05, 3.648599999999877e-05]</msg>
<status status="PASS" starttime="20201112 09:54:03.488" endtime="20201112 09:54:03.490"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.483" endtime="20201112 09:54:03.491"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.493" endtime="20201112 09:54:03.495"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:03.497" endtime="20201112 09:54:03.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.495" endtime="20201112 09:54:03.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.492" endtime="20201112 09:54:03.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.126" endtime="20201112 09:54:03.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.126" endtime="20201112 09:54:03.518"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.526" endtime="20201112 09:54:03.542"></status>
</kw>
<msg timestamp="20201112 09:54:03.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.525" endtime="20201112 09:54:03.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.543" endtime="20201112 09:54:03.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.546" endtime="20201112 09:54:03.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.522" endtime="20201112 09:54:03.549"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.520" endtime="20201112 09:54:03.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.556" endtime="20201112 09:54:03.841"></status>
</kw>
<msg timestamp="20201112 09:54:03.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021768278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:03.554" endtime="20201112 09:54:03.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021768278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:03.846" endtime="20201112 09:54:03.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.854" endtime="20201112 09:54:03.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.552" endtime="20201112 09:54:03.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.550" endtime="20201112 09:54:03.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:03.860" level="INFO">${RESULT} = [{'time': 0.021805736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.745800000000063e-05, 'source_diff': 3.745800000000063e-05}, {'time': 0.021848625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:03.857" endtime="20201112 09:54:03.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:03.875" level="INFO">${ACCURACY} = {'time': [0.021805736, 0.021848625, 0.021890653, 0.021932653, 0.021974639, 0.022017639, 0.022059653, 0.022101722, 0.022143653, 0.022185708, 0.022227653, 0.022269681, 0.022311667, 0.022353681, 0.022395...</msg>
<status status="PASS" starttime="20201112 09:54:03.861" endtime="20201112 09:54:03.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.880" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 09:54:03.879" endtime="20201112 09:54:03.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.882" level="INFO">VALUE: [3.745800000000063e-05, 3.754200000000152e-05, 3.748599999999977e-05, 3.74590000000001e-05, 3.7445000000000533e-05, 3.8082999999997785e-05, 3.7430999999997494e-05, 3.7291000000001795e-05, 3.754199999999805e-05, 3.748599999999977e-05, 3.72780000000017e-05, 3.747299999999967e-05, 3.7167000000001144e-05, 3.7181000000000713e-05, 3.7153000000001574e-05, 3.744400000000106e-05, 3.719400000000081e-05, 3.748700000000271e-05, 3.730599999999737e-05, 3.7124999999998964e-05, 3.74720000000002e-05, 3.7347000000000075e-05, 3.7110999999999394e-05, 3.7138999999998534e-05, 3.7291000000001795e-05, 3.718000000000124e-05, 3.750000000000281e-05, 3.744400000000106e-05, 3.7360999999999644e-05, 3.7290999999998325e-05, 3.744399999999759e-05, 3.7554999999998145e-05, 3.7360999999999644e-05, 3.7124999999998964e-05, 3.749999999999934e-05, 3.7124999999998964e-05, 3.7319000000000935e-05, 3.8068999999998215e-05, 3.801399999999941e-05, 3.7360999999999644e-05, 3.72780000000017e-05, 3.7903000000002324e-05, 3.730599999999737e-05, 3.720899999999985e-05, 3.7333000000000505e-05, 3.722199999999995e-05, 3.720800000000038e-05, 3.805600000000159e-05, 3.80980000000003e-05, 3.725000000000256e-05]</msg>
<status status="PASS" starttime="20201112 09:54:03.881" endtime="20201112 09:54:03.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.876" endtime="20201112 09:54:03.883"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.886" endtime="20201112 09:54:03.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:03.889" endtime="20201112 09:54:03.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.888" endtime="20201112 09:54:03.909"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.884" endtime="20201112 09:54:03.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.519" endtime="20201112 09:54:03.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.518" endtime="20201112 09:54:03.910"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.919" endtime="20201112 09:54:03.934"></status>
</kw>
<msg timestamp="20201112 09:54:03.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.917" endtime="20201112 09:54:03.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.936" endtime="20201112 09:54:03.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.939" endtime="20201112 09:54:03.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.915" endtime="20201112 09:54:03.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.912" endtime="20201112 09:54:03.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.949" endtime="20201112 09:54:04.233"></status>
</kw>
<msg timestamp="20201112 09:54:04.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021928681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:03.947" endtime="20201112 09:54:04.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021928681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:04.238" endtime="20201112 09:54:04.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.246" endtime="20201112 09:54:04.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.945" endtime="20201112 09:54:04.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.943" endtime="20201112 09:54:04.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:04.253" level="INFO">${RESULT} = [{'time': 0.021928681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8402999999999354e-05, 'source_diff': 3.8402999999999354e-05}, {'time': 0.021972639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:04.249" endtime="20201112 09:54:04.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:04.266" level="INFO">${ACCURACY} = {'time': [0.021928681, 0.021972639, 0.022015611, 0.022058611, 0.022101611, 0.022144625, 0.022187625, 0.022230625, 0.022273667, 0.022316639, 0.022360639, 0.022403639, 0.022446694, 0.022490653, 0.022533...</msg>
<status status="PASS" starttime="20201112 09:54:04.254" endtime="20201112 09:54:04.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.271" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 09:54:04.270" endtime="20201112 09:54:04.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.273" level="INFO">VALUE: [3.8402999999999354e-05, 3.8694999999998314e-05, 3.84720000000012e-05, 3.8152999999999104e-05, 3.851399999999991e-05, 3.845800000000163e-05, 3.8388999999999784e-05, 3.8111000000000395e-05, 3.822300000000042e-05, 3.831999999999794e-05, 3.907000000000216e-05, 3.827799999999923e-05, 3.84720000000012e-05, 3.8958999999998134e-05, 3.8097000000000825e-05, 3.8417000000002394e-05, 3.901400000000041e-05, 3.900000000000084e-05, 3.822300000000042e-05, 3.827799999999923e-05, 3.905600000000259e-05, 3.8194999999997814e-05, 3.827799999999923e-05, 3.81659999999992e-05, 3.852799999999948e-05, 3.825000000000009e-05, 3.809799999999683e-05, 3.9041000000000076e-05, 3.9082999999998785e-05, 3.8138999999999534e-05, 3.825000000000009e-05, 3.8540999999999576e-05, 3.8276999999999756e-05, 3.8361000000000645e-05, 3.826399999999966e-05, 3.8082999999997785e-05, 3.852799999999948e-05, 3.8402999999999354e-05, 3.819399999999834e-05, 3.819399999999834e-05, 3.904199999999955e-05, 3.8167000000002144e-05, 3.844400000000206e-05, 3.847199999999773e-05, 3.904200000000302e-05, 3.9096999999998355e-05, 3.8333000000001505e-05, 3.8639000000000034e-05, 3.8402999999999354e-05, 3.906999999999869e-05]</msg>
<status status="PASS" starttime="20201112 09:54:04.272" endtime="20201112 09:54:04.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.267" endtime="20201112 09:54:04.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.277" endtime="20201112 09:54:04.278"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:04.280" endtime="20201112 09:54:04.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.279" endtime="20201112 09:54:04.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.275" endtime="20201112 09:54:04.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.911" endtime="20201112 09:54:04.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.910" endtime="20201112 09:54:04.301"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.310" endtime="20201112 09:54:04.325"></status>
</kw>
<msg timestamp="20201112 09:54:04.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:04.308" endtime="20201112 09:54:04.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:04.327" endtime="20201112 09:54:04.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.330" endtime="20201112 09:54:04.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.306" endtime="20201112 09:54:04.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.304" endtime="20201112 09:54:04.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.340" endtime="20201112 09:54:04.627"></status>
</kw>
<msg timestamp="20201112 09:54:04.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021841167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021880778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:04.339" endtime="20201112 09:54:04.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021841167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021880778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:04.632" endtime="20201112 09:54:04.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.640" endtime="20201112 09:54:04.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.336" endtime="20201112 09:54:04.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.334" endtime="20201112 09:54:04.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:04.647" level="INFO">${RESULT} = [{'time': 0.021880778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9610999999998425e-05, 'source_diff': 3.9610999999998425e-05}, {'time': 0.021925708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:04.643" endtime="20201112 09:54:04.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:04.660" level="INFO">${ACCURACY} = {'time': [0.021880778, 0.021925708, 0.021969722, 0.022013722, 0.022057764, 0.022101778, 0.022145736, 0.022190736, 0.022234736, 0.022278764, 0.022322736, 0.02236675, 0.02241175, 0.02245675, 0.02250075,...</msg>
<status status="PASS" starttime="20201112 09:54:04.648" endtime="20201112 09:54:04.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.665" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 09:54:04.664" endtime="20201112 09:54:04.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.667" level="INFO">VALUE: [3.9610999999998425e-05, 3.949999999999787e-05, 3.9318999999999465e-05, 3.9555000000000146e-05, 3.9375000000001215e-05, 3.952800000000048e-05, 3.9139000000000534e-05, 4.001399999999794e-05, 3.919400000000281e-05, 3.926400000000066e-05, 3.924999999999762e-05, 3.9139000000000534e-05, 4.002800000000098e-05, 3.998600000000227e-05, 3.951400000000091e-05, 3.949999999999787e-05, 3.9347000000002075e-05, 3.925000000000109e-05, 3.955600000000309e-05, 3.94720000000022e-05, 3.9360999999998175e-05, 3.94859999999983e-05, 3.9153000000000104e-05, 3.930599999999937e-05, 3.932000000000241e-05, 4.002800000000098e-05, 3.9416999999999924e-05, 3.9194999999998814e-05, 4.002799999999751e-05, 4.0054999999997176e-05, 3.920799999999891e-05, 3.9625000000001465e-05, 4.0041000000001076e-05, 4.001399999999794e-05, 3.91660000000002e-05, 3.923600000000152e-05, 3.9318999999999465e-05, 3.999999999999837e-05, 3.994400000000009e-05, 3.915200000000063e-05, 4.0027000000001506e-05, 3.927800000000023e-05, 3.924999999999762e-05, 4.0082999999999785e-05, 3.999999999999837e-05, 3.950000000000134e-05, 3.956999999999919e-05, 3.9403000000000354e-05, 4.004199999999708e-05, 3.925000000000109e-05]</msg>
<status status="PASS" starttime="20201112 09:54:04.666" endtime="20201112 09:54:04.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.661" endtime="20201112 09:54:04.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.671" endtime="20201112 09:54:04.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:04.674" endtime="20201112 09:54:04.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.673" endtime="20201112 09:54:04.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.669" endtime="20201112 09:54:04.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.302" endtime="20201112 09:54:04.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.301" endtime="20201112 09:54:04.695"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.704" endtime="20201112 09:54:04.719"></status>
</kw>
<msg timestamp="20201112 09:54:04.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:04.702" endtime="20201112 09:54:04.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:04.721" endtime="20201112 09:54:04.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.723" endtime="20201112 09:54:04.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.700" endtime="20201112 09:54:04.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.698" endtime="20201112 09:54:04.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.734" endtime="20201112 09:54:05.019"></status>
</kw>
<msg timestamp="20201112 09:54:05.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021951347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021991764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:04.732" endtime="20201112 09:54:05.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021951347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021991764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:05.023" endtime="20201112 09:54:05.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.032" endtime="20201112 09:54:05.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.729" endtime="20201112 09:54:05.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.728" endtime="20201112 09:54:05.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:05.038" level="INFO">${RESULT} = [{'time': 0.021991764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0417000000000924e-05, 'source_diff': 4.0417000000000924e-05}, {'time': 0.022037694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:05.035" endtime="20201112 09:54:05.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:05.052" level="INFO">${ACCURACY} = {'time': [0.021991764, 0.022037694, 0.02208275, 0.022127708, 0.022173722, 0.022219708, 0.022265722, 0.022310722, 0.022355722, 0.022400722, 0.022445736, 0.022490736, 0.022535792, 0.022580806, 0.0226257...</msg>
<status status="PASS" starttime="20201112 09:54:05.039" endtime="20201112 09:54:05.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.057" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 09:54:05.056" endtime="20201112 09:54:05.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.059" level="INFO">VALUE: [4.0417000000000924e-05, 4.0624999999998995e-05, 4.0403000000001354e-05, 4.024999999999862e-05, 4.1054999999998176e-05, 4.100000000000284e-05, 4.1041000000002076e-05, 4.0403000000001354e-05, 4.0555000000001146e-05, 4.047199999999973e-05, 4.0389000000001785e-05, 4.0346999999999605e-05, 4.034799999999908e-05, 4.0624999999998995e-05, 4.020799999999991e-05, 4.018000000000077e-05, 4.057000000000019e-05, 4.049999999999887e-05, 4.0319000000000466e-05, 4.104200000000155e-05, 4.0458999999999634e-05, 4.0332999999996566e-05, 4.0431000000000494e-05, 4.1040999999998606e-05, 4.030600000000037e-05, 4.022199999999948e-05, 4.0431000000000494e-05, 4.024999999999862e-05, 4.0472999999999204e-05, 4.029199999999733e-05, 4.009799999999883e-05, 4.0388999999998315e-05, 4.0222999999998954e-05, 4.045800000000016e-05, 4.108400000000026e-05, 4.105600000000112e-05, 4.1097000000000355e-05, 4.040200000000188e-05, 4.0555000000001146e-05, 4.0346999999999605e-05, 4.0513000000002436e-05, 4.0374999999998745e-05, 4.015200000000163e-05, 4.09859999999998e-05, 4.099999999999937e-05, 4.0125000000001965e-05, 4.041600000000145e-05, 4.018000000000077e-05, 4.101399999999894e-05, 4.043000000000102e-05]</msg>
<status status="PASS" starttime="20201112 09:54:05.058" endtime="20201112 09:54:05.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.053" endtime="20201112 09:54:05.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.063" endtime="20201112 09:54:05.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:05.066" endtime="20201112 09:54:05.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.065" endtime="20201112 09:54:05.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.061" endtime="20201112 09:54:05.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.696" endtime="20201112 09:54:05.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.696" endtime="20201112 09:54:05.087"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.096" endtime="20201112 09:54:05.112"></status>
</kw>
<msg timestamp="20201112 09:54:05.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:05.094" endtime="20201112 09:54:05.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:05.114" endtime="20201112 09:54:05.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.116" endtime="20201112 09:54:05.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.091" endtime="20201112 09:54:05.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.089" endtime="20201112 09:54:05.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.126" endtime="20201112 09:54:05.413"></status>
</kw>
<msg timestamp="20201112 09:54:05.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022009542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:05.125" endtime="20201112 09:54:05.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022009542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:05.417" endtime="20201112 09:54:05.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.425" endtime="20201112 09:54:05.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.122" endtime="20201112 09:54:05.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.120" endtime="20201112 09:54:05.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:05.432" level="INFO">${RESULT} = [{'time': 0.022009542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1222999999999954e-05, 'source_diff': 4.1222999999999954e-05}, {'time': 0.022056486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:05.429" endtime="20201112 09:54:05.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:05.446" level="INFO">${ACCURACY} = {'time': [0.022009542, 0.022056486, 0.022103472, 0.022149472, 0.0221955, 0.022242486, 0.0222885, 0.0223355, 0.0223815, 0.022427514, 0.0224735, 0.0225195, 0.022565528, 0.022611569, 0.022657514, 0.02270...</msg>
<status status="PASS" starttime="20201112 09:54:05.433" endtime="20201112 09:54:05.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.451" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 09:54:05.450" endtime="20201112 09:54:05.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.453" level="INFO">VALUE: [4.1222999999999954e-05, 4.142999999999855e-05, 4.198599999999733e-05, 4.127799999999876e-05, 4.126399999999919e-05, 4.2096999999997886e-05, 4.147200000000073e-05, 4.201399999999994e-05, 4.145799999999769e-05, 4.1110999999999925e-05, 4.1374999999999745e-05, 4.104200000000155e-05, 4.133400000000051e-05, 4.1305000000001896e-05, 4.1167000000001674e-05, 4.1473000000000204e-05, 4.140199999999941e-05, 4.1180999999997775e-05, 4.152799999999901e-05, 4.1138999999999065e-05, 4.1972999999997235e-05, 4.151399999999944e-05, 4.152799999999901e-05, 4.1374999999999745e-05, 4.1124999999999495e-05, 4.122200000000048e-05, 4.201399999999994e-05, 4.152799999999901e-05, 4.1304999999998426e-05, 4.144400000000159e-05, 4.118000000000177e-05, 4.140199999999941e-05, 4.127799999999876e-05, 4.201399999999994e-05, 4.122199999999701e-05, 4.1347000000000605e-05, 4.149999999999987e-05, 4.1388999999999315e-05, 4.152799999999901e-05, 4.1333000000001036e-05, 4.152799999999901e-05, 4.1403000000002355e-05, 4.1153000000002105e-05, 4.12920000000018e-05, 4.156999999999772e-05, 4.19860000000008e-05, 4.151399999999944e-05, 4.204199999999908e-05, 4.157000000000119e-05, 4.120799999999744e-05]</msg>
<status status="PASS" starttime="20201112 09:54:05.452" endtime="20201112 09:54:05.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.447" endtime="20201112 09:54:05.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.457" endtime="20201112 09:54:05.458"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:05.460" endtime="20201112 09:54:05.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.459" endtime="20201112 09:54:05.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.455" endtime="20201112 09:54:05.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.088" endtime="20201112 09:54:05.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.087" endtime="20201112 09:54:05.481"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.490" endtime="20201112 09:54:05.506"></status>
</kw>
<msg timestamp="20201112 09:54:05.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:05.488" endtime="20201112 09:54:05.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:05.508" endtime="20201112 09:54:05.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.510" endtime="20201112 09:54:05.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.486" endtime="20201112 09:54:05.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.484" endtime="20201112 09:54:05.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.520" endtime="20201112 09:54:05.807"></status>
</kw>
<msg timestamp="20201112 09:54:05.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022307653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022349931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:05.519" endtime="20201112 09:54:05.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022307653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022349931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:05.811" endtime="20201112 09:54:05.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.819" endtime="20201112 09:54:05.821"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.516" endtime="20201112 09:54:05.821"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.514" endtime="20201112 09:54:05.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:05.826" level="INFO">${RESULT} = [{'time': 0.022349931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.227799999999976e-05, 'source_diff': 4.227799999999976e-05}, {'time': 0.022397861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:05.822" endtime="20201112 09:54:05.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:05.839" level="INFO">${ACCURACY} = {'time': [0.022349931, 0.022397861, 0.022444889, 0.022491903, 0.022538875, 0.022585875, 0.022632889, 0.022679917, 0.022727889, 0.022774889, 0.022821903, 0.022868903, 0.022915903, 0.022963903, 0.023010...</msg>
<status status="PASS" starttime="20201112 09:54:05.827" endtime="20201112 09:54:05.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.844" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 09:54:05.843" endtime="20201112 09:54:05.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.846" level="INFO">VALUE: [4.227799999999976e-05, 4.243000000000302e-05, 4.2180999999998775e-05, 4.247200000000173e-05, 4.2318999999998996e-05, 4.222199999999801e-05, 4.225000000000062e-05, 4.2209000000001384e-05, 4.304200000000008e-05, 4.204199999999908e-05, 4.252800000000001e-05, 4.223600000000105e-05, 4.232000000000194e-05, 4.302800000000051e-05, 4.2152999999999635e-05, 4.301400000000094e-05, 4.2361000000001175e-05, 4.2347000000001606e-05, 4.2487000000000774e-05, 4.301400000000094e-05, 4.218000000000277e-05, 4.2416999999999455e-05, 4.24999999999974e-05, 4.2125000000000495e-05, 4.223599999999758e-05, 4.3069000000003216e-05, 4.219399999999887e-05, 4.29999999999979e-05, 4.2568999999999246e-05, 4.242999999999955e-05, 4.3068999999999746e-05, 4.302800000000051e-05, 4.2332999999998566e-05, 4.247200000000173e-05, 4.252800000000001e-05, 4.3125000000001495e-05, 4.244400000000259e-05, 4.250000000000087e-05, 4.220800000000191e-05, 4.222199999999801e-05, 4.250000000000087e-05, 4.248599999999783e-05, 4.305600000000312e-05, 4.247200000000173e-05, 4.2402999999999885e-05, 4.305599999999965e-05, 4.223600000000105e-05, 4.251400000000044e-05, 4.223600000000105e-05, 4.252800000000001e-05]</msg>
<status status="PASS" starttime="20201112 09:54:05.845" endtime="20201112 09:54:05.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.840" endtime="20201112 09:54:05.848"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.850" endtime="20201112 09:54:05.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:05.853" endtime="20201112 09:54:05.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.852" endtime="20201112 09:54:05.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.848" endtime="20201112 09:54:05.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.482" endtime="20201112 09:54:05.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.482" endtime="20201112 09:54:05.874"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.883" endtime="20201112 09:54:05.899"></status>
</kw>
<msg timestamp="20201112 09:54:05.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:05.881" endtime="20201112 09:54:05.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:05.901" endtime="20201112 09:54:05.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.903" endtime="20201112 09:54:05.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.879" endtime="20201112 09:54:05.907"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.877" endtime="20201112 09:54:05.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.914" endtime="20201112 09:54:06.200"></status>
</kw>
<msg timestamp="20201112 09:54:06.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022238153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022281917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:05.912" endtime="20201112 09:54:06.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022238153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022281917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:06.204" endtime="20201112 09:54:06.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.213" endtime="20201112 09:54:06.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.909" endtime="20201112 09:54:06.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.908" endtime="20201112 09:54:06.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:06.219" level="INFO">${RESULT} = [{'time': 0.022281917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.376399999999822e-05, 'source_diff': 4.376399999999822e-05}, {'time': 0.022330847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:06.216" endtime="20201112 09:54:06.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:06.233" level="INFO">${ACCURACY} = {'time': [0.022281917, 0.022330847, 0.022378847, 0.022426847, 0.022474847, 0.022522861, 0.022570861, 0.022618861, 0.022666861, 0.022715861, 0.022764889, 0.022813875, 0.022861889, 0.022909875, 0.022957...</msg>
<status status="PASS" starttime="20201112 09:54:06.220" endtime="20201112 09:54:06.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.237" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 09:54:06.236" endtime="20201112 09:54:06.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.240" level="INFO">VALUE: [4.376399999999822e-05, 4.3582999999999816e-05, 4.3375000000001745e-05, 4.345799999999969e-05, 4.319399999999987e-05, 4.347200000000273e-05, 4.327800000000076e-05, 4.3417000000000455e-05, 4.3610999999998956e-05, 4.404200000000108e-05, 4.402800000000151e-05, 4.4083000000000316e-05, 4.322199999999901e-05, 4.3068999999999746e-05, 4.347199999999926e-05, 4.323600000000205e-05, 4.3097000000002356e-05, 4.4083000000000316e-05, 4.333399999999904e-05, 4.323599999999858e-05, 4.3431000000000025e-05, 4.323599999999858e-05, 4.354200000000058e-05, 4.408400000000326e-05, 4.352800000000101e-05, 4.3431000000000025e-05, 4.3486999999998305e-05, 4.3305000000000426e-05, 4.351399999999797e-05, 4.3332999999999566e-05, 4.343000000000055e-05, 4.344400000000012e-05, 4.327700000000129e-05, 4.347200000000273e-05, 4.34860000000023e-05, 4.3125000000001495e-05, 4.320799999999944e-05, 4.401400000000194e-05, 4.316600000000073e-05, 4.3124999999998026e-05, 4.323600000000205e-05, 4.3318999999999996e-05, 4.4069000000000746e-05, 4.3361000000002176e-05, 4.4083000000000316e-05, 4.354200000000058e-05, 4.4124999999999026e-05, 4.3332999999999566e-05, 4.344400000000012e-05, 4.3624999999998526e-05]</msg>
<status status="PASS" starttime="20201112 09:54:06.238" endtime="20201112 09:54:06.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.234" endtime="20201112 09:54:06.241"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.243" endtime="20201112 09:54:06.245"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:06.247" endtime="20201112 09:54:06.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.245" endtime="20201112 09:54:06.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.242" endtime="20201112 09:54:06.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.875" endtime="20201112 09:54:06.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.875" endtime="20201112 09:54:06.268"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.277" endtime="20201112 09:54:06.293"></status>
</kw>
<msg timestamp="20201112 09:54:06.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:06.275" endtime="20201112 09:54:06.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:06.295" endtime="20201112 09:54:06.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.297" endtime="20201112 09:54:06.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.272" endtime="20201112 09:54:06.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.270" endtime="20201112 09:54:06.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.307" endtime="20201112 09:54:06.593"></status>
</kw>
<msg timestamp="20201112 09:54:06.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021984222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022028722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:06.306" endtime="20201112 09:54:06.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021984222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022028722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:06.597" endtime="20201112 09:54:06.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.606" endtime="20201112 09:54:06.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.303" endtime="20201112 09:54:06.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.301" endtime="20201112 09:54:06.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:06.612" level="INFO">${RESULT} = [{'time': 0.022028722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.44999999999994e-05, 'source_diff': 4.44999999999994e-05}, {'time': 0.022078653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:06.609" endtime="20201112 09:54:06.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:06.626" level="INFO">${ACCURACY} = {'time': [0.022028722, 0.022078653, 0.022127653, 0.022176653, 0.022226667, 0.022276667, 0.022325681, 0.022374667, 0.022423722, 0.022472681, 0.022521694, 0.022570681, 0.022619694, 0.022668694, 0.022717...</msg>
<status status="PASS" starttime="20201112 09:54:06.613" endtime="20201112 09:54:06.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.630" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 09:54:06.629" endtime="20201112 09:54:06.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.633" level="INFO">VALUE: [4.44999999999994e-05, 4.48060000000014e-05, 4.4389000000002315e-05, 4.4110999999999456e-05, 4.504199999999861e-05, 4.505600000000165e-05, 4.432000000000047e-05, 4.433400000000004e-05, 4.429099999999839e-05, 4.4445000000000595e-05, 4.423599999999958e-05, 4.4180999999997306e-05, 4.427699999999882e-05, 4.452699999999907e-05, 4.44999999999994e-05, 4.4374999999999276e-05, 4.423599999999958e-05, 4.443000000000155e-05, 4.440200000000241e-05, 4.498600000000033e-05, 4.4347000000000136e-05, 4.455499999999821e-05, 4.451399999999897e-05, 4.427800000000176e-05, 4.502800000000251e-05, 4.5111000000000456e-05, 4.430599999999743e-05, 4.4403000000001885e-05, 4.4374999999999276e-05, 4.424999999999915e-05, 4.4139000000002065e-05, 4.502799999999904e-05, 4.4444999999997126e-05, 4.504200000000208e-05, 4.4153000000001635e-05, 4.448599999999983e-05, 4.426400000000219e-05, 4.423600000000305e-05, 4.455599999999768e-05, 4.44999999999994e-05, 4.424999999999915e-05, 4.424999999999915e-05, 4.4374999999999276e-05, 4.427699999999882e-05, 4.419400000000087e-05, 4.451400000000244e-05, 4.422200000000001e-05, 4.502699999999957e-05, 4.4110999999999456e-05, 4.4069000000000746e-05]</msg>
<status status="PASS" starttime="20201112 09:54:06.632" endtime="20201112 09:54:06.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.627" endtime="20201112 09:54:06.634"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.637" endtime="20201112 09:54:06.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:06.640" endtime="20201112 09:54:06.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.638" endtime="20201112 09:54:06.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.635" endtime="20201112 09:54:06.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.269" endtime="20201112 09:54:06.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.268" endtime="20201112 09:54:06.661"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.669" endtime="20201112 09:54:06.686"></status>
</kw>
<msg timestamp="20201112 09:54:06.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:06.668" endtime="20201112 09:54:06.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:06.687" endtime="20201112 09:54:06.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.690" endtime="20201112 09:54:06.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.665" endtime="20201112 09:54:06.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.663" endtime="20201112 09:54:06.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.700" endtime="20201112 09:54:06.987"></status>
</kw>
<msg timestamp="20201112 09:54:06.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021755556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021801208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:06.698" endtime="20201112 09:54:06.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021755556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021801208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:06.991" endtime="20201112 09:54:06.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.000" endtime="20201112 09:54:07.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.696" endtime="20201112 09:54:07.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.694" endtime="20201112 09:54:07.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:07.006" level="INFO">${RESULT} = [{'time': 0.021801208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.565200000000019e-05, 'source_diff': 4.565200000000019e-05}, {'time': 0.021852153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:07.003" endtime="20201112 09:54:07.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:07.021" level="INFO">${ACCURACY} = {'time': [0.021801208, 0.021852153, 0.021902139, 0.021952153, 0.022002153, 0.022052153, 0.022102153, 0.022153167, 0.022203181, 0.022253167, 0.022303167, 0.022354181, 0.022405181, 0.022456181, 0.022506...</msg>
<status status="PASS" starttime="20201112 09:54:07.007" endtime="20201112 09:54:07.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.026" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 09:54:07.024" endtime="20201112 09:54:07.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.028" level="INFO">VALUE: [4.565200000000019e-05, 4.5902999999999916e-05, 4.5347000000001136e-05, 4.526399999999972e-05, 4.5138999999999596e-05, 4.508400000000079e-05, 4.525000000000015e-05, 4.607000000000222e-05, 4.554199999999911e-05, 4.5459000000001165e-05, 4.548599999999736e-05, 4.604199999999961e-05, 4.608399999999832e-05, 4.608399999999832e-05, 4.561099999999749e-05, 4.548600000000083e-05, 4.525000000000015e-05, 4.601299999999753e-05, 4.548600000000083e-05, 4.5125000000000026e-05, 4.531899999999853e-05, 4.5375000000000276e-05, 4.529199999999886e-05, 4.53329999999981e-05, 4.545800000000169e-05, 4.606899999999928e-05, 4.5361000000000706e-05, 4.6139000000000596e-05, 4.5333000000001566e-05, 4.516599999999926e-05, 4.522200000000101e-05, 4.5611000000000956e-05, 4.551399999999997e-05, 4.520800000000144e-05, 4.5195000000001345e-05, 4.5416999999998986e-05, 4.520800000000144e-05, 4.601400000000047e-05, 4.517999999999883e-05, 4.5111000000000456e-05, 4.5152999999999166e-05, 4.520800000000144e-05, 4.552799999999954e-05, 4.5152999999999166e-05, 4.515199999999969e-05, 4.532000000000147e-05, 4.540199999999994e-05, 4.611099999999799e-05, 4.556899999999878e-05, 4.5111000000000456e-05]</msg>
<status status="PASS" starttime="20201112 09:54:07.027" endtime="20201112 09:54:07.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.022" endtime="20201112 09:54:07.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.032" endtime="20201112 09:54:07.033"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:07.035" endtime="20201112 09:54:07.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.034" endtime="20201112 09:54:07.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.030" endtime="20201112 09:54:07.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.662" endtime="20201112 09:54:07.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.661" endtime="20201112 09:54:07.056"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.065" endtime="20201112 09:54:07.081"></status>
</kw>
<msg timestamp="20201112 09:54:07.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.063" endtime="20201112 09:54:07.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.083" endtime="20201112 09:54:07.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.085" endtime="20201112 09:54:07.088"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.061" endtime="20201112 09:54:07.088"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.058" endtime="20201112 09:54:07.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.095" endtime="20201112 09:54:07.380"></status>
</kw>
<msg timestamp="20201112 09:54:07.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022045972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022093111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:07.094" endtime="20201112 09:54:07.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022045972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022093111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:07.384" endtime="20201112 09:54:07.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.392" endtime="20201112 09:54:07.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.091" endtime="20201112 09:54:07.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.089" endtime="20201112 09:54:07.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:07.399" level="INFO">${RESULT} = [{'time': 0.022093111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.713899999999813e-05, 'source_diff': 4.713899999999813e-05}, {'time': 0.022144972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:07.396" endtime="20201112 09:54:07.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:07.412" level="INFO">${ACCURACY} = {'time': [0.022093111, 0.022144972, 0.022195986, 0.022246986, 0.022299028, 0.022349986, 0.022401028, 0.022451986, 0.022503014, 0.022554014, 0.022605, 0.022656, 0.022707028, 0.022758028, 0.022810028, 0...</msg>
<status status="PASS" starttime="20201112 09:54:07.400" endtime="20201112 09:54:07.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.417" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 09:54:07.416" endtime="20201112 09:54:07.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.420" level="INFO">VALUE: [4.713899999999813e-05, 4.672199999999904e-05, 4.6166999999999736e-05, 4.654200000000011e-05, 4.706999999999975e-05, 4.652799999999707e-05, 4.6208999999998446e-05, 4.652800000000054e-05, 4.640299999999695e-05, 4.6430999999999556e-05, 4.630599999999943e-05, 4.624999999999768e-05, 4.655599999999968e-05, 4.626400000000072e-05, 4.705600000000018e-05, 4.609699999999842e-05, 4.623600000000158e-05, 4.622199999999854e-05, 4.702800000000104e-05, 4.658399999999882e-05, 4.6430999999999556e-05, 4.609800000000136e-05, 4.609799999999789e-05, 4.7167000000000736e-05, 4.6237000000001055e-05, 4.706999999999975e-05, 4.647199999999879e-05, 4.634699999999867e-05, 4.6083000000002317e-05, 4.626400000000072e-05, 4.616600000000026e-05, 4.625000000000115e-05, 4.61939999999994e-05, 4.6361000000001706e-05, 4.705499999999724e-05, 4.636099999999824e-05, 4.708399999999932e-05, 4.611099999999799e-05, 4.627800000000029e-05, 4.6347000000002136e-05, 4.630499999999996e-05, 4.65139999999975e-05, 4.655599999999968e-05, 4.6375000000001276e-05, 4.611099999999799e-05, 4.656999999999925e-05, 4.6416999999999986e-05, 4.636099999999824e-05, 4.651400000000097e-05, 4.662499999999806e-05]</msg>
<status status="PASS" starttime="20201112 09:54:07.418" endtime="20201112 09:54:07.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.413" endtime="20201112 09:54:07.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.423" endtime="20201112 09:54:07.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:07.427" endtime="20201112 09:54:07.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.425" endtime="20201112 09:54:07.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.421" endtime="20201112 09:54:07.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.057" endtime="20201112 09:54:07.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.056" endtime="20201112 09:54:07.448"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.456" endtime="20201112 09:54:07.472"></status>
</kw>
<msg timestamp="20201112 09:54:07.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.455" endtime="20201112 09:54:07.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.474" endtime="20201112 09:54:07.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.477" endtime="20201112 09:54:07.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.452" endtime="20201112 09:54:07.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.450" endtime="20201112 09:54:07.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.487" endtime="20201112 09:54:07.773"></status>
</kw>
<msg timestamp="20201112 09:54:07.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021782056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021829431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:07.485" endtime="20201112 09:54:07.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021782056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021829431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:07.778" endtime="20201112 09:54:07.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.786" endtime="20201112 09:54:07.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.482" endtime="20201112 09:54:07.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.481" endtime="20201112 09:54:07.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:07.793" level="INFO">${RESULT} = [{'time': 0.021829431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.737499999999881e-05, 'source_diff': 4.737499999999881e-05}, {'time': 0.021882389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:07.789" endtime="20201112 09:54:07.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:07.807" level="INFO">${ACCURACY} = {'time': [0.021829431, 0.021882389, 0.021934361, 0.021986347, 0.022039361, 0.022091347, 0.022143361, 0.022195361, 0.022247361, 0.022299361, 0.022351375, 0.022404375, 0.022456389, 0.022509389, 0.022561...</msg>
<status status="PASS" starttime="20201112 09:54:07.794" endtime="20201112 09:54:07.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.811" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 09:54:07.810" endtime="20201112 09:54:07.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.814" level="INFO">VALUE: [4.737499999999881e-05, 4.772200000000004e-05, 4.75139999999985e-05, 4.738899999999838e-05, 4.798599999999986e-05, 4.748599999999936e-05, 4.736099999999924e-05, 4.748599999999936e-05, 4.722199999999954e-05, 4.729200000000086e-05, 4.713899999999813e-05, 4.805600000000118e-05, 4.722199999999954e-05, 4.797200000000029e-05, 4.751400000000197e-05, 4.7194999999999876e-05, 4.805599999999771e-05, 4.75000000000024e-05, 4.722200000000301e-05, 4.7209000000002915e-05, 4.7111000000002456e-05, 4.755600000000068e-05, 4.752800000000154e-05, 4.7403000000001416e-05, 4.726399999999825e-05, 4.7181000000000306e-05, 4.737499999999881e-05, 4.801400000000247e-05, 4.75000000000024e-05, 4.723600000000258e-05, 4.752700000000207e-05, 4.718000000000083e-05, 4.723599999999911e-05, 4.747199999999979e-05, 4.806899999999781e-05, 4.806899999999781e-05, 4.727799999999782e-05, 4.741599999999804e-05, 4.737499999999881e-05, 4.75000000000024e-05, 4.799999999999943e-05, 4.802799999999857e-05, 4.752799999999807e-05, 4.73330000000001e-05, 4.798599999999986e-05, 4.730600000000043e-05, 4.736099999999924e-05, 4.726400000000172e-05, 4.763899999999863e-05, 4.808400000000032e-05]</msg>
<status status="PASS" starttime="20201112 09:54:07.812" endtime="20201112 09:54:07.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.808" endtime="20201112 09:54:07.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.822" endtime="20201112 09:54:07.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:07.826" endtime="20201112 09:54:07.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.824" endtime="20201112 09:54:07.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.820" endtime="20201112 09:54:07.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.448" endtime="20201112 09:54:07.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.448" endtime="20201112 09:54:07.847"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.856" endtime="20201112 09:54:07.872"></status>
</kw>
<msg timestamp="20201112 09:54:07.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.854" endtime="20201112 09:54:07.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.874" endtime="20201112 09:54:07.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.877" endtime="20201112 09:54:07.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.852" endtime="20201112 09:54:07.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.849" endtime="20201112 09:54:07.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.887" endtime="20201112 09:54:08.173"></status>
</kw>
<msg timestamp="20201112 09:54:08.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022421958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022470944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:07.886" endtime="20201112 09:54:08.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022421958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022470944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:08.178" endtime="20201112 09:54:08.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.187" endtime="20201112 09:54:08.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.883" endtime="20201112 09:54:08.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.881" endtime="20201112 09:54:08.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:08.194" level="INFO">${RESULT} = [{'time': 0.022470944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.898600000000086e-05, 'source_diff': 4.898600000000086e-05}, {'time': 0.022524875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:08.191" endtime="20201112 09:54:08.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:08.208" level="INFO">${ACCURACY} = {'time': [0.022470944, 0.022524875, 0.022577875, 0.022630903, 0.022683931, 0.022736903, 0.022789889, 0.022843903, 0.022896903, 0.022950903, 0.023003944, 0.023056917, 0.023109917, 0.023163931, 0.023216...</msg>
<status status="PASS" starttime="20201112 09:54:08.195" endtime="20201112 09:54:08.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.213" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 09:54:08.212" endtime="20201112 09:54:08.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.216" level="INFO">VALUE: [4.898600000000086e-05, 4.870800000000147e-05, 4.855600000000168e-05, 4.8445000000001126e-05, 4.837499999999981e-05, 4.827799999999882e-05, 4.830600000000143e-05, 4.905599999999871e-05, 4.822200000000054e-05, 4.907000000000175e-05, 4.819399999999793e-05, 4.837499999999981e-05, 4.85139999999995e-05, 4.902799999999957e-05, 4.829199999999839e-05, 4.8181000000001306e-05, 4.830600000000143e-05, 4.82079999999975e-05, 4.811099999999999e-05, 4.838899999999938e-05, 4.840199999999947e-05, 4.85139999999995e-05, 4.81940000000014e-05, 4.849999999999993e-05, 4.841599999999904e-05, 4.8195000000000876e-05, 4.855599999999821e-05, 4.848600000000036e-05, 4.836100000000024e-05, 4.905499999999924e-05, 4.816699999999827e-05, 4.845799999999775e-05, 4.811099999999999e-05, 4.912500000000056e-05, 4.830600000000143e-05, 4.829199999999839e-05, 4.855600000000168e-05, 4.8431000000001556e-05, 4.905599999999871e-05, 4.816699999999827e-05, 4.904200000000261e-05, 4.823600000000011e-05, 4.8181000000001306e-05, 4.8417000000001986e-05, 4.8458999999997227e-05, 4.908299999999838e-05, 4.857000000000125e-05, 4.848599999999689e-05, 4.841699999999852e-05, 4.8473000000000266e-05]</msg>
<status status="PASS" starttime="20201112 09:54:08.214" endtime="20201112 09:54:08.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.209" endtime="20201112 09:54:08.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.219" endtime="20201112 09:54:08.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:08.223" endtime="20201112 09:54:08.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.221" endtime="20201112 09:54:08.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.218" endtime="20201112 09:54:08.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.848" endtime="20201112 09:54:08.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.847" endtime="20201112 09:54:08.244"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.253" endtime="20201112 09:54:08.269"></status>
</kw>
<msg timestamp="20201112 09:54:08.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:08.251" endtime="20201112 09:54:08.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:08.271" endtime="20201112 09:54:08.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.274" endtime="20201112 09:54:08.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.249" endtime="20201112 09:54:08.279"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.247" endtime="20201112 09:54:08.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.287" endtime="20201112 09:54:08.574"></status>
</kw>
<msg timestamp="20201112 09:54:08.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022883042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022932833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:08.285" endtime="20201112 09:54:08.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022883042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022932833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:08.578" endtime="20201112 09:54:08.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.586" endtime="20201112 09:54:08.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.282" endtime="20201112 09:54:08.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.280" endtime="20201112 09:54:08.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:08.593" level="INFO">${RESULT} = [{'time': 0.022932833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.979100000000042e-05, 'source_diff': 4.979100000000042e-05}, {'time': 0.022987806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:08.589" endtime="20201112 09:54:08.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:08.607" level="INFO">${ACCURACY} = {'time': [0.022932833, 0.022987806, 0.023041764, 0.023095764, 0.023150778, 0.023204792, 0.023258792, 0.023312778, 0.023366792, 0.023420806, 0.023474792, 0.023529792, 0.023583819, 0.023637833, 0.023691...</msg>
<status status="PASS" starttime="20201112 09:54:08.594" endtime="20201112 09:54:08.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.612" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 09:54:08.611" endtime="20201112 09:54:08.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.614" level="INFO">VALUE: [4.979100000000042e-05, 4.96530000000002e-05, 4.913900000000013e-05, 4.926400000000025e-05, 5.006999999999928e-05, 4.916699999999927e-05, 4.913900000000013e-05, 4.961099999999802e-05, 4.926400000000025e-05, 4.940299999999995e-05, 4.940299999999995e-05, 5.005599999999971e-05, 4.937499999999734e-05, 4.913900000000013e-05, 4.9208999999997977e-05, 4.934700000000167e-05, 4.926300000000078e-05, 5.009699999999895e-05, 4.940200000000047e-05, 4.92079999999985e-05, 4.927799999999982e-05, 4.952800000000007e-05, 4.945800000000222e-05, 4.945799999999875e-05, 4.919399999999893e-05, 4.998600000000186e-05, 4.95140000000005e-05, 4.922200000000154e-05, 4.933299999999863e-05, 5.006899999999981e-05, 4.91940000000024e-05, 4.952800000000007e-05, 4.916699999999927e-05, 4.924999999999721e-05, 4.929200000000286e-05, 5.004200000000014e-05, 4.9458999999998227e-05, 4.926400000000025e-05, 4.998599999999839e-05, 4.955599999999921e-05, 4.998600000000186e-05, 4.919399999999893e-05, 4.95270000000006e-05, 4.9237000000000586e-05, 4.919399999999893e-05, 4.929199999999939e-05, 4.917999999999936e-05, 4.937500000000081e-05, 4.947199999999832e-05, 4.912500000000056e-05]</msg>
<status status="PASS" starttime="20201112 09:54:08.613" endtime="20201112 09:54:08.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.608" endtime="20201112 09:54:08.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.618" endtime="20201112 09:54:08.619"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:08.621" endtime="20201112 09:54:08.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.620" endtime="20201112 09:54:08.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.616" endtime="20201112 09:54:08.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.245" endtime="20201112 09:54:08.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.244" endtime="20201112 09:54:08.642"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.651" endtime="20201112 09:54:08.667"></status>
</kw>
<msg timestamp="20201112 09:54:08.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:08.649" endtime="20201112 09:54:08.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:08.669" endtime="20201112 09:54:08.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.672" endtime="20201112 09:54:08.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.647" endtime="20201112 09:54:08.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.645" endtime="20201112 09:54:08.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.683" endtime="20201112 09:54:08.984"></status>
</kw>
<msg timestamp="20201112 09:54:08.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021930736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:08.682" endtime="20201112 09:54:08.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021930736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:08.993" endtime="20201112 09:54:09.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.009" endtime="20201112 09:54:09.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.679" endtime="20201112 09:54:09.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.677" endtime="20201112 09:54:09.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:09.015" level="INFO">${RESULT} = [{'time': 0.021930736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.019399999999993e-05, 'source_diff': 5.019399999999993e-05}, {'time': 0.021986653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:09.012" endtime="20201112 09:54:09.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:09.029" level="INFO">${ACCURACY} = {'time': [0.021930736, 0.021986653, 0.022041708, 0.022096667, 0.022151708, 0.022206681, 0.022261681, 0.022316681, 0.022371694, 0.022426694, 0.022481694, 0.022537722, 0.022592722, 0.022648722, 0.022703...</msg>
<status status="PASS" starttime="20201112 09:54:09.016" endtime="20201112 09:54:09.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.033" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 09:54:09.032" endtime="20201112 09:54:09.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.036" level="INFO">VALUE: [5.019399999999993e-05, 5.043100000000009e-05, 5.033299999999963e-05, 5.036099999999877e-05, 5.052699999999813e-05, 5.049999999999846e-05, 5.012499999999809e-05, 5.050000000000193e-05, 5.022200000000254e-05, 5.022199999999907e-05, 5.048599999999889e-05, 5.111099999999952e-05, 5.05279999999976e-05, 5.106900000000081e-05, 5.019399999999993e-05, 5.05140000000015e-05, 5.013900000000113e-05, 5.031900000000006e-05, 5.040300000000095e-05, 5.01530000000007e-05, 5.102800000000157e-05, 5.015299999999723e-05, 5.018099999999984e-05, 5.047199999999932e-05, 5.054200000000064e-05, 5.104200000000114e-05, 5.05140000000015e-05, 5.036099999999877e-05, 5.03469999999992e-05, 5.03339999999991e-05, 5.025000000000168e-05, 5.106999999999681e-05, 5.023600000000211e-05, 5.045899999999923e-05, 5.03339999999991e-05, 5.031999999999953e-05, 5.018099999999984e-05, 5.045899999999923e-05, 5.047200000000279e-05, 5.106899999999734e-05, 5.015200000000122e-05, 5.011100000000199e-05, 5.013900000000113e-05, 5.041700000000052e-05, 5.022199999999907e-05, 5.02079999999995e-05, 5.03469999999992e-05, 5.056900000000031e-05, 5.049999999999846e-05, 5.027799999999735e-05]</msg>
<status status="PASS" starttime="20201112 09:54:09.034" endtime="20201112 09:54:09.037"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.030" endtime="20201112 09:54:09.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.039" endtime="20201112 09:54:09.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:09.043" endtime="20201112 09:54:09.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.041" endtime="20201112 09:54:09.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.038" endtime="20201112 09:54:09.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.643" endtime="20201112 09:54:09.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.642" endtime="20201112 09:54:09.063"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.072" endtime="20201112 09:54:09.089"></status>
</kw>
<msg timestamp="20201112 09:54:09.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.070" endtime="20201112 09:54:09.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.090" endtime="20201112 09:54:09.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.093" endtime="20201112 09:54:09.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.068" endtime="20201112 09:54:09.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.066" endtime="20201112 09:54:09.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.103" endtime="20201112 09:54:09.388"></status>
</kw>
<msg timestamp="20201112 09:54:09.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021704653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021756792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:09.101" endtime="20201112 09:54:09.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021704653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021756792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:09.392" endtime="20201112 09:54:09.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.401" endtime="20201112 09:54:09.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.099" endtime="20201112 09:54:09.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.097" endtime="20201112 09:54:09.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:09.408" level="INFO">${RESULT} = [{'time': 0.021756792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.213899999999966e-05, 'source_diff': 5.213899999999966e-05}, {'time': 0.021813694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:09.405" endtime="20201112 09:54:09.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:09.422" level="INFO">${ACCURACY} = {'time': [0.021756792, 0.021813694, 0.021870722, 0.021926694, 0.021982708, 0.022039792, 0.022095708, 0.022151708, 0.022208736, 0.022264722, 0.022320778, 0.022377736, 0.022433736, 0.022489736, 0.022545...</msg>
<status status="PASS" starttime="20201112 09:54:09.409" endtime="20201112 09:54:09.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.426" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 09:54:09.425" endtime="20201112 09:54:09.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.429" level="INFO">VALUE: [5.213899999999966e-05, 5.1708000000001e-05, 5.201399999999953e-05, 5.127699999999888e-05, 5.119400000000093e-05, 5.211100000000052e-05, 5.155499999999827e-05, 5.149999999999946e-05, 5.209700000000095e-05, 5.108300000000038e-05, 5.143100000000109e-05, 5.206899999999834e-05, 5.1179999999997894e-05, 5.148599999999989e-05, 5.145800000000075e-05, 5.111099999999952e-05, 5.133300000000063e-05, 5.138900000000238e-05, 5.148599999999989e-05, 5.130599999999749e-05, 5.201399999999953e-05, 5.119500000000041e-05, 5.120899999999998e-05, 5.129200000000139e-05, 5.119500000000041e-05, 5.204200000000214e-05, 5.1443999999997714e-05, 5.1486999999999367e-05, 5.134799999999967e-05, 5.157000000000078e-05, 5.1443999999997714e-05, 5.148600000000336e-05, 5.124999999999921e-05, 5.199999999999996e-05, 5.138899999999891e-05, 5.149999999999946e-05, 5.155600000000121e-05, 5.116600000000179e-05, 5.132000000000053e-05, 5.111099999999952e-05, 5.154199999999817e-05, 5.143099999999762e-05, 5.138899999999891e-05, 5.143099999999762e-05, 5.206899999999834e-05, 5.144500000000066e-05, 5.20279999999991e-05, 5.113900000000213e-05, 5.111099999999952e-05, 5.209800000000042e-05]</msg>
<status status="PASS" starttime="20201112 09:54:09.427" endtime="20201112 09:54:09.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.423" endtime="20201112 09:54:09.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.432" endtime="20201112 09:54:09.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:09.436" endtime="20201112 09:54:09.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.434" endtime="20201112 09:54:09.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.431" endtime="20201112 09:54:09.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.064" endtime="20201112 09:54:09.457"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.064" endtime="20201112 09:54:09.457"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.465" endtime="20201112 09:54:09.482"></status>
</kw>
<msg timestamp="20201112 09:54:09.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.464" endtime="20201112 09:54:09.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.484" endtime="20201112 09:54:09.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.486" endtime="20201112 09:54:09.489"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.461" endtime="20201112 09:54:09.489"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.459" endtime="20201112 09:54:09.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.496" endtime="20201112 09:54:09.781"></status>
</kw>
<msg timestamp="20201112 09:54:09.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021795236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021848264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:09.495" endtime="20201112 09:54:09.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021795236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021848264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:09.785" endtime="20201112 09:54:09.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.793" endtime="20201112 09:54:09.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.492" endtime="20201112 09:54:09.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.490" endtime="20201112 09:54:09.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:09.800" level="INFO">${RESULT} = [{'time': 0.021848264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.30280000000001e-05, 'source_diff': 5.30280000000001e-05}, {'time': 0.021906194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:09.796" endtime="20201112 09:54:09.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:09.813" level="INFO">${ACCURACY} = {'time': [0.021848264, 0.021906194, 0.021963222, 0.022020208, 0.022077222, 0.022134222, 0.022191264, 0.022248222, 0.022305222, 0.02236225, 0.02241925, 0.02247625, 0.022533236, 0.02259025, 0.022647264,...</msg>
<status status="PASS" starttime="20201112 09:54:09.801" endtime="20201112 09:54:09.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.818" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 09:54:09.817" endtime="20201112 09:54:09.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.820" level="INFO">VALUE: [5.30280000000001e-05, 5.251300000000056e-05, 5.22080000000015e-05, 5.256899999999884e-05, 5.230499999999902e-05, 5.2415999999999574e-05, 5.250000000000046e-05, 5.219400000000193e-05, 5.213899999999966e-05, 5.251400000000003e-05, 5.256900000000231e-05, 5.238899999999991e-05, 5.222200000000107e-05, 5.250000000000046e-05, 5.251400000000003e-05, 5.212500000000009e-05, 5.219499999999794e-05, 5.245800000000175e-05, 5.211100000000052e-05, 5.225000000000021e-05, 5.211099999999705e-05, 5.306999999999881e-05, 5.230599999999849e-05, 5.219500000000141e-05, 5.250000000000046e-05, 5.2235999999997174e-05, 5.225000000000021e-05, 5.227699999999988e-05, 5.23340000000011e-05, 5.302700000000063e-05, 5.231900000000206e-05, 5.251299999999709e-05, 5.2443999999998714e-05, 5.250000000000046e-05, 5.30410000000002e-05, 5.254200000000264e-05, 5.215299999999923e-05, 5.304099999999673e-05, 5.308300000000238e-05, 5.255499999999927e-05, 5.2429999999999144e-05, 5.21530000000027e-05, 5.2457999999998284e-05, 5.251400000000003e-05, 5.229199999999892e-05, 5.240299999999948e-05, 5.211100000000052e-05, 5.226399999999978e-05, 5.255599999999874e-05, 5.227799999999935e-05]</msg>
<status status="PASS" starttime="20201112 09:54:09.819" endtime="20201112 09:54:09.821"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.814" endtime="20201112 09:54:09.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.824" endtime="20201112 09:54:09.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:09.827" endtime="20201112 09:54:09.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.826" endtime="20201112 09:54:09.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.822" endtime="20201112 09:54:09.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.458" endtime="20201112 09:54:09.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.457" endtime="20201112 09:54:09.848"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.857" endtime="20201112 09:54:09.873"></status>
</kw>
<msg timestamp="20201112 09:54:09.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.855" endtime="20201112 09:54:09.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.875" endtime="20201112 09:54:09.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.877" endtime="20201112 09:54:09.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.853" endtime="20201112 09:54:09.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.851" endtime="20201112 09:54:09.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.887" endtime="20201112 09:54:10.173"></status>
</kw>
<msg timestamp="20201112 09:54:10.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021904333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021957667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:09.886" endtime="20201112 09:54:10.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021904333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021957667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:10.177" endtime="20201112 09:54:10.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.185" endtime="20201112 09:54:10.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.883" endtime="20201112 09:54:10.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.882" endtime="20201112 09:54:10.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:10.192" level="INFO">${RESULT} = [{'time': 0.021957667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.333399999999863e-05, 'source_diff': 5.333399999999863e-05}, {'time': 0.022016597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:10.189" endtime="20201112 09:54:10.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:10.206" level="INFO">${ACCURACY} = {'time': [0.021957667, 0.022016597, 0.022074625, 0.022133625, 0.022191611, 0.022249653, 0.022307625, 0.022365653, 0.022423625, 0.022481681, 0.022539653, 0.022597639, 0.022656653, 0.022714653, 0.022773...</msg>
<status status="PASS" starttime="20201112 09:54:10.193" endtime="20201112 09:54:10.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.211" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 09:54:10.210" endtime="20201112 09:54:10.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.213" level="INFO">VALUE: [5.333399999999863e-05, 5.3985999999998924e-05, 5.312500000000109e-05, 5.405600000000024e-05, 5.3193999999999464e-05, 5.347200000000232e-05, 5.330599999999949e-05, 5.358399999999888e-05, 5.3443999999999714e-05, 5.330599999999949e-05, 5.334699999999873e-05, 5.3207999999999034e-05, 5.4013999999998064e-05, 5.326400000000078e-05, 5.404200000000067e-05, 5.331999999999906e-05, 5.40280000000011e-05, 5.415299999999776e-05, 5.331899999999959e-05, 5.350000000000146e-05, 5.315300000000023e-05, 5.3471999999998854e-05, 5.319400000000293e-05, 5.3443999999999714e-05, 5.325000000000121e-05, 5.354200000000017e-05, 5.315300000000023e-05, 5.3207999999999034e-05, 5.3415999999997105e-05, 5.308300000000238e-05, 5.3179999999999894e-05, 5.347200000000232e-05, 5.333399999999863e-05, 5.398600000000239e-05, 5.308299999999891e-05, 5.329199999999992e-05, 5.330599999999949e-05, 5.405600000000024e-05, 5.334699999999873e-05, 5.3471999999998854e-05, 5.331999999999906e-05, 5.351400000000103e-05, 5.35280000000006e-05, 5.313900000000066e-05, 5.327800000000035e-05, 5.327800000000035e-05, 5.308400000000185e-05, 5.331999999999906e-05, 5.313900000000066e-05, 5.327699999999741e-05]</msg>
<status status="PASS" starttime="20201112 09:54:10.212" endtime="20201112 09:54:10.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.207" endtime="20201112 09:54:10.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.217" endtime="20201112 09:54:10.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:10.220" endtime="20201112 09:54:10.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.219" endtime="20201112 09:54:10.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.215" endtime="20201112 09:54:10.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.849" endtime="20201112 09:54:10.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.849" endtime="20201112 09:54:10.241"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.250" endtime="20201112 09:54:10.266"></status>
</kw>
<msg timestamp="20201112 09:54:10.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:10.248" endtime="20201112 09:54:10.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:10.268" endtime="20201112 09:54:10.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.270" endtime="20201112 09:54:10.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.245" endtime="20201112 09:54:10.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.243" endtime="20201112 09:54:10.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.280" endtime="20201112 09:54:10.566"></status>
</kw>
<msg timestamp="20201112 09:54:10.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021889319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021944014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:10.279" endtime="20201112 09:54:10.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021889319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021944014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:10.570" endtime="20201112 09:54:10.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.578" endtime="20201112 09:54:10.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.276" endtime="20201112 09:54:10.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.275" endtime="20201112 09:54:10.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:10.585" level="INFO">${RESULT} = [{'time': 0.021944014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.469500000000044e-05, 'source_diff': 5.469500000000044e-05}, {'time': 0.022003944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:10.581" endtime="20201112 09:54:10.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:10.598" level="INFO">${ACCURACY} = {'time': [0.021944014, 0.022003944, 0.022062944, 0.022121931, 0.022180944, 0.022240014, 0.022298944, 0.022357958, 0.022416958, 0.022475958, 0.022534972, 0.022594, 0.022652986, 0.022711986, 0.022770986...</msg>
<status status="PASS" starttime="20201112 09:54:10.586" endtime="20201112 09:54:10.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.603" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 09:54:10.602" endtime="20201112 09:54:10.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.605" level="INFO">VALUE: [5.469500000000044e-05, 5.451300000000256e-05, 5.430500000000102e-05, 5.436200000000224e-05, 5.4416000000001574e-05, 5.458300000000041e-05, 5.423600000000264e-05, 5.43609999999993e-05, 5.45410000000017e-05, 5.4208000000000034e-05, 5.430500000000102e-05, 5.437499999999887e-05, 5.429200000000092e-05, 5.43609999999993e-05, 5.4458000000000284e-05, 5.455500000000127e-05, 5.412499999999862e-05, 5.43609999999993e-05, 5.457000000000031e-05, 5.415299999999776e-05, 5.432000000000006e-05, 5.5027999999998634e-05, 5.4485999999999424e-05, 5.438899999999844e-05, 5.507000000000081e-05, 5.443100000000062e-05, 5.412500000000209e-05, 5.437500000000234e-05, 5.427800000000135e-05, 5.408399999999938e-05, 5.440300000000148e-05, 5.4444000000000714e-05, 5.4249999999998744e-05, 5.426299999999884e-05, 5.427699999999841e-05, 5.426299999999884e-05, 5.422200000000307e-05, 5.438899999999844e-05, 5.4166000000001324e-05, 5.4999999999999494e-05, 5.4208000000000034e-05, 5.413900000000166e-05, 5.429200000000092e-05, 5.427800000000135e-05, 5.413900000000166e-05, 5.409699999999948e-05, 5.4249999999998744e-05, 5.4277999999997883e-05, 5.431899999999712e-05, 5.444500000000019e-05]</msg>
<status status="PASS" starttime="20201112 09:54:10.604" endtime="20201112 09:54:10.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.599" endtime="20201112 09:54:10.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.609" endtime="20201112 09:54:10.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:10.612" endtime="20201112 09:54:10.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.611" endtime="20201112 09:54:10.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.607" endtime="20201112 09:54:10.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.242" endtime="20201112 09:54:10.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.241" endtime="20201112 09:54:10.633"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.641" endtime="20201112 09:54:10.658"></status>
</kw>
<msg timestamp="20201112 09:54:10.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:10.640" endtime="20201112 09:54:10.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:10.659" endtime="20201112 09:54:10.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.662" endtime="20201112 09:54:10.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.637" endtime="20201112 09:54:10.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.635" endtime="20201112 09:54:10.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.672" endtime="20201112 09:54:10.958"></status>
</kw>
<msg timestamp="20201112 09:54:10.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021601736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021657861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:10.670" endtime="20201112 09:54:10.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021601736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021657861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:10.962" endtime="20201112 09:54:10.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.970" endtime="20201112 09:54:10.972"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.668" endtime="20201112 09:54:10.972"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.666" endtime="20201112 09:54:10.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:10.977" level="INFO">${RESULT} = [{'time': 0.021657861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.612500000000062e-05, 'source_diff': 5.612500000000062e-05}, {'time': 0.021718736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:10.973" endtime="20201112 09:54:10.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:10.990" level="INFO">${ACCURACY} = {'time': [0.021657861, 0.021718736, 0.021778736, 0.021838764, 0.02189875, 0.021959736, 0.022019736, 0.02207975, 0.02213975, 0.022199806, 0.022259778, 0.022320778, 0.022381764, 0.022441778, 0.022502778...</msg>
<status status="PASS" starttime="20201112 09:54:10.978" endtime="20201112 09:54:10.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.995" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 09:54:10.994" endtime="20201112 09:54:10.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.997" level="INFO">VALUE: [5.612500000000062e-05, 5.5443999999998245e-05, 5.5179999999998425e-05, 5.5499999999999994e-05, 5.555600000000174e-05, 5.6014000000000064e-05, 5.505500000000177e-05, 5.5236000000000174e-05, 5.5305999999998023e-05, 5.522300000000008e-05, 5.5263999999999314e-05, 5.6014000000000064e-05, 5.6027999999999634e-05, 5.520900000000051e-05, 5.6000000000000494e-05, 5.6041999999999204e-05, 5.518100000000137e-05, 5.519500000000094e-05, 5.5208000000001034e-05, 5.5277999999998884e-05, 5.5194000000001464e-05, 5.5249999999999744e-05, 5.513899999999919e-05, 5.608300000000191e-05, 5.530500000000202e-05, 5.5429999999998675e-05, 5.5458000000001284e-05, 5.512499999999962e-05, 5.531899999999812e-05, 5.554099999999923e-05, 5.515299999999876e-05, 5.566699999999883e-05, 5.5457999999997815e-05, 5.5263999999999314e-05, 5.540299999999901e-05, 5.5222000000000604e-05, 5.516699999999833e-05, 5.5277999999998884e-05, 5.533300000000116e-05, 5.5499999999999994e-05, 5.5527999999999134e-05, 5.5486000000000424e-05, 5.5486000000000424e-05, 5.53610000000003e-05, 5.608299999999844e-05, 5.5236000000000174e-05, 5.5305999999998023e-05, 5.5499999999999994e-05, 5.55549999999988e-05, 5.53610000000003e-05]</msg>
<status status="PASS" starttime="20201112 09:54:10.996" endtime="20201112 09:54:10.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.991" endtime="20201112 09:54:10.998"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.001" endtime="20201112 09:54:11.002"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:11.004" endtime="20201112 09:54:11.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.003" endtime="20201112 09:54:11.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.999" endtime="20201112 09:54:11.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.634" endtime="20201112 09:54:11.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.633" endtime="20201112 09:54:11.025"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.034" endtime="20201112 09:54:11.051"></status>
</kw>
<msg timestamp="20201112 09:54:11.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:11.032" endtime="20201112 09:54:11.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:11.052" endtime="20201112 09:54:11.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.055" endtime="20201112 09:54:11.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.030" endtime="20201112 09:54:11.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.028" endtime="20201112 09:54:11.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.065" endtime="20201112 09:54:11.350"></status>
</kw>
<msg timestamp="20201112 09:54:11.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021700819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021757264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:11.063" endtime="20201112 09:54:11.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021700819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021757264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:11.354" endtime="20201112 09:54:11.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.362" endtime="20201112 09:54:11.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.060" endtime="20201112 09:54:11.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.059" endtime="20201112 09:54:11.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:11.369" level="INFO">${RESULT} = [{'time': 0.021757264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.644499999999872e-05, 'source_diff': 5.644499999999872e-05}, {'time': 0.021819167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:11.366" endtime="20201112 09:54:11.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:11.382" level="INFO">${ACCURACY} = {'time': [0.021757264, 0.021819167, 0.021880181, 0.021941167, 0.022003167, 0.022064236, 0.022125167, 0.022186181, 0.022248181, 0.022310181, 0.022371236, 0.022432208, 0.022493264, 0.022554208, 0.022615...</msg>
<status status="PASS" starttime="20201112 09:54:11.370" endtime="20201112 09:54:11.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.387" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 09:54:11.386" endtime="20201112 09:54:11.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.389" level="INFO">VALUE: [5.644499999999872e-05, 5.6500000000000994e-05, 5.6263999999996844e-05, 5.6500000000000994e-05, 5.7069999999999343e-05, 5.638900000000044e-05, 5.6236000000001174e-05, 5.611200000000052e-05, 5.698699999999793e-05, 5.7013999999997594e-05, 5.6471999999998385e-05, 5.611099999999758e-05, 5.6291999999999454e-05, 5.652700000000066e-05, 5.638900000000044e-05, 5.612500000000062e-05, 5.634700000000173e-05, 5.65549999999998e-05, 5.611100000000105e-05, 5.656899999999937e-05, 5.612499999999715e-05, 5.6472000000001854e-05, 5.638900000000044e-05, 5.6208000000002034e-05, 5.615299999999976e-05, 5.6486000000001424e-05, 5.6457999999998815e-05, 5.705600000000324e-05, 5.632000000000206e-05, 5.633399999999816e-05, 5.6264000000000314e-05, 5.6291999999999454e-05, 5.65549999999998e-05, 5.6500000000000994e-05, 5.7083999999998913e-05, 5.6999999999998024e-05, 5.6443999999999245e-05, 5.6555999999999274e-05, 5.6500000000000994e-05, 5.609700000000148e-05, 5.627699999999694e-05, 5.6429999999999675e-05, 5.6249999999997274e-05, 5.6250000000000744e-05, 5.640300000000001e-05, 5.63610000000013e-05, 5.7055999999999774e-05, 5.708299999999944e-05, 5.631900000000259e-05, 5.6235999999997704e-05]</msg>
<status status="PASS" starttime="20201112 09:54:11.388" endtime="20201112 09:54:11.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.383" endtime="20201112 09:54:11.391"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.393" endtime="20201112 09:54:11.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:11.396" endtime="20201112 09:54:11.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.395" endtime="20201112 09:54:11.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.391" endtime="20201112 09:54:11.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.026" endtime="20201112 09:54:11.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.026" endtime="20201112 09:54:11.417"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.426" endtime="20201112 09:54:11.444"></status>
</kw>
<msg timestamp="20201112 09:54:11.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:11.424" endtime="20201112 09:54:11.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:11.445" endtime="20201112 09:54:11.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.448" endtime="20201112 09:54:11.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.422" endtime="20201112 09:54:11.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.420" endtime="20201112 09:54:11.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.458" endtime="20201112 09:54:11.743"></status>
</kw>
<msg timestamp="20201112 09:54:11.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022037236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022095, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:11.456" endtime="20201112 09:54:11.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022037236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022095, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:11.747" endtime="20201112 09:54:11.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.755" endtime="20201112 09:54:11.757"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.454" endtime="20201112 09:54:11.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.452" endtime="20201112 09:54:11.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:11.762" level="INFO">${RESULT} = [{'time': 0.022095, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7763999999998344e-05, 'source_diff': 5.7763999999998344e-05}, {'time': 0.022157917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:11.759" endtime="20201112 09:54:11.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:11.776" level="INFO">${ACCURACY} = {'time': [0.022095, 0.022157917, 0.022219972, 0.022281917, 0.022343944, 0.022405931, 0.022468958, 0.022530944, 0.022592958, 0.022654944, 0.022716972, 0.022778972, 0.022840958, 0.022902972, 0.022964986...</msg>
<status status="PASS" starttime="20201112 09:54:11.763" endtime="20201112 09:54:11.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.781" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 09:54:11.780" endtime="20201112 09:54:11.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.783" level="INFO">VALUE: [5.7763999999998344e-05, 5.73749999999984e-05, 5.731900000000012e-05, 5.741699999999711e-05, 5.7486000000002424e-05, 5.7500000000001994e-05, 5.804100000000173e-05, 5.7500000000001994e-05, 5.7166000000000855e-05, 5.7193999999999995e-05, 5.729099999999751e-05, 5.758299999999994e-05, 5.7402000000001535e-05, 5.7471999999999385e-05, 5.758299999999994e-05, 5.7263999999997844e-05, 5.711099999999858e-05, 5.7513999999998094e-05, 5.805499999999783e-05, 5.715300000000076e-05, 5.716700000000033e-05, 5.7221999999999135e-05, 5.741700000000058e-05, 5.744499999999972e-05, 5.71809999999999e-05, 5.7222000000002604e-05, 5.8069999999996874e-05, 5.7264000000001314e-05, 5.7278000000000884e-05, 5.748699999999843e-05, 5.8083999999999913e-05, 5.75550000000008e-05, 5.743100000000015e-05, 5.75550000000008e-05, 5.736099999999883e-05, 5.7528000000001134e-05, 5.70550000000003e-05, 5.738900000000144e-05, 5.729100000000098e-05, 5.711099999999858e-05, 5.7514000000001564e-05, 5.712500000000162e-05, 5.73610000000023e-05, 5.758299999999994e-05, 5.73610000000023e-05, 5.761099999999908e-05, 5.758299999999994e-05, 5.7444000000000245e-05, 5.709700000000248e-05, 5.80689999999974e-05]</msg>
<status status="PASS" starttime="20201112 09:54:11.782" endtime="20201112 09:54:11.784"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.777" endtime="20201112 09:54:11.785"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.787" endtime="20201112 09:54:11.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:11.790" endtime="20201112 09:54:11.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.789" endtime="20201112 09:54:11.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.785" endtime="20201112 09:54:11.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.418" endtime="20201112 09:54:11.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.417" endtime="20201112 09:54:11.811"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.819" endtime="20201112 09:54:11.836"></status>
</kw>
<msg timestamp="20201112 09:54:11.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:11.818" endtime="20201112 09:54:11.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:11.837" endtime="20201112 09:54:11.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.840" endtime="20201112 09:54:11.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.815" endtime="20201112 09:54:11.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.813" endtime="20201112 09:54:11.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.850" endtime="20201112 09:54:12.135"></status>
</kw>
<msg timestamp="20201112 09:54:12.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021677361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021735694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:11.848" endtime="20201112 09:54:12.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021677361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021735694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:12.139" endtime="20201112 09:54:12.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.147" endtime="20201112 09:54:12.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.846" endtime="20201112 09:54:12.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.844" endtime="20201112 09:54:12.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:12.154" level="INFO">${RESULT} = [{'time': 0.021735694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.833300000000069e-05, 'source_diff': 5.833300000000069e-05}, {'time': 0.021799639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:12.151" endtime="20201112 09:54:12.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:12.168" level="INFO">${ACCURACY} = {'time': [0.021735694, 0.021799639, 0.021863639, 0.021926708, 0.021990653, 0.022054639, 0.022117653, 0.022180681, 0.022243653, 0.022306667, 0.022369667, 0.022432667, 0.022495681, 0.022558681, 0.022621...</msg>
<status status="PASS" starttime="20201112 09:54:12.155" endtime="20201112 09:54:12.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.172" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 09:54:12.171" endtime="20201112 09:54:12.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.175" level="INFO">VALUE: [5.833300000000069e-05, 5.8555999999997804e-05, 5.908300000000144e-05, 5.8499999999999525e-05, 5.9013999999999595e-05, 5.9070000000001344e-05, 5.8320000000000594e-05, 5.8292000000001454e-05, 5.8471999999996915e-05, 5.840299999999854e-05, 5.8334000000000163e-05, 5.8097999999999483e-05, 5.812499999999915e-05, 5.822299999999961e-05, 5.8416000000002105e-05, 5.8513999999999095e-05, 5.840300000000201e-05, 5.8387999999999496e-05, 5.8513999999999095e-05, 5.829099999999851e-05, 5.8513999999999095e-05, 5.830500000000155e-05, 5.9000000000000025e-05, 5.9083999999997444e-05, 5.8499999999999525e-05, 5.834700000000026e-05, 5.858300000000094e-05, 5.8291999999997984e-05, 5.8499999999999525e-05, 5.9041999999998734e-05, 5.8235999999999705e-05, 5.8458000000000815e-05, 5.908299999999797e-05, 5.840299999999854e-05, 5.8249999999999275e-05, 5.9042000000002204e-05, 5.9083999999997444e-05, 5.83749999999994e-05, 5.9000000000000025e-05, 5.845900000000029e-05, 5.90689999999984e-05, 5.8292000000001454e-05, 5.8194000000000995e-05, 5.8499999999999525e-05, 5.8152000000002285e-05, 5.8207999999997095e-05, 5.8249999999999275e-05, 5.854099999999876e-05, 5.833300000000069e-05, 5.815300000000176e-05]</msg>
<status status="PASS" starttime="20201112 09:54:12.173" endtime="20201112 09:54:12.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.169" endtime="20201112 09:54:12.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.178" endtime="20201112 09:54:12.179"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:12.182" endtime="20201112 09:54:12.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.180" endtime="20201112 09:54:12.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.177" endtime="20201112 09:54:12.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.812" endtime="20201112 09:54:12.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.811" endtime="20201112 09:54:12.202"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.211" endtime="20201112 09:54:12.228"></status>
</kw>
<msg timestamp="20201112 09:54:12.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:12.210" endtime="20201112 09:54:12.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:12.230" endtime="20201112 09:54:12.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.232" endtime="20201112 09:54:12.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.207" endtime="20201112 09:54:12.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.205" endtime="20201112 09:54:12.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.242" endtime="20201112 09:54:12.528"></status>
</kw>
<msg timestamp="20201112 09:54:12.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022160319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022220361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:12.241" endtime="20201112 09:54:12.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022160319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022220361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:12.532" endtime="20201112 09:54:12.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.540" endtime="20201112 09:54:12.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.238" endtime="20201112 09:54:12.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.237" endtime="20201112 09:54:12.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:12.547" level="INFO">${RESULT} = [{'time': 0.022220361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0041999999999734e-05, 'source_diff': 6.0041999999999734e-05}, {'time': 0.022285292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:12.544" endtime="20201112 09:54:12.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:12.560" level="INFO">${ACCURACY} = {'time': [0.022220361, 0.022285292, 0.022350319, 0.022414306, 0.022479306, 0.022543306, 0.022607306, 0.022671333, 0.022735319, 0.022799333, 0.022863333, 0.022927333, 0.022991333, 0.023055347, 0.023119...</msg>
<status status="PASS" starttime="20201112 09:54:12.548" endtime="20201112 09:54:12.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.565" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 09:54:12.564" endtime="20201112 09:54:12.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.567" level="INFO">VALUE: [6.0041999999999734e-05, 5.961100000000108e-05, 6.00689999999994e-05, 5.9541999999999234e-05, 6.0098000000001484e-05, 5.9527999999999665e-05, 5.9362000000000303e-05, 5.95689999999989e-05, 5.936100000000083e-05, 5.954099999999976e-05, 5.955499999999933e-05, 5.954099999999976e-05, 5.9165999999999386e-05, 5.936100000000083e-05, 5.9514000000000095e-05, 5.930499999999908e-05, 5.913899999999972e-05, 6.005499999999983e-05, 5.9278000000002884e-05, 5.9319999999998124e-05, 5.9527999999999665e-05, 5.9472000000001385e-05, 6.0014000000000595e-05, 5.9250000000000275e-05, 5.9472000000001385e-05, 5.940300000000301e-05, 5.93750000000004e-05, 5.938899999999997e-05, 5.9541999999999234e-05, 5.920900000000104e-05, 5.956900000000237e-05, 5.9250000000000275e-05, 5.923700000000018e-05, 5.9443999999998776e-05, 5.9236000000000705e-05, 5.962500000000065e-05, 5.9263999999999845e-05, 5.9250000000000275e-05, 5.9500000000000525e-05, 6.0013999999997125e-05, 5.9263999999999845e-05, 5.9235999999997235e-05, 5.936100000000083e-05, 5.9500000000000525e-05, 5.9457999999998346e-05, 6.0014000000000595e-05, 6.0055999999999304e-05, 5.9041999999998734e-05, 5.945899999999782e-05, 6.0013999999997125e-05]</msg>
<status status="PASS" starttime="20201112 09:54:12.566" endtime="20201112 09:54:12.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.561" endtime="20201112 09:54:12.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.571" endtime="20201112 09:54:12.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:12.574" endtime="20201112 09:54:12.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.573" endtime="20201112 09:54:12.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.569" endtime="20201112 09:54:12.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.203" endtime="20201112 09:54:12.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.203" endtime="20201112 09:54:12.595"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.604" endtime="20201112 09:54:12.621"></status>
</kw>
<msg timestamp="20201112 09:54:12.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:12.602" endtime="20201112 09:54:12.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:12.623" endtime="20201112 09:54:12.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.625" endtime="20201112 09:54:12.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.600" endtime="20201112 09:54:12.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.598" endtime="20201112 09:54:12.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.635" endtime="20201112 09:54:12.922"></status>
</kw>
<msg timestamp="20201112 09:54:12.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022144014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022204597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:12.634" endtime="20201112 09:54:12.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022144014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022204597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:12.926" endtime="20201112 09:54:12.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.934" endtime="20201112 09:54:12.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.631" endtime="20201112 09:54:12.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.629" endtime="20201112 09:54:12.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:12.941" level="INFO">${RESULT} = [{'time': 0.022204597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.058299999999947e-05, 'source_diff': 6.058299999999947e-05}, {'time': 0.022270514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:12.938" endtime="20201112 09:54:12.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:12.955" level="INFO">${ACCURACY} = {'time': [0.022204597, 0.022270514, 0.022335514, 0.022400528, 0.022466569, 0.022531542, 0.022597542, 0.022662542, 0.022727542, 0.022793556, 0.022858556, 0.022924556, 0.022990653, 0.023055583, 0.023121...</msg>
<status status="PASS" starttime="20201112 09:54:12.942" endtime="20201112 09:54:12.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.959" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 09:54:12.958" endtime="20201112 09:54:12.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.962" level="INFO">VALUE: [6.058299999999947e-05, 6.0722000000002635e-05, 6.018099999999943e-05, 6.0291999999999984e-05, 6.102699999999822e-05, 6.016700000000333e-05, 6.1000000000002025e-05, 6.011100000000158e-05, 6.0347999999998264e-05, 6.0999999999998555e-05, 6.020899999999857e-05, 6.10560000000003e-05, 6.106999999999987e-05, 6.062500000000165e-05, 6.0944000000000276e-05, 6.0179999999999956e-05, 6.029100000000051e-05, 6.029100000000051e-05, 6.015300000000029e-05, 6.0457999999999346e-05, 6.0985999999998985e-05, 6.0221999999998665e-05, 6.10560000000003e-05, 6.1000000000002025e-05, 6.0986000000002455e-05, 6.0471999999998916e-05, 6.015300000000029e-05, 6.038900000000097e-05, 6.0555999999999804e-05, 6.108399999999944e-05, 6.020899999999857e-05, 6.0305999999999554e-05, 6.0278000000000415e-05, 6.091700000000061e-05, 6.0291999999999984e-05, 6.0291999999999984e-05, 6.0250000000001275e-05, 6.0471999999998916e-05, 6.0235999999998235e-05, 6.0207999999999096e-05, 6.013900000000072e-05, 6.0486000000001955e-05, 6.0166000000000386e-05, 6.105500000000083e-05, 6.015300000000029e-05, 6.036099999999836e-05, 6.015299999999682e-05, 6.105499999999736e-05, 6.0208000000002565e-05, 6.0500000000001525e-05]</msg>
<status status="PASS" starttime="20201112 09:54:12.960" endtime="20201112 09:54:12.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.956" endtime="20201112 09:54:12.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.965" endtime="20201112 09:54:12.966"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:12.969" endtime="20201112 09:54:12.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.967" endtime="20201112 09:54:12.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.963" endtime="20201112 09:54:12.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.596" endtime="20201112 09:54:12.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.596" endtime="20201112 09:54:12.989"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.998" endtime="20201112 09:54:13.015"></status>
</kw>
<msg timestamp="20201112 09:54:13.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:12.997" endtime="20201112 09:54:13.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:13.017" endtime="20201112 09:54:13.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.019" endtime="20201112 09:54:13.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.994" endtime="20201112 09:54:13.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.992" endtime="20201112 09:54:13.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.029" endtime="20201112 09:54:13.315"></status>
</kw>
<msg timestamp="20201112 09:54:13.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022041472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022102903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:13.028" endtime="20201112 09:54:13.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022041472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022102903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:13.319" endtime="20201112 09:54:13.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.327" endtime="20201112 09:54:13.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.025" endtime="20201112 09:54:13.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.024" endtime="20201112 09:54:13.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:13.333" level="INFO">${RESULT} = [{'time': 0.022102903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.143100000000068e-05, 'source_diff': 6.143100000000068e-05}, {'time': 0.022169833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:13.330" endtime="20201112 09:54:13.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:13.348" level="INFO">${ACCURACY} = {'time': [0.022102903, 0.022169833, 0.022235833, 0.022301833, 0.022367847, 0.022433847, 0.022499875, 0.022565861, 0.022631861, 0.022697889, 0.022763889, 0.022829875, 0.022895889, 0.022961889, 0.023027...</msg>
<status status="PASS" starttime="20201112 09:54:13.334" endtime="20201112 09:54:13.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.352" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 09:54:13.351" endtime="20201112 09:54:13.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.355" level="INFO">VALUE: [6.143100000000068e-05, 6.184700000000029e-05, 6.122199999999967e-05, 6.144400000000078e-05, 6.154099999999829e-05, 6.134699999999979e-05, 6.143100000000068e-05, 6.131900000000065e-05, 6.154200000000123e-05, 6.155599999999734e-05, 6.1195e-05, 6.145800000000035e-05, 6.129199999999752e-05, 6.123599999999924e-05, 6.1195e-05, 6.112499999999868e-05, 6.123599999999924e-05, 6.147299999999939e-05, 6.1195e-05, 6.123599999999924e-05, 6.122199999999967e-05, 6.116699999999739e-05, 6.149999999999906e-05, 6.143099999999721e-05, 6.209700000000054e-05, 6.148599999999949e-05, 6.149999999999906e-05, 6.208399999999697e-05, 6.136099999999936e-05, 6.14300000000012e-05, 6.149999999999906e-05, 6.116600000000139e-05, 6.152800000000166e-05, 6.138900000000197e-05, 6.15279999999982e-05, 6.152800000000166e-05, 6.20560000000013e-05, 6.15140000000021e-05, 6.111100000000258e-05, 6.140300000000154e-05, 6.109699999999954e-05, 6.20560000000013e-05, 6.148600000000295e-05, 6.20279999999987e-05, 6.113899999999825e-05, 6.152699999999872e-05, 6.116699999999739e-05, 6.127799999999795e-05, 6.122199999999967e-05, 6.208400000000044e-05]</msg>
<status status="PASS" starttime="20201112 09:54:13.353" endtime="20201112 09:54:13.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.349" endtime="20201112 09:54:13.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.358" endtime="20201112 09:54:13.360"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:13.362" endtime="20201112 09:54:13.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.360" endtime="20201112 09:54:13.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.357" endtime="20201112 09:54:13.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.990" endtime="20201112 09:54:13.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.990" endtime="20201112 09:54:13.383"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.391" endtime="20201112 09:54:13.408"></status>
</kw>
<msg timestamp="20201112 09:54:13.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:13.390" endtime="20201112 09:54:13.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:13.410" endtime="20201112 09:54:13.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.412" endtime="20201112 09:54:13.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.387" endtime="20201112 09:54:13.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.385" endtime="20201112 09:54:13.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.422" endtime="20201112 09:54:13.708"></status>
</kw>
<msg timestamp="20201112 09:54:13.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022063194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0221255, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:13.421" endtime="20201112 09:54:13.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022063194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0221255, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:13.712" endtime="20201112 09:54:13.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.721" endtime="20201112 09:54:13.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.418" endtime="20201112 09:54:13.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.417" endtime="20201112 09:54:13.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:13.727" level="INFO">${RESULT} = [{'time': 0.0221255, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.230599999999809e-05, 'source_diff': 6.230599999999809e-05}, {'time': 0.022193458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:13.724" endtime="20201112 09:54:13.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:13.740" level="INFO">${ACCURACY} = {'time': [0.0221255, 0.022193458, 0.022260417, 0.022327417, 0.022394431, 0.022461444, 0.022528444, 0.022595444, 0.022662444, 0.022729444, 0.022796458, 0.022863458, 0.022930458, 0.0229975, 0.023064472,...</msg>
<status status="PASS" starttime="20201112 09:54:13.728" endtime="20201112 09:54:13.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.745" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 09:54:13.744" endtime="20201112 09:54:13.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.747" level="INFO">VALUE: [6.230599999999809e-05, 6.287500000000043e-05, 6.247300000000039e-05, 6.211100000000011e-05, 6.245900000000082e-05, 6.255499999999886e-05, 6.213800000000325e-05, 6.216599999999892e-05, 6.234700000000079e-05, 6.218000000000196e-05, 6.223600000000024e-05, 6.242999999999874e-05, 6.226399999999938e-05, 6.247200000000092e-05, 6.240299999999907e-05, 6.256899999999843e-05, 6.219400000000153e-05, 6.255499999999886e-05, 6.250000000000006e-05, 6.220799999999763e-05, 6.218100000000143e-05, 6.215299999999882e-05, 6.232000000000112e-05, 6.30279999999997e-05, 6.245899999999735e-05, 6.216699999999839e-05, 6.30279999999997e-05, 6.305599999999884e-05, 6.254200000000223e-05, 6.242999999999874e-05, 6.230499999999861e-05, 6.222200000000067e-05, 6.295799999999838e-05, 6.30690000000024e-05, 6.300000000000056e-05, 6.211100000000011e-05, 6.213899999999925e-05, 6.305499999999936e-05, 6.22080000000011e-05, 6.237499999999993e-05, 6.241699999999864e-05, 6.226399999999938e-05, 6.219400000000153e-05, 6.243099999999821e-05, 6.234700000000079e-05, 6.247200000000092e-05, 6.300000000000056e-05, 6.241699999999864e-05, 6.23340000000007e-05, 6.245899999999735e-05]</msg>
<status status="PASS" starttime="20201112 09:54:13.746" endtime="20201112 09:54:13.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.741" endtime="20201112 09:54:13.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.751" endtime="20201112 09:54:13.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:13.754" endtime="20201112 09:54:13.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.753" endtime="20201112 09:54:13.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.749" endtime="20201112 09:54:13.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.383" endtime="20201112 09:54:13.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.383" endtime="20201112 09:54:13.775"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.784" endtime="20201112 09:54:13.801"></status>
</kw>
<msg timestamp="20201112 09:54:13.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:13.782" endtime="20201112 09:54:13.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:13.802" endtime="20201112 09:54:13.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.805" endtime="20201112 09:54:13.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.780" endtime="20201112 09:54:13.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.778" endtime="20201112 09:54:13.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.815" endtime="20201112 09:54:14.101"></status>
</kw>
<msg timestamp="20201112 09:54:14.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021888097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:13.813" endtime="20201112 09:54:14.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021888097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:14.105" endtime="20201112 09:54:14.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.113" endtime="20201112 09:54:14.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.811" endtime="20201112 09:54:14.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.809" endtime="20201112 09:54:14.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:14.120" level="INFO">${RESULT} = [{'time': 0.021951347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.32500000000008e-05, 'source_diff': 6.32500000000008e-05}, {'time': 0.022020264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:14.116" endtime="20201112 09:54:14.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:14.133" level="INFO">${ACCURACY} = {'time': [0.021951347, 0.022020264, 0.022089264, 0.022157264, 0.022225264, 0.022293278, 0.022361278, 0.022429278, 0.022497306, 0.022565319, 0.022633292, 0.022701306, 0.022769389, 0.022837306, 0.022905...</msg>
<status status="PASS" starttime="20201112 09:54:14.121" endtime="20201112 09:54:14.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.138" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 09:54:14.137" endtime="20201112 09:54:14.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.140" level="INFO">VALUE: [6.32500000000008e-05, 6.376400000000088e-05, 6.40699999999994e-05, 6.326400000000038e-05, 6.354200000000323e-05, 6.33890000000005e-05, 6.324999999999734e-05, 6.336100000000136e-05, 6.345900000000182e-05, 6.351300000000115e-05, 6.331999999999866e-05, 6.341699999999964e-05, 6.347200000000192e-05, 6.316700000000286e-05, 6.322200000000167e-05, 6.341600000000017e-05, 6.400000000000156e-05, 6.320799999999863e-05, 6.319399999999906e-05, 6.342999999999974e-05, 6.317999999999949e-05, 6.351400000000063e-05, 6.406899999999993e-05, 6.340300000000007e-05, 6.402799999999723e-05, 6.313900000000025e-05, 6.405599999999984e-05, 6.40280000000007e-05, 6.318100000000243e-05, 6.333299999999875e-05, 6.320900000000157e-05, 6.334700000000179e-05, 6.348599999999802e-05, 6.340300000000007e-05, 6.330599999999909e-05, 6.40699999999994e-05, 6.363800000000128e-05, 6.313900000000025e-05, 6.32500000000008e-05, 6.33890000000005e-05, 6.32080000000021e-05, 6.336100000000136e-05, 6.333300000000222e-05, 6.334700000000179e-05, 6.404100000000079e-05, 6.32219999999982e-05, 6.315299999999982e-05, 6.323599999999777e-05, 6.315299999999982e-05, 6.405599999999984e-05]</msg>
<status status="PASS" starttime="20201112 09:54:14.139" endtime="20201112 09:54:14.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.134" endtime="20201112 09:54:14.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.144" endtime="20201112 09:54:14.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:14.147" endtime="20201112 09:54:14.166"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.146" endtime="20201112 09:54:14.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.142" endtime="20201112 09:54:14.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.776" endtime="20201112 09:54:14.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.776" endtime="20201112 09:54:14.168"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.177" endtime="20201112 09:54:14.193"></status>
</kw>
<msg timestamp="20201112 09:54:14.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.175" endtime="20201112 09:54:14.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.194" endtime="20201112 09:54:14.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.197" endtime="20201112 09:54:14.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.172" endtime="20201112 09:54:14.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.170" endtime="20201112 09:54:14.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.207" endtime="20201112 09:54:14.492"></status>
</kw>
<msg timestamp="20201112 09:54:14.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021807583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:14.205" endtime="20201112 09:54:14.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021807583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:14.496" endtime="20201112 09:54:14.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.504" endtime="20201112 09:54:14.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.203" endtime="20201112 09:54:14.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.201" endtime="20201112 09:54:14.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:14.511" level="INFO">${RESULT} = [{'time': 0.021807583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.448599999999902e-05, 'source_diff': 6.448599999999902e-05}, {'time': 0.021877486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:14.508" endtime="20201112 09:54:14.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:14.524" level="INFO">${ACCURACY} = {'time': [0.021807583, 0.021877486, 0.021946514, 0.0220155, 0.0220845, 0.022153597, 0.022223514, 0.022292528, 0.022361528, 0.022430528, 0.022499542, 0.022569542, 0.022639542, 0.022708556, 0.022777556,...</msg>
<status status="PASS" starttime="20201112 09:54:14.512" endtime="20201112 09:54:14.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.529" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 09:54:14.528" endtime="20201112 09:54:14.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.531" level="INFO">VALUE: [6.448599999999902e-05, 6.455500000000086e-05, 6.45280000000012e-05, 6.409699999999907e-05, 6.455600000000034e-05, 6.445799999999988e-05, 6.498599999999952e-05, 6.42639999999979e-05, 6.45699999999999e-05, 6.409700000000254e-05, 6.42500000000018e-05, 6.500000000000256e-05, 6.505599999999737e-05, 6.415300000000082e-05, 6.440300000000107e-05, 6.504200000000127e-05, 6.452700000000172e-05, 6.411100000000211e-05, 6.50830000000005e-05, 6.443000000000074e-05, 6.412500000000168e-05, 6.419400000000006e-05, 6.454099999999782e-05, 6.409699999999907e-05, 6.501399999999866e-05, 6.413900000000125e-05, 6.433299999999975e-05, 6.429200000000052e-05, 6.500000000000256e-05, 6.441700000000064e-05, 6.440300000000107e-05, 6.436099999999889e-05, 6.415299999999735e-05, 6.501399999999866e-05, 6.454200000000077e-05, 6.413899999999778e-05, 6.44440000000003e-05, 6.434699999999932e-05, 6.426400000000138e-05, 6.504200000000127e-05, 6.501300000000265e-05, 6.438800000000203e-05, 6.445799999999988e-05, 6.45280000000012e-05, 6.420799999999963e-05, 6.418000000000049e-05, 6.443000000000074e-05, 6.434700000000279e-05, 6.430600000000009e-05, 6.44440000000003e-05]</msg>
<status status="PASS" starttime="20201112 09:54:14.530" endtime="20201112 09:54:14.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.525" endtime="20201112 09:54:14.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.535" endtime="20201112 09:54:14.536"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:14.538" endtime="20201112 09:54:14.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.537" endtime="20201112 09:54:14.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.533" endtime="20201112 09:54:14.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.169" endtime="20201112 09:54:14.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.168" endtime="20201112 09:54:14.559"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.568" endtime="20201112 09:54:14.585"></status>
</kw>
<msg timestamp="20201112 09:54:14.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.566" endtime="20201112 09:54:14.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.586" endtime="20201112 09:54:14.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.589" endtime="20201112 09:54:14.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.563" endtime="20201112 09:54:14.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.561" endtime="20201112 09:54:14.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.599" endtime="20201112 09:54:14.884"></status>
</kw>
<msg timestamp="20201112 09:54:14.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021972278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:14.597" endtime="20201112 09:54:14.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021972278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:14.888" endtime="20201112 09:54:14.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.896" endtime="20201112 09:54:14.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.595" endtime="20201112 09:54:14.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.593" endtime="20201112 09:54:14.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:14.903" level="INFO">${RESULT} = [{'time': 0.021972278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.530600000000109e-05, 'source_diff': 6.530600000000109e-05}, {'time': 0.022043139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:14.900" endtime="20201112 09:54:14.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:14.918" level="INFO">${ACCURACY} = {'time': [0.021972278, 0.022043139, 0.022113139, 0.022183139, 0.022253167, 0.022323153, 0.022394153, 0.022464181, 0.022534167, 0.022604167, 0.022674181, 0.022744181, 0.022815194, 0.022886194, 0.022957...</msg>
<status status="PASS" starttime="20201112 09:54:14.904" endtime="20201112 09:54:14.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.922" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 09:54:14.921" endtime="20201112 09:54:14.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.925" level="INFO">VALUE: [6.530600000000109e-05, 6.552799999999873e-05, 6.516700000000139e-05, 6.50700000000004e-05, 6.551399999999916e-05, 6.531999999999719e-05, 6.60419999999988e-05, 6.530600000000109e-05, 6.529200000000152e-05, 6.544500000000078e-05, 6.543100000000121e-05, 6.54029999999986e-05, 6.605499999999889e-05, 6.602699999999975e-05, 6.602799999999923e-05, 6.540199999999913e-05, 6.536099999999989e-05, 6.597199999999748e-05, 6.606900000000193e-05, 6.551400000000263e-05, 6.515300000000182e-05, 6.601399999999966e-05, 6.530599999999762e-05, 6.543100000000121e-05, 6.549999999999959e-05, 6.523599999999977e-05, 6.547200000000045e-05, 6.52639999999989e-05, 6.602799999999923e-05, 6.551399999999916e-05, 6.595899999999738e-05, 6.547299999999992e-05, 6.608400000000098e-05, 6.523699999999924e-05, 6.536200000000283e-05, 6.52639999999989e-05, 6.604099999999932e-05, 6.534700000000032e-05, 6.520800000000063e-05, 6.537499999999946e-05, 6.52639999999989e-05, 6.60830000000015e-05, 6.605500000000236e-05, 6.530499999999814e-05, 6.554200000000177e-05, 6.606900000000193e-05, 6.529200000000152e-05, 6.52500000000028e-05, 6.547299999999992e-05, 6.518099999999749e-05]</msg>
<status status="PASS" starttime="20201112 09:54:14.923" endtime="20201112 09:54:14.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.919" endtime="20201112 09:54:14.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.929" endtime="20201112 09:54:14.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:14.932" endtime="20201112 09:54:14.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.931" endtime="20201112 09:54:14.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.927" endtime="20201112 09:54:14.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.560" endtime="20201112 09:54:14.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.559" endtime="20201112 09:54:14.953"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.962" endtime="20201112 09:54:14.979"></status>
</kw>
<msg timestamp="20201112 09:54:14.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.960" endtime="20201112 09:54:14.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.980" endtime="20201112 09:54:14.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.983" endtime="20201112 09:54:14.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.957" endtime="20201112 09:54:14.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.955" endtime="20201112 09:54:14.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.993" endtime="20201112 09:54:15.279"></status>
</kw>
<msg timestamp="20201112 09:54:15.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021919528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021985875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:14.991" endtime="20201112 09:54:15.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021919528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021985875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:15.283" endtime="20201112 09:54:15.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.292" endtime="20201112 09:54:15.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.989" endtime="20201112 09:54:15.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.987" endtime="20201112 09:54:15.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:15.298" level="INFO">${RESULT} = [{'time': 0.021985875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.634699999999785e-05, 'source_diff': 6.634699999999785e-05}, {'time': 0.022057806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:15.295" endtime="20201112 09:54:15.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:15.312" level="INFO">${ACCURACY} = {'time': [0.021985875, 0.022057806, 0.022128861, 0.022199806, 0.022270806, 0.022341819, 0.022412833, 0.022483833, 0.022554833, 0.022625847, 0.022696847, 0.022767847, 0.022838847, 0.022909861, 0.022981...</msg>
<status status="PASS" starttime="20201112 09:54:15.299" endtime="20201112 09:54:15.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.316" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 09:54:15.315" endtime="20201112 09:54:15.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.319" level="INFO">VALUE: [6.634699999999785e-05, 6.687500000000096e-05, 6.627799999999948e-05, 6.633399999999776e-05, 6.637500000000046e-05, 6.611099999999717e-05, 6.629099999999957e-05, 6.613900000000325e-05, 6.617999999999902e-05, 6.64440000000023e-05, 6.652799999999973e-05, 6.620800000000163e-05, 6.642999999999927e-05, 6.636100000000089e-05, 6.701400000000066e-05, 6.655499999999939e-05, 6.651400000000016e-05, 6.637500000000046e-05, 6.630600000000209e-05, 6.702800000000023e-05, 6.645799999999841e-05, 6.616699999999892e-05, 6.70830000000025e-05, 6.615299999999935e-05, 6.638900000000003e-05, 6.648700000000049e-05, 6.652799999999973e-05, 6.64029999999996e-05, 6.644399999999884e-05, 6.633299999999828e-05, 6.708299999999903e-05, 6.622199999999773e-05, 6.64440000000023e-05, 6.697199999999848e-05, 6.650000000000059e-05, 6.622199999999773e-05, 6.699999999999762e-05, 6.64029999999996e-05, 6.64029999999996e-05, 6.623600000000077e-05, 6.698599999999805e-05, 6.647200000000145e-05, 6.62639999999999e-05, 6.641699999999917e-05, 6.652799999999973e-05, 6.655599999999887e-05, 6.634700000000132e-05, 6.65700000000019e-05, 6.625000000000034e-05, 6.650000000000059e-05]</msg>
<status status="PASS" starttime="20201112 09:54:15.317" endtime="20201112 09:54:15.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.313" endtime="20201112 09:54:15.320"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.322" endtime="20201112 09:54:15.323"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:15.326" endtime="20201112 09:54:15.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.324" endtime="20201112 09:54:15.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.321" endtime="20201112 09:54:15.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.954" endtime="20201112 09:54:15.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.953" endtime="20201112 09:54:15.347"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.355" endtime="20201112 09:54:15.372"></status>
</kw>
<msg timestamp="20201112 09:54:15.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.353" endtime="20201112 09:54:15.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.374" endtime="20201112 09:54:15.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.376" endtime="20201112 09:54:15.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.351" endtime="20201112 09:54:15.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.349" endtime="20201112 09:54:15.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.386" endtime="20201112 09:54:15.672"></status>
</kw>
<msg timestamp="20201112 09:54:15.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021643125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021711069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:15.385" endtime="20201112 09:54:15.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021643125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021711069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:15.677" endtime="20201112 09:54:15.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.685" endtime="20201112 09:54:15.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.382" endtime="20201112 09:54:15.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.380" endtime="20201112 09:54:15.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:15.691" level="INFO">${RESULT} = [{'time': 0.021711069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.794400000000034e-05, 'source_diff': 6.794400000000034e-05}, {'time': 0.021784056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:15.688" endtime="20201112 09:54:15.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:15.705" level="INFO">${ACCURACY} = {'time': [0.021711069, 0.021784056, 0.021857, 0.021929014, 0.022001028, 0.022073028, 0.022146028, 0.022218028, 0.022290056, 0.022362028, 0.022435056, 0.022508056, 0.022580069, 0.022652056, 0.022724056...</msg>
<status status="PASS" starttime="20201112 09:54:15.692" endtime="20201112 09:54:15.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.709" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 09:54:15.708" endtime="20201112 09:54:15.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.712" level="INFO">VALUE: [6.794400000000034e-05, 6.766700000000042e-05, 6.802800000000123e-05, 6.744499999999931e-05, 6.722199999999873e-05, 6.708400000000198e-05, 6.805600000000037e-05, 6.752800000000073e-05, 6.75420000000003e-05, 6.733399999999876e-05, 6.80559999999969e-05, 6.806999999999994e-05, 6.743000000000027e-05, 6.737500000000146e-05, 6.741700000000017e-05, 6.763900000000128e-05, 6.805500000000089e-05, 6.713900000000078e-05, 6.805500000000089e-05, 6.748599999999855e-05, 6.740299999999713e-05, 6.70830000000025e-05, 6.751400000000116e-05, 6.808300000000003e-05, 6.733299999999928e-05, 6.72640000000009e-05, 6.730599999999962e-05, 6.72229999999982e-05, 6.738899999999756e-05, 6.719399999999959e-05, 6.762500000000171e-05, 6.72359999999983e-05, 6.755599999999987e-05, 6.805600000000037e-05, 6.808400000000298e-05, 6.719399999999959e-05, 6.75420000000003e-05, 6.740299999999713e-05, 6.74030000000006e-05, 6.729100000000057e-05, 6.722199999999873e-05, 6.804099999999785e-05, 6.724999999999787e-05, 6.731999999999919e-05, 6.737499999999799e-05, 6.712499999999774e-05, 6.750000000000159e-05, 6.758299999999953e-05, 6.802800000000123e-05, 6.744399999999984e-05]</msg>
<status status="PASS" starttime="20201112 09:54:15.710" endtime="20201112 09:54:15.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.706" endtime="20201112 09:54:15.713"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.715" endtime="20201112 09:54:15.717"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:15.719" endtime="20201112 09:54:15.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.717" endtime="20201112 09:54:15.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.714" endtime="20201112 09:54:15.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.347" endtime="20201112 09:54:15.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.347" endtime="20201112 09:54:15.740"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.748" endtime="20201112 09:54:15.766"></status>
</kw>
<msg timestamp="20201112 09:54:15.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.747" endtime="20201112 09:54:15.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.767" endtime="20201112 09:54:15.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.770" endtime="20201112 09:54:15.772"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.744" endtime="20201112 09:54:15.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.742" endtime="20201112 09:54:15.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.780" endtime="20201112 09:54:16.065"></status>
</kw>
<msg timestamp="20201112 09:54:16.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021695111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021764222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:15.778" endtime="20201112 09:54:16.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021695111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021764222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:16.069" endtime="20201112 09:54:16.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.077" endtime="20201112 09:54:16.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.776" endtime="20201112 09:54:16.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.774" endtime="20201112 09:54:16.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:16.084" level="INFO">${RESULT} = [{'time': 0.021764222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.911100000000017e-05, 'source_diff': 6.911100000000017e-05}, {'time': 0.021838153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:16.081" endtime="20201112 09:54:16.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:16.097" level="INFO">${ACCURACY} = {'time': [0.021764222, 0.021838153, 0.021911167, 0.021985181, 0.022058167, 0.022131222, 0.022204181, 0.022278208, 0.022351208, 0.022424194, 0.022498222, 0.022571222, 0.022644208, 0.022717222, 0.022790...</msg>
<status status="PASS" starttime="20201112 09:54:16.085" endtime="20201112 09:54:16.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.102" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 09:54:16.101" endtime="20201112 09:54:16.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.104" level="INFO">VALUE: [6.911100000000017e-05, 6.887499999999949e-05, 6.830599999999715e-05, 6.907000000000094e-05, 6.848599999999955e-05, 6.837499999999899e-05, 6.843100000000074e-05, 6.908300000000103e-05, 6.847199999999998e-05, 6.840200000000213e-05, 6.905499999999842e-05, 6.848599999999955e-05, 6.837499999999899e-05, 6.82909999999981e-05, 6.837499999999899e-05, 6.854199999999783e-05, 6.816699999999745e-05, 6.854199999999783e-05, 6.843100000000074e-05, 6.852799999999826e-05, 6.832000000000019e-05, 6.82220000000032e-05, 6.904199999999833e-05, 6.812499999999874e-05, 6.834699999999985e-05, 6.836099999999942e-05, 6.852799999999826e-05, 6.820899999999963e-05, 6.899999999999962e-05, 6.809799999999908e-05, 6.895900000000038e-05, 6.82220000000032e-05, 6.908300000000103e-05, 6.848599999999955e-05, 6.812499999999874e-05, 6.830500000000114e-05, 6.819500000000006e-05, 6.813899999999831e-05, 6.811099999999917e-05, 6.908300000000103e-05, 6.816700000000092e-05, 6.862499999999924e-05, 6.820800000000016e-05, 6.826399999999844e-05, 6.824999999999887e-05, 6.85420000000013e-05, 6.857000000000044e-05, 6.902800000000223e-05, 6.819500000000006e-05, 6.850000000000259e-05]</msg>
<status status="PASS" starttime="20201112 09:54:16.103" endtime="20201112 09:54:16.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.098" endtime="20201112 09:54:16.106"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.108" endtime="20201112 09:54:16.109"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:16.111" endtime="20201112 09:54:16.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.110" endtime="20201112 09:54:16.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.106" endtime="20201112 09:54:16.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.740" endtime="20201112 09:54:16.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.740" endtime="20201112 09:54:16.132"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.141" endtime="20201112 09:54:16.158"></status>
</kw>
<msg timestamp="20201112 09:54:16.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:16.139" endtime="20201112 09:54:16.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:16.160" endtime="20201112 09:54:16.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.162" endtime="20201112 09:54:16.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.137" endtime="20201112 09:54:16.166"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.135" endtime="20201112 09:54:16.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.172" endtime="20201112 09:54:16.459"></status>
</kw>
<msg timestamp="20201112 09:54:16.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021680403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021750528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:16.171" endtime="20201112 09:54:16.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021680403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021750528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:16.463" endtime="20201112 09:54:16.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.471" endtime="20201112 09:54:16.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.168" endtime="20201112 09:54:16.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.167" endtime="20201112 09:54:16.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:16.478" level="INFO">${RESULT} = [{'time': 0.021750528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.012500000000074e-05, 'source_diff': 7.012500000000074e-05}, {'time': 0.021825458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:16.474" endtime="20201112 09:54:16.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:16.492" level="INFO">${ACCURACY} = {'time': [0.021750528, 0.021825458, 0.021900486, 0.021974472, 0.022048514, 0.022122486, 0.022196486, 0.0222705, 0.0223445, 0.022418514, 0.022492514, 0.022566514, 0.022640542, 0.022714528, 0.022788528,...</msg>
<status status="PASS" starttime="20201112 09:54:16.479" endtime="20201112 09:54:16.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.496" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 09:54:16.495" endtime="20201112 09:54:16.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.499" level="INFO">VALUE: [7.012500000000074e-05, 6.959699999999763e-05, 7.00970000000016e-05, 6.948599999999708e-05, 6.92640000000029e-05, 6.92360000000003e-05, 6.948600000000055e-05, 6.937499999999999e-05, 6.95559999999984e-05, 6.936100000000042e-05, 6.922200000000073e-05, 6.951399999999969e-05, 6.92230000000002e-05, 6.930600000000162e-05, 6.927799999999901e-05, 6.932000000000119e-05, 6.998599999999758e-05, 7.002799999999976e-05, 7.00979999999976e-05, 6.952699999999978e-05, 6.930500000000214e-05, 6.938800000000009e-05, 6.926399999999944e-05, 6.919400000000159e-05, 7.000000000000062e-05, 6.924999999999987e-05, 6.929200000000205e-05, 6.934700000000085e-05, 6.955499999999892e-05, 7.005600000000237e-05, 6.948600000000055e-05, 6.944399999999837e-05, 6.944500000000131e-05, 6.933299999999781e-05, 6.934700000000085e-05, 6.950000000000012e-05, 6.936100000000042e-05, 7.004199999999933e-05, 6.950000000000012e-05, 6.933400000000076e-05, 7.013900000000031e-05, 6.938900000000303e-05, 6.927699999999953e-05, 6.994400000000234e-05, 6.92909999999991e-05, 7.005499999999942e-05, 6.916700000000192e-05, 6.915299999999888e-05, 7.005499999999942e-05, 6.948600000000055e-05]</msg>
<status status="PASS" starttime="20201112 09:54:16.498" endtime="20201112 09:54:16.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.493" endtime="20201112 09:54:16.500"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.503" endtime="20201112 09:54:16.504"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:16.507" endtime="20201112 09:54:16.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.505" endtime="20201112 09:54:16.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.501" endtime="20201112 09:54:16.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.133" endtime="20201112 09:54:16.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.132" endtime="20201112 09:54:16.528"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.536" endtime="20201112 09:54:16.553"></status>
</kw>
<msg timestamp="20201112 09:54:16.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:16.535" endtime="20201112 09:54:16.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:16.554" endtime="20201112 09:54:16.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.557" endtime="20201112 09:54:16.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.532" endtime="20201112 09:54:16.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.530" endtime="20201112 09:54:16.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.567" endtime="20201112 09:54:16.853"></status>
</kw>
<msg timestamp="20201112 09:54:16.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021848736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021919236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:16.566" endtime="20201112 09:54:16.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021848736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021919236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:16.857" endtime="20201112 09:54:16.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.866" endtime="20201112 09:54:16.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.563" endtime="20201112 09:54:16.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.561" endtime="20201112 09:54:16.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:16.872" level="INFO">${RESULT} = [{'time': 0.021919236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.050000000000112e-05, 'source_diff': 7.050000000000112e-05}, {'time': 0.021995167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:16.869" endtime="20201112 09:54:16.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:16.886" level="INFO">${ACCURACY} = {'time': [0.021919236, 0.021995167, 0.022071167, 0.022147167, 0.022222181, 0.022297181, 0.022372236, 0.022448236, 0.022523194, 0.02259925, 0.022674236, 0.022749208, 0.022825222, 0.022900222, 0.0229752...</msg>
<status status="PASS" starttime="20201112 09:54:16.873" endtime="20201112 09:54:16.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.890" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 09:54:16.889" endtime="20201112 09:54:16.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.893" level="INFO">VALUE: [7.050000000000112e-05, 7.037500000000099e-05, 7.099999999999815e-05, 7.097299999999848e-05, 7.045900000000188e-05, 7.04169999999997e-05, 7.029199999999958e-05, 7.109699999999913e-05, 7.019399999999912e-05, 7.112500000000174e-05, 7.047200000000198e-05, 7.038900000000056e-05, 7.104100000000085e-05, 7.027800000000001e-05, 7.045799999999894e-05, 7.018000000000302e-05, 7.10970000000026e-05, 7.100000000000162e-05, 7.036099999999795e-05, 7.019499999999859e-05, 7.030599999999915e-05, 7.102800000000076e-05, 7.052800000000026e-05, 7.017999999999955e-05, 7.111199999999818e-05, 7.045900000000188e-05, 7.036100000000142e-05, 7.02910000000001e-05, 7.048700000000102e-05, 7.104100000000085e-05, 7.040199999999719e-05, 7.031899999999924e-05, 7.101400000000119e-05, 7.102700000000128e-05, 7.016699999999945e-05, 7.040300000000013e-05, 7.104100000000085e-05, 7.055600000000287e-05, 7.027800000000001e-05, 7.034699999999838e-05, 7.020800000000216e-05, 7.098600000000205e-05, 7.022200000000173e-05, 7.016699999999945e-05, 7.027700000000053e-05, 7.032000000000219e-05, 7.043099999999927e-05, 7.037500000000099e-05, 7.04169999999997e-05, 7.017999999999955e-05]</msg>
<status status="PASS" starttime="20201112 09:54:16.891" endtime="20201112 09:54:16.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.887" endtime="20201112 09:54:16.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.896" endtime="20201112 09:54:16.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:16.900" endtime="20201112 09:54:16.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.898" endtime="20201112 09:54:16.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.895" endtime="20201112 09:54:16.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.529" endtime="20201112 09:54:16.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.528" endtime="20201112 09:54:16.920"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.929" endtime="20201112 09:54:16.947"></status>
</kw>
<msg timestamp="20201112 09:54:16.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:16.927" endtime="20201112 09:54:16.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:16.949" endtime="20201112 09:54:16.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.951" endtime="20201112 09:54:16.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.925" endtime="20201112 09:54:16.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.923" endtime="20201112 09:54:16.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.961" endtime="20201112 09:54:17.247"></status>
</kw>
<msg timestamp="20201112 09:54:17.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021822056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:16.960" endtime="20201112 09:54:17.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021822056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:17.252" endtime="20201112 09:54:17.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.260" endtime="20201112 09:54:17.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.957" endtime="20201112 09:54:17.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.955" endtime="20201112 09:54:17.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:17.267" level="INFO">${RESULT} = [{'time': 0.021822056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.144499999999984e-05, 'source_diff': 7.144499999999984e-05}, {'time': 0.021898958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:17.263" endtime="20201112 09:54:17.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:17.280" level="INFO">${ACCURACY} = {'time': [0.021822056, 0.021898958, 0.021974958, 0.022050972, 0.022127014, 0.022202986, 0.022278986, 0.022354986, 0.022431, 0.022507014, 0.022584028, 0.022660014, 0.022736056, 0.022812028, 0.022888042...</msg>
<status status="PASS" starttime="20201112 09:54:17.268" endtime="20201112 09:54:17.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.284" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 09:54:17.283" endtime="20201112 09:54:17.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.287" level="INFO">VALUE: [7.144499999999984e-05, 7.162499999999877e-05, 7.133299999999981e-05, 7.119400000000012e-05, 7.122199999999926e-05, 7.148600000000255e-05, 7.109699999999913e-05, 7.140300000000113e-05, 7.116700000000045e-05, 7.123599999999883e-05, 7.207000000000047e-05, 7.120799999999969e-05, 7.165300000000138e-05, 7.145900000000288e-05, 7.12230000000022e-05, 7.120899999999916e-05, 7.151400000000169e-05, 7.207000000000047e-05, 7.145899999999941e-05, 7.133300000000328e-05, 7.137499999999852e-05, 7.147199999999951e-05, 7.118000000000055e-05, 7.150000000000212e-05, 7.198599999999958e-05, 7.134700000000285e-05, 7.205499999999795e-05, 7.12499999999984e-05, 7.113900000000131e-05, 7.202799999999829e-05, 7.115300000000088e-05, 7.122199999999926e-05, 7.15560000000004e-05, 7.122199999999926e-05, 7.106999999999947e-05, 7.136099999999895e-05, 7.202799999999829e-05, 7.152799999999779e-05, 7.129200000000058e-05, 7.112500000000174e-05, 7.148700000000202e-05, 7.198600000000305e-05, 7.133399999999929e-05, 7.150000000000212e-05, 7.126300000000196e-05, 7.152799999999779e-05, 7.205500000000142e-05, 7.12910000000011e-05, 7.112499999999827e-05, 7.131900000000024e-05]</msg>
<status status="PASS" starttime="20201112 09:54:17.285" endtime="20201112 09:54:17.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.281" endtime="20201112 09:54:17.288"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.290" endtime="20201112 09:54:17.292"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:17.294" endtime="20201112 09:54:17.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.292" endtime="20201112 09:54:17.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.289" endtime="20201112 09:54:17.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.921" endtime="20201112 09:54:17.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.921" endtime="20201112 09:54:17.315"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.323" endtime="20201112 09:54:17.341"></status>
</kw>
<msg timestamp="20201112 09:54:17.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.322" endtime="20201112 09:54:17.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.342" endtime="20201112 09:54:17.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.345" endtime="20201112 09:54:17.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.319" endtime="20201112 09:54:17.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.317" endtime="20201112 09:54:17.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.355" endtime="20201112 09:54:17.641"></status>
</kw>
<msg timestamp="20201112 09:54:17.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021924722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:17.353" endtime="20201112 09:54:17.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021924722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:17.645" endtime="20201112 09:54:17.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.654" endtime="20201112 09:54:17.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.351" endtime="20201112 09:54:17.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.349" endtime="20201112 09:54:17.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:17.660" level="INFO">${RESULT} = [{'time': 0.021924722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.316599999999951e-05, 'source_diff': 7.316599999999951e-05}, {'time': 0.022002653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:17.657" endtime="20201112 09:54:17.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:17.674" level="INFO">${ACCURACY} = {'time': [0.021924722, 0.022002653, 0.022079667, 0.022156681, 0.022233667, 0.022310681, 0.022387681, 0.022464694, 0.022541708, 0.022619694, 0.022696708, 0.022773708, 0.022851722, 0.022928778, 0.023005...</msg>
<status status="PASS" starttime="20201112 09:54:17.661" endtime="20201112 09:54:17.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.678" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 09:54:17.677" endtime="20201112 09:54:17.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.681" level="INFO">VALUE: [7.316599999999951e-05, 7.287500000000002e-05, 7.22499999999994e-05, 7.248699999999955e-05, 7.215299999999841e-05, 7.241699999999823e-05, 7.237499999999952e-05, 7.26110000000002e-05, 7.218000000000155e-05, 7.300000000000015e-05, 7.217999999999808e-05, 7.226399999999897e-05, 7.302800000000276e-05, 7.24170000000017e-05, 7.22499999999994e-05, 7.23049999999982e-05, 7.24170000000017e-05, 7.237499999999952e-05, 7.212500000000274e-05, 7.213899999999884e-05, 7.213899999999884e-05, 7.300000000000015e-05, 7.220900000000016e-05, 7.226400000000244e-05, 7.259700000000063e-05, 7.219499999999712e-05, 7.24309999999978e-05, 7.308300000000156e-05, 7.237500000000299e-05, 7.222200000000026e-05, 7.219399999999765e-05, 7.227699999999906e-05, 7.231900000000124e-05, 7.227700000000253e-05, 7.22499999999994e-05, 7.254200000000183e-05, 7.226399999999897e-05, 7.219399999999765e-05, 7.219400000000112e-05, 7.212499999999927e-05, 7.301399999999972e-05, 7.213899999999884e-05, 7.213899999999884e-05, 7.223599999999983e-05, 7.257000000000097e-05, 7.245900000000041e-05, 7.215300000000188e-05, 7.234700000000038e-05, 7.227799999999854e-05, 7.31110000000007e-05]</msg>
<status status="PASS" starttime="20201112 09:54:17.679" endtime="20201112 09:54:17.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.675" endtime="20201112 09:54:17.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.684" endtime="20201112 09:54:17.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:17.688" endtime="20201112 09:54:17.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.686" endtime="20201112 09:54:17.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.683" endtime="20201112 09:54:17.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.316" endtime="20201112 09:54:17.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.315" endtime="20201112 09:54:17.709"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.718" endtime="20201112 09:54:17.735"></status>
</kw>
<msg timestamp="20201112 09:54:17.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.716" endtime="20201112 09:54:17.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.737" endtime="20201112 09:54:17.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.739" endtime="20201112 09:54:17.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.714" endtime="20201112 09:54:17.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.712" endtime="20201112 09:54:17.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.749" endtime="20201112 09:54:18.036"></status>
</kw>
<msg timestamp="20201112 09:54:18.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022427306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022501361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:17.748" endtime="20201112 09:54:18.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022427306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022501361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:18.040" endtime="20201112 09:54:18.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.049" endtime="20201112 09:54:18.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.745" endtime="20201112 09:54:18.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.743" endtime="20201112 09:54:18.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:18.056" level="INFO">${RESULT} = [{'time': 0.022501361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.405499999999995e-05, 'source_diff': 7.405499999999995e-05}, {'time': 0.022580333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:18.052" endtime="20201112 09:54:18.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:18.070" level="INFO">${ACCURACY} = {'time': [0.022501361, 0.022580333, 0.022658292, 0.022736306, 0.022814306, 0.022892319, 0.022970319, 0.023048319, 0.023127333, 0.023205333, 0.023283361, 0.023361361, 0.023439361, 0.023517403, 0.023595...</msg>
<status status="PASS" starttime="20201112 09:54:18.057" endtime="20201112 09:54:18.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.075" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 09:54:18.074" endtime="20201112 09:54:18.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.077" level="INFO">VALUE: [7.405499999999995e-05, 7.350000000000065e-05, 7.341699999999923e-05, 7.344500000000184e-05, 7.361200000000068e-05, 7.348600000000108e-05, 7.336100000000095e-05, 7.333300000000181e-05, 7.404100000000038e-05, 7.32910000000031e-05, 7.32500000000004e-05, 7.341699999999923e-05, 7.336099999999748e-05, 7.337500000000052e-05, 7.309699999999766e-05, 7.352799999999979e-05, 7.404199999999986e-05, 7.327799999999954e-05, 7.313899999999984e-05, 7.337500000000052e-05, 7.405599999999943e-05, 7.348600000000108e-05, 7.327799999999954e-05, 7.340299999999966e-05, 7.404199999999986e-05, 7.413900000000084e-05, 7.352700000000031e-05, 7.40829999999991e-05, 7.405499999999995e-05, 7.323600000000083e-05, 7.347200000000151e-05, 7.316599999999951e-05, 7.352799999999979e-05, 7.320799999999822e-05, 7.337500000000052e-05, 7.334700000000138e-05, 7.345799999999847e-05, 7.331900000000224e-05, 7.397200000000201e-05, 7.318099999999855e-05, 7.326399999999997e-05, 7.315299999999941e-05, 7.347199999999804e-05, 7.350000000000065e-05, 7.316699999999898e-05, 7.351400000000022e-05, 7.323599999999736e-05, 7.32370000000003e-05, 7.318099999999855e-05, 7.400000000000115e-05]</msg>
<status status="PASS" starttime="20201112 09:54:18.076" endtime="20201112 09:54:18.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.071" endtime="20201112 09:54:18.082"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.085" endtime="20201112 09:54:18.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:18.088" endtime="20201112 09:54:18.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.087" endtime="20201112 09:54:18.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.083" endtime="20201112 09:54:18.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.710" endtime="20201112 09:54:18.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.709" endtime="20201112 09:54:18.109"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.118" endtime="20201112 09:54:18.135"></status>
</kw>
<msg timestamp="20201112 09:54:18.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.116" endtime="20201112 09:54:18.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.137" endtime="20201112 09:54:18.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.139" endtime="20201112 09:54:18.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.114" endtime="20201112 09:54:18.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.112" endtime="20201112 09:54:18.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.149" endtime="20201112 09:54:18.436"></status>
</kw>
<msg timestamp="20201112 09:54:18.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021883875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021958667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:18.148" endtime="20201112 09:54:18.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021883875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021958667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:18.440" endtime="20201112 09:54:18.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.448" endtime="20201112 09:54:18.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.145" endtime="20201112 09:54:18.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.144" endtime="20201112 09:54:18.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:18.455" level="INFO">${RESULT} = [{'time': 0.021958667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.479200000000061e-05, 'source_diff': 7.479200000000061e-05}, {'time': 0.022038542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:18.451" endtime="20201112 09:54:18.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:18.468" level="INFO">${ACCURACY} = {'time': [0.021958667, 0.022038542, 0.022117556, 0.022196569, 0.022276583, 0.022355597, 0.022434583, 0.022513597, 0.022592583, 0.022671625, 0.022750597, 0.022829625, 0.022909625, 0.022988611, 0.023067...</msg>
<status status="PASS" starttime="20201112 09:54:18.456" endtime="20201112 09:54:18.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.473" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 09:54:18.471" endtime="20201112 09:54:18.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.475" level="INFO">VALUE: [7.479200000000061e-05, 7.466700000000048e-05, 7.431999999999925e-05, 7.454100000000088e-05, 7.511099999999923e-05, 7.436100000000195e-05, 7.419399999999965e-05, 7.433299999999934e-05, 7.441600000000076e-05, 7.430599999999968e-05, 7.43050000000002e-05, 7.455599999999993e-05, 7.50830000000001e-05, 7.429200000000011e-05, 7.42500000000014e-05, 7.451400000000122e-05, 7.436099999999848e-05, 7.418099999999955e-05, 7.441700000000023e-05, 7.440300000000066e-05, 7.505600000000043e-05, 7.511199999999871e-05, 7.447299999999851e-05, 7.422300000000173e-05, 7.452800000000079e-05, 7.455500000000045e-05, 7.426299999999803e-05, 7.442999999999686e-05, 7.44439999999999e-05, 7.456900000000002e-05, 7.436100000000195e-05, 7.433300000000281e-05, 7.426400000000097e-05, 7.415300000000041e-05, 7.433300000000281e-05, 7.447199999999904e-05, 7.427800000000054e-05, 7.427700000000106e-05, 7.434799999999839e-05, 7.501400000000172e-05, 7.426400000000097e-05, 7.50830000000001e-05, 7.440199999999772e-05, 7.507e-05, 7.423599999999836e-05, 7.454200000000036e-05, 7.419499999999912e-05, 7.419399999999965e-05, 7.436099999999848e-05, 7.43050000000002e-05]</msg>
<status status="PASS" starttime="20201112 09:54:18.474" endtime="20201112 09:54:18.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.469" endtime="20201112 09:54:18.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.479" endtime="20201112 09:54:18.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:18.482" endtime="20201112 09:54:18.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.480" endtime="20201112 09:54:18.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.477" endtime="20201112 09:54:18.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.110" endtime="20201112 09:54:18.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.109" endtime="20201112 09:54:18.503"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.511" endtime="20201112 09:54:18.529"></status>
</kw>
<msg timestamp="20201112 09:54:18.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.510" endtime="20201112 09:54:18.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.530" endtime="20201112 09:54:18.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.533" endtime="20201112 09:54:18.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.507" endtime="20201112 09:54:18.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.505" endtime="20201112 09:54:18.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.544" endtime="20201112 09:54:18.830"></status>
</kw>
<msg timestamp="20201112 09:54:18.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021728736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021804792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:18.542" endtime="20201112 09:54:18.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021728736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021804792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:18.834" endtime="20201112 09:54:18.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.842" endtime="20201112 09:54:18.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.540" endtime="20201112 09:54:18.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.538" endtime="20201112 09:54:18.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:18.849" level="INFO">${RESULT} = [{'time': 0.021804792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.605600000000143e-05, 'source_diff': 7.605600000000143e-05}, {'time': 0.02188575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:18.845" endtime="20201112 09:54:18.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:18.862" level="INFO">${ACCURACY} = {'time': [0.021804792, 0.02188575, 0.021966736, 0.022046736, 0.022127764, 0.02220775, 0.022288778, 0.022368764, 0.022449778, 0.022529778, 0.022610792, 0.022690806, 0.022770806, 0.022850875, 0.02293181...</msg>
<status status="PASS" starttime="20201112 09:54:18.850" endtime="20201112 09:54:18.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.867" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 09:54:18.866" endtime="20201112 09:54:18.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.869" level="INFO">VALUE: [7.605600000000143e-05, 7.569399999999768e-05, 7.598600000000011e-05, 7.549999999999918e-05, 7.611100000000023e-05, 7.534699999999991e-05, 7.60839999999971e-05, 7.522199999999979e-05, 7.598600000000011e-05, 7.527800000000154e-05, 7.597300000000001e-05, 7.536200000000243e-05, 7.561200000000268e-05, 7.556900000000102e-05, 7.602699999999935e-05, 7.551399999999875e-05, 7.555499999999798e-05, 7.547200000000004e-05, 7.520800000000022e-05, 7.554099999999841e-05, 7.533300000000034e-05, 7.549999999999918e-05, 7.598600000000011e-05, 7.60830000000011e-05, 7.598600000000011e-05, 7.534699999999991e-05, 7.533300000000034e-05, 7.54310000000008e-05, 7.536099999999948e-05, 7.541700000000123e-05, 7.544500000000037e-05, 7.533300000000034e-05, 7.533399999999982e-05, 7.54029999999982e-05, 7.54029999999982e-05, 7.602699999999935e-05, 7.522299999999926e-05, 7.51110000000027e-05, 7.605499999999848e-05, 7.547200000000004e-05, 7.516599999999804e-05, 7.60830000000011e-05, 7.597200000000054e-05, 7.531900000000077e-05, 7.604200000000186e-05, 7.537499999999905e-05, 7.599999999999968e-05, 7.511099999999923e-05, 7.513899999999837e-05, 7.523599999999936e-05]</msg>
<status status="PASS" starttime="20201112 09:54:18.868" endtime="20201112 09:54:18.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.863" endtime="20201112 09:54:18.870"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.873" endtime="20201112 09:54:18.874"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:18.876" endtime="20201112 09:54:18.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.875" endtime="20201112 09:54:18.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.871" endtime="20201112 09:54:18.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.504" endtime="20201112 09:54:18.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.503" endtime="20201112 09:54:18.897"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.906" endtime="20201112 09:54:18.923"></status>
</kw>
<msg timestamp="20201112 09:54:18.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.904" endtime="20201112 09:54:18.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.925" endtime="20201112 09:54:18.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.928" endtime="20201112 09:54:18.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.901" endtime="20201112 09:54:18.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.899" endtime="20201112 09:54:18.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.937" endtime="20201112 09:54:19.223"></status>
</kw>
<msg timestamp="20201112 09:54:19.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021656417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021733444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:18.936" endtime="20201112 09:54:19.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021656417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021733444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:19.228" endtime="20201112 09:54:19.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.236" endtime="20201112 09:54:19.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.933" endtime="20201112 09:54:19.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.932" endtime="20201112 09:54:19.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:19.242" level="INFO">${RESULT} = [{'time': 0.021733444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.702700000000035e-05, 'source_diff': 7.702700000000035e-05}, {'time': 0.021815417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:19.239" endtime="20201112 09:54:19.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:19.256" level="INFO">${ACCURACY} = {'time': [0.021733444, 0.021815417, 0.021896444, 0.021977403, 0.022058389, 0.022139444, 0.022220403, 0.022302431, 0.022383431, 0.022465417, 0.022546431, 0.022627431, 0.0227085, 0.022790444, 0.02287147...</msg>
<status status="PASS" starttime="20201112 09:54:19.243" endtime="20201112 09:54:19.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.260" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 09:54:19.259" endtime="20201112 09:54:19.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.263" level="INFO">VALUE: [7.702700000000035e-05, 7.645900000000094e-05, 7.659700000000116e-05, 7.636100000000048e-05, 7.61249999999998e-05, 7.618000000000208e-05, 7.641699999999876e-05, 7.702799999999982e-05, 7.650000000000018e-05, 7.704200000000286e-05, 7.613899999999937e-05, 7.61249999999998e-05, 7.629199999999864e-05, 7.702700000000035e-05, 7.613899999999937e-05, 7.617999999999861e-05, 7.63189999999983e-05, 7.61249999999998e-05, 7.60830000000011e-05, 7.617999999999861e-05, 7.609700000000066e-05, 7.645800000000147e-05, 7.61249999999998e-05, 7.637500000000005e-05, 7.7070000000002e-05, 7.641699999999876e-05, 7.64029999999992e-05, 7.705599999999896e-05, 7.623600000000036e-05, 7.647300000000051e-05, 7.611099999999676e-05, 7.651399999999975e-05, 7.633299999999787e-05, 7.642999999999886e-05, 7.648600000000061e-05, 7.634700000000091e-05, 7.70969999999982e-05, 7.61249999999998e-05, 7.622200000000079e-05, 7.704199999999939e-05, 7.644399999999843e-05, 7.622199999999732e-05, 7.63189999999983e-05, 7.611100000000023e-05, 7.620800000000122e-05, 7.650000000000018e-05, 7.647200000000104e-05, 7.704099999999992e-05, 7.705600000000243e-05, 7.652699999999985e-05]</msg>
<status status="PASS" starttime="20201112 09:54:19.261" endtime="20201112 09:54:19.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.257" endtime="20201112 09:54:19.264"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.266" endtime="20201112 09:54:19.268"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:19.270" endtime="20201112 09:54:19.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.268" endtime="20201112 09:54:19.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.265" endtime="20201112 09:54:19.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.898" endtime="20201112 09:54:19.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.897" endtime="20201112 09:54:19.291"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.299" endtime="20201112 09:54:19.317"></status>
</kw>
<msg timestamp="20201112 09:54:19.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:19.298" endtime="20201112 09:54:19.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:19.319" endtime="20201112 09:54:19.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.321" endtime="20201112 09:54:19.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.295" endtime="20201112 09:54:19.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.293" endtime="20201112 09:54:19.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.331" endtime="20201112 09:54:19.615"></status>
</kw>
<msg timestamp="20201112 09:54:19.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021783847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:19.329" endtime="20201112 09:54:19.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021783847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:19.620" endtime="20201112 09:54:19.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.628" endtime="20201112 09:54:19.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.327" endtime="20201112 09:54:19.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.325" endtime="20201112 09:54:19.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:19.635" level="INFO">${RESULT} = [{'time': 0.021861278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.74310000000028e-05, 'source_diff': 7.74310000000028e-05}, {'time': 0.021944208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:19.631" endtime="20201112 09:54:19.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:19.649" level="INFO">${ACCURACY} = {'time': [0.021861278, 0.021944208, 0.022026222, 0.022108236, 0.022190292, 0.022272236, 0.02235525, 0.02243725, 0.022519264, 0.022601264, 0.022683264, 0.022765278, 0.022847278, 0.022929292, 0.02301129...</msg>
<status status="PASS" starttime="20201112 09:54:19.636" endtime="20201112 09:54:19.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.653" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 09:54:19.652" endtime="20201112 09:54:19.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.656" level="INFO">VALUE: [7.74310000000028e-05, 7.790200000000122e-05, 7.745800000000247e-05, 7.738900000000062e-05, 7.74449999999989e-05, 7.725000000000093e-05, 7.80969999999992e-05, 7.756899999999955e-05, 7.729199999999964e-05, 7.716699999999951e-05, 7.713900000000037e-05, 7.729199999999964e-05, 7.738899999999715e-05, 7.716699999999951e-05, 7.731999999999878e-05, 7.747199999999857e-05, 7.717999999999961e-05, 7.738799999999768e-05, 7.723600000000136e-05, 7.722199999999832e-05, 7.748600000000161e-05, 7.717999999999961e-05, 7.70969999999982e-05, 7.73189999999993e-05, 7.744399999999943e-05, 7.74030000000002e-05, 7.808299999999962e-05, 7.755599999999946e-05, 7.723600000000136e-05, 7.718099999999908e-05, 7.715299999999994e-05, 7.747199999999857e-05, 7.751400000000075e-05, 7.755599999999946e-05, 7.805599999999996e-05, 7.716699999999951e-05, 7.736100000000148e-05, 7.740200000000072e-05, 7.713799999999743e-05, 7.741600000000029e-05, 7.720799999999875e-05, 7.713900000000037e-05, 7.722199999999832e-05, 7.715299999999994e-05, 7.752800000000032e-05, 7.808299999999962e-05, 7.716699999999951e-05, 7.711100000000123e-05, 7.723599999999789e-05, 7.737500000000105e-05]</msg>
<status status="PASS" starttime="20201112 09:54:19.654" endtime="20201112 09:54:19.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.650" endtime="20201112 09:54:19.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.659" endtime="20201112 09:54:19.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:19.663" endtime="20201112 09:54:19.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.661" endtime="20201112 09:54:19.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.658" endtime="20201112 09:54:19.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.291" endtime="20201112 09:54:19.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.291" endtime="20201112 09:54:19.684"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.692" endtime="20201112 09:54:19.710"></status>
</kw>
<msg timestamp="20201112 09:54:19.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:19.691" endtime="20201112 09:54:19.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:19.711" endtime="20201112 09:54:19.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.714" endtime="20201112 09:54:19.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.688" endtime="20201112 09:54:19.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.686" endtime="20201112 09:54:19.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.724" endtime="20201112 09:54:20.009"></status>
</kw>
<msg timestamp="20201112 09:54:20.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021615222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021693944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:19.722" endtime="20201112 09:54:20.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021615222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021693944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:20.013" endtime="20201112 09:54:20.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.021" endtime="20201112 09:54:20.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.720" endtime="20201112 09:54:20.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.718" endtime="20201112 09:54:20.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:20.028" level="INFO">${RESULT} = [{'time': 0.021693944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.872199999999982e-05, 'source_diff': 7.872199999999982e-05}, {'time': 0.021777875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:20.025" endtime="20201112 09:54:20.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:20.041" level="INFO">${ACCURACY} = {'time': [0.021693944, 0.021777875, 0.021860903, 0.021943889, 0.022026931, 0.022109931, 0.022192931, 0.022275917, 0.022359931, 0.022442931, 0.022525944, 0.022608944, 0.022691944, 0.022775, 0.022857958...</msg>
<status status="PASS" starttime="20201112 09:54:20.029" endtime="20201112 09:54:20.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.046" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 09:54:20.045" endtime="20201112 09:54:20.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.048" level="INFO">VALUE: [7.872199999999982e-05, 7.851399999999828e-05, 7.848600000000261e-05, 7.820799999999975e-05, 7.831999999999978e-05, 7.857000000000003e-05, 7.837499999999858e-05, 7.831999999999978e-05, 7.905600000000096e-05, 7.840299999999772e-05, 7.852699999999838e-05, 7.826299999999856e-05, 7.837499999999858e-05, 7.813900000000137e-05, 7.852700000000185e-05, 7.851400000000175e-05, 7.908300000000063e-05, 7.84169999999973e-05, 7.854200000000089e-05, 7.816700000000051e-05, 7.81389999999979e-05, 7.836099999999901e-05, 7.899999999999921e-05, 7.826399999999803e-05, 7.848599999999914e-05, 7.858300000000012e-05, 7.90840000000001e-05, 7.895899999999997e-05, 7.849999999999871e-05, 7.815300000000094e-05, 7.81380000000019e-05, 7.856900000000056e-05, 7.851300000000228e-05, 7.838900000000162e-05, 7.83190000000003e-05, 7.906900000000106e-05, 7.829100000000117e-05, 7.819400000000018e-05, 7.816700000000051e-05, 7.858300000000012e-05, 7.811100000000223e-05, 7.834699999999944e-05, 7.899999999999921e-05, 7.85969999999997e-05, 7.836100000000248e-05, 7.845899999999947e-05, 7.90840000000001e-05, 7.844400000000043e-05, 7.905600000000096e-05, 7.811200000000171e-05]</msg>
<status status="PASS" starttime="20201112 09:54:20.047" endtime="20201112 09:54:20.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.042" endtime="20201112 09:54:20.050"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.052" endtime="20201112 09:54:20.053"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:20.055" endtime="20201112 09:54:20.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.054" endtime="20201112 09:54:20.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.050" endtime="20201112 09:54:20.076"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.685" endtime="20201112 09:54:20.076"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.684" endtime="20201112 09:54:20.076"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.085" endtime="20201112 09:54:20.103"></status>
</kw>
<msg timestamp="20201112 09:54:20.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.083" endtime="20201112 09:54:20.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.104" endtime="20201112 09:54:20.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.107" endtime="20201112 09:54:20.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.081" endtime="20201112 09:54:20.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.079" endtime="20201112 09:54:20.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.117" endtime="20201112 09:54:20.402"></status>
</kw>
<msg timestamp="20201112 09:54:20.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021692444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021771875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:20.115" endtime="20201112 09:54:20.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021692444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021771875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:20.406" endtime="20201112 09:54:20.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.414" endtime="20201112 09:54:20.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.112" endtime="20201112 09:54:20.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.111" endtime="20201112 09:54:20.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:20.421" level="INFO">${RESULT} = [{'time': 0.021771875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.943099999999786e-05, 'source_diff': 7.943099999999786e-05}, {'time': 0.021856819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:20.417" endtime="20201112 09:54:20.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:20.434" level="INFO">${ACCURACY} = {'time': [0.021771875, 0.021856819, 0.021940806, 0.022024819, 0.022108819, 0.022192833, 0.022277875, 0.022361847, 0.022445847, 0.022530861, 0.022614875, 0.022698875, 0.022782875, 0.022866917, 0.022950...</msg>
<status status="PASS" starttime="20201112 09:54:20.422" endtime="20201112 09:54:20.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.439" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 09:54:20.438" endtime="20201112 09:54:20.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.441" level="INFO">VALUE: [7.943099999999786e-05, 7.97909999999992e-05, 7.929200000000164e-05, 7.934700000000044e-05, 7.93329999999974e-05, 7.94719999999971e-05, 8.002799999999935e-05, 7.923599999999989e-05, 7.948600000000014e-05, 8.002799999999935e-05, 7.943099999999786e-05, 7.940299999999872e-05, 7.938900000000262e-05, 7.930600000000121e-05, 7.931999999999731e-05, 7.933300000000088e-05, 7.947200000000057e-05, 7.932000000000078e-05, 7.929200000000164e-05, 7.933400000000035e-05, 7.998600000000064e-05, 8.000000000000021e-05, 8.000000000000021e-05, 7.940299999999872e-05, 7.923599999999989e-05, 7.937499999999958e-05, 7.937500000000305e-05, 8.001399999999978e-05, 7.966699999999854e-05, 7.941600000000229e-05, 7.929200000000164e-05, 8.005599999999849e-05, 7.951399999999928e-05, 7.943100000000133e-05, 8.006899999999859e-05, 7.91389999999989e-05, 7.951399999999928e-05, 8.000000000000021e-05, 7.922200000000032e-05, 7.933400000000035e-05, 7.920900000000022e-05, 7.952799999999885e-05, 7.930600000000121e-05, 7.909800000000314e-05, 7.945799999999753e-05, 7.938799999999968e-05, 7.955499999999852e-05, 7.915300000000194e-05, 7.933300000000088e-05, 7.909699999999673e-05]</msg>
<status status="PASS" starttime="20201112 09:54:20.440" endtime="20201112 09:54:20.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.435" endtime="20201112 09:54:20.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.445" endtime="20201112 09:54:20.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:20.448" endtime="20201112 09:54:20.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.447" endtime="20201112 09:54:20.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.443" endtime="20201112 09:54:20.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.077" endtime="20201112 09:54:20.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.076" endtime="20201112 09:54:20.469"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.478" endtime="20201112 09:54:20.496"></status>
</kw>
<msg timestamp="20201112 09:54:20.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.476" endtime="20201112 09:54:20.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.497" endtime="20201112 09:54:20.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.500" endtime="20201112 09:54:20.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.473" endtime="20201112 09:54:20.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.471" endtime="20201112 09:54:20.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.510" endtime="20201112 09:54:20.796"></status>
</kw>
<msg timestamp="20201112 09:54:20.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02224025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022321056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:20.508" endtime="20201112 09:54:20.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02224025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022321056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:20.800" endtime="20201112 09:54:20.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.808" endtime="20201112 09:54:20.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.506" endtime="20201112 09:54:20.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.504" endtime="20201112 09:54:20.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:20.815" level="INFO">${RESULT} = [{'time': 0.022321056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.080599999999924e-05, 'source_diff': 8.080599999999924e-05}, {'time': 0.022406986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:20.811" endtime="20201112 09:54:20.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:20.828" level="INFO">${ACCURACY} = {'time': [0.022321056, 0.022406986, 0.022492986, 0.022578986, 0.022664056, 0.022749, 0.022834028, 0.022919083, 0.023005028, 0.023091028, 0.023176028, 0.023261028, 0.023346042, 0.023432042, 0.023517056...</msg>
<status status="PASS" starttime="20201112 09:54:20.816" endtime="20201112 09:54:20.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.832" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 09:54:20.831" endtime="20201112 09:54:20.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.835" level="INFO">VALUE: [8.080599999999924e-05, 8.087500000000108e-05, 8.104199999999992e-05, 8.102800000000035e-05, 8.056999999999856e-05, 8.049999999999724e-05, 8.043099999999886e-05, 8.019399999999871e-05, 8.105599999999949e-05, 8.106999999999906e-05, 8.043100000000233e-05, 8.012500000000033e-05, 8.018100000000208e-05, 8.098600000000164e-05, 8.04450000000019e-05, 8.102800000000035e-05, 8.026300000000056e-05, 8.027700000000013e-05, 8.027700000000013e-05, 8.058300000000213e-05, 8.09719999999986e-05, 8.104099999999698e-05, 8.047200000000157e-05, 8.037500000000058e-05, 8.097200000000207e-05, 8.020900000000122e-05, 8.10970000000022e-05, 8.026400000000003e-05, 8.02779999999996e-05, 8.01389999999999e-05, 8.016699999999904e-05, 8.049999999999724e-05, 8.054199999999942e-05, 8.019500000000165e-05, 8.050000000000071e-05, 8.034700000000145e-05, 8.051400000000028e-05, 8.098599999999817e-05, 8.10970000000022e-05, 8.008299999999816e-05, 8.058299999999866e-05, 8.055499999999952e-05, 8.016599999999957e-05, 8.104199999999992e-05, 8.00970000000012e-05, 8.038900000000015e-05, 8.011100000000076e-05, 8.109699999999873e-05, 8.040299999999972e-05, 8.027700000000013e-05]</msg>
<status status="PASS" starttime="20201112 09:54:20.833" endtime="20201112 09:54:20.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.829" endtime="20201112 09:54:20.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.838" endtime="20201112 09:54:20.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:20.842" endtime="20201112 09:54:20.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.840" endtime="20201112 09:54:20.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.837" endtime="20201112 09:54:20.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.470" endtime="20201112 09:54:20.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.469" endtime="20201112 09:54:20.863"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.871" endtime="20201112 09:54:20.889"></status>
</kw>
<msg timestamp="20201112 09:54:20.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.870" endtime="20201112 09:54:20.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.891" endtime="20201112 09:54:20.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.893" endtime="20201112 09:54:20.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.867" endtime="20201112 09:54:20.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.865" endtime="20201112 09:54:20.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.903" endtime="20201112 09:54:21.189"></status>
</kw>
<msg timestamp="20201112 09:54:21.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021841528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:20.902" endtime="20201112 09:54:21.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021841528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:21.193" endtime="20201112 09:54:21.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.201" endtime="20201112 09:54:21.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.899" endtime="20201112 09:54:21.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.898" endtime="20201112 09:54:21.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:21.208" level="INFO">${RESULT} = [{'time': 0.021923014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.148600000000214e-05, 'source_diff': 8.148600000000214e-05}, {'time': 0.022009944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:21.204" endtime="20201112 09:54:21.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:21.222" level="INFO">${ACCURACY} = {'time': [0.021923014, 0.022009944, 0.022095944, 0.022181972, 0.022267958, 0.022354028, 0.022439986, 0.022526056, 0.022611986, 0.022698028, 0.022784014, 0.022870014, 0.022956056, 0.023042014, 0.023128...</msg>
<status status="PASS" starttime="20201112 09:54:21.209" endtime="20201112 09:54:21.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.227" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 09:54:21.226" endtime="20201112 09:54:21.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.229" level="INFO">VALUE: [8.148600000000214e-05, 8.180500000000077e-05, 8.11109999999983e-05, 8.125000000000146e-05, 8.125000000000146e-05, 8.154200000000042e-05, 8.142999999999692e-05, 8.134799999999845e-05, 8.116700000000004e-05, 8.118099999999961e-05, 8.118099999999961e-05, 8.108300000000263e-05, 8.126399999999756e-05, 8.154200000000042e-05, 8.1458999999999e-05, 8.125000000000146e-05, 8.137500000000158e-05, 8.115300000000047e-05, 8.11390000000009e-05, 8.199999999999874e-05, 8.15130000000018e-05, 8.138800000000168e-05, 8.20130000000023e-05, 8.130500000000027e-05, 8.162499999999837e-05, 8.112500000000133e-05, 8.14719999999991e-05, 8.129200000000017e-05, 8.131899999999984e-05, 8.111100000000177e-05, 8.123599999999842e-05, 8.134699999999898e-05, 8.115300000000047e-05, 8.202800000000135e-05, 8.131999999999931e-05, 8.123599999999842e-05, 8.208300000000016e-05, 8.161199999999827e-05, 8.198599999999917e-05, 8.198699999999864e-05, 8.155499999999705e-05, 8.152800000000085e-05, 8.136099999999855e-05, 8.145799999999953e-05, 8.152800000000085e-05, 8.140300000000072e-05, 8.202800000000135e-05, 8.138900000000115e-05, 8.11390000000009e-05, 8.120800000000275e-05]</msg>
<status status="PASS" starttime="20201112 09:54:21.228" endtime="20201112 09:54:21.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.223" endtime="20201112 09:54:21.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.233" endtime="20201112 09:54:21.234"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:21.236" endtime="20201112 09:54:21.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.234" endtime="20201112 09:54:21.256"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.231" endtime="20201112 09:54:21.256"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.863" endtime="20201112 09:54:21.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.863" endtime="20201112 09:54:21.257"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.265" endtime="20201112 09:54:21.283"></status>
</kw>
<msg timestamp="20201112 09:54:21.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.264" endtime="20201112 09:54:21.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.285" endtime="20201112 09:54:21.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.287" endtime="20201112 09:54:21.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.261" endtime="20201112 09:54:21.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.259" endtime="20201112 09:54:21.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.297" endtime="20201112 09:54:21.582"></status>
</kw>
<msg timestamp="20201112 09:54:21.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02163975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021722847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:21.296" endtime="20201112 09:54:21.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02163975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021722847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:21.586" endtime="20201112 09:54:21.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.595" endtime="20201112 09:54:21.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.293" endtime="20201112 09:54:21.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.291" endtime="20201112 09:54:21.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:21.602" level="INFO">${RESULT} = [{'time': 0.021722847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.309700000000073e-05, 'source_diff': 8.309700000000073e-05}, {'time': 0.021810778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:21.598" endtime="20201112 09:54:21.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:21.615" level="INFO">${ACCURACY} = {'time': [0.021722847, 0.021810778, 0.021897764, 0.021984792, 0.022071778, 0.022158792, 0.022245792, 0.022332806, 0.022420806, 0.022507819, 0.022594833, 0.022681819, 0.022768847, 0.022855833, 0.022942...</msg>
<status status="PASS" starttime="20201112 09:54:21.603" endtime="20201112 09:54:21.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.619" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 09:54:21.618" endtime="20201112 09:54:21.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.622" level="INFO">VALUE: [8.309700000000073e-05, 8.238899999999869e-05, 8.237499999999912e-05, 8.2459e-05, 8.22780000000016e-05, 8.262499999999937e-05, 8.216700000000104e-05, 8.212499999999887e-05, 8.301400000000278e-05, 8.255499999999805e-05, 8.21390000000019e-05, 8.213799999999896e-05, 8.245799999999706e-05, 8.241599999999835e-05, 8.245800000000053e-05, 8.254199999999795e-05, 8.238899999999869e-05, 8.241699999999783e-05, 8.256899999999762e-05, 8.243100000000086e-05, 8.219500000000018e-05, 8.308300000000116e-05, 8.252800000000185e-05, 8.244500000000043e-05, 8.218100000000061e-05, 8.233399999999988e-05, 8.208399999999963e-05, 8.301399999999931e-05, 8.227799999999813e-05, 8.237499999999912e-05, 8.227699999999866e-05, 8.229200000000117e-05, 8.252699999999891e-05, 8.31110000000003e-05, 8.209699999999973e-05, 8.218000000000114e-05, 8.252800000000185e-05, 8.251399999999881e-05, 8.215300000000147e-05, 8.208300000000016e-05, 8.308400000000063e-05, 8.257000000000056e-05, 8.2152000000002e-05, 8.249999999999924e-05, 8.226300000000256e-05, 8.24309999999974e-05, 8.240299999999826e-05, 8.298699999999964e-05, 8.236099999999955e-05, 8.254100000000195e-05]</msg>
<status status="PASS" starttime="20201112 09:54:21.620" endtime="20201112 09:54:21.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.616" endtime="20201112 09:54:21.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.626" endtime="20201112 09:54:21.627"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:21.629" endtime="20201112 09:54:21.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.627" endtime="20201112 09:54:21.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.624" endtime="20201112 09:54:21.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.258" endtime="20201112 09:54:21.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.257" endtime="20201112 09:54:21.650"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.658" endtime="20201112 09:54:21.676"></status>
</kw>
<msg timestamp="20201112 09:54:21.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.657" endtime="20201112 09:54:21.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.677" endtime="20201112 09:54:21.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.680" endtime="20201112 09:54:21.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.654" endtime="20201112 09:54:21.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.652" endtime="20201112 09:54:21.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.690" endtime="20201112 09:54:21.976"></status>
</kw>
<msg timestamp="20201112 09:54:21.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021943681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022026944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:21.688" endtime="20201112 09:54:21.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021943681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022026944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:21.980" endtime="20201112 09:54:21.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.988" endtime="20201112 09:54:21.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.686" endtime="20201112 09:54:21.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.684" endtime="20201112 09:54:21.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:21.995" level="INFO">${RESULT} = [{'time': 0.022026944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.326300000000009e-05, 'source_diff': 8.326300000000009e-05}, {'time': 0.022115875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:21.991" endtime="20201112 09:54:21.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:22.008" level="INFO">${ACCURACY} = {'time': [0.022026944, 0.022115875, 0.022204875, 0.022293889, 0.022382903, 0.022470931, 0.022558903, 0.022646917, 0.022734917, 0.022822917, 0.022910972, 0.022998944, 0.023086944, 0.023174958, 0.023262...</msg>
<status status="PASS" starttime="20201112 09:54:21.996" endtime="20201112 09:54:22.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.012" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 09:54:22.011" endtime="20201112 09:54:22.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.015" level="INFO">VALUE: [8.326300000000009e-05, 8.340299999999926e-05, 8.401400000000031e-05, 8.404199999999945e-05, 8.406999999999859e-05, 8.35980000000007e-05, 8.338900000000316e-05, 8.355599999999852e-05, 8.354199999999895e-05, 8.36110000000008e-05, 8.322200000000085e-05, 8.341599999999935e-05, 8.337500000000012e-05, 8.344399999999849e-05, 8.363899999999994e-05, 8.352799999999938e-05, 8.312499999999987e-05, 8.351399999999981e-05, 8.341699999999883e-05, 8.341699999999883e-05, 8.326399999999956e-05, 8.326399999999956e-05, 8.34859999999972e-05, 8.336100000000055e-05, 8.313899999999944e-05, 8.319500000000118e-05, 8.322300000000032e-05, 8.320900000000075e-05, 8.3459000000001e-05, 8.327799999999913e-05, 8.340299999999926e-05, 8.405499999999955e-05, 8.34720000000011e-05, 8.330500000000227e-05, 8.312499999999987e-05, 8.317999999999867e-05, 8.400000000000074e-05, 8.342999999999892e-05, 8.320800000000128e-05, 8.309700000000073e-05, 8.400000000000074e-05, 8.401400000000031e-05, 8.348600000000067e-05, 8.315300000000247e-05, 8.411099999999783e-05, 8.351399999999981e-05, 8.351399999999981e-05, 8.344399999999849e-05, 8.400000000000074e-05, 8.319499999999772e-05]</msg>
<status status="PASS" starttime="20201112 09:54:22.014" endtime="20201112 09:54:22.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.009" endtime="20201112 09:54:22.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.018" endtime="20201112 09:54:22.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:22.022" endtime="20201112 09:54:22.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.020" endtime="20201112 09:54:22.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.017" endtime="20201112 09:54:22.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.651" endtime="20201112 09:54:22.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.650" endtime="20201112 09:54:22.043"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.051" endtime="20201112 09:54:22.070"></status>
</kw>
<msg timestamp="20201112 09:54:22.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.050" endtime="20201112 09:54:22.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.072" endtime="20201112 09:54:22.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.074" endtime="20201112 09:54:22.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.047" endtime="20201112 09:54:22.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.045" endtime="20201112 09:54:22.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.084" endtime="20201112 09:54:22.370"></status>
</kw>
<msg timestamp="20201112 09:54:22.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022056653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022141069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:22.083" endtime="20201112 09:54:22.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022056653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022141069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:22.374" endtime="20201112 09:54:22.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.382" endtime="20201112 09:54:22.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.080" endtime="20201112 09:54:22.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.078" endtime="20201112 09:54:22.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:22.389" level="INFO">${RESULT} = [{'time': 0.022141069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.441600000000035e-05, 'source_diff': 8.441600000000035e-05}, {'time': 0.022231014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:22.386" endtime="20201112 09:54:22.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:22.402" level="INFO">${ACCURACY} = {'time': [0.022141069, 0.022231014, 0.02232, 0.022409014, 0.022499014, 0.022588042, 0.022678042, 0.022767042, 0.022856042, 0.022946056, 0.023036056, 0.023125069, 0.023215097, 0.023304069, 0.023393083,...</msg>
<status status="PASS" starttime="20201112 09:54:22.390" endtime="20201112 09:54:22.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.407" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 09:54:22.406" endtime="20201112 09:54:22.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.409" level="INFO">VALUE: [8.441600000000035e-05, 8.456999999999909e-05, 8.43469999999985e-05, 8.418100000000261e-05, 8.502800000000088e-05, 8.441699999999983e-05, 8.506999999999959e-05, 8.4153e-05, 8.420900000000175e-05, 8.499999999999827e-05, 8.506999999999959e-05, 8.415200000000053e-05, 8.504100000000098e-05, 8.43049999999998e-05, 8.429100000000023e-05, 8.419399999999924e-05, 8.505600000000002e-05, 8.423599999999795e-05, 8.502800000000088e-05, 8.502800000000088e-05, 8.420799999999881e-05, 8.501400000000131e-05, 8.436100000000155e-05, 8.420900000000175e-05, 8.499999999999827e-05, 8.504200000000045e-05, 8.418100000000261e-05, 8.440300000000026e-05, 8.504200000000045e-05, 8.424999999999752e-05, 8.442999999999992e-05, 8.44859999999982e-05, 8.409700000000173e-05, 8.502700000000141e-05, 8.456999999999909e-05, 8.501399999999784e-05, 8.412500000000087e-05, 8.417999999999967e-05, 8.46530000000005e-05, 8.412500000000087e-05, 8.424999999999752e-05, 8.505600000000002e-05, 8.505599999999655e-05, 8.423600000000142e-05, 8.409699999999826e-05, 8.506900000000012e-05, 8.434800000000145e-05, 8.430599999999927e-05, 8.434700000000198e-05, 8.424999999999752e-05]</msg>
<status status="PASS" starttime="20201112 09:54:22.408" endtime="20201112 09:54:22.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.403" endtime="20201112 09:54:22.411"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.413" endtime="20201112 09:54:22.414"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:22.416" endtime="20201112 09:54:22.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.415" endtime="20201112 09:54:22.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.411" endtime="20201112 09:54:22.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.044" endtime="20201112 09:54:22.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.043" endtime="20201112 09:54:22.437"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.446" endtime="20201112 09:54:22.464"></status>
</kw>
<msg timestamp="20201112 09:54:22.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.444" endtime="20201112 09:54:22.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.466" endtime="20201112 09:54:22.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.468" endtime="20201112 09:54:22.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.442" endtime="20201112 09:54:22.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.440" endtime="20201112 09:54:22.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.478" endtime="20201112 09:54:22.764"></status>
</kw>
<msg timestamp="20201112 09:54:22.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021817778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:22.477" endtime="20201112 09:54:22.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021817778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:22.768" endtime="20201112 09:54:22.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.777" endtime="20201112 09:54:22.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.474" endtime="20201112 09:54:22.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.472" endtime="20201112 09:54:22.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:22.783" level="INFO">${RESULT} = [{'time': 0.021817778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.53469999999995e-05, 'source_diff': 8.53469999999995e-05}, {'time': 0.021908625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:22.780" endtime="20201112 09:54:22.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:22.798" level="INFO">${ACCURACY} = {'time': [0.021817778, 0.021908625, 0.021998639, 0.022088681, 0.022178653, 0.022269653, 0.022360681, 0.022450667, 0.022541681, 0.022631708, 0.022721694, 0.022811694, 0.022901694, 0.022991708, 0.023081...</msg>
<status status="PASS" starttime="20201112 09:54:22.784" endtime="20201112 09:54:22.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.802" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 09:54:22.801" endtime="20201112 09:54:22.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.804" level="INFO">VALUE: [8.53469999999995e-05, 8.561099999999933e-05, 8.523599999999895e-05, 8.526399999999809e-05, 8.531999999999984e-05, 8.605600000000102e-05, 8.608400000000016e-05, 8.50980000000022e-05, 8.598700000000264e-05, 8.558300000000019e-05, 8.527700000000166e-05, 8.53469999999995e-05, 8.543000000000092e-05, 8.541599999999788e-05, 8.541599999999788e-05, 8.519400000000024e-05, 8.516700000000058e-05, 8.520799999999981e-05, 8.51110000000023e-05, 8.520799999999981e-05, 8.51249999999984e-05, 8.54859999999992e-05, 8.520799999999981e-05, 8.540299999999779e-05, 8.607000000000059e-05, 8.536099999999908e-05, 8.59859999999997e-05, 8.541700000000083e-05, 8.529099999999776e-05, 8.554099999999801e-05, 8.516599999999763e-05, 8.523600000000242e-05, 8.550000000000224e-05, 8.537500000000212e-05, 8.601400000000231e-05, 8.526400000000156e-05, 8.52920000000007e-05, 8.598600000000317e-05, 8.554200000000095e-05, 8.525000000000199e-05, 8.513900000000144e-05, 8.516700000000058e-05, 8.607000000000059e-05, 8.51249999999984e-05, 8.519499999999972e-05, 8.551399999999834e-05, 8.516599999999763e-05, 8.608400000000016e-05, 8.526299999999862e-05, 8.551299999999887e-05]</msg>
<status status="PASS" starttime="20201112 09:54:22.803" endtime="20201112 09:54:22.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.799" endtime="20201112 09:54:22.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.808" endtime="20201112 09:54:22.809"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:22.811" endtime="20201112 09:54:22.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.810" endtime="20201112 09:54:22.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.806" endtime="20201112 09:54:22.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.438" endtime="20201112 09:54:22.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.438" endtime="20201112 09:54:22.832"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.841" endtime="20201112 09:54:22.859"></status>
</kw>
<msg timestamp="20201112 09:54:22.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.839" endtime="20201112 09:54:22.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.861" endtime="20201112 09:54:22.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.863" endtime="20201112 09:54:22.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.837" endtime="20201112 09:54:22.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.835" endtime="20201112 09:54:22.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.873" endtime="20201112 09:54:23.159"></status>
</kw>
<msg timestamp="20201112 09:54:23.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021863583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021949972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:22.872" endtime="20201112 09:54:23.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021863583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021949972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:23.163" endtime="20201112 09:54:23.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.171" endtime="20201112 09:54:23.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.869" endtime="20201112 09:54:23.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.868" endtime="20201112 09:54:23.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:23.178" level="INFO">${RESULT} = [{'time': 0.021949972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.638900000000269e-05, 'source_diff': 8.638900000000269e-05}, {'time': 0.022041931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:23.175" endtime="20201112 09:54:23.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:23.191" level="INFO">${ACCURACY} = {'time': [0.021949972, 0.022041931, 0.022132917, 0.022223931, 0.022316, 0.022406931, 0.022497958, 0.022588958, 0.022679958, 0.022771028, 0.022863014, 0.022954972, 0.023045986, 0.023137986, 0.023229014...</msg>
<status status="PASS" starttime="20201112 09:54:23.179" endtime="20201112 09:54:23.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.196" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 09:54:23.195" endtime="20201112 09:54:23.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.198" level="INFO">VALUE: [8.638900000000269e-05, 8.686200000000005e-05, 8.645899999999707e-05, 8.636199999999955e-05, 8.71250000000004e-05, 8.613900000000244e-05, 8.649999999999977e-05, 8.637499999999965e-05, 8.636100000000008e-05, 8.626399999999909e-05, 8.707000000000159e-05, 8.701399999999984e-05, 8.647200000000063e-05, 8.701399999999984e-05, 8.623599999999995e-05, 8.705600000000202e-05, 8.618099999999768e-05, 8.636100000000008e-05, 8.609700000000026e-05, 8.638899999999922e-05, 8.663899999999947e-05, 8.616700000000158e-05, 8.709699999999779e-05, 8.638899999999922e-05, 8.701399999999984e-05, 8.619399999999777e-05, 8.637499999999965e-05, 8.619400000000124e-05, 8.612500000000287e-05, 8.636099999999661e-05, 8.645799999999759e-05, 8.652799999999891e-05, 8.640299999999879e-05, 8.652800000000238e-05, 8.619400000000124e-05, 8.638899999999922e-05, 8.705599999999855e-05, 8.655599999999805e-05, 8.701399999999984e-05, 8.654199999999848e-05, 8.61249999999994e-05, 8.6153000000002e-05, 8.63470000000005e-05, 8.63189999999979e-05, 8.620800000000081e-05, 8.629099999999876e-05, 8.701399999999984e-05, 8.651400000000281e-05, 8.616599999999863e-05, 8.624999999999952e-05]</msg>
<status status="PASS" starttime="20201112 09:54:23.197" endtime="20201112 09:54:23.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.192" endtime="20201112 09:54:23.205"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.207" endtime="20201112 09:54:23.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:23.211" endtime="20201112 09:54:23.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.209" endtime="20201112 09:54:23.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.206" endtime="20201112 09:54:23.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.833" endtime="20201112 09:54:23.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.833" endtime="20201112 09:54:23.232"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.240" endtime="20201112 09:54:23.258"></status>
</kw>
<msg timestamp="20201112 09:54:23.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.239" endtime="20201112 09:54:23.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.259" endtime="20201112 09:54:23.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.262" endtime="20201112 09:54:23.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.236" endtime="20201112 09:54:23.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.234" endtime="20201112 09:54:23.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.272" endtime="20201112 09:54:23.557"></status>
</kw>
<msg timestamp="20201112 09:54:23.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022007347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022095292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:23.270" endtime="20201112 09:54:23.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022007347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022095292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:23.561" endtime="20201112 09:54:23.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.569" endtime="20201112 09:54:23.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.268" endtime="20201112 09:54:23.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.266" endtime="20201112 09:54:23.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:23.576" level="INFO">${RESULT} = [{'time': 0.022095292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.7944999999999e-05, 'source_diff': 8.7944999999999e-05}, {'time': 0.022188236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8...</msg>
<status status="PASS" starttime="20201112 09:54:23.572" endtime="20201112 09:54:23.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:23.589" level="INFO">${ACCURACY} = {'time': [0.022095292, 0.022188236, 0.022280222, 0.022372236, 0.022465236, 0.022557264, 0.02265025, 0.022742278, 0.022834278, 0.022926278, 0.023018278, 0.023110306, 0.023202306, 0.023295306, 0.0233873...</msg>
<status status="PASS" starttime="20201112 09:54:23.577" endtime="20201112 09:54:23.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.594" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 09:54:23.593" endtime="20201112 09:54:23.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.596" level="INFO">VALUE: [8.7944999999999e-05, 8.752799999999991e-05, 8.73189999999989e-05, 8.715299999999954e-05, 8.805500000000008e-05, 8.73470000000015e-05, 8.800000000000127e-05, 8.754199999999948e-05, 8.734699999999804e-05, 8.718100000000215e-05, 8.740299999999979e-05, 8.718100000000215e-05, 8.755599999999905e-05, 8.802800000000041e-05, 8.716599999999963e-05, 8.741599999999988e-05, 8.722200000000138e-05, 8.723599999999748e-05, 8.806899999999965e-05, 8.730499999999933e-05, 8.720799999999834e-05, 8.745799999999859e-05, 8.727799999999966e-05, 8.808299999999922e-05, 8.755599999999905e-05, 8.801400000000084e-05, 8.737500000000065e-05, 8.806899999999965e-05, 8.808399999999869e-05, 8.712499999999693e-05, 8.722199999999791e-05, 8.7153000000003e-05, 8.731999999999837e-05, 8.79999999999978e-05, 8.74860000000012e-05, 8.736099999999761e-05, 8.754100000000001e-05, 8.758300000000219e-05, 8.74860000000012e-05, 8.713899999999997e-05, 8.730499999999933e-05, 8.718100000000215e-05, 8.809700000000226e-05, 8.744399999999902e-05, 8.805599999999955e-05, 8.802800000000041e-05, 8.756900000000262e-05, 8.733400000000141e-05, 8.802800000000041e-05, 8.720900000000129e-05]</msg>
<status status="PASS" starttime="20201112 09:54:23.595" endtime="20201112 09:54:23.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.590" endtime="20201112 09:54:23.597"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.600" endtime="20201112 09:54:23.601"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:23.603" endtime="20201112 09:54:23.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.602" endtime="20201112 09:54:23.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.598" endtime="20201112 09:54:23.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.232" endtime="20201112 09:54:23.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.232" endtime="20201112 09:54:23.624"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.633" endtime="20201112 09:54:23.651"></status>
</kw>
<msg timestamp="20201112 09:54:23.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.631" endtime="20201112 09:54:23.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.653" endtime="20201112 09:54:23.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.656" endtime="20201112 09:54:23.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.629" endtime="20201112 09:54:23.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.627" endtime="20201112 09:54:23.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.666" endtime="20201112 09:54:23.950"></status>
</kw>
<msg timestamp="20201112 09:54:23.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022104236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:23.664" endtime="20201112 09:54:23.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022104236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:23.955" endtime="20201112 09:54:23.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.963" endtime="20201112 09:54:23.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.661" endtime="20201112 09:54:23.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.660" endtime="20201112 09:54:23.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:23.970" level="INFO">${RESULT} = [{'time': 0.022104236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.91389999999985e-05, 'source_diff': 8.91389999999985e-05}, {'time': 0.022198153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:23.966" endtime="20201112 09:54:23.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:23.983" level="INFO">${ACCURACY} = {'time': [0.022104236, 0.022198153, 0.022291181, 0.022384236, 0.022477181, 0.022570181, 0.022663208, 0.022756194, 0.022849208, 0.022943208, 0.023036306, 0.023129222, 0.023222222, 0.023315236, 0.023408...</msg>
<status status="PASS" starttime="20201112 09:54:23.971" endtime="20201112 09:54:23.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.988" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 09:54:23.987" endtime="20201112 09:54:23.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.990" level="INFO">VALUE: [8.91389999999985e-05, 8.84860000000022e-05, 8.836200000000155e-05, 8.842999999999698e-05, 8.84999999999983e-05, 8.833400000000241e-05, 8.822200000000238e-05, 8.806899999999965e-05, 8.848599999999873e-05, 8.908300000000022e-05, 8.837499999999818e-05, 8.837500000000165e-05, 8.838900000000122e-05, 8.852800000000091e-05, 8.845799999999959e-05, 8.84860000000022e-05, 8.905600000000055e-05, 8.815300000000054e-05, 8.898599999999923e-05, 8.905500000000108e-05, 8.837499999999818e-05, 8.823599999999848e-05, 8.836099999999861e-05, 8.844400000000002e-05, 8.905600000000055e-05, 8.845799999999959e-05, 8.844400000000002e-05, 8.909699999999979e-05, 8.908300000000022e-05, 8.81389999999975e-05, 8.905499999999761e-05, 8.822200000000238e-05, 8.900000000000227e-05, 8.833299999999947e-05, 8.847199999999916e-05, 8.851399999999787e-05, 8.834699999999904e-05, 8.902799999999794e-05, 8.845900000000254e-05, 8.833399999999894e-05, 8.838899999999775e-05, 8.856999999999962e-05, 8.845900000000254e-05, 8.837500000000165e-05, 8.833299999999947e-05, 8.838899999999775e-05, 8.84449999999995e-05, 8.86250000000019e-05, 8.834699999999904e-05, 8.826399999999762e-05]</msg>
<status status="PASS" starttime="20201112 09:54:23.989" endtime="20201112 09:54:23.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.984" endtime="20201112 09:54:23.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.993" endtime="20201112 09:54:23.995"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:23.997" endtime="20201112 09:54:24.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.995" endtime="20201112 09:54:24.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.992" endtime="20201112 09:54:24.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.625" endtime="20201112 09:54:24.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.625" endtime="20201112 09:54:24.018"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.026" endtime="20201112 09:54:24.045"></status>
</kw>
<msg timestamp="20201112 09:54:24.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.025" endtime="20201112 09:54:24.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.046" endtime="20201112 09:54:24.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.049" endtime="20201112 09:54:24.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.022" endtime="20201112 09:54:24.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.020" endtime="20201112 09:54:24.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.059" endtime="20201112 09:54:24.345"></status>
</kw>
<msg timestamp="20201112 09:54:24.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02189725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:24.057" endtime="20201112 09:54:24.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02189725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:24.349" endtime="20201112 09:54:24.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.357" endtime="20201112 09:54:24.359"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.055" endtime="20201112 09:54:24.359"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.053" endtime="20201112 09:54:24.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:24.364" level="INFO">${RESULT} = [{'time': 0.02189725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.934700000000004e-05, 'source_diff': 8.934700000000004e-05}, {'time': 0.021992222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:24.360" endtime="20201112 09:54:24.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:24.378" level="INFO">${ACCURACY} = {'time': [0.02189725, 0.021992222, 0.022087181, 0.022181208, 0.022275208, 0.022369194, 0.022463222, 0.022558208, 0.022652222, 0.022747236, 0.022841236, 0.02293625, 0.02303025, 0.02312425, 0.023218264,...</msg>
<status status="PASS" starttime="20201112 09:54:24.365" endtime="20201112 09:54:24.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.382" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 09:54:24.381" endtime="20201112 09:54:24.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.385" level="INFO">VALUE: [8.934700000000004e-05, 8.980499999999836e-05, 9.007000000000112e-05, 8.938900000000222e-05, 8.952700000000244e-05, 8.938799999999927e-05, 8.922199999999991e-05, 9.008300000000122e-05, 8.93190000000009e-05, 8.998600000000023e-05, 8.93190000000009e-05, 9.009699999999732e-05, 8.91939999999973e-05, 8.916699999999764e-05, 8.941699999999789e-05, 9.002799999999894e-05, 9.011100000000036e-05, 8.941600000000188e-05, 8.933399999999994e-05, 8.926400000000209e-05, 9.011100000000036e-05, 8.918100000000068e-05, 8.923599999999948e-05, 9.002700000000294e-05, 9.002699999999947e-05, 8.944399999999755e-05, 8.945800000000059e-05, 8.927800000000166e-05, 8.941699999999789e-05, 8.922199999999991e-05, 8.955599999999758e-05, 8.929199999999776e-05, 8.916699999999764e-05, 8.929199999999776e-05, 8.954199999999801e-05, 8.926399999999862e-05, 8.911099999999936e-05, 8.909799999999926e-05, 8.962499999999943e-05, 8.91670000000011e-05, 8.930500000000133e-05, 8.920800000000034e-05, 8.941600000000188e-05, 8.926400000000209e-05, 8.91250000000024e-05, 9.002799999999894e-05, 9.005499999999861e-05, 9.001399999999937e-05, 8.93060000000008e-05, 8.944399999999755e-05]</msg>
<status status="PASS" starttime="20201112 09:54:24.384" endtime="20201112 09:54:24.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.379" endtime="20201112 09:54:24.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.389" endtime="20201112 09:54:24.390"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:24.392" endtime="20201112 09:54:24.411"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.390" endtime="20201112 09:54:24.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.387" endtime="20201112 09:54:24.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.019" endtime="20201112 09:54:24.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.018" endtime="20201112 09:54:24.413"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.421" endtime="20201112 09:54:24.440"></status>
</kw>
<msg timestamp="20201112 09:54:24.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.420" endtime="20201112 09:54:24.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.441" endtime="20201112 09:54:24.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.444" endtime="20201112 09:54:24.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.417" endtime="20201112 09:54:24.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.415" endtime="20201112 09:54:24.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.454" endtime="20201112 09:54:24.739"></status>
</kw>
<msg timestamp="20201112 09:54:24.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021680056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02177075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:24.452" endtime="20201112 09:54:24.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021680056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02177075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:24.743" endtime="20201112 09:54:24.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.752" endtime="20201112 09:54:24.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.449" endtime="20201112 09:54:24.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.448" endtime="20201112 09:54:24.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:24.758" level="INFO">${RESULT} = [{'time': 0.02177075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.06939999999988e-05, 'source_diff': 9.06939999999988e-05}, {'time': 0.021866708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:54:24.755" endtime="20201112 09:54:24.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:24.772" level="INFO">${ACCURACY} = {'time': [0.02177075, 0.021866708, 0.021961694, 0.022056722, 0.022151722, 0.022246736, 0.022341722, 0.02243675, 0.02253175, 0.02262675, 0.022721764, 0.022817764, 0.022912792, 0.023007792, 0.023102778,...</msg>
<status status="PASS" starttime="20201112 09:54:24.759" endtime="20201112 09:54:24.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.776" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 09:54:24.775" endtime="20201112 09:54:24.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.779" level="INFO">VALUE: [9.06939999999988e-05, 9.095799999999862e-05, 9.045800000000159e-05, 9.044400000000202e-05, 9.036099999999714e-05, 9.048600000000073e-05, 9.012499999999993e-05, 9.043099999999846e-05, 9.055599999999858e-05, 9.029200000000223e-05, 9.023599999999701e-05, 9.101400000000037e-05, 9.012499999999993e-05, 9.047300000000064e-05, 9.01670000000021e-05, 9.034799999999704e-05, 9.016599999999916e-05, 9.052699999999997e-05, 9.011099999999689e-05, 9.048600000000073e-05, 9.013800000000002e-05, 9.10000000000008e-05, 9.041599999999941e-05, 9.038899999999975e-05, 9.023600000000048e-05, 9.05000000000003e-05, 9.040299999999932e-05, 9.012499999999993e-05, 9.025000000000005e-05, 9.101400000000037e-05, 9.040299999999932e-05, 9.03060000000018e-05, 9.026399999999962e-05, 9.007000000000112e-05, 9.109799999999779e-05, 9.026399999999962e-05, 9.033400000000094e-05, 9.01519999999996e-05, 9.025000000000005e-05, 9.011100000000036e-05, 9.106899999999918e-05, 9.097199999999819e-05, 9.009700000000079e-05, 9.062500000000043e-05, 9.052799999999944e-05, 9.016699999999864e-05, 9.043100000000193e-05, 9.037500000000018e-05, 9.047300000000064e-05, 9.055600000000205e-05]</msg>
<status status="PASS" starttime="20201112 09:54:24.777" endtime="20201112 09:54:24.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.773" endtime="20201112 09:54:24.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.782" endtime="20201112 09:54:24.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:24.786" endtime="20201112 09:54:24.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.784" endtime="20201112 09:54:24.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.781" endtime="20201112 09:54:24.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.414" endtime="20201112 09:54:24.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.413" endtime="20201112 09:54:24.806"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.815" endtime="20201112 09:54:24.834"></status>
</kw>
<msg timestamp="20201112 09:54:24.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.813" endtime="20201112 09:54:24.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.835" endtime="20201112 09:54:24.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.838" endtime="20201112 09:54:24.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.811" endtime="20201112 09:54:24.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.809" endtime="20201112 09:54:24.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.847" endtime="20201112 09:54:25.133"></status>
</kw>
<msg timestamp="20201112 09:54:25.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0216925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784403, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:24.846" endtime="20201112 09:54:25.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0216925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784403, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:25.138" endtime="20201112 09:54:25.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.146" endtime="20201112 09:54:25.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.843" endtime="20201112 09:54:25.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.842" endtime="20201112 09:54:25.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:25.152" level="INFO">${RESULT} = [{'time': 0.021784403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.190300000000082e-05, 'source_diff': 9.190300000000082e-05}, {'time': 0.021881333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:25.149" endtime="20201112 09:54:25.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:25.166" level="INFO">${ACCURACY} = {'time': [0.021784403, 0.021881333, 0.021977319, 0.022073333, 0.022169333, 0.022265361, 0.022361361, 0.022457375, 0.022553375, 0.022649403, 0.022745403, 0.022841403, 0.022938417, 0.023034403, 0.023130...</msg>
<status status="PASS" starttime="20201112 09:54:25.153" endtime="20201112 09:54:25.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.170" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 09:54:25.169" endtime="20201112 09:54:25.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.173" level="INFO">VALUE: [9.190300000000082e-05, 9.181899999999993e-05, 9.161099999999839e-05, 9.129100000000029e-05, 9.145799999999912e-05, 9.148600000000173e-05, 9.155500000000011e-05, 9.112500000000093e-05, 9.122200000000191e-05, 9.127800000000019e-05, 9.133400000000194e-05, 9.156999999999915e-05, 9.20139999999979e-05, 9.161099999999839e-05, 9.130599999999933e-05, 9.130599999999933e-05, 9.161200000000133e-05, 9.11939999999993e-05, 9.201299999999843e-05, 9.158300000000272e-05, 9.140300000000032e-05, 9.117999999999973e-05, 9.147200000000216e-05, 9.161100000000186e-05, 9.208299999999975e-05, 9.206900000000018e-05, 9.147200000000216e-05, 9.151400000000087e-05, 9.130599999999933e-05, 9.198599999999876e-05, 9.123700000000096e-05, 9.213899999999803e-05, 9.104199999999951e-05, 9.143099999999946e-05, 9.138800000000127e-05, 9.15139999999974e-05, 9.209700000000279e-05, 9.11390000000005e-05, 9.136099999999814e-05, 9.140200000000084e-05, 9.15000000000013e-05, 9.142999999999998e-05, 9.125000000000105e-05, 9.126400000000062e-05, 9.140300000000032e-05, 9.120899999999835e-05, 9.130599999999933e-05, 9.208299999999975e-05, 9.125000000000105e-05, 9.122199999999844e-05]</msg>
<status status="PASS" starttime="20201112 09:54:25.171" endtime="20201112 09:54:25.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.167" endtime="20201112 09:54:25.174"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.176" endtime="20201112 09:54:25.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:25.180" endtime="20201112 09:54:25.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.178" endtime="20201112 09:54:25.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.175" endtime="20201112 09:54:25.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.807" endtime="20201112 09:54:25.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.807" endtime="20201112 09:54:25.201"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.209" endtime="20201112 09:54:25.227"></status>
</kw>
<msg timestamp="20201112 09:54:25.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.208" endtime="20201112 09:54:25.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.228" endtime="20201112 09:54:25.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.231" endtime="20201112 09:54:25.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.205" endtime="20201112 09:54:25.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.203" endtime="20201112 09:54:25.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.241" endtime="20201112 09:54:25.526"></status>
</kw>
<msg timestamp="20201112 09:54:25.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021894347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021986889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:25.239" endtime="20201112 09:54:25.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021894347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021986889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:25.530" endtime="20201112 09:54:25.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.538" endtime="20201112 09:54:25.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.237" endtime="20201112 09:54:25.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.235" endtime="20201112 09:54:25.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:25.545" level="INFO">${RESULT} = [{'time': 0.021986889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.254199999999754e-05, 'source_diff': 9.254199999999754e-05}, {'time': 0.022084778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:25.542" endtime="20201112 09:54:25.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:25.558" level="INFO">${ACCURACY} = {'time': [0.021986889, 0.022084778, 0.022181778, 0.022278792, 0.022375806, 0.022473847, 0.022570819, 0.022667833, 0.022764833, 0.022861833, 0.022958833, 0.023055861, 0.023152861, 0.023249931, 0.023346...</msg>
<status status="PASS" starttime="20201112 09:54:25.546" endtime="20201112 09:54:25.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.563" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 09:54:25.562" endtime="20201112 09:54:25.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.565" level="INFO">VALUE: [9.254199999999754e-05, 9.284700000000007e-05, 9.211099999999889e-05, 9.220899999999935e-05, 9.229200000000076e-05, 9.306900000000118e-05, 9.242999999999751e-05, 9.21659999999977e-05, 9.218000000000073e-05, 9.21390000000015e-05, 9.236100000000261e-05, 9.211099999999889e-05, 9.2333e-05, 9.230600000000033e-05, 9.231900000000043e-05, 9.306900000000118e-05, 9.218100000000021e-05, 9.243100000000046e-05, 9.262499999999896e-05, 9.23199999999999e-05, 9.230599999999686e-05, 9.255599999999711e-05, 9.305499999999814e-05, 9.241599999999794e-05, 9.252800000000144e-05, 9.301299999999943e-05, 9.2333e-05, 9.306900000000118e-05, 9.231900000000043e-05, 9.240299999999785e-05, 9.254199999999754e-05, 9.220799999999987e-05, 9.222199999999944e-05, 9.212500000000193e-05, 9.212499999999846e-05, 9.248599999999926e-05, 9.21529999999976e-05, 9.216700000000064e-05, 9.307000000000065e-05, 9.309799999999979e-05, 9.248599999999926e-05, 9.243000000000098e-05, 9.254100000000154e-05, 9.308300000000075e-05, 9.236099999999914e-05, 9.2333e-05, 9.306900000000118e-05, 9.262499999999896e-05, 9.237499999999871e-05, 9.249999999999883e-05]</msg>
<status status="PASS" starttime="20201112 09:54:25.564" endtime="20201112 09:54:25.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.559" endtime="20201112 09:54:25.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.569" endtime="20201112 09:54:25.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:25.572" endtime="20201112 09:54:25.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.571" endtime="20201112 09:54:25.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.567" endtime="20201112 09:54:25.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.201" endtime="20201112 09:54:25.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.201" endtime="20201112 09:54:25.593"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.602" endtime="20201112 09:54:25.622"></status>
</kw>
<msg timestamp="20201112 09:54:25.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.600" endtime="20201112 09:54:25.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.623" endtime="20201112 09:54:25.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.626" endtime="20201112 09:54:25.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.598" endtime="20201112 09:54:25.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.596" endtime="20201112 09:54:25.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.636" endtime="20201112 09:54:25.921"></status>
</kw>
<msg timestamp="20201112 09:54:25.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021974111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:25.634" endtime="20201112 09:54:25.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021974111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:25.925" endtime="20201112 09:54:25.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.933" endtime="20201112 09:54:25.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.632" endtime="20201112 09:54:25.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.630" endtime="20201112 09:54:25.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:25.940" level="INFO">${RESULT} = [{'time': 0.021974111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.400000000000033e-05, 'source_diff': 9.400000000000033e-05}, {'time': 0.022073028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:25.936" endtime="20201112 09:54:25.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:25.954" level="INFO">${ACCURACY} = {'time': [0.021974111, 0.022073028, 0.022171042, 0.022269069, 0.022367069, 0.022465097, 0.022564111, 0.022662111, 0.022760097, 0.022859097, 0.022957167, 0.023056111, 0.023154111, 0.023252139, 0.023351...</msg>
<status status="PASS" starttime="20201112 09:54:25.941" endtime="20201112 09:54:25.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.959" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 09:54:25.958" endtime="20201112 09:54:25.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.961" level="INFO">VALUE: [9.400000000000033e-05, 9.340300000000232e-05, 9.352799999999897e-05, 9.312499999999946e-05, 9.315199999999912e-05, 9.341599999999894e-05, 9.404200000000251e-05, 9.338899999999928e-05, 9.31659999999987e-05, 9.404099999999957e-05, 9.34590000000006e-05, 9.405499999999914e-05, 9.334700000000057e-05, 9.357000000000115e-05, 9.40139999999999e-05, 9.3333000000001e-05, 9.327800000000219e-05, 9.337499999999971e-05, 9.400000000000033e-05, 9.316700000000164e-05, 9.35139999999994e-05, 9.343099999999799e-05, 9.327699999999925e-05, 9.406900000000218e-05, 9.319399999999783e-05, 9.315300000000207e-05, 9.400000000000033e-05, 9.324999999999958e-05, 9.320800000000087e-05, 9.398600000000076e-05, 9.318100000000121e-05, 9.355599999999811e-05, 9.336100000000014e-05, 9.337499999999971e-05, 9.324999999999958e-05, 9.354200000000201e-05, 9.408399999999775e-05, 9.40139999999999e-05, 9.336199999999961e-05, 9.406899999999871e-05, 9.354099999999907e-05, 9.327700000000272e-05, 9.4027e-05, 9.324999999999958e-05, 9.3333000000001e-05, 9.319500000000078e-05, 9.327799999999872e-05, 9.327799999999872e-05, 9.324999999999958e-05, 9.341700000000189e-05]</msg>
<status status="PASS" starttime="20201112 09:54:25.960" endtime="20201112 09:54:25.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.955" endtime="20201112 09:54:25.962"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.965" endtime="20201112 09:54:25.966"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:25.968" endtime="20201112 09:54:25.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.967" endtime="20201112 09:54:25.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.963" endtime="20201112 09:54:25.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.594" endtime="20201112 09:54:25.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.594" endtime="20201112 09:54:25.989"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.998" endtime="20201112 09:54:26.017"></status>
</kw>
<msg timestamp="20201112 09:54:26.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.996" endtime="20201112 09:54:26.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:26.018" endtime="20201112 09:54:26.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.021" endtime="20201112 09:54:26.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.993" endtime="20201112 09:54:26.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.991" endtime="20201112 09:54:26.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.031" endtime="20201112 09:54:26.316"></status>
</kw>
<msg timestamp="20201112 09:54:26.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021967611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:26.029" endtime="20201112 09:54:26.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021967611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:26.320" endtime="20201112 09:54:26.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.328" endtime="20201112 09:54:26.330"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.027" endtime="20201112 09:54:26.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.025" endtime="20201112 09:54:26.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:26.335" level="INFO">${RESULT} = [{'time': 0.021967611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.502800000000047e-05, 'source_diff': 9.502800000000047e-05}, {'time': 0.0220675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:26.332" endtime="20201112 09:54:26.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:26.348" level="INFO">${ACCURACY} = {'time': [0.021967611, 0.0220675, 0.022166514, 0.022265528, 0.022364528, 0.022463542, 0.022562542, 0.022661542, 0.022760569, 0.022859556, 0.022958569, 0.023058569, 0.023158583, 0.023257597, 0.02335663...</msg>
<status status="PASS" starttime="20201112 09:54:26.336" endtime="20201112 09:54:26.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.353" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 09:54:26.352" endtime="20201112 09:54:26.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.356" level="INFO">VALUE: [9.502800000000047e-05, 9.473600000000151e-05, 9.443099999999899e-05, 9.445899999999813e-05, 9.444500000000203e-05, 9.447300000000117e-05, 9.413900000000003e-05, 9.447300000000117e-05, 9.43880000000008e-05, 9.450000000000083e-05, 9.413800000000055e-05, 9.509700000000232e-05, 9.50140000000009e-05, 9.425000000000058e-05, 9.449999999999736e-05, 9.506899999999971e-05, 9.505500000000014e-05, 9.423600000000101e-05, 9.425000000000058e-05, 9.508299999999928e-05, 9.436099999999767e-05, 9.436100000000114e-05, 9.462499999999749e-05, 9.411100000000089e-05, 9.504200000000004e-05, 9.440299999999985e-05, 9.442999999999951e-05, 9.50409999999971e-05, 9.440200000000037e-05, 9.454100000000007e-05, 9.41529999999996e-05, 9.41529999999996e-05, 9.50140000000009e-05, 9.452799999999997e-05, 9.452799999999997e-05, 9.440299999999985e-05, 9.419500000000178e-05, 9.426400000000015e-05, 9.431899999999896e-05, 9.429199999999929e-05, 9.418099999999874e-05, 9.413900000000003e-05, 9.5027000000001e-05, 9.436099999999767e-05, 9.429099999999982e-05, 9.422200000000144e-05, 9.431899999999896e-05, 9.455499999999964e-05, 9.45140000000004e-05, 9.422199999999797e-05]</msg>
<status status="PASS" starttime="20201112 09:54:26.354" endtime="20201112 09:54:26.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.349" endtime="20201112 09:54:26.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.359" endtime="20201112 09:54:26.360"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:26.362" endtime="20201112 09:54:26.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.361" endtime="20201112 09:54:26.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.357" endtime="20201112 09:54:26.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.990" endtime="20201112 09:54:26.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.989" endtime="20201112 09:54:26.383"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.392" endtime="20201112 09:54:26.411"></status>
</kw>
<msg timestamp="20201112 09:54:26.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:26.390" endtime="20201112 09:54:26.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:26.412" endtime="20201112 09:54:26.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.415" endtime="20201112 09:54:26.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.388" endtime="20201112 09:54:26.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.386" endtime="20201112 09:54:26.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.425" endtime="20201112 09:54:26.710"></status>
</kw>
<msg timestamp="20201112 09:54:26.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021765347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:26.423" endtime="20201112 09:54:26.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021765347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:26.715" endtime="20201112 09:54:26.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.723" endtime="20201112 09:54:26.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.421" endtime="20201112 09:54:26.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.419" endtime="20201112 09:54:26.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:26.730" level="INFO">${RESULT} = [{'time': 0.021765347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.580500000000089e-05, 'source_diff': 9.580500000000089e-05}, {'time': 0.021866264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:26.726" endtime="20201112 09:54:26.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:26.743" level="INFO">${ACCURACY} = {'time': [0.021765347, 0.021866264, 0.021966278, 0.022066278, 0.022166292, 0.022266375, 0.022367319, 0.022467306, 0.022567333, 0.022667333, 0.022767333, 0.022867347, 0.022967361, 0.023067347, 0.023167...</msg>
<status status="PASS" starttime="20201112 09:54:26.730" endtime="20201112 09:54:26.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.747" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 09:54:26.746" endtime="20201112 09:54:26.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.750" level="INFO">VALUE: [9.580500000000089e-05, 9.590300000000135e-05, 9.520899999999888e-05, 9.523600000000201e-05, 9.540300000000085e-05, 9.523600000000201e-05, 9.611099999999942e-05, 9.544499999999956e-05, 9.513899999999756e-05, 9.543000000000051e-05, 9.547199999999922e-05, 9.55140000000014e-05, 9.523599999999854e-05, 9.519399999999983e-05, 9.544400000000008e-05, 9.516700000000017e-05, 9.533299999999953e-05, 9.533400000000247e-05, 9.527800000000072e-05, 9.549999999999836e-05, 9.599999999999886e-05, 9.551399999999793e-05, 9.607000000000018e-05, 9.519399999999983e-05, 9.520900000000235e-05, 9.606900000000071e-05, 9.548600000000226e-05, 9.53469999999991e-05, 9.605500000000114e-05, 9.530599999999986e-05, 9.509699999999885e-05, 9.562500000000196e-05, 9.541700000000042e-05, 9.556999999999968e-05, 9.609699999999985e-05, 9.534799999999857e-05, 9.525000000000158e-05, 9.534700000000257e-05, 9.554200000000054e-05, 9.509799999999832e-05, 9.524999999999811e-05, 9.522199999999897e-05, 9.530500000000039e-05, 9.544400000000008e-05, 9.536099999999867e-05, 9.525000000000158e-05, 9.531899999999996e-05, 9.555500000000064e-05, 9.544400000000008e-05, 9.513899999999756e-05]</msg>
<status status="PASS" starttime="20201112 09:54:26.748" endtime="20201112 09:54:26.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.744" endtime="20201112 09:54:26.751"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.753" endtime="20201112 09:54:26.755"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:26.757" endtime="20201112 09:54:26.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.755" endtime="20201112 09:54:26.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.752" endtime="20201112 09:54:26.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.384" endtime="20201112 09:54:26.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.384" endtime="20201112 09:54:26.778"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.786" endtime="20201112 09:54:26.806"></status>
</kw>
<msg timestamp="20201112 09:54:26.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:26.785" endtime="20201112 09:54:26.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:26.808" endtime="20201112 09:54:26.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.810" endtime="20201112 09:54:26.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.782" endtime="20201112 09:54:26.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.780" endtime="20201112 09:54:26.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.820" endtime="20201112 09:54:27.106"></status>
</kw>
<msg timestamp="20201112 09:54:27.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022137833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022234542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:26.819" endtime="20201112 09:54:27.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022137833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022234542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:27.111" endtime="20201112 09:54:27.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.119" endtime="20201112 09:54:27.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.816" endtime="20201112 09:54:27.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.814" endtime="20201112 09:54:27.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:27.125" level="INFO">${RESULT} = [{'time': 0.022234542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.670900000000038e-05, 'source_diff': 9.670900000000038e-05}, {'time': 0.022336472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:27.122" endtime="20201112 09:54:27.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:27.139" level="INFO">${ACCURACY} = {'time': [0.022234542, 0.022336472, 0.022437486, 0.022538556, 0.022639514, 0.022740514, 0.022841514, 0.022942528, 0.023043528, 0.023144556, 0.023246597, 0.023347597, 0.023449569, 0.023550583, 0.023651...</msg>
<status status="PASS" starttime="20201112 09:54:27.126" endtime="20201112 09:54:27.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.143" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 09:54:27.142" endtime="20201112 09:54:27.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.146" level="INFO">VALUE: [9.670900000000038e-05, 9.642999999999805e-05, 9.624999999999911e-05, 9.62920000000013e-05, 9.62080000000004e-05, 9.649999999999936e-05, 9.630600000000086e-05, 9.611099999999942e-05, 9.622199999999997e-05, 9.630600000000086e-05, 9.713899999999956e-05, 9.652800000000197e-05, 9.70409999999991e-05, 9.65409999999986e-05, 9.643000000000151e-05, 9.640200000000237e-05, 9.611099999999942e-05, 9.638900000000228e-05, 9.626400000000215e-05, 9.63470000000001e-05, 9.64859999999998e-05, 9.619500000000031e-05, 9.62920000000013e-05, 9.708400000000075e-05, 9.63470000000001e-05, 9.626399999999868e-05, 9.613899999999856e-05, 9.641700000000142e-05, 9.612499999999899e-05, 9.7027999999999e-05, 9.669500000000081e-05, 9.70409999999991e-05, 9.630500000000139e-05, 9.702800000000247e-05, 9.649999999999936e-05, 9.650000000000283e-05, 9.649999999999936e-05, 9.699999999999986e-05, 9.654199999999807e-05, 9.612499999999899e-05, 9.638899999999881e-05, 9.704200000000204e-05, 9.704199999999857e-05, 9.636199999999914e-05, 9.627799999999825e-05, 9.649999999999936e-05, 9.644400000000108e-05, 9.642999999999805e-05, 9.645800000000065e-05, 9.611099999999942e-05]</msg>
<status status="PASS" starttime="20201112 09:54:27.144" endtime="20201112 09:54:27.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.140" endtime="20201112 09:54:27.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.149" endtime="20201112 09:54:27.151"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:27.153" endtime="20201112 09:54:27.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.151" endtime="20201112 09:54:27.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.148" endtime="20201112 09:54:27.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.779" endtime="20201112 09:54:27.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.778" endtime="20201112 09:54:27.174"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.182" endtime="20201112 09:54:27.201"></status>
</kw>
<msg timestamp="20201112 09:54:27.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.181" endtime="20201112 09:54:27.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.202" endtime="20201112 09:54:27.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.205" endtime="20201112 09:54:27.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.178" endtime="20201112 09:54:27.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.176" endtime="20201112 09:54:27.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.215" endtime="20201112 09:54:27.500"></status>
</kw>
<msg timestamp="20201112 09:54:27.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021879069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021977153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:27.213" endtime="20201112 09:54:27.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021879069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021977153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:27.504" endtime="20201112 09:54:27.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.512" endtime="20201112 09:54:27.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.211" endtime="20201112 09:54:27.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.209" endtime="20201112 09:54:27.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:27.519" level="INFO">${RESULT} = [{'time': 0.021977153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.808399999999828e-05, 'source_diff': 9.808399999999828e-05}, {'time': 0.022080083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:27.516" endtime="20201112 09:54:27.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:27.533" level="INFO">${ACCURACY} = {'time': [0.021977153, 0.022080083, 0.022182083, 0.022284097, 0.022386139, 0.022488111, 0.022590153, 0.022692125, 0.022794167, 0.022896139, 0.022998139, 0.023100167, 0.023202236, 0.023304167, 0.023406...</msg>
<status status="PASS" starttime="20201112 09:54:27.520" endtime="20201112 09:54:27.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.538" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 09:54:27.537" endtime="20201112 09:54:27.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.540" level="INFO">VALUE: [9.808399999999828e-05, 9.74019999999999e-05, 9.748599999999732e-05, 9.742999999999905e-05, 9.74860000000008e-05, 9.726400000000315e-05, 9.757000000000168e-05, 9.731900000000196e-05, 9.726399999999968e-05, 9.755599999999864e-05, 9.751399999999993e-05, 9.744500000000156e-05, 9.754200000000254e-05, 9.751399999999993e-05, 9.744500000000156e-05, 9.709800000000032e-05, 9.726399999999968e-05, 9.729099999999935e-05, 9.741699999999895e-05, 9.75279999999995e-05, 9.806899999999924e-05, 9.805499999999967e-05, 9.719399999999837e-05, 9.725000000000011e-05, 9.75279999999995e-05, 9.756899999999874e-05, 9.730600000000186e-05, 9.722300000000045e-05, 9.708400000000075e-05, 9.755599999999864e-05, 9.740299999999938e-05, 9.745799999999818e-05, 9.718100000000174e-05, 9.731899999999849e-05, 9.809700000000185e-05, 9.726399999999968e-05, 9.723600000000054e-05, 9.751399999999993e-05, 9.716599999999923e-05, 9.709700000000085e-05, 9.755600000000211e-05, 9.743099999999852e-05, 9.71669999999987e-05, 9.755600000000211e-05, 9.801400000000043e-05, 9.8028e-05, 9.709800000000032e-05, 9.744500000000156e-05, 9.758299999999831e-05, 9.807000000000218e-05]</msg>
<status status="PASS" starttime="20201112 09:54:27.539" endtime="20201112 09:54:27.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.534" endtime="20201112 09:54:27.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.544" endtime="20201112 09:54:27.545"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:27.547" endtime="20201112 09:54:27.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.546" endtime="20201112 09:54:27.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.542" endtime="20201112 09:54:27.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.175" endtime="20201112 09:54:27.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.174" endtime="20201112 09:54:27.568"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.577" endtime="20201112 09:54:27.595"></status>
</kw>
<msg timestamp="20201112 09:54:27.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.575" endtime="20201112 09:54:27.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.597" endtime="20201112 09:54:27.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.599" endtime="20201112 09:54:27.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.573" endtime="20201112 09:54:27.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.570" endtime="20201112 09:54:27.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.609" endtime="20201112 09:54:27.895"></status>
</kw>
<msg timestamp="20201112 09:54:27.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021783778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021882375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:27.608" endtime="20201112 09:54:27.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021783778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021882375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:27.899" endtime="20201112 09:54:27.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.908" endtime="20201112 09:54:27.909"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.605" endtime="20201112 09:54:27.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.603" endtime="20201112 09:54:27.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:27.914" level="INFO">${RESULT} = [{'time': 0.021882375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.859699999999888e-05, 'source_diff': 9.859699999999888e-05}, {'time': 0.021986306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:27.911" endtime="20201112 09:54:27.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:27.928" level="INFO">${ACCURACY} = {'time': [0.021882375, 0.021986306, 0.022089319, 0.022192333, 0.022295333, 0.022398361, 0.022502361, 0.022605361, 0.022708375, 0.022811375, 0.022914375, 0.023017431, 0.023121389, 0.023224403, 0.023327...</msg>
<status status="PASS" starttime="20201112 09:54:27.915" endtime="20201112 09:54:27.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.932" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 09:54:27.931" endtime="20201112 09:54:27.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.934" level="INFO">VALUE: [9.859699999999888e-05, 9.840300000000038e-05, 9.820799999999894e-05, 9.829100000000035e-05, 9.822200000000197e-05, 9.844399999999962e-05, 9.901399999999796e-05, 9.845799999999919e-05, 9.827800000000025e-05, 9.834699999999863e-05, 9.833299999999906e-05, 9.830600000000286e-05, 9.904200000000057e-05, 9.84860000000018e-05, 9.85280000000005e-05, 9.861099999999845e-05, 9.837500000000124e-05, 9.822299999999798e-05, 9.848599999999832e-05, 9.82080000000024e-05, 9.843000000000005e-05, 9.829100000000035e-05, 9.845799999999919e-05, 9.823599999999807e-05, 9.840300000000038e-05, 9.813900000000056e-05, 9.909699999999938e-05, 9.834800000000157e-05, 9.819499999999884e-05, 9.845899999999866e-05, 9.908399999999928e-05, 9.906999999999971e-05, 9.850000000000136e-05, 9.898700000000177e-05, 9.813899999999709e-05, 9.897199999999926e-05, 9.901399999999796e-05, 9.84020000000009e-05, 9.83470000000021e-05, 9.894400000000012e-05, 9.841699999999995e-05, 9.89860000000023e-05, 9.845900000000213e-05, 9.85280000000005e-05, 9.823600000000154e-05, 9.838900000000081e-05, 9.862500000000149e-05, 9.85410000000006e-05, 9.89999999999984e-05, 9.833399999999853e-05]</msg>
<status status="PASS" starttime="20201112 09:54:27.933" endtime="20201112 09:54:27.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.928" endtime="20201112 09:54:27.936"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.938" endtime="20201112 09:54:27.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:27.941" endtime="20201112 09:54:27.961"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.940" endtime="20201112 09:54:27.961"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.936" endtime="20201112 09:54:27.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.569" endtime="20201112 09:54:27.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.568" endtime="20201112 09:54:27.962"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.971" endtime="20201112 09:54:27.990"></status>
</kw>
<msg timestamp="20201112 09:54:27.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.969" endtime="20201112 09:54:27.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.992" endtime="20201112 09:54:27.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.994" endtime="20201112 09:54:27.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.967" endtime="20201112 09:54:27.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.965" endtime="20201112 09:54:27.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.005" endtime="20201112 09:54:28.291"></status>
</kw>
<msg timestamp="20201112 09:54:28.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022205722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022305194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:28.004" endtime="20201112 09:54:28.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022205722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022305194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:28.295" endtime="20201112 09:54:28.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.303" endtime="20201112 09:54:28.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.001" endtime="20201112 09:54:28.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.999" endtime="20201112 09:54:28.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:28.310" level="INFO">${RESULT} = [{'time': 0.022305194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.947199999999976e-05, 'source_diff': 9.947199999999976e-05}, {'time': 0.022410139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:28.307" endtime="20201112 09:54:28.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:28.324" level="INFO">${ACCURACY} = {'time': [0.022305194, 0.022410139, 0.022514139, 0.022619153, 0.022723167, 0.022828208, 0.022932181, 0.023036194, 0.023140181, 0.023244236, 0.023348222, 0.023452222, 0.023556222, 0.023661236, 0.023765...</msg>
<status status="PASS" starttime="20201112 09:54:28.311" endtime="20201112 09:54:28.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.328" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 09:54:28.327" endtime="20201112 09:54:28.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.331" level="INFO">VALUE: [9.947199999999976e-05, 9.979199999999785e-05, 9.943100000000052e-05, 0.0001000419999999981, 9.93479999999991e-05, 0.00010011099999999995, 9.947299999999923e-05, 9.952699999999856e-05, 9.933399999999953e-05, 9.91670000000007e-05, 9.91939999999969e-05, 9.945800000000019e-05, 9.955500000000117e-05, 0.0001000419999999981, 9.943100000000052e-05, 9.915299999999766e-05, 9.951400000000193e-05, 9.926400000000168e-05, 9.91670000000007e-05, 9.923599999999907e-05, 9.920899999999941e-05, 9.957000000000021e-05, 9.919499999999984e-05, 9.955600000000064e-05, 9.91939999999969e-05, 9.933300000000006e-05, 9.95280000000015e-05, 9.927699999999831e-05, 9.956900000000074e-05, 9.950000000000236e-05, 9.912500000000199e-05, 9.954200000000107e-05, 9.920899999999941e-05, 9.954200000000107e-05, 9.92080000000034e-05, 9.951399999999846e-05, 9.918100000000027e-05, 9.934699999999963e-05, 9.926399999999821e-05, 9.925000000000211e-05, 9.944500000000009e-05, 9.911100000000242e-05, 0.00010004099999999863, 9.940300000000138e-05, 9.92219999999995e-05, 0.00010005600000000114, 9.926399999999821e-05, 9.95419999999976e-05, 9.931899999999702e-05, 9.923600000000254e-05]</msg>
<status status="PASS" starttime="20201112 09:54:28.329" endtime="20201112 09:54:28.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.325" endtime="20201112 09:54:28.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.339" endtime="20201112 09:54:28.340"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:28.342" endtime="20201112 09:54:28.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.341" endtime="20201112 09:54:28.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.337" endtime="20201112 09:54:28.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.963" endtime="20201112 09:54:28.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.963" endtime="20201112 09:54:28.363"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.372" endtime="20201112 09:54:28.390"></status>
</kw>
<msg timestamp="20201112 09:54:28.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:28.370" endtime="20201112 09:54:28.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:28.392" endtime="20201112 09:54:28.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.394" endtime="20201112 09:54:28.397"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.368" endtime="20201112 09:54:28.398"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.366" endtime="20201112 09:54:28.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.404" endtime="20201112 09:54:28.690"></status>
</kw>
<msg timestamp="20201112 09:54:28.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022072944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022173847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:28.403" endtime="20201112 09:54:28.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022072944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022173847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:28.694" endtime="20201112 09:54:28.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.703" endtime="20201112 09:54:28.704"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.400" endtime="20201112 09:54:28.705"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.399" endtime="20201112 09:54:28.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:28.709" level="INFO">${RESULT} = [{'time': 0.022173847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010090299999999941, 'source_diff': 0.00010090299999999941}, {'time': 0.022279847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:28.706" endtime="20201112 09:54:28.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:28.722" level="INFO">${ACCURACY} = {'time': [0.022173847, 0.022279847, 0.022384792, 0.022489792, 0.022594806, 0.022699819, 0.022804847, 0.022909819, 0.023014847, 0.023119847, 0.023224861, 0.023329861, 0.023434875, 0.023540889, 0.023646...</msg>
<status status="PASS" starttime="20201112 09:54:28.710" endtime="20201112 09:54:28.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.727" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 09:54:28.726" endtime="20201112 09:54:28.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.729" level="INFO">VALUE: [0.00010090299999999941, 0.00010101399999999996, 0.00010022299999999998, 0.0001005280000000025, 0.00010029199999999835, 0.00010023600000000008, 0.00010027799999999878, 0.00010027700000000278, 0.00010031900000000149, 0.00010034700000000063, 0.00010024999999999964, 0.00010040299999999891, 0.00010026399999999921, 0.00010106999999999824, 0.0001010000000000004, 0.00010023600000000008, 0.00010107000000000171, 0.00010037499999999977, 0.00010044400000000162, 0.00010102799999999953, 0.00010105600000000214, 0.00010045899999999719, 0.00010031899999999802, 0.00010031899999999802, 0.0001001800000000018, 0.00010104099999999963, 0.00010105500000000267, 0.00010040299999999891, 0.0001002220000000005, 0.00010020899999999694, 0.00010031900000000149, 0.00010051399999999946, 0.00010105599999999867, 0.00010045900000000066, 0.00010012499999999952, 0.00010057000000000121, 0.00010037499999999977, 0.00010036199999999967, 0.00010109700000000138, 0.00010020799999999747, 0.00010027699999999931, 0.00010020800000000094, 0.00010059700000000088, 0.0001003610000000002, 0.00010048599999999686, 0.0001002220000000005, 0.00010041699999999848, 0.00010041699999999848, 0.00010018100000000127, 0.00010105599999999867]</msg>
<status status="PASS" starttime="20201112 09:54:28.728" endtime="20201112 09:54:28.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.723" endtime="20201112 09:54:28.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.733" endtime="20201112 09:54:28.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:28.737" endtime="20201112 09:54:28.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.735" endtime="20201112 09:54:28.757"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.731" endtime="20201112 09:54:28.757"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.364" endtime="20201112 09:54:28.757"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.363" endtime="20201112 09:54:28.757"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.767" endtime="20201112 09:54:28.786"></status>
</kw>
<msg timestamp="20201112 09:54:28.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:28.765" endtime="20201112 09:54:28.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:28.787" endtime="20201112 09:54:28.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.790" endtime="20201112 09:54:28.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.762" endtime="20201112 09:54:28.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.760" endtime="20201112 09:54:28.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.800" endtime="20201112 09:54:29.085"></status>
</kw>
<msg timestamp="20201112 09:54:29.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022534708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:28.798" endtime="20201112 09:54:29.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022534708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:29.089" endtime="20201112 09:54:29.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.097" endtime="20201112 09:54:29.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.795" endtime="20201112 09:54:29.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.794" endtime="20201112 09:54:29.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:29.103" level="INFO">${RESULT} = [{'time': 0.022534708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010131899999999902, 'source_diff': 0.00010131899999999902}, {'time': 0.022641681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:29.100" endtime="20201112 09:54:29.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:29.118" level="INFO">${ACCURACY} = {'time': [0.022534708, 0.022641681, 0.022747639, 0.022853667, 0.022960694, 0.023066681, 0.023172681, 0.023278681, 0.023384694, 0.023490694, 0.023597708, 0.023703708, 0.023809722, 0.023915736, 0.024022...</msg>
<status status="PASS" starttime="20201112 09:54:29.104" endtime="20201112 09:54:29.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.122" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 09:54:29.121" endtime="20201112 09:54:29.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.125" level="INFO">VALUE: [0.00010131899999999902, 0.00010179199999999985, 0.00010126400000000021, 0.00010120900000000141, 0.00010209699999999891, 0.0001013199999999985, 0.00010138900000000034, 0.00010138900000000034, 0.00010109700000000138, 0.00010125000000000065, 0.00010209699999999891, 0.00010112500000000052, 0.00010109699999999791, 0.00010113900000000009, 0.00010209699999999891, 0.00010145800000000219, 0.00010116699999999923, 0.00010120800000000194, 0.00010138900000000034, 0.00010130599999999892, 0.00010142999999999958, 0.00010137500000000077, 0.00010147200000000176, 0.0001020420000000001, 0.00010198600000000183, 0.00010130499999999945, 0.00010111100000000095, 0.00010198600000000183, 0.00010130499999999945, 0.00010134700000000163, 0.00010130499999999945, 0.00010126400000000021, 0.00010124999999999718, 0.0001020000000000014, 0.0001020420000000001, 0.00010147199999999829, 0.00010129099999999988, 0.00010127799999999978, 0.00010141699999999948, 0.0001015419999999996, 0.00010142999999999958, 0.0001020550000000002, 0.00010116599999999976, 0.00010206899999999977, 0.00010154100000000013, 0.00010206899999999977, 0.00010111100000000095, 0.00010145800000000219, 0.00010208399999999881, 0.0001020420000000001]</msg>
<status status="PASS" starttime="20201112 09:54:29.123" endtime="20201112 09:54:29.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.119" endtime="20201112 09:54:29.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.128" endtime="20201112 09:54:29.129"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:29.132" endtime="20201112 09:54:29.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.130" endtime="20201112 09:54:29.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.127" endtime="20201112 09:54:29.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.758" endtime="20201112 09:54:29.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.758" endtime="20201112 09:54:29.152"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.161" endtime="20201112 09:54:29.180"></status>
</kw>
<msg timestamp="20201112 09:54:29.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.159" endtime="20201112 09:54:29.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.181" endtime="20201112 09:54:29.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.184" endtime="20201112 09:54:29.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.157" endtime="20201112 09:54:29.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.155" endtime="20201112 09:54:29.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.194" endtime="20201112 09:54:29.479"></status>
</kw>
<msg timestamp="20201112 09:54:29.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022295014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:29.192" endtime="20201112 09:54:29.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022295014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:29.483" endtime="20201112 09:54:29.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.491" endtime="20201112 09:54:29.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.190" endtime="20201112 09:54:29.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.188" endtime="20201112 09:54:29.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:29.497" level="INFO">${RESULT} = [{'time': 0.022295014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010304199999999764, 'source_diff': 0.00010304199999999764}, {'time': 0.022402944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:29.494" endtime="20201112 09:54:29.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:29.511" level="INFO">${ACCURACY} = {'time': [0.022295014, 0.022402944, 0.022509944, 0.022617, 0.022723972, 0.022830986, 0.022938986, 0.023046, 0.023153, 0.02326, 0.023368069, 0.023475028, 0.023582028, 0.023689042, 0.023796111, 0.023903...</msg>
<status status="PASS" starttime="20201112 09:54:29.498" endtime="20201112 09:54:29.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.515" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 09:54:29.514" endtime="20201112 09:54:29.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.517" level="INFO">VALUE: [0.00010304199999999764, 0.00010245799999999972, 0.00010237500000000177, 0.0001023060000000034, 0.00010240299999999744, 0.00010230500000000045, 0.0001030000000000024, 0.00010223600000000208, 0.0001021939999999999, 0.0001021939999999999, 0.00010311100000000295, 0.00010212499999999805, 0.00010233400000000253, 0.00010226400000000122, 0.00010223600000000208, 0.00010222299999999851, 0.0001030420000000011, 0.0001024299999999971, 0.00010308300000000034, 0.00010229099999999741, 0.00010254100000000113, 0.00010212500000000152, 0.00010227800000000078, 0.00010245799999999972, 0.00010229200000000035, 0.00010304199999999764, 0.00010302799999999807, 0.00010212500000000152, 0.00010248599999999886, 0.00010233399999999906, 0.000102513999999998, 0.00010232000000000296, 0.00010245799999999972, 0.0001022359999999986, 0.00010245799999999972, 0.00010240300000000091, 0.00010247200000000276, 0.00010254100000000113, 0.00010245799999999972, 0.000102513999999998, 0.00010218100000000327, 0.00010216700000000023, 0.0001023749999999983, 0.00010240300000000091, 0.00010213900000000109, 0.00010215200000000119, 0.00010245899999999919, 0.00010238900000000134, 0.00010245799999999972, 0.00010226299999999827]</msg>
<status status="PASS" starttime="20201112 09:54:29.516" endtime="20201112 09:54:29.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.511" endtime="20201112 09:54:29.519"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.521" endtime="20201112 09:54:29.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:29.525" endtime="20201112 09:54:29.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.523" endtime="20201112 09:54:29.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.519" endtime="20201112 09:54:29.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.153" endtime="20201112 09:54:29.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.153" endtime="20201112 09:54:29.545"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.554" endtime="20201112 09:54:29.574"></status>
</kw>
<msg timestamp="20201112 09:54:29.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.552" endtime="20201112 09:54:29.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.575" endtime="20201112 09:54:29.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.578" endtime="20201112 09:54:29.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.550" endtime="20201112 09:54:29.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.548" endtime="20201112 09:54:29.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.588" endtime="20201112 09:54:29.874"></status>
</kw>
<msg timestamp="20201112 09:54:29.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022059764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022163681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:29.586" endtime="20201112 09:54:29.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022059764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022163681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:29.878" endtime="20201112 09:54:29.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.886" endtime="20201112 09:54:29.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.584" endtime="20201112 09:54:29.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.582" endtime="20201112 09:54:29.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:29.893" level="INFO">${RESULT} = [{'time': 0.022163681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010391700000000198, 'source_diff': 0.00010391700000000198}, {'time': 0.022272597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:29.890" endtime="20201112 09:54:29.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:29.906" level="INFO">${ACCURACY} = {'time': [0.022163681, 0.022272597, 0.022380625, 0.022488681, 0.022596625, 0.022704639, 0.022812653, 0.022920639, 0.023028667, 0.023136681, 0.023244681, 0.023352681, 0.023460681, 0.023569708, 0.023677...</msg>
<status status="PASS" starttime="20201112 09:54:29.894" endtime="20201112 09:54:29.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.910" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 09:54:29.909" endtime="20201112 09:54:29.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.913" level="INFO">VALUE: [0.00010391700000000198, 0.00010354100000000213, 0.00010338900000000234, 0.00010359799999999988, 0.0001035559999999977, 0.00010349999999999943, 0.00010336099999999973, 0.00010311099999999948, 0.00010322299999999951, 0.00010313899999999862, 0.00010326399999999875, 0.00010338899999999887, 0.0001033749999999993, 0.00010404100000000263, 0.00010329099999999841, 0.00010402799999999907, 0.00010320800000000047, 0.00010343000000000158, 0.00010338899999999887, 0.00010338900000000234, 0.00010312500000000252, 0.00010341700000000148, 0.0001032359999999996, 0.00010316600000000176, 0.00010334700000000016, 0.00010320900000000341, 0.00010320899999999994, 0.00010331899999999755, 0.00010408300000000134, 0.00010320800000000047, 0.00010327700000000231, 0.00010348600000000333, 0.00010351400000000247, 0.00010312499999999905, 0.00010312500000000252, 0.00010327799999999832, 0.00010340299999999844, 0.00010319500000000037, 0.00010348599999999986, 0.00010326399999999875, 0.00010330600000000092, 0.00010402800000000254, 0.0001033480000000031, 0.00010363799999999965, 0.00010336099999999973, 0.00010341700000000148, 0.0001040139999999995, 0.0001040550000000022, 0.00010358300000000084, 0.0001032359999999996]</msg>
<status status="PASS" starttime="20201112 09:54:29.912" endtime="20201112 09:54:29.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.907" endtime="20201112 09:54:29.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.917" endtime="20201112 09:54:29.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:29.920" endtime="20201112 09:54:29.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.919" endtime="20201112 09:54:29.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.915" endtime="20201112 09:54:29.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.546" endtime="20201112 09:54:29.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.546" endtime="20201112 09:54:29.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.409" endtime="20201112 09:54:29.941"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:29.946" endtime="20201112 09:54:29.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.944" endtime="20201112 09:54:29.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.942" endtime="20201112 09:54:29.966"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:50.299" endtime="20201112 09:54:29.966" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:29.974" endtime="20201112 09:54:29.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.973" endtime="20201112 09:54:29.994"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.008" endtime="20201112 09:54:30.025"></status>
</kw>
<msg timestamp="20201112 09:54:30.025" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.007" endtime="20201112 09:54:30.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.028" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.026" endtime="20201112 09:54:30.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.031" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:30.029" endtime="20201112 09:54:30.031"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:30.004" endtime="20201112 09:54:30.032"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:30.002" endtime="20201112 09:54:30.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.000" endtime="20201112 09:54:30.032"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:30.036" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:30.035" endtime="20201112 09:54:30.037"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.033" endtime="20201112 09:54:30.037"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.999" endtime="20201112 09:54:30.037"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.998" endtime="20201112 09:54:30.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.038" endtime="20201112 09:54:30.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.997" endtime="20201112 09:54:30.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.995" endtime="20201112 09:54:30.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.971" endtime="20201112 09:54:30.040"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.051" endtime="20201112 09:54:30.065"></status>
</kw>
<msg timestamp="20201112 09:54:30.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.049" endtime="20201112 09:54:30.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.066" endtime="20201112 09:54:30.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.069" endtime="20201112 09:54:30.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.046" endtime="20201112 09:54:30.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.044" endtime="20201112 09:54:30.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.079" endtime="20201112 09:54:30.360"></status>
</kw>
<msg timestamp="20201112 09:54:30.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069288444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069293569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:30.076" endtime="20201112 09:54:30.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069288444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069293569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:30.365" endtime="20201112 09:54:30.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.373" endtime="20201112 09:54:30.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.074" endtime="20201112 09:54:30.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.072" endtime="20201112 09:54:30.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:30.380" level="INFO">${RESULT} = [{'time': 0.069293569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.124999999994717e-06, 'source_diff': 5.124999999994717e-06}, {'time': 0.069299125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:30.376" endtime="20201112 09:54:30.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:30.393" level="INFO">${ACCURACY} = {'time': [0.069293569, 0.069299125, 0.06930425, 0.069309056, 0.069314208, 0.069319111, 0.06932425, 0.069329125, 0.069334264, 0.069339028, 0.069344292, 0.069349125, 0.069354097, 0.069359042, 0.06936409...</msg>
<status status="PASS" starttime="20201112 09:54:30.381" endtime="20201112 09:54:30.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.398" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 09:54:30.397" endtime="20201112 09:54:30.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.400" level="INFO">VALUE: [5.124999999994717e-06, 3.7219999999976716e-06, 3.6389999999997258e-06, 3.541999999995271e-06, 3.597000000007955e-06, 3.6389999999997258e-06, 3.611000000000586e-06, 3.583000000001446e-06, 3.597000000007955e-06, 3.596999999994077e-06, 4.013999999996631e-06, 3.596999999994077e-06, 3.597000000007955e-06, 3.541999999995271e-06, 3.611000000000586e-06, 4.596999999995077e-06, 3.7220000000115494e-06, 4.583000000002446e-06, 3.7219999999976716e-06, 4.611000000001586e-06, 4.4720000000053606e-06, 4.457999999998852e-06, 4.457999999998852e-06, 4.444999999991817e-06, 3.7229999999971453e-06, 4.596999999995077e-06, 4.4729999999909564e-06, 4.2499999999973115e-06, 3.707999999991163e-06, 4.597000000008955e-06, 3.7229999999971453e-06, 3.597000000007955e-06, 3.596999999994077e-06, 3.597000000007955e-06, 4.013999999996631e-06, 4.000000000004e-06, 4.58400000000192e-06, 4.4720000000053606e-06, 3.7359999999903026e-06, 3.5840000000009198e-06, 4.014000000010509e-06, 4.013999999996631e-06, 4.638999999986848e-06, 4.26400000000382e-06, 3.7220000000115494e-06, 3.5980000000074286e-06, 4.583000000002446e-06, 4.458999999998325e-06, 4.4720000000053606e-06, 3.652999999992357e-06]</msg>
<status status="PASS" starttime="20201112 09:54:30.399" endtime="20201112 09:54:30.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.394" endtime="20201112 09:54:30.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.403" endtime="20201112 09:54:30.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:30.407" endtime="20201112 09:54:30.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.405" endtime="20201112 09:54:30.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.402" endtime="20201112 09:54:30.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.042" endtime="20201112 09:54:30.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.042" endtime="20201112 09:54:30.428"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.437" endtime="20201112 09:54:30.450"></status>
</kw>
<msg timestamp="20201112 09:54:30.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.435" endtime="20201112 09:54:30.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.452" endtime="20201112 09:54:30.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.455" endtime="20201112 09:54:30.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.432" endtime="20201112 09:54:30.457"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.430" endtime="20201112 09:54:30.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.464" endtime="20201112 09:54:30.754"></status>
</kw>
<msg timestamp="20201112 09:54:30.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02231125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:30.462" endtime="20201112 09:54:30.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02231125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:30.759" endtime="20201112 09:54:30.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.767" endtime="20201112 09:54:30.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.459" endtime="20201112 09:54:30.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.458" endtime="20201112 09:54:30.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:30.774" level="INFO">${RESULT} = [{'time': 0.022316806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.022323333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:30.770" endtime="20201112 09:54:30.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:30.787" level="INFO">${ACCURACY} = {'time': [0.022316806, 0.022323333, 0.022330264, 0.022336306, 0.022342389, 0.022349375, 0.022356306, 0.022363208, 0.022370278, 0.022377222, 0.022383222, 0.02238925, 0.022395347, 0.022401208, 0.0224073...</msg>
<status status="PASS" starttime="20201112 09:54:30.775" endtime="20201112 09:54:30.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.792" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 09:54:30.791" endtime="20201112 09:54:30.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.794" level="INFO">VALUE: [5.556000000000311e-06, 4.679999999999962e-06, 5.3889999999980065e-06, 4.653000000000296e-06, 4.903000000000546e-06, 5.347000000002766e-06, 5.34799999999877e-06, 5.346999999999297e-06, 5.375000000001906e-06, 5.346999999999297e-06, 4.472000000001891e-06, 4.471999999998422e-06, 4.693999999999532e-06, 4.693999999999532e-06, 4.707999999999102e-06, 5.360999999998867e-06, 5.360999999998867e-06, 4.917000000000116e-06, 4.457999999998852e-06, 5.569999999999881e-06, 5.582999999999977e-06, 4.7089999999985754e-06, 5.360999999998867e-06, 4.666999999999866e-06, 4.750000000001281e-06, 4.917000000000116e-06, 5.1389999999977565e-06, 4.472000000001891e-06, 5.582999999999977e-06, 5.3339999999992005e-06, 4.679999999999962e-06, 5.3339999999992005e-06, 5.152999999997326e-06, 4.471999999998422e-06, 4.902000000001072e-06, 4.917000000000116e-06, 4.901999999997603e-06, 4.680999999999436e-06, 5.264000000001351e-06, 4.695000000002475e-06, 5.346999999999297e-06, 4.666000000000392e-06, 5.3339999999992005e-06, 5.361000000002336e-06, 4.707999999999102e-06, 4.679999999999962e-06, 4.8889999999975065e-06, 5.58400000000292e-06, 5.346999999999297e-06, 4.722000000002141e-06]</msg>
<status status="PASS" starttime="20201112 09:54:30.793" endtime="20201112 09:54:30.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.788" endtime="20201112 09:54:30.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.797" endtime="20201112 09:54:30.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:30.801" endtime="20201112 09:54:30.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.799" endtime="20201112 09:54:30.821"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.796" endtime="20201112 09:54:30.821"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.429" endtime="20201112 09:54:30.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.428" endtime="20201112 09:54:30.822"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.830" endtime="20201112 09:54:30.844"></status>
</kw>
<msg timestamp="20201112 09:54:30.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.829" endtime="20201112 09:54:30.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.846" endtime="20201112 09:54:30.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.848" endtime="20201112 09:54:30.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.826" endtime="20201112 09:54:30.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.824" endtime="20201112 09:54:30.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.857" endtime="20201112 09:54:31.139"></status>
</kw>
<msg timestamp="20201112 09:54:31.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021843028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:30.856" endtime="20201112 09:54:31.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021843028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:31.143" endtime="20201112 09:54:31.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.151" endtime="20201112 09:54:31.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.853" endtime="20201112 09:54:31.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.851" endtime="20201112 09:54:31.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:31.158" level="INFO">${RESULT} = [{'time': 0.021843028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.084000000000951e-06, 'source_diff': 7.084000000000951e-06}, {'time': 0.02185075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:31.155" endtime="20201112 09:54:31.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:31.171" level="INFO">${ACCURACY} = {'time': [0.021843028, 0.02185075, 0.021857736, 0.021864667, 0.021871708, 0.021878806, 0.021885806, 0.021893764, 0.021900639, 0.021907653, 0.021914625, 0.021921819, 0.021928694, 0.021936681, 0.0219436...</msg>
<status status="PASS" starttime="20201112 09:54:31.159" endtime="20201112 09:54:31.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.176" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 09:54:31.175" endtime="20201112 09:54:31.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.178" level="INFO">VALUE: [7.084000000000951e-06, 5.9439999999973125e-06, 5.7639999999983815e-06, 5.569999999999881e-06, 5.805000000001087e-06, 5.806000000000561e-06, 5.806000000000561e-06, 6.513999999999132e-06, 5.556000000000311e-06, 5.569999999999881e-06, 5.596999999999547e-06, 6.040999999998298e-06, 5.5689999999969375e-06, 6.459000000000326e-06, 5.637999999998783e-06, 6.472000000000422e-06, 5.596999999999547e-06, 5.569999999999881e-06, 5.792000000000991e-06, 6.264000000002351e-06, 6.249999999999312e-06, 5.569999999999881e-06, 5.790999999998048e-06, 5.528000000001171e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 5.569000000000407e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.764000000001851e-06, 6.2090000000000756e-06, 5.833000000000227e-06, 6.5279999999987015e-06, 5.806000000000561e-06, 5.596999999999547e-06, 5.846999999999797e-06, 5.805000000001087e-06, 5.791999999997521e-06, 5.582999999999977e-06, 5.8339999999997005e-06, 6.458000000000852e-06, 6.429999999998243e-06, 5.792000000000991e-06, 6.4579999999973825e-06, 5.84800000000274e-06, 5.58400000000292e-06, 6.249999999999312e-06, 5.5979999999990204e-06, 6.443999999997813e-06, 5.582999999999977e-06]</msg>
<status status="PASS" starttime="20201112 09:54:31.177" endtime="20201112 09:54:31.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.172" endtime="20201112 09:54:31.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.182" endtime="20201112 09:54:31.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:31.185" endtime="20201112 09:54:31.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.184" endtime="20201112 09:54:31.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.180" endtime="20201112 09:54:31.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.823" endtime="20201112 09:54:31.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.822" endtime="20201112 09:54:31.206"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.215" endtime="20201112 09:54:31.229"></status>
</kw>
<msg timestamp="20201112 09:54:31.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.213" endtime="20201112 09:54:31.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.231" endtime="20201112 09:54:31.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.233" endtime="20201112 09:54:31.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.211" endtime="20201112 09:54:31.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.209" endtime="20201112 09:54:31.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.242" endtime="20201112 09:54:31.528"></status>
</kw>
<msg timestamp="20201112 09:54:31.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022022431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022029764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:31.241" endtime="20201112 09:54:31.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022022431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022029764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:31.532" endtime="20201112 09:54:31.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.541" endtime="20201112 09:54:31.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.238" endtime="20201112 09:54:31.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.236" endtime="20201112 09:54:31.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:31.547" level="INFO">${RESULT} = [{'time': 0.022029764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.333000000001727e-06, 'source_diff': 7.333000000001727e-06}, {'time': 0.022038181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:31.544" endtime="20201112 09:54:31.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:31.561" level="INFO">${ACCURACY} = {'time': [0.022029764, 0.022038181, 0.022046264, 0.022054361, 0.022062181, 0.022071292, 0.022079319, 0.022088167, 0.022096292, 0.022105236, 0.022113292, 0.022122319, 0.022131361, 0.022139292, 0.022148...</msg>
<status status="PASS" starttime="20201112 09:54:31.548" endtime="20201112 09:54:31.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.565" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 09:54:31.564" endtime="20201112 09:54:31.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.568" level="INFO">VALUE: [7.333000000001727e-06, 6.638999999999257e-06, 6.708000000001102e-06, 6.917000000002116e-06, 6.459000000000326e-06, 7.389000000000007e-06, 6.915999999999173e-06, 7.360999999997397e-06, 6.695000000001006e-06, 7.347000000001297e-06, 6.9169999999986465e-06, 7.361000000000867e-06, 7.360999999997397e-06, 6.7230000000001455e-06, 7.347000000001297e-06, 6.4729999999998955e-06, 6.472000000000422e-06, 6.651999999999353e-06, 6.693999999998063e-06, 7.334000000001201e-06, 6.681000000001436e-06, 6.736000000000242e-06, 7.333000000001727e-06, 6.680000000001962e-06, 6.472000000000422e-06, 6.915999999999173e-06, 7.332999999998258e-06, 7.3469999999978275e-06, 7.3469999999978275e-06, 6.458000000000852e-06, 7.347000000001297e-06, 6.694000000001532e-06, 7.319999999998161e-06, 6.7079999999976325e-06, 6.665999999998923e-06, 7.360999999997397e-06, 6.915999999999173e-06, 7.138999999999757e-06, 7.3469999999978275e-06, 7.333000000001727e-06, 7.360999999997397e-06, 6.9029999999990765e-06, 6.485999999999992e-06, 6.694000000001532e-06, 7.3620000000003405e-06, 6.638999999999257e-06, 6.472000000000422e-06, 7.318999999998688e-06, 6.485999999999992e-06, 7.652000000000353e-06]</msg>
<status status="PASS" starttime="20201112 09:54:31.566" endtime="20201112 09:54:31.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.561" endtime="20201112 09:54:31.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.571" endtime="20201112 09:54:31.573"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:31.575" endtime="20201112 09:54:31.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.573" endtime="20201112 09:54:31.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.570" endtime="20201112 09:54:31.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.207" endtime="20201112 09:54:31.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.207" endtime="20201112 09:54:31.596"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.604" endtime="20201112 09:54:31.618"></status>
</kw>
<msg timestamp="20201112 09:54:31.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.603" endtime="20201112 09:54:31.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.620" endtime="20201112 09:54:31.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.622" endtime="20201112 09:54:31.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.600" endtime="20201112 09:54:31.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.598" endtime="20201112 09:54:31.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.631" endtime="20201112 09:54:31.916"></status>
</kw>
<msg timestamp="20201112 09:54:31.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021893153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021901361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:31.630" endtime="20201112 09:54:31.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021893153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021901361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:31.920" endtime="20201112 09:54:31.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.928" endtime="20201112 09:54:31.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.627" endtime="20201112 09:54:31.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.625" endtime="20201112 09:54:31.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:31.935" level="INFO">${RESULT} = [{'time': 0.021901361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.021910944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:31.931" endtime="20201112 09:54:31.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:31.948" level="INFO">${ACCURACY} = {'time': [0.021901361, 0.021910944, 0.021920972, 0.021930042, 0.021939958, 0.021948833, 0.021957931, 0.021967056, 0.021976931, 0.021986944, 0.021995847, 0.022004847, 0.022013875, 0.022024069, 0.022032...</msg>
<status status="PASS" starttime="20201112 09:54:31.936" endtime="20201112 09:54:31.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.952" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 09:54:31.951" endtime="20201112 09:54:31.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.955" level="INFO">VALUE: [8.208000000002602e-06, 8.041000000000298e-06, 8.471999999998953e-06, 7.791999999999522e-06, 8.457999999999383e-06, 7.583000000001977e-06, 7.555999999998841e-06, 7.805999999999091e-06, 8.237000000001216e-06, 8.458000000002852e-06, 7.540999999999798e-06, 7.583000000001977e-06, 7.805999999999091e-06, 8.486000000001992e-06, 7.5969999999980775e-06, 8.194999999999036e-06, 7.791000000000048e-06, 7.569000000002407e-06, 7.791999999999522e-06, 7.847000000001797e-06, 7.568999999998938e-06, 7.584000000001451e-06, 8.472999999998426e-06, 7.582999999998508e-06, 7.584000000001451e-06, 7.597000000001547e-06, 7.570000000001881e-06, 8.459000000002326e-06, 7.540999999999798e-06, 8.471999999998953e-06, 8.444999999999286e-06, 8.249999999997842e-06, 7.805999999999091e-06, 8.319999999999161e-06, 8.485999999998523e-06, 7.583999999997981e-06, 7.736000000001242e-06, 7.5969999999980775e-06, 8.542000000000272e-06, 7.598000000001021e-06, 7.583999999997981e-06, 8.222000000002172e-06, 7.570000000001881e-06, 8.249999999997842e-06, 8.026999999997259e-06, 8.541000000000798e-06, 8.471999999998953e-06, 7.584000000001451e-06, 8.250000000001312e-06, 7.597000000001547e-06]</msg>
<status status="PASS" starttime="20201112 09:54:31.953" endtime="20201112 09:54:31.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.949" endtime="20201112 09:54:31.956"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.958" endtime="20201112 09:54:31.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:31.962" endtime="20201112 09:54:31.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.960" endtime="20201112 09:54:31.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.957" endtime="20201112 09:54:31.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.597" endtime="20201112 09:54:31.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.596" endtime="20201112 09:54:31.983"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.991" endtime="20201112 09:54:32.006"></status>
</kw>
<msg timestamp="20201112 09:54:32.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.990" endtime="20201112 09:54:32.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.008" endtime="20201112 09:54:32.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.010" endtime="20201112 09:54:32.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.987" endtime="20201112 09:54:32.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.985" endtime="20201112 09:54:32.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.019" endtime="20201112 09:54:32.309"></status>
</kw>
<msg timestamp="20201112 09:54:32.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02212075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022130736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:32.018" endtime="20201112 09:54:32.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02212075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022130736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:32.313" endtime="20201112 09:54:32.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.321" endtime="20201112 09:54:32.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.015" endtime="20201112 09:54:32.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.013" endtime="20201112 09:54:32.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:32.328" level="INFO">${RESULT} = [{'time': 0.022130736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.986000000000023e-06, 'source_diff': 9.986000000000023e-06}, {'time': 0.022141306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:32.325" endtime="20201112 09:54:32.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:32.386" level="INFO">${ACCURACY} = {'time': [0.022130736, 0.022141306, 0.022151389, 0.022162333, 0.022172514, 0.022182375, 0.0221935, 0.022203389, 0.022213347, 0.022223417, 0.022234444, 0.022244347, 0.022254361, 0.022264458, 0.02227447...</msg>
<status status="PASS" starttime="20201112 09:54:32.329" endtime="20201112 09:54:32.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.391" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 09:54:32.390" endtime="20201112 09:54:32.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.393" level="INFO">VALUE: [9.986000000000023e-06, 8.917000000000647e-06, 8.667000000000397e-06, 9.346999999999828e-06, 8.917000000000647e-06, 8.417000000000147e-06, 9.583000000000508e-06, 8.694999999999536e-06, 8.443999999999813e-06, 8.694999999999536e-06, 9.346999999999828e-06, 8.458000000002852e-06, 8.443999999999813e-06, 8.930000000000743e-06, 8.666000000000923e-06, 9.360999999999398e-06, 8.707999999999633e-06, 9.346999999999828e-06, 8.902000000001603e-06, 9.375000000002437e-06, 9.346999999999828e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.457999999999383e-06, 9.570000000000412e-06, 9.124999999998717e-06, 9.333000000000258e-06, 8.680000000000493e-06, 9.151999999998384e-06, 8.875000000001937e-06, 8.916000000001173e-06, 9.374999999998967e-06, 8.458000000002852e-06, 9.583999999999981e-06, 9.375000000002437e-06, 9.319000000000688e-06, 8.471999999998953e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.707999999999633e-06, 9.570000000000412e-06, 8.694000000000063e-06, 9.346999999999828e-06, 8.694999999999536e-06, 8.514000000001132e-06, 8.667000000000397e-06, 9.360999999999398e-06, 8.694000000000063e-06, 9.361000000002867e-06, 9.306000000000592e-06]</msg>
<status status="PASS" starttime="20201112 09:54:32.392" endtime="20201112 09:54:32.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.387" endtime="20201112 09:54:32.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.397" endtime="20201112 09:54:32.398"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:32.400" endtime="20201112 09:54:32.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.399" endtime="20201112 09:54:32.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.395" endtime="20201112 09:54:32.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.984" endtime="20201112 09:54:32.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.983" endtime="20201112 09:54:32.421"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.430" endtime="20201112 09:54:32.444"></status>
</kw>
<msg timestamp="20201112 09:54:32.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.429" endtime="20201112 09:54:32.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.446" endtime="20201112 09:54:32.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.448" endtime="20201112 09:54:32.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.425" endtime="20201112 09:54:32.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.423" endtime="20201112 09:54:32.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.457" endtime="20201112 09:54:32.740"></status>
</kw>
<msg timestamp="20201112 09:54:32.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02259725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022608347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:32.456" endtime="20201112 09:54:32.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02259725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022608347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:32.744" endtime="20201112 09:54:32.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.753" endtime="20201112 09:54:32.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.453" endtime="20201112 09:54:32.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.452" endtime="20201112 09:54:32.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:32.760" level="INFO">${RESULT} = [{'time': 0.022608347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1097000000001578e-05, 'source_diff': 1.1097000000001578e-05}, {'time': 0.022619847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:32.757" endtime="20201112 09:54:32.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:32.773" level="INFO">${ACCURACY} = {'time': [0.022608347, 0.022619847, 0.022630806, 0.022641958, 0.022652778, 0.022663833, 0.022674861, 0.022686764, 0.022697833, 0.02270875, 0.02271975, 0.022730889, 0.022741931, 0.022753861, 0.02276488...</msg>
<status status="PASS" starttime="20201112 09:54:32.761" endtime="20201112 09:54:32.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.778" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 09:54:32.777" endtime="20201112 09:54:32.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.780" level="INFO">VALUE: [1.1097000000001578e-05, 1.0027999999998732e-05, 9.583999999999981e-06, 9.819000000001188e-06, 9.513999999998662e-06, 9.847000000000328e-06, 9.819000000001188e-06, 1.0222000000000703e-05, 9.791000000002048e-06, 9.542000000001272e-06, 9.569000000000938e-06, 9.735999999999773e-06, 9.820000000000662e-06, 1.0236000000000273e-05, 9.570000000000412e-06, 9.806000000001092e-06, 9.861999999999371e-06, 9.819000000001188e-06, 9.583000000000508e-06, 9.805000000001618e-06, 9.569000000000938e-06, 9.570000000000412e-06, 1.0458000000001383e-05, 1.0249999999999843e-05, 9.583999999999981e-06, 9.764000000002382e-06, 9.791000000002048e-06, 1.0249999999999843e-05, 1.0236000000000273e-05, 1.0471999999997483e-05, 9.597000000000078e-06, 9.805000000001618e-06, 1.0236000000000273e-05, 9.819999999997192e-06, 9.583000000000508e-06, 9.806000000001092e-06, 1.0013999999999162e-05, 1.0236000000000273e-05, 9.583999999999981e-06, 9.749999999999343e-06, 1.0236000000000273e-05, 9.583999999999981e-06, 1.0277999999998982e-05, 1.0472000000000953e-05, 9.583999999999981e-06, 1.0471999999997483e-05, 9.569000000000938e-06, 9.569999999996942e-06, 9.806000000001092e-06, 1.0236000000000273e-05]</msg>
<status status="PASS" starttime="20201112 09:54:32.779" endtime="20201112 09:54:32.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.775" endtime="20201112 09:54:32.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.784" endtime="20201112 09:54:32.785"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:32.788" endtime="20201112 09:54:32.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.786" endtime="20201112 09:54:32.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.782" endtime="20201112 09:54:32.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.422" endtime="20201112 09:54:32.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.421" endtime="20201112 09:54:32.808"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.818" endtime="20201112 09:54:32.832"></status>
</kw>
<msg timestamp="20201112 09:54:32.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.816" endtime="20201112 09:54:32.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.834" endtime="20201112 09:54:32.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.837" endtime="20201112 09:54:32.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.813" endtime="20201112 09:54:32.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.811" endtime="20201112 09:54:32.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.846" endtime="20201112 09:54:33.132"></status>
</kw>
<msg timestamp="20201112 09:54:33.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022921806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022933111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:32.844" endtime="20201112 09:54:33.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022921806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022933111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:33.137" endtime="20201112 09:54:33.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.145" endtime="20201112 09:54:33.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.841" endtime="20201112 09:54:33.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.840" endtime="20201112 09:54:33.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:33.152" level="INFO">${RESULT} = [{'time': 0.022933111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1304999999999649e-05, 'source_diff': 1.1304999999999649e-05}, {'time': 0.022945528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:33.148" endtime="20201112 09:54:33.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:33.165" level="INFO">${ACCURACY} = {'time': [0.022933111, 0.022945528, 0.022958708, 0.022971597, 0.022984556, 0.022996625, 0.023008653, 0.023020583, 0.023032569, 0.023045611, 0.023057681, 0.023070542, 0.023082681, 0.023094583, 0.023107...</msg>
<status status="PASS" starttime="20201112 09:54:33.153" endtime="20201112 09:54:33.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.170" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 09:54:33.168" endtime="20201112 09:54:33.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.172" level="INFO">VALUE: [1.1304999999999649e-05, 1.0709000000001107e-05, 1.1583000000002508e-05, 1.1332999999998788e-05, 1.1362000000000871e-05, 1.0541999999998802e-05, 1.0916999999999177e-05, 1.0679999999999024e-05, 1.0472000000000953e-05, 1.1333000000002258e-05, 1.0680999999998497e-05, 1.1360999999997928e-05, 1.0902999999999607e-05, 1.0457999999997913e-05, 1.1361000000001398e-05, 1.1375000000000968e-05, 1.0931000000002217e-05, 1.1361000000001398e-05, 1.1332999999998788e-05, 1.1568999999999469e-05, 1.1165999999999954e-05, 1.1332999999998788e-05, 1.0694000000002063e-05, 1.0681000000001967e-05, 1.0693999999998594e-05, 1.0916999999999177e-05, 1.0750000000000343e-05, 1.0709000000001107e-05, 1.0444000000001813e-05, 1.0459000000000857e-05, 1.0930999999998747e-05, 1.1111000000001148e-05, 1.1360999999997928e-05, 1.0902999999999607e-05, 1.1138000000000814e-05, 1.0916999999999177e-05, 1.0695000000001537e-05, 1.0693999999998594e-05, 1.1389000000000538e-05, 1.0681000000001967e-05, 1.1638999999997318e-05, 1.1360999999997928e-05, 1.0679999999999024e-05, 1.1541999999999802e-05, 1.0693999999998594e-05, 1.1361000000001398e-05, 1.0679999999999024e-05, 1.0763999999999913e-05, 1.1429999999999774e-05, 1.1361000000001398e-05]</msg>
<status status="PASS" starttime="20201112 09:54:33.171" endtime="20201112 09:54:33.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.166" endtime="20201112 09:54:33.173"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.176" endtime="20201112 09:54:33.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:33.179" endtime="20201112 09:54:33.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.178" endtime="20201112 09:54:33.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.174" endtime="20201112 09:54:33.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.809" endtime="20201112 09:54:33.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.809" endtime="20201112 09:54:33.200"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.208" endtime="20201112 09:54:33.223"></status>
</kw>
<msg timestamp="20201112 09:54:33.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.207" endtime="20201112 09:54:33.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.225" endtime="20201112 09:54:33.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.227" endtime="20201112 09:54:33.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.204" endtime="20201112 09:54:33.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.202" endtime="20201112 09:54:33.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.236" endtime="20201112 09:54:33.520"></status>
</kw>
<msg timestamp="20201112 09:54:33.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:33.235" endtime="20201112 09:54:33.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:33.525" endtime="20201112 09:54:33.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.533" endtime="20201112 09:54:33.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.232" endtime="20201112 09:54:33.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.231" endtime="20201112 09:54:33.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:33.540" level="INFO">${RESULT} = [{'time': 0.022610611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3110999999999678e-05, 'source_diff': 1.3110999999999678e-05}, {'time': 0.02262425, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:54:33.536" endtime="20201112 09:54:33.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:33.553" level="INFO">${ACCURACY} = {'time': [0.022610611, 0.02262425, 0.022638319, 0.022651278, 0.02266425, 0.022677194, 0.022691306, 0.022705139, 0.022718264, 0.022731153, 0.022744222, 0.022757167, 0.022771292, 0.022785208, 0.02279931...</msg>
<status status="PASS" starttime="20201112 09:54:33.541" endtime="20201112 09:54:33.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.558" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 09:54:33.557" endtime="20201112 09:54:33.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.560" level="INFO">VALUE: [1.3110999999999678e-05, 1.1805999999999622e-05, 1.2471999999999483e-05, 1.1597000000002078e-05, 1.1582999999999039e-05, 1.1805000000000149e-05, 1.2195000000003037e-05, 1.2249999999998373e-05, 1.1624999999997748e-05, 1.1597000000002078e-05, 1.1583000000002508e-05, 1.1555999999999372e-05, 1.2472999999998957e-05, 1.2250000000001843e-05, 1.2443999999996874e-05, 1.1568999999999469e-05, 1.1818999999999719e-05, 1.1805000000000149e-05, 1.2485999999999053e-05, 1.2485999999999053e-05, 1.2389000000001538e-05, 1.1583999999998512e-05, 1.1820000000002662e-05, 1.2485999999999053e-05, 1.2444999999999817e-05, 1.2235999999998803e-05, 1.1582999999999039e-05, 1.2457999999999914e-05, 1.2250000000001843e-05, 1.1806000000003092e-05, 1.1583999999998512e-05, 1.1792000000000052e-05, 1.2472999999998957e-05, 1.2222000000002703e-05, 1.1805000000000149e-05, 1.1582999999999039e-05, 1.1832999999999289e-05, 1.2485999999999053e-05, 1.2444999999999817e-05, 1.1805000000000149e-05, 1.2236999999998277e-05, 1.2431000000000247e-05, 1.2472000000002953e-05, 1.1805999999999622e-05, 1.2235999999998803e-05, 1.2028000000000733e-05, 1.2500000000002093e-05, 1.1818999999999719e-05, 1.2444000000000344e-05, 1.1583000000002508e-05]</msg>
<status status="PASS" starttime="20201112 09:54:33.559" endtime="20201112 09:54:33.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.554" endtime="20201112 09:54:33.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.568" endtime="20201112 09:54:33.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:33.571" endtime="20201112 09:54:33.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.570" endtime="20201112 09:54:33.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.566" endtime="20201112 09:54:33.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.201" endtime="20201112 09:54:33.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.200" endtime="20201112 09:54:33.592"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.601" endtime="20201112 09:54:33.616"></status>
</kw>
<msg timestamp="20201112 09:54:33.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.599" endtime="20201112 09:54:33.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.617" endtime="20201112 09:54:33.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.620" endtime="20201112 09:54:33.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.597" endtime="20201112 09:54:33.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.594" endtime="20201112 09:54:33.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.629" endtime="20201112 09:54:33.917"></status>
</kw>
<msg timestamp="20201112 09:54:33.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021980639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021994194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:33.627" endtime="20201112 09:54:33.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021980639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021994194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:33.921" endtime="20201112 09:54:33.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.930" endtime="20201112 09:54:33.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.625" endtime="20201112 09:54:33.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.623" endtime="20201112 09:54:33.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:33.937" level="INFO">${RESULT} = [{'time': 0.021994194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3555000000001899e-05, 'source_diff': 1.3555000000001899e-05}, {'time': 0.022008736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:33.933" endtime="20201112 09:54:33.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:33.952" level="INFO">${ACCURACY} = {'time': [0.021994194, 0.022008736, 0.022023694, 0.022038847, 0.022053722, 0.022067653, 0.022081681, 0.022096875, 0.022110764, 0.022125847, 0.022140806, 0.022154806, 0.022169653, 0.022184875, 0.022199...</msg>
<status status="PASS" starttime="20201112 09:54:33.938" endtime="20201112 09:54:33.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.957" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 09:54:33.955" endtime="20201112 09:54:33.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.959" level="INFO">VALUE: [1.3555000000001899e-05, 1.2694000000000594e-05, 1.3360999999999928e-05, 1.3569000000001469e-05, 1.3333000000000789e-05, 1.2471999999999483e-05, 1.2472999999998957e-05, 1.3596999999997139e-05, 1.2695000000000067e-05, 1.3528000000002233e-05, 1.3347999999999832e-05, 1.2681000000000497e-05, 1.3139000000002288e-05, 1.3556000000001373e-05, 1.3638999999999318e-05, 1.2681000000000497e-05, 1.2694000000000594e-05, 1.2929999999997804e-05, 1.2625000000002218e-05, 1.2667000000000928e-05, 1.2778000000001483e-05, 1.2708000000000164e-05, 1.2695000000000067e-05, 1.2694000000000594e-05, 1.2680000000001024e-05, 1.2708000000000164e-05, 1.2763999999998443e-05, 1.2681000000000497e-05, 1.2695000000000067e-05, 1.2638999999998318e-05, 1.3374999999999498e-05, 1.3360999999999928e-05, 1.333299999999732e-05, 1.2916999999997708e-05, 1.3374999999999498e-05, 1.2458999999999387e-05, 1.2679999999997554e-05, 1.2915999999998234e-05, 1.2444000000000344e-05, 1.2679999999997554e-05, 1.2694000000000594e-05, 1.3137999999999345e-05, 1.2874999999998998e-05, 1.2680000000001024e-05, 1.3347000000000359e-05, 1.2694000000000594e-05, 1.2860999999999428e-05, 1.3138999999998818e-05, 1.2695000000000067e-05, 1.2694000000000594e-05]</msg>
<status status="PASS" starttime="20201112 09:54:33.958" endtime="20201112 09:54:33.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.953" endtime="20201112 09:54:33.960"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.963" endtime="20201112 09:54:33.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:33.966" endtime="20201112 09:54:33.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.965" endtime="20201112 09:54:33.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.961" endtime="20201112 09:54:33.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.593" endtime="20201112 09:54:33.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.592" endtime="20201112 09:54:33.987"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.997" endtime="20201112 09:54:34.013"></status>
</kw>
<msg timestamp="20201112 09:54:34.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.995" endtime="20201112 09:54:34.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.014" endtime="20201112 09:54:34.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.017" endtime="20201112 09:54:34.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.992" endtime="20201112 09:54:34.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.990" endtime="20201112 09:54:34.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.027" endtime="20201112 09:54:34.313"></status>
</kw>
<msg timestamp="20201112 09:54:34.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022682069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022696542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:34.026" endtime="20201112 09:54:34.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022682069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022696542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:34.318" endtime="20201112 09:54:34.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.326" endtime="20201112 09:54:34.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.023" endtime="20201112 09:54:34.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.021" endtime="20201112 09:54:34.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:34.333" level="INFO">${RESULT} = [{'time': 0.022696542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4473000000000957e-05, 'source_diff': 1.4473000000000957e-05}, {'time': 0.022712208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:34.330" endtime="20201112 09:54:34.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:34.347" level="INFO">${ACCURACY} = {'time': [0.022696542, 0.022712208, 0.022728125, 0.022743139, 0.022758125, 0.022774042, 0.022789083, 0.022804139, 0.022819236, 0.022834097, 0.022849181, 0.022865236, 0.022880153, 0.022895222, 0.022910...</msg>
<status status="PASS" starttime="20201112 09:54:34.334" endtime="20201112 09:54:34.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.352" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 09:54:34.351" endtime="20201112 09:54:34.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.354" level="INFO">VALUE: [1.4473000000000957e-05, 1.4013999999999693e-05, 1.4235999999997334e-05, 1.3777999999999013e-05, 1.3806000000001623e-05, 1.4223000000000707e-05, 1.3583000000001039e-05, 1.3583000000001039e-05, 1.3568999999998e-05, 1.3555000000001899e-05, 1.3805999999998153e-05, 1.4486000000001054e-05, 1.3584000000000512e-05, 1.381899999999825e-05, 1.3638999999999318e-05, 1.3583000000001039e-05, 1.3569000000001469e-05, 1.3583000000001039e-05, 1.384699999999739e-05, 1.3513999999999193e-05, 1.4444000000002344e-05, 1.4458000000001914e-05, 1.3570000000000942e-05, 1.4292000000002553e-05, 1.3805000000002149e-05, 1.381899999999825e-05, 1.3569000000001469e-05, 1.3583000000001039e-05, 1.379099999999911e-05, 1.3806000000001623e-05, 1.3583999999997043e-05, 1.358299999999757e-05, 1.4263999999999943e-05, 1.4485999999997584e-05, 1.4250000000000373e-05, 1.355499999999843e-05, 1.379099999999911e-05, 1.4250000000000373e-05, 1.3583000000001039e-05, 1.4402000000000165e-05, 1.3611000000000179e-05, 1.4458000000001914e-05, 1.4444000000002344e-05, 1.3792000000002053e-05, 1.380499999999868e-05, 1.4027999999999263e-05, 1.380499999999868e-05, 1.4277999999999513e-05, 1.4473000000000957e-05, 1.3805999999998153e-05]</msg>
<status status="PASS" starttime="20201112 09:54:34.353" endtime="20201112 09:54:34.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.348" endtime="20201112 09:54:34.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.358" endtime="20201112 09:54:34.360"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:34.362" endtime="20201112 09:54:34.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.360" endtime="20201112 09:54:34.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.357" endtime="20201112 09:54:34.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.988" endtime="20201112 09:54:34.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.988" endtime="20201112 09:54:34.383"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.392" endtime="20201112 09:54:34.407"></status>
</kw>
<msg timestamp="20201112 09:54:34.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.390" endtime="20201112 09:54:34.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.408" endtime="20201112 09:54:34.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.411" endtime="20201112 09:54:34.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.387" endtime="20201112 09:54:34.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.385" endtime="20201112 09:54:34.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.421" endtime="20201112 09:54:34.706"></status>
</kw>
<msg timestamp="20201112 09:54:34.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022477931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02249325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:34.420" endtime="20201112 09:54:34.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022477931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02249325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:34.711" endtime="20201112 09:54:34.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.719" endtime="20201112 09:54:34.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.417" endtime="20201112 09:54:34.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.415" endtime="20201112 09:54:34.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:34.727" level="INFO">${RESULT} = [{'time': 0.02249325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.531899999999975e-05, 'source_diff': 1.531899999999975e-05}, {'time': 0.022509931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:34.723" endtime="20201112 09:54:34.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:34.740" level="INFO">${ACCURACY} = {'time': [0.02249325, 0.022509931, 0.022526972, 0.022543903, 0.022560806, 0.022576944, 0.022592778, 0.022608889, 0.022624917, 0.022641986, 0.022657917, 0.022674917, 0.022692, 0.022707889, 0.022723847,...</msg>
<status status="PASS" starttime="20201112 09:54:34.728" endtime="20201112 09:54:34.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.745" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 09:54:34.744" endtime="20201112 09:54:34.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.748" level="INFO">VALUE: [1.531899999999975e-05, 1.5362000000001402e-05, 1.558299999999957e-05, 1.540300000000064e-05, 1.5361999999997933e-05, 1.4902000000000665e-05, 1.4472000000001484e-05, 1.4916999999999708e-05, 1.4667000000002928e-05, 1.534699999999889e-05, 1.4541999999999333e-05, 1.5347999999998363e-05, 1.5292000000000083e-05, 1.4680999999999028e-05, 1.4679999999999555e-05, 1.4680999999999028e-05, 1.4889000000000568e-05, 1.4458000000001914e-05, 1.4929999999999805e-05, 1.536099999999846e-05, 1.4694999999998598e-05, 1.4443999999998874e-05, 1.4681000000002498e-05, 1.4693999999999124e-05, 1.536100000000193e-05, 1.4903000000000138e-05, 1.4958999999998418e-05, 1.4472000000001484e-05, 1.4903000000000138e-05, 1.4639000000000318e-05, 1.4514000000000193e-05, 1.4652999999999888e-05, 1.4680000000003024e-05, 1.4903000000000138e-05, 1.5139000000000818e-05, 1.538900000000107e-05, 1.537499999999803e-05, 1.5153000000000388e-05, 1.4889000000000568e-05, 1.4444000000002344e-05, 1.5597999999998613e-05, 1.4708000000002164e-05, 1.534700000000236e-05, 1.4679999999999555e-05, 1.4471999999998014e-05, 1.533299999999932e-05, 1.4459000000001387e-05, 1.4680999999999028e-05, 1.533299999999932e-05, 1.4916999999999708e-05]</msg>
<status status="PASS" starttime="20201112 09:54:34.746" endtime="20201112 09:54:34.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.741" endtime="20201112 09:54:34.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.751" endtime="20201112 09:54:34.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:34.755" endtime="20201112 09:54:34.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.753" endtime="20201112 09:54:34.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.750" endtime="20201112 09:54:34.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.384" endtime="20201112 09:54:34.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.383" endtime="20201112 09:54:34.777"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.786" endtime="20201112 09:54:34.801"></status>
</kw>
<msg timestamp="20201112 09:54:34.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.785" endtime="20201112 09:54:34.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.803" endtime="20201112 09:54:34.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.806" endtime="20201112 09:54:34.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.782" endtime="20201112 09:54:34.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.779" endtime="20201112 09:54:34.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.816" endtime="20201112 09:54:35.102"></status>
</kw>
<msg timestamp="20201112 09:54:35.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024248667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024265778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:34.815" endtime="20201112 09:54:35.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024248667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024265778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.106" endtime="20201112 09:54:35.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.115" endtime="20201112 09:54:35.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.812" endtime="20201112 09:54:35.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.810" endtime="20201112 09:54:35.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:35.122" level="INFO">${RESULT} = [{'time': 0.024265778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.711099999999674e-05, 'source_diff': 1.711099999999674e-05}, {'time': 0.024283486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:35.118" endtime="20201112 09:54:35.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:35.136" level="INFO">${ACCURACY} = {'time': [0.024265778, 0.024283486, 0.024300458, 0.024317417, 0.024334431, 0.024352306, 0.024369444, 0.024387375, 0.024405458, 0.024422514, 0.024439375, 0.024456458, 0.0244745, 0.0244925, 0.024509444,...</msg>
<status status="PASS" starttime="20201112 09:54:35.123" endtime="20201112 09:54:35.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.140" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 09:54:35.139" endtime="20201112 09:54:35.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.143" level="INFO">VALUE: [1.711099999999674e-05, 1.6263999999998474e-05, 1.580500000000068e-05, 1.5584000000002513e-05, 1.5819999999999723e-05, 1.6237000000002277e-05, 1.581900000000025e-05, 1.6249999999998904e-05, 1.6486000000003054e-05, 1.5806000000000153e-05, 1.558299999999957e-05, 1.580500000000068e-05, 1.6499999999999154e-05, 1.6472000000000014e-05, 1.558299999999957e-05, 1.6472000000000014e-05, 1.6264000000001944e-05, 1.559700000000261e-05, 1.559699999999914e-05, 1.6472000000000014e-05, 1.6445000000000348e-05, 1.5806000000000153e-05, 1.5806000000000153e-05, 1.6472000000000014e-05, 1.558299999999957e-05, 1.5569e-05, 1.580499999999721e-05, 1.558300000000304e-05, 1.6485999999999584e-05, 1.651299999999925e-05, 1.5569999999999473e-05, 1.57629999999985e-05, 1.641700000000121e-05, 1.558299999999957e-05, 1.629100000000161e-05, 1.5819999999999723e-05, 1.5569e-05, 1.640300000000164e-05, 1.5583999999999043e-05, 1.6444000000000875e-05, 1.6473000000002957e-05, 1.5806000000000153e-05, 1.6249999999998904e-05, 1.5792000000000583e-05, 1.6264000000001944e-05, 1.5763999999997974e-05, 1.6014000000001694e-05, 1.6472999999999488e-05, 1.6221999999999764e-05, 1.6444000000000875e-05]</msg>
<status status="PASS" starttime="20201112 09:54:35.141" endtime="20201112 09:54:35.144"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.137" endtime="20201112 09:54:35.144"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.147" endtime="20201112 09:54:35.148"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:35.150" endtime="20201112 09:54:35.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.149" endtime="20201112 09:54:35.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.145" endtime="20201112 09:54:35.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.778" endtime="20201112 09:54:35.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.777" endtime="20201112 09:54:35.171"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.180" endtime="20201112 09:54:35.195"></status>
</kw>
<msg timestamp="20201112 09:54:35.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.179" endtime="20201112 09:54:35.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.197" endtime="20201112 09:54:35.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.199" endtime="20201112 09:54:35.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.176" endtime="20201112 09:54:35.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.174" endtime="20201112 09:54:35.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.210" endtime="20201112 09:54:35.495"></status>
</kw>
<msg timestamp="20201112 09:54:35.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022668028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.208" endtime="20201112 09:54:35.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022668028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.500" endtime="20201112 09:54:35.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.508" endtime="20201112 09:54:35.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.205" endtime="20201112 09:54:35.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.204" endtime="20201112 09:54:35.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:35.515" level="INFO">${RESULT} = [{'time': 0.022685583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.755499999999896e-05, 'source_diff': 1.755499999999896e-05}, {'time': 0.022704264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:35.512" endtime="20201112 09:54:35.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:35.530" level="INFO">${ACCURACY} = {'time': [0.022685583, 0.022704264, 0.022722319, 0.022740278, 0.022758236, 0.022777375, 0.022795181, 0.022813347, 0.022831306, 0.022850347, 0.022868292, 0.022886167, 0.02290425, 0.022922194, 0.0229403...</msg>
<status status="PASS" starttime="20201112 09:54:35.516" endtime="20201112 09:54:35.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.534" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 09:54:35.533" endtime="20201112 09:54:35.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.537" level="INFO">VALUE: [1.755499999999896e-05, 1.691699999999824e-05, 1.6887999999999626e-05, 1.668099999999756e-05, 1.6680000000001555e-05, 1.740299999999917e-05, 1.668100000000103e-05, 1.690300000000214e-05, 1.668099999999756e-05, 1.736100000000046e-05, 1.67089999999967e-05, 1.641699999999774e-05, 1.6735999999999834e-05, 1.6458000000000444e-05, 1.6680000000001555e-05, 1.734700000000089e-05, 1.734699999999742e-05, 1.6458999999999918e-05, 1.761100000000071e-05, 1.712499999999978e-05, 1.693099999999781e-05, 1.6901999999999195e-05, 1.668100000000103e-05, 1.75829999999981e-05, 1.7361999999999933e-05, 1.6472000000000014e-05, 1.669499999999713e-05, 1.705499999999846e-05, 1.668100000000103e-05, 1.736100000000046e-05, 1.758300000000157e-05, 1.733300000000132e-05, 1.666699999999799e-05, 1.691700000000171e-05, 1.7401999999999695e-05, 1.7111999999999683e-05, 1.6695000000000598e-05, 1.709699999999717e-05, 1.687499999999953e-05, 1.6722999999999738e-05, 1.6680000000001555e-05, 1.736100000000046e-05, 1.736100000000046e-05, 1.6679999999998085e-05, 1.737500000000003e-05, 1.6472000000000014e-05, 1.690300000000214e-05, 1.738900000000307e-05, 1.67089999999967e-05, 1.6472000000000014e-05]</msg>
<status status="PASS" starttime="20201112 09:54:35.536" endtime="20201112 09:54:35.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.531" endtime="20201112 09:54:35.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.541" endtime="20201112 09:54:35.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:35.544" endtime="20201112 09:54:35.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.543" endtime="20201112 09:54:35.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.539" endtime="20201112 09:54:35.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.172" endtime="20201112 09:54:35.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.172" endtime="20201112 09:54:35.566"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.575" endtime="20201112 09:54:35.590"></status>
</kw>
<msg timestamp="20201112 09:54:35.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.573" endtime="20201112 09:54:35.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.591" endtime="20201112 09:54:35.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.594" endtime="20201112 09:54:35.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.570" endtime="20201112 09:54:35.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.568" endtime="20201112 09:54:35.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.604" endtime="20201112 09:54:35.891"></status>
</kw>
<msg timestamp="20201112 09:54:35.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022846903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022865319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.602" endtime="20201112 09:54:35.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022846903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022865319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.896" endtime="20201112 09:54:35.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.904" endtime="20201112 09:54:35.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.600" endtime="20201112 09:54:35.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.598" endtime="20201112 09:54:35.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:35.911" level="INFO">${RESULT} = [{'time': 0.022865319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8416000000000265e-05, 'source_diff': 1.8416000000000265e-05}, {'time': 0.022885014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:35.908" endtime="20201112 09:54:35.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:35.925" level="INFO">${ACCURACY} = {'time': [0.022865319, 0.022885014, 0.022904014, 0.022923069, 0.022942972, 0.022962944, 0.022981903, 0.023001042, 0.023021014, 0.02304, 0.023059, 0.023078944, 0.023099042, 0.023118042, 0.023137972, 0....</msg>
<status status="PASS" starttime="20201112 09:54:35.912" endtime="20201112 09:54:35.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.930" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 09:54:35.929" endtime="20201112 09:54:35.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.932" level="INFO">VALUE: [1.8416000000000265e-05, 1.8278000000000044e-05, 1.7500000000000154e-05, 1.758300000000157e-05, 1.8249999999997435e-05, 1.8249999999997435e-05, 1.7584000000001043e-05, 1.7791999999999114e-05, 1.8457999999998975e-05, 1.7806000000002153e-05, 1.75829999999981e-05, 1.8250000000000904e-05, 1.845900000000192e-05, 1.7833999999997824e-05, 1.8250000000000904e-05, 1.759700000000114e-05, 1.8250000000000904e-05, 1.779099999999964e-05, 1.8249999999997435e-05, 1.7598000000000613e-05, 1.8514000000000724e-05, 1.7792000000002584e-05, 1.7570000000001473e-05, 1.780499999999921e-05, 1.844500000000235e-05, 1.779100000000311e-05, 1.779099999999964e-05, 1.779099999999964e-05, 1.780499999999921e-05, 1.780500000000268e-05, 1.7791999999999114e-05, 1.7569999999998004e-05, 1.7777999999999544e-05, 1.7598000000000613e-05, 1.759699999999767e-05, 1.8471999999998545e-05, 1.8249999999997435e-05, 1.8249999999997435e-05, 1.7792000000002584e-05, 1.7750000000000404e-05, 1.8471999999998545e-05, 1.7791999999999114e-05, 1.758300000000157e-05, 1.8014000000000224e-05, 1.8028000000003264e-05, 1.7791999999999114e-05, 1.8485999999998115e-05, 1.758300000000157e-05, 1.8472000000002015e-05, 1.8250000000000904e-05]</msg>
<status status="PASS" starttime="20201112 09:54:35.931" endtime="20201112 09:54:35.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.926" endtime="20201112 09:54:35.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.936" endtime="20201112 09:54:35.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:35.940" endtime="20201112 09:54:35.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.938" endtime="20201112 09:54:35.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.934" endtime="20201112 09:54:35.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.566" endtime="20201112 09:54:35.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.566" endtime="20201112 09:54:35.961"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.970" endtime="20201112 09:54:35.985"></status>
</kw>
<msg timestamp="20201112 09:54:35.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.968" endtime="20201112 09:54:35.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.987" endtime="20201112 09:54:35.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.990" endtime="20201112 09:54:35.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.965" endtime="20201112 09:54:35.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.963" endtime="20201112 09:54:35.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.000" endtime="20201112 09:54:36.286"></status>
</kw>
<msg timestamp="20201112 09:54:36.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023015889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023035431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.998" endtime="20201112 09:54:36.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023015889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023035431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.290" endtime="20201112 09:54:36.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.299" endtime="20201112 09:54:36.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.996" endtime="20201112 09:54:36.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.994" endtime="20201112 09:54:36.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:36.306" level="INFO">${RESULT} = [{'time': 0.023035431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9541999999997395e-05, 'source_diff': 1.9541999999997395e-05}, {'time': 0.023055875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:36.302" endtime="20201112 09:54:36.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:36.320" level="INFO">${ACCURACY} = {'time': [0.023035431, 0.023055875, 0.023076819, 0.023097, 0.023117903, 0.023138903, 0.023159833, 0.023180014, 0.023199903, 0.023220944, 0.023241889, 0.023262903, 0.023283986, 0.023303972, 0.023323903...</msg>
<status status="PASS" starttime="20201112 09:54:36.307" endtime="20201112 09:54:36.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.324" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 09:54:36.323" endtime="20201112 09:54:36.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.327" level="INFO">VALUE: [1.9541999999997395e-05, 1.912499999999831e-05, 1.934699999999942e-05, 1.868099999999956e-05, 1.936099999999899e-05, 1.936099999999899e-05, 1.934700000000289e-05, 1.891700000000024e-05, 1.870900000000217e-05, 1.936099999999899e-05, 1.936100000000246e-05, 1.936100000000246e-05, 1.937499999999856e-05, 1.865300000000042e-05, 1.8514000000000724e-05, 1.883299999999935e-05, 1.8693999999999655e-05, 1.8680000000000085e-05, 1.8777999999997075e-05, 1.847299999999802e-05, 1.884700000000239e-05, 1.8707999999999225e-05, 1.8694000000003125e-05, 1.8486000000001584e-05, 1.8902000000001196e-05, 1.934699999999942e-05, 1.8693999999999655e-05, 1.8971999999999045e-05, 1.8429999999999835e-05, 1.868099999999956e-05, 1.89029999999972e-05, 1.863900000000085e-05, 1.936100000000246e-05, 1.8930000000000335e-05, 1.95830000000001e-05, 1.8693999999999655e-05, 1.869499999999913e-05, 1.886100000000196e-05, 1.937499999999856e-05, 1.86950000000026e-05, 1.868099999999956e-05, 1.937500000000203e-05, 1.868099999999956e-05, 1.869499999999913e-05, 1.8707999999999225e-05, 1.868099999999956e-05, 1.8915999999997296e-05, 1.8473000000001488e-05, 1.8834000000002293e-05, 1.9334000000002793e-05]</msg>
<status status="PASS" starttime="20201112 09:54:36.326" endtime="20201112 09:54:36.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.321" endtime="20201112 09:54:36.328"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.331" endtime="20201112 09:54:36.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:36.334" endtime="20201112 09:54:36.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.333" endtime="20201112 09:54:36.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.329" endtime="20201112 09:54:36.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.962" endtime="20201112 09:54:36.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.961" endtime="20201112 09:54:36.355"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.364" endtime="20201112 09:54:36.379"></status>
</kw>
<msg timestamp="20201112 09:54:36.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.363" endtime="20201112 09:54:36.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.381" endtime="20201112 09:54:36.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.384" endtime="20201112 09:54:36.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.360" endtime="20201112 09:54:36.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.358" endtime="20201112 09:54:36.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.394" endtime="20201112 09:54:36.680"></status>
</kw>
<msg timestamp="20201112 09:54:36.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022729472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022750569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.393" endtime="20201112 09:54:36.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022729472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022750569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.685" endtime="20201112 09:54:36.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.693" endtime="20201112 09:54:36.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.390" endtime="20201112 09:54:36.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.388" endtime="20201112 09:54:36.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:36.700" level="INFO">${RESULT} = [{'time': 0.022750569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.10969999999977e-05, 'source_diff': 2.10969999999977e-05}, {'time': 0.022772194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:36.697" endtime="20201112 09:54:36.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:36.714" level="INFO">${ACCURACY} = {'time': [0.022750569, 0.022772194, 0.022793236, 0.022814111, 0.022835153, 0.022857278, 0.022878208, 0.02290025, 0.022921292, 0.022942194, 0.022963056, 0.022984194, 0.023005194, 0.023026167, 0.0230472...</msg>
<status status="PASS" starttime="20201112 09:54:36.701" endtime="20201112 09:54:36.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.719" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 09:54:36.718" endtime="20201112 09:54:36.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.721" level="INFO">VALUE: [2.10969999999977e-05, 2.0249999999999435e-05, 1.9750000000002405e-05, 1.95830000000001e-05, 1.9570000000000004e-05, 2.0472000000000545e-05, 1.9749999999998935e-05, 2.0472000000000545e-05, 1.963899999999838e-05, 1.95830000000001e-05, 1.9570000000000004e-05, 1.979099999999817e-05, 1.959699999999967e-05, 1.9792000000001114e-05, 1.9792000000001114e-05, 2.0291999999998145e-05, 1.9820000000000254e-05, 1.9556000000000434e-05, 2.0250000000002905e-05, 2.047300000000002e-05, 1.980499999999774e-05, 2.0055999999997465e-05, 1.956900000000053e-05, 2.0471999999997076e-05, 2.0249999999999435e-05, 2.0429999999998366e-05, 1.979100000000164e-05, 1.9778000000001544e-05, 1.9792000000001114e-05, 2.022299999999977e-05, 2.047300000000002e-05, 1.956900000000053e-05, 2.0179999999998116e-05, 1.9806000000000684e-05, 1.961100000000271e-05, 2.0486000000000115e-05, 1.9792000000001114e-05, 1.9791999999997645e-05, 1.9556000000000434e-05, 1.9583999999999574e-05, 1.9583999999999574e-05, 1.980499999999774e-05, 2.047300000000002e-05, 2.0472000000000545e-05, 2.0472000000000545e-05, 2.0472000000000545e-05, 2.0472000000000545e-05, 1.95830000000001e-05, 1.9583999999999574e-05, 1.9778000000001544e-05]</msg>
<status status="PASS" starttime="20201112 09:54:36.720" endtime="20201112 09:54:36.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.715" endtime="20201112 09:54:36.723"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.725" endtime="20201112 09:54:36.727"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:36.729" endtime="20201112 09:54:36.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.727" endtime="20201112 09:54:36.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.723" endtime="20201112 09:54:36.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.356" endtime="20201112 09:54:36.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.356" endtime="20201112 09:54:36.750"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.759" endtime="20201112 09:54:36.774"></status>
</kw>
<msg timestamp="20201112 09:54:36.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.757" endtime="20201112 09:54:36.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.776" endtime="20201112 09:54:36.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.778" endtime="20201112 09:54:36.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.755" endtime="20201112 09:54:36.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.752" endtime="20201112 09:54:36.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.789" endtime="20201112 09:54:37.076"></status>
</kw>
<msg timestamp="20201112 09:54:37.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022511764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022533528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.787" endtime="20201112 09:54:37.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022511764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022533528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:37.080" endtime="20201112 09:54:37.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.089" endtime="20201112 09:54:37.090"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.784" endtime="20201112 09:54:37.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.783" endtime="20201112 09:54:37.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:37.096" level="INFO">${RESULT} = [{'time': 0.022533528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1764000000000505e-05, 'source_diff': 2.1764000000000505e-05}, {'time': 0.022556181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:37.092" endtime="20201112 09:54:37.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:37.111" level="INFO">${ACCURACY} = {'time': [0.022533528, 0.022556181, 0.022578194, 0.022601222, 0.022623264, 0.022645125, 0.02266725, 0.022690264, 0.022712194, 0.022735181, 0.022757264, 0.022779125, 0.022802153, 0.022824167, 0.0228463...</msg>
<status status="PASS" starttime="20201112 09:54:37.097" endtime="20201112 09:54:37.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.116" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 09:54:37.114" endtime="20201112 09:54:37.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.118" level="INFO">VALUE: [2.1764000000000505e-05, 2.112500000000031e-05, 2.0693999999998186e-05, 2.136100000000099e-05, 2.068100000000156e-05, 2.0693999999998186e-05, 2.068100000000156e-05, 2.133300000000185e-05, 2.0749999999999935e-05, 2.1362000000000464e-05, 2.09029999999992e-05, 2.0444000000001405e-05, 2.1333999999997855e-05, 2.07090000000007e-05, 2.0861999999999964e-05, 2.0708000000001225e-05, 2.0694000000001656e-05, 2.133299999999838e-05, 2.069500000000113e-05, 2.136100000000099e-05, 2.0693999999998186e-05, 2.133299999999838e-05, 2.0749999999999935e-05, 2.0527999999998825e-05, 2.0693999999998186e-05, 2.138900000000013e-05, 2.091700000000224e-05, 2.0542000000001864e-05, 2.136099999999752e-05, 2.0763999999999505e-05, 2.097300000000052e-05, 2.068099999999809e-05, 2.0693999999998186e-05, 2.091699999999877e-05, 2.068099999999809e-05, 2.113899999999988e-05, 2.0485999999996646e-05, 2.0680000000002086e-05, 2.158299999999863e-05, 2.158299999999863e-05, 2.0651999999999476e-05, 2.134700000000142e-05, 2.07090000000007e-05, 2.0472000000000545e-05, 2.133300000000185e-05, 2.068099999999809e-05, 2.133300000000185e-05, 2.063900000000285e-05, 2.1320000000001754e-05, 2.1415999999999796e-05]</msg>
<status status="PASS" starttime="20201112 09:54:37.117" endtime="20201112 09:54:37.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.112" endtime="20201112 09:54:37.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.122" endtime="20201112 09:54:37.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:37.125" endtime="20201112 09:54:37.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.124" endtime="20201112 09:54:37.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.120" endtime="20201112 09:54:37.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.751" endtime="20201112 09:54:37.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.750" endtime="20201112 09:54:37.147"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.156" endtime="20201112 09:54:37.171"></status>
</kw>
<msg timestamp="20201112 09:54:37.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.154" endtime="20201112 09:54:37.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.172" endtime="20201112 09:54:37.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.175" endtime="20201112 09:54:37.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.151" endtime="20201112 09:54:37.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.149" endtime="20201112 09:54:37.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.185" endtime="20201112 09:54:37.471"></status>
</kw>
<msg timestamp="20201112 09:54:37.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022556056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022579153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:37.184" endtime="20201112 09:54:37.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022556056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022579153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:37.476" endtime="20201112 09:54:37.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.484" endtime="20201112 09:54:37.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.181" endtime="20201112 09:54:37.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.179" endtime="20201112 09:54:37.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:37.491" level="INFO">${RESULT} = [{'time': 0.022579153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.30969999999997e-05, 'source_diff': 2.30969999999997e-05}, {'time': 0.022602722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:37.488" endtime="20201112 09:54:37.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:37.505" level="INFO">${ACCURACY} = {'time': [0.022579153, 0.022602722, 0.022625681, 0.022648736, 0.02267175, 0.022695722, 0.022718694, 0.022742889, 0.022765889, 0.022789819, 0.022812847, 0.02283675, 0.022860819, 0.022883778, 0.02290681...</msg>
<status status="PASS" starttime="20201112 09:54:37.492" endtime="20201112 09:54:37.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.510" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 09:54:37.509" endtime="20201112 09:54:37.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.512" level="INFO">VALUE: [2.30969999999997e-05, 2.1999999999997716e-05, 2.1792000000003114e-05, 2.181899999999931e-05, 2.1791999999999645e-05, 2.2180000000000116e-05, 2.179100000000017e-05, 2.2485999999998646e-05, 2.1722000000001795e-05, 2.2471999999999076e-05, 2.180499999999974e-05, 2.2207999999999256e-05, 2.22770000000011e-05, 2.162500000000081e-05, 2.162499999999734e-05, 2.2250000000001435e-05, 2.1764000000000505e-05, 2.179100000000017e-05, 2.156899999999906e-05, 2.156899999999906e-05, 2.2235999999998396e-05, 2.180499999999974e-05, 2.244499999999941e-05, 2.2236000000001865e-05, 2.1819999999998785e-05, 2.2028000000000325e-05, 2.1791999999999645e-05, 2.1791999999999645e-05, 2.15830000000021e-05, 2.2235999999998396e-05, 2.1791999999999645e-05, 2.2485999999998646e-05, 2.245899999999898e-05, 2.1598000000001144e-05, 2.2499999999998216e-05, 2.1598000000001144e-05, 2.247300000000202e-05, 2.156900000000253e-05, 2.15830000000021e-05, 2.172300000000127e-05, 2.2249999999997966e-05, 2.2264000000001005e-05, 2.1805999999999215e-05, 2.244499999999941e-05, 2.2471999999999076e-05, 2.247300000000202e-05, 2.2207999999999256e-05, 2.2485999999998646e-05, 2.2471999999999076e-05, 2.2457999999999506e-05]</msg>
<status status="PASS" starttime="20201112 09:54:37.511" endtime="20201112 09:54:37.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.506" endtime="20201112 09:54:37.514"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.516" endtime="20201112 09:54:37.517"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:37.520" endtime="20201112 09:54:37.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.518" endtime="20201112 09:54:37.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.514" endtime="20201112 09:54:37.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.148" endtime="20201112 09:54:37.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.147" endtime="20201112 09:54:37.541"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.550" endtime="20201112 09:54:37.565"></status>
</kw>
<msg timestamp="20201112 09:54:37.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.548" endtime="20201112 09:54:37.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.566" endtime="20201112 09:54:37.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.569" endtime="20201112 09:54:37.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.546" endtime="20201112 09:54:37.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.543" endtime="20201112 09:54:37.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.579" endtime="20201112 09:54:37.865"></status>
</kw>
<msg timestamp="20201112 09:54:37.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022970597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022994111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:37.578" endtime="20201112 09:54:37.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022970597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022994111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:37.870" endtime="20201112 09:54:37.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.878" endtime="20201112 09:54:37.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.575" endtime="20201112 09:54:37.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.573" endtime="20201112 09:54:37.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:37.885" level="INFO">${RESULT} = [{'time': 0.022994111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3514000000002255e-05, 'source_diff': 2.3514000000002255e-05}, {'time': 0.023018889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:37.882" endtime="20201112 09:54:37.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:37.899" level="INFO">${ACCURACY} = {'time': [0.022994111, 0.023018889, 0.023043694, 0.023067792, 0.023091806, 0.023116917, 0.023141694, 0.023165778, 0.023189917, 0.023213708, 0.023237736, 0.023261889, 0.023286792, 0.02331075, 0.0233348...</msg>
<status status="PASS" starttime="20201112 09:54:37.886" endtime="20201112 09:54:37.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.904" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 09:54:37.903" endtime="20201112 09:54:37.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.906" level="INFO">VALUE: [2.3514000000002255e-05, 2.293100000000034e-05, 2.312499999999884e-05, 2.29030000000012e-05, 2.248699999999812e-05, 2.3528000000001825e-05, 2.334699999999995e-05, 2.269500000000313e-05, 2.269499999999966e-05, 2.2457999999999506e-05, 2.2471999999999076e-05, 2.269499999999966e-05, 2.336099999999952e-05, 2.2708000000003226e-05, 2.286099999999902e-05, 2.3304999999997772e-05, 2.291700000000077e-05, 2.2458000000002976e-05, 2.268100000000009e-05, 2.337500000000256e-05, 2.2500000000001685e-05, 2.247299999999855e-05, 2.336099999999952e-05, 2.2680000000000616e-05, 2.269499999999966e-05, 2.2499999999998216e-05, 2.29030000000012e-05, 2.2679999999997147e-05, 2.2680000000000616e-05, 2.334699999999995e-05, 2.338899999999866e-05, 2.268100000000009e-05, 2.2944000000000436e-05, 2.336100000000299e-05, 2.333300000000038e-05, 2.336099999999952e-05, 2.2471999999999076e-05, 2.268100000000009e-05, 2.290299999999773e-05, 2.338900000000213e-05, 2.268100000000009e-05, 2.312499999999884e-05, 2.2916000000001296e-05, 2.3083999999999605e-05, 2.29030000000012e-05, 2.2471999999999076e-05, 2.269499999999966e-05, 2.2930000000000866e-05, 2.336099999999952e-05, 2.3347999999999425e-05]</msg>
<status status="PASS" starttime="20201112 09:54:37.905" endtime="20201112 09:54:37.907"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.900" endtime="20201112 09:54:37.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.910" endtime="20201112 09:54:37.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:37.914" endtime="20201112 09:54:37.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.912" endtime="20201112 09:54:37.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.908" endtime="20201112 09:54:37.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.542" endtime="20201112 09:54:37.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.541" endtime="20201112 09:54:37.935"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.944" endtime="20201112 09:54:37.959"></status>
</kw>
<msg timestamp="20201112 09:54:37.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.942" endtime="20201112 09:54:37.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.960" endtime="20201112 09:54:37.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.963" endtime="20201112 09:54:37.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.940" endtime="20201112 09:54:37.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.937" endtime="20201112 09:54:37.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.973" endtime="20201112 09:54:38.257"></status>
</kw>
<msg timestamp="20201112 09:54:38.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022777389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02280225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:37.972" endtime="20201112 09:54:38.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022777389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02280225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:38.262" endtime="20201112 09:54:38.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.271" endtime="20201112 09:54:38.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.969" endtime="20201112 09:54:38.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.967" endtime="20201112 09:54:38.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:38.278" level="INFO">${RESULT} = [{'time': 0.02280225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.486100000000102e-05, 'source_diff': 2.486100000000102e-05}, {'time': 0.022827806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:38.274" endtime="20201112 09:54:38.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:38.291" level="INFO">${ACCURACY} = {'time': [0.02280225, 0.022827806, 0.022853778, 0.022878653, 0.022904681, 0.022929806, 0.02295475, 0.022980833, 0.023005819, 0.023031694, 0.023056653, 0.02308275, 0.023108764, 0.023133778, 0.023159806...</msg>
<status status="PASS" starttime="20201112 09:54:38.279" endtime="20201112 09:54:38.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.296" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 09:54:38.295" endtime="20201112 09:54:38.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.299" level="INFO">VALUE: [2.486100000000102e-05, 2.387499999999959e-05, 2.4306000000001715e-05, 2.3805999999997746e-05, 2.42230000000003e-05, 2.3778000000002075e-05, 2.358300000000063e-05, 2.4486000000000646e-05, 2.356900000000106e-05, 2.4263000000000062e-05, 2.3806000000001215e-05, 2.4457999999998037e-05, 2.4472000000001076e-05, 2.3584000000000105e-05, 2.444500000000141e-05, 2.3584000000000105e-05, 2.3568999999997592e-05, 2.3820000000000785e-05, 2.4249999999999966e-05, 2.380500000000174e-05, 2.358300000000063e-05, 2.4415999999999327e-05, 2.4236000000000396e-05, 2.4472000000001076e-05, 2.355500000000149e-05, 2.3568999999997592e-05, 2.3570000000000535e-05, 2.3570000000000535e-05, 2.4249999999999966e-05, 2.4472000000001076e-05, 2.355500000000149e-05, 2.3792000000001645e-05, 2.4263999999999536e-05, 2.444499999999794e-05, 2.3792000000001645e-05, 2.4249999999999966e-05, 2.3792000000001645e-05, 2.4236000000000396e-05, 2.3805999999997746e-05, 2.380500000000174e-05, 2.3570000000000535e-05, 2.445900000000098e-05, 2.35970000000002e-05, 2.3792000000001645e-05, 2.4236000000000396e-05, 2.3540999999998452e-05, 2.4472000000001076e-05, 2.4458000000001506e-05, 2.3792000000001645e-05, 2.4472000000001076e-05]</msg>
<status status="PASS" starttime="20201112 09:54:38.297" endtime="20201112 09:54:38.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.292" endtime="20201112 09:54:38.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.303" endtime="20201112 09:54:38.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:38.306" endtime="20201112 09:54:38.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.305" endtime="20201112 09:54:38.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.301" endtime="20201112 09:54:38.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.936" endtime="20201112 09:54:38.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.935" endtime="20201112 09:54:38.327"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.336" endtime="20201112 09:54:38.352"></status>
</kw>
<msg timestamp="20201112 09:54:38.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.335" endtime="20201112 09:54:38.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.354" endtime="20201112 09:54:38.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.356" endtime="20201112 09:54:38.359"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.332" endtime="20201112 09:54:38.359"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.330" endtime="20201112 09:54:38.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.367" endtime="20201112 09:54:38.652"></status>
</kw>
<msg timestamp="20201112 09:54:38.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022620083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:38.365" endtime="20201112 09:54:38.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022620083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:38.657" endtime="20201112 09:54:38.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.665" endtime="20201112 09:54:38.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.362" endtime="20201112 09:54:38.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.360" endtime="20201112 09:54:38.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:38.672" level="INFO">${RESULT} = [{'time': 0.022620083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5291000000000202e-05, 'source_diff': 2.5291000000000202e-05}, {'time': 0.0226465, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:38.669" endtime="20201112 09:54:38.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:38.687" level="INFO">${ACCURACY} = {'time': [0.022620083, 0.0226465, 0.022673472, 0.022699611, 0.022725556, 0.022751708, 0.022778681, 0.022805528, 0.022831514, 0.022858583, 0.022884514, 0.022910667, 0.022937528, 0.022963583, 0.02298968...</msg>
<status status="PASS" starttime="20201112 09:54:38.673" endtime="20201112 09:54:38.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.692" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 09:54:38.691" endtime="20201112 09:54:38.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.694" level="INFO">VALUE: [2.5291000000000202e-05, 2.4707999999998287e-05, 2.536100000000152e-05, 2.4750000000000466e-05, 2.4542000000002395e-05, 2.488900000000016e-05, 2.537499999999762e-05, 2.5360999999998052e-05, 2.469500000000166e-05, 2.5346999999998482e-05, 2.466700000000252e-05, 2.469499999999819e-05, 2.5110999999997802e-05, 2.4665999999999577e-05, 2.469500000000166e-05, 2.5334000000001855e-05, 2.4694000000002186e-05, 2.536100000000152e-05, 2.5348000000001425e-05, 2.4915999999999827e-05, 2.5360999999998052e-05, 2.4693999999998717e-05, 2.4485999999997177e-05, 2.4750000000000466e-05, 2.4736000000000896e-05, 2.4472000000001076e-05, 2.4472000000001076e-05, 2.4652000000000007e-05, 2.491700000000277e-05, 2.463899999999991e-05, 2.4943999999998967e-05, 2.4722000000001326e-05, 2.55970000000022e-05, 2.4679999999999147e-05, 2.4680000000002617e-05, 2.5360999999998052e-05, 2.5596999999998732e-05, 2.537500000000109e-05, 2.5347999999997956e-05, 2.4693999999998717e-05, 2.5152000000000507e-05, 2.49169999999993e-05, 2.470900000000123e-05, 2.4750000000000466e-05, 2.537500000000109e-05, 2.4486000000000646e-05, 2.4486000000000646e-05, 2.4707999999998287e-05, 2.536100000000152e-05, 2.4722000000001326e-05]</msg>
<status status="PASS" starttime="20201112 09:54:38.693" endtime="20201112 09:54:38.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.688" endtime="20201112 09:54:38.700"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.703" endtime="20201112 09:54:38.704"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:38.706" endtime="20201112 09:54:38.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.705" endtime="20201112 09:54:38.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.701" endtime="20201112 09:54:38.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.328" endtime="20201112 09:54:38.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.328" endtime="20201112 09:54:38.727"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.736" endtime="20201112 09:54:38.751"></status>
</kw>
<msg timestamp="20201112 09:54:38.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.734" endtime="20201112 09:54:38.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.753" endtime="20201112 09:54:38.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.755" endtime="20201112 09:54:38.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.732" endtime="20201112 09:54:38.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.730" endtime="20201112 09:54:38.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.766" endtime="20201112 09:54:39.052"></status>
</kw>
<msg timestamp="20201112 09:54:39.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022498542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:38.764" endtime="20201112 09:54:39.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022498542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.057" endtime="20201112 09:54:39.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.065" endtime="20201112 09:54:39.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.761" endtime="20201112 09:54:39.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.760" endtime="20201112 09:54:39.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:39.073" level="INFO">${RESULT} = [{'time': 0.022498542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7084000000000136e-05, 'source_diff': 2.7084000000000136e-05}, {'time': 0.022526167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:39.069" endtime="20201112 09:54:39.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:39.086" level="INFO">${ACCURACY} = {'time': [0.022498542, 0.022526167, 0.022553306, 0.022581208, 0.022608167, 0.022636153, 0.02266325, 0.022690264, 0.022718181, 0.022745389, 0.022772194, 0.022799306, 0.022826278, 0.022853181, 0.0228803...</msg>
<status status="PASS" starttime="20201112 09:54:39.074" endtime="20201112 09:54:39.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.091" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 09:54:39.090" endtime="20201112 09:54:39.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.094" level="INFO">VALUE: [2.7084000000000136e-05, 2.5805999999999746e-05, 2.5611999999997775e-05, 2.6458000000000037e-05, 2.5735999999998427e-05, 2.6235999999998927e-05, 2.5805999999999746e-05, 2.5792000000000176e-05, 2.6250000000001966e-05, 2.584700000000245e-05, 2.5485999999998177e-05, 2.5555999999999496e-05, 2.5805999999999746e-05, 2.5555999999999496e-05, 2.5791000000000702e-05, 2.6221999999999357e-05, 2.5569999999999066e-05, 2.5569999999999066e-05, 2.5805000000000272e-05, 2.618100000000012e-05, 2.6194000000000217e-05, 2.5598000000001675e-05, 2.556900000000306e-05, 2.6180000000000647e-05, 2.5805000000000272e-05, 2.6443999999996998e-05, 2.5596999999998732e-05, 2.5541999999999926e-05, 2.5832999999999412e-05, 2.6499999999998747e-05, 2.645899999999951e-05, 2.5582999999999162e-05, 2.5777000000001132e-05, 2.638899999999819e-05, 2.5805999999999746e-05, 2.6471999999999607e-05, 2.5582999999999162e-05, 2.5805999999999746e-05, 2.6458000000000037e-05, 2.561100000000177e-05, 2.5584000000002105e-05, 2.6528000000001356e-05, 2.6236000000002396e-05, 2.643100000000037e-05, 2.6249999999998497e-05, 2.6471999999999607e-05, 2.5582999999999162e-05, 2.6513999999998317e-05, 2.6485999999999177e-05, 2.5582999999999162e-05]</msg>
<status status="PASS" starttime="20201112 09:54:39.092" endtime="20201112 09:54:39.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.087" endtime="20201112 09:54:39.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.097" endtime="20201112 09:54:39.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:39.101" endtime="20201112 09:54:39.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.099" endtime="20201112 09:54:39.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.096" endtime="20201112 09:54:39.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.728" endtime="20201112 09:54:39.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.727" endtime="20201112 09:54:39.122"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.131" endtime="20201112 09:54:39.146"></status>
</kw>
<msg timestamp="20201112 09:54:39.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.129" endtime="20201112 09:54:39.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.148" endtime="20201112 09:54:39.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.150" endtime="20201112 09:54:39.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.127" endtime="20201112 09:54:39.154"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.125" endtime="20201112 09:54:39.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.161" endtime="20201112 09:54:39.446"></status>
</kw>
<msg timestamp="20201112 09:54:39.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022633167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022660486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.159" endtime="20201112 09:54:39.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022633167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022660486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.451" endtime="20201112 09:54:39.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.459" endtime="20201112 09:54:39.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.157" endtime="20201112 09:54:39.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.155" endtime="20201112 09:54:39.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:39.467" level="INFO">${RESULT} = [{'time': 0.022660486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7319000000001342e-05, 'source_diff': 2.7319000000001342e-05}, {'time': 0.022689042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:39.463" endtime="20201112 09:54:39.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:39.480" level="INFO">${ACCURACY} = {'time': [0.022660486, 0.022689042, 0.022717069, 0.022745056, 0.022774083, 0.022803125, 0.022832083, 0.022860056, 0.022888236, 0.022916111, 0.022944111, 0.022972097, 0.023000069, 0.023029069, 0.023058...</msg>
<status status="PASS" starttime="20201112 09:54:39.468" endtime="20201112 09:54:39.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.485" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 09:54:39.484" endtime="20201112 09:54:39.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.488" level="INFO">VALUE: [2.7319000000001342e-05, 2.669500000000019e-05, 2.6680000000001147e-05, 2.647299999999908e-05, 2.7401999999999288e-05, 2.7361000000000052e-05, 2.7361000000000052e-05, 2.648699999999865e-05, 2.6929999999997928e-05, 2.6694000000000717e-05, 2.6471999999999607e-05, 2.6694000000000717e-05, 2.6694000000000717e-05, 2.7347000000000482e-05, 2.7361000000000052e-05, 2.7361000000000052e-05, 2.6708000000000287e-05, 2.669500000000019e-05, 2.7318999999997873e-05, 2.6471999999999607e-05, 2.6693999999997248e-05, 2.7347000000000482e-05, 2.6916000000001827e-05, 2.7347000000000482e-05, 2.6638999999998442e-05, 2.6694000000000717e-05, 2.647299999999908e-05, 2.6680000000001147e-05, 2.7374999999999622e-05, 2.6679999999997678e-05, 2.6485999999999177e-05, 2.644499999999994e-05, 2.669500000000019e-05, 2.6458000000000037e-05, 2.7584000000000636e-05, 2.7361000000000052e-05, 2.645899999999951e-05, 2.668100000000062e-05, 2.7347000000000482e-05, 2.7582999999997693e-05, 2.645899999999951e-05, 2.7361000000000052e-05, 2.690300000000173e-05, 2.6471999999999607e-05, 2.6485999999999177e-05, 2.69170000000013e-05, 2.7361000000000052e-05, 2.669500000000019e-05, 2.7361000000000052e-05, 2.6624999999998872e-05]</msg>
<status status="PASS" starttime="20201112 09:54:39.486" endtime="20201112 09:54:39.489"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.481" endtime="20201112 09:54:39.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.491" endtime="20201112 09:54:39.493"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:39.495" endtime="20201112 09:54:39.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.493" endtime="20201112 09:54:39.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.490" endtime="20201112 09:54:39.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.123" endtime="20201112 09:54:39.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.122" endtime="20201112 09:54:39.516"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.525" endtime="20201112 09:54:39.540"></status>
</kw>
<msg timestamp="20201112 09:54:39.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.523" endtime="20201112 09:54:39.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.542" endtime="20201112 09:54:39.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.545" endtime="20201112 09:54:39.547"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.521" endtime="20201112 09:54:39.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.519" endtime="20201112 09:54:39.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.555" endtime="20201112 09:54:39.840"></status>
</kw>
<msg timestamp="20201112 09:54:39.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022614611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022643528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.553" endtime="20201112 09:54:39.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022614611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022643528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.845" endtime="20201112 09:54:39.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.854" endtime="20201112 09:54:39.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.551" endtime="20201112 09:54:39.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.549" endtime="20201112 09:54:39.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:39.862" level="INFO">${RESULT} = [{'time': 0.022643528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8916999999999832e-05, 'source_diff': 2.8916999999999832e-05}, {'time': 0.022673264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:39.858" endtime="20201112 09:54:39.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:39.876" level="INFO">${ACCURACY} = {'time': [0.022643528, 0.022673264, 0.022702208, 0.022732264, 0.022762097, 0.022792083, 0.02282125, 0.022851069, 0.022880236, 0.022910278, 0.022940222, 0.022969083, 0.02299825, 0.023028222, 0.02305726...</msg>
<status status="PASS" starttime="20201112 09:54:39.863" endtime="20201112 09:54:39.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.880" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 09:54:39.879" endtime="20201112 09:54:39.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.883" level="INFO">VALUE: [2.8916999999999832e-05, 2.8277999999999637e-05, 2.7583000000001162e-05, 2.8471999999998138e-05, 2.8249999999997027e-05, 2.8250000000000497e-05, 2.7806000000001746e-05, 2.8236000000000927e-05, 2.762500000000334e-05, 2.8471999999998138e-05, 2.8471999999998138e-05, 2.7569000000001592e-05, 2.7806000000001746e-05, 2.8194000000002217e-05, 2.7583000000001162e-05, 2.8249999999997027e-05, 2.7804999999998803e-05, 2.845899999999804e-05, 2.7597000000000732e-05, 2.7791999999998707e-05, 2.8471999999998138e-05, 2.7568999999998123e-05, 2.7805000000002272e-05, 2.7722000000000857e-05, 2.8486000000001177e-05, 2.7584000000000636e-05, 2.7806000000001746e-05, 2.7806000000001746e-05, 2.7597000000000732e-05, 2.7805999999998277e-05, 2.7583000000001162e-05, 2.8457999999998568e-05, 2.7568999999998123e-05, 2.7584000000000636e-05, 2.7555999999998027e-05, 2.7582999999997693e-05, 2.7611999999999776e-05, 2.8485999999997708e-05, 2.8249999999997027e-05, 2.7597000000000732e-05, 2.8319999999998346e-05, 2.8472000000001607e-05, 2.8402999999999762e-05, 2.847299999999761e-05, 2.8471999999998138e-05, 2.8235999999997458e-05, 2.7583000000001162e-05, 2.8415999999999858e-05, 2.7611000000000302e-05, 2.8250000000000497e-05]</msg>
<status status="PASS" starttime="20201112 09:54:39.882" endtime="20201112 09:54:39.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.877" endtime="20201112 09:54:39.885"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.887" endtime="20201112 09:54:39.888"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:39.890" endtime="20201112 09:54:39.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.889" endtime="20201112 09:54:39.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.885" endtime="20201112 09:54:39.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.517" endtime="20201112 09:54:39.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.516" endtime="20201112 09:54:39.911"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.921" endtime="20201112 09:54:39.937"></status>
</kw>
<msg timestamp="20201112 09:54:39.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.919" endtime="20201112 09:54:39.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.938" endtime="20201112 09:54:39.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.941" endtime="20201112 09:54:39.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.916" endtime="20201112 09:54:39.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.914" endtime="20201112 09:54:39.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.951" endtime="20201112 09:54:40.238"></status>
</kw>
<msg timestamp="20201112 09:54:40.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022935042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022965042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.950" endtime="20201112 09:54:40.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022935042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022965042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.242" endtime="20201112 09:54:40.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.251" endtime="20201112 09:54:40.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.947" endtime="20201112 09:54:40.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.945" endtime="20201112 09:54:40.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:40.258" level="INFO">${RESULT} = [{'time': 0.022965042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0000000000002247e-05, 'source_diff': 3.0000000000002247e-05}, {'time': 0.022995611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:40.254" endtime="20201112 09:54:40.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:40.273" level="INFO">${ACCURACY} = {'time': [0.022965042, 0.022995611, 0.023026597, 0.023057542, 0.023087458, 0.023117444, 0.023148458, 0.023178458, 0.023208556, 0.023238583, 0.0232695, 0.023299486, 0.023329486, 0.023359444, 0.02338966...</msg>
<status status="PASS" starttime="20201112 09:54:40.259" endtime="20201112 09:54:40.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.278" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 09:54:40.277" endtime="20201112 09:54:40.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.280" level="INFO">VALUE: [3.0000000000002247e-05, 2.8693999999999248e-05, 2.9332999999999443e-05, 2.9403000000000762e-05, 2.8472000000001607e-05, 2.8708000000002287e-05, 2.9360999999998583e-05, 2.8457999999998568e-05, 2.869500000000219e-05, 2.8693999999999248e-05, 2.9388999999997723e-05, 2.8708000000002287e-05, 2.8693999999999248e-05, 2.8457999999998568e-05, 2.868099999999915e-05, 2.9402999999997292e-05, 2.9389000000001192e-05, 2.9625000000001872e-05, 2.9403000000000762e-05, 2.9347999999998486e-05, 2.9582999999999693e-05, 2.9360999999998583e-05, 2.868100000000262e-05, 2.868099999999915e-05, 2.9346999999999013e-05, 2.869500000000219e-05, 2.943100000000337e-05, 2.9360999999998583e-05, 2.868099999999915e-05, 2.9318999999999873e-05, 2.8903000000000262e-05, 2.870899999999829e-05, 2.8666999999999582e-05, 2.869500000000219e-05, 2.868099999999915e-05, 2.868099999999915e-05, 2.8486000000001177e-05, 2.8693999999999248e-05, 2.9346999999999013e-05, 2.9346999999999013e-05, 2.9360999999998583e-05, 2.9347000000002482e-05, 2.8750000000000997e-05, 2.9360999999998583e-05, 2.9347000000002482e-05, 2.8485999999997708e-05, 2.9361000000002052e-05, 2.8666999999999582e-05, 2.8666999999999582e-05, 2.8694000000002717e-05]</msg>
<status status="PASS" starttime="20201112 09:54:40.279" endtime="20201112 09:54:40.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.274" endtime="20201112 09:54:40.282"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.284" endtime="20201112 09:54:40.286"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:40.288" endtime="20201112 09:54:40.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.286" endtime="20201112 09:54:40.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.282" endtime="20201112 09:54:40.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.912" endtime="20201112 09:54:40.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.912" endtime="20201112 09:54:40.309"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.318" endtime="20201112 09:54:40.333"></status>
</kw>
<msg timestamp="20201112 09:54:40.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.316" endtime="20201112 09:54:40.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.335" endtime="20201112 09:54:40.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.337" endtime="20201112 09:54:40.340"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.313" endtime="20201112 09:54:40.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.311" endtime="20201112 09:54:40.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.348" endtime="20201112 09:54:40.633"></status>
</kw>
<msg timestamp="20201112 09:54:40.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022537028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022567444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.346" endtime="20201112 09:54:40.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022537028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022567444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.637" endtime="20201112 09:54:40.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.646" endtime="20201112 09:54:40.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.343" endtime="20201112 09:54:40.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.342" endtime="20201112 09:54:40.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:40.653" level="INFO">${RESULT} = [{'time': 0.022567444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.041599999999839e-05, 'source_diff': 3.041599999999839e-05}, {'time': 0.022599056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:40.649" endtime="20201112 09:54:40.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:40.667" level="INFO">${ACCURACY} = {'time': [0.022567444, 0.022599056, 0.022630042, 0.022662125, 0.022694181, 0.022726069, 0.022758, 0.022789181, 0.022821139, 0.022852153, 0.022884153, 0.022915181, 0.022946208, 0.022978222, 0.023009125...</msg>
<status status="PASS" starttime="20201112 09:54:40.654" endtime="20201112 09:54:40.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.672" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 09:54:40.670" endtime="20201112 09:54:40.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.674" level="INFO">VALUE: [3.041599999999839e-05, 3.0013999999998348e-05, 2.9806000000000277e-05, 3.0431000000000902e-05, 3.044500000000047e-05, 3.0250000000002497e-05, 3.0221999999999888e-05, 2.9597999999998736e-05, 3.0249999999999028e-05, 2.9806000000000277e-05, 3.0264000000002067e-05, 2.9806000000000277e-05, 2.9582999999999693e-05, 3.041599999999839e-05, 2.9582999999999693e-05, 3.0458000000000568e-05, 3.0458000000000568e-05, 3.0249999999999028e-05, 3.0472000000000138e-05, 3.0249999999999028e-05, 3.0278000000001637e-05, 3.0499999999999278e-05, 2.9819000000000373e-05, 3.0249999999999028e-05, 2.9583999999999167e-05, 2.9806000000000277e-05, 2.9792000000000707e-05, 2.9792000000000707e-05, 2.9569000000000123e-05, 3.0444000000000998e-05, 2.9806000000000277e-05, 2.9597999999998736e-05, 2.9582999999999693e-05, 2.9819000000000373e-05, 2.9805000000000803e-05, 3.0388999999998723e-05, 3.0250000000002497e-05, 2.9569999999999597e-05, 2.9806000000000277e-05, 2.9806000000000277e-05, 2.9791999999997237e-05, 2.9806000000000277e-05, 2.9596999999999263e-05, 2.9583999999999167e-05, 2.9778000000001137e-05, 2.9791000000001233e-05, 2.9805999999996807e-05, 3.0263000000002593e-05, 3.0221999999999888e-05, 2.965199999999807e-05]</msg>
<status status="PASS" starttime="20201112 09:54:40.673" endtime="20201112 09:54:40.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.668" endtime="20201112 09:54:40.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.678" endtime="20201112 09:54:40.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:40.682" endtime="20201112 09:54:40.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.680" endtime="20201112 09:54:40.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.676" endtime="20201112 09:54:40.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.310" endtime="20201112 09:54:40.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.309" endtime="20201112 09:54:40.703"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.712" endtime="20201112 09:54:40.727"></status>
</kw>
<msg timestamp="20201112 09:54:40.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.710" endtime="20201112 09:54:40.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.729" endtime="20201112 09:54:40.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.731" endtime="20201112 09:54:40.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.707" endtime="20201112 09:54:40.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.705" endtime="20201112 09:54:40.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.742" endtime="20201112 09:54:41.027"></status>
</kw>
<msg timestamp="20201112 09:54:41.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022579083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.740" endtime="20201112 09:54:41.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022579083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:41.032" endtime="20201112 09:54:41.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.040" endtime="20201112 09:54:41.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.737" endtime="20201112 09:54:41.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.736" endtime="20201112 09:54:41.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:41.047" level="INFO">${RESULT} = [{'time': 0.022610417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.133400000000092e-05, 'source_diff': 3.133400000000092e-05}, {'time': 0.022643139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:41.044" endtime="20201112 09:54:41.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:41.061" level="INFO">${ACCURACY} = {'time': [0.022610417, 0.022643139, 0.022675014, 0.022707153, 0.022739, 0.022771014, 0.022803069, 0.022835056, 0.022867236, 0.022899139, 0.022931069, 0.022963083, 0.022996181, 0.023029139, 0.023062069...</msg>
<status status="PASS" starttime="20201112 09:54:41.048" endtime="20201112 09:54:41.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.066" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 09:54:41.065" endtime="20201112 09:54:41.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.068" level="INFO">VALUE: [3.133400000000092e-05, 3.113899999999947e-05, 3.069500000000072e-05, 3.091700000000183e-05, 3.069399999999778e-05, 3.0472000000000138e-05, 3.069399999999778e-05, 3.047299999999961e-05, 3.07639999999991e-05, 3.068099999999768e-05, 3.0485999999999708e-05, 3.067999999999821e-05, 3.137500000000015e-05, 3.134700000000101e-05, 3.136100000000058e-05, 3.068100000000115e-05, 3.067999999999821e-05, 3.0472000000000138e-05, 3.069399999999778e-05, 3.069500000000072e-05, 3.14310000000019e-05, 3.044500000000047e-05, 3.134700000000101e-05, 3.069399999999778e-05, 3.0444000000000998e-05, 3.091699999999836e-05, 3.063899999999897e-05, 3.048699999999918e-05, 3.136100000000058e-05, 3.047300000000308e-05, 3.066599999999864e-05, 3.137500000000015e-05, 3.0472000000000138e-05, 3.1346999999997543e-05, 3.068100000000115e-05, 3.069400000000125e-05, 3.068000000000168e-05, 3.069399999999778e-05, 3.141699999999886e-05, 3.159700000000126e-05, 3.067999999999821e-05, 3.069400000000125e-05, 3.11249999999999e-05, 3.140299999999929e-05, 3.091699999999836e-05, 3.136100000000058e-05, 3.152799999999942e-05, 3.072200000000039e-05, 3.134700000000101e-05, 3.0416000000001858e-05]</msg>
<status status="PASS" starttime="20201112 09:54:41.067" endtime="20201112 09:54:41.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.062" endtime="20201112 09:54:41.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.072" endtime="20201112 09:54:41.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:41.076" endtime="20201112 09:54:41.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.074" endtime="20201112 09:54:41.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.070" endtime="20201112 09:54:41.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.704" endtime="20201112 09:54:41.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.703" endtime="20201112 09:54:41.097"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.106" endtime="20201112 09:54:41.121"></status>
</kw>
<msg timestamp="20201112 09:54:41.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.104" endtime="20201112 09:54:41.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.123" endtime="20201112 09:54:41.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.125" endtime="20201112 09:54:41.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.101" endtime="20201112 09:54:41.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.099" endtime="20201112 09:54:41.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.136" endtime="20201112 09:54:41.421"></status>
</kw>
<msg timestamp="20201112 09:54:41.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022530153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022563194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:41.134" endtime="20201112 09:54:41.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022530153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022563194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:41.426" endtime="20201112 09:54:41.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.434" endtime="20201112 09:54:41.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.131" endtime="20201112 09:54:41.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.130" endtime="20201112 09:54:41.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:41.441" level="INFO">${RESULT} = [{'time': 0.022563194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3041000000001014e-05, 'source_diff': 3.3041000000001014e-05}, {'time': 0.022596611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:41.438" endtime="20201112 09:54:41.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:41.455" level="INFO">${ACCURACY} = {'time': [0.022563194, 0.022596611, 0.022629792, 0.02266375, 0.022696819, 0.022729792, 0.022762792, 0.022795625, 0.022829819, 0.022862708, 0.022895708, 0.022928667, 0.022962778, 0.022995764, 0.0230297...</msg>
<status status="PASS" starttime="20201112 09:54:41.442" endtime="20201112 09:54:41.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.460" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 09:54:41.459" endtime="20201112 09:54:41.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.462" level="INFO">VALUE: [3.3041000000001014e-05, 3.202799999999992e-05, 3.202799999999992e-05, 3.240300000000029e-05, 3.1804999999999334e-05, 3.179199999999924e-05, 3.158400000000117e-05, 3.1582999999998224e-05, 3.247200000000214e-05, 3.1568999999998654e-05, 3.1554999999999084e-05, 3.181999999999838e-05, 3.247199999999867e-05, 3.156999999999813e-05, 3.226399999999713e-05, 3.24579999999991e-05, 3.247200000000214e-05, 3.1860999999997613e-05, 3.225000000000103e-05, 3.163899999999997e-05, 3.225000000000103e-05, 3.179199999999924e-05, 3.245899999999857e-05, 3.179200000000271e-05, 3.248600000000171e-05, 3.247200000000214e-05, 3.159700000000126e-05, 3.200000000000078e-05, 3.225000000000103e-05, 3.1804999999999334e-05, 3.1790999999999764e-05, 3.216699999999961e-05, 3.179200000000271e-05, 3.1818999999998904e-05, 3.1568999999998654e-05, 3.1596999999997794e-05, 3.163899999999997e-05, 3.177799999999967e-05, 3.1804999999999334e-05, 3.179199999999924e-05, 3.244399999999953e-05, 3.224999999999756e-05, 3.158300000000169e-05, 3.202799999999992e-05, 3.223600000000146e-05, 3.1568999999998654e-05, 3.1818999999998904e-05, 3.177799999999967e-05, 3.159700000000126e-05, 3.1790999999999764e-05]</msg>
<status status="PASS" starttime="20201112 09:54:41.461" endtime="20201112 09:54:41.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.456" endtime="20201112 09:54:41.464"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.466" endtime="20201112 09:54:41.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:41.470" endtime="20201112 09:54:41.489"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.468" endtime="20201112 09:54:41.490"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.465" endtime="20201112 09:54:41.490"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.098" endtime="20201112 09:54:41.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.097" endtime="20201112 09:54:41.491"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.500" endtime="20201112 09:54:41.517"></status>
</kw>
<msg timestamp="20201112 09:54:41.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.498" endtime="20201112 09:54:41.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.518" endtime="20201112 09:54:41.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.521" endtime="20201112 09:54:41.523"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.496" endtime="20201112 09:54:41.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.493" endtime="20201112 09:54:41.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.531" endtime="20201112 09:54:41.817"></status>
</kw>
<msg timestamp="20201112 09:54:41.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022549236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022591417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:41.530" endtime="20201112 09:54:41.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022549236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022591417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:41.822" endtime="20201112 09:54:41.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.830" endtime="20201112 09:54:41.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.527" endtime="20201112 09:54:41.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.525" endtime="20201112 09:54:41.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:41.838" level="INFO">${RESULT} = [{'time': 0.022591417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2180999999998775e-05, 'source_diff': 4.2180999999998775e-05}, {'time': 0.022635444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:41.834" endtime="20201112 09:54:41.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:41.852" level="INFO">${ACCURACY} = {'time': [0.022591417, 0.022635444, 0.022679375, 0.022723417, 0.022767403, 0.022811417, 0.022855389, 0.022899417, 0.022943403, 0.022987417, 0.023031403, 0.023075444, 0.023119417, 0.023163431, 0.023207...</msg>
<status status="PASS" starttime="20201112 09:54:41.839" endtime="20201112 09:54:41.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.857" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 09:54:41.856" endtime="20201112 09:54:41.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.860" level="INFO">VALUE: [4.2180999999998775e-05, 4.1805000000002396e-05, 4.1375000000003215e-05, 4.1694999999997845e-05, 4.1888999999999815e-05, 4.14860000000003e-05, 4.155600000000162e-05, 4.1680999999998275e-05, 4.152800000000248e-05, 4.1402999999998885e-05, 4.1347000000000605e-05, 4.140199999999941e-05, 4.14860000000003e-05, 4.1667000000002175e-05, 4.166599999999923e-05, 4.1374999999999745e-05, 4.1624999999999995e-05, 4.166599999999923e-05, 4.1583000000001286e-05, 4.142999999999855e-05, 4.154200000000205e-05, 4.1361000000000175e-05, 4.1624999999999995e-05, 4.151399999999944e-05, 4.1512999999999967e-05, 4.1583000000001286e-05, 4.1583000000001286e-05, 4.1554999999998676e-05, 4.1804999999998926e-05, 4.1583000000001286e-05, 4.1652999999999135e-05, 4.1888999999999815e-05, 4.1888999999999815e-05, 4.144399999999812e-05, 4.1638999999999565e-05, 4.1861000000000675e-05, 4.149999999999987e-05, 4.1361000000000175e-05, 4.1583000000001286e-05, 4.1846999999997636e-05, 4.175000000000012e-05, 4.1374999999999745e-05, 4.1832999999998066e-05, 4.158400000000076e-05, 4.175000000000012e-05, 4.158400000000076e-05, 4.1888999999999815e-05, 4.176399999999969e-05, 4.1430999999998025e-05, 4.1555000000002146e-05]</msg>
<status status="PASS" starttime="20201112 09:54:41.858" endtime="20201112 09:54:41.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.853" endtime="20201112 09:54:41.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.864" endtime="20201112 09:54:41.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:41.867" endtime="20201112 09:54:41.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.866" endtime="20201112 09:54:41.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.862" endtime="20201112 09:54:41.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.492" endtime="20201112 09:54:41.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.491" endtime="20201112 09:54:41.888"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.898" endtime="20201112 09:54:41.914"></status>
</kw>
<msg timestamp="20201112 09:54:41.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.896" endtime="20201112 09:54:41.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.916" endtime="20201112 09:54:41.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.918" endtime="20201112 09:54:41.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.893" endtime="20201112 09:54:41.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.891" endtime="20201112 09:54:41.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.929" endtime="20201112 09:54:42.215"></status>
</kw>
<msg timestamp="20201112 09:54:42.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023299722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023342667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:41.927" endtime="20201112 09:54:42.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023299722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023342667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:42.219" endtime="20201112 09:54:42.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.228" endtime="20201112 09:54:42.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.924" endtime="20201112 09:54:42.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.923" endtime="20201112 09:54:42.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:42.235" level="INFO">${RESULT} = [{'time': 0.023342667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2945000000002564e-05, 'source_diff': 4.2945000000002564e-05}, {'time': 0.023387625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:42.232" endtime="20201112 09:54:42.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:42.249" level="INFO">${ACCURACY} = {'time': [0.023342667, 0.023387625, 0.023432569, 0.023477611, 0.023522583, 0.023567611, 0.023612583, 0.023657611, 0.023702597, 0.023747611, 0.023792597, 0.023837625, 0.023882611, 0.023927639, 0.023972...</msg>
<status status="PASS" starttime="20201112 09:54:42.236" endtime="20201112 09:54:42.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.254" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 09:54:42.253" endtime="20201112 09:54:42.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.256" level="INFO">VALUE: [4.2945000000002564e-05, 4.2596999999998386e-05, 4.270799999999894e-05, 4.274999999999765e-05, 4.247199999999826e-05, 4.2818999999999496e-05, 4.276400000000069e-05, 4.2874999999997776e-05, 4.272199999999851e-05, 4.2888999999997346e-05, 4.274999999999765e-05, 4.24860000000013e-05, 4.2555000000003146e-05, 4.245800000000216e-05, 4.255599999999915e-05, 4.2625000000000995e-05, 4.2347000000001606e-05, 4.2930999999999525e-05, 4.33059999999999e-05, 4.281999999999897e-05, 4.254199999999958e-05, 4.2596999999998386e-05, 4.2402999999999885e-05, 4.2653000000000135e-05, 4.2596999999998386e-05, 4.283399999999854e-05, 4.2596999999998386e-05, 4.279199999999983e-05, 4.2624999999997526e-05, 4.319399999999987e-05, 4.28059999999994e-05, 4.251399999999697e-05, 4.258399999999829e-05, 4.2804999999999926e-05, 4.2653000000000135e-05, 4.24860000000013e-05, 4.242999999999955e-05, 4.26799999999998e-05, 4.245800000000216e-05, 4.272200000000198e-05, 4.2375000000000745e-05, 4.2846999999998636e-05, 4.24860000000013e-05, 4.275000000000112e-05, 4.266600000000023e-05, 4.2846999999998636e-05, 4.2653000000000135e-05, 4.254199999999958e-05, 4.245799999999869e-05, 4.2846999999998636e-05]</msg>
<status status="PASS" starttime="20201112 09:54:42.255" endtime="20201112 09:54:42.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.250" endtime="20201112 09:54:42.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.260" endtime="20201112 09:54:42.261"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:42.264" endtime="20201112 09:54:42.283"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.262" endtime="20201112 09:54:42.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.258" endtime="20201112 09:54:42.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.889" endtime="20201112 09:54:42.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.889" endtime="20201112 09:54:42.285"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.294" endtime="20201112 09:54:42.311"></status>
</kw>
<msg timestamp="20201112 09:54:42.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.292" endtime="20201112 09:54:42.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.312" endtime="20201112 09:54:42.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.315" endtime="20201112 09:54:42.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.289" endtime="20201112 09:54:42.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.287" endtime="20201112 09:54:42.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.325" endtime="20201112 09:54:42.611"></status>
</kw>
<msg timestamp="20201112 09:54:42.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022620208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022663611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:42.324" endtime="20201112 09:54:42.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022620208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022663611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:42.615" endtime="20201112 09:54:42.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.624" endtime="20201112 09:54:42.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.321" endtime="20201112 09:54:42.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.319" endtime="20201112 09:54:42.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:42.631" level="INFO">${RESULT} = [{'time': 0.022663611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3403000000000885e-05, 'source_diff': 4.3403000000000885e-05}, {'time': 0.022709625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:42.627" endtime="20201112 09:54:42.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:42.645" level="INFO">${ACCURACY} = {'time': [0.022663611, 0.022709625, 0.022755569, 0.022801597, 0.022847583, 0.022893583, 0.022939569, 0.022985597, 0.023031583, 0.023077597, 0.023123597, 0.023169611, 0.023215597, 0.023261625, 0.023307...</msg>
<status status="PASS" starttime="20201112 09:54:42.632" endtime="20201112 09:54:42.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.650" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 09:54:42.648" endtime="20201112 09:54:42.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.652" level="INFO">VALUE: [4.3403000000000885e-05, 4.3833000000000066e-05, 4.343000000000055e-05, 4.36800000000008e-05, 4.3361000000002176e-05, 4.355499999999721e-05, 4.3596999999999386e-05, 4.3403000000000885e-05, 4.345799999999969e-05, 4.372199999999951e-05, 4.351399999999797e-05, 4.345799999999969e-05, 4.3596999999999386e-05, 4.3611000000002426e-05, 4.3833000000000066e-05, 4.3917000000000955e-05, 4.354200000000058e-05, 4.376400000000169e-05, 4.345800000000316e-05, 4.3541000000001107e-05, 4.372199999999951e-05, 4.3582999999999816e-05, 4.3652999999997666e-05, 4.356999999999972e-05, 4.369400000000037e-05, 4.38060000000004e-05, 4.3361000000002176e-05, 4.3694999999999845e-05, 4.3431000000000025e-05, 4.3417000000000455e-05, 4.383400000000301e-05, 4.348599999999883e-05, 4.373599999999908e-05, 4.3417000000000455e-05, 4.381999999999997e-05, 4.3694999999999845e-05, 4.3860999999999206e-05, 4.338800000000184e-05, 4.356999999999972e-05, 4.3875000000002246e-05, 4.376299999999875e-05, 4.3931000000000525e-05, 4.3610999999998956e-05, 4.3638999999998096e-05, 4.376299999999875e-05, 4.3639000000001565e-05, 4.341600000000098e-05, 4.373600000000255e-05, 4.3638999999998096e-05, 4.3902999999997916e-05]</msg>
<status status="PASS" starttime="20201112 09:54:42.651" endtime="20201112 09:54:42.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.646" endtime="20201112 09:54:42.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.656" endtime="20201112 09:54:42.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:42.659" endtime="20201112 09:54:42.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.658" endtime="20201112 09:54:42.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.654" endtime="20201112 09:54:42.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.286" endtime="20201112 09:54:42.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.285" endtime="20201112 09:54:42.680"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.690" endtime="20201112 09:54:42.705"></status>
</kw>
<msg timestamp="20201112 09:54:42.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.688" endtime="20201112 09:54:42.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.707" endtime="20201112 09:54:42.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.709" endtime="20201112 09:54:42.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.685" endtime="20201112 09:54:42.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.683" endtime="20201112 09:54:42.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.720" endtime="20201112 09:54:43.006"></status>
</kw>
<msg timestamp="20201112 09:54:43.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022612472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022657069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:42.718" endtime="20201112 09:54:43.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022612472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022657069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:43.010" endtime="20201112 09:54:43.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.019" endtime="20201112 09:54:43.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.716" endtime="20201112 09:54:43.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.714" endtime="20201112 09:54:43.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:43.026" level="INFO">${RESULT} = [{'time': 0.022657069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.459699999999692e-05, 'source_diff': 4.459699999999692e-05}, {'time': 0.022704097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:43.022" endtime="20201112 09:54:43.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:43.040" level="INFO">${ACCURACY} = {'time': [0.022657069, 0.022704097, 0.022751042, 0.022798083, 0.022845056, 0.022892069, 0.022939056, 0.022986111, 0.023033069, 0.023080097, 0.023127083, 0.023174097, 0.023221083, 0.023268097, 0.023315...</msg>
<status status="PASS" starttime="20201112 09:54:43.027" endtime="20201112 09:54:43.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.045" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 09:54:43.044" endtime="20201112 09:54:43.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.047" level="INFO">VALUE: [4.459699999999692e-05, 4.4374999999999276e-05, 4.473600000000008e-05, 4.472200000000051e-05, 4.4638999999999096e-05, 4.454100000000211e-05, 4.4666999999998236e-05, 4.4417000000001455e-05, 4.4347000000000136e-05, 4.4403000000001885e-05, 4.4638999999999096e-05, 4.473600000000008e-05, 4.4610999999999956e-05, 4.4639000000002566e-05, 4.452799999999854e-05, 4.451400000000244e-05, 4.4403000000001885e-05, 4.4610999999999956e-05, 4.452800000000201e-05, 4.472200000000051e-05, 4.474999999999965e-05, 4.476399999999922e-05, 4.4681000000001275e-05, 4.4360999999999706e-05, 4.4861000000000206e-05, 4.4917000000001955e-05, 4.444400000000112e-05, 4.4374999999999276e-05, 4.447200000000026e-05, 4.474999999999965e-05, 4.454200000000158e-05, 4.451399999999897e-05, 4.4667000000001705e-05, 4.4861000000000206e-05, 4.4625000000002996e-05, 4.4624999999999526e-05, 4.459799999999986e-05, 4.4736999999999555e-05, 4.433399999999657e-05, 4.4597000000000386e-05, 4.476399999999922e-05, 4.4597000000000386e-05, 4.473600000000008e-05, 4.480499999999846e-05, 4.480599999999793e-05, 4.44999999999994e-05, 4.481899999999803e-05, 4.448599999999983e-05, 4.467999999999833e-05, 4.479100000000236e-05]</msg>
<status status="PASS" starttime="20201112 09:54:43.046" endtime="20201112 09:54:43.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.041" endtime="20201112 09:54:43.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.051" endtime="20201112 09:54:43.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:43.055" endtime="20201112 09:54:43.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.053" endtime="20201112 09:54:43.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.049" endtime="20201112 09:54:43.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.681" endtime="20201112 09:54:43.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.681" endtime="20201112 09:54:43.076"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.085" endtime="20201112 09:54:43.101"></status>
</kw>
<msg timestamp="20201112 09:54:43.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.083" endtime="20201112 09:54:43.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.103" endtime="20201112 09:54:43.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.106" endtime="20201112 09:54:43.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.080" endtime="20201112 09:54:43.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.078" endtime="20201112 09:54:43.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.116" endtime="20201112 09:54:43.401"></status>
</kw>
<msg timestamp="20201112 09:54:43.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022736347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:43.114" endtime="20201112 09:54:43.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022736347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:43.405" endtime="20201112 09:54:43.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.414" endtime="20201112 09:54:43.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.112" endtime="20201112 09:54:43.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.110" endtime="20201112 09:54:43.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:43.421" level="INFO">${RESULT} = [{'time': 0.022736347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.566599999999976e-05, 'source_diff': 4.566599999999976e-05}, {'time': 0.022784375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:43.418" endtime="20201112 09:54:43.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:43.436" level="INFO">${ACCURACY} = {'time': [0.022736347, 0.022784375, 0.022832333, 0.022880347, 0.022928347, 0.022976347, 0.023024361, 0.023072361, 0.023120347, 0.023168361, 0.023216347, 0.023264389, 0.023312375, 0.023360403, 0.023408...</msg>
<status status="PASS" starttime="20201112 09:54:43.422" endtime="20201112 09:54:43.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.441" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 09:54:43.440" endtime="20201112 09:54:43.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.443" level="INFO">VALUE: [4.566599999999976e-05, 4.5361000000000706e-05, 4.572200000000151e-05, 4.552799999999954e-05, 4.580500000000293e-05, 4.5875000000000776e-05, 4.5847000000001636e-05, 4.5666999999999236e-05, 4.579099999999989e-05, 4.5639000000000096e-05, 4.554099999999964e-05, 4.58199999999985e-05, 4.56939999999989e-05, 4.573599999999761e-05, 4.548599999999736e-05, 4.572200000000151e-05, 4.577799999999979e-05, 4.5694999999998376e-05, 4.545799999999822e-05, 4.5430999999998556e-05, 4.548600000000083e-05, 4.58199999999985e-05, 4.5833000000002067e-05, 4.584799999999764e-05, 4.558399999999782e-05, 4.5473000000000735e-05, 4.5875000000000776e-05, 4.55000000000004e-05, 4.5639000000000096e-05, 4.555499999999921e-05, 4.5388999999999846e-05, 4.554099999999964e-05, 4.548600000000083e-05, 4.558299999999835e-05, 4.580499999999946e-05, 4.548599999999736e-05, 4.581899999999903e-05, 4.5972999999997766e-05, 4.5583000000001817e-05, 4.5375000000000276e-05, 4.551399999999997e-05, 4.5875000000000776e-05, 4.573600000000108e-05, 4.542999999999908e-05, 4.551399999999997e-05, 4.545799999999822e-05, 4.579099999999989e-05, 4.5930999999999056e-05, 4.551399999999997e-05, 4.547200000000126e-05]</msg>
<status status="PASS" starttime="20201112 09:54:43.442" endtime="20201112 09:54:43.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.437" endtime="20201112 09:54:43.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.447" endtime="20201112 09:54:43.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:43.451" endtime="20201112 09:54:43.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.449" endtime="20201112 09:54:43.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.445" endtime="20201112 09:54:43.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.077" endtime="20201112 09:54:43.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.076" endtime="20201112 09:54:43.472"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.480" endtime="20201112 09:54:43.496"></status>
</kw>
<msg timestamp="20201112 09:54:43.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.479" endtime="20201112 09:54:43.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.498" endtime="20201112 09:54:43.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.500" endtime="20201112 09:54:43.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.476" endtime="20201112 09:54:43.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.474" endtime="20201112 09:54:43.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.511" endtime="20201112 09:54:43.797"></status>
</kw>
<msg timestamp="20201112 09:54:43.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022370514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022417792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:43.509" endtime="20201112 09:54:43.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022370514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022417792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:43.801" endtime="20201112 09:54:43.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.809" endtime="20201112 09:54:43.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.506" endtime="20201112 09:54:43.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.505" endtime="20201112 09:54:43.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:43.817" level="INFO">${RESULT} = [{'time': 0.022417792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.727799999999782e-05, 'source_diff': 4.727799999999782e-05}, {'time': 0.022466819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:43.813" endtime="20201112 09:54:43.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:43.830" level="INFO">${ACCURACY} = {'time': [0.022417792, 0.022466819, 0.022515764, 0.022564792, 0.022613778, 0.022662806, 0.022711778, 0.022760806, 0.022809792, 0.022858819, 0.022907806, 0.022956875, 0.023006806, 0.023055833, 0.023104...</msg>
<status status="PASS" starttime="20201112 09:54:43.818" endtime="20201112 09:54:43.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.835" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 09:54:43.834" endtime="20201112 09:54:43.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.838" level="INFO">VALUE: [4.727799999999782e-05, 4.668000000000033e-05, 4.6625000000001526e-05, 4.6680999999999806e-05, 4.633400000000204e-05, 4.6389000000000846e-05, 4.640299999999695e-05, 4.6709000000002415e-05, 4.661099999999849e-05, 4.670799999999947e-05, 4.6458999999998696e-05, 4.65000000000014e-05, 4.732e-05, 4.691600000000101e-05, 4.677799999999732e-05, 4.638899999999738e-05, 4.673599999999861e-05, 4.670799999999947e-05, 4.65130000000015e-05, 4.6653000000000666e-05, 4.686099999999874e-05, 4.677800000000079e-05, 4.654100000000064e-05, 4.6653000000000666e-05, 4.675000000000165e-05, 4.652800000000054e-05, 4.666600000000076e-05, 4.677800000000079e-05, 4.681900000000003e-05, 4.6903000000000916e-05, 4.7125000000002026e-05, 4.676400000000122e-05, 4.6847000000002637e-05, 4.6597000000002387e-05, 4.643000000000008e-05, 4.675000000000165e-05, 4.679200000000036e-05, 4.6416999999999986e-05, 4.6653000000000666e-05, 4.645799999999922e-05, 4.636200000000118e-05, 4.6737000000001555e-05, 4.652800000000054e-05, 4.679200000000036e-05, 4.6597000000002387e-05, 4.692999999999711e-05, 4.677699999999785e-05, 4.643000000000008e-05, 4.6472999999998266e-05, 4.659699999999892e-05]</msg>
<status status="PASS" starttime="20201112 09:54:43.836" endtime="20201112 09:54:43.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.831" endtime="20201112 09:54:43.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.845" endtime="20201112 09:54:43.847"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:43.849" endtime="20201112 09:54:43.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.847" endtime="20201112 09:54:43.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.843" endtime="20201112 09:54:43.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.472" endtime="20201112 09:54:43.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.472" endtime="20201112 09:54:43.870"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.879" endtime="20201112 09:54:43.896"></status>
</kw>
<msg timestamp="20201112 09:54:43.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.877" endtime="20201112 09:54:43.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.897" endtime="20201112 09:54:43.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.900" endtime="20201112 09:54:43.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.874" endtime="20201112 09:54:43.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.872" endtime="20201112 09:54:43.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.911" endtime="20201112 09:54:44.197"></status>
</kw>
<msg timestamp="20201112 09:54:44.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224865, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022534792, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:43.909" endtime="20201112 09:54:44.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224865, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022534792, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:44.201" endtime="20201112 09:54:44.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.210" endtime="20201112 09:54:44.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.906" endtime="20201112 09:54:44.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.904" endtime="20201112 09:54:44.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:44.217" level="INFO">${RESULT} = [{'time': 0.022534792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.829200000000186e-05, 'source_diff': 4.829200000000186e-05}, {'time': 0.022584833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:44.213" endtime="20201112 09:54:44.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:44.230" level="INFO">${ACCURACY} = {'time': [0.022534792, 0.022584833, 0.022634764, 0.022684806, 0.022734778, 0.022784806, 0.022835792, 0.022885806, 0.022935806, 0.022985819, 0.023035819, 0.023085833, 0.023136819, 0.023186861, 0.023236...</msg>
<status status="PASS" starttime="20201112 09:54:44.218" endtime="20201112 09:54:44.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.235" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 09:54:44.234" endtime="20201112 09:54:44.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.238" level="INFO">VALUE: [4.829200000000186e-05, 4.756899999999731e-05, 4.7597000000003387e-05, 4.7694999999996907e-05, 4.7375000000002276e-05, 4.751400000000197e-05, 4.829200000000186e-05, 4.7695000000000376e-05, 4.7722999999999516e-05, 4.758300000000035e-05, 4.741599999999804e-05, 4.790199999999897e-05, 4.834700000000067e-05, 4.759699999999992e-05, 4.7695000000000376e-05, 4.761099999999949e-05, 4.743000000000108e-05, 4.769399999999743e-05, 4.756900000000078e-05, 4.7361000000002706e-05, 4.779099999999842e-05, 4.78330000000006e-05, 4.780499999999799e-05, 4.744400000000065e-05, 4.745800000000022e-05, 4.779199999999789e-05, 4.779199999999789e-05, 4.745799999999675e-05, 4.781900000000103e-05, 4.757000000000025e-05, 4.737499999999881e-05, 4.749999999999893e-05, 4.737499999999881e-05, 4.776399999999875e-05, 4.78200000000005e-05, 4.759800000000286e-05, 4.7389000000001846e-05, 4.755600000000068e-05, 4.761099999999949e-05, 4.7458999999999696e-05, 4.768099999999734e-05, 4.7445000000000126e-05, 4.741600000000151e-05, 4.766699999999777e-05, 4.751400000000197e-05, 4.743000000000108e-05, 4.840299999999895e-05, 4.756900000000078e-05, 4.777799999999832e-05, 4.775000000000265e-05]</msg>
<status status="PASS" starttime="20201112 09:54:44.236" endtime="20201112 09:54:44.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.231" endtime="20201112 09:54:44.239"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.242" endtime="20201112 09:54:44.243"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:44.245" endtime="20201112 09:54:44.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.244" endtime="20201112 09:54:44.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.240" endtime="20201112 09:54:44.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.871" endtime="20201112 09:54:44.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.870" endtime="20201112 09:54:44.266"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.275" endtime="20201112 09:54:44.291"></status>
</kw>
<msg timestamp="20201112 09:54:44.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.274" endtime="20201112 09:54:44.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.293" endtime="20201112 09:54:44.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.296" endtime="20201112 09:54:44.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.271" endtime="20201112 09:54:44.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.269" endtime="20201112 09:54:44.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.306" endtime="20201112 09:54:44.591"></status>
</kw>
<msg timestamp="20201112 09:54:44.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022561222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022609917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:44.304" endtime="20201112 09:54:44.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022561222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022609917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:44.596" endtime="20201112 09:54:44.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.604" endtime="20201112 09:54:44.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.302" endtime="20201112 09:54:44.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.300" endtime="20201112 09:54:44.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:44.611" level="INFO">${RESULT} = [{'time': 0.022609917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8695000000001376e-05, 'source_diff': 4.8695000000001376e-05}, {'time': 0.022660944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:44.608" endtime="20201112 09:54:44.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:44.625" level="INFO">${ACCURACY} = {'time': [0.022609917, 0.022660944, 0.022711931, 0.022762944, 0.022813917, 0.022864917, 0.022915931, 0.022966931, 0.023017917, 0.023068958, 0.023119917, 0.023170958, 0.023221944, 0.023272958, 0.023323...</msg>
<status status="PASS" starttime="20201112 09:54:44.612" endtime="20201112 09:54:44.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.630" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 09:54:44.629" endtime="20201112 09:54:44.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.632" level="INFO">VALUE: [4.8695000000001376e-05, 4.880499999999899e-05, 4.863899999999963e-05, 4.890199999999997e-05, 4.841699999999852e-05, 4.881999999999803e-05, 4.8723000000000516e-05, 4.838899999999938e-05, 4.834800000000014e-05, 4.884700000000117e-05, 4.859800000000039e-05, 4.869399999999843e-05, 4.859700000000092e-05, 4.841599999999904e-05, 4.913900000000013e-05, 4.841600000000251e-05, 4.869399999999843e-05, 4.879099999999942e-05, 4.86940000000019e-05, 4.849999999999993e-05, 4.852799999999907e-05, 4.861100000000049e-05, 4.86940000000019e-05, 4.857000000000125e-05, 4.83469999999972e-05, 4.8707999999998e-05, 4.875000000000018e-05, 4.849999999999993e-05, 4.849999999999993e-05, 4.843099999999809e-05, 4.8889000000003346e-05, 4.884700000000117e-05, 4.873600000000061e-05, 4.8459000000000696e-05, 4.886100000000074e-05, 4.869499999999791e-05, 4.844400000000165e-05, 4.875000000000018e-05, 4.849999999999993e-05, 4.834800000000014e-05, 4.858400000000082e-05, 4.867999999999886e-05, 4.841599999999904e-05, 4.872199999999757e-05, 4.8486999999999836e-05, 4.8887999999996934e-05, 4.834800000000014e-05, 4.919399999999893e-05, 4.88469999999977e-05, 4.890199999999997e-05]</msg>
<status status="PASS" starttime="20201112 09:54:44.631" endtime="20201112 09:54:44.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.626" endtime="20201112 09:54:44.634"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.636" endtime="20201112 09:54:44.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:44.640" endtime="20201112 09:54:44.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.638" endtime="20201112 09:54:44.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.634" endtime="20201112 09:54:44.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.267" endtime="20201112 09:54:44.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.267" endtime="20201112 09:54:44.661"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.670" endtime="20201112 09:54:44.686"></status>
</kw>
<msg timestamp="20201112 09:54:44.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.668" endtime="20201112 09:54:44.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.688" endtime="20201112 09:54:44.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.691" endtime="20201112 09:54:44.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.665" endtime="20201112 09:54:44.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.663" endtime="20201112 09:54:44.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.701" endtime="20201112 09:54:44.988"></status>
</kw>
<msg timestamp="20201112 09:54:44.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022647986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022698181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:44.700" endtime="20201112 09:54:44.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022647986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022698181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:44.992" endtime="20201112 09:54:45.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.001" endtime="20201112 09:54:45.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.697" endtime="20201112 09:54:45.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.695" endtime="20201112 09:54:45.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:45.008" level="INFO">${RESULT} = [{'time': 0.022698181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0195000000002876e-05, 'source_diff': 5.0195000000002876e-05}, {'time': 0.022750181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:45.004" endtime="20201112 09:54:45.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:45.023" level="INFO">${ACCURACY} = {'time': [0.022698181, 0.022750181, 0.022802125, 0.022854153, 0.022906153, 0.022958153, 0.023010153, 0.023062167, 0.023114153, 0.023166167, 0.023218153, 0.023270194, 0.023322181, 0.023374194, 0.023426...</msg>
<status status="PASS" starttime="20201112 09:54:45.009" endtime="20201112 09:54:45.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.027" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 09:54:45.026" endtime="20201112 09:54:45.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.030" level="INFO">VALUE: [5.0195000000002876e-05, 4.966699999999977e-05, 4.983299999999913e-05, 4.93469999999982e-05, 4.990299999999698e-05, 4.954199999999964e-05, 4.959699999999845e-05, 4.948600000000136e-05, 4.937499999999734e-05, 4.937500000000081e-05, 4.954199999999964e-05, 4.9638000000001153e-05, 4.958400000000182e-05, 4.941600000000004e-05, 4.959800000000139e-05, 4.942999999999961e-05, 4.951300000000103e-05, 4.977800000000032e-05, 4.95140000000005e-05, 4.934700000000167e-05, 4.958300000000235e-05, 4.95140000000005e-05, 4.944399999999918e-05, 4.954199999999964e-05, 4.956899999999931e-05, 4.979199999999989e-05, 5.01530000000007e-05, 4.941699999999952e-05, 4.9431000000002556e-05, 4.944399999999918e-05, 4.959700000000192e-05, 4.9945000000002626e-05, 5.029200000000039e-05, 4.974999999999771e-05, 4.959699999999845e-05, 4.979199999999989e-05, 4.973599999999814e-05, 5.01669999999968e-05, 4.972199999999857e-05, 4.966699999999977e-05, 4.966699999999977e-05, 4.973600000000161e-05, 4.9723000000001516e-05, 4.9473000000001266e-05, 4.984800000000164e-05, 4.95270000000006e-05, 4.937500000000081e-05, 4.986100000000174e-05, 4.977700000000085e-05, 4.966600000000029e-05]</msg>
<status status="PASS" starttime="20201112 09:54:45.029" endtime="20201112 09:54:45.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.024" endtime="20201112 09:54:45.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.034" endtime="20201112 09:54:45.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:45.037" endtime="20201112 09:54:45.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.036" endtime="20201112 09:54:45.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.032" endtime="20201112 09:54:45.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.662" endtime="20201112 09:54:45.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.661" endtime="20201112 09:54:45.058"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.067" endtime="20201112 09:54:45.084"></status>
</kw>
<msg timestamp="20201112 09:54:45.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.066" endtime="20201112 09:54:45.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.086" endtime="20201112 09:54:45.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.088" endtime="20201112 09:54:45.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.063" endtime="20201112 09:54:45.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.061" endtime="20201112 09:54:45.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.099" endtime="20201112 09:54:45.384"></status>
</kw>
<msg timestamp="20201112 09:54:45.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022620778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022671444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:45.097" endtime="20201112 09:54:45.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022620778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022671444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:45.388" endtime="20201112 09:54:45.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.397" endtime="20201112 09:54:45.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.094" endtime="20201112 09:54:45.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.092" endtime="20201112 09:54:45.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:45.404" level="INFO">${RESULT} = [{'time': 0.022671444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0665999999997824e-05, 'source_diff': 5.0665999999997824e-05}, {'time': 0.022724486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:45.400" endtime="20201112 09:54:45.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:45.418" level="INFO">${ACCURACY} = {'time': [0.022671444, 0.022724486, 0.022777417, 0.022830458, 0.022883417, 0.022936458, 0.022989444, 0.023042458, 0.023095458, 0.023148472, 0.023201444, 0.023254472, 0.023307458, 0.023360472, 0.023413...</msg>
<status status="PASS" starttime="20201112 09:54:45.405" endtime="20201112 09:54:45.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.423" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 09:54:45.422" endtime="20201112 09:54:45.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.426" level="INFO">VALUE: [5.0665999999997824e-05, 5.063899999999816e-05, 5.05140000000015e-05, 5.05270000000016e-05, 5.061099999999902e-05, 5.037499999999834e-05, 5.086100000000274e-05, 5.079099999999795e-05, 5.088899999999841e-05, 5.083300000000013e-05, 5.056900000000031e-05, 5.063900000000163e-05, 5.047199999999932e-05, 5.043000000000061e-05, 5.034700000000267e-05, 5.043000000000061e-05, 5.072199999999957e-05, 5.074999999999871e-05, 5.131899999999759e-05, 5.065299999999773e-05, 5.040300000000095e-05, 5.082000000000003e-05, 5.052800000000107e-05, 5.045899999999923e-05, 5.045799999999975e-05, 5.056999999999978e-05, 5.066700000000077e-05, 5.073600000000261e-05, 5.065299999999773e-05, 5.055500000000074e-05, 5.077799999999785e-05, 5.076399999999828e-05, 5.037500000000181e-05, 5.030599999999996e-05, 5.068099999999687e-05, 5.0929999999997644e-05, 5.073599999999914e-05, 5.077700000000185e-05, 5.065299999999773e-05, 5.081899999999709e-05, 5.081900000000056e-05, 5.049999999999846e-05, 5.050000000000193e-05, 5.082000000000003e-05, 5.048600000000236e-05, 5.077800000000132e-05, 5.045799999999975e-05, 5.0929999999997644e-05, 5.074999999999871e-05, 5.048600000000236e-05]</msg>
<status status="PASS" starttime="20201112 09:54:45.424" endtime="20201112 09:54:45.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.419" endtime="20201112 09:54:45.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.429" endtime="20201112 09:54:45.431"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:45.433" endtime="20201112 09:54:45.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.431" endtime="20201112 09:54:45.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.428" endtime="20201112 09:54:45.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.059" endtime="20201112 09:54:45.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.059" endtime="20201112 09:54:45.454"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.463" endtime="20201112 09:54:45.479"></status>
</kw>
<msg timestamp="20201112 09:54:45.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.461" endtime="20201112 09:54:45.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.481" endtime="20201112 09:54:45.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.483" endtime="20201112 09:54:45.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.459" endtime="20201112 09:54:45.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.456" endtime="20201112 09:54:45.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.494" endtime="20201112 09:54:45.780"></status>
</kw>
<msg timestamp="20201112 09:54:45.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022485, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022537208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:45.492" endtime="20201112 09:54:45.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022485, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022537208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:45.785" endtime="20201112 09:54:45.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.793" endtime="20201112 09:54:45.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.490" endtime="20201112 09:54:45.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.488" endtime="20201112 09:54:45.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:45.800" level="INFO">${RESULT} = [{'time': 0.022537208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2207999999998034e-05, 'source_diff': 5.2207999999998034e-05}, {'time': 0.02259125, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:54:45.797" endtime="20201112 09:54:45.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:45.814" level="INFO">${ACCURACY} = {'time': [0.022537208, 0.02259125, 0.022646167, 0.022700194, 0.022754181, 0.022808208, 0.022862208, 0.022916222, 0.022970194, 0.023024222, 0.023078208, 0.023132222, 0.023186208, 0.023240222, 0.0232942...</msg>
<status status="PASS" starttime="20201112 09:54:45.801" endtime="20201112 09:54:45.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.819" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 09:54:45.818" endtime="20201112 09:54:45.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.821" level="INFO">VALUE: [5.2207999999998034e-05, 5.148599999999989e-05, 5.2249999999996743e-05, 5.1637999999999684e-05, 5.190299999999898e-05, 5.155499999999827e-05, 5.163899999999916e-05, 5.173600000000014e-05, 5.1415999999998574e-05, 5.173600000000014e-05, 5.186100000000027e-05, 5.155500000000174e-05, 5.145800000000075e-05, 5.155500000000174e-05, 5.156900000000131e-05, 5.138900000000238e-05, 5.231900000000206e-05, 5.197200000000082e-05, 5.149999999999946e-05, 5.173600000000014e-05, 5.1471999999996854e-05, 5.170900000000048e-05, 5.177800000000232e-05, 5.159700000000045e-05, 5.16669999999983e-05, 5.148599999999989e-05, 5.137499999999934e-05, 5.162499999999959e-05, 5.14729999999998e-05, 5.140300000000195e-05, 5.165299999999873e-05, 5.182000000000103e-05, 5.230599999999849e-05, 5.177799999999885e-05, 5.170900000000048e-05, 5.168000000000186e-05, 5.158300000000088e-05, 5.177699999999938e-05, 5.172300000000005e-05, 5.1915999999999074e-05, 5.181900000000156e-05, 5.147200000000032e-05, 5.151299999999956e-05, 5.149999999999946e-05, 5.179099999999895e-05, 5.156900000000131e-05, 5.159699999999698e-05, 5.176399999999928e-05, 5.1429999999998144e-05, 5.177799999999885e-05]</msg>
<status status="PASS" starttime="20201112 09:54:45.820" endtime="20201112 09:54:45.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.815" endtime="20201112 09:54:45.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.825" endtime="20201112 09:54:45.827"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:45.829" endtime="20201112 09:54:45.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.827" endtime="20201112 09:54:45.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.823" endtime="20201112 09:54:45.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.455" endtime="20201112 09:54:45.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.454" endtime="20201112 09:54:45.850"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.859" endtime="20201112 09:54:45.876"></status>
</kw>
<msg timestamp="20201112 09:54:45.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.857" endtime="20201112 09:54:45.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.878" endtime="20201112 09:54:45.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.880" endtime="20201112 09:54:45.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.854" endtime="20201112 09:54:45.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.852" endtime="20201112 09:54:45.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.891" endtime="20201112 09:54:46.178"></status>
</kw>
<msg timestamp="20201112 09:54:46.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022576, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022629056, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:45.889" endtime="20201112 09:54:46.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022576, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022629056, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:46.182" endtime="20201112 09:54:46.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.191" endtime="20201112 09:54:46.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.887" endtime="20201112 09:54:46.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.885" endtime="20201112 09:54:46.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:46.198" level="INFO">${RESULT} = [{'time': 0.022629056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.305600000000271e-05, 'source_diff': 5.305600000000271e-05}, {'time': 0.022684069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:46.194" endtime="20201112 09:54:46.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:46.212" level="INFO">${ACCURACY} = {'time': [0.022629056, 0.022684069, 0.022739014, 0.022794042, 0.022849014, 0.022904042, 0.022959028, 0.023014042, 0.023069042, 0.023124056, 0.023179056, 0.023234069, 0.023289042, 0.023344083, 0.023399...</msg>
<status status="PASS" starttime="20201112 09:54:46.199" endtime="20201112 09:54:46.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.217" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 09:54:46.216" endtime="20201112 09:54:46.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.219" level="INFO">VALUE: [5.305600000000271e-05, 5.2680000000002863e-05, 5.28609999999978e-05, 5.272300000000105e-05, 5.276400000000028e-05, 5.251400000000003e-05, 5.248600000000089e-05, 5.28609999999978e-05, 5.258400000000135e-05, 5.276400000000028e-05, 5.251400000000003e-05, 5.2693999999998964e-05, 5.2735999999997674e-05, 5.272200000000157e-05, 5.262500000000059e-05, 5.238899999999991e-05, 5.287500000000084e-05, 5.2499999999996994e-05, 5.280499999999952e-05, 5.252800000000307e-05, 5.272200000000157e-05, 5.238899999999991e-05, 5.276400000000028e-05, 5.2457999999998284e-05, 5.2693999999998964e-05, 5.245900000000123e-05, 5.238899999999991e-05, 5.284699999999823e-05, 5.2443999999998714e-05, 5.279199999999942e-05, 5.240299999999948e-05, 5.23470000000012e-05, 5.273600000000114e-05, 5.238899999999991e-05, 5.2735999999997674e-05, 5.2485999999997424e-05, 5.286100000000127e-05, 5.272300000000105e-05, 5.277799999999985e-05, 5.272299999999758e-05, 5.238899999999991e-05, 5.28479999999977e-05, 5.26530000000032e-05, 5.279099999999995e-05, 5.26669999999993e-05, 5.283299999999866e-05, 5.2721999999998104e-05, 5.238899999999991e-05, 5.231899999999859e-05, 5.280499999999952e-05]</msg>
<status status="PASS" starttime="20201112 09:54:46.218" endtime="20201112 09:54:46.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.213" endtime="20201112 09:54:46.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.223" endtime="20201112 09:54:46.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:46.227" endtime="20201112 09:54:46.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.225" endtime="20201112 09:54:46.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.221" endtime="20201112 09:54:46.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.851" endtime="20201112 09:54:46.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.850" endtime="20201112 09:54:46.248"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.257" endtime="20201112 09:54:46.273"></status>
</kw>
<msg timestamp="20201112 09:54:46.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.255" endtime="20201112 09:54:46.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.275" endtime="20201112 09:54:46.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.278" endtime="20201112 09:54:46.280"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.252" endtime="20201112 09:54:46.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.250" endtime="20201112 09:54:46.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.288" endtime="20201112 09:54:46.574"></status>
</kw>
<msg timestamp="20201112 09:54:46.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022525222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022578875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:46.286" endtime="20201112 09:54:46.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022525222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022578875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:46.579" endtime="20201112 09:54:46.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.587" endtime="20201112 09:54:46.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.284" endtime="20201112 09:54:46.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.282" endtime="20201112 09:54:46.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:46.594" level="INFO">${RESULT} = [{'time': 0.022578875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.365300000000073e-05, 'source_diff': 5.365300000000073e-05}, {'time': 0.022634833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:46.591" endtime="20201112 09:54:46.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:46.609" level="INFO">${ACCURACY} = {'time': [0.022578875, 0.022634833, 0.022690778, 0.022746819, 0.022802792, 0.022858833, 0.022914819, 0.022970819, 0.023026806, 0.023082847, 0.023138833, 0.023194875, 0.023250875, 0.023306903, 0.023362...</msg>
<status status="PASS" starttime="20201112 09:54:46.595" endtime="20201112 09:54:46.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.614" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 09:54:46.613" endtime="20201112 09:54:46.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.617" level="INFO">VALUE: [5.365300000000073e-05, 5.387499999999837e-05, 5.369500000000291e-05, 5.361100000000202e-05, 5.3485999999998424e-05, 5.354099999999723e-05, 5.4137999999998715e-05, 5.3471999999998854e-05, 5.381999999999956e-05, 5.337500000000134e-05, 5.362500000000159e-05, 5.35280000000006e-05, 5.3721999999999104e-05, 5.370899999999901e-05, 5.3402000000001004e-05, 5.358299999999941e-05, 5.388900000000141e-05, 5.361099999999855e-05, 5.387500000000184e-05, 5.386100000000227e-05, 5.338900000000091e-05, 5.343100000000309e-05, 5.340300000000048e-05, 5.365299999999726e-05, 5.383299999999966e-05, 5.341700000000005e-05, 5.365300000000073e-05, 5.394499999999969e-05, 5.3707999999999534e-05, 5.36670000000003e-05, 5.3527999999997133e-05, 5.350000000000146e-05, 5.362500000000159e-05, 5.343099999999962e-05, 5.433399999999963e-05, 5.3443999999999714e-05, 5.33340000000021e-05, 5.3430000000000144e-05, 5.341700000000005e-05, 5.358299999999941e-05, 5.3416000000000574e-05, 5.38609999999988e-05, 5.337500000000134e-05, 5.365300000000073e-05, 5.372200000000257e-05, 5.388900000000141e-05, 5.3430000000000144e-05, 5.350000000000146e-05, 5.334699999999873e-05, 5.384699999999923e-05]</msg>
<status status="PASS" starttime="20201112 09:54:46.615" endtime="20201112 09:54:46.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.610" endtime="20201112 09:54:46.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.620" endtime="20201112 09:54:46.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:46.624" endtime="20201112 09:54:46.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.622" endtime="20201112 09:54:46.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.619" endtime="20201112 09:54:46.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.249" endtime="20201112 09:54:46.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.248" endtime="20201112 09:54:46.645"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.654" endtime="20201112 09:54:46.670"></status>
</kw>
<msg timestamp="20201112 09:54:46.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.652" endtime="20201112 09:54:46.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.672" endtime="20201112 09:54:46.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.674" endtime="20201112 09:54:46.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.650" endtime="20201112 09:54:46.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.648" endtime="20201112 09:54:46.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.685" endtime="20201112 09:54:46.971"></status>
</kw>
<msg timestamp="20201112 09:54:46.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022651014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022705861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:46.683" endtime="20201112 09:54:46.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022651014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022705861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:46.975" endtime="20201112 09:54:46.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.984" endtime="20201112 09:54:46.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.680" endtime="20201112 09:54:46.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.679" endtime="20201112 09:54:46.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:46.991" level="INFO">${RESULT} = [{'time': 0.022705861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.484700000000023e-05, 'source_diff': 5.484700000000023e-05}, {'time': 0.022762861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:46.987" endtime="20201112 09:54:46.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:47.005" level="INFO">${ACCURACY} = {'time': [0.022705861, 0.022762861, 0.022819819, 0.022876833, 0.022933833, 0.022990847, 0.023048833, 0.023105861, 0.023162833, 0.023219875, 0.023276875, 0.023333917, 0.023390861, 0.023447889, 0.023504...</msg>
<status status="PASS" starttime="20201112 09:54:46.992" endtime="20201112 09:54:47.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.009" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 09:54:47.008" endtime="20201112 09:54:47.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.012" level="INFO">VALUE: [5.484700000000023e-05, 5.461099999999955e-05, 5.475000000000271e-05, 5.4401999999998535e-05, 5.463900000000216e-05, 5.483299999999719e-05, 5.533300000000116e-05, 5.4735999999999674e-05, 5.4458000000000284e-05, 5.46670000000013e-05, 5.4541999999997703e-05, 5.497299999999983e-05, 5.45549999999978e-05, 5.443100000000062e-05, 5.4513999999998564e-05, 5.488899999999894e-05, 5.458300000000041e-05, 5.481999999999709e-05, 5.479200000000142e-05, 5.4735999999999674e-05, 5.4708000000000534e-05, 5.4485999999999424e-05, 5.470900000000001e-05, 5.440299999999801e-05, 5.479200000000142e-05, 5.4527999999998134e-05, 5.4735999999999674e-05, 5.481999999999709e-05, 5.437499999999887e-05, 5.45410000000017e-05, 5.477699999999891e-05, 5.4708000000000534e-05, 5.4430000000001144e-05, 5.4651999999998785e-05, 5.451299999999909e-05, 5.437499999999887e-05, 5.456900000000084e-05, 5.456900000000084e-05, 5.488899999999894e-05, 5.4708000000000534e-05, 5.454099999999823e-05, 5.43609999999993e-05, 5.533299999999769e-05, 5.518100000000137e-05, 5.465299999999826e-05, 5.4527999999998134e-05, 5.4763999999998814e-05, 5.465299999999826e-05, 5.468100000000087e-05, 5.46809999999974e-05]</msg>
<status status="PASS" starttime="20201112 09:54:47.010" endtime="20201112 09:54:47.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.006" endtime="20201112 09:54:47.013"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.016" endtime="20201112 09:54:47.017"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:47.019" endtime="20201112 09:54:47.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.018" endtime="20201112 09:54:47.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.014" endtime="20201112 09:54:47.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.646" endtime="20201112 09:54:47.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.645" endtime="20201112 09:54:47.040"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.050" endtime="20201112 09:54:47.066"></status>
</kw>
<msg timestamp="20201112 09:54:47.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.048" endtime="20201112 09:54:47.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.068" endtime="20201112 09:54:47.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.070" endtime="20201112 09:54:47.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.045" endtime="20201112 09:54:47.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.043" endtime="20201112 09:54:47.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.081" endtime="20201112 09:54:47.367"></status>
</kw>
<msg timestamp="20201112 09:54:47.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022606361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022661917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:47.079" endtime="20201112 09:54:47.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022606361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022661917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:47.371" endtime="20201112 09:54:47.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.380" endtime="20201112 09:54:47.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.077" endtime="20201112 09:54:47.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.075" endtime="20201112 09:54:47.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:47.387" level="INFO">${RESULT} = [{'time': 0.022661917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.555600000000174e-05, 'source_diff': 5.555600000000174e-05}, {'time': 0.022719944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:47.383" endtime="20201112 09:54:47.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:47.401" level="INFO">${ACCURACY} = {'time': [0.022661917, 0.022719944, 0.022777889, 0.022835931, 0.022893917, 0.022951917, 0.023009903, 0.023067931, 0.023125917, 0.023184, 0.023241944, 0.023299944, 0.023357944, 0.023415958, 0.023473944...</msg>
<status status="PASS" starttime="20201112 09:54:47.388" endtime="20201112 09:54:47.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.406" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 09:54:47.404" endtime="20201112 09:54:47.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.408" level="INFO">VALUE: [5.555600000000174e-05, 5.5721999999997635e-05, 5.5721999999997635e-05, 5.555600000000174e-05, 5.5763999999999814e-05, 5.590299999999951e-05, 5.562500000000012e-05, 5.5763999999999814e-05, 5.53610000000003e-05, 5.5943999999998745e-05, 5.577699999999991e-05, 5.5736000000000674e-05, 5.5415999999999105e-05, 5.563899999999969e-05, 5.587500000000037e-05, 5.586099999999733e-05, 5.555500000000227e-05, 5.538899999999944e-05, 5.580499999999905e-05, 5.5694000000001964e-05, 5.5777999999999384e-05, 5.58749999999969e-05, 5.561100000000055e-05, 5.5443999999998245e-05, 5.559700000000098e-05, 5.545900000000076e-05, 5.534700000000073e-05, 5.545899999999729e-05, 5.5957999999998315e-05, 5.591699999999908e-05, 5.633300000000216e-05, 5.5472000000000854e-05, 5.5735999999997204e-05, 5.53610000000003e-05, 5.632000000000206e-05, 5.5805999999998523e-05, 5.5541999999998704e-05, 5.570900000000101e-05, 5.5750000000000244e-05, 5.5429999999998675e-05, 5.5777999999999384e-05, 5.562500000000012e-05, 5.544499999999772e-05, 5.563899999999969e-05, 5.537499999999987e-05, 5.5707999999998065e-05, 5.5429999999998675e-05, 5.561100000000055e-05, 5.537499999999987e-05, 5.580500000000252e-05]</msg>
<status status="PASS" starttime="20201112 09:54:47.407" endtime="20201112 09:54:47.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.402" endtime="20201112 09:54:47.409"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.412" endtime="20201112 09:54:47.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:47.415" endtime="20201112 09:54:47.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.414" endtime="20201112 09:54:47.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.410" endtime="20201112 09:54:47.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.041" endtime="20201112 09:54:47.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.041" endtime="20201112 09:54:47.437"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.445" endtime="20201112 09:54:47.463"></status>
</kw>
<msg timestamp="20201112 09:54:47.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.444" endtime="20201112 09:54:47.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.464" endtime="20201112 09:54:47.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.467" endtime="20201112 09:54:47.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.441" endtime="20201112 09:54:47.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.439" endtime="20201112 09:54:47.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.477" endtime="20201112 09:54:47.763"></status>
</kw>
<msg timestamp="20201112 09:54:47.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022948486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023004861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:47.476" endtime="20201112 09:54:47.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022948486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023004861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:47.768" endtime="20201112 09:54:47.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.777" endtime="20201112 09:54:47.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.473" endtime="20201112 09:54:47.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.471" endtime="20201112 09:54:47.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:47.784" level="INFO">${RESULT} = [{'time': 0.023004861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.637500000000087e-05, 'source_diff': 5.637500000000087e-05}, {'time': 0.023063875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:47.780" endtime="20201112 09:54:47.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:47.797" level="INFO">${ACCURACY} = {'time': [0.023004861, 0.023063875, 0.023122819, 0.023181889, 0.023240833, 0.023299861, 0.023358833, 0.023417917, 0.023476847, 0.023535875, 0.023594903, 0.023653889, 0.023712861, 0.023771903, 0.023830...</msg>
<status status="PASS" starttime="20201112 09:54:47.785" endtime="20201112 09:54:47.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.802" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 09:54:47.801" endtime="20201112 09:54:47.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.805" level="INFO">VALUE: [5.637500000000087e-05, 5.687500000000137e-05, 5.676299999999787e-05, 5.6541999999999704e-05, 5.631899999999912e-05, 5.6472000000001854e-05, 5.638900000000044e-05, 5.6486000000001424e-05, 5.63749999999974e-05, 5.630600000000249e-05, 5.644499999999872e-05, 5.641699999999958e-05, 5.634699999999826e-05, 5.687500000000137e-05, 5.637500000000087e-05, 5.6764000000000814e-05, 5.643099999999915e-05, 5.665300000000026e-05, 5.6778000000000384e-05, 5.659800000000145e-05, 5.66809999999994e-05, 5.6528000000000134e-05, 5.658399999999841e-05, 5.6541999999999704e-05, 5.6805999999999524e-05, 5.6750000000001244e-05, 5.6805999999999524e-05, 5.6693999999999495e-05, 5.665300000000026e-05, 5.6749999999997774e-05, 5.634700000000173e-05, 5.661099999999808e-05, 5.654100000000023e-05, 5.6429999999999675e-05, 5.659699999999851e-05, 5.633299999999869e-05, 5.665300000000026e-05, 5.641699999999958e-05, 5.693099999999965e-05, 5.6513999999997094e-05, 5.688899999999747e-05, 5.6722000000002104e-05, 5.6778000000000384e-05, 5.661099999999808e-05, 5.684699999999876e-05, 5.666699999999983e-05, 5.644499999999872e-05, 5.68610000000018e-05, 5.669500000000244e-05, 5.644500000000219e-05]</msg>
<status status="PASS" starttime="20201112 09:54:47.803" endtime="20201112 09:54:47.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.798" endtime="20201112 09:54:47.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.809" endtime="20201112 09:54:47.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:47.812" endtime="20201112 09:54:47.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.811" endtime="20201112 09:54:47.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.807" endtime="20201112 09:54:47.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.437" endtime="20201112 09:54:47.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.437" endtime="20201112 09:54:47.833"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.842" endtime="20201112 09:54:47.860"></status>
</kw>
<msg timestamp="20201112 09:54:47.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.841" endtime="20201112 09:54:47.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.861" endtime="20201112 09:54:47.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.864" endtime="20201112 09:54:47.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.838" endtime="20201112 09:54:47.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.836" endtime="20201112 09:54:47.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.874" endtime="20201112 09:54:48.161"></status>
</kw>
<msg timestamp="20201112 09:54:48.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02255825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022616292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:47.872" endtime="20201112 09:54:48.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02255825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022616292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:48.166" endtime="20201112 09:54:48.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.174" endtime="20201112 09:54:48.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.870" endtime="20201112 09:54:48.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.868" endtime="20201112 09:54:48.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:48.182" level="INFO">${RESULT} = [{'time': 0.022616292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8042000000001204e-05, 'source_diff': 5.8042000000001204e-05}, {'time': 0.02267625, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:54:48.178" endtime="20201112 09:54:48.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:48.198" level="INFO">${ACCURACY} = {'time': [0.022616292, 0.02267625, 0.022736208, 0.022796222, 0.022856208, 0.022916292, 0.022976208, 0.02303625, 0.023096292, 0.023156264, 0.023216236, 0.02327625, 0.023336292, 0.023396264, 0.02345625,...</msg>
<status status="PASS" starttime="20201112 09:54:48.183" endtime="20201112 09:54:48.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.203" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 09:54:48.202" endtime="20201112 09:54:48.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.205" level="INFO">VALUE: [5.8042000000001204e-05, 5.7749999999998775e-05, 5.759699999999951e-05, 5.788900000000194e-05, 5.762499999999865e-05, 5.747300000000233e-05, 5.75550000000008e-05, 5.758299999999994e-05, 5.741700000000058e-05, 5.790299999999804e-05, 5.7680000000000925e-05, 5.783299999999672e-05, 5.7820000000000094e-05, 5.783300000000019e-05, 5.766700000000083e-05, 5.7736000000002674e-05, 5.759699999999951e-05, 5.7792000000000954e-05, 5.733300000000316e-05, 5.788900000000194e-05, 5.73749999999984e-05, 5.770899999999954e-05, 5.73749999999984e-05, 5.769499999999997e-05, 5.759799999999898e-05, 5.783300000000019e-05, 5.765300000000126e-05, 5.780499999999758e-05, 5.7778000000001384e-05, 5.777700000000191e-05, 5.738899999999797e-05, 5.761099999999908e-05, 5.786099999999933e-05, 5.7471999999999385e-05, 5.765299999999779e-05, 5.76810000000004e-05, 5.788900000000194e-05, 5.780500000000105e-05, 5.779099999999801e-05, 5.736099999999883e-05, 5.737500000000187e-05, 5.765300000000126e-05, 5.763899999999822e-05, 5.7708000000000065e-05, 5.781900000000062e-05, 5.737500000000187e-05, 5.7763999999998344e-05, 5.7541999999997234e-05, 5.7583999999999413e-05, 5.737500000000187e-05]</msg>
<status status="PASS" starttime="20201112 09:54:48.204" endtime="20201112 09:54:48.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.199" endtime="20201112 09:54:48.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.209" endtime="20201112 09:54:48.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:48.215" endtime="20201112 09:54:48.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.211" endtime="20201112 09:54:48.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.208" endtime="20201112 09:54:48.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.834" endtime="20201112 09:54:48.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.833" endtime="20201112 09:54:48.237"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.247" endtime="20201112 09:54:48.264"></status>
</kw>
<msg timestamp="20201112 09:54:48.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:48.245" endtime="20201112 09:54:48.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:48.266" endtime="20201112 09:54:48.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.268" endtime="20201112 09:54:48.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.243" endtime="20201112 09:54:48.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.240" endtime="20201112 09:54:48.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.279" endtime="20201112 09:54:48.565"></status>
</kw>
<msg timestamp="20201112 09:54:48.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024169806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024228458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:48.277" endtime="20201112 09:54:48.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024169806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024228458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:48.569" endtime="20201112 09:54:48.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.578" endtime="20201112 09:54:48.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.275" endtime="20201112 09:54:48.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.273" endtime="20201112 09:54:48.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:48.585" level="INFO">${RESULT} = [{'time': 0.024228458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8652000000002785e-05, 'source_diff': 5.8652000000002785e-05}, {'time': 0.024289486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:48.581" endtime="20201112 09:54:48.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:48.599" level="INFO">${ACCURACY} = {'time': [0.024228458, 0.024289486, 0.024350431, 0.024411528, 0.024472486, 0.024533458, 0.024594458, 0.024655486, 0.024716458, 0.024777486, 0.024839472, 0.024900486, 0.024961514, 0.0250225, 0.0250835,...</msg>
<status status="PASS" starttime="20201112 09:54:48.586" endtime="20201112 09:54:48.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.603" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 09:54:48.602" endtime="20201112 09:54:48.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.606" level="INFO">VALUE: [5.8652000000002785e-05, 5.859700000000051e-05, 5.8541999999998234e-05, 5.891699999999861e-05, 5.8750000000003244e-05, 5.8722000000000635e-05, 5.855499999999833e-05, 5.891700000000208e-05, 5.85550000000018e-05, 5.85550000000018e-05, 5.931900000000212e-05, 5.862499999999965e-05, 5.86810000000014e-05, 5.8791999999998484e-05, 5.8694000000001495e-05, 5.862499999999965e-05, 5.8443999999997776e-05, 5.890299999999904e-05, 5.861100000000008e-05, 5.843100000000115e-05, 5.8570000000000844e-05, 5.843100000000115e-05, 5.888899999999947e-05, 5.888899999999947e-05, 5.8791999999998484e-05, 5.856900000000137e-05, 5.838899999999897e-05, 5.858299999999747e-05, 5.8513999999999095e-05, 5.8472000000000385e-05, 5.8514000000002564e-05, 5.883299999999772e-05, 5.880499999999858e-05, 5.8722000000000635e-05, 5.8679999999998456e-05, 5.840299999999854e-05, 5.880499999999858e-05, 5.8444000000001245e-05, 5.863899999999922e-05, 5.8527999999998664e-05, 5.840299999999854e-05, 5.8570000000000844e-05, 5.838899999999897e-05, 5.865300000000226e-05, 5.862499999999965e-05, 5.840300000000201e-05, 5.83749999999994e-05, 5.886099999999686e-05, 5.8778000000002384e-05, 5.863900000000269e-05]</msg>
<status status="PASS" starttime="20201112 09:54:48.605" endtime="20201112 09:54:48.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.600" endtime="20201112 09:54:48.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.610" endtime="20201112 09:54:48.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:48.613" endtime="20201112 09:54:48.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.612" endtime="20201112 09:54:48.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.608" endtime="20201112 09:54:48.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.238" endtime="20201112 09:54:48.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.237" endtime="20201112 09:54:48.634"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.643" endtime="20201112 09:54:48.660"></status>
</kw>
<msg timestamp="20201112 09:54:48.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:48.642" endtime="20201112 09:54:48.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:48.662" endtime="20201112 09:54:48.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.665" endtime="20201112 09:54:48.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.639" endtime="20201112 09:54:48.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.637" endtime="20201112 09:54:48.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.676" endtime="20201112 09:54:48.962"></status>
</kw>
<msg timestamp="20201112 09:54:48.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022688667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022748042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:48.674" endtime="20201112 09:54:48.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022688667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022748042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:48.967" endtime="20201112 09:54:48.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.975" endtime="20201112 09:54:48.977"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.671" endtime="20201112 09:54:48.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.670" endtime="20201112 09:54:48.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:48.983" level="INFO">${RESULT} = [{'time': 0.022748042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.93750000000004e-05, 'source_diff': 5.93750000000004e-05}, {'time': 0.022810083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:48.979" endtime="20201112 09:54:48.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:48.997" level="INFO">${ACCURACY} = {'time': [0.022748042, 0.022810083, 0.022872042, 0.022934111, 0.022996028, 0.023058042, 0.023120028, 0.023182056, 0.023244042, 0.023306097, 0.023368056, 0.023430069, 0.023492056, 0.023554083, 0.023616...</msg>
<status status="PASS" starttime="20201112 09:54:48.984" endtime="20201112 09:54:48.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.002" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 09:54:49.001" endtime="20201112 09:54:49.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.004" level="INFO">VALUE: [5.93750000000004e-05, 5.958299999999847e-05, 5.9777999999999915e-05, 5.9472000000001385e-05, 5.9792000000002954e-05, 5.966699999999936e-05, 5.959700000000151e-05, 5.93750000000004e-05, 5.9500000000000525e-05, 5.986100000000133e-05, 5.947300000000086e-05, 5.9722000000001635e-05, 5.9570000000001844e-05, 5.9514000000000095e-05, 5.9556000000002274e-05, 5.983299999999872e-05, 5.9430000000002675e-05, 5.95550000000028e-05, 5.9777999999999915e-05, 5.9541999999999234e-05, 5.9735999999997735e-05, 5.937499999999693e-05, 5.9444000000002245e-05, 5.983300000000219e-05, 5.9569999999998374e-05, 5.938899999999997e-05, 5.958299999999847e-05, 5.959699999999804e-05, 5.940299999999954e-05, 5.9750000000000775e-05, 5.933300000000169e-05, 5.96949999999985e-05, 5.961100000000108e-05, 5.9887999999997527e-05, 5.938899999999997e-05, 5.980499999999958e-05, 5.941699999999911e-05, 5.9888000000000996e-05, 5.986099999999786e-05, 5.9402000000000066e-05, 5.959699999999804e-05, 5.93750000000004e-05, 5.9444000000002245e-05, 5.984699999999829e-05, 5.9736000000001205e-05, 5.9721999999998165e-05, 5.938899999999997e-05, 5.966700000000283e-05, 5.961100000000108e-05, 5.9514000000000095e-05]</msg>
<status status="PASS" starttime="20201112 09:54:49.003" endtime="20201112 09:54:49.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.998" endtime="20201112 09:54:49.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.008" endtime="20201112 09:54:49.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:49.012" endtime="20201112 09:54:49.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.010" endtime="20201112 09:54:49.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.007" endtime="20201112 09:54:49.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.635" endtime="20201112 09:54:49.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.635" endtime="20201112 09:54:49.034"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.043" endtime="20201112 09:54:49.061"></status>
</kw>
<msg timestamp="20201112 09:54:49.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:49.041" endtime="20201112 09:54:49.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:49.063" endtime="20201112 09:54:49.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.065" endtime="20201112 09:54:49.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.039" endtime="20201112 09:54:49.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.036" endtime="20201112 09:54:49.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.076" endtime="20201112 09:54:49.362"></status>
</kw>
<msg timestamp="20201112 09:54:49.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023807903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023868944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:49.074" endtime="20201112 09:54:49.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023807903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023868944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:49.366" endtime="20201112 09:54:49.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.375" endtime="20201112 09:54:49.377"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.071" endtime="20201112 09:54:49.377"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.070" endtime="20201112 09:54:49.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:49.382" level="INFO">${RESULT} = [{'time': 0.023868944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.104100000000126e-05, 'source_diff': 6.104100000000126e-05}, {'time': 0.023931972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:49.379" endtime="20201112 09:54:49.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:49.396" level="INFO">${ACCURACY} = {'time': [0.023868944, 0.023931972, 0.023994931, 0.024057944, 0.024120917, 0.024183958, 0.024246931, 0.024309958, 0.024372986, 0.024435986, 0.024498958, 0.024561972, 0.024624972, 0.024688, 0.024750972...</msg>
<status status="PASS" starttime="20201112 09:54:49.383" endtime="20201112 09:54:49.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.401" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 09:54:49.400" endtime="20201112 09:54:49.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.403" level="INFO">VALUE: [6.104100000000126e-05, 6.081900000000015e-05, 6.0348000000001734e-05, 6.08750000000019e-05, 6.06949999999995e-05, 6.0471999999998916e-05, 6.040300000000054e-05, 6.054100000000076e-05, 6.0707999999999596e-05, 6.055500000000033e-05, 6.0722000000002635e-05, 6.083299999999972e-05, 6.0763999999997875e-05, 6.0708000000003065e-05, 6.0528000000000665e-05, 6.062499999999818e-05, 6.0443999999999776e-05, 6.063900000000122e-05, 6.0500000000001525e-05, 6.038900000000097e-05, 6.040300000000054e-05, 6.066700000000036e-05, 6.0485999999998485e-05, 6.047299999999839e-05, 6.034699999999879e-05, 6.0764000000001345e-05, 6.068099999999993e-05, 6.081900000000015e-05, 6.034699999999879e-05, 6.0513999999997625e-05, 6.0651999999997847e-05, 6.0387999999998027e-05, 6.0597999999998514e-05, 6.040300000000054e-05, 6.051300000000162e-05, 6.084699999999929e-05, 6.0401999999997597e-05, 6.062499999999818e-05, 6.0680000000000456e-05, 6.0528000000000665e-05, 6.0457999999999346e-05, 6.062500000000165e-05, 6.0430000000000206e-05, 6.0722000000002635e-05, 6.087499999999843e-05, 6.1195e-05, 6.0735999999998735e-05, 6.0513999999997625e-05, 6.068099999999993e-05, 6.0500000000001525e-05]</msg>
<status status="PASS" starttime="20201112 09:54:49.402" endtime="20201112 09:54:49.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.397" endtime="20201112 09:54:49.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.407" endtime="20201112 09:54:49.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:49.411" endtime="20201112 09:54:49.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.409" endtime="20201112 09:54:49.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.405" endtime="20201112 09:54:49.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.035" endtime="20201112 09:54:49.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.034" endtime="20201112 09:54:49.432"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.441" endtime="20201112 09:54:49.459"></status>
</kw>
<msg timestamp="20201112 09:54:49.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:49.439" endtime="20201112 09:54:49.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:49.460" endtime="20201112 09:54:49.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.463" endtime="20201112 09:54:49.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.436" endtime="20201112 09:54:49.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.434" endtime="20201112 09:54:49.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.473" endtime="20201112 09:54:49.760"></status>
</kw>
<msg timestamp="20201112 09:54:49.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023214014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023276111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:49.472" endtime="20201112 09:54:49.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023214014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023276111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:49.765" endtime="20201112 09:54:49.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.773" endtime="20201112 09:54:49.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.469" endtime="20201112 09:54:49.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.467" endtime="20201112 09:54:49.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:49.780" level="INFO">${RESULT} = [{'time': 0.023276111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.209699999999707e-05, 'source_diff': 6.209699999999707e-05}, {'time': 0.023340139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:49.777" endtime="20201112 09:54:49.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:49.795" level="INFO">${ACCURACY} = {'time': [0.023276111, 0.023340139, 0.023404069, 0.023468083, 0.023532069, 0.023596097, 0.023660097, 0.023724111, 0.023788111, 0.023852111, 0.023916097, 0.023980125, 0.024044139, 0.024108139, 0.024172...</msg>
<status status="PASS" starttime="20201112 09:54:49.781" endtime="20201112 09:54:49.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.800" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 09:54:49.799" endtime="20201112 09:54:49.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.802" level="INFO">VALUE: [6.209699999999707e-05, 6.193099999999771e-05, 6.149999999999906e-05, 6.145800000000035e-05, 6.133300000000022e-05, 6.140300000000154e-05, 6.161100000000308e-05, 6.176399999999888e-05, 6.168000000000146e-05, 6.165299999999832e-05, 6.169400000000103e-05, 6.163900000000222e-05, 6.15560000000008e-05, 6.152800000000166e-05, 6.165299999999832e-05, 6.15560000000008e-05, 6.162499999999918e-05, 6.170900000000007e-05, 6.163900000000222e-05, 6.165299999999832e-05, 6.173599999999974e-05, 6.161099999999961e-05, 6.143100000000068e-05, 6.14300000000012e-05, 6.134799999999926e-05, 6.134699999999979e-05, 6.149999999999906e-05, 6.181900000000115e-05, 6.151399999999863e-05, 6.158300000000047e-05, 6.152700000000219e-05, 6.177799999999845e-05, 6.15140000000021e-05, 6.170799999999713e-05, 6.212499999999968e-05, 6.218100000000143e-05, 6.13889999999985e-05, 6.1888999999999e-05, 6.14439999999973e-05, 6.17080000000006e-05, 6.231899999999818e-05, 6.161099999999961e-05, 6.177799999999845e-05, 6.159799999999951e-05, 6.177800000000191e-05, 6.141699999999764e-05, 6.162500000000265e-05, 6.141700000000111e-05, 6.184799999999976e-05, 6.15560000000008e-05]</msg>
<status status="PASS" starttime="20201112 09:54:49.801" endtime="20201112 09:54:49.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.796" endtime="20201112 09:54:49.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.806" endtime="20201112 09:54:49.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:49.810" endtime="20201112 09:54:49.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.808" endtime="20201112 09:54:49.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.804" endtime="20201112 09:54:49.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.433" endtime="20201112 09:54:49.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.432" endtime="20201112 09:54:49.831"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.840" endtime="20201112 09:54:49.858"></status>
</kw>
<msg timestamp="20201112 09:54:49.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:49.838" endtime="20201112 09:54:49.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:49.859" endtime="20201112 09:54:49.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.862" endtime="20201112 09:54:49.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.836" endtime="20201112 09:54:49.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.833" endtime="20201112 09:54:49.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.872" endtime="20201112 09:54:50.159"></status>
</kw>
<msg timestamp="20201112 09:54:50.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022544681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022607611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:49.871" endtime="20201112 09:54:50.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022544681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022607611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:50.163" endtime="20201112 09:54:50.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.172" endtime="20201112 09:54:50.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.868" endtime="20201112 09:54:50.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.866" endtime="20201112 09:54:50.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:50.179" level="INFO">${RESULT} = [{'time': 0.022607611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.292999999999924e-05, 'source_diff': 6.292999999999924e-05}, {'time': 0.022672639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:50.176" endtime="20201112 09:54:50.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:50.193" level="INFO">${ACCURACY} = {'time': [0.022607611, 0.022672639, 0.022737583, 0.022802625, 0.022867611, 0.022932681, 0.022997611, 0.023062625, 0.023127611, 0.023192653, 0.023257625, 0.023322694, 0.023387667, 0.023452653, 0.023517...</msg>
<status status="PASS" starttime="20201112 09:54:50.180" endtime="20201112 09:54:50.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.198" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 09:54:50.197" endtime="20201112 09:54:50.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.200" level="INFO">VALUE: [6.292999999999924e-05, 6.282000000000162e-05, 6.276399999999988e-05, 6.272200000000117e-05, 6.245799999999788e-05, 6.282000000000162e-05, 6.2889e-05, 6.318099999999896e-05, 6.27500000000003e-05, 6.244500000000125e-05, 6.244400000000178e-05, 6.286100000000086e-05, 6.28340000000012e-05, 6.245900000000082e-05, 6.263899999999975e-05, 6.250000000000006e-05, 6.25279999999992e-05, 6.263899999999975e-05, 6.258399999999747e-05, 6.24019999999996e-05, 6.28340000000012e-05, 6.267999999999899e-05, 6.290199999999663e-05, 6.29020000000001e-05, 6.245800000000135e-05, 6.251399999999963e-05, 6.266600000000289e-05, 6.276399999999988e-05, 6.276399999999988e-05, 6.23889999999995e-05, 6.237499999999993e-05, 6.237499999999993e-05, 6.267999999999899e-05, 6.258300000000147e-05, 6.263899999999975e-05, 6.25560000000018e-05, 6.251399999999963e-05, 6.251399999999963e-05, 6.331999999999866e-05, 6.27500000000003e-05, 6.261100000000061e-05, 6.27500000000003e-05, 6.23889999999995e-05, 6.276399999999988e-05, 6.25279999999992e-05, 6.252699999999972e-05, 6.243100000000168e-05, 6.317999999999949e-05, 6.277699999999997e-05, 6.281899999999868e-05]</msg>
<status status="PASS" starttime="20201112 09:54:50.199" endtime="20201112 09:54:50.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.194" endtime="20201112 09:54:50.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.204" endtime="20201112 09:54:50.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:50.208" endtime="20201112 09:54:50.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.206" endtime="20201112 09:54:50.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.202" endtime="20201112 09:54:50.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.832" endtime="20201112 09:54:50.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.831" endtime="20201112 09:54:50.229"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.238" endtime="20201112 09:54:50.255"></status>
</kw>
<msg timestamp="20201112 09:54:50.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:50.236" endtime="20201112 09:54:50.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:50.257" endtime="20201112 09:54:50.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.260" endtime="20201112 09:54:50.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.233" endtime="20201112 09:54:50.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.231" endtime="20201112 09:54:50.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.270" endtime="20201112 09:54:50.556"></status>
</kw>
<msg timestamp="20201112 09:54:50.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022493917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:50.268" endtime="20201112 09:54:50.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022493917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:50.560" endtime="20201112 09:54:50.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.569" endtime="20201112 09:54:50.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.266" endtime="20201112 09:54:50.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.264" endtime="20201112 09:54:50.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:50.576" level="INFO">${RESULT} = [{'time': 0.022557458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.354100000000029e-05, 'source_diff': 6.354100000000029e-05}, {'time': 0.022623472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:50.572" endtime="20201112 09:54:50.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:50.590" level="INFO">${ACCURACY} = {'time': [0.022557458, 0.022623472, 0.022689417, 0.022755444, 0.022821431, 0.0228875, 0.022953444, 0.023019472, 0.023085444, 0.023151472, 0.023217458, 0.0232835, 0.023349458, 0.023415556, 0.023481514,...</msg>
<status status="PASS" starttime="20201112 09:54:50.577" endtime="20201112 09:54:50.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.594" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 09:54:50.593" endtime="20201112 09:54:50.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.597" level="INFO">VALUE: [6.354100000000029e-05, 6.377799999999698e-05, 6.348600000000149e-05, 6.333299999999875e-05, 6.344499999999878e-05, 6.391700000000014e-05, 6.336100000000136e-05, 6.342999999999974e-05, 6.345799999999888e-05, 6.369399999999956e-05, 6.334699999999832e-05, 6.388899999999753e-05, 6.352700000000072e-05, 6.358400000000194e-05, 6.380599999999959e-05, 6.391700000000014e-05, 6.3582999999999e-05, 6.334699999999832e-05, 6.362499999999771e-05, 6.344499999999878e-05, 6.3582999999999e-05, 6.373599999999827e-05, 6.363899999999728e-05, 6.344500000000225e-05, 6.336099999999789e-05, 6.370900000000207e-05, 6.381999999999916e-05, 6.341699999999964e-05, 6.388899999999753e-05, 6.347200000000192e-05, 6.355499999999986e-05, 6.369399999999956e-05, 6.413899999999778e-05, 6.345799999999888e-05, 6.341600000000017e-05, 6.350000000000106e-05, 6.337499999999746e-05, 6.3889000000001e-05, 6.344400000000278e-05, 6.381900000000315e-05, 6.336099999999789e-05, 6.384700000000229e-05, 6.377799999999698e-05, 6.38340000000022e-05, 6.361100000000161e-05, 6.384700000000229e-05, 6.359699999999857e-05, 6.376400000000088e-05, 6.358400000000194e-05, 6.34020000000006e-05]</msg>
<status status="PASS" starttime="20201112 09:54:50.596" endtime="20201112 09:54:50.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.591" endtime="20201112 09:54:50.598"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.601" endtime="20201112 09:54:50.602"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:50.604" endtime="20201112 09:54:50.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.603" endtime="20201112 09:54:50.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.599" endtime="20201112 09:54:50.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.230" endtime="20201112 09:54:50.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.229" endtime="20201112 09:54:50.625"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.634" endtime="20201112 09:54:50.652"></status>
</kw>
<msg timestamp="20201112 09:54:50.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:50.633" endtime="20201112 09:54:50.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:50.653" endtime="20201112 09:54:50.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.656" endtime="20201112 09:54:50.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.630" endtime="20201112 09:54:50.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.628" endtime="20201112 09:54:50.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.666" endtime="20201112 09:54:50.952"></status>
</kw>
<msg timestamp="20201112 09:54:50.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022701375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:50.665" endtime="20201112 09:54:50.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022701375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:50.956" endtime="20201112 09:54:50.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.965" endtime="20201112 09:54:50.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.662" endtime="20201112 09:54:50.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.660" endtime="20201112 09:54:50.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:50.972" level="INFO">${RESULT} = [{'time': 0.022701375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.44440000000003e-05, 'source_diff': 6.44440000000003e-05}, {'time': 0.022768389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:50.968" endtime="20201112 09:54:50.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:50.986" level="INFO">${ACCURACY} = {'time': [0.022701375, 0.022768389, 0.022835361, 0.022902361, 0.022969361, 0.023036375, 0.023103361, 0.023170403, 0.023237375, 0.023304403, 0.023371403, 0.023438417, 0.023505444, 0.023572458, 0.023639...</msg>
<status status="PASS" starttime="20201112 09:54:50.973" endtime="20201112 09:54:50.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.990" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 09:54:50.989" endtime="20201112 09:54:50.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.993" level="INFO">VALUE: [6.44440000000003e-05, 6.434699999999932e-05, 6.437499999999846e-05, 6.477799999999798e-05, 6.440300000000107e-05, 6.4583e-05, 6.445799999999988e-05, 6.462499999999871e-05, 6.454200000000077e-05, 6.458400000000294e-05, 6.466699999999742e-05, 6.451399999999816e-05, 6.49440000000008e-05, 6.441600000000117e-05, 6.486099999999939e-05, 6.45280000000012e-05, 6.4889000000002e-05, 6.437499999999846e-05, 6.448599999999902e-05, 6.465200000000185e-05, 6.454099999999782e-05, 6.469400000000056e-05, 6.44440000000003e-05, 6.454200000000077e-05, 6.452699999999825e-05, 6.443000000000074e-05, 6.433299999999975e-05, 6.430500000000061e-05, 6.447300000000239e-05, 6.440300000000107e-05, 6.495899999999985e-05, 6.47219999999997e-05, 6.533300000000075e-05, 6.451400000000163e-05, 6.470800000000013e-05, 6.461099999999914e-05, 6.463900000000175e-05, 6.447199999999945e-05, 6.454200000000077e-05, 6.447299999999892e-05, 6.468100000000046e-05, 6.477800000000145e-05, 6.443100000000021e-05, 6.491600000000167e-05, 6.454100000000129e-05, 6.487499999999896e-05, 6.486199999999887e-05, 6.466600000000142e-05, 6.437500000000193e-05, 6.495800000000038e-05]</msg>
<status status="PASS" starttime="20201112 09:54:50.992" endtime="20201112 09:54:50.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.987" endtime="20201112 09:54:50.994"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.997" endtime="20201112 09:54:50.998"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:51.000" endtime="20201112 09:54:51.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.999" endtime="20201112 09:54:51.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.995" endtime="20201112 09:54:51.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.626" endtime="20201112 09:54:51.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.626" endtime="20201112 09:54:51.022"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.031" endtime="20201112 09:54:51.049"></status>
</kw>
<msg timestamp="20201112 09:54:51.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.030" endtime="20201112 09:54:51.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.051" endtime="20201112 09:54:51.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.053" endtime="20201112 09:54:51.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.027" endtime="20201112 09:54:51.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.025" endtime="20201112 09:54:51.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.064" endtime="20201112 09:54:51.349"></status>
</kw>
<msg timestamp="20201112 09:54:51.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02360325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023669431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:51.062" endtime="20201112 09:54:51.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02360325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023669431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:51.354" endtime="20201112 09:54:51.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.362" endtime="20201112 09:54:51.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.060" endtime="20201112 09:54:51.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.058" endtime="20201112 09:54:51.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:51.369" level="INFO">${RESULT} = [{'time': 0.023669431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.618100000000196e-05, 'source_diff': 6.618100000000196e-05}, {'time': 0.023737431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:51.366" endtime="20201112 09:54:51.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:51.384" level="INFO">${ACCURACY} = {'time': [0.023669431, 0.023737431, 0.023805389, 0.023873403, 0.023941403, 0.024009417, 0.024077403, 0.024145431, 0.024213417, 0.024281444, 0.024350431, 0.024418458, 0.024486431, 0.024554458, 0.024622...</msg>
<status status="PASS" starttime="20201112 09:54:51.370" endtime="20201112 09:54:51.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.389" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 09:54:51.388" endtime="20201112 09:54:51.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.392" level="INFO">VALUE: [6.618100000000196e-05, 6.552799999999873e-05, 6.544500000000078e-05, 6.545900000000035e-05, 6.563899999999928e-05, 6.561100000000014e-05, 6.57639999999994e-05, 6.581999999999769e-05, 6.547299999999992e-05, 6.554099999999882e-05, 6.633399999999776e-05, 6.563899999999928e-05, 6.533400000000023e-05, 6.545800000000088e-05, 6.545800000000088e-05, 6.570800000000113e-05, 6.563899999999928e-05, 6.53890000000025e-05, 6.591699999999867e-05, 6.549999999999959e-05, 6.561100000000014e-05, 6.593099999999824e-05, 6.533299999999728e-05, 6.59440000000018e-05, 6.559700000000057e-05, 6.54029999999986e-05, 6.581899999999821e-05, 6.545900000000035e-05, 6.559700000000057e-05, 6.59029999999991e-05, 6.54029999999986e-05, 6.580600000000159e-05, 6.574999999999984e-05, 6.568099999999799e-05, 6.615299999999935e-05, 6.538799999999956e-05, 6.54440000000013e-05, 6.584700000000082e-05, 6.563799999999981e-05, 6.567999999999852e-05, 6.552699999999925e-05, 6.569400000000156e-05, 6.559700000000057e-05, 6.565299999999885e-05, 6.636100000000089e-05, 6.569500000000103e-05, 6.561100000000014e-05, 6.573600000000027e-05, 6.5583000000001e-05, 6.584700000000082e-05]</msg>
<status status="PASS" starttime="20201112 09:54:51.390" endtime="20201112 09:54:51.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.385" endtime="20201112 09:54:51.393"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.396" endtime="20201112 09:54:51.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:51.399" endtime="20201112 09:54:51.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.398" endtime="20201112 09:54:51.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.394" endtime="20201112 09:54:51.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.023" endtime="20201112 09:54:51.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.022" endtime="20201112 09:54:51.420"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.429" endtime="20201112 09:54:51.446"></status>
</kw>
<msg timestamp="20201112 09:54:51.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.428" endtime="20201112 09:54:51.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.447" endtime="20201112 09:54:51.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.450" endtime="20201112 09:54:51.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.425" endtime="20201112 09:54:51.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.423" endtime="20201112 09:54:51.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.461" endtime="20201112 09:54:51.747"></status>
</kw>
<msg timestamp="20201112 09:54:51.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022819889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022886542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:51.459" endtime="20201112 09:54:51.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022819889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022886542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:51.751" endtime="20201112 09:54:51.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.760" endtime="20201112 09:54:51.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.456" endtime="20201112 09:54:51.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.454" endtime="20201112 09:54:51.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:51.767" level="INFO">${RESULT} = [{'time': 0.022886542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.665299999999985e-05, 'source_diff': 6.665299999999985e-05}, {'time': 0.022955583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:51.764" endtime="20201112 09:54:51.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:51.781" level="INFO">${ACCURACY} = {'time': [0.022886542, 0.022955583, 0.023024528, 0.023093542, 0.023162528, 0.023231542, 0.023300528, 0.023369611, 0.023438542, 0.023507569, 0.023576556, 0.023645583, 0.023714569, 0.023783583, 0.023852...</msg>
<status status="PASS" starttime="20201112 09:54:51.768" endtime="20201112 09:54:51.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.786" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 09:54:51.785" endtime="20201112 09:54:51.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.788" level="INFO">VALUE: [6.665299999999985e-05, 6.67640000000004e-05, 6.648599999999755e-05, 6.665300000000332e-05, 6.666700000000289e-05, 6.643100000000221e-05, 6.682000000000216e-05, 6.669399999999909e-05, 6.668099999999899e-05, 6.667999999999952e-05, 6.656999999999844e-05, 6.675000000000084e-05, 6.684700000000182e-05, 6.662500000000071e-05, 6.666599999999995e-05, 6.666599999999995e-05, 6.669399999999909e-05, 6.670800000000213e-05, 6.679100000000007e-05, 6.651400000000016e-05, 6.681899999999921e-05, 6.69030000000001e-05, 6.683299999999878e-05, 6.644500000000178e-05, 6.661100000000114e-05, 6.680599999999912e-05, 6.682000000000216e-05, 6.648600000000102e-05, 6.656999999999844e-05, 6.637499999999699e-05, 6.668099999999899e-05, 6.665299999999985e-05, 6.686100000000139e-05, 6.67770000000005e-05, 6.690200000000063e-05, 6.652700000000025e-05, 6.687500000000096e-05, 6.629099999999957e-05, 6.654099999999982e-05, 6.679100000000007e-05, 6.642999999999927e-05, 6.680499999999964e-05, 6.683299999999878e-05, 6.663900000000028e-05, 6.683299999999878e-05, 6.675000000000084e-05, 6.655599999999887e-05, 6.65969999999981e-05, 6.643099999999874e-05, 6.669500000000203e-05]</msg>
<status status="PASS" starttime="20201112 09:54:51.787" endtime="20201112 09:54:51.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.782" endtime="20201112 09:54:51.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.792" endtime="20201112 09:54:51.793"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:51.796" endtime="20201112 09:54:51.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.794" endtime="20201112 09:54:51.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.790" endtime="20201112 09:54:51.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.421" endtime="20201112 09:54:51.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.420" endtime="20201112 09:54:51.817"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.826" endtime="20201112 09:54:51.843"></status>
</kw>
<msg timestamp="20201112 09:54:51.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.824" endtime="20201112 09:54:51.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.845" endtime="20201112 09:54:51.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.848" endtime="20201112 09:54:51.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.821" endtime="20201112 09:54:51.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.819" endtime="20201112 09:54:51.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.858" endtime="20201112 09:54:52.145"></status>
</kw>
<msg timestamp="20201112 09:54:52.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022460611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022528708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:51.857" endtime="20201112 09:54:52.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022460611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022528708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:52.149" endtime="20201112 09:54:52.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.158" endtime="20201112 09:54:52.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.854" endtime="20201112 09:54:52.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.852" endtime="20201112 09:54:52.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:52.165" level="INFO">${RESULT} = [{'time': 0.022528708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.809700000000307e-05, 'source_diff': 6.809700000000307e-05}, {'time': 0.022598722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:52.161" endtime="20201112 09:54:52.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:52.179" level="INFO">${ACCURACY} = {'time': [0.022528708, 0.022598722, 0.022668667, 0.022738694, 0.022808681, 0.022878722, 0.022948694, 0.023018708, 0.023088694, 0.023158778, 0.023228736, 0.023298736, 0.023368722, 0.023438764, 0.023508...</msg>
<status status="PASS" starttime="20201112 09:54:52.166" endtime="20201112 09:54:52.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.183" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 09:54:52.182" endtime="20201112 09:54:52.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.186" level="INFO">VALUE: [6.809700000000307e-05, 6.781900000000021e-05, 6.736099999999842e-05, 6.756899999999996e-05, 6.762500000000171e-05, 6.781900000000021e-05, 6.755499999999692e-05, 6.772199999999923e-05, 6.751299999999821e-05, 6.780600000000012e-05, 6.736099999999842e-05, 6.74030000000006e-05, 6.745800000000288e-05, 6.791700000000067e-05, 6.784699999999935e-05, 6.779199999999708e-05, 6.750000000000159e-05, 6.7583000000003e-05, 6.755599999999987e-05, 6.786099999999892e-05, 6.77359999999988e-05, 6.741700000000017e-05, 6.830600000000062e-05, 6.744400000000331e-05, 6.787500000000196e-05, 6.780500000000064e-05, 6.74030000000006e-05, 6.747199999999898e-05, 6.770899999999913e-05, 6.761099999999867e-05, 6.737500000000146e-05, 6.794400000000034e-05, 6.774999999999837e-05, 6.763900000000128e-05, 6.780500000000064e-05, 6.772199999999923e-05, 6.744399999999984e-05, 6.74030000000006e-05, 6.777800000000098e-05, 6.77909999999976e-05, 6.787500000000196e-05, 6.747199999999898e-05, 6.784699999999935e-05, 6.779200000000055e-05, 6.758299999999953e-05, 6.745899999999888e-05, 6.74030000000006e-05, 6.77640000000014e-05, 6.768099999999999e-05, 6.754099999999735e-05]</msg>
<status status="PASS" starttime="20201112 09:54:52.184" endtime="20201112 09:54:52.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.180" endtime="20201112 09:54:52.187"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.190" endtime="20201112 09:54:52.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:52.193" endtime="20201112 09:54:52.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.192" endtime="20201112 09:54:52.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.188" endtime="20201112 09:54:52.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.818" endtime="20201112 09:54:52.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.817" endtime="20201112 09:54:52.214"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.223" endtime="20201112 09:54:52.241"></status>
</kw>
<msg timestamp="20201112 09:54:52.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.222" endtime="20201112 09:54:52.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.242" endtime="20201112 09:54:52.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.245" endtime="20201112 09:54:52.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.219" endtime="20201112 09:54:52.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.217" endtime="20201112 09:54:52.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.255" endtime="20201112 09:54:52.542"></status>
</kw>
<msg timestamp="20201112 09:54:52.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022662653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:52.254" endtime="20201112 09:54:52.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022662653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:52.546" endtime="20201112 09:54:52.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.555" endtime="20201112 09:54:52.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.251" endtime="20201112 09:54:52.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.249" endtime="20201112 09:54:52.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:52.562" level="INFO">${RESULT} = [{'time': 0.022662653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.92640000000029e-05, 'source_diff': 6.92640000000029e-05}, {'time': 0.022733667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:52.558" endtime="20201112 09:54:52.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:52.576" level="INFO">${ACCURACY} = {'time': [0.022662653, 0.022733667, 0.022804625, 0.022875667, 0.022946639, 0.023017681, 0.023088708, 0.023159667, 0.023230653, 0.023301681, 0.023372694, 0.023443694, 0.023514708, 0.023585694, 0.023656...</msg>
<status status="PASS" starttime="20201112 09:54:52.563" endtime="20201112 09:54:52.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.581" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 09:54:52.580" endtime="20201112 09:54:52.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.583" level="INFO">VALUE: [6.92640000000029e-05, 6.849999999999912e-05, 6.834699999999985e-05, 6.85559999999974e-05, 6.847199999999998e-05, 6.855600000000087e-05, 6.890199999999916e-05, 6.874999999999937e-05, 6.882000000000069e-05, 6.862500000000271e-05, 6.884700000000035e-05, 6.856900000000096e-05, 6.890199999999916e-05, 6.879100000000207e-05, 6.876399999999894e-05, 6.890199999999916e-05, 6.858300000000053e-05, 6.887499999999949e-05, 6.838899999999856e-05, 6.854199999999783e-05, 6.855500000000139e-05, 6.877799999999851e-05, 6.874999999999937e-05, 6.877800000000198e-05, 6.869400000000109e-05, 6.868100000000099e-05, 6.852799999999826e-05, 6.862499999999924e-05, 6.838899999999856e-05, 6.851399999999869e-05, 6.84030000000016e-05, 6.884799999999983e-05, 6.841700000000117e-05, 6.840299999999813e-05, 6.852800000000173e-05, 6.841599999999823e-05, 6.855600000000087e-05, 6.886099999999992e-05, 6.857000000000044e-05, 6.865299999999838e-05, 6.85970000000001e-05, 6.886099999999992e-05, 6.838899999999856e-05, 6.861099999999967e-05, 6.840299999999813e-05, 6.85970000000001e-05, 6.836099999999942e-05, 6.894400000000134e-05, 6.913899999999931e-05, 6.843100000000074e-05]</msg>
<status status="PASS" starttime="20201112 09:54:52.582" endtime="20201112 09:54:52.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.577" endtime="20201112 09:54:52.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.587" endtime="20201112 09:54:52.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:52.591" endtime="20201112 09:54:52.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.589" endtime="20201112 09:54:52.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.585" endtime="20201112 09:54:52.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.215" endtime="20201112 09:54:52.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.215" endtime="20201112 09:54:52.612"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.621" endtime="20201112 09:54:52.638"></status>
</kw>
<msg timestamp="20201112 09:54:52.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.619" endtime="20201112 09:54:52.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.639" endtime="20201112 09:54:52.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.642" endtime="20201112 09:54:52.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.616" endtime="20201112 09:54:52.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.614" endtime="20201112 09:54:52.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.652" endtime="20201112 09:54:52.938"></status>
</kw>
<msg timestamp="20201112 09:54:52.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022659194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022728778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:52.651" endtime="20201112 09:54:52.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022659194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022728778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:52.942" endtime="20201112 09:54:52.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.951" endtime="20201112 09:54:52.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.648" endtime="20201112 09:54:52.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.646" endtime="20201112 09:54:52.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:52.958" level="INFO">${RESULT} = [{'time': 0.022728778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.9584000000001e-05, 'source_diff': 6.9584000000001e-05}, {'time': 0.022800778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201112 09:54:52.954" endtime="20201112 09:54:52.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:52.973" level="INFO">${ACCURACY} = {'time': [0.022728778, 0.022800778, 0.022872736, 0.02294475, 0.023016764, 0.023088764, 0.02316075, 0.023232778, 0.023305764, 0.023377806, 0.023449847, 0.023521806, 0.023593819, 0.023665806, 0.02373780...</msg>
<status status="PASS" starttime="20201112 09:54:52.959" endtime="20201112 09:54:52.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.977" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 09:54:52.976" endtime="20201112 09:54:52.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.980" level="INFO">VALUE: [6.9584000000001e-05, 6.983400000000126e-05, 6.968000000000252e-05, 6.99169999999992e-05, 6.97499999999969e-05, 6.977799999999951e-05, 6.984700000000135e-05, 6.95559999999984e-05, 7.033299999999881e-05, 6.943100000000174e-05, 6.952799999999926e-05, 6.977799999999951e-05, 6.983299999999831e-05, 6.963899999999981e-05, 6.965299999999938e-05, 6.97909999999996e-05, 6.958300000000153e-05, 6.947200000000098e-05, 6.987500000000049e-05, 6.969399999999862e-05, 7.02910000000001e-05, 6.956900000000196e-05, 7.031900000000271e-05, 6.993100000000224e-05, 6.986100000000092e-05, 6.963900000000328e-05, 6.958300000000153e-05, 6.980599999999865e-05, 6.979199999999908e-05, 6.952800000000273e-05, 6.938899999999956e-05, 6.938899999999956e-05, 6.97640000000034e-05, 6.997199999999801e-05, 7.013900000000031e-05, 6.97360000000008e-05, 6.94030000000026e-05, 6.973599999999733e-05, 6.958299999999806e-05, 6.962499999999677e-05, 6.987500000000049e-05, 6.937499999999999e-05, 6.976399999999994e-05, 6.977799999999951e-05, 6.966599999999948e-05, 6.990299999999963e-05, 6.948599999999708e-05, 6.944500000000131e-05, 6.959800000000058e-05, 6.961100000000067e-05]</msg>
<status status="PASS" starttime="20201112 09:54:52.978" endtime="20201112 09:54:52.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.974" endtime="20201112 09:54:52.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.984" endtime="20201112 09:54:52.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:52.987" endtime="20201112 09:54:53.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.986" endtime="20201112 09:54:53.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.982" endtime="20201112 09:54:53.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.613" endtime="20201112 09:54:53.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.612" endtime="20201112 09:54:53.008"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.017" endtime="20201112 09:54:53.035"></status>
</kw>
<msg timestamp="20201112 09:54:53.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.016" endtime="20201112 09:54:53.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.037" endtime="20201112 09:54:53.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.039" endtime="20201112 09:54:53.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.013" endtime="20201112 09:54:53.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.011" endtime="20201112 09:54:53.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.051" endtime="20201112 09:54:53.337"></status>
</kw>
<msg timestamp="20201112 09:54:53.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022854028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022924764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.049" endtime="20201112 09:54:53.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022854028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022924764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.342" endtime="20201112 09:54:53.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.351" endtime="20201112 09:54:53.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.046" endtime="20201112 09:54:53.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.044" endtime="20201112 09:54:53.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:53.358" level="INFO">${RESULT} = [{'time': 0.022924764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.07360000000018e-05, 'source_diff': 7.07360000000018e-05}, {'time': 0.022997792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:53.354" endtime="20201112 09:54:53.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:53.371" level="INFO">${ACCURACY} = {'time': [0.022924764, 0.022997792, 0.023070736, 0.023143764, 0.023216736, 0.02328975, 0.023362736, 0.023435764, 0.023508764, 0.023581792, 0.023654778, 0.023727792, 0.023800806, 0.023873806, 0.0239468...</msg>
<status status="PASS" starttime="20201112 09:54:53.359" endtime="20201112 09:54:53.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.376" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 09:54:53.375" endtime="20201112 09:54:53.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.379" level="INFO">VALUE: [7.07360000000018e-05, 7.044499999999884e-05, 7.063900000000081e-05, 7.077800000000051e-05, 7.072200000000223e-05, 7.087500000000149e-05, 7.031899999999924e-05, 7.036100000000142e-05, 7.084700000000235e-05, 7.090300000000063e-05, 7.040300000000013e-05, 7.066699999999995e-05, 7.080599999999965e-05, 7.079200000000008e-05, 7.069500000000256e-05, 7.058299999999906e-05, 7.091600000000073e-05, 7.041600000000023e-05, 7.07360000000018e-05, 7.045800000000241e-05, 7.073599999999833e-05, 7.051400000000069e-05, 7.088899999999759e-05, 7.051400000000069e-05, 7.045799999999894e-05, 7.037500000000099e-05, 7.077800000000051e-05, 7.051400000000069e-05, 7.077799999999704e-05, 7.070899999999866e-05, 7.130600000000015e-05, 7.072200000000223e-05, 7.068099999999952e-05, 7.077799999999704e-05, 7.066699999999995e-05, 7.076399999999747e-05, 7.063900000000081e-05, 7.072299999999823e-05, 7.044499999999884e-05, 7.055499999999992e-05, 7.136099999999895e-05, 7.040200000000066e-05, 7.036100000000142e-05, 7.088900000000106e-05, 7.051400000000069e-05, 7.080599999999965e-05, 7.033300000000228e-05, 7.09300000000003e-05, 7.084699999999888e-05, 7.047199999999851e-05]</msg>
<status status="PASS" starttime="20201112 09:54:53.377" endtime="20201112 09:54:53.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.372" endtime="20201112 09:54:53.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.382" endtime="20201112 09:54:53.384"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:53.386" endtime="20201112 09:54:53.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.384" endtime="20201112 09:54:53.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.381" endtime="20201112 09:54:53.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.009" endtime="20201112 09:54:53.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.009" endtime="20201112 09:54:53.407"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.416" endtime="20201112 09:54:53.435"></status>
</kw>
<msg timestamp="20201112 09:54:53.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.414" endtime="20201112 09:54:53.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.436" endtime="20201112 09:54:53.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.439" endtime="20201112 09:54:53.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.412" endtime="20201112 09:54:53.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.409" endtime="20201112 09:54:53.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.450" endtime="20201112 09:54:53.736"></status>
</kw>
<msg timestamp="20201112 09:54:53.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022832917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022905056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.448" endtime="20201112 09:54:53.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022832917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022905056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.740" endtime="20201112 09:54:53.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.749" endtime="20201112 09:54:53.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.445" endtime="20201112 09:54:53.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.443" endtime="20201112 09:54:53.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:53.756" level="INFO">${RESULT} = [{'time': 0.022905056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.213899999999884e-05, 'source_diff': 7.213899999999884e-05}, {'time': 0.022979083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:53.752" endtime="20201112 09:54:53.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:53.770" level="INFO">${ACCURACY} = {'time': [0.022905056, 0.022979083, 0.023054028, 0.023128056, 0.023202028, 0.023276069, 0.023350042, 0.023424083, 0.023498056, 0.023572069, 0.023646056, 0.023720111, 0.023794069, 0.023868097, 0.023942...</msg>
<status status="PASS" starttime="20201112 09:54:53.757" endtime="20201112 09:54:53.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.775" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 09:54:53.773" endtime="20201112 09:54:53.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.777" level="INFO">VALUE: [7.213899999999884e-05, 7.144400000000037e-05, 7.233400000000029e-05, 7.193100000000077e-05, 7.168100000000052e-05, 7.170800000000019e-05, 7.184800000000283e-05, 7.187499999999902e-05, 7.148699999999855e-05, 7.187500000000249e-05, 7.141699999999723e-05, 7.183300000000031e-05, 7.183300000000031e-05, 7.152800000000126e-05, 7.133299999999981e-05, 7.176399999999847e-05, 7.172199999999976e-05, 7.158300000000006e-05, 7.170800000000019e-05, 7.184699999999988e-05, 7.137499999999852e-05, 7.15560000000004e-05, 7.186099999999945e-05, 7.170899999999966e-05, 7.152799999999779e-05, 7.154200000000083e-05, 7.140300000000113e-05, 7.154200000000083e-05, 7.183399999999979e-05, 7.151399999999822e-05, 7.161100000000267e-05, 7.190199999999869e-05, 7.140199999999819e-05, 7.162500000000224e-05, 7.17360000000028e-05, 7.165299999999791e-05, 7.148599999999908e-05, 7.150000000000212e-05, 7.148599999999908e-05, 7.151399999999822e-05, 7.148599999999908e-05, 7.148600000000255e-05, 7.163899999999834e-05, 7.19439999999974e-05, 7.140300000000113e-05, 7.149999999999865e-05, 7.173599999999933e-05, 7.219500000000059e-05, 7.138899999999809e-05, 7.151399999999822e-05]</msg>
<status status="PASS" starttime="20201112 09:54:53.776" endtime="20201112 09:54:53.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.771" endtime="20201112 09:54:53.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.781" endtime="20201112 09:54:53.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:53.785" endtime="20201112 09:54:53.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.783" endtime="20201112 09:54:53.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.779" endtime="20201112 09:54:53.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.408" endtime="20201112 09:54:53.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.407" endtime="20201112 09:54:53.806"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.815" endtime="20201112 09:54:53.832"></status>
</kw>
<msg timestamp="20201112 09:54:53.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.813" endtime="20201112 09:54:53.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.834" endtime="20201112 09:54:53.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.836" endtime="20201112 09:54:53.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.810" endtime="20201112 09:54:53.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.808" endtime="20201112 09:54:53.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.847" endtime="20201112 09:54:54.133"></status>
</kw>
<msg timestamp="20201112 09:54:54.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022635681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022707958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.845" endtime="20201112 09:54:54.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022635681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022707958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:54.138" endtime="20201112 09:54:54.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.146" endtime="20201112 09:54:54.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.843" endtime="20201112 09:54:54.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.841" endtime="20201112 09:54:54.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:54.153" level="INFO">${RESULT} = [{'time': 0.022707958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.227699999999906e-05, 'source_diff': 7.227699999999906e-05}, {'time': 0.022782986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:54.150" endtime="20201112 09:54:54.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:54.167" level="INFO">${ACCURACY} = {'time': [0.022707958, 0.022782986, 0.022857931, 0.022932986, 0.023007944, 0.023082986, 0.023157958, 0.023233014, 0.023307986, 0.023383, 0.023458, 0.023533014, 0.023609, 0.023684014, 0.023759, 0.02383...</msg>
<status status="PASS" starttime="20201112 09:54:54.154" endtime="20201112 09:54:54.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.172" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 09:54:54.171" endtime="20201112 09:54:54.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.175" level="INFO">VALUE: [7.227699999999906e-05, 7.266700000000195e-05, 7.254200000000183e-05, 7.240299999999866e-05, 7.287500000000002e-05, 7.259700000000063e-05, 7.237499999999952e-05, 7.269500000000109e-05, 7.25829999999976e-05, 7.252800000000226e-05, 7.252799999999879e-05, 7.286100000000045e-05, 7.333300000000181e-05, 7.279199999999861e-05, 7.26110000000002e-05, 7.236099999999995e-05, 7.25829999999976e-05, 7.259800000000011e-05, 7.286100000000045e-05, 7.237499999999952e-05, 7.25560000000014e-05, 7.255499999999845e-05, 7.279200000000208e-05, 7.266700000000195e-05, 7.27499999999999e-05, 7.248600000000008e-05, 7.24439999999979e-05, 7.242999999999833e-05, 7.281899999999827e-05, 7.286100000000045e-05, 7.272200000000076e-05, 7.273600000000033e-05, 7.247200000000051e-05, 7.259700000000063e-05, 7.313899999999984e-05, 7.298600000000058e-05, 7.288899999999959e-05, 7.287500000000002e-05, 7.269500000000109e-05, 7.240299999999866e-05, 7.273600000000033e-05, 7.245900000000041e-05, 7.244400000000137e-05, 7.236199999999943e-05, 7.236099999999995e-05, 7.27910000000026e-05, 7.240299999999866e-05, 7.269399999999815e-05, 7.24300000000018e-05, 7.254099999999888e-05]</msg>
<status status="PASS" starttime="20201112 09:54:54.173" endtime="20201112 09:54:54.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.168" endtime="20201112 09:54:54.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.182" endtime="20201112 09:54:54.184"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:54.186" endtime="20201112 09:54:54.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.184" endtime="20201112 09:54:54.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.180" endtime="20201112 09:54:54.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.806" endtime="20201112 09:54:54.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.806" endtime="20201112 09:54:54.207"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.216" endtime="20201112 09:54:54.233"></status>
</kw>
<msg timestamp="20201112 09:54:54.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.214" endtime="20201112 09:54:54.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.235" endtime="20201112 09:54:54.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.237" endtime="20201112 09:54:54.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.212" endtime="20201112 09:54:54.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.209" endtime="20201112 09:54:54.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.248" endtime="20201112 09:54:54.534"></status>
</kw>
<msg timestamp="20201112 09:54:54.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022646, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022720083, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:54.246" endtime="20201112 09:54:54.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022646, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022720083, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:54.538" endtime="20201112 09:54:54.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.547" endtime="20201112 09:54:54.549"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.243" endtime="20201112 09:54:54.549"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.242" endtime="20201112 09:54:54.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:54.554" level="INFO">${RESULT} = [{'time': 0.022720083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.40829999999991e-05, 'source_diff': 7.40829999999991e-05}, {'time': 0.022796125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:54.550" endtime="20201112 09:54:54.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:54.569" level="INFO">${ACCURACY} = {'time': [0.022720083, 0.022796125, 0.022872069, 0.022948097, 0.023024083, 0.023100125, 0.023176097, 0.023252097, 0.023328139, 0.023404111, 0.023480097, 0.023556139, 0.023632125, 0.023708153, 0.023784...</msg>
<status status="PASS" starttime="20201112 09:54:54.555" endtime="20201112 09:54:54.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.574" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 09:54:54.573" endtime="20201112 09:54:54.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.576" level="INFO">VALUE: [7.40829999999991e-05, 7.390300000000016e-05, 7.342999999999933e-05, 7.367999999999958e-05, 7.387500000000102e-05, 7.390300000000016e-05, 7.383299999999884e-05, 7.37500000000009e-05, 7.387500000000102e-05, 7.363899999999687e-05, 7.363899999999687e-05, 7.377800000000004e-05, 7.362500000000077e-05, 7.383399999999832e-05, 7.363900000000034e-05, 7.333399999999782e-05, 7.3763999999997e-05, 7.370900000000166e-05, 7.373600000000133e-05, 7.416699999999998e-05, 7.348600000000108e-05, 7.398600000000158e-05, 7.387500000000102e-05, 7.376299999999752e-05, 7.392999999999983e-05, 7.333300000000181e-05, 7.388900000000059e-05, 7.350000000000065e-05, 7.344499999999837e-05, 7.383299999999884e-05, 7.351400000000022e-05, 7.357000000000197e-05, 7.3763999999997e-05, 7.369399999999915e-05, 7.384700000000188e-05, 7.386099999999798e-05, 7.348600000000108e-05, 7.380600000000265e-05, 7.391600000000026e-05, 7.372200000000176e-05, 7.338900000000009e-05, 7.384800000000136e-05, 7.355599999999893e-05, 7.369499999999862e-05, 7.358399999999807e-05, 7.358300000000206e-05, 7.36249999999973e-05, 7.3763000000001e-05, 7.351400000000022e-05, 7.365299999999991e-05]</msg>
<status status="PASS" starttime="20201112 09:54:54.575" endtime="20201112 09:54:54.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.570" endtime="20201112 09:54:54.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.580" endtime="20201112 09:54:54.581"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:54.584" endtime="20201112 09:54:54.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.582" endtime="20201112 09:54:54.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.578" endtime="20201112 09:54:54.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.208" endtime="20201112 09:54:54.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.207" endtime="20201112 09:54:54.605"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.614" endtime="20201112 09:54:54.631"></status>
</kw>
<msg timestamp="20201112 09:54:54.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.612" endtime="20201112 09:54:54.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.633" endtime="20201112 09:54:54.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.636" endtime="20201112 09:54:54.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.609" endtime="20201112 09:54:54.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.607" endtime="20201112 09:54:54.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.646" endtime="20201112 09:54:54.933"></status>
</kw>
<msg timestamp="20201112 09:54:54.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022586875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022661875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:54.645" endtime="20201112 09:54:54.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022586875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022661875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:54.937" endtime="20201112 09:54:54.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.946" endtime="20201112 09:54:54.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.642" endtime="20201112 09:54:54.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.640" endtime="20201112 09:54:54.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:54.953" level="INFO">${RESULT} = [{'time': 0.022661875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.500000000000215e-05, 'source_diff': 7.500000000000215e-05}, {'time': 0.022738903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:54.949" endtime="20201112 09:54:54.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:54.967" level="INFO">${ACCURACY} = {'time': [0.022661875, 0.022738903, 0.022815847, 0.022892889, 0.022969861, 0.023046889, 0.023123917, 0.023200903, 0.023277889, 0.023354931, 0.023431944, 0.023508917, 0.023585931, 0.023662931, 0.023739...</msg>
<status status="PASS" starttime="20201112 09:54:54.954" endtime="20201112 09:54:54.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.971" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 09:54:54.970" endtime="20201112 09:54:54.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.974" level="INFO">VALUE: [7.500000000000215e-05, 7.445900000000241e-05, 7.443000000000033e-05, 7.484699999999941e-05, 7.450000000000165e-05, 7.445799999999947e-05, 7.486100000000245e-05, 7.4763999999998e-05, 7.459699999999916e-05, 7.452799999999732e-05, 7.44439999999999e-05, 7.440300000000066e-05, 7.445900000000241e-05, 7.477800000000104e-05, 7.46249999999983e-05, 7.449999999999818e-05, 7.443000000000033e-05, 7.46110000000022e-05, 7.487500000000202e-05, 7.458300000000306e-05, 7.445799999999947e-05, 7.486099999999898e-05, 7.516700000000098e-05, 7.463900000000134e-05, 7.443000000000033e-05, 7.44309999999998e-05, 7.470799999999972e-05, 7.494500000000334e-05, 7.455599999999993e-05, 7.451399999999775e-05, 7.440300000000066e-05, 7.484799999999889e-05, 7.451400000000122e-05, 7.477800000000104e-05, 7.459699999999916e-05, 7.458399999999907e-05, 7.437500000000152e-05, 7.44439999999999e-05, 7.447300000000198e-05, 7.491600000000126e-05, 7.461099999999873e-05, 7.487499999999855e-05, 7.440300000000066e-05, 7.472199999999929e-05, 7.48050000000007e-05, 7.459700000000263e-05, 7.46249999999983e-05, 7.44309999999998e-05, 7.45829999999996e-05, 7.486099999999898e-05]</msg>
<status status="PASS" starttime="20201112 09:54:54.972" endtime="20201112 09:54:54.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.967" endtime="20201112 09:54:54.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.978" endtime="20201112 09:54:54.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:54.981" endtime="20201112 09:54:55.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.980" endtime="20201112 09:54:55.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.976" endtime="20201112 09:54:55.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.606" endtime="20201112 09:54:55.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.605" endtime="20201112 09:54:55.002"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.011" endtime="20201112 09:54:55.029"></status>
</kw>
<msg timestamp="20201112 09:54:55.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.010" endtime="20201112 09:54:55.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.031" endtime="20201112 09:54:55.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.033" endtime="20201112 09:54:55.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.007" endtime="20201112 09:54:55.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.005" endtime="20201112 09:54:55.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.044" endtime="20201112 09:54:55.330"></status>
</kw>
<msg timestamp="20201112 09:54:55.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022537472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022613764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:55.042" endtime="20201112 09:54:55.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022537472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022613764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:55.334" endtime="20201112 09:54:55.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.343" endtime="20201112 09:54:55.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.039" endtime="20201112 09:54:55.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.038" endtime="20201112 09:54:55.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:55.350" level="INFO">${RESULT} = [{'time': 0.022613764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.629200000000211e-05, 'source_diff': 7.629200000000211e-05}, {'time': 0.022691806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:55.346" endtime="20201112 09:54:55.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:55.364" level="INFO">${ACCURACY} = {'time': [0.022613764, 0.022691806, 0.02276975, 0.022847764, 0.02292575, 0.023003778, 0.023081778, 0.023159806, 0.023237792, 0.023315806, 0.023393806, 0.023471819, 0.023549806, 0.023627819, 0.02370581...</msg>
<status status="PASS" starttime="20201112 09:54:55.351" endtime="20201112 09:54:55.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.368" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 09:54:55.367" endtime="20201112 09:54:55.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.371" level="INFO">VALUE: [7.629200000000211e-05, 7.565299999999844e-05, 7.565299999999844e-05, 7.538899999999862e-05, 7.537500000000252e-05, 7.586099999999998e-05, 7.574999999999943e-05, 7.554200000000136e-05, 7.548599999999961e-05, 7.53890000000021e-05, 7.552799999999832e-05, 7.552700000000231e-05, 7.569500000000062e-05, 7.543000000000133e-05, 7.536099999999948e-05, 7.57769999999991e-05, 7.567999999999811e-05, 7.579199999999814e-05, 7.544399999999743e-05, 7.5763999999999e-05, 7.574999999999943e-05, 7.558299999999712e-05, 7.561099999999973e-05, 7.572299999999976e-05, 7.554200000000136e-05, 7.561099999999973e-05, 7.580600000000118e-05, 7.574999999999943e-05, 7.549999999999918e-05, 7.58890000000026e-05, 7.581999999999728e-05, 7.568000000000158e-05, 7.541699999999776e-05, 7.588799999999965e-05, 7.543099999999733e-05, 7.591599999999879e-05, 7.63189999999983e-05, 7.579099999999866e-05, 7.630499999999873e-05, 7.551399999999875e-05, 7.559700000000016e-05, 7.58050000000017e-05, 7.531900000000077e-05, 7.554200000000136e-05, 7.629199999999864e-05, 7.61249999999998e-05, 7.537499999999905e-05, 7.545800000000047e-05, 7.56249999999993e-05, 7.587499999999955e-05]</msg>
<status status="PASS" starttime="20201112 09:54:55.370" endtime="20201112 09:54:55.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.365" endtime="20201112 09:54:55.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.375" endtime="20201112 09:54:55.376"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:55.379" endtime="20201112 09:54:55.398"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.377" endtime="20201112 09:54:55.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.373" endtime="20201112 09:54:55.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.003" endtime="20201112 09:54:55.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.003" endtime="20201112 09:54:55.400"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.409" endtime="20201112 09:54:55.427"></status>
</kw>
<msg timestamp="20201112 09:54:55.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.407" endtime="20201112 09:54:55.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.428" endtime="20201112 09:54:55.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.431" endtime="20201112 09:54:55.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.404" endtime="20201112 09:54:55.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.402" endtime="20201112 09:54:55.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.441" endtime="20201112 09:54:55.727"></status>
</kw>
<msg timestamp="20201112 09:54:55.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022534819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022611861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:55.440" endtime="20201112 09:54:55.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022534819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022611861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:55.732" endtime="20201112 09:54:55.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.740" endtime="20201112 09:54:55.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.437" endtime="20201112 09:54:55.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.435" endtime="20201112 09:54:55.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:55.747" level="INFO">${RESULT} = [{'time': 0.022611861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.704199999999939e-05, 'source_diff': 7.704199999999939e-05}, {'time': 0.022690889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:55.744" endtime="20201112 09:54:55.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:55.761" level="INFO">${ACCURACY} = {'time': [0.022611861, 0.022690889, 0.022769833, 0.022848861, 0.022927861, 0.023006917, 0.023085861, 0.023164903, 0.023243875, 0.023322917, 0.023401889, 0.023480903, 0.023559903, 0.023638944, 0.023717...</msg>
<status status="PASS" starttime="20201112 09:54:55.748" endtime="20201112 09:54:55.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.766" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 09:54:55.765" endtime="20201112 09:54:55.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.768" level="INFO">VALUE: [7.704199999999939e-05, 7.65969999999977e-05, 7.658299999999812e-05, 7.64440000000019e-05, 7.666700000000248e-05, 7.722300000000126e-05, 7.687500000000055e-05, 7.651399999999975e-05, 7.651399999999975e-05, 7.648599999999714e-05, 7.648599999999714e-05, 7.670900000000119e-05, 7.683400000000132e-05, 7.719399999999918e-05, 7.661100000000073e-05, 7.652799999999932e-05, 7.688900000000012e-05, 7.66380000000004e-05, 7.66380000000004e-05, 7.673600000000086e-05, 7.644399999999843e-05, 7.684700000000141e-05, 7.655500000000245e-05, 7.65700000000015e-05, 7.686100000000098e-05, 7.659700000000116e-05, 7.673600000000086e-05, 7.679199999999914e-05, 7.64029999999992e-05, 7.638899999999962e-05, 7.654200000000236e-05, 7.6764e-05, 7.665300000000291e-05, 7.644500000000137e-05, 7.672200000000129e-05, 7.666599999999954e-05, 7.6764e-05, 7.648700000000008e-05, 7.686100000000098e-05, 7.656899999999855e-05, 7.64310000000018e-05, 7.637500000000005e-05, 7.68189999999988e-05, 7.650000000000018e-05, 7.655500000000245e-05, 7.673600000000086e-05, 7.651399999999975e-05, 7.640300000000266e-05, 7.672200000000129e-05, 7.651399999999975e-05]</msg>
<status status="PASS" starttime="20201112 09:54:55.767" endtime="20201112 09:54:55.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.762" endtime="20201112 09:54:55.770"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.772" endtime="20201112 09:54:55.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:55.776" endtime="20201112 09:54:55.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.774" endtime="20201112 09:54:55.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.771" endtime="20201112 09:54:55.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.400" endtime="20201112 09:54:55.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.400" endtime="20201112 09:54:55.797"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.806" endtime="20201112 09:54:55.824"></status>
</kw>
<msg timestamp="20201112 09:54:55.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.804" endtime="20201112 09:54:55.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.826" endtime="20201112 09:54:55.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.828" endtime="20201112 09:54:55.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.802" endtime="20201112 09:54:55.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.799" endtime="20201112 09:54:55.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.839" endtime="20201112 09:54:56.123"></status>
</kw>
<msg timestamp="20201112 09:54:56.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022721, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022798917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:55.837" endtime="20201112 09:54:56.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022721, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022798917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:56.128" endtime="20201112 09:54:56.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.137" endtime="20201112 09:54:56.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.835" endtime="20201112 09:54:56.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.833" endtime="20201112 09:54:56.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:56.144" level="INFO">${RESULT} = [{'time': 0.022798917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.79169999999968e-05, 'source_diff': 7.79169999999968e-05}, {'time': 0.022878958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:56.140" endtime="20201112 09:54:56.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:56.159" level="INFO">${ACCURACY} = {'time': [0.022798917, 0.022878958, 0.022958903, 0.023038931, 0.023118917, 0.023198931, 0.023278931, 0.023358958, 0.023438931, 0.023518958, 0.023598972, 0.023678972, 0.023758958, 0.023839, 0.023918972...</msg>
<status status="PASS" starttime="20201112 09:54:56.145" endtime="20201112 09:54:56.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.163" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 09:54:56.162" endtime="20201112 09:54:56.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.166" level="INFO">VALUE: [7.79169999999968e-05, 7.761100000000173e-05, 7.769499999999915e-05, 7.759799999999817e-05, 7.777800000000057e-05, 7.747299999999804e-05, 7.780599999999971e-05, 7.748599999999814e-05, 7.75839999999986e-05, 7.758299999999912e-05, 7.74030000000002e-05, 7.773599999999839e-05, 7.741600000000029e-05, 7.770799999999925e-05, 7.733299999999887e-05, 7.766700000000001e-05, 7.76250000000013e-05, 7.770799999999925e-05, 7.827800000000107e-05, 7.786100000000198e-05, 7.765300000000044e-05, 7.741699999999976e-05, 7.75830000000026e-05, 7.754199999999989e-05, 7.763900000000087e-05, 7.751400000000075e-05, 7.741700000000323e-05, 7.772200000000229e-05, 7.783400000000232e-05, 7.77909999999972e-05, 7.773699999999786e-05, 7.748600000000161e-05, 7.75969999999987e-05, 7.741599999999682e-05, 7.777699999999763e-05, 7.774999999999796e-05, 7.755499999999999e-05, 7.747199999999857e-05, 7.784699999999894e-05, 7.761099999999826e-05, 7.754199999999989e-05, 7.784699999999894e-05, 7.734699999999844e-05, 7.75969999999987e-05, 7.755599999999946e-05, 7.762499999999783e-05, 7.743099999999933e-05, 7.747299999999804e-05, 7.762499999999783e-05, 7.755499999999999e-05]</msg>
<status status="PASS" starttime="20201112 09:54:56.164" endtime="20201112 09:54:56.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.159" endtime="20201112 09:54:56.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.170" endtime="20201112 09:54:56.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:56.173" endtime="20201112 09:54:56.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.172" endtime="20201112 09:54:56.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.168" endtime="20201112 09:54:56.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.798" endtime="20201112 09:54:56.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.797" endtime="20201112 09:54:56.194"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.203" endtime="20201112 09:54:56.221"></status>
</kw>
<msg timestamp="20201112 09:54:56.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.202" endtime="20201112 09:54:56.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.222" endtime="20201112 09:54:56.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.225" endtime="20201112 09:54:56.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.199" endtime="20201112 09:54:56.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.197" endtime="20201112 09:54:56.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.235" endtime="20201112 09:54:56.522"></status>
</kw>
<msg timestamp="20201112 09:54:56.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022504139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022583458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:56.234" endtime="20201112 09:54:56.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022504139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022583458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:56.526" endtime="20201112 09:54:56.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.535" endtime="20201112 09:54:56.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.231" endtime="20201112 09:54:56.537"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.229" endtime="20201112 09:54:56.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:56.542" level="INFO">${RESULT} = [{'time': 0.022583458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.93190000000013e-05, 'source_diff': 7.93190000000013e-05}, {'time': 0.0226645, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7...</msg>
<status status="PASS" starttime="20201112 09:54:56.538" endtime="20201112 09:54:56.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:56.555" level="INFO">${ACCURACY} = {'time': [0.022583458, 0.0226645, 0.022745431, 0.0228265, 0.022907458, 0.022988486, 0.023069458, 0.0231505, 0.023231472, 0.023312514, 0.023393486, 0.0234745, 0.0235555, 0.023636514, 0.0237175, 0.02379...</msg>
<status status="PASS" starttime="20201112 09:54:56.543" endtime="20201112 09:54:56.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.560" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 09:54:56.559" endtime="20201112 09:54:56.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.563" level="INFO">VALUE: [7.93190000000013e-05, 7.918100000000108e-05, 7.837499999999858e-05, 7.888899999999865e-05, 7.876399999999853e-05, 7.856900000000056e-05, 7.844400000000043e-05, 7.865300000000144e-05, 7.890299999999822e-05, 7.87779999999981e-05, 7.88190000000008e-05, 7.874999999999896e-05, 7.880600000000071e-05, 7.857000000000003e-05, 7.854199999999742e-05, 7.888899999999865e-05, 7.86250000000023e-05, 7.883399999999985e-05, 7.86389999999984e-05, 7.852699999999838e-05, 7.86250000000023e-05, 7.86389999999984e-05, 7.838899999999815e-05, 7.843000000000086e-05, 7.86250000000023e-05, 7.862499999999883e-05, 7.8458e-05, 7.867999999999764e-05, 7.873599999999939e-05, 7.873599999999939e-05, 7.8458e-05, 7.836099999999901e-05, 7.874999999999896e-05, 7.865300000000144e-05, 7.843100000000033e-05, 7.837499999999858e-05, 7.882000000000028e-05, 7.872300000000276e-05, 7.882000000000028e-05, 7.882000000000028e-05, 7.854200000000089e-05, 7.87229999999993e-05, 7.841700000000076e-05, 7.888800000000265e-05, 7.86389999999984e-05, 7.868000000000111e-05, 7.88190000000008e-05, 7.851399999999828e-05, 7.85969999999997e-05, 7.887499999999908e-05]</msg>
<status status="PASS" starttime="20201112 09:54:56.561" endtime="20201112 09:54:56.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.556" endtime="20201112 09:54:56.564"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.567" endtime="20201112 09:54:56.568"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:56.570" endtime="20201112 09:54:56.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.569" endtime="20201112 09:54:56.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.565" endtime="20201112 09:54:56.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.195" endtime="20201112 09:54:56.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.195" endtime="20201112 09:54:56.591"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.600" endtime="20201112 09:54:56.618"></status>
</kw>
<msg timestamp="20201112 09:54:56.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.599" endtime="20201112 09:54:56.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.620" endtime="20201112 09:54:56.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.622" endtime="20201112 09:54:56.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.596" endtime="20201112 09:54:56.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.594" endtime="20201112 09:54:56.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.633" endtime="20201112 09:54:56.918"></status>
</kw>
<msg timestamp="20201112 09:54:56.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022554208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022633667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:56.631" endtime="20201112 09:54:56.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022554208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022633667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:56.923" endtime="20201112 09:54:56.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.931" endtime="20201112 09:54:56.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.628" endtime="20201112 09:54:56.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.627" endtime="20201112 09:54:56.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:56.938" level="INFO">${RESULT} = [{'time': 0.022633667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.945900000000047e-05, 'source_diff': 7.945900000000047e-05}, {'time': 0.022715708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:56.935" endtime="20201112 09:54:56.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:56.952" level="INFO">${ACCURACY} = {'time': [0.022633667, 0.022715708, 0.022797639, 0.022879681, 0.022961708, 0.023043681, 0.023125667, 0.023207694, 0.023289708, 0.023371722, 0.023453694, 0.023535778, 0.023617722, 0.023699722, 0.023781...</msg>
<status status="PASS" starttime="20201112 09:54:56.939" endtime="20201112 09:54:56.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.957" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 09:54:56.956" endtime="20201112 09:54:56.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.959" level="INFO">VALUE: [7.945900000000047e-05, 7.9458000000001e-05, 7.952800000000232e-05, 7.943099999999786e-05, 7.986100000000051e-05, 7.959800000000017e-05, 7.983399999999738e-05, 7.969400000000168e-05, 7.938899999999915e-05, 7.94030000000022e-05, 7.968000000000211e-05, 7.949999999999971e-05, 7.970800000000125e-05, 7.972200000000082e-05, 7.943000000000186e-05, 7.938899999999915e-05, 7.976399999999953e-05, 7.981899999999834e-05, 7.97779999999991e-05, 7.968100000000158e-05, 7.965299999999897e-05, 8.016700000000251e-05, 7.948600000000014e-05, 7.943099999999786e-05, 7.96389999999994e-05, 7.980499999999877e-05, 7.951399999999928e-05, 8.016699999999904e-05, 7.969499999999768e-05, 7.970800000000125e-05, 7.940199999999925e-05, 7.988900000000312e-05, 7.969400000000168e-05, 7.973600000000039e-05, 7.968000000000211e-05, 7.961100000000026e-05, 7.958299999999766e-05, 7.948600000000014e-05, 7.986100000000051e-05, 7.958300000000113e-05, 7.990299999999922e-05, 7.965299999999897e-05, 7.9458000000001e-05, 7.948600000000014e-05, 7.974999999999996e-05, 8.016699999999904e-05, 7.934700000000044e-05, 7.96519999999995e-05, 8.03329999999984e-05, 7.973600000000039e-05]</msg>
<status status="PASS" starttime="20201112 09:54:56.958" endtime="20201112 09:54:56.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.953" endtime="20201112 09:54:56.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.963" endtime="20201112 09:54:56.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:56.967" endtime="20201112 09:54:56.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.965" endtime="20201112 09:54:56.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.962" endtime="20201112 09:54:56.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.592" endtime="20201112 09:54:56.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.591" endtime="20201112 09:54:56.988"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.997" endtime="20201112 09:54:57.015"></status>
</kw>
<msg timestamp="20201112 09:54:57.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.995" endtime="20201112 09:54:57.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:57.016" endtime="20201112 09:54:57.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.019" endtime="20201112 09:54:57.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.993" endtime="20201112 09:54:57.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.990" endtime="20201112 09:54:57.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.029" endtime="20201112 09:54:57.316"></status>
</kw>
<msg timestamp="20201112 09:54:57.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022476125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:57.028" endtime="20201112 09:54:57.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022476125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:57.321" endtime="20201112 09:54:57.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.329" endtime="20201112 09:54:57.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.025" endtime="20201112 09:54:57.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.023" endtime="20201112 09:54:57.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:57.336" level="INFO">${RESULT} = [{'time': 0.022557125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.100000000000121e-05, 'source_diff': 8.100000000000121e-05}, {'time': 0.022640139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:57.333" endtime="20201112 09:54:57.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:57.350" level="INFO">${ACCURACY} = {'time': [0.022557125, 0.022640139, 0.022723083, 0.022806125, 0.022889097, 0.022972153, 0.023055111, 0.023138153, 0.023221167, 0.023304153, 0.023387139, 0.023470167, 0.023553167, 0.023636194, 0.023719...</msg>
<status status="PASS" starttime="20201112 09:54:57.337" endtime="20201112 09:54:57.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.355" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 09:54:57.354" endtime="20201112 09:54:57.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.357" level="INFO">VALUE: [8.100000000000121e-05, 8.037500000000058e-05, 8.055500000000299e-05, 8.07780000000001e-05, 8.081899999999934e-05, 8.066699999999954e-05, 8.059699999999823e-05, 8.061100000000126e-05, 8.048600000000114e-05, 8.065299999999997e-05, 8.087500000000108e-05, 8.075000000000096e-05, 8.076400000000053e-05, 8.045799999999853e-05, 8.043099999999886e-05, 8.098600000000164e-05, 8.048599999999767e-05, 8.050000000000071e-05, 8.037500000000058e-05, 8.087500000000108e-05, 8.054099999999995e-05, 8.075000000000096e-05, 8.12780000000006e-05, 8.072199999999835e-05, 8.051400000000028e-05, 8.049999999999724e-05, 8.069399999999921e-05, 8.047300000000104e-05, 8.070900000000172e-05, 8.052799999999985e-05, 8.061100000000126e-05, 8.073599999999792e-05, 8.075000000000096e-05, 8.048599999999767e-05, 8.07780000000001e-05, 8.087500000000108e-05, 8.07780000000001e-05, 8.080499999999977e-05, 8.066699999999954e-05, 8.047200000000157e-05, 8.058300000000213e-05, 8.08329999999989e-05, 8.077700000000063e-05, 8.075000000000096e-05, 8.050000000000071e-05, 8.086100000000151e-05, 8.127799999999713e-05, 8.062500000000083e-05, 8.080599999999924e-05, 8.047200000000157e-05]</msg>
<status status="PASS" starttime="20201112 09:54:57.356" endtime="20201112 09:54:57.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.351" endtime="20201112 09:54:57.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.361" endtime="20201112 09:54:57.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:57.365" endtime="20201112 09:54:57.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.363" endtime="20201112 09:54:57.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.360" endtime="20201112 09:54:57.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.989" endtime="20201112 09:54:57.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.988" endtime="20201112 09:54:57.386"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.395" endtime="20201112 09:54:57.413"></status>
</kw>
<msg timestamp="20201112 09:54:57.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:57.393" endtime="20201112 09:54:57.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:57.414" endtime="20201112 09:54:57.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.417" endtime="20201112 09:54:57.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.391" endtime="20201112 09:54:57.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.388" endtime="20201112 09:54:57.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.427" endtime="20201112 09:54:57.714"></status>
</kw>
<msg timestamp="20201112 09:54:57.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022554556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022636792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:57.426" endtime="20201112 09:54:57.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022554556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022636792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:57.719" endtime="20201112 09:54:57.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.727" endtime="20201112 09:54:57.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.423" endtime="20201112 09:54:57.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.421" endtime="20201112 09:54:57.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:57.734" level="INFO">${RESULT} = [{'time': 0.022636792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.223599999999942e-05, 'source_diff': 8.223599999999942e-05}, {'time': 0.022720806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:57.731" endtime="20201112 09:54:57.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:57.749" level="INFO">${ACCURACY} = {'time': [0.022636792, 0.022720806, 0.022804764, 0.022888778, 0.022972764, 0.023056792, 0.023140778, 0.023224819, 0.023308847, 0.023392819, 0.023476819, 0.023560833, 0.023644833, 0.023728833, 0.023812...</msg>
<status status="PASS" starttime="20201112 09:54:57.735" endtime="20201112 09:54:57.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.754" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 09:54:57.753" endtime="20201112 09:54:57.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.756" level="INFO">VALUE: [8.223599999999942e-05, 8.154200000000042e-05, 8.169500000000315e-05, 8.181999999999981e-05, 8.168100000000011e-05, 8.16109999999988e-05, 8.14170000000003e-05, 8.145799999999953e-05, 8.176400000000153e-05, 8.172199999999935e-05, 8.158299999999966e-05, 8.156900000000009e-05, 8.16390000000014e-05, 8.186100000000252e-05, 8.158299999999966e-05, 8.191699999999733e-05, 8.166600000000107e-05, 8.143099999999986e-05, 8.158299999999966e-05, 8.154200000000042e-05, 8.231900000000084e-05, 8.170900000000272e-05, 8.176400000000153e-05, 8.143099999999986e-05, 8.187500000000208e-05, 8.184800000000242e-05, 8.186099999999905e-05, 8.162499999999837e-05, 8.166700000000054e-05, 8.151400000000128e-05, 8.137500000000158e-05, 8.150000000000171e-05, 8.18329999999999e-05, 8.148599999999867e-05, 8.145799999999953e-05, 8.138900000000115e-05, 8.161100000000227e-05, 8.18049999999973e-05, 8.234699999999998e-05, 8.155599999999999e-05, 8.158300000000313e-05, 8.175000000000196e-05, 8.174999999999849e-05, 8.162499999999837e-05, 8.186099999999905e-05, 8.15979999999987e-05, 8.188900000000165e-05, 8.179200000000067e-05, 8.150000000000171e-05, 8.168100000000011e-05]</msg>
<status status="PASS" starttime="20201112 09:54:57.755" endtime="20201112 09:54:57.757"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.750" endtime="20201112 09:54:57.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.760" endtime="20201112 09:54:57.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:57.764" endtime="20201112 09:54:57.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.762" endtime="20201112 09:54:57.784"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.758" endtime="20201112 09:54:57.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.387" endtime="20201112 09:54:57.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.386" endtime="20201112 09:54:57.785"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.794" endtime="20201112 09:54:57.813"></status>
</kw>
<msg timestamp="20201112 09:54:57.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:57.792" endtime="20201112 09:54:57.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:57.814" endtime="20201112 09:54:57.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.817" endtime="20201112 09:54:57.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.790" endtime="20201112 09:54:57.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.788" endtime="20201112 09:54:57.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.828" endtime="20201112 09:54:58.114"></status>
</kw>
<msg timestamp="20201112 09:54:58.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022943403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023026403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:57.826" endtime="20201112 09:54:58.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022943403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023026403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:58.119" endtime="20201112 09:54:58.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.128" endtime="20201112 09:54:58.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.823" endtime="20201112 09:54:58.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.821" endtime="20201112 09:54:58.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:58.135" level="INFO">${RESULT} = [{'time': 0.023026403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.299999999999974e-05, 'source_diff': 8.299999999999974e-05}, {'time': 0.023111431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:58.132" endtime="20201112 09:54:58.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:58.149" level="INFO">${ACCURACY} = {'time': [0.023026403, 0.023111431, 0.023196389, 0.023281417, 0.023366403, 0.023451472, 0.023536417, 0.023621431, 0.023707431, 0.023792444, 0.023877431, 0.023962472, 0.024047458, 0.024132472, 0.024217...</msg>
<status status="PASS" starttime="20201112 09:54:58.136" endtime="20201112 09:54:58.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.154" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 09:54:58.153" endtime="20201112 09:54:58.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.157" level="INFO">VALUE: [8.299999999999974e-05, 8.248700000000261e-05, 8.243100000000086e-05, 8.249999999999924e-05, 8.244500000000043e-05, 8.265300000000197e-05, 8.24170000000013e-05, 8.27919999999982e-05, 8.329200000000217e-05, 8.237499999999912e-05, 8.276400000000253e-05, 8.245799999999706e-05, 8.28330000000009e-05, 8.287499999999962e-05, 8.234699999999998e-05, 8.29170000000018e-05, 8.265300000000197e-05, 8.273599999999992e-05, 8.280599999999777e-05, 8.284700000000048e-05, 8.250000000000271e-05, 8.288799999999971e-05, 8.280599999999777e-05, 8.238899999999869e-05, 8.27919999999982e-05, 8.249999999999924e-05, 8.280600000000124e-05, 8.286199999999952e-05, 8.287500000000309e-05, 8.273599999999992e-05, 8.241600000000182e-05, 8.286100000000005e-05, 8.245800000000053e-05, 8.238899999999869e-05, 8.277700000000263e-05, 8.280600000000124e-05, 8.27780000000021e-05, 8.248600000000314e-05, 8.274999999999949e-05, 8.238900000000215e-05, 8.290299999999876e-05, 8.283400000000038e-05, 8.258400000000013e-05, 8.27780000000021e-05, 8.24309999999974e-05, 8.274999999999949e-05, 8.276399999999906e-05, 8.241599999999835e-05, 8.331999999999784e-05, 8.26109999999998e-05]</msg>
<status status="PASS" starttime="20201112 09:54:58.155" endtime="20201112 09:54:58.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.150" endtime="20201112 09:54:58.158"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.160" endtime="20201112 09:54:58.162"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:58.164" endtime="20201112 09:54:58.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.162" endtime="20201112 09:54:58.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.159" endtime="20201112 09:54:58.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.786" endtime="20201112 09:54:58.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.785" endtime="20201112 09:54:58.185"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.194" endtime="20201112 09:54:58.213"></status>
</kw>
<msg timestamp="20201112 09:54:58.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.192" endtime="20201112 09:54:58.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.215" endtime="20201112 09:54:58.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.218" endtime="20201112 09:54:58.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.190" endtime="20201112 09:54:58.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.188" endtime="20201112 09:54:58.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.229" endtime="20201112 09:54:58.515"></status>
</kw>
<msg timestamp="20201112 09:54:58.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:58.228" endtime="20201112 09:54:58.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:58.519" endtime="20201112 09:54:58.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.527" endtime="20201112 09:54:58.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.225" endtime="20201112 09:54:58.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.223" endtime="20201112 09:54:58.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:58.534" level="INFO">${RESULT} = [{'time': 0.022781875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.359700000000123e-05, 'source_diff': 8.359700000000123e-05}, {'time': 0.022867889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:58.531" endtime="20201112 09:54:58.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:58.548" level="INFO">${ACCURACY} = {'time': [0.022781875, 0.022867889, 0.022953847, 0.023039875, 0.023125847, 0.023211875, 0.023297861, 0.023383903, 0.023469875, 0.023555903, 0.023641889, 0.023727917, 0.023813903, 0.0239, 0.023985931, ...</msg>
<status status="PASS" starttime="20201112 09:54:58.536" endtime="20201112 09:54:58.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.553" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 09:54:58.552" endtime="20201112 09:54:58.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.556" level="INFO">VALUE: [8.359700000000123e-05, 8.377799999999963e-05, 8.354099999999948e-05, 8.343100000000186e-05, 8.340300000000272e-05, 8.390299999999976e-05, 8.354199999999895e-05, 8.383400000000138e-05, 8.356900000000209e-05, 8.388900000000019e-05, 8.351399999999981e-05, 8.376400000000006e-05, 8.357000000000156e-05, 8.39720000000016e-05, 8.376400000000006e-05, 8.391599999999985e-05, 8.36529999999995e-05, 8.391699999999933e-05, 8.431899999999937e-05, 8.373600000000092e-05, 8.345899999999754e-05, 8.387500000000062e-05, 8.368100000000211e-05, 8.381899999999887e-05, 8.336100000000055e-05, 8.416699999999958e-05, 8.351399999999981e-05, 8.39309999999989e-05, 8.376400000000006e-05, 8.357000000000156e-05, 8.381999999999834e-05, 8.37780000000031e-05, 8.387500000000062e-05, 8.370900000000125e-05, 8.340299999999926e-05, 8.361099999999733e-05, 8.344500000000143e-05, 8.348600000000067e-05, 8.333299999999794e-05, 8.337500000000012e-05, 8.379099999999973e-05, 8.351399999999981e-05, 8.376400000000006e-05, 8.373600000000092e-05, 8.369399999999874e-05, 8.36529999999995e-05, 8.390299999999976e-05, 8.366700000000254e-05, 8.387500000000062e-05, 8.377799999999963e-05]</msg>
<status status="PASS" starttime="20201112 09:54:58.554" endtime="20201112 09:54:58.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.549" endtime="20201112 09:54:58.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.559" endtime="20201112 09:54:58.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:58.563" endtime="20201112 09:54:58.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.561" endtime="20201112 09:54:58.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.558" endtime="20201112 09:54:58.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.186" endtime="20201112 09:54:58.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.185" endtime="20201112 09:54:58.584"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.593" endtime="20201112 09:54:58.612"></status>
</kw>
<msg timestamp="20201112 09:54:58.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.592" endtime="20201112 09:54:58.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.613" endtime="20201112 09:54:58.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.616" endtime="20201112 09:54:58.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.589" endtime="20201112 09:54:58.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.587" endtime="20201112 09:54:58.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.626" endtime="20201112 09:54:58.913"></status>
</kw>
<msg timestamp="20201112 09:54:58.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023108056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023193028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:58.625" endtime="20201112 09:54:58.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023108056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023193028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:58.917" endtime="20201112 09:54:58.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.926" endtime="20201112 09:54:58.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.622" endtime="20201112 09:54:58.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.620" endtime="20201112 09:54:58.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:58.933" level="INFO">${RESULT} = [{'time': 0.023193028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.49720000000026e-05, 'source_diff': 8.49720000000026e-05}, {'time': 0.023280042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:58.929" endtime="20201112 09:54:58.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:58.947" level="INFO">${ACCURACY} = {'time': [0.023193028, 0.023280042, 0.023366986, 0.023454028, 0.023541, 0.023628069, 0.023715028, 0.023802042, 0.023889028, 0.023976069, 0.024063042, 0.024150069, 0.024237069, 0.024324083, 0.024411069...</msg>
<status status="PASS" starttime="20201112 09:54:58.934" endtime="20201112 09:54:58.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.951" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 09:54:58.950" endtime="20201112 09:54:58.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.954" level="INFO">VALUE: [8.49720000000026e-05, 8.46530000000005e-05, 8.438900000000069e-05, 8.490299999999729e-05, 8.480599999999977e-05, 8.481899999999987e-05, 8.46249999999979e-05, 8.437499999999765e-05, 8.474999999999802e-05, 8.473599999999845e-05, 8.430599999999927e-05, 8.447199999999863e-05, 8.465200000000103e-05, 8.4846999999999e-05, 8.470799999999931e-05, 8.457000000000256e-05, 8.445799999999906e-05, 8.490300000000076e-05, 8.445799999999906e-05, 8.487500000000162e-05, 8.458299999999919e-05, 8.49309999999999e-05, 8.473600000000192e-05, 8.483399999999891e-05, 8.46530000000005e-05, 8.452800000000038e-05, 8.440300000000026e-05, 8.444499999999897e-05, 8.452800000000038e-05, 8.440300000000026e-05, 8.480599999999977e-05, 8.486099999999858e-05, 8.454099999999701e-05, 8.469399999999974e-05, 8.465199999999756e-05, 8.444400000000296e-05, 8.46799999999967e-05, 8.444400000000296e-05, 8.46530000000005e-05, 8.477799999999716e-05, 8.44859999999982e-05, 8.459699999999876e-05, 8.436099999999808e-05, 8.488899999999772e-05, 8.483299999999944e-05, 8.480599999999977e-05, 8.449999999999777e-05, 8.466700000000008e-05, 8.531999999999984e-05, 8.458299999999919e-05]</msg>
<status status="PASS" starttime="20201112 09:54:58.953" endtime="20201112 09:54:58.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.948" endtime="20201112 09:54:58.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.958" endtime="20201112 09:54:58.959"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:58.961" endtime="20201112 09:54:58.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.960" endtime="20201112 09:54:58.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.956" endtime="20201112 09:54:58.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.585" endtime="20201112 09:54:58.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.584" endtime="20201112 09:54:58.982"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.992" endtime="20201112 09:54:59.010"></status>
</kw>
<msg timestamp="20201112 09:54:59.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.990" endtime="20201112 09:54:59.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:59.012" endtime="20201112 09:54:59.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.014" endtime="20201112 09:54:59.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.987" endtime="20201112 09:54:59.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.985" endtime="20201112 09:54:59.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.025" endtime="20201112 09:54:59.311"></status>
</kw>
<msg timestamp="20201112 09:54:59.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022911944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022997972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:59.023" endtime="20201112 09:54:59.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022911944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022997972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:59.315" endtime="20201112 09:54:59.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.324" endtime="20201112 09:54:59.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.020" endtime="20201112 09:54:59.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.019" endtime="20201112 09:54:59.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:59.331" level="INFO">${RESULT} = [{'time': 0.022997972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.602799999999841e-05, 'source_diff': 8.602799999999841e-05}, {'time': 0.023086014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:59.328" endtime="20201112 09:54:59.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:59.346" level="INFO">${ACCURACY} = {'time': [0.022997972, 0.023086014, 0.023173958, 0.023262028, 0.023349958, 0.023437986, 0.023525986, 0.023614, 0.023702, 0.023790014, 0.023878, 0.023966028, 0.024054014, 0.024142042, 0.024230056, 0.02...</msg>
<status status="PASS" starttime="20201112 09:54:59.332" endtime="20201112 09:54:59.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.351" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 09:54:59.350" endtime="20201112 09:54:59.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.353" level="INFO">VALUE: [8.602799999999841e-05, 8.559699999999976e-05, 8.534700000000298e-05, 8.588900000000219e-05, 8.576400000000206e-05, 8.54859999999992e-05, 8.540299999999779e-05, 8.587499999999915e-05, 8.5847e-05, 8.562500000000237e-05, 8.558300000000019e-05, 8.590300000000176e-05, 8.53469999999995e-05, 8.587499999999915e-05, 8.544499999999997e-05, 8.572299999999936e-05, 8.586099999999958e-05, 8.549999999999877e-05, 8.575000000000249e-05, 8.570800000000031e-05, 8.545899999999954e-05, 8.551400000000181e-05, 8.544400000000049e-05, 8.558300000000019e-05, 8.545800000000006e-05, 8.592999999999795e-05, 8.583300000000044e-05, 8.57920000000012e-05, 8.558399999999966e-05, 8.537499999999865e-05, 8.548600000000267e-05, 8.619500000000072e-05, 8.582000000000034e-05, 8.590300000000176e-05, 8.5847e-05, 8.590199999999881e-05, 8.541700000000083e-05, 8.576300000000259e-05, 8.548699999999868e-05, 8.555500000000105e-05, 8.554099999999801e-05, 8.566700000000108e-05, 8.587499999999915e-05, 8.575000000000249e-05, 8.581900000000087e-05, 8.557000000000009e-05, 8.583300000000044e-05, 8.569399999999727e-05, 8.555600000000052e-05, 8.537499999999865e-05]</msg>
<status status="PASS" starttime="20201112 09:54:59.352" endtime="20201112 09:54:59.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.347" endtime="20201112 09:54:59.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.366" endtime="20201112 09:54:59.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:59.369" endtime="20201112 09:54:59.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.368" endtime="20201112 09:54:59.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.364" endtime="20201112 09:54:59.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.983" endtime="20201112 09:54:59.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.983" endtime="20201112 09:54:59.391"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.400" endtime="20201112 09:54:59.418"></status>
</kw>
<msg timestamp="20201112 09:54:59.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:59.398" endtime="20201112 09:54:59.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:59.420" endtime="20201112 09:54:59.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.422" endtime="20201112 09:54:59.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.395" endtime="20201112 09:54:59.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.393" endtime="20201112 09:54:59.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.433" endtime="20201112 09:54:59.719"></status>
</kw>
<msg timestamp="20201112 09:54:59.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022616694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022703722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:59.431" endtime="20201112 09:54:59.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022616694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022703722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:59.724" endtime="20201112 09:54:59.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.732" endtime="20201112 09:54:59.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.428" endtime="20201112 09:54:59.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.426" endtime="20201112 09:54:59.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:59.739" level="INFO">${RESULT} = [{'time': 0.022703722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.702799999999941e-05, 'source_diff': 8.702799999999941e-05}, {'time': 0.022792764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:59.736" endtime="20201112 09:54:59.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:59.753" level="INFO">${ACCURACY} = {'time': [0.022703722, 0.022792764, 0.022881722, 0.022970722, 0.023059778, 0.02314875, 0.023237722, 0.023326778, 0.023415806, 0.023504778, 0.023593778, 0.023682806, 0.023771764, 0.023860806, 0.0239498...</msg>
<status status="PASS" starttime="20201112 09:54:59.740" endtime="20201112 09:54:59.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.758" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 09:54:59.757" endtime="20201112 09:54:59.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.760" level="INFO">VALUE: [8.702799999999941e-05, 8.632000000000084e-05, 8.6847000000001e-05, 8.658299999999772e-05, 8.649999999999977e-05, 8.647200000000063e-05, 8.666599999999913e-05, 8.66669999999986e-05, 8.672300000000036e-05, 8.649999999999977e-05, 8.637499999999965e-05, 8.675000000000002e-05, 8.640300000000226e-05, 8.691699999999886e-05, 8.656900000000162e-05, 8.66119999999998e-05, 8.636100000000008e-05, 8.672200000000088e-05, 8.668099999999818e-05, 8.663899999999947e-05, 8.644400000000149e-05, 8.642999999999845e-05, 8.733299999999847e-05, 8.692999999999895e-05, 8.637499999999965e-05, 8.718000000000267e-05, 8.655499999999858e-05, 8.718100000000215e-05, 8.63470000000005e-05, 8.66249999999999e-05, 8.686100000000058e-05, 8.670900000000079e-05, 8.669499999999775e-05, 8.679199999999873e-05, 8.643099999999793e-05, 8.656900000000162e-05, 8.68059999999983e-05, 8.68189999999984e-05, 8.644400000000149e-05, 8.655499999999858e-05, 8.637499999999965e-05, 8.676399999999959e-05, 8.676399999999959e-05, 8.656900000000162e-05, 8.687500000000015e-05, 8.688899999999972e-05, 8.640299999999879e-05, 8.687500000000015e-05, 8.673600000000045e-05, 8.676399999999959e-05]</msg>
<status status="PASS" starttime="20201112 09:54:59.759" endtime="20201112 09:54:59.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.754" endtime="20201112 09:54:59.762"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.764" endtime="20201112 09:54:59.765"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:59.768" endtime="20201112 09:54:59.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.766" endtime="20201112 09:54:59.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.762" endtime="20201112 09:54:59.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.391" endtime="20201112 09:54:59.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.391" endtime="20201112 09:54:59.789"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.798" endtime="20201112 09:54:59.816"></status>
</kw>
<msg timestamp="20201112 09:54:59.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:59.796" endtime="20201112 09:54:59.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:59.817" endtime="20201112 09:54:59.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.820" endtime="20201112 09:54:59.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.793" endtime="20201112 09:54:59.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.791" endtime="20201112 09:54:59.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.830" endtime="20201112 09:55:00.116"></status>
</kw>
<msg timestamp="20201112 09:55:00.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022695028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022782431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:59.829" endtime="20201112 09:55:00.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022695028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022782431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:00.121" endtime="20201112 09:55:00.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.129" endtime="20201112 09:55:00.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.826" endtime="20201112 09:55:00.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.824" endtime="20201112 09:55:00.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:00.136" level="INFO">${RESULT} = [{'time': 0.022782431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.740299999999979e-05, 'source_diff': 8.740299999999979e-05}, {'time': 0.022872431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:00.133" endtime="20201112 09:55:00.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:00.151" level="INFO">${ACCURACY} = {'time': [0.022782431, 0.022872431, 0.022962375, 0.023052389, 0.023142389, 0.023232403, 0.023322417, 0.023412417, 0.023502417, 0.023592431, 0.023682417, 0.0237725, 0.023862431, 0.023952458, 0.02404244...</msg>
<status status="PASS" starttime="20201112 09:55:00.137" endtime="20201112 09:55:00.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.156" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 09:55:00.154" endtime="20201112 09:55:00.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.159" level="INFO">VALUE: [8.740299999999979e-05, 8.781999999999887e-05, 8.759700000000176e-05, 8.734699999999804e-05, 8.788900000000072e-05, 8.768099999999918e-05, 8.77920000000032e-05, 8.790300000000029e-05, 8.741700000000283e-05, 8.768099999999918e-05, 8.779199999999973e-05, 8.772199999999841e-05, 8.745900000000154e-05, 8.745799999999859e-05, 8.763800000000099e-05, 8.769499999999875e-05, 8.784699999999854e-05, 8.741699999999936e-05, 8.781900000000287e-05, 8.741699999999936e-05, 8.756999999999862e-05, 8.761099999999786e-05, 8.769499999999875e-05, 8.745899999999807e-05, 8.74449999999985e-05, 8.740299999999979e-05, 8.765300000000004e-05, 8.773700000000093e-05, 8.779199999999973e-05, 8.794399999999952e-05, 8.74999999999973e-05, 8.770799999999884e-05, 8.76250000000009e-05, 8.786099999999811e-05, 8.762499999999743e-05, 8.754200000000295e-05, 8.754199999999948e-05, 8.754199999999948e-05, 8.737500000000065e-05, 8.758299999999872e-05, 8.78189999999994e-05, 8.769499999999875e-05, 8.754199999999948e-05, 8.745899999999807e-05, 8.752799999999991e-05, 8.786100000000158e-05, 8.765300000000004e-05, 8.790200000000081e-05, 8.776300000000112e-05, 8.74860000000012e-05]</msg>
<status status="PASS" starttime="20201112 09:55:00.157" endtime="20201112 09:55:00.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.152" endtime="20201112 09:55:00.160"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.163" endtime="20201112 09:55:00.164"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:00.166" endtime="20201112 09:55:00.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.165" endtime="20201112 09:55:00.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.161" endtime="20201112 09:55:00.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.790" endtime="20201112 09:55:00.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.789" endtime="20201112 09:55:00.187"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.196" endtime="20201112 09:55:00.215"></status>
</kw>
<msg timestamp="20201112 09:55:00.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.195" endtime="20201112 09:55:00.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.216" endtime="20201112 09:55:00.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.219" endtime="20201112 09:55:00.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.192" endtime="20201112 09:55:00.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.190" endtime="20201112 09:55:00.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.229" endtime="20201112 09:55:00.516"></status>
</kw>
<msg timestamp="20201112 09:55:00.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022726097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022814625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:00.228" endtime="20201112 09:55:00.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022726097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022814625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:00.520" endtime="20201112 09:55:00.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.529" endtime="20201112 09:55:00.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.225" endtime="20201112 09:55:00.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.223" endtime="20201112 09:55:00.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:00.536" level="INFO">${RESULT} = [{'time': 0.022814625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.852800000000091e-05, 'source_diff': 8.852800000000091e-05}, {'time': 0.022905625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:00.532" endtime="20201112 09:55:00.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:00.550" level="INFO">${ACCURACY} = {'time': [0.022814625, 0.022905625, 0.022996611, 0.023087611, 0.023178597, 0.023269639, 0.023360611, 0.023451639, 0.023542681, 0.023633653, 0.023724653, 0.023815667, 0.023906722, 0.023997667, 0.024088...</msg>
<status status="PASS" starttime="20201112 09:55:00.537" endtime="20201112 09:55:00.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.554" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 09:55:00.553" endtime="20201112 09:55:00.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.557" level="INFO">VALUE: [8.852800000000091e-05, 8.84999999999983e-05, 8.873599999999898e-05, 8.883299999999997e-05, 8.837499999999818e-05, 8.88060000000003e-05, 8.883299999999997e-05, 8.8945e-05, 8.862499999999843e-05, 8.884699999999954e-05, 8.847199999999916e-05, 8.874999999999855e-05, 8.852799999999744e-05, 8.870899999999932e-05, 8.895800000000009e-05, 8.843099999999993e-05, 8.883399999999944e-05, 8.848599999999873e-05, 8.856900000000015e-05, 8.870799999999984e-05, 8.872200000000288e-05, 8.875000000000202e-05, 8.854100000000101e-05, 8.856900000000015e-05, 8.854100000000101e-05, 8.837500000000165e-05, 8.838899999999775e-05, 8.841700000000036e-05, 8.859699999999929e-05, 8.870899999999932e-05, 8.872199999999941e-05, 8.86250000000019e-05, 8.836099999999861e-05, 8.893100000000043e-05, 8.855499999999711e-05, 8.854100000000101e-05, 8.88190000000004e-05, 8.877800000000116e-05, 8.869400000000027e-05, 8.859699999999929e-05, 8.859699999999929e-05, 8.86670000000006e-05, 8.834700000000251e-05, 8.840300000000079e-05, 8.851399999999787e-05, 8.848599999999873e-05, 8.850000000000177e-05, 8.870899999999932e-05, 8.8638999999998e-05, 8.841700000000036e-05]</msg>
<status status="PASS" starttime="20201112 09:55:00.556" endtime="20201112 09:55:00.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.551" endtime="20201112 09:55:00.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.561" endtime="20201112 09:55:00.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:00.564" endtime="20201112 09:55:00.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.563" endtime="20201112 09:55:00.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.559" endtime="20201112 09:55:00.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.188" endtime="20201112 09:55:00.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.188" endtime="20201112 09:55:00.585"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.595" endtime="20201112 09:55:00.613"></status>
</kw>
<msg timestamp="20201112 09:55:00.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.593" endtime="20201112 09:55:00.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.615" endtime="20201112 09:55:00.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.618" endtime="20201112 09:55:00.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.590" endtime="20201112 09:55:00.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.588" endtime="20201112 09:55:00.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.628" endtime="20201112 09:55:00.915"></status>
</kw>
<msg timestamp="20201112 09:55:00.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022803958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022894222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:00.626" endtime="20201112 09:55:00.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022803958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022894222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:00.919" endtime="20201112 09:55:00.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.927" endtime="20201112 09:55:00.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.624" endtime="20201112 09:55:00.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.622" endtime="20201112 09:55:00.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:00.935" level="INFO">${RESULT} = [{'time': 0.022894222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.026399999999962e-05, 'source_diff': 9.026399999999962e-05}, {'time': 0.022986222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:00.931" endtime="20201112 09:55:00.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:00.950" level="INFO">${ACCURACY} = {'time': [0.022894222, 0.022986222, 0.023078153, 0.023170181, 0.023262167, 0.023354208, 0.023447194, 0.023539208, 0.023631194, 0.023723222, 0.023815208, 0.023907236, 0.023999222, 0.02409125, 0.0241832...</msg>
<status status="PASS" starttime="20201112 09:55:00.936" endtime="20201112 09:55:00.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.954" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 09:55:00.953" endtime="20201112 09:55:00.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.957" level="INFO">VALUE: [9.026399999999962e-05, 8.976399999999912e-05, 8.959700000000029e-05, 8.954200000000148e-05, 8.970900000000032e-05, 8.970800000000084e-05, 9.033300000000147e-05, 8.96519999999991e-05, 8.943000000000145e-05, 8.948599999999973e-05, 8.963900000000247e-05, 8.992999999999848e-05, 8.947200000000016e-05, 8.973599999999998e-05, 8.988899999999925e-05, 8.965299999999857e-05, 8.966699999999814e-05, 8.98060000000013e-05, 8.940299999999832e-05, 8.977800000000216e-05, 8.959700000000029e-05, 8.952799999999844e-05, 8.962499999999943e-05, 8.962499999999943e-05, 8.94450000000005e-05, 8.958300000000072e-05, 8.973599999999998e-05, 8.987499999999968e-05, 8.973599999999998e-05, 8.948700000000268e-05, 9.0332999999998e-05, 8.990299999999882e-05, 8.976400000000259e-05, 8.982000000000087e-05, 8.951399999999887e-05, 8.958400000000019e-05, 8.966699999999814e-05, 8.957000000000062e-05, 8.970900000000032e-05, 8.969500000000075e-05, 8.984800000000001e-05, 8.959700000000029e-05, 8.972299999999989e-05, 8.938899999999875e-05, 8.98190000000014e-05, 8.974999999999955e-05, 9.034700000000104e-05, 8.954199999999801e-05, 8.98329999999975e-05, 8.979199999999826e-05]</msg>
<status status="PASS" starttime="20201112 09:55:00.955" endtime="20201112 09:55:00.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.951" endtime="20201112 09:55:00.958"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.961" endtime="20201112 09:55:00.962"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:00.964" endtime="20201112 09:55:00.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.963" endtime="20201112 09:55:00.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.959" endtime="20201112 09:55:00.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.586" endtime="20201112 09:55:00.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.586" endtime="20201112 09:55:00.985"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.994" endtime="20201112 09:55:01.014"></status>
</kw>
<msg timestamp="20201112 09:55:01.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.993" endtime="20201112 09:55:01.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:01.015" endtime="20201112 09:55:01.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.018" endtime="20201112 09:55:01.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.990" endtime="20201112 09:55:01.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.988" endtime="20201112 09:55:01.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.028" endtime="20201112 09:55:01.315"></status>
</kw>
<msg timestamp="20201112 09:55:01.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022650667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022741319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:01.027" endtime="20201112 09:55:01.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022650667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022741319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:01.319" endtime="20201112 09:55:01.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.328" endtime="20201112 09:55:01.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.024" endtime="20201112 09:55:01.330"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.022" endtime="20201112 09:55:01.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:01.335" level="INFO">${RESULT} = [{'time': 0.022741319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.06520000000001e-05, 'source_diff': 9.06520000000001e-05}, {'time': 0.022834347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:55:01.331" endtime="20201112 09:55:01.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:01.349" level="INFO">${ACCURACY} = {'time': [0.022741319, 0.022834347, 0.022927306, 0.023020319, 0.023113319, 0.023206333, 0.023299319, 0.023392347, 0.023485375, 0.023578361, 0.023671347, 0.023764431, 0.023857361, 0.023950403, 0.024043...</msg>
<status status="PASS" starttime="20201112 09:55:01.336" endtime="20201112 09:55:01.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.353" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 09:55:01.352" endtime="20201112 09:55:01.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.356" level="INFO">VALUE: [9.06520000000001e-05, 9.091599999999991e-05, 9.083400000000144e-05, 9.072200000000141e-05, 9.038800000000027e-05, 9.038899999999975e-05, 9.086099999999764e-05, 9.0639e-05, 9.0639e-05, 9.080499999999936e-05, 9.0639e-05, 9.097299999999767e-05, 9.076400000000012e-05, 9.047199999999769e-05, 9.057000000000162e-05, 9.088900000000025e-05, 9.045800000000159e-05, 9.086099999999764e-05, 9.066699999999914e-05, 9.066599999999966e-05, 9.036200000000008e-05, 9.08329999999985e-05, 9.066699999999914e-05, 9.080500000000283e-05, 9.034700000000104e-05, 9.041599999999941e-05, 9.112499999999746e-05, 9.044400000000202e-05, 9.058300000000172e-05, 9.080599999999883e-05, 9.087499999999721e-05, 9.068100000000218e-05, 9.04450000000015e-05, 9.040299999999932e-05, 9.045900000000107e-05, 9.058400000000119e-05, 9.070900000000132e-05, 9.058299999999825e-05, 9.095800000000209e-05, 9.061100000000086e-05, 9.134699999999857e-05, 9.038899999999975e-05, 9.047200000000116e-05, 9.072199999999794e-05, 9.061099999999739e-05, 9.045800000000159e-05, 9.030499999999886e-05, 9.065299999999957e-05, 9.058300000000172e-05, 9.091699999999939e-05]</msg>
<status status="PASS" starttime="20201112 09:55:01.355" endtime="20201112 09:55:01.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.350" endtime="20201112 09:55:01.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.360" endtime="20201112 09:55:01.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:01.363" endtime="20201112 09:55:01.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.362" endtime="20201112 09:55:01.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.358" endtime="20201112 09:55:01.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.986" endtime="20201112 09:55:01.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.986" endtime="20201112 09:55:01.384"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.393" endtime="20201112 09:55:01.411"></status>
</kw>
<msg timestamp="20201112 09:55:01.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:01.392" endtime="20201112 09:55:01.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:01.413" endtime="20201112 09:55:01.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.416" endtime="20201112 09:55:01.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.389" endtime="20201112 09:55:01.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.387" endtime="20201112 09:55:01.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.426" endtime="20201112 09:55:01.713"></status>
</kw>
<msg timestamp="20201112 09:55:01.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022627417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022719403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:01.425" endtime="20201112 09:55:01.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022627417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022719403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:01.718" endtime="20201112 09:55:01.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.726" endtime="20201112 09:55:01.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.422" endtime="20201112 09:55:01.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.420" endtime="20201112 09:55:01.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:01.733" level="INFO">${RESULT} = [{'time': 0.022719403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.198599999999876e-05, 'source_diff': 9.198599999999876e-05}, {'time': 0.022813444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:01.730" endtime="20201112 09:55:01.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:01.746" level="INFO">${ACCURACY} = {'time': [0.022719403, 0.022813444, 0.022907389, 0.023001417, 0.023095458, 0.023189431, 0.023283417, 0.023377458, 0.023471444, 0.023565472, 0.023659444, 0.023753486, 0.023847486, 0.023941486, 0.024035...</msg>
<status status="PASS" starttime="20201112 09:55:01.734" endtime="20201112 09:55:01.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.751" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 09:55:01.750" endtime="20201112 09:55:01.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.753" level="INFO">VALUE: [9.198599999999876e-05, 9.165199999999762e-05, 9.155599999999958e-05, 9.183399999999897e-05, 9.151400000000087e-05, 9.155599999999958e-05, 9.1639000000001e-05, 9.186099999999864e-05, 9.141600000000041e-05, 9.159699999999882e-05, 9.141600000000041e-05, 9.173600000000198e-05, 9.137500000000118e-05, 9.134700000000204e-05, 9.137499999999771e-05, 9.140300000000032e-05, 9.177799999999722e-05, 9.143099999999946e-05, 9.166700000000014e-05, 9.193099999999996e-05, 9.140300000000032e-05, 9.168099999999971e-05, 9.166700000000014e-05, 9.194400000000005e-05, 9.174999999999808e-05, 9.149999999999783e-05, 9.165300000000057e-05, 9.170799999999937e-05, 9.154100000000054e-05, 9.193000000000048e-05, 9.216700000000064e-05, 9.188900000000125e-05, 9.184700000000254e-05, 9.145799999999912e-05, 9.1639000000001e-05, 9.138900000000075e-05, 9.145799999999912e-05, 9.154200000000001e-05, 9.142999999999998e-05, 9.166600000000066e-05, 9.18199999999994e-05, 9.152800000000044e-05, 9.177800000000069e-05, 9.181899999999993e-05, 9.162499999999796e-05, 9.16659999999972e-05, 9.173599999999851e-05, 9.148599999999826e-05, 9.188900000000125e-05, 9.16939999999998e-05]</msg>
<status status="PASS" starttime="20201112 09:55:01.752" endtime="20201112 09:55:01.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.747" endtime="20201112 09:55:01.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.757" endtime="20201112 09:55:01.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:01.760" endtime="20201112 09:55:01.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.759" endtime="20201112 09:55:01.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.755" endtime="20201112 09:55:01.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.385" endtime="20201112 09:55:01.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.385" endtime="20201112 09:55:01.781"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.790" endtime="20201112 09:55:01.809"></status>
</kw>
<msg timestamp="20201112 09:55:01.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:01.789" endtime="20201112 09:55:01.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:01.810" endtime="20201112 09:55:01.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.813" endtime="20201112 09:55:01.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.786" endtime="20201112 09:55:01.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.784" endtime="20201112 09:55:01.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.823" endtime="20201112 09:55:02.126"></status>
</kw>
<msg timestamp="20201112 09:55:02.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022151931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022245028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:01.822" endtime="20201112 09:55:02.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022151931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022245028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:02.131" endtime="20201112 09:55:02.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.139" endtime="20201112 09:55:02.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.819" endtime="20201112 09:55:02.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.817" endtime="20201112 09:55:02.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:02.146" level="INFO">${RESULT} = [{'time': 0.022245028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309700000000032e-05, 'source_diff': 9.309700000000032e-05}, {'time': 0.022340069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:02.142" endtime="20201112 09:55:02.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:02.159" level="INFO">${ACCURACY} = {'time': [0.022245028, 0.022340069, 0.022436014, 0.022531069, 0.022626056, 0.022721042, 0.022816028, 0.022911056, 0.023006056, 0.023101125, 0.023196056, 0.023291097, 0.023386069, 0.023481097, 0.023576...</msg>
<status status="PASS" starttime="20201112 09:55:02.147" endtime="20201112 09:55:02.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.164" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 09:55:02.163" endtime="20201112 09:55:02.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.166" level="INFO">VALUE: [9.309700000000032e-05, 9.237500000000218e-05, 9.3333000000001e-05, 9.276299999999918e-05, 9.244500000000003e-05, 9.266700000000114e-05, 9.277799999999822e-05, 9.280599999999736e-05, 9.2639000000002e-05, 9.243100000000046e-05, 9.254200000000101e-05, 9.258300000000025e-05, 9.254099999999807e-05, 9.287499999999921e-05, 9.238900000000175e-05, 9.266700000000114e-05, 9.272199999999994e-05, 9.263899999999853e-05, 9.279200000000126e-05, 9.24719999999997e-05, 9.25000000000023e-05, 9.268100000000071e-05, 9.270800000000037e-05, 9.28200000000004e-05, 9.277799999999822e-05, 9.269500000000028e-05, 9.247299999999917e-05, 9.281900000000093e-05, 9.273699999999899e-05, 9.259699999999982e-05, 9.242999999999751e-05, 9.259699999999982e-05, 9.234699999999957e-05, 9.238900000000175e-05, 9.279199999999779e-05, 9.277799999999822e-05, 9.237500000000218e-05, 9.240300000000132e-05, 9.287499999999921e-05, 9.293000000000148e-05, 9.254200000000101e-05, 9.240300000000132e-05, 9.287499999999921e-05, 9.275000000000255e-05, 9.286099999999964e-05, 9.254100000000154e-05, 9.236199999999861e-05, 9.256900000000068e-05, 9.245800000000012e-05, 9.242999999999751e-05]</msg>
<status status="PASS" starttime="20201112 09:55:02.165" endtime="20201112 09:55:02.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.160" endtime="20201112 09:55:02.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.171" endtime="20201112 09:55:02.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:02.174" endtime="20201112 09:55:02.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.173" endtime="20201112 09:55:02.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.168" endtime="20201112 09:55:02.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.782" endtime="20201112 09:55:02.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.782" endtime="20201112 09:55:02.196"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.204" endtime="20201112 09:55:02.223"></status>
</kw>
<msg timestamp="20201112 09:55:02.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:02.203" endtime="20201112 09:55:02.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:02.224" endtime="20201112 09:55:02.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.227" endtime="20201112 09:55:02.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.200" endtime="20201112 09:55:02.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.198" endtime="20201112 09:55:02.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.237" endtime="20201112 09:55:02.522"></status>
</kw>
<msg timestamp="20201112 09:55:02.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022436681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022530458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:02.235" endtime="20201112 09:55:02.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022436681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022530458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:02.527" endtime="20201112 09:55:02.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.535" endtime="20201112 09:55:02.537"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.232" endtime="20201112 09:55:02.537"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.231" endtime="20201112 09:55:02.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:02.542" level="INFO">${RESULT} = [{'time': 0.022530458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.377699999999975e-05, 'source_diff': 9.377699999999975e-05}, {'time': 0.022626486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:02.539" endtime="20201112 09:55:02.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:02.557" level="INFO">${ACCURACY} = {'time': [0.022530458, 0.022626486, 0.022722431, 0.022818458, 0.022914528, 0.023010514, 0.023106472, 0.023202486, 0.023298486, 0.0233945, 0.0234905, 0.023586514, 0.0236825, 0.023778542, 0.023874514, 0...</msg>
<status status="PASS" starttime="20201112 09:55:02.543" endtime="20201112 09:55:02.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.562" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 09:55:02.561" endtime="20201112 09:55:02.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.564" level="INFO">VALUE: [9.377699999999975e-05, 9.341700000000189e-05, 9.343100000000146e-05, 9.381899999999846e-05, 9.358400000000072e-05, 9.359700000000082e-05, 9.344399999999808e-05, 9.337499999999971e-05, 9.358300000000125e-05, 9.380599999999836e-05, 9.337499999999971e-05, 9.386100000000064e-05, 9.379199999999879e-05, 9.373600000000051e-05, 9.387500000000021e-05, 9.372300000000042e-05, 9.357000000000115e-05, 9.331899999999796e-05, 9.372300000000042e-05, 9.373600000000051e-05, 9.342999999999851e-05, 9.336100000000014e-05, 9.372199999999747e-05, 9.349999999999983e-05, 9.355499999999864e-05, 9.366700000000214e-05, 9.363899999999953e-05, 9.375000000000008e-05, 9.438900000000028e-05, 9.349999999999983e-05, 9.338899999999928e-05, 9.38200000000014e-05, 9.366700000000214e-05, 9.425000000000058e-05, 9.357000000000115e-05, 9.370800000000137e-05, 9.431999999999843e-05, 9.336100000000014e-05, 9.355500000000211e-05, 9.372199999999747e-05, 9.366699999999867e-05, 9.341699999999842e-05, 9.369500000000128e-05, 9.375000000000008e-05, 9.35139999999994e-05, 9.381899999999846e-05, 9.352799999999897e-05, 9.393099999999849e-05, 9.416699999999917e-05, 9.381999999999793e-05]</msg>
<status status="PASS" starttime="20201112 09:55:02.563" endtime="20201112 09:55:02.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.558" endtime="20201112 09:55:02.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.568" endtime="20201112 09:55:02.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:02.572" endtime="20201112 09:55:02.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.570" endtime="20201112 09:55:02.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.566" endtime="20201112 09:55:02.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.197" endtime="20201112 09:55:02.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.196" endtime="20201112 09:55:02.593"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.602" endtime="20201112 09:55:02.621"></status>
</kw>
<msg timestamp="20201112 09:55:02.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:02.600" endtime="20201112 09:55:02.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:02.623" endtime="20201112 09:55:02.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.625" endtime="20201112 09:55:02.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.598" endtime="20201112 09:55:02.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.595" endtime="20201112 09:55:02.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.636" endtime="20201112 09:55:02.947"></status>
</kw>
<msg timestamp="20201112 09:55:02.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023026528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023121181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:02.634" endtime="20201112 09:55:02.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023026528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023121181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:02.952" endtime="20201112 09:55:02.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.960" endtime="20201112 09:55:02.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.632" endtime="20201112 09:55:02.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.630" endtime="20201112 09:55:02.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:02.967" level="INFO">${RESULT} = [{'time': 0.023121181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.46530000000001e-05, 'source_diff': 9.46530000000001e-05}, {'time': 0.023218194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:55:02.964" endtime="20201112 09:55:02.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:02.981" level="INFO">${ACCURACY} = {'time': [0.023121181, 0.023218194, 0.023315139, 0.023412167, 0.023509167, 0.023606181, 0.023703167, 0.023800194, 0.023897194, 0.023994208, 0.024091194, 0.024188236, 0.024285292, 0.024382292, 0.024479...</msg>
<status status="PASS" starttime="20201112 09:55:02.968" endtime="20201112 09:55:02.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.986" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 09:55:02.985" endtime="20201112 09:55:02.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.989" level="INFO">VALUE: [9.46530000000001e-05, 9.477700000000075e-05, 9.429199999999929e-05, 9.468100000000271e-05, 9.472300000000142e-05, 9.45140000000004e-05, 9.461100000000139e-05, 9.44720000000017e-05, 9.46660000000002e-05, 9.46660000000002e-05, 9.448600000000126e-05, 9.456899999999921e-05, 9.479199999999979e-05, 9.45140000000004e-05, 9.475000000000108e-05, 9.469399999999933e-05, 9.440299999999985e-05, 9.519499999999931e-05, 9.462500000000096e-05, 9.484799999999807e-05, 9.438900000000028e-05, 9.491699999999992e-05, 9.488899999999731e-05, 9.495799999999915e-05, 9.448600000000126e-05, 9.491600000000044e-05, 9.450000000000083e-05, 9.448600000000126e-05, 9.45140000000004e-05, 9.461099999999792e-05, 9.45140000000004e-05, 9.491699999999992e-05, 9.46530000000001e-05, 9.454200000000301e-05, 9.487500000000121e-05, 9.452799999999997e-05, 9.484700000000207e-05, 9.466699999999967e-05, 9.463900000000053e-05, 9.472199999999847e-05, 9.473700000000099e-05, 9.493000000000001e-05, 9.459799999999782e-05, 9.46660000000002e-05, 9.458299999999878e-05, 9.461100000000139e-05, 9.459700000000182e-05, 9.443099999999899e-05, 9.430499999999939e-05, 9.456999999999868e-05]</msg>
<status status="PASS" starttime="20201112 09:55:02.987" endtime="20201112 09:55:02.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.982" endtime="20201112 09:55:02.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.992" endtime="20201112 09:55:02.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:02.996" endtime="20201112 09:55:03.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.994" endtime="20201112 09:55:03.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.991" endtime="20201112 09:55:03.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.594" endtime="20201112 09:55:03.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.593" endtime="20201112 09:55:03.017"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.026" endtime="20201112 09:55:03.044"></status>
</kw>
<msg timestamp="20201112 09:55:03.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:03.024" endtime="20201112 09:55:03.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:03.046" endtime="20201112 09:55:03.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.048" endtime="20201112 09:55:03.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.022" endtime="20201112 09:55:03.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.019" endtime="20201112 09:55:03.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.059" endtime="20201112 09:55:03.344"></status>
</kw>
<msg timestamp="20201112 09:55:03.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022509792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022606042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:03.057" endtime="20201112 09:55:03.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022509792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022606042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:03.349" endtime="20201112 09:55:03.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.357" endtime="20201112 09:55:03.359"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.054" endtime="20201112 09:55:03.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.052" endtime="20201112 09:55:03.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:03.364" level="INFO">${RESULT} = [{'time': 0.022606042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.624999999999911e-05, 'source_diff': 9.624999999999911e-05}, {'time': 0.022704083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:03.361" endtime="20201112 09:55:03.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:03.378" level="INFO">${ACCURACY} = {'time': [0.022606042, 0.022704083, 0.022802014, 0.022900069, 0.022998042, 0.023096056, 0.023194056, 0.023292125, 0.023390083, 0.023488097, 0.023586083, 0.023684111, 0.023782125, 0.023880111, 0.023978...</msg>
<status status="PASS" starttime="20201112 09:55:03.366" endtime="20201112 09:55:03.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.383" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 09:55:03.382" endtime="20201112 09:55:03.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.386" level="INFO">VALUE: [9.624999999999911e-05, 9.544400000000008e-05, 9.565299999999763e-05, 9.572199999999947e-05, 9.537499999999824e-05, 9.590300000000135e-05, 9.563900000000153e-05, 9.594400000000058e-05, 9.55409999999976e-05, 9.53469999999991e-05, 9.554100000000107e-05, 9.559699999999935e-05, 9.559700000000282e-05, 9.56799999999973e-05, 9.541700000000042e-05, 9.572199999999947e-05, 9.538900000000128e-05, 9.575000000000208e-05, 9.569500000000328e-05, 9.549999999999836e-05, 9.579200000000079e-05, 9.54859999999988e-05, 9.543099999999999e-05, 9.566599999999773e-05, 9.561199999999839e-05, 9.588899999999831e-05, 9.579100000000132e-05, 9.540300000000085e-05, 9.569400000000033e-05, 9.568000000000076e-05, 9.541600000000094e-05, 9.538900000000128e-05, 9.548600000000226e-05, 9.590200000000187e-05, 9.569499999999981e-05, 9.576399999999818e-05, 9.612500000000246e-05, 9.55140000000014e-05, 9.555600000000011e-05, 9.572299999999895e-05, 9.5333999999999e-05, 9.562499999999849e-05, 9.56530000000011e-05, 9.545799999999965e-05, 9.549999999999836e-05, 9.56660000000012e-05, 9.544400000000008e-05, 9.57079999999999e-05, 9.588899999999831e-05, 9.549999999999836e-05]</msg>
<status status="PASS" starttime="20201112 09:55:03.384" endtime="20201112 09:55:03.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.379" endtime="20201112 09:55:03.387"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.390" endtime="20201112 09:55:03.391"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:03.393" endtime="20201112 09:55:03.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.392" endtime="20201112 09:55:03.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.388" endtime="20201112 09:55:03.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.018" endtime="20201112 09:55:03.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.017" endtime="20201112 09:55:03.414"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.423" endtime="20201112 09:55:03.442"></status>
</kw>
<msg timestamp="20201112 09:55:03.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:03.422" endtime="20201112 09:55:03.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:03.444" endtime="20201112 09:55:03.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.446" endtime="20201112 09:55:03.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.419" endtime="20201112 09:55:03.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.417" endtime="20201112 09:55:03.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.457" endtime="20201112 09:55:03.743"></status>
</kw>
<msg timestamp="20201112 09:55:03.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022627917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022724361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:03.455" endtime="20201112 09:55:03.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022627917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022724361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:03.747" endtime="20201112 09:55:03.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.756" endtime="20201112 09:55:03.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.453" endtime="20201112 09:55:03.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.451" endtime="20201112 09:55:03.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:03.763" level="INFO">${RESULT} = [{'time': 0.022724361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.644399999999761e-05, 'source_diff': 9.644399999999761e-05}, {'time': 0.022823389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:03.760" endtime="20201112 09:55:03.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:03.777" level="INFO">${ACCURACY} = {'time': [0.022724361, 0.022823389, 0.022922333, 0.023021361, 0.023120347, 0.023219389, 0.023318375, 0.023417389, 0.023517375, 0.023616403, 0.023716389, 0.023815431, 0.023914403, 0.024013431, 0.024112...</msg>
<status status="PASS" starttime="20201112 09:55:03.764" endtime="20201112 09:55:03.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.782" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 09:55:03.780" endtime="20201112 09:55:03.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.784" level="INFO">VALUE: [9.644399999999761e-05, 9.658300000000078e-05, 9.645800000000065e-05, 9.66530000000021e-05, 9.680499999999842e-05, 9.668100000000124e-05, 9.661099999999992e-05, 9.641700000000142e-05, 9.731899999999849e-05, 9.687499999999974e-05, 9.732000000000143e-05, 9.661200000000286e-05, 9.669500000000081e-05, 9.661199999999939e-05, 9.686199999999964e-05, 9.642999999999805e-05, 9.666599999999873e-05, 9.676399999999918e-05, 9.65409999999986e-05, 9.680500000000189e-05, 9.661099999999992e-05, 9.663900000000253e-05, 9.644400000000108e-05, 9.649999999999936e-05, 9.651399999999893e-05, 9.655600000000111e-05, 9.64859999999998e-05, 9.68340000000005e-05, 9.657000000000068e-05, 9.662499999999949e-05, 9.674999999999961e-05, 9.637499999999924e-05, 9.644500000000056e-05, 9.691599999999898e-05, 9.65140000000024e-05, 9.64859999999998e-05, 9.673600000000004e-05, 9.64859999999998e-05, 9.641599999999848e-05, 9.687499999999974e-05, 9.662499999999949e-05, 9.658300000000078e-05, 9.644499999999709e-05, 9.66799999999983e-05, 9.645799999999718e-05, 9.674999999999961e-05, 9.670899999999691e-05, 9.636199999999914e-05, 9.662499999999949e-05, 9.656899999999774e-05]</msg>
<status status="PASS" starttime="20201112 09:55:03.783" endtime="20201112 09:55:03.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.778" endtime="20201112 09:55:03.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.788" endtime="20201112 09:55:03.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:03.792" endtime="20201112 09:55:03.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.790" endtime="20201112 09:55:03.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.786" endtime="20201112 09:55:03.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.415" endtime="20201112 09:55:03.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.415" endtime="20201112 09:55:03.813"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.822" endtime="20201112 09:55:03.841"></status>
</kw>
<msg timestamp="20201112 09:55:03.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:03.820" endtime="20201112 09:55:03.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:03.842" endtime="20201112 09:55:03.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.845" endtime="20201112 09:55:03.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.817" endtime="20201112 09:55:03.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.815" endtime="20201112 09:55:03.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.855" endtime="20201112 09:55:04.142"></status>
</kw>
<msg timestamp="20201112 09:55:04.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022630042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022728167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:03.854" endtime="20201112 09:55:04.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022630042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022728167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:04.146" endtime="20201112 09:55:04.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.155" endtime="20201112 09:55:04.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.851" endtime="20201112 09:55:04.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.849" endtime="20201112 09:55:04.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:04.162" level="INFO">${RESULT} = [{'time': 0.022728167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.812500000000099e-05, 'source_diff': 9.812500000000099e-05}, {'time': 0.022828194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:04.158" endtime="20201112 09:55:04.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:04.177" level="INFO">${ACCURACY} = {'time': [0.022728167, 0.022828194, 0.022928167, 0.023028181, 0.023128181, 0.023228194, 0.02332825, 0.023428222, 0.023528194, 0.023628222, 0.023728222, 0.023828236, 0.023928306, 0.02402825, 0.02412823...</msg>
<status status="PASS" starttime="20201112 09:55:04.163" endtime="20201112 09:55:04.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.181" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 09:55:04.180" endtime="20201112 09:55:04.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.184" level="INFO">VALUE: [9.812500000000099e-05, 9.776300000000071e-05, 9.754199999999907e-05, 9.819500000000231e-05, 9.736200000000014e-05, 9.738800000000034e-05, 9.790299999999988e-05, 9.74999999999969e-05, 9.765200000000016e-05, 9.733300000000153e-05, 9.759700000000135e-05, 9.788900000000031e-05, 9.745900000000113e-05, 9.781900000000246e-05, 9.783300000000203e-05, 9.777799999999975e-05, 9.756999999999821e-05, 9.793100000000249e-05, 9.757000000000168e-05, 9.786200000000064e-05, 9.773600000000104e-05, 9.755600000000211e-05, 9.7334000000001e-05, 9.81799999999998e-05, 9.772300000000095e-05, 9.744400000000208e-05, 9.791699999999945e-05, 9.742999999999905e-05, 9.74860000000008e-05, 9.762500000000049e-05, 9.758300000000178e-05, 9.772200000000147e-05, 9.768099999999877e-05, 9.779199999999932e-05, 9.787499999999727e-05, 9.743100000000199e-05, 9.751399999999993e-05, 9.783399999999803e-05, 9.738899999999981e-05, 9.769399999999887e-05, 9.788800000000084e-05, 9.792999999999955e-05, 9.737500000000024e-05, 9.786100000000117e-05, 9.783300000000203e-05, 9.759700000000135e-05, 9.781899999999899e-05, 9.765299999999963e-05, 9.751399999999993e-05, 9.747199999999775e-05]</msg>
<status status="PASS" starttime="20201112 09:55:04.182" endtime="20201112 09:55:04.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.178" endtime="20201112 09:55:04.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.188" endtime="20201112 09:55:04.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:04.191" endtime="20201112 09:55:04.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.190" endtime="20201112 09:55:04.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.186" endtime="20201112 09:55:04.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.813" endtime="20201112 09:55:04.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.813" endtime="20201112 09:55:04.213"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.223" endtime="20201112 09:55:04.243"></status>
</kw>
<msg timestamp="20201112 09:55:04.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:04.221" endtime="20201112 09:55:04.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:04.244" endtime="20201112 09:55:04.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.247" endtime="20201112 09:55:04.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.218" endtime="20201112 09:55:04.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.216" endtime="20201112 09:55:04.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.257" endtime="20201112 09:55:04.545"></status>
</kw>
<msg timestamp="20201112 09:55:04.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024027556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024126333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:04.256" endtime="20201112 09:55:04.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024027556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024126333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:04.549" endtime="20201112 09:55:04.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.558" endtime="20201112 09:55:04.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.253" endtime="20201112 09:55:04.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.251" endtime="20201112 09:55:04.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:04.565" level="INFO">${RESULT} = [{'time': 0.024126333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.877700000000128e-05, 'source_diff': 9.877700000000128e-05}, {'time': 0.024227361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:04.561" endtime="20201112 09:55:04.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:04.578" level="INFO">${ACCURACY} = {'time': [0.024126333, 0.024227361, 0.024328292, 0.024429319, 0.024530333, 0.024631333, 0.024732347, 0.024833347, 0.024934347, 0.025035417, 0.025136403, 0.025237403, 0.025338389, 0.025439458, 0.025540...</msg>
<status status="PASS" starttime="20201112 09:55:04.566" endtime="20201112 09:55:04.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.583" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 09:55:04.582" endtime="20201112 09:55:04.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.586" level="INFO">VALUE: [9.877700000000128e-05, 9.870799999999944e-05, 9.872300000000195e-05, 9.886100000000217e-05, 9.869399999999987e-05, 9.884699999999913e-05, 9.851399999999746e-05, 9.881899999999999e-05, 9.86800000000003e-05, 9.836100000000167e-05, 9.840300000000038e-05, 9.859699999999888e-05, 9.838900000000081e-05, 9.856900000000321e-05, 9.850000000000136e-05, 9.83609999999982e-05, 9.883399999999903e-05, 9.862500000000149e-05, 9.854200000000007e-05, 9.89020000000014e-05, 9.865200000000116e-05, 9.880500000000042e-05, 9.89020000000014e-05, 9.84860000000018e-05, 9.837499999999777e-05, 9.873599999999857e-05, 9.84999999999979e-05, 9.888899999999784e-05, 9.883299999999956e-05, 9.868099999999977e-05, 9.865199999999769e-05, 9.856999999999921e-05, 9.863899999999759e-05, 9.886199999999817e-05, 9.876400000000118e-05, 9.856899999999974e-05, 9.868099999999977e-05, 9.83470000000021e-05, 9.881899999999999e-05, 9.875000000000161e-05, 9.867999999999683e-05, 9.875000000000161e-05, 9.845799999999919e-05, 9.861099999999845e-05, 9.837499999999777e-05, 9.869499999999934e-05, 9.88609999999987e-05, 9.845900000000213e-05, 9.843099999999952e-05, 9.83609999999982e-05]</msg>
<status status="PASS" starttime="20201112 09:55:04.584" endtime="20201112 09:55:04.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.579" endtime="20201112 09:55:04.594"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.596" endtime="20201112 09:55:04.597"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:04.600" endtime="20201112 09:55:04.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.598" endtime="20201112 09:55:04.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.594" endtime="20201112 09:55:04.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.214" endtime="20201112 09:55:04.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.213" endtime="20201112 09:55:04.621"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.630" endtime="20201112 09:55:04.648"></status>
</kw>
<msg timestamp="20201112 09:55:04.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:04.628" endtime="20201112 09:55:04.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:04.650" endtime="20201112 09:55:04.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.652" endtime="20201112 09:55:04.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.625" endtime="20201112 09:55:04.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.623" endtime="20201112 09:55:04.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.663" endtime="20201112 09:55:04.951"></status>
</kw>
<msg timestamp="20201112 09:55:04.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022606194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022706097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:04.662" endtime="20201112 09:55:04.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022606194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022706097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:04.955" endtime="20201112 09:55:04.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.963" endtime="20201112 09:55:04.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.659" endtime="20201112 09:55:04.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.657" endtime="20201112 09:55:04.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:04.971" level="INFO">${RESULT} = [{'time': 0.022706097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.990300000000188e-05, 'source_diff': 9.990300000000188e-05}, {'time': 0.022808139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:04.967" endtime="20201112 09:55:04.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:04.984" level="INFO">${ACCURACY} = {'time': [0.022706097, 0.022808139, 0.022910083, 0.023012125, 0.023114097, 0.023216125, 0.023318111, 0.023420208, 0.023522125, 0.023624167, 0.023726153, 0.023828167, 0.023930167, 0.024032208, 0.024134...</msg>
<status status="PASS" starttime="20201112 09:55:04.972" endtime="20201112 09:55:04.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.989" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 09:55:04.988" endtime="20201112 09:55:04.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.992" level="INFO">VALUE: [9.990300000000188e-05, 9.976400000000218e-05, 9.945800000000019e-05, 9.969400000000087e-05, 9.941600000000148e-05, 9.943100000000052e-05, 9.987499999999927e-05, 9.976400000000218e-05, 9.979200000000132e-05, 9.973600000000304e-05, 9.955600000000064e-05, 9.969500000000034e-05, 9.988899999999884e-05, 9.98609999999997e-05, 9.976400000000218e-05, 9.990199999999894e-05, 9.968100000000077e-05, 0.00010016600000000223, 9.940199999999844e-05, 9.955500000000117e-05, 9.96939999999974e-05, 9.961099999999945e-05, 9.974999999999914e-05, 9.954200000000107e-05, 9.979199999999785e-05, 9.94999999999989e-05, 9.98060000000009e-05, 9.937499999999877e-05, 9.943100000000052e-05, 9.938800000000234e-05, 9.959799999999935e-05, 9.952700000000203e-05, 9.942999999999758e-05, 9.98609999999997e-05, 9.975000000000261e-05, 9.974999999999914e-05, 9.940299999999791e-05, 9.991699999999798e-05, 9.977799999999828e-05, 0.00010024999999999964, 9.958399999999978e-05, 9.944500000000009e-05, 9.95280000000015e-05, 9.983400000000003e-05, 9.962499999999902e-05, 9.954099999999813e-05, 9.944500000000009e-05, 9.966699999999773e-05, 9.96800000000013e-05, 9.95410000000016e-05]</msg>
<status status="PASS" starttime="20201112 09:55:04.990" endtime="20201112 09:55:04.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.985" endtime="20201112 09:55:04.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.996" endtime="20201112 09:55:04.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:04.999" endtime="20201112 09:55:05.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.998" endtime="20201112 09:55:05.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.994" endtime="20201112 09:55:05.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.622" endtime="20201112 09:55:05.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.621" endtime="20201112 09:55:05.020"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.029" endtime="20201112 09:55:05.048"></status>
</kw>
<msg timestamp="20201112 09:55:05.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:05.028" endtime="20201112 09:55:05.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:05.050" endtime="20201112 09:55:05.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.052" endtime="20201112 09:55:05.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.025" endtime="20201112 09:55:05.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.023" endtime="20201112 09:55:05.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.063" endtime="20201112 09:55:05.350"></status>
</kw>
<msg timestamp="20201112 09:55:05.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022505361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022606139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:05.061" endtime="20201112 09:55:05.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022505361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022606139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:05.354" endtime="20201112 09:55:05.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.362" endtime="20201112 09:55:05.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.059" endtime="20201112 09:55:05.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.057" endtime="20201112 09:55:05.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:05.369" level="INFO">${RESULT} = [{'time': 0.022606139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010077799999999928, 'source_diff': 0.00010077799999999928}, {'time': 0.022709167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:05.366" endtime="20201112 09:55:05.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:05.383" level="INFO">${ACCURACY} = {'time': [0.022606139, 0.022709167, 0.022812111, 0.022915125, 0.023018111, 0.023121139, 0.023224139, 0.023327167, 0.023430167, 0.023533167, 0.023636167, 0.023739208, 0.023842181, 0.02394525, 0.0240481...</msg>
<status status="PASS" starttime="20201112 09:55:05.370" endtime="20201112 09:55:05.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.387" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 09:55:05.386" endtime="20201112 09:55:05.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.390" level="INFO">VALUE: [0.00010077799999999928, 0.00010075000000000014, 0.00010059700000000088, 0.00010075000000000014, 0.00010073600000000058, 0.00010051399999999946, 0.00010058300000000131, 0.00010038899999999934, 0.00010044499999999762, 0.00010090299999999941, 0.00010088899999999984, 0.00010052699999999956, 0.00010041700000000195, 0.00010076399999999971, 0.00010076299999999677, 0.0001004999999999999, 0.0001003610000000002, 0.00010063899999999959, 0.00010075000000000014, 0.00010082000000000146, 0.00010075000000000014, 0.00010058399999999731, 0.00010041700000000195, 0.00010041699999999848, 0.00010033300000000106, 0.00010076399999999971, 0.00010045900000000066, 0.0001008749999999968, 0.00010038799999999987, 0.00010047200000000076, 0.00010063800000000012, 0.0001004999999999999, 0.00010065299999999916, 0.00010084700000000113, 0.00010067999999999883, 0.00010044399999999815, 0.0001006800000000023, 0.00010072199999999754, 0.00010058299999999784, 0.00010082000000000146, 0.00010052799999999903, 0.0001008060000000019, 0.00010058400000000078, 0.00010047199999999729, 0.00010045900000000066, 0.00010042999999999858, 0.00010052699999999956, 0.00010067999999999883, 0.00010066599999999926, 0.00010063900000000306]</msg>
<status status="PASS" starttime="20201112 09:55:05.389" endtime="20201112 09:55:05.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.384" endtime="20201112 09:55:05.391"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.394" endtime="20201112 09:55:05.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:05.397" endtime="20201112 09:55:05.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.396" endtime="20201112 09:55:05.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.392" endtime="20201112 09:55:05.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.021" endtime="20201112 09:55:05.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.021" endtime="20201112 09:55:05.418"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.427" endtime="20201112 09:55:05.447"></status>
</kw>
<msg timestamp="20201112 09:55:05.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:05.426" endtime="20201112 09:55:05.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:05.449" endtime="20201112 09:55:05.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.452" endtime="20201112 09:55:05.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.423" endtime="20201112 09:55:05.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.421" endtime="20201112 09:55:05.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.462" endtime="20201112 09:55:05.749"></status>
</kw>
<msg timestamp="20201112 09:55:05.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022895222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022996806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:05.460" endtime="20201112 09:55:05.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022895222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022996806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:05.753" endtime="20201112 09:55:05.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.762" endtime="20201112 09:55:05.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.458" endtime="20201112 09:55:05.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.456" endtime="20201112 09:55:05.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:05.769" level="INFO">${RESULT} = [{'time': 0.022996806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010158400000000178, 'source_diff': 0.00010158400000000178}, {'time': 0.023100833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:05.765" endtime="20201112 09:55:05.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:05.783" level="INFO">${ACCURACY} = {'time': [0.022996806, 0.023100833, 0.023205819, 0.023309819, 0.023413806, 0.023517833, 0.023621833, 0.023725861, 0.023829847, 0.023933875, 0.024037847, 0.024141889, 0.024245861, 0.024349903, 0.024453...</msg>
<status status="PASS" starttime="20201112 09:55:05.770" endtime="20201112 09:55:05.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.788" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 09:55:05.787" endtime="20201112 09:55:05.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.790" level="INFO">VALUE: [0.00010158400000000178, 0.00010148600000000133, 0.00010233299999999959, 0.0001018749999999978, 0.00010134799999999763, 0.00010166599999999679, 0.00010138899999999687, 0.00010163900000000059, 0.00010175000000000115, 0.00010179199999999985, 0.00010166600000000026, 0.00010137500000000077, 0.00010162500000000102, 0.00010193099999999955, 0.00010170799999999897, 0.00010172199999999854, 0.00010172199999999854, 0.00010151400000000046, 0.00010188900000000084, 0.000101416, 0.00010141700000000295, 0.000101722000000002, 0.00010161100000000145, 0.00010163900000000059, 0.00010154100000000013, 0.00010190300000000041, 0.00010152800000000003, 0.00010184699999999866, 0.00010162500000000102, 0.00010148599999999786, 0.00010181899999999952, 0.00010147200000000176, 0.00010159699999999841, 0.00010166699999999973, 0.0001018480000000016, 0.00010137500000000077, 0.00010233400000000253, 0.00010180499999999995, 0.00010159700000000188, 0.00010137500000000077, 0.0001018610000000017, 0.0001017359999999981, 0.0001015000000000009, 0.00010148599999999786, 0.00010140299999999991, 0.00010141700000000295, 0.00010180599999999942, 0.00010176400000000071, 0.00010182000000000246, 0.00010158400000000178]</msg>
<status status="PASS" starttime="20201112 09:55:05.789" endtime="20201112 09:55:05.791"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.784" endtime="20201112 09:55:05.792"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.794" endtime="20201112 09:55:05.796"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:05.798" endtime="20201112 09:55:05.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.796" endtime="20201112 09:55:05.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.792" endtime="20201112 09:55:05.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.419" endtime="20201112 09:55:05.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.419" endtime="20201112 09:55:05.819"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.828" endtime="20201112 09:55:05.847"></status>
</kw>
<msg timestamp="20201112 09:55:05.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:05.826" endtime="20201112 09:55:05.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:05.848" endtime="20201112 09:55:05.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.851" endtime="20201112 09:55:05.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.824" endtime="20201112 09:55:05.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.821" endtime="20201112 09:55:05.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.861" endtime="20201112 09:55:06.147"></status>
</kw>
<msg timestamp="20201112 09:55:06.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022755292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022858597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:05.860" endtime="20201112 09:55:06.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022755292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022858597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:06.151" endtime="20201112 09:55:06.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.160" endtime="20201112 09:55:06.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.857" endtime="20201112 09:55:06.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.855" endtime="20201112 09:55:06.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:06.167" level="INFO">${RESULT} = [{'time': 0.022858597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010330500000000145, 'source_diff': 0.00010330500000000145}, {'time': 0.022963611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:06.163" endtime="20201112 09:55:06.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:06.180" level="INFO">${ACCURACY} = {'time': [0.022858597, 0.022963611, 0.023068569, 0.023173611, 0.023278597, 0.023383611, 0.023488597, 0.023593639, 0.023698611, 0.023803653, 0.023908625, 0.024013653, 0.024118653, 0.024223681, 0.024328...</msg>
<status status="PASS" starttime="20201112 09:55:06.168" endtime="20201112 09:55:06.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.185" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 09:55:06.184" endtime="20201112 09:55:06.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.188" level="INFO">VALUE: [0.00010330500000000145, 0.00010241699999999701, 0.00010272199999999954, 0.00010240300000000091, 0.00010231900000000002, 0.00010276399999999825, 0.00010276399999999825, 0.00010245799999999972, 0.00010265300000000116, 0.00010243100000000005, 0.00010284699999999966, 0.00010238899999999787, 0.00010270899999999944, 0.00010262500000000202, 0.00010245899999999919, 0.0001026810000000003, 0.00010243100000000005, 0.00010284699999999966, 0.00010234700000000263, 0.00010244400000000015, 0.000102513999999998, 0.00010283300000000009, 0.00010234700000000263, 0.00010245799999999972, 0.00010283300000000009, 0.00010259699999999941, 0.00010276400000000172, 0.00010284799999999913, 0.00010255600000000017, 0.00010243100000000005, 0.00010269499999999987, 0.00010291700000000098, 0.00010251400000000147, 0.00010274999999999868, 0.0001031940000000009, 0.00010248599999999886, 0.00010266600000000126, 0.00010281900000000052, 0.00010274999999999868, 0.00010294399999999718, 0.00010245799999999972, 0.00010277800000000128, 0.00010266700000000073, 0.00010243100000000005, 0.00010280600000000042, 0.0001023749999999983, 0.00010240300000000091, 0.0001028610000000027, 0.0001026810000000003, 0.00010270799999999997]</msg>
<status status="PASS" starttime="20201112 09:55:06.186" endtime="20201112 09:55:06.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.181" endtime="20201112 09:55:06.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.191" endtime="20201112 09:55:06.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:06.195" endtime="20201112 09:55:06.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.193" endtime="20201112 09:55:06.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.190" endtime="20201112 09:55:06.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.820" endtime="20201112 09:55:06.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.819" endtime="20201112 09:55:06.216"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.225" endtime="20201112 09:55:06.245"></status>
</kw>
<msg timestamp="20201112 09:55:06.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:06.224" endtime="20201112 09:55:06.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:06.246" endtime="20201112 09:55:06.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.249" endtime="20201112 09:55:06.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.221" endtime="20201112 09:55:06.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.219" endtime="20201112 09:55:06.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.260" endtime="20201112 09:55:06.546"></status>
</kw>
<msg timestamp="20201112 09:55:06.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022965153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023069292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:06.258" endtime="20201112 09:55:06.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022965153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023069292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:06.550" endtime="20201112 09:55:06.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.558" endtime="20201112 09:55:06.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.256" endtime="20201112 09:55:06.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.254" endtime="20201112 09:55:06.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:06.565" level="INFO">${RESULT} = [{'time': 0.023069292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010413900000000309, 'source_diff': 0.00010413900000000309}, {'time': 0.023175319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:06.562" endtime="20201112 09:55:06.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:06.579" level="INFO">${ACCURACY} = {'time': [0.023069292, 0.023175319, 0.023281264, 0.023387278, 0.023493264, 0.023599292, 0.023705278, 0.023811319, 0.023917319, 0.024023319, 0.024129319, 0.024235333, 0.024341333, 0.024447375, 0.024553...</msg>
<status status="PASS" starttime="20201112 09:55:06.566" endtime="20201112 09:55:06.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.583" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 09:55:06.582" endtime="20201112 09:55:06.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.586" level="INFO">VALUE: [0.00010413900000000309, 0.00010370800000000097, 0.00010357000000000074, 0.00010352800000000204, 0.00010352799999999857, 0.00010383400000000056, 0.0001036810000000013, 0.00010363799999999965, 0.00010359700000000041, 0.0001037360000000001, 0.00010362499999999955, 0.00010338900000000234, 0.00010415199999999972, 0.00010393100000000155, 0.00010381899999999805, 0.00010338900000000234, 0.00010354199999999814, 0.0001036810000000013, 0.00010338899999999887, 0.00010393100000000155, 0.00010374999999999968, 0.00010391700000000198, 0.00010341699999999801, 0.00010343100000000105, 0.000103513999999999, 0.00010386100000000023, 0.0001033879999999994, 0.00010417999999999886, 0.00010386100000000023, 0.0001036940000000014, 0.00010369399999999793, 0.00010355600000000117, 0.00010362499999999955, 0.00010362499999999955, 0.00010329199999999789, 0.00010379200000000185, 0.00010386100000000023, 0.00010349999999999943, 0.00010370900000000044, 0.00010354099999999866, 0.00010349999999999943, 0.00010352799999999857, 0.0001035559999999977, 0.000103513999999999, 0.00010340199999999897, 0.0001036940000000014, 0.0001035689999999978, 0.00010355600000000117, 0.00010384700000000066, 0.0001035420000000016]</msg>
<status status="PASS" starttime="20201112 09:55:06.584" endtime="20201112 09:55:06.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.580" endtime="20201112 09:55:06.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.590" endtime="20201112 09:55:06.591"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:06.593" endtime="20201112 09:55:06.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.592" endtime="20201112 09:55:06.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.588" endtime="20201112 09:55:06.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.217" endtime="20201112 09:55:06.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.217" endtime="20201112 09:55:06.614"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.623" endtime="20201112 09:55:06.642"></status>
</kw>
<msg timestamp="20201112 09:55:06.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:06.622" endtime="20201112 09:55:06.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:06.644" endtime="20201112 09:55:06.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.647" endtime="20201112 09:55:06.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.619" endtime="20201112 09:55:06.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.617" endtime="20201112 09:55:06.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.657" endtime="20201112 09:55:06.943"></status>
</kw>
<msg timestamp="20201112 09:55:06.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022829708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022934361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:06.656" endtime="20201112 09:55:06.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022829708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022934361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:06.947" endtime="20201112 09:55:06.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.956" endtime="20201112 09:55:06.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.653" endtime="20201112 09:55:06.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.651" endtime="20201112 09:55:06.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:06.963" level="INFO">${RESULT} = [{'time': 0.022934361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010465299999999969, 'source_diff': 0.00010465299999999969}, {'time': 0.023041347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:06.959" endtime="20201112 09:55:06.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:06.976" level="INFO">${ACCURACY} = {'time': [0.022934361, 0.023041347, 0.023148306, 0.023255333, 0.023362319, 0.023469347, 0.023576333, 0.023683375, 0.023790347, 0.023897375, 0.024004375, 0.024111403, 0.024218389, 0.024325444, 0.024432...</msg>
<status status="PASS" starttime="20201112 09:55:06.964" endtime="20201112 09:55:06.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.981" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 09:55:06.980" endtime="20201112 09:55:06.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.984" level="INFO">VALUE: [0.00010465299999999969, 0.00010463900000000012, 0.00010441699999999901, 0.00010458299999999837, 0.00010434700000000116, 0.00010458300000000184, 0.00010454100000000313, 0.0001045689999999988, 0.00010513900000000062, 0.00010476399999999678, 0.00010480600000000242, 0.00010491699999999951, 0.00010465299999999969, 0.0001045550000000027, 0.00010448599999999739, 0.00010462500000000055, 0.0001045559999999987, 0.00010473599999999764, 0.00010486199999999724, 0.00010477700000000034, 0.00010440199999999997, 0.00010431899999999855, 0.0001048750000000008, 0.00010476400000000025, 0.00010462500000000055, 0.00010461100000000098, 0.00010454199999999914, 0.00010473599999999764, 0.000104514, 0.00010459800000000088, 0.00010452799999999957, 0.00010441699999999901, 0.00010438899999999987, 0.00010441599999999954, 0.00010458300000000184, 0.00010484699999999819, 0.00010455499999999923, 0.00010490299999999994, 0.00010459700000000141, 0.00010442999999999911, 0.00010467999999999936, 0.00010459699999999794, 0.00010433299999999812, 0.00010468099999999883, 0.00010462500000000055, 0.00010458300000000184, 0.0001048339999999981, 0.00010462500000000055, 0.00010480499999999948, 0.00010466599999999979]</msg>
<status status="PASS" starttime="20201112 09:55:06.982" endtime="20201112 09:55:06.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.977" endtime="20201112 09:55:06.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.987" endtime="20201112 09:55:06.989"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:06.991" endtime="20201112 09:55:07.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.989" endtime="20201112 09:55:07.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.986" endtime="20201112 09:55:07.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.615" endtime="20201112 09:55:07.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.615" endtime="20201112 09:55:07.012"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.021" endtime="20201112 09:55:07.040"></status>
</kw>
<msg timestamp="20201112 09:55:07.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:07.019" endtime="20201112 09:55:07.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:07.042" endtime="20201112 09:55:07.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.044" endtime="20201112 09:55:07.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.017" endtime="20201112 09:55:07.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.015" endtime="20201112 09:55:07.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.055" endtime="20201112 09:55:07.342"></status>
</kw>
<msg timestamp="20201112 09:55:07.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022567472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022673583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:07.053" endtime="20201112 09:55:07.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022567472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022673583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:07.346" endtime="20201112 09:55:07.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.354" endtime="20201112 09:55:07.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.051" endtime="20201112 09:55:07.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.049" endtime="20201112 09:55:07.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:07.361" level="INFO">${RESULT} = [{'time': 0.022673583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010611099999999901, 'source_diff': 0.00010611099999999901}, {'time': 0.022781611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:07.358" endtime="20201112 09:55:07.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:07.376" level="INFO">${ACCURACY} = {'time': [0.022673583, 0.022781611, 0.022889569, 0.022997597, 0.023105569, 0.023213597, 0.023321597, 0.023429611, 0.023537667, 0.023645625, 0.023753639, 0.023861667, 0.023969639, 0.024077736, 0.024185...</msg>
<status status="PASS" starttime="20201112 09:55:07.362" endtime="20201112 09:55:07.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.381" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 09:55:07.380" endtime="20201112 09:55:07.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.383" level="INFO">VALUE: [0.00010611099999999901, 0.00010555500000000023, 0.00010541599999999707, 0.00010548600000000186, 0.00010580500000000048, 0.00010584699999999919, 0.00010561099999999851, 0.00010552800000000057, 0.00010591700000000051, 0.00010581900000000005, 0.00010554200000000014, 0.00010552800000000057, 0.00010562500000000155, 0.00010565299999999722, 0.0001053750000000013, 0.00010561200000000145, 0.00010562500000000155, 0.00010566599999999732, 0.00010591700000000051, 0.00010541700000000001, 0.00010547199999999882, 0.00010544399999999968, 0.00010586099999999876, 0.00010543000000000011, 0.00010584699999999919, 0.00010543000000000011, 0.0001057079999999995, 0.00010566600000000079, 0.00010552800000000057, 0.00010568099999999983, 0.00010541700000000001, 0.00010559700000000241, 0.00010549999999999796, 0.00010587499999999833, 0.0001053339999999986, 0.00010563900000000112, 0.00010547199999999882, 0.00010590299999999747, 0.00010536100000000173, 0.00010566700000000026, 0.00010548600000000186, 0.00010549999999999796, 0.00010534700000000216, 0.00010554200000000014, 0.00010569500000000287, 0.00010581999999999953, 0.00010537499999999783, 0.00010591699999999704, 0.00010538900000000087, 0.00010536099999999826]</msg>
<status status="PASS" starttime="20201112 09:55:07.382" endtime="20201112 09:55:07.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.377" endtime="20201112 09:55:07.385"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.387" endtime="20201112 09:55:07.388"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:07.391" endtime="20201112 09:55:07.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.389" endtime="20201112 09:55:07.411"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.385" endtime="20201112 09:55:07.411"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.013" endtime="20201112 09:55:07.411"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.012" endtime="20201112 09:55:07.412"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.421" endtime="20201112 09:55:07.440"></status>
</kw>
<msg timestamp="20201112 09:55:07.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:07.419" endtime="20201112 09:55:07.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:07.441" endtime="20201112 09:55:07.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.444" endtime="20201112 09:55:07.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.416" endtime="20201112 09:55:07.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.414" endtime="20201112 09:55:07.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.455" endtime="20201112 09:55:07.740"></status>
</kw>
<msg timestamp="20201112 09:55:07.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022458569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022564958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:07.453" endtime="20201112 09:55:07.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022458569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022564958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:07.745" endtime="20201112 09:55:07.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.753" endtime="20201112 09:55:07.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.450" endtime="20201112 09:55:07.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.448" endtime="20201112 09:55:07.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:07.760" level="INFO">${RESULT} = [{'time': 0.022564958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001063889999999984, 'source_diff': 0.0001063889999999984}, {'time': 0.022673972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:07.757" endtime="20201112 09:55:07.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:07.774" level="INFO">${ACCURACY} = {'time': [0.022564958, 0.022673972, 0.022782931, 0.022891944, 0.023000944, 0.023109972, 0.023218944, 0.023327972, 0.023437014, 0.023546, 0.023654986, 0.023764028, 0.023873, 0.023982028, 0.024091014, 0...</msg>
<status status="PASS" starttime="20201112 09:55:07.761" endtime="20201112 09:55:07.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.778" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 09:55:07.777" endtime="20201112 09:55:07.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.781" level="INFO">VALUE: [0.0001063889999999984, 0.00010669400000000093, 0.00010670899999999997, 0.00010684700000000019, 0.00010677699999999887, 0.00010677799999999835, 0.00010641599999999807, 0.00010669399999999746, 0.0001063889999999984, 0.00010668100000000083, 0.00010658300000000037, 0.00010665299999999822, 0.00010644399999999721, 0.00010651399999999853, 0.00010686099999999976, 0.00010665300000000169, 0.00010657000000000028, 0.00010661199999999899, 0.00010687499999999933, 0.00010647199999999982, 0.00010652800000000157, 0.00010642999999999764, 0.0001065690000000008, 0.00010644400000000068, 0.0001063889999999984, 0.00010654200000000114, 0.00010731899999999808, 0.0001065560000000007, 0.00010669399999999746, 0.00010670899999999997, 0.00010640300000000144, 0.0001066950000000004, 0.0001065560000000007, 0.0001068889999999989, 0.00010661199999999899, 0.00010655500000000123, 0.00010665200000000222, 0.0001063889999999984, 0.0001063750000000023, 0.00010691700000000151, 0.00010712499999999958, 0.00010677800000000182, 0.00010673599999999964, 0.00010654200000000114, 0.000106514000000002, 0.00010670899999999997, 0.00010649999999999896, 0.0001068340000000001, 0.0001067499999999992, 0.00010637499999999883]</msg>
<status status="PASS" starttime="20201112 09:55:07.780" endtime="20201112 09:55:07.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.775" endtime="20201112 09:55:07.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.785" endtime="20201112 09:55:07.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:07.788" endtime="20201112 09:55:07.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.787" endtime="20201112 09:55:07.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.783" endtime="20201112 09:55:07.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.412" endtime="20201112 09:55:07.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.412" endtime="20201112 09:55:07.809"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.818" endtime="20201112 09:55:07.838"></status>
</kw>
<msg timestamp="20201112 09:55:07.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:07.817" endtime="20201112 09:55:07.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:07.840" endtime="20201112 09:55:07.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.842" endtime="20201112 09:55:07.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.814" endtime="20201112 09:55:07.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.812" endtime="20201112 09:55:07.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.853" endtime="20201112 09:55:08.139"></status>
</kw>
<msg timestamp="20201112 09:55:08.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022568986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022677319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:07.851" endtime="20201112 09:55:08.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022568986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022677319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:08.143" endtime="20201112 09:55:08.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.152" endtime="20201112 09:55:08.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.848" endtime="20201112 09:55:08.154"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.847" endtime="20201112 09:55:08.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:08.159" level="INFO">${RESULT} = [{'time': 0.022677319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010833300000000212, 'source_diff': 0.00010833300000000212}, {'time': 0.022787333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:08.155" endtime="20201112 09:55:08.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:08.172" level="INFO">${ACCURACY} = {'time': [0.022677319, 0.022787333, 0.022897319, 0.023007306, 0.023117319, 0.023227319, 0.023337319, 0.023447375, 0.023557375, 0.023667361, 0.023777347, 0.023887375, 0.023997361, 0.024107403, 0.024217...</msg>
<status status="PASS" starttime="20201112 09:55:08.160" endtime="20201112 09:55:08.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.177" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 09:55:08.176" endtime="20201112 09:55:08.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.180" level="INFO">VALUE: [0.00010833300000000212, 0.0001077500000000002, 0.00010773600000000064, 0.00010776400000000325, 0.00010758300000000137, 0.0001077500000000002, 0.00010773599999999717, 0.00010784700000000119, 0.00010794399999999871, 0.00010779200000000239, 0.00010759700000000094, 0.00010745799999999778, 0.00010776399999999978, 0.00010741699999999854, 0.00010763899999999965, 0.00010772200000000107, 0.0001076950000000014, 0.00010768099999999836, 0.00010831999999999856, 0.0001073889999999994, 0.00010749999999999996, 0.00010751399999999953, 0.00010741600000000254, 0.00010770799999999803, 0.00010754200000000214, 0.0001077500000000002, 0.00010786100000000076, 0.00010736100000000026, 0.0001078889999999999, 0.0001077219999999976, 0.00010741700000000201, 0.00010736100000000026, 0.00010758399999999738, 0.00010782000000000153, 0.0001076950000000014, 0.0001077080000000015, 0.00010751399999999953, 0.00010765199999999975, 0.00010766599999999932, 0.00010769399999999846, 0.00010831900000000255, 0.00010742999999999864, 0.00010768100000000183, 0.00010779199999999892, 0.00010744399999999821, 0.00010773600000000064, 0.00010782000000000153, 0.00010743100000000158, 0.00010741700000000201, 0.00010740299999999897]</msg>
<status status="PASS" starttime="20201112 09:55:08.178" endtime="20201112 09:55:08.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.173" endtime="20201112 09:55:08.181"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.183" endtime="20201112 09:55:08.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:08.187" endtime="20201112 09:55:08.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.185" endtime="20201112 09:55:08.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.182" endtime="20201112 09:55:08.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.810" endtime="20201112 09:55:08.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.810" endtime="20201112 09:55:08.208"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.217" endtime="20201112 09:55:08.237"></status>
</kw>
<msg timestamp="20201112 09:55:08.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:08.215" endtime="20201112 09:55:08.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:08.239" endtime="20201112 09:55:08.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.241" endtime="20201112 09:55:08.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.213" endtime="20201112 09:55:08.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.211" endtime="20201112 09:55:08.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.257" endtime="20201112 09:55:08.544"></status>
</kw>
<msg timestamp="20201112 09:55:08.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022973431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023082736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:08.255" endtime="20201112 09:55:08.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022973431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023082736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:08.548" endtime="20201112 09:55:08.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.558" endtime="20201112 09:55:08.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.252" endtime="20201112 09:55:08.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.246" endtime="20201112 09:55:08.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:08.573" level="INFO">${RESULT} = [{'time': 0.023082736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010930500000000051, 'source_diff': 0.00010930500000000051}, {'time': 0.023193792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:08.565" endtime="20201112 09:55:08.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:08.603" level="INFO">${ACCURACY} = {'time': [0.023082736, 0.023193792, 0.023304681, 0.023415694, 0.023527681, 0.023638764, 0.023749708, 0.02386075, 0.023971736, 0.024082736, 0.024193722, 0.024304806, 0.024415736, 0.024526764, 0.0246377...</msg>
<status status="PASS" starttime="20201112 09:55:08.575" endtime="20201112 09:55:08.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.613" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 09:55:08.611" endtime="20201112 09:55:08.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.618" level="INFO">VALUE: [0.00010930500000000051, 0.00010862500000000108, 0.00010858400000000185, 0.00010848600000000139, 0.00010932000000000303, 0.00010845799999999878, 0.00010869400000000293, 0.00010868099999999936, 0.00010867999999999989, 0.00010880500000000001, 0.00010848600000000139, 0.00010848700000000086, 0.00010861100000000151, 0.0001083890000000004, 0.00010844499999999868, 0.00010881999999999906, 0.00010879199999999992, 0.00010845799999999878, 0.00010859799999999795, 0.00010869399999999946, 0.00010861200000000099, 0.00010879100000000044, 0.00010866600000000032, 0.00010899999999999799, 0.0001087080000000025, 0.00010879199999999992, 0.00010869399999999946, 0.00010836100000000126, 0.00010836099999999779, 0.00010847299999999782, 0.00010868099999999936, 0.00010880599999999949, 0.00010937499999999836, 0.00010837500000000083, 0.00010845800000000225, 0.00010859699999999847, 0.00010877700000000087, 0.00010851399999999706, 0.00010856899999999933, 0.0001088890000000009, 0.0001085280000000001, 0.00010851400000000053, 0.00010937500000000183, 0.00010876400000000078, 0.00010833300000000212, 0.00010873599999999817, 0.00010841700000000301, 0.00010875000000000121, 0.00010887500000000133, 0.00010875000000000121]</msg>
<status status="PASS" starttime="20201112 09:55:08.615" endtime="20201112 09:55:08.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.605" endtime="20201112 09:55:08.621"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.626" endtime="20201112 09:55:08.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:08.633" endtime="20201112 09:55:08.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.630" endtime="20201112 09:55:08.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.622" endtime="20201112 09:55:08.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.209" endtime="20201112 09:55:08.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.208" endtime="20201112 09:55:08.657"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.666" endtime="20201112 09:55:08.685"></status>
</kw>
<msg timestamp="20201112 09:55:08.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:08.665" endtime="20201112 09:55:08.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:08.687" endtime="20201112 09:55:08.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.689" endtime="20201112 09:55:08.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.662" endtime="20201112 09:55:08.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.660" endtime="20201112 09:55:08.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.701" endtime="20201112 09:55:08.988"></status>
</kw>
<msg timestamp="20201112 09:55:08.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025242639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025352944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:08.699" endtime="20201112 09:55:08.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025242639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025352944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:08.992" endtime="20201112 09:55:08.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.000" endtime="20201112 09:55:09.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.696" endtime="20201112 09:55:09.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.694" endtime="20201112 09:55:09.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:09.007" level="INFO">${RESULT} = [{'time': 0.025352944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011030499999999804, 'source_diff': 0.00011030499999999804}, {'time': 0.025464958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:09.004" endtime="20201112 09:55:09.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:09.021" level="INFO">${ACCURACY} = {'time': [0.025352944, 0.025464958, 0.025576917, 0.025688944, 0.025800931, 0.025912958, 0.026024944, 0.026136972, 0.026248958, 0.026360986, 0.026472986, 0.026585014, 0.026697014, 0.026809056, 0.026921...</msg>
<status status="PASS" starttime="20201112 09:55:09.008" endtime="20201112 09:55:09.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.026" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 09:55:09.025" endtime="20201112 09:55:09.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.028" level="INFO">VALUE: [0.00011030499999999804, 0.00010987499999999886, 0.00010973600000000264, 0.00010942999999999717, 0.00010974999999999874, 0.00010959699999999947, 0.00010961100000000251, 0.00010940300000000097, 0.00010944400000000021, 0.000109902999999998, 0.00010984699999999972, 0.00010987499999999886, 0.0001098890000000019, 0.00010948700000000186, 0.00010940300000000097, 0.00010948699999999839, 0.00010975000000000221, 0.00010979200000000092, 0.0001097089999999995, 0.00010951300000000205, 0.00010963900000000165, 0.00010979200000000092, 0.00010983300000000015, 0.00010944400000000021, 0.00010977799999999788, 0.00010934700000000269, 0.00010966699999999732, 0.00010944499999999968, 0.00011036099999999979, 0.00010972200000000307, 0.00010949999999999849, 0.00010948599999999892, 0.00010951400000000153, 0.00010980500000000101, 0.0001093479999999987, 0.00010995800000000028, 0.00010961099999999904, 0.00010993000000000114, 0.00010980499999999754, 0.00010943100000000011, 0.00010938899999999793, 0.00010986099999999929, 0.00010959699999999947, 0.00010974999999999874, 0.00010984699999999972, 0.00010977799999999788, 0.00010973599999999917, 0.00010975000000000221, 0.00010963899999999818, 0.00010945799999999978]</msg>
<status status="PASS" starttime="20201112 09:55:09.027" endtime="20201112 09:55:09.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.022" endtime="20201112 09:55:09.030"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.032" endtime="20201112 09:55:09.033"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:09.035" endtime="20201112 09:55:09.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.034" endtime="20201112 09:55:09.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.030" endtime="20201112 09:55:09.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.658" endtime="20201112 09:55:09.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.658" endtime="20201112 09:55:09.056"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.066" endtime="20201112 09:55:09.085"></status>
</kw>
<msg timestamp="20201112 09:55:09.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:09.064" endtime="20201112 09:55:09.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:09.087" endtime="20201112 09:55:09.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.089" endtime="20201112 09:55:09.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.061" endtime="20201112 09:55:09.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.059" endtime="20201112 09:55:09.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.099" endtime="20201112 09:55:09.384"></status>
</kw>
<msg timestamp="20201112 09:55:09.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022792194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022903153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:09.098" endtime="20201112 09:55:09.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022792194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022903153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:09.389" endtime="20201112 09:55:09.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.397" endtime="20201112 09:55:09.398"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.095" endtime="20201112 09:55:09.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.093" endtime="20201112 09:55:09.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:09.403" level="INFO">${RESULT} = [{'time': 0.022903153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011095899999999728, 'source_diff': 0.00011095899999999728}, {'time': 0.023016139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:09.400" endtime="20201112 09:55:09.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:09.417" level="INFO">${ACCURACY} = {'time': [0.022903153, 0.023016139, 0.023129097, 0.023242111, 0.023355111, 0.023468139, 0.023581125, 0.023694167, 0.023807139, 0.023920167, 0.024033153, 0.024146181, 0.024259167, 0.024372208, 0.024485...</msg>
<status status="PASS" starttime="20201112 09:55:09.404" endtime="20201112 09:55:09.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.421" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 09:55:09.420" endtime="20201112 09:55:09.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.424" level="INFO">VALUE: [0.00011095899999999728, 0.00011051400000000253, 0.00011055500000000176, 0.00011056899999999786, 0.00011040300000000197, 0.00011045799999999731, 0.00011033300000000065, 0.00011087499999999986, 0.00011068100000000136, 0.00011080599999999802, 0.00011037500000000283, 0.00011088899999999943, 0.00011055600000000124, 0.00011092999999999867, 0.00011043000000000164, 0.00011052799999999863, 0.00011058299999999743, 0.00011092999999999867, 0.00011129099999999947, 0.00011079199999999845, 0.0001104029999999985, 0.0001104029999999985, 0.0001105700000000008, 0.00011038899999999893, 0.00011080599999999802, 0.00011037499999999936, 0.00011117999999999892, 0.00011084700000000072, 0.00011034700000000022, 0.00011084700000000072, 0.00011056899999999786, 0.00011088899999999943, 0.00011083299999999768, 0.00011037500000000283, 0.00011087499999999986, 0.00011043100000000111, 0.00011087499999999986, 0.00011059700000000047, 0.0001104029999999985, 0.00011068100000000136, 0.00011063899999999918, 0.00011062499999999961, 0.00011048699999999939, 0.00011066600000000232, 0.0001105830000000009, 0.00011074999999999974, 0.00011063899999999918, 0.00011031900000000108, 0.00011066699999999832, 0.00011083300000000115]</msg>
<status status="PASS" starttime="20201112 09:55:09.422" endtime="20201112 09:55:09.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.418" endtime="20201112 09:55:09.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.427" endtime="20201112 09:55:09.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:09.431" endtime="20201112 09:55:09.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.429" endtime="20201112 09:55:09.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.426" endtime="20201112 09:55:09.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.057" endtime="20201112 09:55:09.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.057" endtime="20201112 09:55:09.452"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.460" endtime="20201112 09:55:09.480"></status>
</kw>
<msg timestamp="20201112 09:55:09.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:09.459" endtime="20201112 09:55:09.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:09.482" endtime="20201112 09:55:09.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.484" endtime="20201112 09:55:09.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.456" endtime="20201112 09:55:09.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.454" endtime="20201112 09:55:09.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.494" endtime="20201112 09:55:09.780"></status>
</kw>
<msg timestamp="20201112 09:55:09.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022181847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02229375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:09.493" endtime="20201112 09:55:09.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022181847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02229375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:09.784" endtime="20201112 09:55:09.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.792" endtime="20201112 09:55:09.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.490" endtime="20201112 09:55:09.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.489" endtime="20201112 09:55:09.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:09.799" level="INFO">${RESULT} = [{'time': 0.02229375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000111903, 'source_diff': 0.000111903}, {'time': 0.022407792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001113480000000...</msg>
<status status="PASS" starttime="20201112 09:55:09.795" endtime="20201112 09:55:09.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:09.812" level="INFO">${ACCURACY} = {'time': [0.02229375, 0.022407792, 0.02252175, 0.022635764, 0.022749819, 0.022863778, 0.022977764, 0.023091806, 0.023205792, 0.023319819, 0.023433806, 0.023547833, 0.023661819, 0.023775847, 0.02388983...</msg>
<status status="PASS" starttime="20201112 09:55:09.800" endtime="20201112 09:55:09.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.816" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 09:55:09.815" endtime="20201112 09:55:09.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.819" level="INFO">VALUE: [0.000111903, 0.0001113480000000007, 0.00011173600000000117, 0.000111903, 0.00011195800000000228, 0.00011162500000000061, 0.00011141700000000254, 0.00011158399999999791, 0.00011138899999999993, 0.000111596999999998, 0.00011168100000000236, 0.0001115830000000019, 0.0001117770000000004, 0.00011158299999999843, 0.00011156899999999886, 0.00011137500000000036, 0.00011166699999999932, 0.00011138899999999993, 0.00011147199999999788, 0.00011156999999999834, 0.00011144500000000168, 0.00011172300000000107, 0.00011150000000000049, 0.00011161200000000052, 0.00011152799999999963, 0.00011144400000000221, 0.00011168100000000236, 0.00011188900000000043, 0.00011138899999999993, 0.00011194499999999871, 0.00011162500000000061, 0.00011170799999999856, 0.0001117359999999977, 0.00011183399999999816, 0.00011145799999999831, 0.00011180600000000249, 0.00011152799999999963, 0.00011165200000000028, 0.00011181999999999859, 0.00011176300000000083, 0.00011233299999999918, 0.00011194399999999924, 0.00011147200000000135, 0.00011145799999999831, 0.00011151400000000006, 0.00011151400000000006, 0.00011159700000000147, 0.00011155599999999877, 0.00011169499999999846, 0.00011166699999999932]</msg>
<status status="PASS" starttime="20201112 09:55:09.817" endtime="20201112 09:55:09.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.813" endtime="20201112 09:55:09.825"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.828" endtime="20201112 09:55:09.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:09.831" endtime="20201112 09:55:09.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.830" endtime="20201112 09:55:09.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.826" endtime="20201112 09:55:09.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.453" endtime="20201112 09:55:09.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.452" endtime="20201112 09:55:09.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.041" endtime="20201112 09:55:09.852"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:09.857" endtime="20201112 09:55:09.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.856" endtime="20201112 09:55:09.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.854" endtime="20201112 09:55:09.878"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 09:54:29.968" endtime="20201112 09:55:09.878" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:53:48.792" endtime="20201112 09:55:09.882"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.941" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:55:09.949" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:55:11.109" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:55:09.940" endtime="20201112 09:55:11.110"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.112" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:55:11.111" endtime="20201112 09:55:11.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.938" endtime="20201112 09:55:11.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:11.115" endtime="20201112 09:55:11.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.114" endtime="20201112 09:55:11.301"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.315" endtime="20201112 09:55:11.331"></status>
</kw>
<msg timestamp="20201112 09:55:11.331" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:11.313" endtime="20201112 09:55:11.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.334" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:11.333" endtime="20201112 09:55:11.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.337" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:55:11.335" endtime="20201112 09:55:11.338"></status>
</kw>
<status status="FAIL" starttime="20201112 09:55:11.310" endtime="20201112 09:55:11.338"></status>
</kw>
<status status="FAIL" starttime="20201112 09:55:11.308" endtime="20201112 09:55:11.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.307" endtime="20201112 09:55:11.339"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:55:11.344" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:55:11.344" endtime="20201112 09:55:11.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.340" endtime="20201112 09:55:11.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.306" endtime="20201112 09:55:11.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.305" endtime="20201112 09:55:11.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.346" endtime="20201112 09:55:11.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.304" endtime="20201112 09:55:11.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.350" endtime="20201112 09:55:11.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.302" endtime="20201112 09:55:11.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.936" endtime="20201112 09:55:11.352"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:11.359" endtime="20201112 09:55:11.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.357" endtime="20201112 09:55:11.379"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.392" endtime="20201112 09:55:11.409"></status>
</kw>
<msg timestamp="20201112 09:55:11.409" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:11.391" endtime="20201112 09:55:11.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.412" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:11.410" endtime="20201112 09:55:11.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.415" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:55:11.413" endtime="20201112 09:55:11.415"></status>
</kw>
<status status="FAIL" starttime="20201112 09:55:11.388" endtime="20201112 09:55:11.416"></status>
</kw>
<status status="FAIL" starttime="20201112 09:55:11.385" endtime="20201112 09:55:11.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.384" endtime="20201112 09:55:11.417"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:55:11.421" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:55:11.420" endtime="20201112 09:55:11.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.418" endtime="20201112 09:55:11.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.383" endtime="20201112 09:55:11.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.383" endtime="20201112 09:55:11.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.422" endtime="20201112 09:55:11.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.381" endtime="20201112 09:55:11.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.379" endtime="20201112 09:55:11.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.356" endtime="20201112 09:55:11.425"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:55:11.429" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.439" endtime="20201112 09:55:13.550"></status>
</kw>
<msg timestamp="20201112 09:55:13.552" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 105864443, 'wakeups': [105874448, 105884449, 105894449, 105904449, 105...</msg>
<status status="PASS" starttime="20201112 09:55:11.437" endtime="20201112 09:55:13.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.558" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 105864443, 'wakeups': [105874448, 105884449, 105894449, 105904449, 105...</msg>
<status status="PASS" starttime="20201112 09:55:13.554" endtime="20201112 09:55:13.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.561" endtime="20201112 09:55:13.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.435" endtime="20201112 09:55:13.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.431" endtime="20201112 09:55:13.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:13.573" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 1, 'wakeups': [105874448, 105884449, 105894449, 105904449, 105914449, 105924449, 105934449, 105944449, 105954449, 105964449, 105974449, 105984449, 105994449, 1...</msg>
<status status="PASS" starttime="20201112 09:55:13.569" endtime="20201112 09:55:13.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.582" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:13.580" endtime="20201112 09:55:13.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.586" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:13.584" endtime="20201112 09:55:13.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.575" endtime="20201112 09:55:13.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.594" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:55:13.593" endtime="20201112 09:55:13.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.596" level="INFO">VALUE: 105864443</msg>
<status status="PASS" starttime="20201112 09:55:13.595" endtime="20201112 09:55:13.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.590" endtime="20201112 09:55:13.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.601" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:13.600" endtime="20201112 09:55:13.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.603" level="INFO">VALUE: [105874448, 105884449, 105894449, 105904449, 105914449, 105924449, 105934449, 105944449, 105954449, 105964449, 105974449, 105984449, 105994449, 106004449, 106014449, 106024449, 106034449, 106044449, 106054449, 106064449, 106074449, 106084449, 106094449, 106104449, 106114449, 106124449, 106134449, 106144449, 106154449, 106164449, 106174449, 106184449, 106194449, 106204449, 106214449, 106224449, 106234449, 106244449, 106254449, 106264449, 106274449, 106284449, 106294449, 106304449, 106314449, 106324449, 106334449, 106344449, 106354449, 106364449, 106374449, 106384449, 106394449, 106404449, 106414449, 106424449, 106434449, 106444449, 106454449, 106464449, 106474449, 106484449, 106494449, 106504449, 106514449, 106524449, 106534449, 106544449, 106554449, 106564449, 106574449, 106584449, 106594449, 106604449, 106614449, 106624449, 106634449, 106644449, 106654449, 106664449, 106674449, 106684449, 106694449, 106704449, 106714449, 106724449, 106734449, 106744449, 106754449, 106764449, 106774449, 106784449, 106794449, 106804449, 106814449, 106824449, 106834449, 106844449, 106854449, 106864449]</msg>
<status status="PASS" starttime="20201112 09:55:13.602" endtime="20201112 09:55:13.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.598" endtime="20201112 09:55:13.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.611" endtime="20201112 09:55:13.907"></status>
</kw>
<msg timestamp="20201112 09:55:13.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070530931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080537431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:13.609" endtime="20201112 09:55:13.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070530931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080537431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:13.911" endtime="20201112 09:55:13.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.919" endtime="20201112 09:55:13.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.607" endtime="20201112 09:55:13.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.605" endtime="20201112 09:55:13.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:13.946" level="INFO">${RESULT} = {'time': [0.070530931, 0.080537431, 0.090539139, 0.100539708, 0.110540611, 0.120541181, 0.130542139, 0.140542653, 0.150543556, 0.160544139, 0.170545028, 0.180545583, 0.1905465, 0.200547069, 0.21054795...</msg>
<status status="PASS" starttime="20201112 09:55:13.922" endtime="20201112 09:55:13.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.951" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:55:13.950" endtime="20201112 09:55:13.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.954" level="INFO">VALUE: 0.070530931</msg>
<status status="PASS" starttime="20201112 09:55:13.953" endtime="20201112 09:55:13.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.947" endtime="20201112 09:55:13.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.959" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:13.958" endtime="20201112 09:55:13.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.961" level="INFO">VALUE: [0.080537431, 0.090539139, 0.100539708, 0.110540611, 0.120541181, 0.130542139, 0.140542653, 0.150543556, 0.160544139, 0.170545028, 0.180545583, 0.1905465, 0.200547069, 0.210547958, 0.220548528, 0.230549444, 0.24055, 0.250550903, 0.260551472, 0.270552375, 0.280552944, 0.290553861, 0.300554417, 0.310555319, 0.320555889, 0.330556792, 0.340557375, 0.350558278, 0.360558833, 0.370559736, 0.380560306, 0.390561236, 0.400561778, 0.410562681, 0.42056325, 0.430564139, 0.440564708, 0.450565583, 0.460566153, 0.470567056, 0.480567611, 0.4905685, 0.500569069, 0.510569958, 0.520570528, 0.530571431, 0.540572, 0.550572889, 0.560573444, 0.570574347, 0.580574944, 0.590575847, 0.600576403, 0.610577264, 0.620577833, 0.630578722, 0.640579306, 0.650580181, 0.66058075, 0.670581653, 0.680582208, 0.690583097, 0.700583681, 0.710584569, 0.720585125, 0.730586042, 0.740586597, 0.750587486, 0.760588069, 0.770589, 0.780589528, 0.790590458, 0.800590972, 0.810591875, 0.820592458, 0.830593347, 0.840593903, 0.850594792, 0.860595375, 0.87059625, 0.880596819, 0.890597722, 0.900598306, 0.910599181, 0.92059975, 0.930600639, 0.940601222, 0.950602139, 0.960602708, 0.970603569, 0.980604153, 0.990605028, 1.000605597, 1.010606486, 1.020607069, 1.030607958, 1.040608514, 1.050609444, 1.060609986, 1.070610875] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:13.960" endtime="20201112 09:55:13.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.955" endtime="20201112 09:55:13.962"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.965" endtime="20201112 09:55:13.966"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:13.968" endtime="20201112 09:55:13.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.967" endtime="20201112 09:55:13.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.963" endtime="20201112 09:55:13.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.430" endtime="20201112 09:55:13.989"></status>
</kw>
<msg timestamp="20201112 09:55:13.989" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.998" endtime="20201112 09:55:16.109"></status>
</kw>
<msg timestamp="20201112 09:55:16.111" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 108423172, 'wakeups': [108433178, 108443178, 108453178, 108463178, 108...</msg>
<status status="PASS" starttime="20201112 09:55:13.996" endtime="20201112 09:55:16.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.117" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 108423172, 'wakeups': [108433178, 108443178, 108453178, 108463178, 108...</msg>
<status status="PASS" starttime="20201112 09:55:16.113" endtime="20201112 09:55:16.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.119" endtime="20201112 09:55:16.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.994" endtime="20201112 09:55:16.124"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.992" endtime="20201112 09:55:16.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:16.131" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 1, 'wakeups': [108433178, 108443178, 108453178, 108463178, 108473178, 108483178, 108493178, 108503178, 108513178, 108523178, 108533178, 108543178, 108553178, 1...</msg>
<status status="PASS" starttime="20201112 09:55:16.127" endtime="20201112 09:55:16.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.142" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:16.138" endtime="20201112 09:55:16.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.147" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:16.145" endtime="20201112 09:55:16.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.133" endtime="20201112 09:55:16.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.158" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:55:16.156" endtime="20201112 09:55:16.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.163" level="INFO">VALUE: 108423172</msg>
<status status="PASS" starttime="20201112 09:55:16.161" endtime="20201112 09:55:16.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.150" endtime="20201112 09:55:16.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.174" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:16.171" endtime="20201112 09:55:16.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.179" level="INFO">VALUE: [108433178, 108443178, 108453178, 108463178, 108473178, 108483178, 108493178, 108503178, 108513178, 108523178, 108533178, 108543178, 108553178, 108563178, 108573178, 108583178, 108593178, 108603178, 108613178, 108623178, 108633178, 108643178, 108653178, 108663178, 108673178, 108683178, 108693178, 108703178, 108713178, 108723178, 108733178, 108743178, 108753178, 108763178, 108773178, 108783178, 108793178, 108803178, 108813178, 108823178, 108833178, 108843178, 108853178, 108863178, 108873178, 108883178, 108893178, 108903178, 108913178, 108923178, 108933178, 108943178, 108953178, 108963178, 108973178, 108983178, 108993178, 109003178, 109013178, 109023178, 109033178, 109043178, 109053178, 109063178, 109073178, 109083178, 109093178, 109103178, 109113178, 109123178, 109133178, 109143178, 109153178, 109163178, 109173178, 109183178, 109193178, 109203178, 109213178, 109223178, 109233178, 109243178, 109253178, 109263178, 109273178, 109283178, 109293178, 109303178, 109313178, 109323178, 109333178, 109343178, 109353178, 109363178, 109373178, 109383178, 109393178, 109403178, 109413178, 109423178]</msg>
<status status="PASS" starttime="20201112 09:55:16.176" endtime="20201112 09:55:16.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.166" endtime="20201112 09:55:16.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.195" endtime="20201112 09:55:16.495"></status>
</kw>
<msg timestamp="20201112 09:55:16.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019535333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029542542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:16.191" endtime="20201112 09:55:16.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019535333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029542542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:16.499" endtime="20201112 09:55:16.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.507" endtime="20201112 09:55:16.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.186" endtime="20201112 09:55:16.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.182" endtime="20201112 09:55:16.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:16.534" level="INFO">${RESULT} = {'time': [0.019535333, 0.029542542, 0.039543222, 0.049543778, 0.059544736, 0.06954525, 0.079546139, 0.089546708, 0.099547625, 0.109548194, 0.119549083, 0.129549667, 0.139550556, 0.149551125, 0.1595520...</msg>
<status status="PASS" starttime="20201112 09:55:16.510" endtime="20201112 09:55:16.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.539" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:55:16.538" endtime="20201112 09:55:16.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.541" level="INFO">VALUE: 0.019535333</msg>
<status status="PASS" starttime="20201112 09:55:16.540" endtime="20201112 09:55:16.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.535" endtime="20201112 09:55:16.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.547" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:16.546" endtime="20201112 09:55:16.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.549" level="INFO">VALUE: [0.029542542, 0.039543222, 0.049543778, 0.059544736, 0.06954525, 0.079546139, 0.089546708, 0.099547625, 0.109548194, 0.119549083, 0.129549667, 0.139550556, 0.149551125, 0.159552028, 0.169552597, 0.179553486, 0.189554056, 0.199554958, 0.209555542, 0.219556458, 0.229557014, 0.239557903, 0.249558472, 0.259559403, 0.269559944, 0.279560903, 0.289561417, 0.299562306, 0.309562903, 0.319563792, 0.329564361, 0.339565264, 0.349565833, 0.359566722, 0.369567292, 0.379568194, 0.389568778, 0.399569681, 0.40957025, 0.419571153, 0.429571722, 0.439572625, 0.449573194, 0.459574097, 0.469574694, 0.479575556, 0.489576125, 0.499577028, 0.509577597, 0.5195785, 0.529579069, 0.539579958, 0.549580542, 0.559581431, 0.569581986, 0.579582875, 0.589583458, 0.599584375, 0.609584986, 0.619585792, 0.629586375, 0.63958725, 0.649587889, 0.659588722, 0.669589278, 0.679590167, 0.689590778, 0.699591625, 0.709592208, 0.719593083, 0.729593653, 0.739594597, 0.749595111, 0.759596056, 0.769596583, 0.779597472, 0.789598056, 0.799598917, 0.809599486, 0.819600389, 0.829600958, 0.839601833, 0.849602403, 0.859603306, 0.869603889, 0.87960475, 0.889605319, 0.899606208, 0.909606778, 0.919607667, 0.929608236, 0.939609139, 0.949609694, 0.959610597, 0.969611181, 0.979612097, 0.989612625, 0.999613528, 1.009614167, 1.019614972] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:16.548" endtime="20201112 09:55:16.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.543" endtime="20201112 09:55:16.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.553" endtime="20201112 09:55:16.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:16.556" endtime="20201112 09:55:16.576"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.555" endtime="20201112 09:55:16.576"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.551" endtime="20201112 09:55:16.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.990" endtime="20201112 09:55:16.577"></status>
</kw>
<msg timestamp="20201112 09:55:16.577" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.586" endtime="20201112 09:55:18.698"></status>
</kw>
<msg timestamp="20201112 09:55:18.699" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 111011152, 'wakeups': [111021157, 111031158, 111041158, 111051158, 111...</msg>
<status status="PASS" starttime="20201112 09:55:16.584" endtime="20201112 09:55:18.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.705" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 111011152, 'wakeups': [111021157, 111031158, 111041158, 111051158, 111...</msg>
<status status="PASS" starttime="20201112 09:55:18.701" endtime="20201112 09:55:18.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.708" endtime="20201112 09:55:18.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.581" endtime="20201112 09:55:18.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.579" endtime="20201112 09:55:18.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:18.719" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 1, 'wakeups': [111021157, 111031158, 111041158, 111051158, 111061158, 111071158, 111081158, 111091158, 111101158, 111111158, 111121158, 111131158, 111141158, 1...</msg>
<status status="PASS" starttime="20201112 09:55:18.715" endtime="20201112 09:55:18.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.728" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:18.726" endtime="20201112 09:55:18.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.733" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:18.731" endtime="20201112 09:55:18.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.721" endtime="20201112 09:55:18.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.744" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:55:18.742" endtime="20201112 09:55:18.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.749" level="INFO">VALUE: 111011152</msg>
<status status="PASS" starttime="20201112 09:55:18.746" endtime="20201112 09:55:18.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.736" endtime="20201112 09:55:18.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.759" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:18.757" endtime="20201112 09:55:18.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.764" level="INFO">VALUE: [111021157, 111031158, 111041158, 111051158, 111061158, 111071158, 111081158, 111091158, 111101158, 111111158, 111121158, 111131158, 111141158, 111151158, 111161158, 111171158, 111181158, 111191158, 111201158, 111211158, 111221158, 111231158, 111241158, 111251158, 111261158, 111271158, 111281158, 111291158, 111301158, 111311158, 111321158, 111331158, 111341158, 111351158, 111361158, 111371158, 111381158, 111391158, 111401158, 111411158, 111421158, 111431158, 111441158, 111451158, 111461158, 111471158, 111481158, 111491158, 111501158, 111511158, 111521158, 111531158, 111541158, 111551158, 111561158, 111571158, 111581158, 111591158, 111601158, 111611158, 111621158, 111631158, 111641158, 111651158, 111661158, 111671158, 111681158, 111691158, 111701158, 111711158, 111721158, 111731158, 111741158, 111751158, 111761158, 111771158, 111781158, 111791158, 111801158, 111811158, 111821158, 111831158, 111841158, 111851158, 111861158, 111871158, 111881158, 111891158, 111901158, 111911158, 111921158, 111931158, 111941158, 111951158, 111961158, 111971158, 111981158, 111991158, 112001158, 112011158]</msg>
<status status="PASS" starttime="20201112 09:55:18.762" endtime="20201112 09:55:18.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.752" endtime="20201112 09:55:18.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.784" endtime="20201112 09:55:19.080"></status>
</kw>
<msg timestamp="20201112 09:55:19.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019644125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029650958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:18.780" endtime="20201112 09:55:19.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019644125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029650958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:19.084" endtime="20201112 09:55:19.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.092" endtime="20201112 09:55:19.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.772" endtime="20201112 09:55:19.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.768" endtime="20201112 09:55:19.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:19.119" level="INFO">${RESULT} = {'time': [0.019644125, 0.029650958, 0.039652667, 0.04965325, 0.059654139, 0.069654694, 0.079655597, 0.089656167, 0.099657069, 0.109657639, 0.119658542, 0.129659097, 0.13966, 0.149660569, 0.159661472, ...</msg>
<status status="PASS" starttime="20201112 09:55:19.095" endtime="20201112 09:55:19.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.124" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:55:19.122" endtime="20201112 09:55:19.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.126" level="INFO">VALUE: 0.019644125</msg>
<status status="PASS" starttime="20201112 09:55:19.125" endtime="20201112 09:55:19.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.120" endtime="20201112 09:55:19.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.131" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:19.130" endtime="20201112 09:55:19.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.133" level="INFO">VALUE: [0.029650958, 0.039652667, 0.04965325, 0.059654139, 0.069654694, 0.079655597, 0.089656167, 0.099657069, 0.109657639, 0.119658542, 0.129659097, 0.13966, 0.149660569, 0.159661472, 0.169662111, 0.179662958, 0.189663528, 0.199664486, 0.209664986, 0.219665875, 0.229666486, 0.239667347, 0.249667917, 0.259668819, 0.269669472, 0.279670306, 0.289670917, 0.299671764, 0.309672333, 0.319673306, 0.329673806, 0.339674708, 0.349675333, 0.359676167, 0.36967675, 0.379677639, 0.389678222, 0.399679111, 0.409679681, 0.419680583, 0.429681139, 0.439682028, 0.449682597, 0.459683486, 0.469684056, 0.479684944, 0.489685528, 0.499686403, 0.509686958, 0.519687875, 0.529688417, 0.539689319, 0.549689903, 0.559690778, 0.569691333, 0.57969225, 0.589692806, 0.599693694, 0.609694278, 0.619695153, 0.62969575, 0.639696639, 0.649697181, 0.659698069, 0.669698708, 0.679699528, 0.689700097, 0.699700986, 0.709701556, 0.719702444, 0.729703028, 0.739703917, 0.749704486, 0.759705361, 0.769705931, 0.779706819, 0.789707389, 0.799708278, 0.809708917, 0.819709764, 0.829710306, 0.839711208, 0.849711806, 0.859712667, 0.869713236, 0.879714125, 0.889714764, 0.899715597, 0.909716167, 0.919717042, 0.929717611, 0.939718514, 0.949719125, 0.959719972, 0.969720528, 0.979721431, 0.989722, 0.999722889, 1.009723472, 1.019724361] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:19.132" endtime="20201112 09:55:19.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.127" endtime="20201112 09:55:19.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.137" endtime="20201112 09:55:19.138"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:19.140" endtime="20201112 09:55:19.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.139" endtime="20201112 09:55:19.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.135" endtime="20201112 09:55:19.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.578" endtime="20201112 09:55:19.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.428" endtime="20201112 09:55:19.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.427" endtime="20201112 09:55:19.161"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:55:19.164" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.174" endtime="20201112 09:55:21.286"></status>
</kw>
<msg timestamp="20201112 09:55:21.287" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 113599504, 'wakeups': [113609514, 113619514, 113629515, 113639515, 113...</msg>
<status status="PASS" starttime="20201112 09:55:19.172" endtime="20201112 09:55:21.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.294" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 113599504, 'wakeups': [113609514, 113619514, 113629515, 113639515, 113...</msg>
<status status="PASS" starttime="20201112 09:55:21.290" endtime="20201112 09:55:21.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.296" endtime="20201112 09:55:21.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.169" endtime="20201112 09:55:21.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.166" endtime="20201112 09:55:21.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:21.308" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 2, 'wakeups': [113609514, 113619514, 113629515, 113639515, 113649515, 113659515, 113669515, 113679515, 113689515, 113699515, 113709515, 113719515, 113729515, 1...</msg>
<status status="PASS" starttime="20201112 09:55:21.304" endtime="20201112 09:55:21.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.317" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:21.315" endtime="20201112 09:55:21.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.321" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:21.319" endtime="20201112 09:55:21.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.310" endtime="20201112 09:55:21.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.332" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:55:21.330" endtime="20201112 09:55:21.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.337" level="INFO">VALUE: 113599504</msg>
<status status="PASS" starttime="20201112 09:55:21.335" endtime="20201112 09:55:21.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.325" endtime="20201112 09:55:21.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.347" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:21.345" endtime="20201112 09:55:21.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.351" level="INFO">VALUE: [113609514, 113619514, 113629515, 113639515, 113649515, 113659515, 113669515, 113679515, 113689515, 113699515, 113709515, 113719515, 113729515, 113739515, 113749515, 113759515, 113769515, 113779515, 113789515, 113799515, 113809515, 113819515, 113829515, 113839515, 113849515, 113859515, 113869515, 113879515, 113889515, 113899515, 113909515, 113919515, 113929515, 113939515, 113949515, 113959515, 113969515, 113979515, 113989515, 113999515, 114009515, 114019515, 114029515, 114039515, 114049515, 114059515, 114069515, 114079515, 114089515, 114099515, 114109515, 114119515, 114129515, 114139515, 114149515, 114159515, 114169515, 114179515, 114189515, 114199515, 114209515, 114219515, 114229515, 114239515, 114249515, 114259515, 114269515, 114279515, 114289515, 114299515, 114309515, 114319515, 114329515, 114339515, 114349515, 114359515, 114369515, 114379515, 114389515, 114399515, 114409515, 114419515, 114429515, 114439515, 114449515, 114459515, 114469515, 114479515, 114489515, 114499515, 114509515, 114519515, 114529515, 114539515, 114549515, 114559515, 114569515, 114579515, 114589515, 114599515]</msg>
<status status="PASS" starttime="20201112 09:55:21.350" endtime="20201112 09:55:21.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.340" endtime="20201112 09:55:21.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.359" endtime="20201112 09:55:21.650"></status>
</kw>
<msg timestamp="20201112 09:55:21.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024062681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034074611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:21.357" endtime="20201112 09:55:21.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024062681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034074611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:21.654" endtime="20201112 09:55:21.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.668" endtime="20201112 09:55:21.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.355" endtime="20201112 09:55:21.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.353" endtime="20201112 09:55:21.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:21.696" level="INFO">${RESULT} = {'time': [0.024062681, 0.034074611, 0.044075292, 0.054077111, 0.064077792, 0.074078569, 0.084079278, 0.094080042, 0.104080722, 0.1140815, 0.124082194, 0.134082972, 0.144083667, 0.154084444, 0.16408513...</msg>
<status status="PASS" starttime="20201112 09:55:21.671" endtime="20201112 09:55:21.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.700" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:55:21.699" endtime="20201112 09:55:21.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.702" level="INFO">VALUE: 0.024062681</msg>
<status status="PASS" starttime="20201112 09:55:21.701" endtime="20201112 09:55:21.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.697" endtime="20201112 09:55:21.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.708" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:21.707" endtime="20201112 09:55:21.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.710" level="INFO">VALUE: [0.034074611, 0.044075292, 0.054077111, 0.064077792, 0.074078569, 0.084079278, 0.094080042, 0.104080722, 0.1140815, 0.124082194, 0.134082972, 0.144083667, 0.154084444, 0.164085139, 0.174085917, 0.184086611, 0.194087375, 0.204088069, 0.214088875, 0.224089556, 0.234090333, 0.244091, 0.254091819, 0.264092472, 0.274093292, 0.284094, 0.294094736, 0.304095417, 0.314096236, 0.324096889, 0.334097694, 0.344098361, 0.354099139, 0.364099847, 0.374100611, 0.384101292, 0.394102083, 0.404102764, 0.414103556, 0.424104236, 0.434105014, 0.444105708, 0.454106486, 0.464107181, 0.474107958, 0.484108653, 0.494109431, 0.504110125, 0.514110917, 0.524111597, 0.534112361, 0.544113042, 0.554113833, 0.5641145, 0.574115278, 0.584115972, 0.594116722, 0.604117417, 0.614118236, 0.624118889, 0.634119639, 0.644120347, 0.654121097, 0.664121792, 0.674122556, 0.68412325, 0.694124014, 0.704124722, 0.714125472, 0.724126167, 0.734126944, 0.744127625, 0.754128403, 0.764129125, 0.774129861, 0.784130542, 0.794131306, 0.804132, 0.814132764, 0.824133458, 0.834134236, 0.844134917, 0.854135722, 0.864136375, 0.874137222, 0.884137861, 0.894138625, 0.904139319, 0.914140069, 0.92414075, 0.934141542, 0.944142208, 0.954143, 0.964143667, 0.974144444, 0.984145139, 0.994145903, 1.004146611, 1.014147389, 1.024148069] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:21.709" endtime="20201112 09:55:21.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.704" endtime="20201112 09:55:21.711"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.713" endtime="20201112 09:55:21.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:21.717" endtime="20201112 09:55:21.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.715" endtime="20201112 09:55:21.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.712" endtime="20201112 09:55:21.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.165" endtime="20201112 09:55:21.738"></status>
</kw>
<msg timestamp="20201112 09:55:21.738" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.746" endtime="20201112 09:55:23.858"></status>
</kw>
<msg timestamp="20201112 09:55:23.859" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 116171606, 'wakeups': [116181616, 116191616, 116201617, 116211617, 116...</msg>
<status status="PASS" starttime="20201112 09:55:21.745" endtime="20201112 09:55:23.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.866" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 116171606, 'wakeups': [116181616, 116191616, 116201617, 116211617, 116...</msg>
<status status="PASS" starttime="20201112 09:55:23.862" endtime="20201112 09:55:23.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.868" endtime="20201112 09:55:23.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.742" endtime="20201112 09:55:23.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.740" endtime="20201112 09:55:23.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:23.880" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 2, 'wakeups': [116181616, 116191616, 116201617, 116211617, 116221617, 116231617, 116241617, 116251617, 116261617, 116271617, 116281617, 116291617, 116301617, 1...</msg>
<status status="PASS" starttime="20201112 09:55:23.875" endtime="20201112 09:55:23.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.890" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:23.887" endtime="20201112 09:55:23.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.894" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:23.892" endtime="20201112 09:55:23.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.882" endtime="20201112 09:55:23.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.907" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:55:23.903" endtime="20201112 09:55:23.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.912" level="INFO">VALUE: 116171606</msg>
<status status="PASS" starttime="20201112 09:55:23.910" endtime="20201112 09:55:23.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.897" endtime="20201112 09:55:23.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.919" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:23.918" endtime="20201112 09:55:23.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.921" level="INFO">VALUE: [116181616, 116191616, 116201617, 116211617, 116221617, 116231617, 116241617, 116251617, 116261617, 116271617, 116281617, 116291617, 116301617, 116311617, 116321617, 116331617, 116341617, 116351617, 116361617, 116371617, 116381617, 116391617, 116401617, 116411617, 116421617, 116431617, 116441617, 116451617, 116461617, 116471617, 116481617, 116491617, 116501617, 116511617, 116521617, 116531617, 116541617, 116551617, 116561617, 116571617, 116581617, 116591617, 116601617, 116611617, 116621617, 116631617, 116641617, 116651617, 116661617, 116671617, 116681617, 116691617, 116701617, 116711617, 116721617, 116731617, 116741617, 116751617, 116761617, 116771617, 116781617, 116791617, 116801617, 116811617, 116821617, 116831617, 116841617, 116851617, 116861617, 116871617, 116881617, 116891617, 116901617, 116911617, 116921617, 116931617, 116941617, 116951617, 116961617, 116971617, 116981617, 116991617, 117001617, 117011617, 117021617, 117031617, 117041617, 117051617, 117061617, 117071617, 117081617, 117091617, 117101617, 117111617, 117121617, 117131617, 117141617, 117151617, 117161617, 117171617]</msg>
<status status="PASS" starttime="20201112 09:55:23.920" endtime="20201112 09:55:23.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.915" endtime="20201112 09:55:23.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.928" endtime="20201112 09:55:24.219"></status>
</kw>
<msg timestamp="20201112 09:55:24.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019463097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029475028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:23.927" endtime="20201112 09:55:24.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019463097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029475028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:24.223" endtime="20201112 09:55:24.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:24.231" endtime="20201112 09:55:24.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.924" endtime="20201112 09:55:24.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.922" endtime="20201112 09:55:24.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:24.258" level="INFO">${RESULT} = {'time': [0.019463097, 0.029475028, 0.039475708, 0.049477542, 0.059478222, 0.069479014, 0.079479681, 0.089480486, 0.099481153, 0.109482014, 0.119482625, 0.129483403, 0.139484097, 0.149484889, 0.159485...</msg>
<status status="PASS" starttime="20201112 09:55:24.234" endtime="20201112 09:55:24.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.263" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:55:24.262" endtime="20201112 09:55:24.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.265" level="INFO">VALUE: 0.019463097</msg>
<status status="PASS" starttime="20201112 09:55:24.264" endtime="20201112 09:55:24.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.259" endtime="20201112 09:55:24.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.271" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:24.269" endtime="20201112 09:55:24.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.274" level="INFO">VALUE: [0.029475028, 0.039475708, 0.049477542, 0.059478222, 0.069479014, 0.079479681, 0.089480486, 0.099481153, 0.109482014, 0.119482625, 0.129483403, 0.139484097, 0.149484889, 0.159485569, 0.169486347, 0.179487042, 0.189487819, 0.199488514, 0.209489319, 0.219490042, 0.229490764, 0.239491458, 0.249492236, 0.259492972, 0.269493708, 0.279494417, 0.289495181, 0.299495931, 0.309496653, 0.319497361, 0.329498125, 0.339498833, 0.349499611, 0.359500306, 0.369501083, 0.379501764, 0.389502556, 0.39950325, 0.409504042, 0.419504736, 0.4295055, 0.439506208, 0.449506972, 0.459507694, 0.469508486, 0.479509139, 0.489509903, 0.499510583, 0.509511361, 0.519512042, 0.529512833, 0.539513528, 0.549514292, 0.559514958, 0.569515736, 0.579516444, 0.589517208, 0.599517889, 0.609518708, 0.619519361, 0.629520125, 0.639520806, 0.649521597, 0.659522278, 0.669523056, 0.679523736, 0.689524514, 0.699525194, 0.709525986, 0.719526653, 0.729527431, 0.739528125, 0.749528917, 0.759529597, 0.769530431, 0.779531056, 0.789531861, 0.799532514, 0.809533319, 0.819533972, 0.82953475, 0.839535472, 0.849536208, 0.859536917, 0.869537681, 0.879538361, 0.889539139, 0.899539819, 0.909540597, 0.919541319, 0.929542069, 0.93954275, 0.949543528, 0.959544222, 0.969544986, 0.979545681, 0.989546458, 0.999547139, 1.009547917, 1.019548611] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:24.273" endtime="20201112 09:55:24.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.266" endtime="20201112 09:55:24.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:24.277" endtime="20201112 09:55:24.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:24.281" endtime="20201112 09:55:24.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.279" endtime="20201112 09:55:24.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.276" endtime="20201112 09:55:24.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.739" endtime="20201112 09:55:24.301"></status>
</kw>
<msg timestamp="20201112 09:55:24.302" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:24.310" endtime="20201112 09:55:26.421"></status>
</kw>
<msg timestamp="20201112 09:55:26.422" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 118735344, 'wakeups': [118745355, 118755354, 118765355, 118775355, 118...</msg>
<status status="PASS" starttime="20201112 09:55:24.308" endtime="20201112 09:55:26.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.429" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 118735344, 'wakeups': [118745355, 118755354, 118765355, 118775355, 118...</msg>
<status status="PASS" starttime="20201112 09:55:26.425" endtime="20201112 09:55:26.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:26.431" endtime="20201112 09:55:26.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.306" endtime="20201112 09:55:26.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.304" endtime="20201112 09:55:26.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:26.443" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 2, 'wakeups': [118745355, 118755354, 118765355, 118775355, 118785355, 118795355, 118805355, 118815355, 118825355, 118835355, 118845355, 118855355, 118865355, 1...</msg>
<status status="PASS" starttime="20201112 09:55:26.439" endtime="20201112 09:55:26.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.452" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:26.450" endtime="20201112 09:55:26.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.457" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:26.454" endtime="20201112 09:55:26.457"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.445" endtime="20201112 09:55:26.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.467" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:55:26.465" endtime="20201112 09:55:26.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.472" level="INFO">VALUE: 118735344</msg>
<status status="PASS" starttime="20201112 09:55:26.470" endtime="20201112 09:55:26.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.460" endtime="20201112 09:55:26.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.480" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:26.478" endtime="20201112 09:55:26.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.482" level="INFO">VALUE: [118745355, 118755354, 118765355, 118775355, 118785355, 118795355, 118805355, 118815355, 118825355, 118835355, 118845355, 118855355, 118865355, 118875355, 118885355, 118895355, 118905355, 118915355, 118925355, 118935355, 118945355, 118955355, 118965355, 118975355, 118985355, 118995355, 119005355, 119015355, 119025355, 119035355, 119045355, 119055355, 119065355, 119075355, 119085355, 119095355, 119105355, 119115355, 119125355, 119135355, 119145355, 119155355, 119165355, 119175355, 119185355, 119195355, 119205355, 119215355, 119225355, 119235355, 119245355, 119255355, 119265355, 119275355, 119285355, 119295355, 119305355, 119315355, 119325355, 119335355, 119345355, 119355355, 119365355, 119375355, 119385355, 119395355, 119405355, 119415355, 119425355, 119435355, 119445355, 119455355, 119465355, 119475355, 119485355, 119495355, 119505355, 119515355, 119525355, 119535355, 119545355, 119555355, 119565355, 119575355, 119585355, 119595355, 119605355, 119615355, 119625355, 119635355, 119645355, 119655355, 119665355, 119675355, 119685355, 119695355, 119705355, 119715355, 119725355, 119735355]</msg>
<status status="PASS" starttime="20201112 09:55:26.481" endtime="20201112 09:55:26.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.475" endtime="20201112 09:55:26.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:26.490" endtime="20201112 09:55:26.782"></status>
</kw>
<msg timestamp="20201112 09:55:26.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019471222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029483486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:26.488" endtime="20201112 09:55:26.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019471222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029483486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:26.786" endtime="20201112 09:55:26.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:26.793" endtime="20201112 09:55:26.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.486" endtime="20201112 09:55:26.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.484" endtime="20201112 09:55:26.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:26.820" level="INFO">${RESULT} = {'time': [0.019471222, 0.029483486, 0.039483181, 0.049485014, 0.059485667, 0.069486444, 0.079487139, 0.089487917, 0.099488653, 0.109489389, 0.119490083, 0.129490875, 0.139491556, 0.149492375, 0.159493...</msg>
<status status="PASS" starttime="20201112 09:55:26.797" endtime="20201112 09:55:26.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.825" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:55:26.824" endtime="20201112 09:55:26.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.827" level="INFO">VALUE: 0.019471222</msg>
<status status="PASS" starttime="20201112 09:55:26.826" endtime="20201112 09:55:26.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.821" endtime="20201112 09:55:26.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.833" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:26.831" endtime="20201112 09:55:26.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.835" level="INFO">VALUE: [0.029483486, 0.039483181, 0.049485014, 0.059485667, 0.069486444, 0.079487139, 0.089487917, 0.099488653, 0.109489389, 0.119490083, 0.129490875, 0.139491556, 0.149492375, 0.159493028, 0.169493806, 0.179494514, 0.189495292, 0.199495972, 0.20949675, 0.219497458, 0.229498278, 0.239498917, 0.249499694, 0.259500389, 0.269501167, 0.279501861, 0.289502639, 0.299503333, 0.309504125, 0.319504833, 0.329505597, 0.339506278, 0.349507069, 0.359507806, 0.369508542, 0.379509222, 0.389510014, 0.399510708, 0.409511486, 0.419512194, 0.429512986, 0.439513681, 0.449514458, 0.459515125, 0.469515903, 0.479516625, 0.489517431, 0.499518083, 0.509518861, 0.519519542, 0.529520333, 0.539521028, 0.549521819, 0.559522486, 0.569523278, 0.579523958, 0.589524722, 0.599525417, 0.609526181, 0.619526958, 0.629527639, 0.639528333, 0.649529111, 0.659529792, 0.669530569, 0.679531264, 0.689532069, 0.699532722, 0.709533486, 0.719534181, 0.729534958, 0.739535639, 0.749536431, 0.759537111, 0.769537875, 0.779538556, 0.789539347, 0.799540028, 0.809540806, 0.819541514, 0.829542278, 0.839542958, 0.849543736, 0.859544403, 0.869545181, 0.879545889, 0.889546667, 0.899547333, 0.909548111, 0.919548792, 0.929549569, 0.939550264, 0.949551042, 0.959551736, 0.9695525, 0.979553181, 0.989553958, 0.999554653, 1.009555431, 1.019556125] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:26.834" endtime="20201112 09:55:26.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.828" endtime="20201112 09:55:26.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:26.838" endtime="20201112 09:55:26.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:26.846" endtime="20201112 09:55:26.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.844" endtime="20201112 09:55:26.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.836" endtime="20201112 09:55:26.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.302" endtime="20201112 09:55:26.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.163" endtime="20201112 09:55:26.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.162" endtime="20201112 09:55:26.867"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:55:26.870" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:26.879" endtime="20201112 09:55:28.992"></status>
</kw>
<msg timestamp="20201112 09:55:28.993" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 121304318, 'wakeups': [121314334, 121324334, 121334334, 121344334, 121...</msg>
<status status="PASS" starttime="20201112 09:55:26.877" endtime="20201112 09:55:28.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:28.999" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 121304318, 'wakeups': [121314334, 121324334, 121334334, 121344334, 121...</msg>
<status status="PASS" starttime="20201112 09:55:28.995" endtime="20201112 09:55:29.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:29.002" endtime="20201112 09:55:29.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.874" endtime="20201112 09:55:29.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.872" endtime="20201112 09:55:29.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:29.014" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 3, 'wakeups': [121314334, 121324334, 121334334, 121344334, 121354334, 121364334, 121374334, 121384334, 121394334, 121404334, 121414334, 121424334, 121434334, 1...</msg>
<status status="PASS" starttime="20201112 09:55:29.009" endtime="20201112 09:55:29.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.023" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:29.020" endtime="20201112 09:55:29.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.027" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:29.025" endtime="20201112 09:55:29.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.016" endtime="20201112 09:55:29.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.038" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:55:29.036" endtime="20201112 09:55:29.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.043" level="INFO">VALUE: 121304318</msg>
<status status="PASS" starttime="20201112 09:55:29.041" endtime="20201112 09:55:29.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.030" endtime="20201112 09:55:29.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.053" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:29.051" endtime="20201112 09:55:29.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.058" level="INFO">VALUE: [121314334, 121324334, 121334334, 121344334, 121354334, 121364334, 121374334, 121384334, 121394334, 121404334, 121414334, 121424334, 121434334, 121444334, 121454334, 121464334, 121474334, 121484334, 121494334, 121504334, 121514334, 121524334, 121534334, 121544334, 121554334, 121564334, 121574334, 121584334, 121594334, 121604334, 121614334, 121624334, 121634334, 121644334, 121654334, 121664334, 121674334, 121684334, 121694334, 121704334, 121714334, 121724334, 121734334, 121744334, 121754334, 121764334, 121774334, 121784334, 121794334, 121804334, 121814334, 121824334, 121834334, 121844334, 121854334, 121864334, 121874334, 121884334, 121894334, 121904334, 121914334, 121924334, 121934334, 121944334, 121954334, 121964334, 121974334, 121984334, 121994334, 122004334, 122014334, 122024334, 122034334, 122044334, 122054334, 122064334, 122074334, 122084334, 122094334, 122104334, 122114334, 122124334, 122134334, 122144334, 122154334, 122164334, 122174334, 122184334, 122194334, 122204334, 122214334, 122224334, 122234334, 122244334, 122254334, 122264334, 122274334, 122284334, 122294334, 122304334]</msg>
<status status="PASS" starttime="20201112 09:55:29.056" endtime="20201112 09:55:29.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.046" endtime="20201112 09:55:29.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:29.076" endtime="20201112 09:55:29.376"></status>
</kw>
<msg timestamp="20201112 09:55:29.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023157694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033175486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:29.072" endtime="20201112 09:55:29.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023157694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033175486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:29.380" endtime="20201112 09:55:29.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:29.388" endtime="20201112 09:55:29.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.067" endtime="20201112 09:55:29.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.062" endtime="20201112 09:55:29.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:29.416" level="INFO">${RESULT} = {'time': [0.023157694, 0.033175486, 0.043175861, 0.053176722, 0.063177389, 0.073178069, 0.083178847, 0.093179514, 0.103180389, 0.113180986, 0.123181806, 0.133182458, 0.143183264, 0.153183944, 0.163184...</msg>
<status status="PASS" starttime="20201112 09:55:29.391" endtime="20201112 09:55:29.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.421" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:55:29.420" endtime="20201112 09:55:29.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.423" level="INFO">VALUE: 0.023157694</msg>
<status status="PASS" starttime="20201112 09:55:29.422" endtime="20201112 09:55:29.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.417" endtime="20201112 09:55:29.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.428" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:29.427" endtime="20201112 09:55:29.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.431" level="INFO">VALUE: [0.033175486, 0.043175861, 0.053176722, 0.063177389, 0.073178069, 0.083178847, 0.093179514, 0.103180389, 0.113180986, 0.123181806, 0.133182458, 0.143183264, 0.153183944, 0.163184736, 0.173185403, 0.183186208, 0.193186944, 0.203187681, 0.213188347, 0.223189167, 0.233189819, 0.243190639, 0.253191292, 0.263192139, 0.273192764, 0.283193569, 0.293194306, 0.303195042, 0.313195722, 0.323196514, 0.333197181, 0.343197986, 0.353198653, 0.363199458, 0.373200167, 0.383200931, 0.393201597, 0.403202403, 0.413203069, 0.423203889, 0.433204542, 0.443205361, 0.453206014, 0.463206847, 0.4732075, 0.483208361, 0.493208972, 0.503209778, 0.513210444, 0.523211264, 0.533211972, 0.543212778, 0.553213403, 0.563214194, 0.573214889, 0.583215694, 0.593216319, 0.603217139, 0.613217792, 0.623218583, 0.63321925, 0.643220056, 0.653220736, 0.663221514, 0.673222167, 0.683222972, 0.693223639, 0.703224458, 0.713225097, 0.723225889, 0.733226556, 0.743227347, 0.753228028, 0.763228806, 0.7732295, 0.783230292, 0.793230958, 0.80323175, 0.813232403, 0.823233194, 0.833233861, 0.843234681, 0.853235319, 0.863236139, 0.873236778, 0.883237583, 0.89323825, 0.903239083, 0.91323975, 0.923240528, 0.933241167, 0.943241986, 0.953242653, 0.963243431, 0.973244097, 0.983244903, 0.993245556, 1.003246361, 1.013247028, 1.023247847] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:29.429" endtime="20201112 09:55:29.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.424" endtime="20201112 09:55:29.431"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:29.434" endtime="20201112 09:55:29.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:29.437" endtime="20201112 09:55:29.457"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.436" endtime="20201112 09:55:29.457"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.432" endtime="20201112 09:55:29.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.870" endtime="20201112 09:55:29.458"></status>
</kw>
<msg timestamp="20201112 09:55:29.458" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:29.467" endtime="20201112 09:55:31.578"></status>
</kw>
<msg timestamp="20201112 09:55:31.580" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 123892176, 'wakeups': [123902192, 123912192, 123922192, 123932192, 123...</msg>
<status status="PASS" starttime="20201112 09:55:29.465" endtime="20201112 09:55:31.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:31.587" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 123892176, 'wakeups': [123902192, 123912192, 123922192, 123932192, 123...</msg>
<status status="PASS" starttime="20201112 09:55:31.583" endtime="20201112 09:55:31.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:31.589" endtime="20201112 09:55:31.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.462" endtime="20201112 09:55:31.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.460" endtime="20201112 09:55:31.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:31.601" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 3, 'wakeups': [123902192, 123912192, 123922192, 123932192, 123942192, 123952192, 123962192, 123972192, 123982192, 123992192, 124002192, 124012192, 124022192, 1...</msg>
<status status="PASS" starttime="20201112 09:55:31.597" endtime="20201112 09:55:31.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:31.610" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:31.608" endtime="20201112 09:55:31.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:31.614" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:31.612" endtime="20201112 09:55:31.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.603" endtime="20201112 09:55:31.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:31.627" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:55:31.625" endtime="20201112 09:55:31.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:31.632" level="INFO">VALUE: 123892176</msg>
<status status="PASS" starttime="20201112 09:55:31.630" endtime="20201112 09:55:31.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.618" endtime="20201112 09:55:31.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:31.643" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:31.641" endtime="20201112 09:55:31.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:31.648" level="INFO">VALUE: [123902192, 123912192, 123922192, 123932192, 123942192, 123952192, 123962192, 123972192, 123982192, 123992192, 124002192, 124012192, 124022192, 124032192, 124042192, 124052192, 124062192, 124072192, 124082192, 124092192, 124102192, 124112192, 124122192, 124132192, 124142192, 124152192, 124162192, 124172192, 124182192, 124192192, 124202192, 124212192, 124222192, 124232192, 124242192, 124252192, 124262192, 124272192, 124282192, 124292192, 124302192, 124312192, 124322192, 124332192, 124342192, 124352192, 124362192, 124372192, 124382192, 124392192, 124402192, 124412192, 124422192, 124432192, 124442192, 124452192, 124462192, 124472192, 124482192, 124492192, 124502192, 124512192, 124522192, 124532192, 124542192, 124552192, 124562192, 124572192, 124582192, 124592192, 124602192, 124612192, 124622192, 124632192, 124642192, 124652192, 124662192, 124672192, 124682192, 124692192, 124702192, 124712192, 124722192, 124732192, 124742192, 124752192, 124762192, 124772192, 124782192, 124792192, 124802192, 124812192, 124822192, 124832192, 124842192, 124852192, 124862192, 124872192, 124882192, 124892192]</msg>
<status status="PASS" starttime="20201112 09:55:31.645" endtime="20201112 09:55:31.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.635" endtime="20201112 09:55:31.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:31.664" endtime="20201112 09:55:31.958"></status>
</kw>
<msg timestamp="20201112 09:55:31.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019666222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029684, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:55:31.661" endtime="20201112 09:55:31.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:31.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019666222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029684, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:55:31.961" endtime="20201112 09:55:31.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:31.969" endtime="20201112 09:55:31.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.655" endtime="20201112 09:55:31.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.651" endtime="20201112 09:55:31.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:31.997" level="INFO">${RESULT} = {'time': [0.019666222, 0.029684, 0.039684361, 0.049685236, 0.059685944, 0.069686569, 0.079687375, 0.089688042, 0.099688875, 0.109689514, 0.119690319, 0.129690986, 0.139691792, 0.149692458, 0.159693264...</msg>
<status status="PASS" starttime="20201112 09:55:31.973" endtime="20201112 09:55:31.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.001" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:55:32.000" endtime="20201112 09:55:32.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.004" level="INFO">VALUE: 0.019666222</msg>
<status status="PASS" starttime="20201112 09:55:32.003" endtime="20201112 09:55:32.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.998" endtime="20201112 09:55:32.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.010" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:32.008" endtime="20201112 09:55:32.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.012" level="INFO">VALUE: [0.029684, 0.039684361, 0.049685236, 0.059685944, 0.069686569, 0.079687375, 0.089688042, 0.099688875, 0.109689514, 0.119690319, 0.129690986, 0.139691792, 0.149692458, 0.159693264, 0.169693944, 0.179694736, 0.189695403, 0.199696208, 0.209696903, 0.219697681, 0.229698361, 0.239699208, 0.249699833, 0.259700625, 0.269701292, 0.279702125, 0.289702764, 0.299703569, 0.309704264, 0.319705042, 0.329705708, 0.339706528, 0.349707181, 0.359707986, 0.369708653, 0.379709458, 0.389710125, 0.399710917, 0.409711597, 0.419712389, 0.429713056, 0.439713833, 0.4497145, 0.459715319, 0.469715958, 0.479716764, 0.489717431, 0.499718222, 0.509718875, 0.519719708, 0.529720333, 0.539721139, 0.549721792, 0.559722611, 0.56972325, 0.579724056, 0.589724764, 0.599725514, 0.609726181, 0.619726986, 0.629727639, 0.639728444, 0.649729111, 0.659729903, 0.669730556, 0.679731361, 0.689732042, 0.699732833, 0.709733486, 0.719734278, 0.729734958, 0.73973575, 0.749736431, 0.759737208, 0.769737875, 0.779738667, 0.789739389, 0.799740125, 0.809740792, 0.819741611, 0.829742264, 0.839743056, 0.849743764, 0.859744528, 0.869745194, 0.879745972, 0.889746639, 0.899747444, 0.909748097, 0.919748931, 0.929749569, 0.939750361, 0.949751028, 0.959751861, 0.969752486, 0.979753292, 0.989753972, 0.99975475, 1.009755417, 1.019756222] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:32.011" endtime="20201112 09:55:32.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.005" endtime="20201112 09:55:32.013"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.015" endtime="20201112 09:55:32.017"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:32.019" endtime="20201112 09:55:32.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.017" endtime="20201112 09:55:32.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.014" endtime="20201112 09:55:32.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.459" endtime="20201112 09:55:32.040"></status>
</kw>
<msg timestamp="20201112 09:55:32.040" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.049" endtime="20201112 09:55:34.161"></status>
</kw>
<msg timestamp="20201112 09:55:34.162" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 126473776, 'wakeups': [126483793, 126493792, 126503792, 126513792, 126...</msg>
<status status="PASS" starttime="20201112 09:55:32.047" endtime="20201112 09:55:34.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:34.168" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 126473776, 'wakeups': [126483793, 126493792, 126503792, 126513792, 126...</msg>
<status status="PASS" starttime="20201112 09:55:34.164" endtime="20201112 09:55:34.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:34.171" endtime="20201112 09:55:34.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.044" endtime="20201112 09:55:34.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.042" endtime="20201112 09:55:34.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:34.182" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 3, 'wakeups': [126483793, 126493792, 126503792, 126513792, 126523792, 126533792, 126543792, 126553792, 126563792, 126573792, 126583792, 126593792, 126603792, 1...</msg>
<status status="PASS" starttime="20201112 09:55:34.178" endtime="20201112 09:55:34.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:34.192" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:34.190" endtime="20201112 09:55:34.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:34.196" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:34.194" endtime="20201112 09:55:34.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.184" endtime="20201112 09:55:34.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:34.207" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:55:34.205" endtime="20201112 09:55:34.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:34.212" level="INFO">VALUE: 126473776</msg>
<status status="PASS" starttime="20201112 09:55:34.210" endtime="20201112 09:55:34.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.200" endtime="20201112 09:55:34.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:34.223" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:34.220" endtime="20201112 09:55:34.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:34.227" level="INFO">VALUE: [126483793, 126493792, 126503792, 126513792, 126523792, 126533792, 126543792, 126553792, 126563792, 126573792, 126583792, 126593792, 126603792, 126613792, 126623792, 126633792, 126643792, 126653792, 126663792, 126673792, 126683792, 126693792, 126703792, 126713792, 126723792, 126733792, 126743792, 126753792, 126763792, 126773792, 126783792, 126793792, 126803792, 126813792, 126823792, 126833792, 126843792, 126853792, 126863792, 126873792, 126883792, 126893792, 126903792, 126913792, 126923792, 126933792, 126943792, 126953792, 126963792, 126973792, 126983792, 126993792, 127003792, 127013792, 127023792, 127033792, 127043792, 127053792, 127063792, 127073792, 127083792, 127093792, 127103792, 127113792, 127123792, 127133792, 127143792, 127153792, 127163792, 127173792, 127183792, 127193792, 127203792, 127213792, 127223792, 127233792, 127243792, 127253792, 127263792, 127273792, 127283792, 127293792, 127303792, 127313792, 127323792, 127333792, 127343792, 127353792, 127363792, 127373792, 127383792, 127393792, 127403792, 127413792, 127423792, 127433792, 127443792, 127453792, 127463792, 127473792]</msg>
<status status="PASS" starttime="20201112 09:55:34.225" endtime="20201112 09:55:34.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.215" endtime="20201112 09:55:34.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:34.239" endtime="20201112 09:55:34.530"></status>
</kw>
<msg timestamp="20201112 09:55:34.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019622514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029640625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:34.236" endtime="20201112 09:55:34.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:34.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019622514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029640625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:34.534" endtime="20201112 09:55:34.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:34.542" endtime="20201112 09:55:34.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.234" endtime="20201112 09:55:34.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.231" endtime="20201112 09:55:34.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:34.569" level="INFO">${RESULT} = {'time': [0.019622514, 0.029640625, 0.03964, 0.049640847, 0.059641542, 0.069642194, 0.079643, 0.089643722, 0.099644486, 0.109645139, 0.119645972, 0.129646611, 0.139647458, 0.149648083, 0.159648875, 0....</msg>
<status status="PASS" starttime="20201112 09:55:34.545" endtime="20201112 09:55:34.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:34.574" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:55:34.573" endtime="20201112 09:55:34.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:34.576" level="INFO">VALUE: 0.019622514</msg>
<status status="PASS" starttime="20201112 09:55:34.575" endtime="20201112 09:55:34.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.570" endtime="20201112 09:55:34.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:34.582" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:34.581" endtime="20201112 09:55:34.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:34.584" level="INFO">VALUE: [0.029640625, 0.03964, 0.049640847, 0.059641542, 0.069642194, 0.079643, 0.089643722, 0.099644486, 0.109645139, 0.119645972, 0.129646611, 0.139647458, 0.149648083, 0.159648875, 0.169649542, 0.179650361, 0.189651014, 0.199651833, 0.209652486, 0.219653306, 0.229653958, 0.239654778, 0.249655431, 0.259656236, 0.269656917, 0.279657722, 0.289658375, 0.299659194, 0.309659875, 0.319660653, 0.329661319, 0.339662125, 0.349662792, 0.359663597, 0.369664278, 0.379665097, 0.389665736, 0.399666542, 0.40966725, 0.419668014, 0.429668681, 0.439669486, 0.449670153, 0.459670958, 0.469671639, 0.479672431, 0.489673097, 0.499673889, 0.509674542, 0.519675361, 0.529676014, 0.539676819, 0.549677458, 0.559678264, 0.569678931, 0.579679722, 0.589680417, 0.599681181, 0.609681847, 0.619682653, 0.629683306, 0.639684097, 0.649684778, 0.659685569, 0.66968625, 0.679687042, 0.689687694, 0.699688528, 0.709689139, 0.719689944, 0.729690667, 0.739691444, 0.749692083, 0.759692875, 0.769693583, 0.779694333, 0.789695, 0.799695792, 0.809696444, 0.81969725, 0.829697917, 0.839698722, 0.849699375, 0.859700181, 0.869700847, 0.879701681, 0.889702292, 0.899703097, 0.909703764, 0.919704569, 0.929705222, 0.939706028, 0.949706681, 0.959707486, 0.969708167, 0.979708958, 0.989709611, 0.999710417, 1.009711069, 1.019711903] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:34.583" endtime="20201112 09:55:34.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.578" endtime="20201112 09:55:34.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:34.588" endtime="20201112 09:55:34.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:34.591" endtime="20201112 09:55:34.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.590" endtime="20201112 09:55:34.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.586" endtime="20201112 09:55:34.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.041" endtime="20201112 09:55:34.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.868" endtime="20201112 09:55:34.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.867" endtime="20201112 09:55:34.613"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:55:34.615" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:34.625" endtime="20201112 09:55:36.736"></status>
</kw>
<msg timestamp="20201112 09:55:36.737" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 129050134, 'wakeups': [129060156, 129070156, 129080156, 129090156, 129...</msg>
<status status="PASS" starttime="20201112 09:55:34.622" endtime="20201112 09:55:36.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.743" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 129050134, 'wakeups': [129060156, 129070156, 129080156, 129090156, 129...</msg>
<status status="PASS" starttime="20201112 09:55:36.739" endtime="20201112 09:55:36.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:36.746" endtime="20201112 09:55:36.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.620" endtime="20201112 09:55:36.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.617" endtime="20201112 09:55:36.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:36.758" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 4, 'wakeups': [129060156, 129070156, 129080156, 129090156, 129100156, 129110156, 129120156, 129130156, 129140156, 129150156, 129160156, 129170156, 129180156, 1...</msg>
<status status="PASS" starttime="20201112 09:55:36.753" endtime="20201112 09:55:36.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.767" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:36.764" endtime="20201112 09:55:36.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.771" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:36.769" endtime="20201112 09:55:36.772"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.759" endtime="20201112 09:55:36.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.782" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:55:36.780" endtime="20201112 09:55:36.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.787" level="INFO">VALUE: 129050134</msg>
<status status="PASS" starttime="20201112 09:55:36.784" endtime="20201112 09:55:36.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.775" endtime="20201112 09:55:36.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.798" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:36.796" endtime="20201112 09:55:36.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.803" level="INFO">VALUE: [129060156, 129070156, 129080156, 129090156, 129100156, 129110156, 129120156, 129130156, 129140156, 129150156, 129160156, 129170156, 129180156, 129190156, 129200156, 129210156, 129220156, 129230156, 129240156, 129250156, 129260156, 129270156, 129280156, 129290156, 129300156, 129310156, 129320156, 129330156, 129340156, 129350156, 129360156, 129370156, 129380156, 129390156, 129400156, 129410156, 129420156, 129430156, 129440156, 129450156, 129460156, 129470156, 129480156, 129490156, 129500156, 129510156, 129520156, 129530156, 129540156, 129550156, 129560156, 129570156, 129580156, 129590156, 129600156, 129610156, 129620156, 129630156, 129640156, 129650156, 129660156, 129670156, 129680156, 129690156, 129700156, 129710156, 129720156, 129730156, 129740156, 129750156, 129760156, 129770156, 129780156, 129790156, 129800156, 129810156, 129820156, 129830156, 129840156, 129850156, 129860156, 129870156, 129880156, 129890156, 129900156, 129910156, 129920156, 129930156, 129940156, 129950156, 129960156, 129970156, 129980156, 129990156, 130000156, 130010156, 130020156, 130030156, 130040156, 130050156]</msg>
<status status="PASS" starttime="20201112 09:55:36.800" endtime="20201112 09:55:36.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.790" endtime="20201112 09:55:36.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:36.819" endtime="20201112 09:55:37.121"></status>
</kw>
<msg timestamp="20201112 09:55:37.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02355175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033575403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:36.816" endtime="20201112 09:55:37.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02355175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033575403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:37.125" endtime="20201112 09:55:37.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.133" endtime="20201112 09:55:37.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.810" endtime="20201112 09:55:37.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.806" endtime="20201112 09:55:37.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:37.160" level="INFO">${RESULT} = {'time': [0.02355175, 0.033575403, 0.043576042, 0.053576875, 0.063577514, 0.07357825, 0.083579056, 0.093579722, 0.103580472, 0.113581278, 0.123581986, 0.133582708, 0.143583472, 0.153584125, 0.16358490...</msg>
<status status="PASS" starttime="20201112 09:55:37.136" endtime="20201112 09:55:37.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.165" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:55:37.164" endtime="20201112 09:55:37.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.167" level="INFO">VALUE: 0.02355175</msg>
<status status="PASS" starttime="20201112 09:55:37.166" endtime="20201112 09:55:37.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.161" endtime="20201112 09:55:37.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.173" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:37.172" endtime="20201112 09:55:37.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.175" level="INFO">VALUE: [0.033575403, 0.043576042, 0.053576875, 0.063577514, 0.07357825, 0.083579056, 0.093579722, 0.103580472, 0.113581278, 0.123581986, 0.133582708, 0.143583472, 0.153584125, 0.163584903, 0.173585694, 0.183586347, 0.193587069, 0.203587889, 0.213588542, 0.223589292, 0.233590083, 0.243590764, 0.2535915, 0.263592292, 0.273592958, 0.283593681, 0.293594514, 0.303595167, 0.313595917, 0.323596736, 0.333597375, 0.343598167, 0.353598917, 0.363599583, 0.373600306, 0.383601111, 0.393601792, 0.403602514, 0.413603333, 0.423604014, 0.433604722, 0.443605542, 0.453606194, 0.463606931, 0.47360775, 0.483608417, 0.493609139, 0.503609972, 0.513610611, 0.523611375, 0.533612181, 0.543612833, 0.553613556, 0.563614361, 0.573615042, 0.583615778, 0.593616597, 0.603617236, 0.613618014, 0.623618778, 0.633619431, 0.643620153, 0.653620972, 0.663621625, 0.673622361, 0.683623139, 0.693623819, 0.703624528, 0.713625403, 0.723626042, 0.733626778, 0.743627528, 0.753628181, 0.763628903, 0.773629722, 0.783630361, 0.793631097, 0.803631903, 0.813632556, 0.823633292, 0.833634167, 0.843634764, 0.8536355, 0.863636292, 0.873636958, 0.883637667, 0.893638486, 0.903639125, 0.913639861, 0.923640681, 0.933641389, 0.943642056, 0.953642861, 0.963643514, 0.97364425, 0.983645042, 0.993645722, 1.003646431, 1.013647292, 1.023647889] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:37.174" endtime="20201112 09:55:37.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.169" endtime="20201112 09:55:37.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.178" endtime="20201112 09:55:37.184"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:37.186" endtime="20201112 09:55:37.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.184" endtime="20201112 09:55:37.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.177" endtime="20201112 09:55:37.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.616" endtime="20201112 09:55:37.207"></status>
</kw>
<msg timestamp="20201112 09:55:37.207" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.216" endtime="20201112 09:55:39.327"></status>
</kw>
<msg timestamp="20201112 09:55:39.328" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 131640739, 'wakeups': [131650761, 131660761, 131670761, 131680761, 131...</msg>
<status status="PASS" starttime="20201112 09:55:37.214" endtime="20201112 09:55:39.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:39.334" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 131640739, 'wakeups': [131650761, 131660761, 131670761, 131680761, 131...</msg>
<status status="PASS" starttime="20201112 09:55:39.330" endtime="20201112 09:55:39.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:39.337" endtime="20201112 09:55:39.340"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.211" endtime="20201112 09:55:39.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.209" endtime="20201112 09:55:39.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:39.348" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 4, 'wakeups': [131650761, 131660761, 131670761, 131680761, 131690761, 131700761, 131710761, 131720761, 131730761, 131740761, 131750761, 131760761, 131770761, 1...</msg>
<status status="PASS" starttime="20201112 09:55:39.344" endtime="20201112 09:55:39.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:39.357" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:39.355" endtime="20201112 09:55:39.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:39.362" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:39.360" endtime="20201112 09:55:39.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.350" endtime="20201112 09:55:39.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:39.373" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:55:39.370" endtime="20201112 09:55:39.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:39.380" level="INFO">VALUE: 131640739</msg>
<status status="PASS" starttime="20201112 09:55:39.378" endtime="20201112 09:55:39.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.365" endtime="20201112 09:55:39.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:39.391" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:39.388" endtime="20201112 09:55:39.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:39.395" level="INFO">VALUE: [131650761, 131660761, 131670761, 131680761, 131690761, 131700761, 131710761, 131720761, 131730761, 131740761, 131750761, 131760761, 131770761, 131780761, 131790761, 131800761, 131810761, 131820761, 131830761, 131840761, 131850761, 131860761, 131870761, 131880761, 131890761, 131900761, 131910761, 131920761, 131930761, 131940761, 131950761, 131960761, 131970761, 131980761, 131990761, 132000761, 132010761, 132020761, 132030761, 132040761, 132050761, 132060761, 132070761, 132080761, 132090761, 132100761, 132110761, 132120761, 132130761, 132140761, 132150761, 132160761, 132170761, 132180761, 132190761, 132200761, 132210761, 132220761, 132230761, 132240761, 132250761, 132260761, 132270761, 132280761, 132290761, 132300761, 132310761, 132320761, 132330761, 132340761, 132350761, 132360761, 132370761, 132380761, 132390761, 132400761, 132410761, 132420761, 132430761, 132440761, 132450761, 132460761, 132470761, 132480761, 132490761, 132500761, 132510761, 132520761, 132530761, 132540761, 132550761, 132560761, 132570761, 132580761, 132590761, 132600761, 132610761, 132620761, 132630761, 132640761]</msg>
<status status="PASS" starttime="20201112 09:55:39.393" endtime="20201112 09:55:39.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.383" endtime="20201112 09:55:39.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:39.413" endtime="20201112 09:55:39.706"></status>
</kw>
<msg timestamp="20201112 09:55:39.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019450417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029473778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:39.409" endtime="20201112 09:55:39.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:39.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019450417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029473778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:39.710" endtime="20201112 09:55:39.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:39.717" endtime="20201112 09:55:39.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.402" endtime="20201112 09:55:39.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.399" endtime="20201112 09:55:39.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:39.745" level="INFO">${RESULT} = {'time': [0.019450417, 0.029473778, 0.039474417, 0.049475222, 0.059475875, 0.069476625, 0.079477444, 0.089478097, 0.099478833, 0.109479653, 0.119480292, 0.129481028, 0.139481833, 0.1494825, 0.15948325...</msg>
<status status="PASS" starttime="20201112 09:55:39.721" endtime="20201112 09:55:39.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:39.750" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:55:39.748" endtime="20201112 09:55:39.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:39.752" level="INFO">VALUE: 0.019450417</msg>
<status status="PASS" starttime="20201112 09:55:39.751" endtime="20201112 09:55:39.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.746" endtime="20201112 09:55:39.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:39.757" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:39.756" endtime="20201112 09:55:39.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:39.760" level="INFO">VALUE: [0.029473778, 0.039474417, 0.049475222, 0.059475875, 0.069476625, 0.079477444, 0.089478097, 0.099478833, 0.109479653, 0.119480292, 0.129481028, 0.139481833, 0.1494825, 0.15948325, 0.169484042, 0.179484708, 0.189485458, 0.19948625, 0.209486917, 0.219487653, 0.229488458, 0.239489125, 0.249489847, 0.259490667, 0.269491319, 0.279492056, 0.289492875, 0.299493528, 0.309494278, 0.319495083, 0.329495736, 0.339496486, 0.349497292, 0.359497972, 0.369498681, 0.379499486, 0.389500153, 0.399500889, 0.409501694, 0.419502361, 0.429503083, 0.439503944, 0.449504556, 0.459505292, 0.469506097, 0.479506736, 0.489507458, 0.499508264, 0.509508917, 0.519509667, 0.529510458, 0.539511111, 0.549511833, 0.559512639, 0.569513306, 0.579514028, 0.589514833, 0.599515486, 0.609516222, 0.619517028, 0.629517694, 0.639518403, 0.649519264, 0.659519875, 0.669520611, 0.679521403, 0.689522069, 0.699522861, 0.709523583, 0.719524236, 0.729524972, 0.739525778, 0.749526472, 0.759527167, 0.769527986, 0.779528625, 0.789529361, 0.799530153, 0.809530847, 0.819531542, 0.829532347, 0.839533014, 0.84953375, 0.859534542, 0.86953525, 0.879535931, 0.889536736, 0.899537389, 0.909538125, 0.919538958, 0.929539583, 0.939540306, 0.949541139, 0.959541778, 0.969542569, 0.979543319, 0.989543972, 0.999544708, 1.0095455, 1.019546153] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:39.759" endtime="20201112 09:55:39.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.753" endtime="20201112 09:55:39.761"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:39.764" endtime="20201112 09:55:39.765"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:39.767" endtime="20201112 09:55:39.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.766" endtime="20201112 09:55:39.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.762" endtime="20201112 09:55:39.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.208" endtime="20201112 09:55:39.788"></status>
</kw>
<msg timestamp="20201112 09:55:39.788" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:39.797" endtime="20201112 09:55:41.907"></status>
</kw>
<msg timestamp="20201112 09:55:41.909" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 134221967, 'wakeups': [134231989, 134241989, 134251989, 134261989, 134...</msg>
<status status="PASS" starttime="20201112 09:55:39.795" endtime="20201112 09:55:41.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.916" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 134221967, 'wakeups': [134231989, 134241989, 134251989, 134261989, 134...</msg>
<status status="PASS" starttime="20201112 09:55:41.912" endtime="20201112 09:55:41.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.918" endtime="20201112 09:55:41.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.792" endtime="20201112 09:55:41.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.790" endtime="20201112 09:55:41.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:41.930" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 4, 'wakeups': [134231989, 134241989, 134251989, 134261989, 134271989, 134281989, 134291989, 134301989, 134311989, 134321989, 134331989, 134341989, 134351989, 1...</msg>
<status status="PASS" starttime="20201112 09:55:41.926" endtime="20201112 09:55:41.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.939" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:41.937" endtime="20201112 09:55:41.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.943" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:41.941" endtime="20201112 09:55:41.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.932" endtime="20201112 09:55:41.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.954" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:55:41.952" endtime="20201112 09:55:41.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.959" level="INFO">VALUE: 134221967</msg>
<status status="PASS" starttime="20201112 09:55:41.957" endtime="20201112 09:55:41.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.947" endtime="20201112 09:55:41.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.969" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:41.967" endtime="20201112 09:55:41.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.974" level="INFO">VALUE: [134231989, 134241989, 134251989, 134261989, 134271989, 134281989, 134291989, 134301989, 134311989, 134321989, 134331989, 134341989, 134351989, 134361989, 134371989, 134381989, 134391989, 134401989, 134411989, 134421989, 134431989, 134441989, 134451989, 134461989, 134471989, 134481989, 134491989, 134501989, 134511989, 134521989, 134531989, 134541989, 134551989, 134561989, 134571989, 134581989, 134591989, 134601989, 134611989, 134621989, 134631989, 134641989, 134651989, 134661989, 134671989, 134681989, 134691989, 134701989, 134711989, 134721989, 134731989, 134741989, 134751989, 134761989, 134771989, 134781989, 134791989, 134801989, 134811989, 134821989, 134831989, 134841989, 134851989, 134861989, 134871989, 134881989, 134891989, 134901989, 134911989, 134921989, 134931989, 134941989, 134951989, 134961989, 134971989, 134981989, 134991989, 135001989, 135011989, 135021989, 135031989, 135041989, 135051989, 135061989, 135071989, 135081989, 135091989, 135101989, 135111989, 135121989, 135131989, 135141989, 135151989, 135161989, 135171989, 135181989, 135191989, 135201989, 135211989, 135221989]</msg>
<status status="PASS" starttime="20201112 09:55:41.972" endtime="20201112 09:55:41.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.962" endtime="20201112 09:55:41.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.991" endtime="20201112 09:55:42.286"></status>
</kw>
<msg timestamp="20201112 09:55:42.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019522069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029545431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:41.987" endtime="20201112 09:55:42.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019522069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029545431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:42.289" endtime="20201112 09:55:42.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:42.297" endtime="20201112 09:55:42.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.982" endtime="20201112 09:55:42.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.978" endtime="20201112 09:55:42.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:42.328" level="INFO">${RESULT} = {'time': [0.019522069, 0.029545431, 0.039546056, 0.049546875, 0.059547528, 0.069548278, 0.079549083, 0.08954975, 0.099550458, 0.109551292, 0.119551944, 0.129552667, 0.139553472, 0.149554153, 0.1595548...</msg>
<status status="PASS" starttime="20201112 09:55:42.301" endtime="20201112 09:55:42.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.333" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:55:42.332" endtime="20201112 09:55:42.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.335" level="INFO">VALUE: 0.019522069</msg>
<status status="PASS" starttime="20201112 09:55:42.334" endtime="20201112 09:55:42.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.329" endtime="20201112 09:55:42.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.341" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:42.340" endtime="20201112 09:55:42.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.343" level="INFO">VALUE: [0.029545431, 0.039546056, 0.049546875, 0.059547528, 0.069548278, 0.079549083, 0.08954975, 0.099550458, 0.109551292, 0.119551944, 0.129552667, 0.139553472, 0.149554153, 0.159554875, 0.169555736, 0.179556347, 0.189557083, 0.199557903, 0.209558556, 0.219559292, 0.229560097, 0.23956075, 0.2495615, 0.259562319, 0.269562972, 0.279563694, 0.289564514, 0.299565194, 0.309565917, 0.319566736, 0.329567375, 0.339568111, 0.349568931, 0.359569583, 0.369570319, 0.379571125, 0.389571792, 0.399572583, 0.409573333, 0.419574014, 0.429574708, 0.439575556, 0.449576181, 0.459576903, 0.469577708, 0.479578361, 0.489579083, 0.499579903, 0.509580625, 0.519581292, 0.529582083, 0.539582736, 0.549583458, 0.559584278, 0.569584917, 0.579585653, 0.589586458, 0.599587111, 0.609587833, 0.619588639, 0.629589306, 0.639590028, 0.649590833, 0.659591556, 0.669592236, 0.679593069, 0.689593681, 0.699594417, 0.709595208, 0.719595875, 0.729596597, 0.739597403, 0.749598069, 0.759598792, 0.769599597, 0.779600264, 0.789600972, 0.799601778, 0.809602444, 0.819603167, 0.829604056, 0.839604625, 0.849605361, 0.859606208, 0.869606819, 0.879607597, 0.889608361, 0.899609014, 0.909609778, 0.919610569, 0.929611208, 0.939611944, 0.94961275, 0.959613389, 0.969614139, 0.979614931, 0.989615597, 0.999616319, 1.009617125, 1.019617778] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:42.342" endtime="20201112 09:55:42.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.337" endtime="20201112 09:55:42.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:42.346" endtime="20201112 09:55:42.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:42.350" endtime="20201112 09:55:42.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.348" endtime="20201112 09:55:42.370"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.344" endtime="20201112 09:55:42.370"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.789" endtime="20201112 09:55:42.371"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.614" endtime="20201112 09:55:42.371"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.613" endtime="20201112 09:55:42.371"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:55:42.374" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:42.383" endtime="20201112 09:55:44.495"></status>
</kw>
<msg timestamp="20201112 09:55:44.496" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 136808317, 'wakeups': [136818346, 136828346, 136838347, 136848346, 136...</msg>
<status status="PASS" starttime="20201112 09:55:42.381" endtime="20201112 09:55:44.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.502" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 136808317, 'wakeups': [136818346, 136828346, 136838347, 136848346, 136...</msg>
<status status="PASS" starttime="20201112 09:55:44.499" endtime="20201112 09:55:44.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:44.505" endtime="20201112 09:55:44.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.378" endtime="20201112 09:55:44.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.376" endtime="20201112 09:55:44.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:44.516" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 5, 'wakeups': [136818346, 136828346, 136838347, 136848346, 136858347, 136868347, 136878347, 136888347, 136898347, 136908347, 136918347, 136928347, 136938347, 1...</msg>
<status status="PASS" starttime="20201112 09:55:44.512" endtime="20201112 09:55:44.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.526" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:44.524" endtime="20201112 09:55:44.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.531" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:44.529" endtime="20201112 09:55:44.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.519" endtime="20201112 09:55:44.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.541" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:55:44.539" endtime="20201112 09:55:44.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.546" level="INFO">VALUE: 136808317</msg>
<status status="PASS" starttime="20201112 09:55:44.544" endtime="20201112 09:55:44.547"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.534" endtime="20201112 09:55:44.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.554" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:44.553" endtime="20201112 09:55:44.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.557" level="INFO">VALUE: [136818346, 136828346, 136838347, 136848346, 136858347, 136868347, 136878347, 136888347, 136898347, 136908347, 136918347, 136928347, 136938347, 136948347, 136958347, 136968347, 136978347, 136988347, 136998347, 137008347, 137018347, 137028347, 137038347, 137048347, 137058347, 137068347, 137078347, 137088347, 137098347, 137108347, 137118347, 137128347, 137138347, 137148347, 137158347, 137168347, 137178347, 137188347, 137198347, 137208347, 137218347, 137228347, 137238347, 137248347, 137258347, 137268347, 137278347, 137288347, 137298347, 137308347, 137318347, 137328347, 137338347, 137348347, 137358347, 137368347, 137378347, 137388347, 137398347, 137408347, 137418347, 137428347, 137438347, 137448347, 137458347, 137468347, 137478347, 137488347, 137498347, 137508347, 137518347, 137528347, 137538347, 137548347, 137558347, 137568347, 137578347, 137588347, 137598347, 137608347, 137618347, 137628347, 137638347, 137648347, 137658347, 137668347, 137678347, 137688347, 137698347, 137708347, 137718347, 137728347, 137738347, 137748347, 137758347, 137768347, 137778347, 137788347, 137798347, 137808347]</msg>
<status status="PASS" starttime="20201112 09:55:44.555" endtime="20201112 09:55:44.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.549" endtime="20201112 09:55:44.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:44.564" endtime="20201112 09:55:44.856"></status>
</kw>
<msg timestamp="20201112 09:55:44.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023494792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033525264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:44.563" endtime="20201112 09:55:44.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023494792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033525264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:44.860" endtime="20201112 09:55:44.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:44.868" endtime="20201112 09:55:44.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.560" endtime="20201112 09:55:44.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.558" endtime="20201112 09:55:44.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:44.896" level="INFO">${RESULT} = {'time': [0.023494792, 0.033525264, 0.043525722, 0.053527264, 0.063527111, 0.073528875, 0.083529583, 0.093530319, 0.103531083, 0.113531792, 0.123532528, 0.133533264, 0.143534, 0.153534736, 0.163535472...</msg>
<status status="PASS" starttime="20201112 09:55:44.871" endtime="20201112 09:55:44.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.901" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:55:44.900" endtime="20201112 09:55:44.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.903" level="INFO">VALUE: 0.023494792</msg>
<status status="PASS" starttime="20201112 09:55:44.902" endtime="20201112 09:55:44.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.897" endtime="20201112 09:55:44.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.908" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:44.907" endtime="20201112 09:55:44.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.911" level="INFO">VALUE: [0.033525264, 0.043525722, 0.053527264, 0.063527111, 0.073528875, 0.083529583, 0.093530319, 0.103531083, 0.113531792, 0.123532528, 0.133533264, 0.143534, 0.153534736, 0.163535472, 0.173536194, 0.183536944, 0.193537667, 0.203538403, 0.213539139, 0.223539875, 0.233540625, 0.243541333, 0.253542083, 0.263542806, 0.273543542, 0.283544278, 0.293545014, 0.30354575, 0.313546486, 0.323547222, 0.333547958, 0.343548708, 0.353549431, 0.363550153, 0.373550903, 0.383551653, 0.393552375, 0.403553097, 0.413553833, 0.423554569, 0.433555319, 0.443556056, 0.453556792, 0.463557514, 0.473558264, 0.483559056, 0.493559764, 0.503560458, 0.513561194, 0.523561917, 0.533562653, 0.543563403, 0.553564111, 0.563564847, 0.573565569, 0.583566292, 0.593567028, 0.603567806, 0.613568486, 0.623569208, 0.633569944, 0.643570667, 0.653571403, 0.663572139, 0.673572903, 0.683573583, 0.693574333, 0.703575056, 0.713575778, 0.723576514, 0.73357725, 0.743577972, 0.753578708, 0.763579431, 0.773580153, 0.783580875, 0.793581625, 0.803582333, 0.813583111, 0.823583792, 0.833584528, 0.843585333, 0.853585986, 0.863586722, 0.873587472, 0.883588181, 0.893588931, 0.903589653, 0.913590389, 0.923591125, 0.933591847, 0.943592556, 0.953593292, 0.963594028, 0.973594778, 0.9835955, 0.993596236, 1.003596944, 1.013597681, 1.023598472] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:44.910" endtime="20201112 09:55:44.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.904" endtime="20201112 09:55:44.912"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:44.914" endtime="20201112 09:55:44.916"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:44.918" endtime="20201112 09:55:44.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.916" endtime="20201112 09:55:44.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.913" endtime="20201112 09:55:44.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.374" endtime="20201112 09:55:44.939"></status>
</kw>
<msg timestamp="20201112 09:55:44.939" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:44.948" endtime="20201112 09:55:47.059"></status>
</kw>
<msg timestamp="20201112 09:55:47.060" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 139372801, 'wakeups': [139382830, 139392830, 139402831, 139412830, 139...</msg>
<status status="PASS" starttime="20201112 09:55:44.946" endtime="20201112 09:55:47.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.066" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 139372801, 'wakeups': [139382830, 139392830, 139402831, 139412830, 139...</msg>
<status status="PASS" starttime="20201112 09:55:47.062" endtime="20201112 09:55:47.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.069" endtime="20201112 09:55:47.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.943" endtime="20201112 09:55:47.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.941" endtime="20201112 09:55:47.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:47.080" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 5, 'wakeups': [139382830, 139392830, 139402831, 139412830, 139422831, 139432831, 139442831, 139452831, 139462831, 139472831, 139482831, 139492831, 139502831, 1...</msg>
<status status="PASS" starttime="20201112 09:55:47.076" endtime="20201112 09:55:47.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.089" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:47.087" endtime="20201112 09:55:47.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.094" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:47.092" endtime="20201112 09:55:47.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.082" endtime="20201112 09:55:47.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.108" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:55:47.106" endtime="20201112 09:55:47.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.113" level="INFO">VALUE: 139372801</msg>
<status status="PASS" starttime="20201112 09:55:47.111" endtime="20201112 09:55:47.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.098" endtime="20201112 09:55:47.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.125" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:47.123" endtime="20201112 09:55:47.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.131" level="INFO">VALUE: [139382830, 139392830, 139402831, 139412830, 139422831, 139432831, 139442831, 139452831, 139462831, 139472831, 139482831, 139492831, 139502831, 139512831, 139522831, 139532831, 139542831, 139552831, 139562831, 139572831, 139582831, 139592831, 139602831, 139612831, 139622831, 139632831, 139642831, 139652831, 139662831, 139672831, 139682831, 139692831, 139702831, 139712831, 139722831, 139732831, 139742831, 139752831, 139762831, 139772831, 139782831, 139792831, 139802831, 139812831, 139822831, 139832831, 139842831, 139852831, 139862831, 139872831, 139882831, 139892831, 139902831, 139912831, 139922831, 139932831, 139942831, 139952831, 139962831, 139972831, 139982831, 139992831, 140002831, 140012831, 140022831, 140032831, 140042831, 140052831, 140062831, 140072831, 140082831, 140092831, 140102831, 140112831, 140122831, 140132831, 140142831, 140152831, 140162831, 140172831, 140182831, 140192831, 140202831, 140212831, 140222831, 140232831, 140242831, 140252831, 140262831, 140272831, 140282831, 140292831, 140302831, 140312831, 140322831, 140332831, 140342831, 140352831, 140362831, 140372831]</msg>
<status status="PASS" starttime="20201112 09:55:47.128" endtime="20201112 09:55:47.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.117" endtime="20201112 09:55:47.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.147" endtime="20201112 09:55:47.448"></status>
</kw>
<msg timestamp="20201112 09:55:47.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019700361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029730847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:47.144" endtime="20201112 09:55:47.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019700361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029730847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:47.452" endtime="20201112 09:55:47.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.460" endtime="20201112 09:55:47.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.138" endtime="20201112 09:55:47.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.134" endtime="20201112 09:55:47.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:47.487" level="INFO">${RESULT} = {'time': [0.019700361, 0.029730847, 0.039731361, 0.049732861, 0.059732708, 0.069734444, 0.079735181, 0.089735931, 0.099736667, 0.109737458, 0.119738111, 0.129738861, 0.139739597, 0.149740319, 0.159741...</msg>
<status status="PASS" starttime="20201112 09:55:47.463" endtime="20201112 09:55:47.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.491" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:55:47.490" endtime="20201112 09:55:47.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.493" level="INFO">VALUE: 0.019700361</msg>
<status status="PASS" starttime="20201112 09:55:47.492" endtime="20201112 09:55:47.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.488" endtime="20201112 09:55:47.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.500" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:47.498" endtime="20201112 09:55:47.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.502" level="INFO">VALUE: [0.029730847, 0.039731361, 0.049732861, 0.059732708, 0.069734444, 0.079735181, 0.089735931, 0.099736667, 0.109737458, 0.119738111, 0.129738861, 0.139739597, 0.149740319, 0.159741056, 0.169741792, 0.179742528, 0.189743264, 0.199744, 0.209744736, 0.219745472, 0.229746222, 0.239746944, 0.249747681, 0.259748403, 0.269749167, 0.279749875, 0.289750653, 0.299751347, 0.309752083, 0.319752819, 0.329753556, 0.339754292, 0.349755097, 0.359755764, 0.369756528, 0.379757236, 0.389757958, 0.399758694, 0.409759417, 0.419760139, 0.429760861, 0.439761597, 0.449762333, 0.459763069, 0.469763792, 0.479764514, 0.489765236, 0.499765986, 0.509766722, 0.519767431, 0.529768153, 0.539768889, 0.549769611, 0.559770389, 0.569771083, 0.579771819, 0.589772528, 0.599773278, 0.609774, 0.619774736, 0.629775458, 0.639776181, 0.649776917, 0.659777708, 0.669778389, 0.679779097, 0.689779875, 0.699780556, 0.709781292, 0.719782014, 0.72978275, 0.739783472, 0.749784208, 0.759784931, 0.769785667, 0.779786403, 0.789787125, 0.799787861, 0.809788625, 0.819789375, 0.829790069, 0.839790792, 0.849791542, 0.859792236, 0.869793, 0.879793694, 0.889794458, 0.899795153, 0.909795889, 0.919796639, 0.929797347, 0.939798083, 0.949798819, 0.959799542, 0.969800278, 0.979801, 0.98980175, 0.999802472, 1.009803194, 1.019803972] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:47.501" endtime="20201112 09:55:47.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.495" endtime="20201112 09:55:47.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.505" endtime="20201112 09:55:47.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:47.514" endtime="20201112 09:55:47.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.507" endtime="20201112 09:55:47.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.504" endtime="20201112 09:55:47.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.940" endtime="20201112 09:55:47.535"></status>
</kw>
<msg timestamp="20201112 09:55:47.535" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.543" endtime="20201112 09:55:49.655"></status>
</kw>
<msg timestamp="20201112 09:55:49.656" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 141968407, 'wakeups': [141978436, 141988436, 141998437, 142008436, 142...</msg>
<status status="PASS" starttime="20201112 09:55:47.541" endtime="20201112 09:55:49.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:49.662" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 141968407, 'wakeups': [141978436, 141988436, 141998437, 142008436, 142...</msg>
<status status="PASS" starttime="20201112 09:55:49.659" endtime="20201112 09:55:49.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:49.665" endtime="20201112 09:55:49.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.539" endtime="20201112 09:55:49.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.537" endtime="20201112 09:55:49.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:49.677" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 5, 'wakeups': [141978436, 141988436, 141998437, 142008436, 142018437, 142028437, 142038437, 142048437, 142058437, 142068437, 142078437, 142088437, 142098437, 1...</msg>
<status status="PASS" starttime="20201112 09:55:49.672" endtime="20201112 09:55:49.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:49.686" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:49.683" endtime="20201112 09:55:49.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:49.690" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:49.688" endtime="20201112 09:55:49.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.679" endtime="20201112 09:55:49.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:49.701" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:55:49.699" endtime="20201112 09:55:49.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:49.706" level="INFO">VALUE: 141968407</msg>
<status status="PASS" starttime="20201112 09:55:49.703" endtime="20201112 09:55:49.706"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.693" endtime="20201112 09:55:49.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:49.716" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:49.714" endtime="20201112 09:55:49.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:49.721" level="INFO">VALUE: [141978436, 141988436, 141998437, 142008436, 142018437, 142028437, 142038437, 142048437, 142058437, 142068437, 142078437, 142088437, 142098437, 142108437, 142118437, 142128437, 142138437, 142148437, 142158437, 142168437, 142178437, 142188437, 142198437, 142208437, 142218437, 142228437, 142238437, 142248437, 142258437, 142268437, 142278437, 142288437, 142298437, 142308437, 142318437, 142328437, 142338437, 142348437, 142358437, 142368437, 142378437, 142388437, 142398437, 142408437, 142418437, 142428437, 142438437, 142448437, 142458437, 142468437, 142478437, 142488437, 142498437, 142508437, 142518437, 142528437, 142538437, 142548437, 142558437, 142568437, 142578437, 142588437, 142598437, 142608437, 142618437, 142628437, 142638437, 142648437, 142658437, 142668437, 142678437, 142688437, 142698437, 142708437, 142718437, 142728437, 142738437, 142748437, 142758437, 142768437, 142778437, 142788437, 142798437, 142808437, 142818437, 142828437, 142838437, 142848437, 142858437, 142868437, 142878437, 142888437, 142898437, 142908437, 142918437, 142928437, 142938437, 142948437, 142958437, 142968437]</msg>
<status status="PASS" starttime="20201112 09:55:49.719" endtime="20201112 09:55:49.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.709" endtime="20201112 09:55:49.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:49.739" endtime="20201112 09:55:50.033"></status>
</kw>
<msg timestamp="20201112 09:55:50.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019623292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029653764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:49.734" endtime="20201112 09:55:50.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019623292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029653764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:50.037" endtime="20201112 09:55:50.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.045" endtime="20201112 09:55:50.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.729" endtime="20201112 09:55:50.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.725" endtime="20201112 09:55:50.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:50.071" level="INFO">${RESULT} = {'time': [0.019623292, 0.029653764, 0.03965425, 0.049655792, 0.059655653, 0.069657375, 0.079658097, 0.089658847, 0.099659625, 0.109660306, 0.119661097, 0.129661778, 0.1396625, 0.149663264, 0.159663986...</msg>
<status status="PASS" starttime="20201112 09:55:50.048" endtime="20201112 09:55:50.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.076" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:55:50.075" endtime="20201112 09:55:50.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.078" level="INFO">VALUE: 0.019623292</msg>
<status status="PASS" starttime="20201112 09:55:50.077" endtime="20201112 09:55:50.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.072" endtime="20201112 09:55:50.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.084" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:50.083" endtime="20201112 09:55:50.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.086" level="INFO">VALUE: [0.029653764, 0.03965425, 0.049655792, 0.059655653, 0.069657375, 0.079658097, 0.089658847, 0.099659625, 0.109660306, 0.119661097, 0.129661778, 0.1396625, 0.149663264, 0.159663986, 0.169664708, 0.179665458, 0.189666222, 0.199666931, 0.209667653, 0.219668375, 0.229669153, 0.239669847, 0.249670583, 0.259671319, 0.269672069, 0.279672792, 0.289673583, 0.29967425, 0.309675, 0.319675736, 0.3296765, 0.339677208, 0.349677931, 0.359678667, 0.369679417, 0.379680139, 0.389680889, 0.399681611, 0.409682361, 0.419683069, 0.429683819, 0.439684556, 0.449685278, 0.459686056, 0.469686736, 0.479687486, 0.489688194, 0.499688917, 0.509689653, 0.519690389, 0.529691139, 0.539691847, 0.549692569, 0.559693292, 0.569694069, 0.57969475, 0.589695486, 0.599696208, 0.609696944, 0.619697667, 0.629698403, 0.639699125, 0.649699861, 0.659700611, 0.669701306, 0.679702042, 0.689702792, 0.6997035, 0.709704236, 0.719704958, 0.729705694, 0.739706417, 0.749707194, 0.759707875, 0.769708611, 0.779709347, 0.789710069, 0.799710806, 0.809711542, 0.819712278, 0.829713028, 0.839713736, 0.849714472, 0.859715208, 0.869715931, 0.879716667, 0.889717389, 0.899718125, 0.909718861, 0.919719583, 0.929720375, 0.939721042, 0.949721792, 0.959722528, 0.969723278, 0.979723972, 0.989724708, 0.999725458, 1.009726181, 1.019726917] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:50.085" endtime="20201112 09:55:50.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.080" endtime="20201112 09:55:50.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.089" endtime="20201112 09:55:50.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:50.093" endtime="20201112 09:55:50.112"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.091" endtime="20201112 09:55:50.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.088" endtime="20201112 09:55:50.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.535" endtime="20201112 09:55:50.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.372" endtime="20201112 09:55:50.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.371" endtime="20201112 09:55:50.114"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:55:50.117" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.127" endtime="20201112 09:55:52.239"></status>
</kw>
<msg timestamp="20201112 09:55:52.240" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 144552261, 'wakeups': [144562298, 144572298, 144582297, 144592298, 144...</msg>
<status status="PASS" starttime="20201112 09:55:50.125" endtime="20201112 09:55:52.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.247" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 144552261, 'wakeups': [144562298, 144572298, 144582297, 144592298, 144...</msg>
<status status="PASS" starttime="20201112 09:55:52.243" endtime="20201112 09:55:52.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.250" endtime="20201112 09:55:52.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.121" endtime="20201112 09:55:52.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.119" endtime="20201112 09:55:52.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:52.262" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 6, 'wakeups': [144562298, 144572298, 144582297, 144592298, 144602298, 144612298, 144622298, 144632298, 144642298, 144652298, 144662298, 144672298, 144682298, 1...</msg>
<status status="PASS" starttime="20201112 09:55:52.258" endtime="20201112 09:55:52.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.271" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:52.269" endtime="20201112 09:55:52.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.276" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:52.274" endtime="20201112 09:55:52.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.264" endtime="20201112 09:55:52.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.287" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:55:52.284" endtime="20201112 09:55:52.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.291" level="INFO">VALUE: 144552261</msg>
<status status="PASS" starttime="20201112 09:55:52.289" endtime="20201112 09:55:52.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.279" endtime="20201112 09:55:52.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.302" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:52.300" endtime="20201112 09:55:52.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.307" level="INFO">VALUE: [144562298, 144572298, 144582297, 144592298, 144602298, 144612298, 144622298, 144632298, 144642298, 144652298, 144662298, 144672298, 144682298, 144692298, 144702298, 144712298, 144722298, 144732298, 144742298, 144752298, 144762298, 144772298, 144782298, 144792298, 144802298, 144812298, 144822298, 144832298, 144842298, 144852298, 144862298, 144872298, 144882298, 144892298, 144902298, 144912298, 144922298, 144932298, 144942298, 144952298, 144962298, 144972298, 144982298, 144992298, 145002298, 145012298, 145022298, 145032298, 145042298, 145052298, 145062298, 145072298, 145082298, 145092298, 145102298, 145112298, 145122298, 145132298, 145142298, 145152298, 145162298, 145172298, 145182298, 145192298, 145202298, 145212298, 145222298, 145232298, 145242298, 145252298, 145262298, 145272298, 145282298, 145292298, 145302298, 145312298, 145322298, 145332298, 145342298, 145352298, 145362298, 145372298, 145382298, 145392298, 145402298, 145412298, 145422298, 145432298, 145442298, 145452298, 145462298, 145472298, 145482298, 145492298, 145502298, 145512298, 145522298, 145532298, 145542298, 145552298]</msg>
<status status="PASS" starttime="20201112 09:55:52.304" endtime="20201112 09:55:52.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.294" endtime="20201112 09:55:52.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.318" endtime="20201112 09:55:52.611"></status>
</kw>
<msg timestamp="20201112 09:55:52.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024213153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034251139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:52.317" endtime="20201112 09:55:52.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024213153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034251139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:52.615" endtime="20201112 09:55:52.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.623" endtime="20201112 09:55:52.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.314" endtime="20201112 09:55:52.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.310" endtime="20201112 09:55:52.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:52.654" level="INFO">${RESULT} = {'time': [0.024213153, 0.034251139, 0.044252278, 0.054252306, 0.064254028, 0.074254778, 0.084255472, 0.094256222, 0.104256944, 0.114257694, 0.124258417, 0.134259167, 0.144259889, 0.154260639, 0.164261...</msg>
<status status="PASS" starttime="20201112 09:55:52.626" endtime="20201112 09:55:52.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.659" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:55:52.658" endtime="20201112 09:55:52.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.661" level="INFO">VALUE: 0.024213153</msg>
<status status="PASS" starttime="20201112 09:55:52.660" endtime="20201112 09:55:52.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.655" endtime="20201112 09:55:52.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.667" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:52.666" endtime="20201112 09:55:52.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.669" level="INFO">VALUE: [0.034251139, 0.044252278, 0.054252306, 0.064254028, 0.074254778, 0.084255472, 0.094256222, 0.104256944, 0.114257694, 0.124258417, 0.134259167, 0.144259889, 0.154260639, 0.164261361, 0.174262125, 0.184262833, 0.194263569, 0.204264306, 0.214265056, 0.224265778, 0.234266514, 0.24426725, 0.254267986, 0.264268722, 0.274269458, 0.284270194, 0.294270958, 0.304271667, 0.314272403, 0.324273153, 0.334273875, 0.344274611, 0.354275333, 0.364276069, 0.374276792, 0.384277528, 0.394278278, 0.404278986, 0.414279722, 0.424280458, 0.434281208, 0.444281931, 0.454282708, 0.464283361, 0.474284097, 0.484284847, 0.494285569, 0.504286292, 0.514287069, 0.52428775, 0.5342885, 0.544289222, 0.554289958, 0.564290694, 0.574291486, 0.584292194, 0.594292889, 0.604293625, 0.614294347, 0.624295069, 0.634295819, 0.644296528, 0.654297264, 0.664298, 0.674298736, 0.684299472, 0.694300208, 0.704300931, 0.714301681, 0.724302417, 0.734303139, 0.744303861, 0.754304583, 0.764305319, 0.774306056, 0.784306778, 0.794307514, 0.80430825, 0.814308986, 0.824309708, 0.834310444, 0.844311194, 0.854311917, 0.864312639, 0.874313389, 0.884314139, 0.894314847, 0.904315583, 0.914316319, 0.924317056, 0.934317764, 0.9443185, 0.954319264, 0.964319986, 0.974320694, 0.984321431, 0.994322167, 1.004322889, 1.014323625, 1.024324361] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:52.668" endtime="20201112 09:55:52.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.663" endtime="20201112 09:55:52.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.672" endtime="20201112 09:55:52.674"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:52.676" endtime="20201112 09:55:52.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.674" endtime="20201112 09:55:52.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.670" endtime="20201112 09:55:52.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.118" endtime="20201112 09:55:52.697"></status>
</kw>
<msg timestamp="20201112 09:55:52.697" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.705" endtime="20201112 09:55:54.817"></status>
</kw>
<msg timestamp="20201112 09:55:54.818" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 147130369, 'wakeups': [147140406, 147150406, 147160405, 147170406, 147...</msg>
<status status="PASS" starttime="20201112 09:55:52.703" endtime="20201112 09:55:54.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.824" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 147130369, 'wakeups': [147140406, 147150406, 147160405, 147170406, 147...</msg>
<status status="PASS" starttime="20201112 09:55:54.820" endtime="20201112 09:55:54.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:54.827" endtime="20201112 09:55:54.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.701" endtime="20201112 09:55:54.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.699" endtime="20201112 09:55:54.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:54.838" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 6, 'wakeups': [147140406, 147150406, 147160405, 147170406, 147180406, 147190406, 147200406, 147210406, 147220406, 147230406, 147240406, 147250406, 147260406, 1...</msg>
<status status="PASS" starttime="20201112 09:55:54.834" endtime="20201112 09:55:54.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.847" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:54.845" endtime="20201112 09:55:54.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.853" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:54.850" endtime="20201112 09:55:54.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.840" endtime="20201112 09:55:54.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.863" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:55:54.861" endtime="20201112 09:55:54.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.870" level="INFO">VALUE: 147130369</msg>
<status status="PASS" starttime="20201112 09:55:54.868" endtime="20201112 09:55:54.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.856" endtime="20201112 09:55:54.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.879" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:54.878" endtime="20201112 09:55:54.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.881" level="INFO">VALUE: [147140406, 147150406, 147160405, 147170406, 147180406, 147190406, 147200406, 147210406, 147220406, 147230406, 147240406, 147250406, 147260406, 147270406, 147280406, 147290406, 147300406, 147310406, 147320406, 147330406, 147340406, 147350406, 147360406, 147370406, 147380406, 147390406, 147400406, 147410406, 147420406, 147430406, 147440406, 147450406, 147460406, 147470406, 147480406, 147490406, 147500406, 147510406, 147520406, 147530406, 147540406, 147550406, 147560406, 147570406, 147580406, 147590406, 147600406, 147610406, 147620406, 147630406, 147640406, 147650406, 147660406, 147670406, 147680406, 147690406, 147700406, 147710406, 147720406, 147730406, 147740406, 147750406, 147760406, 147770406, 147780406, 147790406, 147800406, 147810406, 147820406, 147830406, 147840406, 147850406, 147860406, 147870406, 147880406, 147890406, 147900406, 147910406, 147920406, 147930406, 147940406, 147950406, 147960406, 147970406, 147980406, 147990406, 148000406, 148010406, 148020406, 148030406, 148040406, 148050406, 148060406, 148070406, 148080406, 148090406, 148100406, 148110406, 148120406, 148130406]</msg>
<status status="PASS" starttime="20201112 09:55:54.880" endtime="20201112 09:55:54.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.874" endtime="20201112 09:55:54.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:54.889" endtime="20201112 09:55:55.179"></status>
</kw>
<msg timestamp="20201112 09:55:55.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019455681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029493639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:54.887" endtime="20201112 09:55:55.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019455681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029493639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:55.183" endtime="20201112 09:55:55.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.191" endtime="20201112 09:55:55.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.884" endtime="20201112 09:55:55.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.883" endtime="20201112 09:55:55.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:55.218" level="INFO">${RESULT} = {'time': [0.019455681, 0.029493639, 0.039494819, 0.049494819, 0.059496528, 0.069497264, 0.079498014, 0.089498736, 0.099499486, 0.109500222, 0.119500958, 0.129501681, 0.139502417, 0.149503153, 0.159503...</msg>
<status status="PASS" starttime="20201112 09:55:55.194" endtime="20201112 09:55:55.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.222" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:55:55.221" endtime="20201112 09:55:55.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.224" level="INFO">VALUE: 0.019455681</msg>
<status status="PASS" starttime="20201112 09:55:55.223" endtime="20201112 09:55:55.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.219" endtime="20201112 09:55:55.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.230" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:55.229" endtime="20201112 09:55:55.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.233" level="INFO">VALUE: [0.029493639, 0.039494819, 0.049494819, 0.059496528, 0.069497264, 0.079498014, 0.089498736, 0.099499486, 0.109500222, 0.119500958, 0.129501681, 0.139502417, 0.149503153, 0.159503889, 0.169504625, 0.179505347, 0.189506097, 0.199506847, 0.209507569, 0.219508306, 0.229509028, 0.239509764, 0.2495105, 0.25951125, 0.269511986, 0.279512708, 0.289513458, 0.299514194, 0.309514917, 0.319515653, 0.329516403, 0.339517139, 0.349517861, 0.359518639, 0.369519333, 0.379520069, 0.389520806, 0.399521542, 0.409522278, 0.419523028, 0.429523806, 0.439524486, 0.449525222, 0.459525958, 0.469526694, 0.479527431, 0.489528167, 0.499528903, 0.509529639, 0.519530375, 0.529531111, 0.539531847, 0.549532583, 0.559533319, 0.569534083, 0.579534792, 0.589535556, 0.599536264, 0.609537014, 0.619537778, 0.629538458, 0.639539181, 0.649539944, 0.659540639, 0.669541389, 0.679542097, 0.689542917, 0.699543569, 0.709544306, 0.719545069, 0.72954575, 0.7395465, 0.749547236, 0.759547958, 0.769548681, 0.779549417, 0.789550153, 0.799550861, 0.809551597, 0.819552319, 0.829553083, 0.839553792, 0.849554528, 0.85955525, 0.869555986, 0.879556764, 0.889557444, 0.899558167, 0.909558903, 0.919559639, 0.929560375, 0.939561111, 0.949561847, 0.959562569, 0.969563292, 0.979564028, 0.98956475, 0.999565472, 1.009566222, 1.019566944] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:55.232" endtime="20201112 09:55:55.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.226" endtime="20201112 09:55:55.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.237" endtime="20201112 09:55:55.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:55.240" endtime="20201112 09:55:55.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.239" endtime="20201112 09:55:55.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.235" endtime="20201112 09:55:55.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.697" endtime="20201112 09:55:55.261"></status>
</kw>
<msg timestamp="20201112 09:55:55.261" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.270" endtime="20201112 09:55:57.381"></status>
</kw>
<msg timestamp="20201112 09:55:57.383" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 149694966, 'wakeups': [149705003, 149715003, 149725002, 149735003, 149...</msg>
<status status="PASS" starttime="20201112 09:55:55.268" endtime="20201112 09:55:57.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.389" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 149694966, 'wakeups': [149705003, 149715003, 149725002, 149735003, 149...</msg>
<status status="PASS" starttime="20201112 09:55:57.385" endtime="20201112 09:55:57.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.392" endtime="20201112 09:55:57.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.265" endtime="20201112 09:55:57.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.263" endtime="20201112 09:55:57.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:57.403" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 6, 'wakeups': [149705003, 149715003, 149725002, 149735003, 149745003, 149755003, 149765003, 149775003, 149785003, 149795003, 149805003, 149815003, 149825003, 1...</msg>
<status status="PASS" starttime="20201112 09:55:57.399" endtime="20201112 09:55:57.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.412" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:57.410" endtime="20201112 09:55:57.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.417" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:57.415" endtime="20201112 09:55:57.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.405" endtime="20201112 09:55:57.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.428" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:55:57.425" endtime="20201112 09:55:57.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.432" level="INFO">VALUE: 149694966</msg>
<status status="PASS" starttime="20201112 09:55:57.430" endtime="20201112 09:55:57.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.420" endtime="20201112 09:55:57.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.442" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:57.440" endtime="20201112 09:55:57.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.444" level="INFO">VALUE: [149705003, 149715003, 149725002, 149735003, 149745003, 149755003, 149765003, 149775003, 149785003, 149795003, 149805003, 149815003, 149825003, 149835003, 149845003, 149855003, 149865003, 149875003, 149885003, 149895003, 149905003, 149915003, 149925003, 149935003, 149945003, 149955003, 149965003, 149975003, 149985003, 149995003, 150005003, 150015003, 150025003, 150035003, 150045003, 150055003, 150065003, 150075003, 150085003, 150095003, 150105003, 150115003, 150125003, 150135003, 150145003, 150155003, 150165003, 150175003, 150185003, 150195003, 150205003, 150215003, 150225003, 150235003, 150245003, 150255003, 150265003, 150275003, 150285003, 150295003, 150305003, 150315003, 150325003, 150335003, 150345003, 150355003, 150365003, 150375003, 150385003, 150395003, 150405003, 150415003, 150425003, 150435003, 150445003, 150455003, 150465003, 150475003, 150485003, 150495003, 150505003, 150515003, 150525003, 150535003, 150545003, 150555003, 150565003, 150575003, 150585003, 150595003, 150605003, 150615003, 150625003, 150635003, 150645003, 150655003, 150665003, 150675003, 150685003, 150695003]</msg>
<status status="PASS" starttime="20201112 09:55:57.443" endtime="20201112 09:55:57.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.435" endtime="20201112 09:55:57.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.452" endtime="20201112 09:55:57.744"></status>
</kw>
<msg timestamp="20201112 09:55:57.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019467069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029505375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:57.450" endtime="20201112 09:55:57.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019467069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029505375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:57.748" endtime="20201112 09:55:57.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.756" endtime="20201112 09:55:57.757"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.448" endtime="20201112 09:55:57.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.446" endtime="20201112 09:55:57.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:57.782" level="INFO">${RESULT} = {'time': [0.019467069, 0.029505375, 0.039506542, 0.049506528, 0.059508264, 0.069509014, 0.079509736, 0.089510472, 0.09951125, 0.109511958, 0.119512681, 0.129513417, 0.139514153, 0.149514889, 0.1595156...</msg>
<status status="PASS" starttime="20201112 09:55:57.759" endtime="20201112 09:55:57.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.787" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:55:57.786" endtime="20201112 09:55:57.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.789" level="INFO">VALUE: 0.019467069</msg>
<status status="PASS" starttime="20201112 09:55:57.788" endtime="20201112 09:55:57.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.783" endtime="20201112 09:55:57.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.795" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:57.794" endtime="20201112 09:55:57.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.797" level="INFO">VALUE: [0.029505375, 0.039506542, 0.049506528, 0.059508264, 0.069509014, 0.079509736, 0.089510472, 0.09951125, 0.109511958, 0.119512681, 0.129513417, 0.139514153, 0.149514889, 0.159515639, 0.169516361, 0.179517181, 0.189517833, 0.199518569, 0.209519306, 0.219520042, 0.229520778, 0.239521542, 0.24952225, 0.259522972, 0.269523722, 0.279524458, 0.289525194, 0.299525931, 0.309526667, 0.319527403, 0.329528153, 0.339528861, 0.349529611, 0.359530333, 0.369531083, 0.379531833, 0.389532569, 0.399533278, 0.409534014, 0.419534736, 0.429535472, 0.439536194, 0.449536944, 0.459537667, 0.469538444, 0.479539111, 0.489539847, 0.499540597, 0.509541319, 0.519542028, 0.529542778, 0.5395435, 0.54954425, 0.559544958, 0.569545681, 0.579546417, 0.589547139, 0.599547875, 0.609548611, 0.619549333, 0.629550083, 0.639550861, 0.649551583, 0.65955225, 0.669552986, 0.679553722, 0.689554472, 0.699555181, 0.709555903, 0.719556639, 0.729557361, 0.739558097, 0.749558833, 0.759559569, 0.769560292, 0.779561028, 0.78956175, 0.799562486, 0.809563222, 0.819563944, 0.829564681, 0.839565417, 0.849566167, 0.859566861, 0.869567597, 0.879568389, 0.889569056, 0.899569792, 0.909570556, 0.91957125, 0.929571986, 0.939572708, 0.949573444, 0.959574167, 0.969574903, 0.979575653, 0.989576375, 0.999577111, 1.009577847, 1.019578583] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:57.796" endtime="20201112 09:55:57.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.791" endtime="20201112 09:55:57.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.800" endtime="20201112 09:55:57.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:57.804" endtime="20201112 09:55:57.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.802" endtime="20201112 09:55:57.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.799" endtime="20201112 09:55:57.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.262" endtime="20201112 09:55:57.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.115" endtime="20201112 09:55:57.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.115" endtime="20201112 09:55:57.825"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:55:57.828" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.841" endtime="20201112 09:55:59.953"></status>
</kw>
<msg timestamp="20201112 09:55:59.954" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 152266452, 'wakeups': [152276498, 152286497, 152296497, 152306497, 152...</msg>
<status status="PASS" starttime="20201112 09:55:57.839" endtime="20201112 09:55:59.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.961" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 152266452, 'wakeups': [152276498, 152286497, 152296497, 152306497, 152...</msg>
<status status="PASS" starttime="20201112 09:55:59.957" endtime="20201112 09:55:59.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:59.963" endtime="20201112 09:55:59.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.832" endtime="20201112 09:55:59.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.830" endtime="20201112 09:55:59.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:59.975" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 7, 'wakeups': [152276498, 152286497, 152296497, 152306497, 152316497, 152326497, 152336497, 152346497, 152356497, 152366497, 152376497, 152386497, 152396497, 1...</msg>
<status status="PASS" starttime="20201112 09:55:59.970" endtime="20201112 09:55:59.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.984" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:59.982" endtime="20201112 09:55:59.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.988" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:59.986" endtime="20201112 09:55:59.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.977" endtime="20201112 09:55:59.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.999" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:55:59.997" endtime="20201112 09:56:00.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.004" level="INFO">VALUE: 152266452</msg>
<status status="PASS" starttime="20201112 09:56:00.002" endtime="20201112 09:56:00.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.991" endtime="20201112 09:56:00.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.015" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:00.012" endtime="20201112 09:56:00.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.018" level="INFO">VALUE: [152276498, 152286497, 152296497, 152306497, 152316497, 152326497, 152336497, 152346497, 152356497, 152366497, 152376497, 152386497, 152396497, 152406497, 152416497, 152426497, 152436497, 152446497, 152456497, 152466497, 152476497, 152486497, 152496497, 152506497, 152516497, 152526497, 152536497, 152546497, 152556497, 152566497, 152576497, 152586497, 152596497, 152606497, 152616497, 152626497, 152636497, 152646497, 152656497, 152666497, 152676497, 152686497, 152696497, 152706497, 152716497, 152726497, 152736497, 152746497, 152756497, 152766497, 152776497, 152786497, 152796497, 152806497, 152816497, 152826497, 152836497, 152846497, 152856497, 152866497, 152876497, 152886497, 152896497, 152906497, 152916497, 152926497, 152936497, 152946497, 152956497, 152966497, 152976497, 152986497, 152996497, 153006497, 153016497, 153026497, 153036497, 153046497, 153056497, 153066497, 153076497, 153086497, 153096497, 153106497, 153116497, 153126497, 153136497, 153146497, 153156497, 153166497, 153176497, 153186497, 153196497, 153206497, 153216497, 153226497, 153236497, 153246497, 153256497, 153266497]</msg>
<status status="PASS" starttime="20201112 09:56:00.017" endtime="20201112 09:56:00.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.007" endtime="20201112 09:56:00.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.026" endtime="20201112 09:56:00.316"></status>
</kw>
<msg timestamp="20201112 09:56:00.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027436972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037483611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:00.024" endtime="20201112 09:56:00.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027436972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037483611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:00.320" endtime="20201112 09:56:00.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.328" endtime="20201112 09:56:00.330"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.021" endtime="20201112 09:56:00.330"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.019" endtime="20201112 09:56:00.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:00.355" level="INFO">${RESULT} = {'time': [0.027436972, 0.037483611, 0.047483958, 0.057484681, 0.067485431, 0.077486167, 0.087486875, 0.097487625, 0.107488347, 0.117489083, 0.127489847, 0.137490556, 0.147491292, 0.157492028, 0.167492...</msg>
<status status="PASS" starttime="20201112 09:56:00.331" endtime="20201112 09:56:00.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.360" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:56:00.359" endtime="20201112 09:56:00.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.362" level="INFO">VALUE: 0.027436972</msg>
<status status="PASS" starttime="20201112 09:56:00.361" endtime="20201112 09:56:00.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.356" endtime="20201112 09:56:00.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.368" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:00.367" endtime="20201112 09:56:00.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.370" level="INFO">VALUE: [0.037483611, 0.047483958, 0.057484681, 0.067485431, 0.077486167, 0.087486875, 0.097487625, 0.107488347, 0.117489083, 0.127489847, 0.137490556, 0.147491292, 0.157492028, 0.167492778, 0.177493528, 0.187494319, 0.197494972, 0.207495708, 0.217496444, 0.227497194, 0.237497931, 0.247498653, 0.257499444, 0.267500139, 0.277500861, 0.287501583, 0.297502333, 0.307503056, 0.317503819, 0.327504542, 0.337505264, 0.347506014, 0.35750675, 0.367507472, 0.377508264, 0.387508944, 0.397509694, 0.407510417, 0.417511167, 0.427511889, 0.437512639, 0.447513389, 0.457514125, 0.467514833, 0.477515597, 0.487516306, 0.497517042, 0.507517764, 0.5175185, 0.527519236, 0.537519958, 0.547520681, 0.557521417, 0.567522139, 0.577522889, 0.587523625, 0.597524333, 0.607525069, 0.617525806, 0.627526542, 0.637527264, 0.647527986, 0.657528736, 0.667529444, 0.677530181, 0.687530903, 0.697531639, 0.707532375, 0.717533111, 0.727533819, 0.737534556, 0.747535292, 0.757536028, 0.76753675, 0.7775375, 0.787538208, 0.797538944, 0.807539667, 0.817540403, 0.827541125, 0.837541931, 0.847542597, 0.857543333, 0.867544056, 0.877544792, 0.887545514, 0.897546292, 0.907546986, 0.917547708, 0.927548444, 0.937549194, 0.947549917, 0.957550639, 0.967551361, 0.977552111, 0.987552833, 0.997553583, 1.007554292, 1.017555042, 1.02755575] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:00.369" endtime="20201112 09:56:00.370"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.364" endtime="20201112 09:56:00.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.373" endtime="20201112 09:56:00.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:00.377" endtime="20201112 09:56:00.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.375" endtime="20201112 09:56:00.397"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.371" endtime="20201112 09:56:00.397"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.829" endtime="20201112 09:56:00.398"></status>
</kw>
<msg timestamp="20201112 09:56:00.398" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.406" endtime="20201112 09:56:02.517"></status>
</kw>
<msg timestamp="20201112 09:56:02.519" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 154831430, 'wakeups': [154841476, 154851475, 154861475, 154871475, 154...</msg>
<status status="PASS" starttime="20201112 09:56:00.405" endtime="20201112 09:56:02.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.525" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 154831430, 'wakeups': [154841476, 154851475, 154861475, 154871475, 154...</msg>
<status status="PASS" starttime="20201112 09:56:02.521" endtime="20201112 09:56:02.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:02.527" endtime="20201112 09:56:02.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.402" endtime="20201112 09:56:02.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.400" endtime="20201112 09:56:02.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:02.539" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 7, 'wakeups': [154841476, 154851475, 154861475, 154871475, 154881475, 154891475, 154901475, 154911475, 154921475, 154931475, 154941475, 154951475, 154961475, 1...</msg>
<status status="PASS" starttime="20201112 09:56:02.535" endtime="20201112 09:56:02.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.549" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:02.547" endtime="20201112 09:56:02.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.553" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:02.551" endtime="20201112 09:56:02.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.542" endtime="20201112 09:56:02.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.566" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:56:02.564" endtime="20201112 09:56:02.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.571" level="INFO">VALUE: 154831430</msg>
<status status="PASS" starttime="20201112 09:56:02.569" endtime="20201112 09:56:02.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.559" endtime="20201112 09:56:02.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.582" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:02.580" endtime="20201112 09:56:02.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.587" level="INFO">VALUE: [154841476, 154851475, 154861475, 154871475, 154881475, 154891475, 154901475, 154911475, 154921475, 154931475, 154941475, 154951475, 154961475, 154971475, 154981475, 154991475, 155001475, 155011475, 155021475, 155031475, 155041475, 155051475, 155061475, 155071475, 155081475, 155091475, 155101475, 155111475, 155121475, 155131475, 155141475, 155151475, 155161475, 155171475, 155181475, 155191475, 155201475, 155211475, 155221475, 155231475, 155241475, 155251475, 155261475, 155271475, 155281475, 155291475, 155301475, 155311475, 155321475, 155331475, 155341475, 155351475, 155361475, 155371475, 155381475, 155391475, 155401475, 155411475, 155421475, 155431475, 155441475, 155451475, 155461475, 155471475, 155481475, 155491475, 155501475, 155511475, 155521475, 155531475, 155541475, 155551475, 155561475, 155571475, 155581475, 155591475, 155601475, 155611475, 155621475, 155631475, 155641475, 155651475, 155661475, 155671475, 155681475, 155691475, 155701475, 155711475, 155721475, 155731475, 155741475, 155751475, 155761475, 155771475, 155781475, 155791475, 155801475, 155811475, 155821475, 155831475]</msg>
<status status="PASS" starttime="20201112 09:56:02.584" endtime="20201112 09:56:02.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.574" endtime="20201112 09:56:02.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:02.600" endtime="20201112 09:56:02.891"></status>
</kw>
<msg timestamp="20201112 09:56:02.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019497431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029544097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:02.598" endtime="20201112 09:56:02.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019497431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029544097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:02.895" endtime="20201112 09:56:02.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:02.902" endtime="20201112 09:56:02.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.594" endtime="20201112 09:56:02.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.590" endtime="20201112 09:56:02.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:02.930" level="INFO">${RESULT} = {'time': [0.019497431, 0.029544097, 0.039544444, 0.049545153, 0.059545889, 0.069546611, 0.079547347, 0.089548083, 0.099548819, 0.109549556, 0.119550306, 0.129551028, 0.13955175, 0.1495525, 0.159553222...</msg>
<status status="PASS" starttime="20201112 09:56:02.906" endtime="20201112 09:56:02.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.935" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:56:02.934" endtime="20201112 09:56:02.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.937" level="INFO">VALUE: 0.019497431</msg>
<status status="PASS" starttime="20201112 09:56:02.936" endtime="20201112 09:56:02.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.931" endtime="20201112 09:56:02.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.945" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:02.943" endtime="20201112 09:56:02.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.947" level="INFO">VALUE: [0.029544097, 0.039544444, 0.049545153, 0.059545889, 0.069546611, 0.079547347, 0.089548083, 0.099548819, 0.109549556, 0.119550306, 0.129551028, 0.13955175, 0.1495525, 0.159553222, 0.169553958, 0.179554694, 0.189555486, 0.199556167, 0.209556958, 0.219557653, 0.229558389, 0.239559111, 0.249559847, 0.259560583, 0.269561333, 0.279562056, 0.289562792, 0.299563542, 0.309564278, 0.319565014, 0.329565736, 0.339566472, 0.349567208, 0.359567944, 0.369568667, 0.379569389, 0.389570125, 0.399570861, 0.409571583, 0.419572306, 0.429573042, 0.439573778, 0.4495745, 0.459575292, 0.469575958, 0.479576681, 0.489577417, 0.499578139, 0.509578944, 0.519579653, 0.529580347, 0.539581083, 0.549581792, 0.559582528, 0.56958325, 0.579583986, 0.589584736, 0.599585458, 0.609586181, 0.619586972, 0.629587639, 0.639588361, 0.649589111, 0.659589819, 0.669590583, 0.679591278, 0.689592028, 0.699592736, 0.709593472, 0.719594194, 0.729594944, 0.739595681, 0.749596417, 0.759597125, 0.769597889, 0.779598583, 0.789599319, 0.799600056, 0.809600847, 0.819601514, 0.82960225, 0.839602986, 0.849603708, 0.859604431, 0.869605181, 0.879605903, 0.889606625, 0.899607347, 0.909608083, 0.919608833, 0.929609569, 0.939610278, 0.949611014, 0.959611792, 0.969612486, 0.979613194, 0.989613931, 0.999614653, 1.009615458, 1.019616139] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:02.946" endtime="20201112 09:56:02.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.939" endtime="20201112 09:56:02.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:02.950" endtime="20201112 09:56:02.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:02.954" endtime="20201112 09:56:02.973"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.952" endtime="20201112 09:56:02.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.948" endtime="20201112 09:56:02.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.399" endtime="20201112 09:56:02.975"></status>
</kw>
<msg timestamp="20201112 09:56:02.975" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:02.983" endtime="20201112 09:56:05.095"></status>
</kw>
<msg timestamp="20201112 09:56:05.097" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 157408403, 'wakeups': [157418448, 157428448, 157438448, 157448448, 157...</msg>
<status status="PASS" starttime="20201112 09:56:02.982" endtime="20201112 09:56:05.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.103" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 157408403, 'wakeups': [157418448, 157428448, 157438448, 157448448, 157...</msg>
<status status="PASS" starttime="20201112 09:56:05.099" endtime="20201112 09:56:05.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:05.105" endtime="20201112 09:56:05.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.979" endtime="20201112 09:56:05.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.977" endtime="20201112 09:56:05.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:05.117" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 7, 'wakeups': [157418448, 157428448, 157438448, 157448448, 157458448, 157468448, 157478448, 157488448, 157498448, 157508448, 157518448, 157528448, 157538448, 1...</msg>
<status status="PASS" starttime="20201112 09:56:05.113" endtime="20201112 09:56:05.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.126" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:05.124" endtime="20201112 09:56:05.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.130" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:05.128" endtime="20201112 09:56:05.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.119" endtime="20201112 09:56:05.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.141" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:56:05.139" endtime="20201112 09:56:05.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.146" level="INFO">VALUE: 157408403</msg>
<status status="PASS" starttime="20201112 09:56:05.144" endtime="20201112 09:56:05.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.134" endtime="20201112 09:56:05.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.157" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:05.155" endtime="20201112 09:56:05.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.162" level="INFO">VALUE: [157418448, 157428448, 157438448, 157448448, 157458448, 157468448, 157478448, 157488448, 157498448, 157508448, 157518448, 157528448, 157538448, 157548448, 157558448, 157568448, 157578448, 157588448, 157598448, 157608448, 157618448, 157628448, 157638448, 157648448, 157658448, 157668448, 157678448, 157688448, 157698448, 157708448, 157718448, 157728448, 157738448, 157748448, 157758448, 157768448, 157778448, 157788448, 157798448, 157808448, 157818448, 157828448, 157838448, 157848448, 157858448, 157868448, 157878448, 157888448, 157898448, 157908448, 157918448, 157928448, 157938448, 157948448, 157958448, 157968448, 157978448, 157988448, 157998448, 158008448, 158018448, 158028448, 158038448, 158048448, 158058448, 158068448, 158078448, 158088448, 158098448, 158108448, 158118448, 158128448, 158138448, 158148448, 158158448, 158168448, 158178448, 158188448, 158198448, 158208448, 158218448, 158228448, 158238448, 158248448, 158258448, 158268448, 158278448, 158288448, 158298448, 158308448, 158318448, 158328448, 158338448, 158348448, 158358448, 158368448, 158378448, 158388448, 158398448, 158408448]</msg>
<status status="PASS" starttime="20201112 09:56:05.160" endtime="20201112 09:56:05.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.150" endtime="20201112 09:56:05.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:05.181" endtime="20201112 09:56:05.475"></status>
</kw>
<msg timestamp="20201112 09:56:05.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019647042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029693014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:05.178" endtime="20201112 09:56:05.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019647042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029693014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:05.479" endtime="20201112 09:56:05.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:05.486" endtime="20201112 09:56:05.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.170" endtime="20201112 09:56:05.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.166" endtime="20201112 09:56:05.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:05.513" level="INFO">${RESULT} = {'time': [0.019647042, 0.029693014, 0.039694333, 0.049695069, 0.059695806, 0.069696542, 0.079697361, 0.089698028, 0.09969875, 0.109699486, 0.119700236, 0.129700958, 0.139701681, 0.149702431, 0.1597031...</msg>
<status status="PASS" starttime="20201112 09:56:05.490" endtime="20201112 09:56:05.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.518" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:56:05.516" endtime="20201112 09:56:05.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.520" level="INFO">VALUE: 0.019647042</msg>
<status status="PASS" starttime="20201112 09:56:05.519" endtime="20201112 09:56:05.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.514" endtime="20201112 09:56:05.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.525" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:05.524" endtime="20201112 09:56:05.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.527" level="INFO">VALUE: [0.029693014, 0.039694333, 0.049695069, 0.059695806, 0.069696542, 0.079697361, 0.089698028, 0.09969875, 0.109699486, 0.119700236, 0.129700958, 0.139701681, 0.149702431, 0.159703153, 0.169703889, 0.179704625, 0.189705389, 0.199706097, 0.209706833, 0.219707569, 0.229708306, 0.239709056, 0.249709792, 0.2597105, 0.26971125, 0.279711986, 0.289712736, 0.299713458, 0.30971425, 0.319714931, 0.329715694, 0.339716403, 0.349717139, 0.359717931, 0.369718597, 0.379719347, 0.389720069, 0.399720833, 0.409721542, 0.419722278, 0.429723028, 0.43972375, 0.449724486, 0.459725222, 0.469725944, 0.479726694, 0.489727417, 0.499728111, 0.509728861, 0.519729583, 0.529730319, 0.539731028, 0.549731778, 0.559732486, 0.569733236, 0.579733958, 0.589734681, 0.599735403, 0.609736153, 0.619736875, 0.629737611, 0.639738333, 0.649739069, 0.659739792, 0.669740528, 0.67974125, 0.689741972, 0.699742708, 0.709743444, 0.719744167, 0.729744917, 0.739745625, 0.749746361, 0.759747083, 0.769747847, 0.779748556, 0.789749278, 0.79975, 0.809750736, 0.819751486, 0.829752194, 0.839752917, 0.849753667, 0.859754417, 0.869755111, 0.879755847, 0.889756569, 0.899757333, 0.909758042, 0.919758764, 0.9297595, 0.939760222, 0.949760972, 0.959761681, 0.969762458, 0.979763153, 0.989763875, 0.999764625, 1.009765347, 1.019766083] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:05.526" endtime="20201112 09:56:05.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.521" endtime="20201112 09:56:05.528"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:05.531" endtime="20201112 09:56:05.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:05.535" endtime="20201112 09:56:05.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.533" endtime="20201112 09:56:05.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.529" endtime="20201112 09:56:05.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.976" endtime="20201112 09:56:05.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.826" endtime="20201112 09:56:05.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.826" endtime="20201112 09:56:05.556"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:56:05.559" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:05.569" endtime="20201112 09:56:07.681"></status>
</kw>
<msg timestamp="20201112 09:56:07.683" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 159994389, 'wakeups': [160004442, 160014443, 160024443, 160034443, 160...</msg>
<status status="PASS" starttime="20201112 09:56:05.568" endtime="20201112 09:56:07.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:07.689" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 159994389, 'wakeups': [160004442, 160014443, 160024443, 160034443, 160...</msg>
<status status="PASS" starttime="20201112 09:56:07.685" endtime="20201112 09:56:07.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:07.692" endtime="20201112 09:56:07.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.565" endtime="20201112 09:56:07.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.562" endtime="20201112 09:56:07.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:07.703" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 8, 'wakeups': [160004442, 160014443, 160024443, 160034443, 160044443, 160054443, 160064443, 160074443, 160084443, 160094443, 160104443, 160114443, 160124443, 1...</msg>
<status status="PASS" starttime="20201112 09:56:07.699" endtime="20201112 09:56:07.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:07.712" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:07.710" endtime="20201112 09:56:07.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:07.717" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:07.715" endtime="20201112 09:56:07.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.705" endtime="20201112 09:56:07.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:07.728" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:56:07.726" endtime="20201112 09:56:07.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:07.732" level="INFO">VALUE: 159994389</msg>
<status status="PASS" starttime="20201112 09:56:07.730" endtime="20201112 09:56:07.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.720" endtime="20201112 09:56:07.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:07.743" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:07.741" endtime="20201112 09:56:07.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:07.748" level="INFO">VALUE: [160004442, 160014443, 160024443, 160034443, 160044443, 160054443, 160064443, 160074443, 160084443, 160094443, 160104443, 160114443, 160124443, 160134443, 160144443, 160154443, 160164443, 160174443, 160184443, 160194443, 160204443, 160214443, 160224443, 160234443, 160244443, 160254443, 160264443, 160274443, 160284443, 160294443, 160304443, 160314443, 160324443, 160334443, 160344443, 160354443, 160364443, 160374443, 160384443, 160394443, 160404443, 160414443, 160424443, 160434443, 160444443, 160454443, 160464443, 160474443, 160484443, 160494443, 160504443, 160514443, 160524443, 160534443, 160544443, 160554443, 160564443, 160574443, 160584443, 160594443, 160604443, 160614443, 160624443, 160634443, 160644443, 160654443, 160664443, 160674443, 160684443, 160694443, 160704443, 160714443, 160724443, 160734443, 160744443, 160754443, 160764443, 160774443, 160784443, 160794443, 160804443, 160814443, 160824443, 160834443, 160844443, 160854443, 160864443, 160874443, 160884443, 160894443, 160904443, 160914443, 160924443, 160934443, 160944443, 160954443, 160964443, 160974443, 160984443, 160994443]</msg>
<status status="PASS" starttime="20201112 09:56:07.746" endtime="20201112 09:56:07.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.736" endtime="20201112 09:56:07.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:07.761" endtime="20201112 09:56:08.054"></status>
</kw>
<msg timestamp="20201112 09:56:08.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024507264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034561861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:07.760" endtime="20201112 09:56:08.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024507264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034561861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:08.058" endtime="20201112 09:56:08.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.065" endtime="20201112 09:56:08.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.756" endtime="20201112 09:56:08.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.752" endtime="20201112 09:56:08.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:08.093" level="INFO">${RESULT} = {'time': [0.024507264, 0.034561861, 0.044562944, 0.054563486, 0.064564417, 0.074564958, 0.084565889, 0.094566625, 0.104567361, 0.114567889, 0.124568833, 0.134569347, 0.144570083, 0.154571028, 0.164571...</msg>
<status status="PASS" starttime="20201112 09:56:08.069" endtime="20201112 09:56:08.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.098" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:56:08.097" endtime="20201112 09:56:08.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.100" level="INFO">VALUE: 0.024507264</msg>
<status status="PASS" starttime="20201112 09:56:08.099" endtime="20201112 09:56:08.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.094" endtime="20201112 09:56:08.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.106" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:08.105" endtime="20201112 09:56:08.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.108" level="INFO">VALUE: [0.034561861, 0.044562944, 0.054563486, 0.064564417, 0.074564958, 0.084565889, 0.094566625, 0.104567361, 0.114567889, 0.124568833, 0.134569347, 0.144570083, 0.154571028, 0.16457175, 0.174572514, 0.184573028, 0.194573764, 0.204574486, 0.214575431, 0.224576181, 0.234576736, 0.244577431, 0.254578417, 0.264578903, 0.274579847, 0.284580375, 0.294581319, 0.304582042, 0.314582778, 0.324583306, 0.334584264, 0.344584792, 0.354585542, 0.364586472, 0.374587236, 0.384587931, 0.394588486, 0.404589222, 0.414589944, 0.424590889, 0.434591611, 0.444592181, 0.454592917, 0.464593806, 0.474594319, 0.48459525, 0.494595792, 0.504596722, 0.514597444, 0.524598167, 0.534598708, 0.544599625, 0.554600153, 0.564600875, 0.574601819, 0.584602569, 0.594603292, 0.604603792, 0.614604556, 0.624605264, 0.634606264, 0.644606931, 0.654607458, 0.664608222, 0.674609111, 0.684609639, 0.694610625, 0.704611153, 0.714612028, 0.724612764, 0.734613542, 0.744614014, 0.754614958, 0.764615486, 0.774616208, 0.784617139, 0.794617861, 0.804618597, 0.814619125, 0.824619847, 0.834620639, 0.844621528, 0.85462225, 0.864622764, 0.8746235, 0.884624444, 0.894624972, 0.904625889, 0.914626431, 0.924627361, 0.934628097, 0.944628833, 0.954629347, 0.964630278, 0.974630819, 0.984631597, 0.994632486, 1.004633194, 1.014633931, 1.024634472] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:08.107" endtime="20201112 09:56:08.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.102" endtime="20201112 09:56:08.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.111" endtime="20201112 09:56:08.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:08.115" endtime="20201112 09:56:08.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.113" endtime="20201112 09:56:08.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.110" endtime="20201112 09:56:08.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.560" endtime="20201112 09:56:08.136"></status>
</kw>
<msg timestamp="20201112 09:56:08.136" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.149" endtime="20201112 09:56:10.261"></status>
</kw>
<msg timestamp="20201112 09:56:10.262" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 162574239, 'wakeups': [162584292, 162594293, 162604293, 162614293, 162...</msg>
<status status="PASS" starttime="20201112 09:56:08.143" endtime="20201112 09:56:10.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.268" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 162574239, 'wakeups': [162584292, 162594293, 162604293, 162614293, 162...</msg>
<status status="PASS" starttime="20201112 09:56:10.264" endtime="20201112 09:56:10.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:10.271" endtime="20201112 09:56:10.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.140" endtime="20201112 09:56:10.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.138" endtime="20201112 09:56:10.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:10.282" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 8, 'wakeups': [162584292, 162594293, 162604293, 162614293, 162624293, 162634293, 162644293, 162654293, 162664293, 162674293, 162684293, 162694293, 162704293, 1...</msg>
<status status="PASS" starttime="20201112 09:56:10.278" endtime="20201112 09:56:10.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.293" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:10.291" endtime="20201112 09:56:10.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.298" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:10.296" endtime="20201112 09:56:10.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.284" endtime="20201112 09:56:10.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.309" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:56:10.307" endtime="20201112 09:56:10.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.313" level="INFO">VALUE: 162574239</msg>
<status status="PASS" starttime="20201112 09:56:10.311" endtime="20201112 09:56:10.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.301" endtime="20201112 09:56:10.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.324" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:10.322" endtime="20201112 09:56:10.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.329" level="INFO">VALUE: [162584292, 162594293, 162604293, 162614293, 162624293, 162634293, 162644293, 162654293, 162664293, 162674293, 162684293, 162694293, 162704293, 162714293, 162724293, 162734293, 162744293, 162754293, 162764293, 162774293, 162784293, 162794293, 162804293, 162814293, 162824293, 162834293, 162844293, 162854293, 162864293, 162874293, 162884293, 162894293, 162904293, 162914293, 162924293, 162934293, 162944293, 162954293, 162964293, 162974293, 162984293, 162994293, 163004293, 163014293, 163024293, 163034293, 163044293, 163054293, 163064293, 163074293, 163084293, 163094293, 163104293, 163114293, 163124293, 163134293, 163144293, 163154293, 163164293, 163174293, 163184293, 163194293, 163204293, 163214293, 163224293, 163234293, 163244293, 163254293, 163264293, 163274293, 163284293, 163294293, 163304293, 163314293, 163324293, 163334293, 163344293, 163354293, 163364293, 163374293, 163384293, 163394293, 163404293, 163414293, 163424293, 163434293, 163444293, 163454293, 163464293, 163474293, 163484293, 163494293, 163504293, 163514293, 163524293, 163534293, 163544293, 163554293, 163564293, 163574293]</msg>
<status status="PASS" starttime="20201112 09:56:10.327" endtime="20201112 09:56:10.330"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.317" endtime="20201112 09:56:10.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:10.346" endtime="20201112 09:56:10.637"></status>
</kw>
<msg timestamp="20201112 09:56:10.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024085528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034140139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:10.343" endtime="20201112 09:56:10.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024085528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034140139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:10.641" endtime="20201112 09:56:10.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:10.649" endtime="20201112 09:56:10.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.336" endtime="20201112 09:56:10.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.333" endtime="20201112 09:56:10.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:10.677" level="INFO">${RESULT} = {'time': [0.024085528, 0.034140139, 0.044141194, 0.05414175, 0.064142681, 0.074143236, 0.084144167, 0.094144889, 0.104145625, 0.114146167, 0.124147097, 0.134147625, 0.144148361, 0.154149306, 0.1641500...</msg>
<status status="PASS" starttime="20201112 09:56:10.653" endtime="20201112 09:56:10.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.682" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:56:10.681" endtime="20201112 09:56:10.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.684" level="INFO">VALUE: 0.024085528</msg>
<status status="PASS" starttime="20201112 09:56:10.683" endtime="20201112 09:56:10.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.678" endtime="20201112 09:56:10.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.690" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:10.689" endtime="20201112 09:56:10.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.693" level="INFO">VALUE: [0.034140139, 0.044141194, 0.05414175, 0.064142681, 0.074143236, 0.084144167, 0.094144889, 0.104145625, 0.114146167, 0.124147097, 0.134147625, 0.144148361, 0.154149306, 0.164150042, 0.174150764, 0.184151292, 0.194152028, 0.204152764, 0.214153722, 0.224154444, 0.234154986, 0.244155708, 0.254156653, 0.264157181, 0.274158111, 0.284158625, 0.294159569, 0.304160306, 0.314161042, 0.324161556, 0.334162486, 0.344163, 0.354163764, 0.364164667, 0.374165403, 0.384166125, 0.394166653, 0.404167389, 0.414168139, 0.424169069, 0.434169778, 0.444170319, 0.454171042, 0.464171986, 0.4741725, 0.484173458, 0.494173986, 0.504174903, 0.514175639, 0.524176375, 0.534176903, 0.544177819, 0.554178347, 0.564179069, 0.574180028, 0.58418075, 0.594181472, 0.604182, 0.614182722, 0.624183472, 0.634184403, 0.644185125, 0.654185653, 0.664186444, 0.674187389, 0.684187875, 0.694188778, 0.704189306, 0.714190236, 0.724190972, 0.734191708, 0.744192306, 0.754193181, 0.764193694, 0.774194431, 0.784195361, 0.794196097, 0.804196819, 0.814197347, 0.824198083, 0.834198806, 0.844199764, 0.854200472, 0.864201014, 0.874201736, 0.884202667, 0.894203194, 0.904204125, 0.914204667, 0.924205625, 0.934206333, 0.944207069, 0.954207597, 0.964208514, 0.974209069, 0.984209778, 0.994210722, 1.004211514, 1.014212181, 1.024212722] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:10.692" endtime="20201112 09:56:10.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.686" endtime="20201112 09:56:10.694"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:10.696" endtime="20201112 09:56:10.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:10.700" endtime="20201112 09:56:10.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.698" endtime="20201112 09:56:10.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.694" endtime="20201112 09:56:10.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.137" endtime="20201112 09:56:10.721"></status>
</kw>
<msg timestamp="20201112 09:56:10.721" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:10.730" endtime="20201112 09:56:12.841"></status>
</kw>
<msg timestamp="20201112 09:56:12.843" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 165154600, 'wakeups': [165164654, 165174654, 165184654, 165194654, 165...</msg>
<status status="PASS" starttime="20201112 09:56:10.728" endtime="20201112 09:56:12.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:12.849" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 165154600, 'wakeups': [165164654, 165174654, 165184654, 165194654, 165...</msg>
<status status="PASS" starttime="20201112 09:56:12.845" endtime="20201112 09:56:12.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:12.851" endtime="20201112 09:56:12.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.725" endtime="20201112 09:56:12.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.723" endtime="20201112 09:56:12.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:12.863" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 8, 'wakeups': [165164654, 165174654, 165184654, 165194654, 165204654, 165214654, 165224654, 165234654, 165244654, 165254654, 165264654, 165274654, 165284654, 1...</msg>
<status status="PASS" starttime="20201112 09:56:12.859" endtime="20201112 09:56:12.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:12.873" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:12.871" endtime="20201112 09:56:12.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:12.878" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:12.875" endtime="20201112 09:56:12.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:12.866" endtime="20201112 09:56:12.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:12.888" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:56:12.886" endtime="20201112 09:56:12.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:12.893" level="INFO">VALUE: 165154600</msg>
<status status="PASS" starttime="20201112 09:56:12.891" endtime="20201112 09:56:12.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:12.881" endtime="20201112 09:56:12.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:12.904" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:12.901" endtime="20201112 09:56:12.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:12.911" level="INFO">VALUE: [165164654, 165174654, 165184654, 165194654, 165204654, 165214654, 165224654, 165234654, 165244654, 165254654, 165264654, 165274654, 165284654, 165294654, 165304654, 165314654, 165324654, 165334654, 165344654, 165354654, 165364654, 165374654, 165384654, 165394654, 165404654, 165414654, 165424654, 165434654, 165444654, 165454654, 165464654, 165474654, 165484654, 165494654, 165504654, 165514654, 165524654, 165534654, 165544654, 165554654, 165564654, 165574654, 165584654, 165594654, 165604654, 165614654, 165624654, 165634654, 165644654, 165654654, 165664654, 165674654, 165684654, 165694654, 165704654, 165714654, 165724654, 165734654, 165744654, 165754654, 165764654, 165774654, 165784654, 165794654, 165804654, 165814654, 165824654, 165834654, 165844654, 165854654, 165864654, 165874654, 165884654, 165894654, 165904654, 165914654, 165924654, 165934654, 165944654, 165954654, 165964654, 165974654, 165984654, 165994654, 166004654, 166014654, 166024654, 166034654, 166044654, 166054654, 166064654, 166074654, 166084654, 166094654, 166104654, 166114654, 166124654, 166134654, 166144654, 166154654]</msg>
<status status="PASS" starttime="20201112 09:56:12.906" endtime="20201112 09:56:12.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:12.896" endtime="20201112 09:56:12.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:12.927" endtime="20201112 09:56:13.227"></status>
</kw>
<msg timestamp="20201112 09:56:13.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0195055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029560792, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:56:12.924" endtime="20201112 09:56:13.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0195055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029560792, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:56:13.231" endtime="20201112 09:56:13.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.239" endtime="20201112 09:56:13.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:12.918" endtime="20201112 09:56:13.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:12.914" endtime="20201112 09:56:13.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:13.266" level="INFO">${RESULT} = {'time': [0.0195055, 0.029560792, 0.039560833, 0.049561389, 0.059562347, 0.069562861, 0.079563792, 0.089564528, 0.099565264, 0.109565792, 0.119566736, 0.129567264, 0.139568014, 0.149568931, 0.15956966...</msg>
<status status="PASS" starttime="20201112 09:56:13.242" endtime="20201112 09:56:13.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.271" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:56:13.270" endtime="20201112 09:56:13.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.273" level="INFO">VALUE: 0.0195055</msg>
<status status="PASS" starttime="20201112 09:56:13.272" endtime="20201112 09:56:13.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.267" endtime="20201112 09:56:13.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.283" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:13.277" endtime="20201112 09:56:13.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.286" level="INFO">VALUE: [0.029560792, 0.039560833, 0.049561389, 0.059562347, 0.069562861, 0.079563792, 0.089564528, 0.099565264, 0.109565792, 0.119566736, 0.129567264, 0.139568014, 0.149568931, 0.159569667, 0.169570403, 0.179570931, 0.189571736, 0.199572403, 0.209573347, 0.219574083, 0.229574681, 0.239575333, 0.249576319, 0.259576833, 0.269577764, 0.279578292, 0.289579222, 0.299579958, 0.309580681, 0.319581222, 0.329582153, 0.339582694, 0.349583431, 0.359584361, 0.369585097, 0.379585819, 0.389586375, 0.399587097, 0.409587847, 0.419588792, 0.4295895, 0.439590028, 0.449590833, 0.459591708, 0.469592236, 0.479593181, 0.489593694, 0.499594611, 0.509595347, 0.519596083, 0.529596625, 0.539597528, 0.549598069, 0.559598819, 0.569599722, 0.579600444, 0.589601181, 0.599601694, 0.609602444, 0.619603167, 0.629604097, 0.639604833, 0.649605347, 0.659606069, 0.669607014, 0.679607542, 0.689608472, 0.699609, 0.709609931, 0.719610653, 0.729611403, 0.739611903, 0.749612861, 0.759613361, 0.769614125, 0.779615028, 0.789615764, 0.7996165, 0.809617028, 0.819617736, 0.829618472, 0.839619403, 0.849620153, 0.859620653, 0.869621389, 0.879622319, 0.889622847, 0.899623778, 0.909624306, 0.919625236, 0.929625972, 0.939626694, 0.949627236, 0.959628167, 0.969628694, 0.979629431, 0.989630347, 0.999631097, 1.009631833, 1.019632347] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:13.285" endtime="20201112 09:56:13.286"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.275" endtime="20201112 09:56:13.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.289" endtime="20201112 09:56:13.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:13.294" endtime="20201112 09:56:13.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.291" endtime="20201112 09:56:13.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.287" endtime="20201112 09:56:13.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.722" endtime="20201112 09:56:13.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.558" endtime="20201112 09:56:13.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.557" endtime="20201112 09:56:13.315"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:56:13.318" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.326" endtime="20201112 09:56:15.438"></status>
</kw>
<msg timestamp="20201112 09:56:15.439" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 167751073, 'wakeups': [167761135, 167771135, 167781135, 167791135, 167...</msg>
<status status="PASS" starttime="20201112 09:56:13.324" endtime="20201112 09:56:15.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.445" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 167751073, 'wakeups': [167761135, 167771135, 167781135, 167791135, 167...</msg>
<status status="PASS" starttime="20201112 09:56:15.442" endtime="20201112 09:56:15.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:15.448" endtime="20201112 09:56:15.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.322" endtime="20201112 09:56:15.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.320" endtime="20201112 09:56:15.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:15.459" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 9, 'wakeups': [167761135, 167771135, 167781135, 167791135, 167801135, 167811135, 167821135, 167831135, 167841135, 167851135, 167861135, 167871135, 167881135, 1...</msg>
<status status="PASS" starttime="20201112 09:56:15.455" endtime="20201112 09:56:15.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.469" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:15.466" endtime="20201112 09:56:15.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.473" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:15.471" endtime="20201112 09:56:15.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.461" endtime="20201112 09:56:15.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.484" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:56:15.482" endtime="20201112 09:56:15.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.488" level="INFO">VALUE: 167751073</msg>
<status status="PASS" starttime="20201112 09:56:15.486" endtime="20201112 09:56:15.489"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.476" endtime="20201112 09:56:15.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.500" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:15.498" endtime="20201112 09:56:15.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.505" level="INFO">VALUE: [167761135, 167771135, 167781135, 167791135, 167801135, 167811135, 167821135, 167831135, 167841135, 167851135, 167861135, 167871135, 167881135, 167891135, 167901135, 167911135, 167921135, 167931135, 167941135, 167951135, 167961135, 167971135, 167981135, 167991135, 168001135, 168011135, 168021135, 168031135, 168041135, 168051135, 168061135, 168071135, 168081135, 168091135, 168101135, 168111135, 168121135, 168131135, 168141135, 168151135, 168161135, 168171135, 168181135, 168191135, 168201135, 168211135, 168221135, 168231135, 168241135, 168251135, 168261135, 168271135, 168281135, 168291135, 168301135, 168311135, 168321135, 168331135, 168341135, 168351135, 168361135, 168371135, 168381135, 168391135, 168401135, 168411135, 168421135, 168431135, 168441135, 168451135, 168461135, 168471135, 168481135, 168491135, 168501135, 168511135, 168521135, 168531135, 168541135, 168551135, 168561135, 168571135, 168581135, 168591135, 168601135, 168611135, 168621135, 168631135, 168641135, 168651135, 168661135, 168671135, 168681135, 168691135, 168701135, 168711135, 168721135, 168731135, 168741135, 168751135]</msg>
<status status="PASS" starttime="20201112 09:56:15.502" endtime="20201112 09:56:15.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.492" endtime="20201112 09:56:15.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:15.522" endtime="20201112 09:56:15.820"></status>
</kw>
<msg timestamp="20201112 09:56:15.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022370264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03243375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:56:15.518" endtime="20201112 09:56:15.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022370264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03243375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:56:15.824" endtime="20201112 09:56:15.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:15.832" endtime="20201112 09:56:15.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.512" endtime="20201112 09:56:15.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.508" endtime="20201112 09:56:15.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:15.858" level="INFO">${RESULT} = {'time': [0.022370264, 0.03243375, 0.042434514, 0.052435, 0.062436014, 0.072436694, 0.082437194, 0.092437931, 0.102438653, 0.112439389, 0.122440347, 0.132441083, 0.142441889, 0.152442333, 0.162443056,...</msg>
<status status="PASS" starttime="20201112 09:56:15.835" endtime="20201112 09:56:15.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.863" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:56:15.862" endtime="20201112 09:56:15.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.865" level="INFO">VALUE: 0.022370264</msg>
<status status="PASS" starttime="20201112 09:56:15.864" endtime="20201112 09:56:15.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.859" endtime="20201112 09:56:15.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.871" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:15.869" endtime="20201112 09:56:15.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.873" level="INFO">VALUE: [0.03243375, 0.042434514, 0.052435, 0.062436014, 0.072436694, 0.082437194, 0.092437931, 0.102438653, 0.112439389, 0.122440347, 0.132441083, 0.142441889, 0.152442333, 0.162443056, 0.172444014, 0.18244475, 0.192445264, 0.202446042, 0.212446722, 0.222447681, 0.232448417, 0.242448944, 0.252449667, 0.262450389, 0.272451361, 0.282451861, 0.292452861, 0.302453347, 0.312454069, 0.322454806, 0.332455764, 0.342456486, 0.352457236, 0.362457736, 0.372458472, 0.382459458, 0.392460167, 0.402460681, 0.412461472, 0.422462139, 0.432463125, 0.442463847, 0.452464361, 0.462465083, 0.472465847, 0.482466833, 0.492467278, 0.502468208, 0.512468722, 0.522469458, 0.532470222, 0.542471125, 0.552471861, 0.562472583, 0.572473097, 0.582473819, 0.592474778, 0.6024755, 0.612476, 0.622476722, 0.632477528, 0.642478417, 0.652479139, 0.662479653, 0.672480375, 0.682481111, 0.692482056, 0.702482569, 0.712483528, 0.722484014, 0.732484792, 0.742485472, 0.752486431, 0.762487167, 0.772487889, 0.782488417, 0.792489125, 0.802490069, 0.812490806, 0.822491319, 0.832492042, 0.842492778, 0.852493778, 0.862494444, 0.872495028, 0.882495694, 0.892496472, 0.902497361, 0.912497889, 0.922498819, 0.932499347, 0.942500083, 0.952500792, 0.962501736, 0.972502556, 0.982503194, 0.992503722, 1.002504444, 1.012505389, 1.022506125] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:15.872" endtime="20201112 09:56:15.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.867" endtime="20201112 09:56:15.874"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:15.877" endtime="20201112 09:56:15.878"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:15.880" endtime="20201112 09:56:15.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.879" endtime="20201112 09:56:15.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.875" endtime="20201112 09:56:15.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.318" endtime="20201112 09:56:15.901"></status>
</kw>
<msg timestamp="20201112 09:56:15.901" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:15.911" endtime="20201112 09:56:18.022"></status>
</kw>
<msg timestamp="20201112 09:56:18.023" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 170335932, 'wakeups': [170345995, 170355994, 170365994, 170375994, 170...</msg>
<status status="PASS" starttime="20201112 09:56:15.908" endtime="20201112 09:56:18.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.030" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 170335932, 'wakeups': [170345995, 170355994, 170365994, 170375994, 170...</msg>
<status status="PASS" starttime="20201112 09:56:18.026" endtime="20201112 09:56:18.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:18.032" endtime="20201112 09:56:18.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.906" endtime="20201112 09:56:18.037"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.903" endtime="20201112 09:56:18.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:18.044" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 9, 'wakeups': [170345995, 170355994, 170365994, 170375994, 170385994, 170395994, 170405994, 170415994, 170425994, 170435994, 170445994, 170455994, 170465994, 1...</msg>
<status status="PASS" starttime="20201112 09:56:18.040" endtime="20201112 09:56:18.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.053" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:18.050" endtime="20201112 09:56:18.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.057" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:18.055" endtime="20201112 09:56:18.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.046" endtime="20201112 09:56:18.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.068" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:56:18.066" endtime="20201112 09:56:18.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.072" level="INFO">VALUE: 170335932</msg>
<status status="PASS" starttime="20201112 09:56:18.070" endtime="20201112 09:56:18.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.060" endtime="20201112 09:56:18.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.083" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:18.081" endtime="20201112 09:56:18.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.088" level="INFO">VALUE: [170345995, 170355994, 170365994, 170375994, 170385994, 170395994, 170405994, 170415994, 170425994, 170435994, 170445994, 170455994, 170465994, 170475994, 170485994, 170495994, 170505994, 170515994, 170525994, 170535994, 170545994, 170555994, 170565994, 170575994, 170585994, 170595994, 170605994, 170615994, 170625994, 170635994, 170645994, 170655994, 170665994, 170675994, 170685994, 170695994, 170705994, 170715994, 170725994, 170735994, 170745994, 170755994, 170765994, 170775994, 170785994, 170795994, 170805994, 170815994, 170825994, 170835994, 170845994, 170855994, 170865994, 170875994, 170885994, 170895994, 170905994, 170915994, 170925994, 170935994, 170945994, 170955994, 170965994, 170975994, 170985994, 170995994, 171005994, 171015994, 171025994, 171035994, 171045994, 171055994, 171065994, 171075994, 171085994, 171095994, 171105994, 171115994, 171125994, 171135994, 171145994, 171155994, 171165994, 171175994, 171185994, 171195994, 171205994, 171215994, 171225994, 171235994, 171245994, 171255994, 171265994, 171275994, 171285994, 171295994, 171305994, 171315994, 171325994, 171335994]</msg>
<status status="PASS" starttime="20201112 09:56:18.086" endtime="20201112 09:56:18.089"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.076" endtime="20201112 09:56:18.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:18.106" endtime="20201112 09:56:18.399"></status>
</kw>
<msg timestamp="20201112 09:56:18.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020548819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030612958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:18.102" endtime="20201112 09:56:18.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020548819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030612958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:18.403" endtime="20201112 09:56:18.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:18.411" endtime="20201112 09:56:18.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.096" endtime="20201112 09:56:18.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.092" endtime="20201112 09:56:18.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:18.439" level="INFO">${RESULT} = {'time': [0.020548819, 0.030612958, 0.040612722, 0.050613222, 0.060614181, 0.070614708, 0.080615653, 0.090616167, 0.100617139, 0.110617639, 0.120618583, 0.130619097, 0.140620056, 0.150620583, 0.160621...</msg>
<status status="PASS" starttime="20201112 09:56:18.415" endtime="20201112 09:56:18.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.444" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:56:18.443" endtime="20201112 09:56:18.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.446" level="INFO">VALUE: 0.020548819</msg>
<status status="PASS" starttime="20201112 09:56:18.445" endtime="20201112 09:56:18.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.440" endtime="20201112 09:56:18.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.452" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:18.451" endtime="20201112 09:56:18.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.454" level="INFO">VALUE: [0.030612958, 0.040612722, 0.050613222, 0.060614181, 0.070614708, 0.080615653, 0.090616167, 0.100617139, 0.110617639, 0.120618583, 0.130619097, 0.140620056, 0.150620583, 0.160621528, 0.170622056, 0.180623, 0.190623514, 0.200624486, 0.210624986, 0.220625944, 0.230626458, 0.240627417, 0.250627931, 0.260628889, 0.270629403, 0.280630361, 0.290630889, 0.300631833, 0.310632347, 0.320633306, 0.330633819, 0.340634778, 0.350635292, 0.360636264, 0.370636778, 0.380637722, 0.390638236, 0.40063925, 0.410639708, 0.420640653, 0.430641181, 0.440642111, 0.450642639, 0.460643569, 0.470644111, 0.480645042, 0.490645542, 0.500646486, 0.510647, 0.520647958, 0.530648458, 0.540649417, 0.550649917, 0.560650875, 0.570651389, 0.580652347, 0.590652833, 0.600653819, 0.610654319, 0.620655264, 0.630655778, 0.640656778, 0.650657264, 0.660658181, 0.670658681, 0.680659653, 0.690660153, 0.700661111, 0.710661611, 0.720662556, 0.730663069, 0.740664014, 0.750664528, 0.760665514, 0.770666, 0.780667028, 0.790667444, 0.800668417, 0.810668931, 0.820669861, 0.830670375, 0.840671319, 0.850671833, 0.860672833, 0.870673306, 0.88067425, 0.890674778, 0.900675722, 0.910676222, 0.920677167, 0.930677681, 0.940678653, 0.950679153, 0.960680097, 0.970680625, 0.980681556, 0.990682069, 1.000683028, 1.010683528, 1.020684528] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:18.453" endtime="20201112 09:56:18.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.448" endtime="20201112 09:56:18.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:18.457" endtime="20201112 09:56:18.459"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:18.461" endtime="20201112 09:56:18.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.459" endtime="20201112 09:56:18.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.455" endtime="20201112 09:56:18.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.902" endtime="20201112 09:56:18.481"></status>
</kw>
<msg timestamp="20201112 09:56:18.482" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:18.490" endtime="20201112 09:56:20.602"></status>
</kw>
<msg timestamp="20201112 09:56:20.604" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 172915410, 'wakeups': [172925472, 172935472, 172945472, 172955472, 172...</msg>
<status status="PASS" starttime="20201112 09:56:18.488" endtime="20201112 09:56:20.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:20.611" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 172915410, 'wakeups': [172925472, 172935472, 172945472, 172955472, 172...</msg>
<status status="PASS" starttime="20201112 09:56:20.607" endtime="20201112 09:56:20.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:20.613" endtime="20201112 09:56:20.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.486" endtime="20201112 09:56:20.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.484" endtime="20201112 09:56:20.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:20.625" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 9, 'wakeups': [172925472, 172935472, 172945472, 172955472, 172965472, 172975472, 172985472, 172995472, 173005472, 173015472, 173025472, 173035472, 173045472, 1...</msg>
<status status="PASS" starttime="20201112 09:56:20.621" endtime="20201112 09:56:20.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:20.634" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:20.632" endtime="20201112 09:56:20.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:20.638" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:20.636" endtime="20201112 09:56:20.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:20.627" endtime="20201112 09:56:20.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:20.649" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:56:20.647" endtime="20201112 09:56:20.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:20.656" level="INFO">VALUE: 172915410</msg>
<status status="PASS" starttime="20201112 09:56:20.652" endtime="20201112 09:56:20.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:20.642" endtime="20201112 09:56:20.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:20.663" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:20.662" endtime="20201112 09:56:20.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:20.665" level="INFO">VALUE: [172925472, 172935472, 172945472, 172955472, 172965472, 172975472, 172985472, 172995472, 173005472, 173015472, 173025472, 173035472, 173045472, 173055472, 173065472, 173075472, 173085472, 173095472, 173105472, 173115472, 173125472, 173135472, 173145472, 173155472, 173165472, 173175472, 173185472, 173195472, 173205472, 173215472, 173225472, 173235472, 173245472, 173255472, 173265472, 173275472, 173285472, 173295472, 173305472, 173315472, 173325472, 173335472, 173345472, 173355472, 173365472, 173375472, 173385472, 173395472, 173405472, 173415472, 173425472, 173435472, 173445472, 173455472, 173465472, 173475472, 173485472, 173495472, 173505472, 173515472, 173525472, 173535472, 173545472, 173555472, 173565472, 173575472, 173585472, 173595472, 173605472, 173615472, 173625472, 173635472, 173645472, 173655472, 173665472, 173675472, 173685472, 173695472, 173705472, 173715472, 173725472, 173735472, 173745472, 173755472, 173765472, 173775472, 173785472, 173795472, 173805472, 173815472, 173825472, 173835472, 173845472, 173855472, 173865472, 173875472, 173885472, 173895472, 173905472, 173915472]</msg>
<status status="PASS" starttime="20201112 09:56:20.664" endtime="20201112 09:56:20.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:20.659" endtime="20201112 09:56:20.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:20.673" endtime="20201112 09:56:20.965"></status>
</kw>
<msg timestamp="20201112 09:56:20.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019663042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029726861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:20.671" endtime="20201112 09:56:20.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:20.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019663042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029726861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:20.969" endtime="20201112 09:56:20.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:20.977" endtime="20201112 09:56:20.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:20.669" endtime="20201112 09:56:20.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:20.667" endtime="20201112 09:56:20.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:21.004" level="INFO">${RESULT} = {'time': [0.019663042, 0.029726861, 0.039727639, 0.049728125, 0.059729069, 0.069729611, 0.079730542, 0.089731069, 0.099732028, 0.109732597, 0.119733486, 0.129734014, 0.139734972, 0.149735486, 0.159736...</msg>
<status status="PASS" starttime="20201112 09:56:20.981" endtime="20201112 09:56:21.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.009" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:56:21.008" endtime="20201112 09:56:21.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.011" level="INFO">VALUE: 0.019663042</msg>
<status status="PASS" starttime="20201112 09:56:21.010" endtime="20201112 09:56:21.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.005" endtime="20201112 09:56:21.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.017" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:21.016" endtime="20201112 09:56:21.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.020" level="INFO">VALUE: [0.029726861, 0.039727639, 0.049728125, 0.059729069, 0.069729611, 0.079730542, 0.089731069, 0.099732028, 0.109732597, 0.119733486, 0.129734014, 0.139734972, 0.149735486, 0.159736431, 0.169736944, 0.179737889, 0.189738417, 0.199739375, 0.209739889, 0.219740833, 0.229741361, 0.239742306, 0.249742833, 0.259743778, 0.269744292, 0.27974525, 0.289745764, 0.299746736, 0.30974725, 0.319748236, 0.329748722, 0.339749667, 0.349750181, 0.359751153, 0.369751667, 0.379752611, 0.389753125, 0.399754097, 0.409754597, 0.419755583, 0.429756056, 0.439757014, 0.449757528, 0.459758458, 0.469758972, 0.479759931, 0.489760431, 0.499761375, 0.509761889, 0.519762875, 0.529763389, 0.539764333, 0.549764806, 0.559765764, 0.569766264, 0.579767208, 0.589767722, 0.599768681, 0.609769181, 0.619770181, 0.629770639, 0.639771653, 0.649772153, 0.659773056, 0.669773556, 0.679774514, 0.689775069, 0.699775972, 0.709776486, 0.719777431, 0.729777944, 0.739778889, 0.749779417, 0.759780347, 0.769780861, 0.779781806, 0.789782333, 0.799783264, 0.809783778, 0.819784778, 0.829785264, 0.839786208, 0.849786708, 0.859787653, 0.869788181, 0.879789111, 0.889789639, 0.899790569, 0.909791083, 0.919792056, 0.929792569, 0.9397935, 0.949794014, 0.959794972, 0.969795472, 0.979796431, 0.989796931, 0.999797889, 1.009798389, 1.019799347] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:21.019" endtime="20201112 09:56:21.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.013" endtime="20201112 09:56:21.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:21.023" endtime="20201112 09:56:21.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:21.027" endtime="20201112 09:56:21.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.025" endtime="20201112 09:56:21.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.021" endtime="20201112 09:56:21.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.482" endtime="20201112 09:56:21.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.316" endtime="20201112 09:56:21.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.315" endtime="20201112 09:56:21.048"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:56:21.050" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:21.059" endtime="20201112 09:56:23.171"></status>
</kw>
<msg timestamp="20201112 09:56:23.172" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 175484116, 'wakeups': [175494187, 175504188, 175514188, 175524188, 1...</msg>
<status status="PASS" starttime="20201112 09:56:21.057" endtime="20201112 09:56:23.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.179" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 175484116, 'wakeups': [175494187, 175504188, 175514188, 175524188, 1...</msg>
<status status="PASS" starttime="20201112 09:56:23.175" endtime="20201112 09:56:23.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:23.181" endtime="20201112 09:56:23.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.055" endtime="20201112 09:56:23.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.053" endtime="20201112 09:56:23.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:23.193" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 10, 'wakeups': [175494187, 175504188, 175514188, 175524188, 175534188, 175544188, 175554188, 175564188, 175574188, 175584188, 175594188, 175604188, 175614188, ...</msg>
<status status="PASS" starttime="20201112 09:56:23.189" endtime="20201112 09:56:23.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.203" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:23.200" endtime="20201112 09:56:23.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.207" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:23.205" endtime="20201112 09:56:23.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.195" endtime="20201112 09:56:23.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.217" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:56:23.216" endtime="20201112 09:56:23.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.219" level="INFO">VALUE: 175484116</msg>
<status status="PASS" starttime="20201112 09:56:23.218" endtime="20201112 09:56:23.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.210" endtime="20201112 09:56:23.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.224" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:23.223" endtime="20201112 09:56:23.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.227" level="INFO">VALUE: [175494187, 175504188, 175514188, 175524188, 175534188, 175544188, 175554188, 175564188, 175574188, 175584188, 175594188, 175604188, 175614188, 175624188, 175634188, 175644188, 175654188, 175664188, 175674188, 175684188, 175694188, 175704188, 175714188, 175724188, 175734188, 175744188, 175754188, 175764188, 175774188, 175784188, 175794188, 175804188, 175814188, 175824188, 175834188, 175844188, 175854188, 175864188, 175874188, 175884188, 175894188, 175904188, 175914188, 175924188, 175934188, 175944188, 175954188, 175964188, 175974188, 175984188, 175994188, 176004188, 176014188, 176024188, 176034188, 176044188, 176054188, 176064188, 176074188, 176084188, 176094188, 176104188, 176114188, 176124188, 176134188, 176144188, 176154188, 176164188, 176174188, 176184188, 176194188, 176204188, 176214188, 176224188, 176234188, 176244188, 176254188, 176264188, 176274188, 176284188, 176294188, 176304188, 176314188, 176324188, 176334188, 176344188, 176354188, 176364188, 176374188, 176384188, 176394188, 176404188, 176414188, 176424188, 176434188, 176444188, 176454188, 176464188, 176474188, 176484188]</msg>
<status status="PASS" starttime="20201112 09:56:23.226" endtime="20201112 09:56:23.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.221" endtime="20201112 09:56:23.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:23.236" endtime="20201112 09:56:23.528"></status>
</kw>
<msg timestamp="20201112 09:56:23.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022441083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032513625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:23.233" endtime="20201112 09:56:23.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022441083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032513625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:23.532" endtime="20201112 09:56:23.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:23.540" endtime="20201112 09:56:23.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.230" endtime="20201112 09:56:23.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.228" endtime="20201112 09:56:23.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:23.567" level="INFO">${RESULT} = {'time': [0.022441083, 0.032513625, 0.042515, 0.052515764, 0.062516417, 0.072517222, 0.082517889, 0.092518639, 0.102519347, 0.112520167, 0.122520833, 0.132521639, 0.142522361, 0.152523028, 0.162523833...</msg>
<status status="PASS" starttime="20201112 09:56:23.543" endtime="20201112 09:56:23.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.572" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:56:23.571" endtime="20201112 09:56:23.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.574" level="INFO">VALUE: 0.022441083</msg>
<status status="PASS" starttime="20201112 09:56:23.573" endtime="20201112 09:56:23.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.568" endtime="20201112 09:56:23.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.580" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:23.578" endtime="20201112 09:56:23.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.582" level="INFO">VALUE: [0.032513625, 0.042515, 0.052515764, 0.062516417, 0.072517222, 0.082517889, 0.092518639, 0.102519347, 0.112520167, 0.122520833, 0.132521639, 0.142522361, 0.152523028, 0.162523833, 0.172524514, 0.182525236, 0.192525972, 0.202526792, 0.212527458, 0.22252825, 0.232529042, 0.242529667, 0.252530514, 0.262531167, 0.272531847, 0.282532597, 0.292533403, 0.302534111, 0.312534903, 0.322535597, 0.332536264, 0.342537097, 0.352537736, 0.362538458, 0.372539222, 0.382540028, 0.392540681, 0.4025415, 0.412542222, 0.422542875, 0.432543708, 0.442544389, 0.452545083, 0.462545819, 0.472546653, 0.482547292, 0.492548111, 0.502548819, 0.512549486, 0.522550292, 0.532550931, 0.542551667, 0.552552389, 0.562553236, 0.572553875, 0.582554667, 0.592555431, 0.602556042, 0.612556861, 0.622557514, 0.632558222, 0.642558958, 0.652559764, 0.662560417, 0.672561236, 0.682561944, 0.692562625, 0.702563403, 0.712564069, 0.722564806, 0.732565542, 0.742566319, 0.752567, 0.762567792, 0.772568528, 0.782569167, 0.792569972, 0.802570653, 0.812571375, 0.822572111, 0.832572903, 0.842573569, 0.852574361, 0.862575083, 0.872575764, 0.882576556, 0.892577208, 0.902577986, 0.912578681, 0.922579458, 0.932580139, 0.942580931, 0.952581681, 0.962582319, 0.972583139, 0.982583778, 0.992584528, 1.002585236, 1.012586042, 1.022586694] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:23.581" endtime="20201112 09:56:23.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.575" endtime="20201112 09:56:23.583"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:23.586" endtime="20201112 09:56:23.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:23.589" endtime="20201112 09:56:23.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.588" endtime="20201112 09:56:23.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.584" endtime="20201112 09:56:23.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.051" endtime="20201112 09:56:23.610"></status>
</kw>
<msg timestamp="20201112 09:56:23.610" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:23.619" endtime="20201112 09:56:25.732"></status>
</kw>
<msg timestamp="20201112 09:56:25.733" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 178044717, 'wakeups': [178054788, 178064789, 178074789, 178084789, 1...</msg>
<status status="PASS" starttime="20201112 09:56:23.617" endtime="20201112 09:56:25.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:25.740" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 178044717, 'wakeups': [178054788, 178064789, 178074789, 178084789, 1...</msg>
<status status="PASS" starttime="20201112 09:56:25.736" endtime="20201112 09:56:25.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:25.742" endtime="20201112 09:56:25.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.614" endtime="20201112 09:56:25.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.612" endtime="20201112 09:56:25.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:25.754" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 10, 'wakeups': [178054788, 178064789, 178074789, 178084789, 178094789, 178104789, 178114789, 178124789, 178134789, 178144789, 178154789, 178164789, 178174789, ...</msg>
<status status="PASS" starttime="20201112 09:56:25.750" endtime="20201112 09:56:25.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:25.763" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:25.761" endtime="20201112 09:56:25.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:25.767" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:25.765" endtime="20201112 09:56:25.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:25.756" endtime="20201112 09:56:25.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:25.778" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:56:25.776" endtime="20201112 09:56:25.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:25.783" level="INFO">VALUE: 178044717</msg>
<status status="PASS" starttime="20201112 09:56:25.781" endtime="20201112 09:56:25.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:25.771" endtime="20201112 09:56:25.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:25.794" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:25.791" endtime="20201112 09:56:25.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:25.799" level="INFO">VALUE: [178054788, 178064789, 178074789, 178084789, 178094789, 178104789, 178114789, 178124789, 178134789, 178144789, 178154789, 178164789, 178174789, 178184789, 178194789, 178204789, 178214789, 178224789, 178234789, 178244789, 178254789, 178264789, 178274789, 178284789, 178294789, 178304789, 178314789, 178324789, 178334789, 178344789, 178354789, 178364789, 178374789, 178384789, 178394789, 178404789, 178414789, 178424789, 178434789, 178444789, 178454789, 178464789, 178474789, 178484789, 178494789, 178504789, 178514789, 178524789, 178534789, 178544789, 178554789, 178564789, 178574789, 178584789, 178594789, 178604789, 178614789, 178624789, 178634789, 178644789, 178654789, 178664789, 178674789, 178684789, 178694789, 178704789, 178714789, 178724789, 178734789, 178744789, 178754789, 178764789, 178774789, 178784789, 178794789, 178804789, 178814789, 178824789, 178834789, 178844789, 178854789, 178864789, 178874789, 178884789, 178894789, 178904789, 178914789, 178924789, 178934789, 178944789, 178954789, 178964789, 178974789, 178984789, 178994789, 179004789, 179014789, 179024789, 179034789, 179044789]</msg>
<status status="PASS" starttime="20201112 09:56:25.797" endtime="20201112 09:56:25.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:25.786" endtime="20201112 09:56:25.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:25.816" endtime="20201112 09:56:26.118"></status>
</kw>
<msg timestamp="20201112 09:56:26.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02062325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030695361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:56:25.812" endtime="20201112 09:56:26.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02062325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030695361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:56:26.122" endtime="20201112 09:56:26.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.129" endtime="20201112 09:56:26.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:25.806" endtime="20201112 09:56:26.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:25.803" endtime="20201112 09:56:26.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:26.157" level="INFO">${RESULT} = {'time': [0.02062325, 0.030695361, 0.040696806, 0.050697569, 0.060698236, 0.070699042, 0.080699694, 0.090700444, 0.100701153, 0.110701972, 0.120702625, 0.130703444, 0.140704167, 0.150704833, 0.1607056...</msg>
<status status="PASS" starttime="20201112 09:56:26.133" endtime="20201112 09:56:26.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.161" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:56:26.160" endtime="20201112 09:56:26.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.163" level="INFO">VALUE: 0.02062325</msg>
<status status="PASS" starttime="20201112 09:56:26.162" endtime="20201112 09:56:26.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.158" endtime="20201112 09:56:26.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.169" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:26.168" endtime="20201112 09:56:26.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.171" level="INFO">VALUE: [0.030695361, 0.040696806, 0.050697569, 0.060698236, 0.070699042, 0.080699694, 0.090700444, 0.100701153, 0.110701972, 0.120702625, 0.130703444, 0.140704167, 0.150704833, 0.160705639, 0.170706306, 0.180707042, 0.190707778, 0.200708583, 0.21070925, 0.220710069, 0.230710792, 0.240711444, 0.250712264, 0.260712917, 0.270713653, 0.280714389, 0.290715222, 0.300715861, 0.310716681, 0.320717403, 0.330718111, 0.340718903, 0.350719542, 0.360720278, 0.370721014, 0.380721819, 0.3907225, 0.400723333, 0.410724028, 0.420724681, 0.430725486, 0.440726139, 0.450726917, 0.460727597, 0.470728403, 0.480729069, 0.490729861, 0.500730611, 0.510731264, 0.520732056, 0.530732722, 0.540733431, 0.550734167, 0.560735028, 0.570735639, 0.580736431, 0.590737153, 0.600737806, 0.610738667, 0.620739264, 0.63074, 0.640740736, 0.650741556, 0.660742181, 0.670743, 0.680743736, 0.690744375, 0.700745181, 0.710745847, 0.720746569, 0.730747306, 0.740748125, 0.750748764, 0.760749583, 0.770750292, 0.780750944, 0.790751764, 0.800752403, 0.810753139, 0.820753875, 0.830754681, 0.840755403, 0.850756139, 0.860756875, 0.870757542, 0.880758333, 0.890759056, 0.90075975, 0.910760444, 0.92076125, 0.930761917, 0.940762736, 0.950763444, 0.960764111, 0.970764903, 0.980765556, 0.990766306, 1.000767014, 1.010767833, 1.0207685] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:26.170" endtime="20201112 09:56:26.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.165" endtime="20201112 09:56:26.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.175" endtime="20201112 09:56:26.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:26.179" endtime="20201112 09:56:26.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.177" endtime="20201112 09:56:26.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.173" endtime="20201112 09:56:26.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.611" endtime="20201112 09:56:26.199"></status>
</kw>
<msg timestamp="20201112 09:56:26.200" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.208" endtime="20201112 09:56:28.323"></status>
</kw>
<msg timestamp="20201112 09:56:28.325" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 180633069, 'wakeups': [180643140, 180653141, 180663141, 180673141, 1...</msg>
<status status="PASS" starttime="20201112 09:56:26.206" endtime="20201112 09:56:28.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:28.331" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 180633069, 'wakeups': [180643140, 180653141, 180663141, 180673141, 1...</msg>
<status status="PASS" starttime="20201112 09:56:28.327" endtime="20201112 09:56:28.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:28.333" endtime="20201112 09:56:28.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.204" endtime="20201112 09:56:28.338"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.202" endtime="20201112 09:56:28.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:28.345" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 10, 'wakeups': [180643140, 180653141, 180663141, 180673141, 180683141, 180693141, 180703141, 180713141, 180723141, 180733141, 180743141, 180753141, 180763141, ...</msg>
<status status="PASS" starttime="20201112 09:56:28.341" endtime="20201112 09:56:28.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:28.354" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:28.352" endtime="20201112 09:56:28.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:28.359" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:28.356" endtime="20201112 09:56:28.359"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.347" endtime="20201112 09:56:28.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:28.377" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:56:28.374" endtime="20201112 09:56:28.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:28.387" level="INFO">VALUE: 180633069</msg>
<status status="PASS" starttime="20201112 09:56:28.381" endtime="20201112 09:56:28.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.365" endtime="20201112 09:56:28.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:28.399" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:28.397" endtime="20201112 09:56:28.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:28.404" level="INFO">VALUE: [180643140, 180653141, 180663141, 180673141, 180683141, 180693141, 180703141, 180713141, 180723141, 180733141, 180743141, 180753141, 180763141, 180773141, 180783141, 180793141, 180803141, 180813141, 180823141, 180833141, 180843141, 180853141, 180863141, 180873141, 180883141, 180893141, 180903141, 180913141, 180923141, 180933141, 180943141, 180953141, 180963141, 180973141, 180983141, 180993141, 181003141, 181013141, 181023141, 181033141, 181043141, 181053141, 181063141, 181073141, 181083141, 181093141, 181103141, 181113141, 181123141, 181133141, 181143141, 181153141, 181163141, 181173141, 181183141, 181193141, 181203141, 181213141, 181223141, 181233141, 181243141, 181253141, 181263141, 181273141, 181283141, 181293141, 181303141, 181313141, 181323141, 181333141, 181343141, 181353141, 181363141, 181373141, 181383141, 181393141, 181403141, 181413141, 181423141, 181433141, 181443141, 181453141, 181463141, 181473141, 181483141, 181493141, 181503141, 181513141, 181523141, 181533141, 181543141, 181553141, 181563141, 181573141, 181583141, 181593141, 181603141, 181613141, 181623141, 181633141]</msg>
<status status="PASS" starttime="20201112 09:56:28.401" endtime="20201112 09:56:28.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.392" endtime="20201112 09:56:28.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:28.418" endtime="20201112 09:56:28.708"></status>
</kw>
<msg timestamp="20201112 09:56:28.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019517806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029589958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:28.417" endtime="20201112 09:56:28.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:28.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019517806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029589958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:28.712" endtime="20201112 09:56:28.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:28.720" endtime="20201112 09:56:28.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.410" endtime="20201112 09:56:28.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.407" endtime="20201112 09:56:28.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:28.746" level="INFO">${RESULT} = {'time': [0.019517806, 0.029589958, 0.039591403, 0.049592153, 0.059592792, 0.069593611, 0.079594264, 0.089595028, 0.099595736, 0.109596542, 0.119597208, 0.129598014, 0.13959875, 0.149599431, 0.1596002...</msg>
<status status="PASS" starttime="20201112 09:56:28.723" endtime="20201112 09:56:28.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:28.750" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:56:28.749" endtime="20201112 09:56:28.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:28.752" level="INFO">VALUE: 0.019517806</msg>
<status status="PASS" starttime="20201112 09:56:28.751" endtime="20201112 09:56:28.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.747" endtime="20201112 09:56:28.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:28.758" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:28.757" endtime="20201112 09:56:28.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:28.761" level="INFO">VALUE: [0.029589958, 0.039591403, 0.049592153, 0.059592792, 0.069593611, 0.079594264, 0.089595028, 0.099595736, 0.109596542, 0.119597208, 0.129598014, 0.13959875, 0.149599431, 0.159600208, 0.169600889, 0.179601611, 0.189602361, 0.199603181, 0.209603819, 0.219604639, 0.229605417, 0.239606028, 0.249606861, 0.259607486, 0.269608222, 0.279608958, 0.289609778, 0.299610431, 0.309611236, 0.319611972, 0.329612653, 0.339613444, 0.349614125, 0.359614847, 0.369615583, 0.379616403, 0.389617056, 0.399617861, 0.409618597, 0.419619264, 0.429620069, 0.439620736, 0.449621458, 0.459622194, 0.469623014, 0.479623667, 0.489624458, 0.499625181, 0.509625875, 0.519626667, 0.529627319, 0.539628028, 0.549628806, 0.559629597, 0.569630222, 0.579631014, 0.58963175, 0.599632403, 0.609633208, 0.619633861, 0.629634611, 0.639635319, 0.649636125, 0.659636778, 0.669637583, 0.679638306, 0.689638972, 0.699639861, 0.709640431, 0.719641153, 0.729641903, 0.739642694, 0.749643431, 0.759644167, 0.769644889, 0.779645542, 0.789646347, 0.799647, 0.80964775, 0.819648458, 0.829649264, 0.839649917, 0.84965075, 0.859651444, 0.869652125, 0.879652931, 0.889653569, 0.899654292, 0.909655056, 0.919655833, 0.929656486, 0.939657292, 0.949658042, 0.959658681, 0.9696595, 0.979660139, 0.989660875, 0.999661611, 1.009662431, 1.019663056] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:28.760" endtime="20201112 09:56:28.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.754" endtime="20201112 09:56:28.761"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:28.764" endtime="20201112 09:56:28.765"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:28.767" endtime="20201112 09:56:28.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.766" endtime="20201112 09:56:28.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.762" endtime="20201112 09:56:28.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.200" endtime="20201112 09:56:28.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.049" endtime="20201112 09:56:28.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.048" endtime="20201112 09:56:28.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.426" endtime="20201112 09:56:28.788"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 09:55:11.353" endtime="20201112 09:56:28.789" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:55:09.892" endtime="20201112 09:56:28.792"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.10-devel-1583-gbfb8f-HEAD</item>
</metadata>
<status status="PASS" starttime="20201112 09:53:26.441" endtime="20201112 09:56:28.808"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
